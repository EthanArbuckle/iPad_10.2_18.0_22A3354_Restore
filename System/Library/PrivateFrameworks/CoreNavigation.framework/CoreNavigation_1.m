void sub_18D0A29AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::NrBiases *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  char v8;
  char v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  v5 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 24) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::NrBiases *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_BYTE *)a2 + 88);
  *((_DWORD *)v3 + 24) |= 2u;
  *((_BYTE *)v3 + 88) = v8;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_27;
  }
LABEL_26:
  v9 = *((_BYTE *)a2 + 89);
  *((_DWORD *)v3 + 24) |= 4u;
  *((_BYTE *)v3 + 89) = v9;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_28;
  }
LABEL_27:
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 24) |= 8u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_29:
    result = *((double *)a2 + 4);
    *((_DWORD *)v3 + 24) |= 0x20u;
    *((double *)v3 + 4) = result;
    v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_28:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 24) |= 0x10u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x20) != 0)
    goto LABEL_29;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_30:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 24) |= 0x40u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 24) |= 0x80u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 24);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) != 0)
  {
    result = *((double *)a2 + 7);
    *((_DWORD *)v3 + 24) |= 0x100u;
    *((double *)v3 + 7) = result;
    v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  result = *((double *)a2 + 8);
  *((_DWORD *)v3 + 24) |= 0x200u;
  *((double *)v3 + 8) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      return result;
    goto LABEL_18;
  }
LABEL_34:
  result = *((double *)a2 + 9);
  *((_DWORD *)v3 + 24) |= 0x400u;
  *((double *)v3 + 9) = result;
  if ((*((_DWORD *)a2 + 24) & 0x800) == 0)
    return result;
LABEL_18:
  result = *((double *)a2 + 10);
  *((_DWORD *)v3 + 24) |= 0x800u;
  *((double *)v3 + 10) = result;
  return result;
}

void sub_18D0A2C24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v30;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v43);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)a2 + 8) + 8 * v4);
      v6 = *((_DWORD *)this + 19);
      v7 = *((int *)this + 18);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 64));
          v6 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E25BFCC8;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_DWORD *)(v9 + 40) = 0;
        v10 = *((_QWORD *)this + 8);
        v11 = *((int *)this + 18);
        *((_DWORD *)this + 18) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 8);
        *((_DWORD *)this + 18) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 18));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)a2 + 11) + 8 * v12);
      v14 = *((_DWORD *)this + 25);
      v15 = *((int *)this + 24);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 88));
          v14 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)v17 = &off_1E25BFCC8;
        *(_OWORD *)(v17 + 8) = 0u;
        *(_OWORD *)(v17 + 24) = 0u;
        *(_DWORD *)(v17 + 40) = 0;
        v18 = *((_QWORD *)this + 11);
        v19 = *((int *)this + 24);
        *((_DWORD *)this + 24) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 11);
        *((_DWORD *)this + 24) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 24));
  }
  v20 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    v21 = 0;
    do
    {
      v22 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)a2 + 14) + 8 * v21);
      v23 = *((_DWORD *)this + 31);
      v24 = *((int *)this + 30);
      if ((int)v24 >= v23)
      {
        if (v23 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 112));
          v23 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v23 + 1;
        v26 = operator new();
        *(_QWORD *)v26 = &off_1E25BFCC8;
        *(_OWORD *)(v26 + 8) = 0u;
        *(_OWORD *)(v26 + 24) = 0u;
        *(_DWORD *)(v26 + 40) = 0;
        v27 = *((_QWORD *)this + 14);
        v28 = *((int *)this + 30);
        *((_DWORD *)this + 30) = v28 + 1;
        *(_QWORD *)(v27 + 8 * v28) = v26;
      }
      else
      {
        v25 = *((_QWORD *)this + 14);
        *((_DWORD *)this + 30) = v24 + 1;
        v26 = *(_QWORD *)(v25 + 8 * v24);
      }
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v26, v22);
      ++v21;
    }
    while (v21 < *((int *)a2 + 30));
  }
  v29 = *((_DWORD *)a2 + 42);
  if (!(_BYTE)v29)
    goto LABEL_43;
  if ((v29 & 1) != 0)
  {
    *((_DWORD *)this + 42) |= 1u;
    v30 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
    if (!v30)
    {
      v20 = operator new();
      v30 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v20;
      *(_QWORD *)v20 = &off_1E25C0010;
      *(_OWORD *)(v20 + 8) = 0u;
      *(_OWORD *)(v20 + 24) = 0u;
      *(_OWORD *)(v20 + 40) = 0u;
      *((_QWORD *)this + 1) = v20;
    }
    v31 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v31)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)v20);
      v31 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v30, v31);
    v29 = *((_DWORD *)a2 + 42);
  }
  if ((v29 & 2) != 0)
  {
    v32 = *((_DWORD *)a2 + 14);
    if (v32 >= 4)
      __assert_rtn("set_health", "CoreNavigationCLPRavenOutput.pb.h", 4798, "::CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth_NrEstimatorHealthType_IsValid(value)");
    *((_DWORD *)this + 42) |= 2u;
    *((_DWORD *)this + 14) = v32;
    v29 = *((_DWORD *)a2 + 42);
  }
  if ((v29 & 4) != 0)
  {
    v39 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 42) |= 4u;
    *((_QWORD *)this + 2) = v39;
    v29 = *((_DWORD *)a2 + 42);
    if ((v29 & 8) == 0)
    {
LABEL_39:
      if ((v29 & 0x10) == 0)
        goto LABEL_40;
LABEL_58:
      v41 = *((_QWORD *)a2 + 4);
      *((_DWORD *)this + 42) |= 0x10u;
      *((_QWORD *)this + 4) = v41;
      v29 = *((_DWORD *)a2 + 42);
      if ((v29 & 0x20) == 0)
      {
LABEL_41:
        if ((v29 & 0x40) == 0)
          goto LABEL_43;
        goto LABEL_42;
      }
      goto LABEL_59;
    }
  }
  else if ((v29 & 8) == 0)
  {
    goto LABEL_39;
  }
  v40 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 42) |= 8u;
  *((_QWORD *)this + 3) = v40;
  v29 = *((_DWORD *)a2 + 42);
  if ((v29 & 0x10) != 0)
    goto LABEL_58;
LABEL_40:
  if ((v29 & 0x20) == 0)
    goto LABEL_41;
LABEL_59:
  v42 = *((_QWORD *)a2 + 5);
  *((_DWORD *)this + 42) |= 0x20u;
  *((_QWORD *)this + 5) = v42;
  v29 = *((_DWORD *)a2 + 42);
  if ((v29 & 0x40) != 0)
  {
LABEL_42:
    v33 = *((_QWORD *)a2 + 6);
    *((_DWORD *)this + 42) |= 0x40u;
    *((_QWORD *)this + 6) = v33;
    v29 = *((_DWORD *)a2 + 42);
  }
LABEL_43:
  if ((v29 & 0x3FC00) == 0)
    return;
  if ((v29 & 0x400) != 0)
  {
    v35 = *((_QWORD *)a2 + 17);
    *((_DWORD *)this + 42) |= 0x400u;
    *((_QWORD *)this + 17) = v35;
    v29 = *((_DWORD *)a2 + 42);
    if ((v29 & 0x800) == 0)
    {
LABEL_46:
      if ((v29 & 0x1000) == 0)
        goto LABEL_47;
      goto LABEL_53;
    }
  }
  else if ((v29 & 0x800) == 0)
  {
    goto LABEL_46;
  }
  v36 = *((_QWORD *)a2 + 18);
  *((_DWORD *)this + 42) |= 0x800u;
  *((_QWORD *)this + 18) = v36;
  v29 = *((_DWORD *)a2 + 42);
  if ((v29 & 0x1000) == 0)
  {
LABEL_47:
    if ((v29 & 0x2000) == 0)
      goto LABEL_48;
    goto LABEL_54;
  }
LABEL_53:
  v37 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 42) |= 0x1000u;
  *((_DWORD *)this + 15) = v37;
  v29 = *((_DWORD *)a2 + 42);
  if ((v29 & 0x2000) == 0)
  {
LABEL_48:
    if ((v29 & 0x4000) == 0)
      return;
    goto LABEL_49;
  }
LABEL_54:
  v38 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 42) |= 0x2000u;
  *((_DWORD *)this + 40) = v38;
  if ((*((_DWORD *)a2 + 42) & 0x4000) != 0)
  {
LABEL_49:
    v34 = *((_QWORD *)a2 + 19);
    *((_DWORD *)this + 42) |= 0x4000u;
    *((_QWORD *)this + 19) = v34;
  }
}

void sub_18D0A313C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this, const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::RavenOutput *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::RavenOutput::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.RavenOutput");
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Raven::TimeStruct *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::TimeStruct(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  *(_QWORD *)this = &off_1E25BF638;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(this, a2);
  return this;
}

void sub_18D0A328C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0A3348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStruct::~TimeStruct(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  *(_QWORD *)this = &off_1E25BF638;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct::~TimeStruct(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::New(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BF638;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v12 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v12);
          if (!(_DWORD)result)
            return result;
          v9 = v12;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v6 = TagFallback & 7;
      if (v6 != 1)
        goto LABEL_15;
LABEL_23:
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
        return 0;
      *((_QWORD *)this + 2) = v12;
      *((_DWORD *)this + 7) |= 2u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v6 = TagFallback & 7;
LABEL_15:
    if (v6 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::Swap(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  uint64_t v2;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.TimeStruct");
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::TimeStamp *CoreNavigation::CLP::LogEntry::Raven::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  *(_QWORD *)this = &off_1E25C0010;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0A37E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v7;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v8;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v9;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v10;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v11;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v12;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v13;
  _BYTE v14[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 52) & 1) != 0)
  {
    *((_DWORD *)v3 + 13) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BF638;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                      + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_21:
      *((_DWORD *)v3 + 13) |= 4u;
      v10 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)v3 + 3);
      if (!v10)
      {
        this = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)operator new();
        v10 = this;
        *(_QWORD *)this = &off_1E25BF638;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *((_QWORD *)this + 3) = 0;
        *((_QWORD *)v3 + 3) = this;
      }
      v11 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)a2 + 3);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
        v11 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                         + 24);
      }
      result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v10, v11);
      v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0)
          return result;
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((*((_BYTE *)a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 13) |= 2u;
  v8 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)v3 + 2);
  if (!v8)
  {
    this = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)operator new();
    v8 = this;
    *(_QWORD *)this = &off_1E25BF638;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v9 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    v9 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                    + 16);
  }
  result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v8, v9);
  v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 4) != 0)
    goto LABEL_21;
LABEL_7:
  if ((v5 & 8) == 0)
    goto LABEL_8;
LABEL_26:
  *((_DWORD *)v3 + 13) |= 8u;
  v12 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)v3 + 4);
  if (!v12)
  {
    this = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)operator new();
    v12 = this;
    *(_QWORD *)this = &off_1E25BF638;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v13 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)a2 + 4);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    v13 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                     + 32);
  }
  result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v12, v13);
  if ((*((_DWORD *)a2 + 13) & 0x10) != 0)
  {
LABEL_9:
    result = *((double *)a2 + 5);
    *((_DWORD *)v3 + 13) |= 0x10u;
    *((double *)v3 + 5) = result;
  }
  return result;
}

void sub_18D0A3A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  *(_QWORD *)this = &off_1E25C0010;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp::~TimeStamp(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::New(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C0010;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(this + 52);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 52) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        v1 = *(_DWORD *)(this + 52);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v1 = *(_DWORD *)(this + 52);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        v1 = *(_DWORD *)(this + 52);
      }
    }
    if ((v1 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
    *(_QWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  _BYTE *v21;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  _BYTE *v28;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  _BYTE *v35;
  uint64_t result;
  unsigned int v37[2];

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_21;
        *((_DWORD *)this + 13) |= 1u;
        v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)operator new();
          *(_QWORD *)v7 = &off_1E25BF638;
          *((_QWORD *)v7 + 1) = 0;
          *((_QWORD *)v7 + 2) = 0;
          *((_QWORD *)v7 + 3) = 0;
          *((_QWORD *)this + 1) = v7;
        }
        v37[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0;
        }
        else
        {
          v37[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v7, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_33;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_21;
LABEL_33:
        *((_DWORD *)this + 13) |= 2u;
        v15 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 2);
        if (!v15)
        {
          v15 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)operator new();
          *(_QWORD *)v15 = &off_1E25BF638;
          *((_QWORD *)v15 + 1) = 0;
          *((_QWORD *)v15 + 2) = 0;
          *((_QWORD *)v15 + 3) = 0;
          *((_QWORD *)this + 2) = v15;
        }
        v37[0] = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0;
        }
        else
        {
          v37[0] = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v15, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v19 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v19, 1);
        v20 = v19 - 1;
        if (v20 < 0 == v12)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_47:
        *((_DWORD *)this + 13) |= 4u;
        v22 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 3);
        if (!v22)
        {
          v22 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)operator new();
          *(_QWORD *)v22 = &off_1E25BF638;
          *((_QWORD *)v22 + 1) = 0;
          *((_QWORD *)v22 + 2) = 0;
          *((_QWORD *)v22 + 3) = 0;
          *((_QWORD *)this + 3) = v22;
        }
        v37[0] = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0;
        }
        else
        {
          v37[0] = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v22, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v12)
          *((_DWORD *)a2 + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_61:
        *((_DWORD *)this + 13) |= 8u;
        v29 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 4);
        if (!v29)
        {
          v29 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)operator new();
          *(_QWORD *)v29 = &off_1E25BF638;
          *((_QWORD *)v29 + 1) = 0;
          *((_QWORD *)v29 + 2) = 0;
          *((_QWORD *)v29 + 3) = 0;
          *((_QWORD *)this + 4) = v29;
        }
        v37[0] = 0;
        v30 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0;
        }
        else
        {
          v37[0] = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)a2 + 14);
        v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v29, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v33 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v12)
          *((_DWORD *)a2 + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_75:
        *(_QWORD *)v37 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v37) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v37;
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_47;
        goto LABEL_21;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_61;
        goto LABEL_21;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_13:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  }
LABEL_16:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_36;
  }
  if ((*((_BYTE *)this + 52) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 52) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                              + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = v7 + v8 + 1;
  v2 = *((_DWORD *)this + 13);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v9 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 += v11 + v12 + 1;
    v2 = *((_DWORD *)this + 13);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v13 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                 + 24);
    }
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v13);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v16 = 1;
    v3 += v15 + v16 + 1;
    v2 = *((_DWORD *)this + 13);
    if ((v2 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  if ((v2 & 8) != 0)
  {
LABEL_27:
    v17 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 4);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v17 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                 + 32);
    }
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v17);
    v19 = (int)v18;
    if (v18 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    else
      v20 = 1;
    v3 += v19 + v20 + 1;
    v2 = *((_DWORD *)this + 13);
  }
LABEL_33:
  if ((v2 & 0x10) != 0)
    result = v3 + 9;
  else
    result = v3;
LABEL_36:
  *((_DWORD *)this + 12) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    result = *((double *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((double *)a2 + 5) = result;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::TimeStamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.TimeStamp");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount_MeasurementType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 0x24;
}

double CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  double result;

  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MeasurementTypeCount(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  *(_QWORD *)this = &off_1E25BFCC8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(this, a2);
  return this;
}

void sub_18D0A45C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 40) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 40) & 2) == 0)
      goto LABEL_6;
LABEL_11:
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    *((_QWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  v6 = *((_QWORD *)a2 + 1);
  *((_DWORD *)this + 10) |= 1u;
  *((_QWORD *)this + 1) = v6;
  v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 2) != 0)
    goto LABEL_11;
LABEL_6:
  if ((v4 & 4) == 0)
    goto LABEL_7;
LABEL_12:
  v8 = *((_DWORD *)a2 + 8);
  if (v8 >= 0x24)
    __assert_rtn("set_type", "CoreNavigationCLPRavenOutput.pb.h", 4707, "::CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount_MeasurementType_IsValid(value)");
  *((_DWORD *)this + 10) |= 4u;
  *((_DWORD *)this + 8) = v8;
  if ((*((_DWORD *)a2 + 10) & 8) != 0)
  {
LABEL_8:
    v5 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 10) |= 8u;
    *((_QWORD *)this + 3) = v5;
  }
}

void sub_18D0A46F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::~MeasurementTypeCount(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  *(_QWORD *)this = &off_1E25BFCC8;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::~MeasurementTypeCount(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::New(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFCC8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  unint64_t v10;
  char *v11;
  _BYTE *v12;
  char *v13;
  char *v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  unsigned __int8 *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (unint64_t *)((char *)this + 16);
  v6 = (unint64_t *)((char *)this + 24);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          *v4 = *v11;
          v12 = v11 + 1;
          *((_QWORD *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            v13 = v12 + 1;
            *((_QWORD *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if ((_DWORD)result)
        {
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v13;
          v17 = v13 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24)
          continue;
        v14 = v17 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_35:
        v22 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v18 = v22;
        }
        else
        {
          v18 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v18 <= 0x23)
        {
          *((_DWORD *)this + 10) |= 4u;
          *((_DWORD *)this + 8) = v18;
        }
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v19 >= v15 || *v19 != 32)
          continue;
        v16 = v19 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v20 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v16;
          v20 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 10) |= 8u;
        if (v20 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_35;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_45;
      default:
        v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 24), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_11;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 10);
    if ((v2 & 2) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 40) & 2) != 0)
  {
LABEL_7:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    v2 = *((_DWORD *)this + 10);
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
    if ((v2 & 8) != 0)
      goto LABEL_10;
  }
  else if ((v2 & 8) != 0)
  {
LABEL_10:
    v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
  }
LABEL_11:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.MeasurementTypeCount");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth_NrEstimatorHealthType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::NrEstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  *((_QWORD *)this + 11) = 0;
  *(_QWORD *)this = &off_1E25BFB60;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_DWORD *)this + 26) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(this, a2);
  return this;
}

void sub_18D0A4E18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;

  v5 = v4;
  sub_18D09ECA4(v5);
  sub_18D09ECA4(v3);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::~NrEstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFB60;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 14);
  sub_18D09ECA4((uint64_t *)this + 11);
  sub_18D09ECA4((uint64_t *)this + 8);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::~NrEstimatorHealth(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 164) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::New(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFB60;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = 0;
  *(_DWORD *)(v1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_DWORD *)(v1 + 168) = 0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 68) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  BOOL v26;
  int v27;
  _BYTE *v28;
  unsigned int v29;
  uint64_t result;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  _BYTE *v73;
  _BYTE *v74;
  unsigned int v75;
  _BYTE *v76;
  unsigned int v77;
  _BYTE *v78;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v79;
  unsigned int v80[2];

  v4 = (unint64_t *)((char *)this + 32);
  v5 = (unint64_t *)((char *)this + 40);
  v6 = (unint64_t *)((char *)this + 48);
  v79 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 64);
  v7 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 88);
  v8 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 112);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && (*v9 & 0x80000000) == 0)
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_42;
        *((_DWORD *)this + 42) |= 1u;
        v12 = *((_QWORD *)this + 1);
        if (!v12)
        {
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E25C0010;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          *((_QWORD *)this + 1) = v12;
        }
        v80[0] = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80))return 0;
        }
        else
        {
          v80[0] = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v12, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v26 = __OFSUB__(v25, 1);
        v27 = v25 - 1;
        if (v27 < 0 == v26)
          *((_DWORD *)a2 + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v28 >= v14 || *v28 != 16)
          continue;
        v15 = v28 + 1;
        *((_QWORD *)a2 + 1) = v15;
        goto LABEL_54;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_54:
        v80[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80);
          if (!(_DWORD)result)
            return result;
          v29 = v80[0];
        }
        else
        {
          v29 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v29 <= 3)
        {
          *((_DWORD *)this + 42) |= 2u;
          *((_DWORD *)this + 14) = v29;
        }
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_64:
        *(_QWORD *)v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v80) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v80;
        *((_DWORD *)this + 42) |= 4u;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_68:
        *(_QWORD *)v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v80) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v80;
        *((_DWORD *)this + 42) |= 8u;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v33 >= v16 || *v33 != 40)
          continue;
        v17 = v33 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_72:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v17;
          v34 = v17 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 42) |= 0x10u;
        if ((unint64_t)v34 >= v16 || *v34 != 48)
          continue;
        v18 = v34 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_80:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v18;
          v35 = v18 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 42) |= 0x20u;
        if ((unint64_t)v35 >= v16 || *v35 != 56)
          continue;
        v19 = v35 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_88:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v19;
          v36 = v19 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 42) |= 0x40u;
        if ((unint64_t)v36 >= v16 || *v36 != 66)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_96:
          v37 = *((_DWORD *)this + 19);
          v38 = *((int *)this + 18);
          if ((int)v38 >= v37)
          {
            if (v37 == *((_DWORD *)this + 20))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v79);
              v37 = *((_DWORD *)this + 19);
            }
            *((_DWORD *)this + 19) = v37 + 1;
            v40 = operator new();
            *(_QWORD *)v40 = &off_1E25BFCC8;
            *(_OWORD *)(v40 + 8) = 0u;
            *(_OWORD *)(v40 + 24) = 0u;
            *(_DWORD *)(v40 + 40) = 0;
            v41 = *((_QWORD *)this + 8);
            v42 = *((int *)this + 18);
            *((_DWORD *)this + 18) = v42 + 1;
            *(_QWORD *)(v41 + 8 * v42) = v40;
          }
          else
          {
            v39 = *((_QWORD *)this + 8);
            *((_DWORD *)this + 18) = v38 + 1;
            v40 = *(_QWORD *)(v39 + 8 * v38);
          }
          v80[0] = 0;
          v43 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80))return 0;
          }
          else
          {
            v80[0] = *v43;
            *((_QWORD *)a2 + 1) = v43 + 1;
          }
          v44 = *((_DWORD *)a2 + 14);
          v45 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v44 + 1;
          if (v44 >= v45)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v40, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v46 = *((_DWORD *)a2 + 14);
          v26 = __OFSUB__(v46, 1);
          v47 = v46 - 1;
          if (v47 < 0 == v26)
            *((_DWORD *)a2 + 14) = v47;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v36 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v48 = *v36;
        }
        while (v48 == 66);
        if (v48 != 74)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_114:
          v49 = *((_DWORD *)this + 25);
          v50 = *((int *)this + 24);
          if ((int)v50 >= v49)
          {
            if (v49 == *((_DWORD *)this + 26))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
              v49 = *((_DWORD *)this + 25);
            }
            *((_DWORD *)this + 25) = v49 + 1;
            v52 = operator new();
            *(_QWORD *)v52 = &off_1E25BFCC8;
            *(_OWORD *)(v52 + 8) = 0u;
            *(_OWORD *)(v52 + 24) = 0u;
            *(_DWORD *)(v52 + 40) = 0;
            v53 = *((_QWORD *)this + 11);
            v54 = *((int *)this + 24);
            *((_DWORD *)this + 24) = v54 + 1;
            *(_QWORD *)(v53 + 8 * v54) = v52;
          }
          else
          {
            v51 = *((_QWORD *)this + 11);
            *((_DWORD *)this + 24) = v50 + 1;
            v52 = *(_QWORD *)(v51 + 8 * v50);
          }
          v80[0] = 0;
          v55 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80))return 0;
          }
          else
          {
            v80[0] = *v55;
            *((_QWORD *)a2 + 1) = v55 + 1;
          }
          v56 = *((_DWORD *)a2 + 14);
          v57 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v56 + 1;
          if (v56 >= v57)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v52, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v58 = *((_DWORD *)a2 + 14);
          v26 = __OFSUB__(v58, 1);
          v59 = v58 - 1;
          if (v59 < 0 == v26)
            *((_DWORD *)a2 + 14) = v59;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v36 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v60 = *v36;
        }
        while (v60 == 74);
        if (v60 != 82)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_132:
          v61 = *((_DWORD *)this + 31);
          v62 = *((int *)this + 30);
          if ((int)v62 >= v61)
          {
            if (v61 == *((_DWORD *)this + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
              v61 = *((_DWORD *)this + 31);
            }
            *((_DWORD *)this + 31) = v61 + 1;
            v64 = operator new();
            *(_QWORD *)v64 = &off_1E25BFCC8;
            *(_OWORD *)(v64 + 8) = 0u;
            *(_OWORD *)(v64 + 24) = 0u;
            *(_DWORD *)(v64 + 40) = 0;
            v65 = *((_QWORD *)this + 14);
            v66 = *((int *)this + 30);
            *((_DWORD *)this + 30) = v66 + 1;
            *(_QWORD *)(v65 + 8 * v66) = v64;
          }
          else
          {
            v63 = *((_QWORD *)this + 14);
            *((_DWORD *)this + 30) = v62 + 1;
            v64 = *(_QWORD *)(v63 + 8 * v62);
          }
          v80[0] = 0;
          v67 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80))return 0;
          }
          else
          {
            v80[0] = *v67;
            *((_QWORD *)a2 + 1) = v67 + 1;
          }
          v68 = *((_DWORD *)a2 + 14);
          v69 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v68 + 1;
          if (v68 >= v69)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v64, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v70 = *((_DWORD *)a2 + 14);
          v26 = __OFSUB__(v70, 1);
          v71 = v70 - 1;
          if (v71 < 0 == v26)
            *((_DWORD *)a2 + 14) = v71;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v36 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v72 = *v36;
        }
        while (v72 == 82);
        if (v72 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_150:
        *(_QWORD *)v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v80) & 1) == 0)return 0;
        *((_QWORD *)this + 17) = *(_QWORD *)v80;
        *((_DWORD *)this + 42) |= 0x400u;
        v73 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v73 >= *((_QWORD *)a2 + 2) || *v73 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v73 + 1;
LABEL_154:
        *(_QWORD *)v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v80) & 1) == 0)return 0;
        *((_QWORD *)this + 18) = *(_QWORD *)v80;
        *((_DWORD *)this + 42) |= 0x800u;
        v74 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v74 >= v20 || *v74 != 104)
          continue;
        v21 = v74 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_158:
        v80[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80);
          if (!(_DWORD)result)
            return result;
          v75 = v80[0];
          v76 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v75 = *v21;
          v76 = v21 + 1;
          *((_QWORD *)a2 + 1) = v76;
        }
        *((_DWORD *)this + 15) = v75;
        *((_DWORD *)this + 42) |= 0x1000u;
        if ((unint64_t)v76 >= v20 || *v76 != 112)
          continue;
        v22 = v76 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_166:
        v80[0] = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v80);
          if (!(_DWORD)result)
            return result;
          v77 = v80[0];
          v78 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v77 = *v22;
          v78 = v22 + 1;
          *((_QWORD *)a2 + 1) = v78;
        }
        *((_DWORD *)this + 40) = v77;
        *((_DWORD *)this + 42) |= 0x2000u;
        if ((unint64_t)v78 >= v20 || *v78 != 121)
          continue;
        *((_QWORD *)a2 + 1) = v78 + 1;
LABEL_174:
        *(_QWORD *)v80 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v80) & 1) == 0)return 0;
        *((_QWORD *)this + 19) = *(_QWORD *)v80;
        *((_DWORD *)this + 42) |= 0x4000u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_64;
        goto LABEL_42;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_68;
        goto LABEL_42;
      case 5u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_72;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_80;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_88;
      case 8u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_96;
        goto LABEL_42;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_114;
        goto LABEL_42;
      case 0xAu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_132;
        goto LABEL_42;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_150;
        goto LABEL_42;
      case 0xCu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_154;
        goto LABEL_42;
      case 0xDu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_158;
      case 0xEu:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_166;
      case 0xFu:
        v11 = TagFallback & 7;
        if (v11 != 1)
          goto LABEL_42;
        goto LABEL_174;
      default:
        v11 = TagFallback & 7;
LABEL_42:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 168);
  if ((v6 & 1) != 0)
  {
    v11 = *(_QWORD *)(this + 8);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    v6 = *(_DWORD *)(v5 + 168);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_9;
    goto LABEL_8;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 168) & 0x40) != 0)
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 48), (uint64_t)a2, a4);
LABEL_9:
  if (*(int *)(v5 + 72) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(*(_QWORD *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(*(_QWORD *)(v5 + 88) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(*(_QWORD *)(v5 + 112) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 120));
  }
  v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x400) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 136), a3);
    v10 = *(_DWORD *)(v5 + 168);
    if ((v10 & 0x800) == 0)
    {
LABEL_20:
      if ((v10 & 0x1000) == 0)
        goto LABEL_21;
      goto LABEL_35;
    }
  }
  else if ((v10 & 0x800) == 0)
  {
    goto LABEL_20;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 144), a3);
  v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x1000) == 0)
  {
LABEL_21:
    if ((v10 & 0x2000) == 0)
      goto LABEL_22;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x2000) == 0)
  {
LABEL_22:
    if ((v10 & 0x4000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 152), a3);
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 168) & 0x4000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 152), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::ByteSize(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  int v2;
  int v3;
  int v4;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v32;
  int v33;
  int v34;

  v2 = *((_DWORD *)this + 42);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_27;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_
                                                             + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = v7 + v8 + 1;
  v2 = *((_DWORD *)this + 42);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      v2 = *((_DWORD *)this + 42);
    }
    else
    {
      v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  v11 = v3 + 9;
  if ((v2 & 4) == 0)
    v11 = v3;
  if ((v2 & 8) != 0)
    v4 = v11 + 9;
  else
    v4 = v11;
  if ((v2 & 0x10) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 4))
        + 1;
    v2 = *((_DWORD *)this + 42);
    if ((v2 & 0x20) == 0)
    {
LABEL_25:
      if ((v2 & 0x40) == 0)
        goto LABEL_27;
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_25;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 5))
      + 1;
  v2 = *((_DWORD *)this + 42);
  if ((v2 & 0x40) != 0)
  {
LABEL_26:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 6))
        + 1;
    v2 = *((_DWORD *)this + 42);
  }
LABEL_27:
  if ((v2 & 0x3FC00) != 0)
  {
    v12 = v4 + 9;
    if ((v2 & 0x400) == 0)
      v12 = v4;
    if ((v2 & 0x800) != 0)
      v4 = v12 + 9;
    else
      v4 = v12;
    if ((v2 & 0x1000) != 0)
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
      if ((v13 & 0x80000000) != 0)
      {
        v14 = 11;
      }
      else if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
        v2 = *((_DWORD *)this + 42);
      }
      else
      {
        v14 = 2;
      }
      v4 += v14;
    }
    if ((v2 & 0x2000) != 0)
    {
      v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v15 & 0x80000000) != 0)
      {
        v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
        v2 = *((_DWORD *)this + 42);
      }
      else
      {
        v16 = 2;
      }
      v4 += v16;
    }
    if ((v2 & 0x4000) != 0)
      v4 += 9;
  }
  v17 = *((_DWORD *)this + 18);
  v18 = v17 + v4;
  if (v17 >= 1)
  {
    v19 = 0;
    do
    {
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 8) + 8 * v19));
      v21 = (int)v20;
      if (v20 >= 0x80)
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      else
        v22 = 1;
      v18 += v21 + v22;
      ++v19;
    }
    while (v19 < *((int *)this + 18));
  }
  v23 = *((_DWORD *)this + 24);
  v24 = v23 + v18;
  if (v23 >= 1)
  {
    v25 = 0;
    do
    {
      v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 11) + 8 * v25));
      v27 = (int)v26;
      if (v26 >= 0x80)
        v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      else
        v28 = 1;
      v24 += v27 + v28;
      ++v25;
    }
    while (v25 < *((int *)this + 24));
  }
  v29 = *((_DWORD *)this + 30);
  v30 = (v29 + v24);
  if (v29 >= 1)
  {
    v31 = 0;
    do
    {
      v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 14) + 8 * v31));
      v33 = (int)v32;
      if (v32 >= 0x80)
        v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
      else
        v34 = 1;
      v30 = (v33 + v30 + v34);
      ++v31;
    }
    while (v31 < *((int *)this + 30));
  }
  *((_DWORD *)this + 41) = v30;
  return v30;
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::Swap(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  double result;
  int v15;
  int v16;

  if (a2 != this)
  {
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    v8 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v8;
    v9 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v9;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v10 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v10;
    v11 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v11;
    v12 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v12;
    v13 = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v13;
    result = *((double *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((double *)a2 + 19) = result;
    v15 = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v15;
    v16 = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v16;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.NrEstimatorHealth");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth_EstimatorType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth_EstimatorHealthType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  double result;

  *((_QWORD *)this + 36) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::EstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  *(_QWORD *)this = &off_1E25BFA70;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((_QWORD *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_QWORD *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((_QWORD *)this + 30) = 0;
  *((_QWORD *)this + 33) = 0;
  *((_QWORD *)this + 34) = 0;
  *((_DWORD *)this + 70) = 0;
  *((_QWORD *)this + 36) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 0;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(this, a2);
  return this;
}

void sub_18D0A62CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;

  v8 = v5;
  sub_18D09ECA4(v8);
  sub_18D09ECA4(v7);
  sub_18D09ECA4(v4);
  sub_18D09ECA4(v6);
  sub_18D09ECA4(v3);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::~EstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFA70;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 33);
  sub_18D09ECA4((uint64_t *)this + 30);
  sub_18D09ECA4((uint64_t *)this + 27);
  sub_18D09ECA4((uint64_t *)this + 24);
  sub_18D09ECA4((uint64_t *)this + 17);
  sub_18D09ECA4((uint64_t *)this + 14);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::~EstimatorHealth(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 288) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::New(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFA70;
  *(_QWORD *)(v1 + 136) = 0;
  *(_QWORD *)(v1 + 144) = 0;
  *(_DWORD *)(v1 + 152) = 0;
  *(_QWORD *)(v1 + 216) = 0;
  *(_QWORD *)(v1 + 224) = 0;
  *(_DWORD *)(v1 + 232) = 0;
  *(_QWORD *)(v1 + 240) = 0;
  *(_QWORD *)(v1 + 248) = 0;
  *(_DWORD *)(v1 + 256) = 0;
  *(_QWORD *)(v1 + 264) = 0;
  *(_QWORD *)(v1 + 272) = 0;
  *(_DWORD *)(v1 + 280) = 0;
  *(_QWORD *)(v1 + 288) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 116) = 0u;
  *(_DWORD *)(v1 + 208) = 0;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  unint64_t *v5;
  unint64_t *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  unint64_t *v8;
  char *v9;
  uint64_t TagFallback;
  int v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  unsigned __int8 *v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  BOOL v27;
  int v28;
  _BYTE *v29;
  unsigned int v30;
  uint64_t result;
  _BYTE *v32;
  unsigned int v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  unsigned __int8 *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  unint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  int v66;
  int v67;
  int v68;
  int v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned __int8 *v121;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v122;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v123;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v124;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v125;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v126;
  unsigned int v127[2];

  v4 = (unint64_t *)((char *)this + 40);
  v5 = (unint64_t *)((char *)this + 48);
  v6 = (unint64_t *)((char *)this + 56);
  v7 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 112);
  v8 = (unint64_t *)((char *)this + 184);
  v123 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 216);
  v124 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 192);
  v122 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 240);
  v125 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 264);
  v126 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 136);
  while (1)
  {
LABEL_2:
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && (*v9 & 0x80000000) == 0)
    {
      TagFallback = *v9;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v9 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_60;
        *((_DWORD *)this + 73) |= 1u;
        v12 = *((_QWORD *)this + 1);
        if (!v12)
        {
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E25C0010;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          *((_QWORD *)this + 1) = v12;
        }
        v127[0] = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
        }
        else
        {
          v127[0] = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v12, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v27 = __OFSUB__(v26, 1);
        v28 = v26 - 1;
        if (v28 < 0 == v27)
          *((_DWORD *)a2 + 14) = v28;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v29 >= v14 || *v29 != 16)
          continue;
        v15 = v29 + 1;
        *((_QWORD *)a2 + 1) = v15;
        goto LABEL_72;
      case 2u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_60;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_72:
        v127[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127);
          if (!(_DWORD)result)
            return result;
          v30 = v127[0];
        }
        else
        {
          v30 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v30 <= 6)
        {
          *((_DWORD *)this + 73) |= 2u;
          *((_DWORD *)this + 4) = v30;
        }
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v32 >= v16 || *v32 != 24)
          continue;
        v17 = v32 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_82:
        v127[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127);
          if (!(_DWORD)result)
            return result;
          v33 = v127[0];
        }
        else
        {
          v33 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        if (v33 <= 3)
        {
          *((_DWORD *)this + 73) |= 4u;
          *((_DWORD *)this + 5) = v33;
        }
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_92:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 8u;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_96:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x10u;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v36 >= v18 || *v36 != 48)
          continue;
        v19 = v36 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_100:
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v19;
          v37 = v19 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 73) |= 0x20u;
        if ((unint64_t)v37 >= v18 || *v37 != 56)
          continue;
        v20 = v37 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_108:
        if ((unint64_t)v20 >= v18 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v38 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v20;
          v38 = v20 + 1;
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 73) |= 0x40u;
        if ((unint64_t)v38 >= v18 || *v38 != 64)
          continue;
        v21 = v38 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_116:
        if ((unint64_t)v21 >= v18 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v39 = (_BYTE *)*((_QWORD *)a2 + 1);
          v18 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v21;
          v39 = v21 + 1;
          *((_QWORD *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 73) |= 0x80u;
        if ((unint64_t)v39 >= v18 || *v39 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_124:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x100u;
        v40 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_128:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x200u;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_132:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x400u;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_136:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x800u;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
LABEL_140:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x1000u;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 != 113)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 1;
LABEL_144:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x2000u;
        v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 != 122)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v45 + 1;
LABEL_148:
          v46 = *((_DWORD *)this + 31);
          v47 = *((int *)this + 30);
          if ((int)v47 >= v46)
          {
            if (v46 == *((_DWORD *)this + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
              v46 = *((_DWORD *)this + 31);
            }
            *((_DWORD *)this + 31) = v46 + 1;
            v49 = operator new();
            *(_QWORD *)v49 = &off_1E25BFCC8;
            *(_OWORD *)(v49 + 8) = 0u;
            *(_OWORD *)(v49 + 24) = 0u;
            *(_DWORD *)(v49 + 40) = 0;
            v50 = *((_QWORD *)this + 14);
            v51 = *((int *)this + 30);
            *((_DWORD *)this + 30) = v51 + 1;
            *(_QWORD *)(v50 + 8 * v51) = v49;
          }
          else
          {
            v48 = *((_QWORD *)this + 14);
            *((_DWORD *)this + 30) = v47 + 1;
            v49 = *(_QWORD *)(v48 + 8 * v47);
          }
          v127[0] = 0;
          v52 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
          }
          else
          {
            v127[0] = *v52;
            *((_QWORD *)a2 + 1) = v52 + 1;
          }
          v53 = *((_DWORD *)a2 + 14);
          v54 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v53 + 1;
          if (v53 >= v54)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v49, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v55 = *((_DWORD *)a2 + 14);
          v27 = __OFSUB__(v55, 1);
          v56 = v55 - 1;
          if (v56 < 0 == v27)
            *((_DWORD *)a2 + 14) = v56;
          v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v57 = *((_QWORD *)a2 + 2);
        }
        while ((unint64_t)v45 < v57 && *v45 == 122);
        if ((int)v57 - (int)v45 < 2)
          continue;
        v58 = *v45;
        do
        {
          if (v58 != 130 || v45[1] != 1)
            goto LABEL_2;
          *((_QWORD *)a2 + 1) = v45 + 2;
LABEL_168:
          v59 = *((_DWORD *)this + 37);
          v60 = *((int *)this + 36);
          if ((int)v60 >= v59)
          {
            if (v59 == *((_DWORD *)this + 38))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v126);
              v59 = *((_DWORD *)this + 37);
            }
            *((_DWORD *)this + 37) = v59 + 1;
            v62 = operator new();
            *(_QWORD *)v62 = &off_1E25BFCC8;
            *(_OWORD *)(v62 + 8) = 0u;
            *(_OWORD *)(v62 + 24) = 0u;
            *(_DWORD *)(v62 + 40) = 0;
            v63 = *((_QWORD *)this + 17);
            v64 = *((int *)this + 36);
            *((_DWORD *)this + 36) = v64 + 1;
            *(_QWORD *)(v63 + 8 * v64) = v62;
          }
          else
          {
            v61 = *((_QWORD *)this + 17);
            *((_DWORD *)this + 36) = v60 + 1;
            v62 = *(_QWORD *)(v61 + 8 * v60);
          }
          v127[0] = 0;
          v65 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v65 >= *((_QWORD *)a2 + 2) || *v65 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
          }
          else
          {
            v127[0] = *v65;
            *((_QWORD *)a2 + 1) = v65 + 1;
          }
          v66 = *((_DWORD *)a2 + 14);
          v67 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v66 + 1;
          if (v66 >= v67)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v62, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v68 = *((_DWORD *)a2 + 14);
          v27 = __OFSUB__(v68, 1);
          v69 = v68 - 1;
          if (v69 < 0 == v27)
            *((_DWORD *)a2 + 14) = v69;
          v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if (*((_DWORD *)a2 + 4) - (int)v45 <= 1)
            goto LABEL_2;
          v58 = *v45;
        }
        while (v58 != 137);
        if (v45[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v45 + 2;
LABEL_188:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 20) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x10000u;
        v70 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v70 < 2 || *v70 != 145 || v70[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v70 + 2;
LABEL_193:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 21) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x20000u;
        v71 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v71 < 2 || *v71 != 153 || v71[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v71 + 2;
LABEL_198:
        *(_QWORD *)v127 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v127) & 1) == 0)return 0;
        *((_QWORD *)this + 22) = *(_QWORD *)v127;
        *((_DWORD *)this + 73) |= 0x40000u;
        v72 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        if ((int)v23 - (int)v72 >= 2 && *v72 == 160 && v72[1] == 1)
        {
          v22 = v72 + 2;
          *((_QWORD *)a2 + 1) = v22;
LABEL_203:
          if ((unint64_t)v22 >= v23 || (char)*v22 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
            if (!(_DWORD)result)
              return result;
            v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v23 = *((_QWORD *)a2 + 2);
          }
          else
          {
            *v8 = *v22;
            v73 = v22 + 1;
            *((_QWORD *)a2 + 1) = v73;
          }
          *((_DWORD *)this + 73) |= 0x80000u;
          if ((int)v23 - (int)v73 >= 2)
          {
            v74 = *v73;
            do
            {
              if (v74 != 170 || v73[1] != 1)
                goto LABEL_2;
              *((_QWORD *)a2 + 1) = v73 + 2;
LABEL_212:
              v75 = *((_DWORD *)this + 51);
              v76 = *((int *)this + 50);
              if ((int)v76 >= v75)
              {
                if (v75 == *((_DWORD *)this + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v124);
                  v75 = *((_DWORD *)this + 51);
                }
                *((_DWORD *)this + 51) = v75 + 1;
                v78 = operator new();
                *(_QWORD *)v78 = &off_1E25BFCC8;
                *(_OWORD *)(v78 + 8) = 0u;
                *(_OWORD *)(v78 + 24) = 0u;
                *(_DWORD *)(v78 + 40) = 0;
                v79 = *((_QWORD *)this + 24);
                v80 = *((int *)this + 50);
                *((_DWORD *)this + 50) = v80 + 1;
                *(_QWORD *)(v79 + 8 * v80) = v78;
              }
              else
              {
                v77 = *((_QWORD *)this + 24);
                *((_DWORD *)this + 50) = v76 + 1;
                v78 = *(_QWORD *)(v77 + 8 * v76);
              }
              v127[0] = 0;
              v81 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v81 >= *((_QWORD *)a2 + 2) || *v81 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
              }
              else
              {
                v127[0] = *v81;
                *((_QWORD *)a2 + 1) = v81 + 1;
              }
              v82 = *((_DWORD *)a2 + 14);
              v83 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v82 + 1;
              if (v82 >= v83)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v78, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v84 = *((_DWORD *)a2 + 14);
              v27 = __OFSUB__(v84, 1);
              v85 = v84 - 1;
              if (v85 < 0 == v27)
                *((_DWORD *)a2 + 14) = v85;
              v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v73 <= 1)
                goto LABEL_2;
              v74 = *v73;
            }
            while (v74 != 178);
            while (1)
            {
              if (v73[1] != 1)
                goto LABEL_2;
              *((_QWORD *)a2 + 1) = v73 + 2;
LABEL_230:
              v86 = *((_DWORD *)this + 57);
              v87 = *((int *)this + 56);
              if ((int)v87 >= v86)
              {
                if (v86 == *((_DWORD *)this + 58))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v123);
                  v86 = *((_DWORD *)this + 57);
                }
                *((_DWORD *)this + 57) = v86 + 1;
                v89 = operator new();
                *(_QWORD *)v89 = &off_1E25BFCC8;
                *(_OWORD *)(v89 + 8) = 0u;
                *(_OWORD *)(v89 + 24) = 0u;
                *(_DWORD *)(v89 + 40) = 0;
                v90 = *((_QWORD *)this + 27);
                v91 = *((int *)this + 56);
                *((_DWORD *)this + 56) = v91 + 1;
                *(_QWORD *)(v90 + 8 * v91) = v89;
              }
              else
              {
                v88 = *((_QWORD *)this + 27);
                *((_DWORD *)this + 56) = v87 + 1;
                v89 = *(_QWORD *)(v88 + 8 * v87);
              }
              v127[0] = 0;
              v92 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v92 >= *((_QWORD *)a2 + 2) || *v92 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
              }
              else
              {
                v127[0] = *v92;
                *((_QWORD *)a2 + 1) = v92 + 1;
              }
              v93 = *((_DWORD *)a2 + 14);
              v94 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v93 + 1;
              if (v93 >= v94)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v89, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v95 = *((_DWORD *)a2 + 14);
              v27 = __OFSUB__(v95, 1);
              v96 = v95 - 1;
              if (v96 < 0 == v27)
                *((_DWORD *)a2 + 14) = v96;
              v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v73 <= 1)
                goto LABEL_2;
              v97 = *v73;
              if (v97 == 186)
                break;
              if (v97 != 178)
                goto LABEL_2;
            }
            while (1)
            {
              if (v73[1] != 1)
                goto LABEL_2;
              *((_QWORD *)a2 + 1) = v73 + 2;
LABEL_249:
              v98 = *((_DWORD *)this + 63);
              v99 = *((int *)this + 62);
              if ((int)v99 >= v98)
              {
                if (v98 == *((_DWORD *)this + 64))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v122);
                  v98 = *((_DWORD *)this + 63);
                }
                *((_DWORD *)this + 63) = v98 + 1;
                v101 = operator new();
                *(_QWORD *)v101 = &off_1E25BFCC8;
                *(_OWORD *)(v101 + 8) = 0u;
                *(_OWORD *)(v101 + 24) = 0u;
                *(_DWORD *)(v101 + 40) = 0;
                v102 = *((_QWORD *)this + 30);
                v103 = *((int *)this + 62);
                *((_DWORD *)this + 62) = v103 + 1;
                *(_QWORD *)(v102 + 8 * v103) = v101;
              }
              else
              {
                v100 = *((_QWORD *)this + 30);
                *((_DWORD *)this + 62) = v99 + 1;
                v101 = *(_QWORD *)(v100 + 8 * v99);
              }
              v127[0] = 0;
              v104 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v104 >= *((_QWORD *)a2 + 2) || *v104 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
              }
              else
              {
                v127[0] = *v104;
                *((_QWORD *)a2 + 1) = v104 + 1;
              }
              v105 = *((_DWORD *)a2 + 14);
              v106 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v105 + 1;
              if (v105 >= v106)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v101, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v107 = *((_DWORD *)a2 + 14);
              v27 = __OFSUB__(v107, 1);
              v108 = v107 - 1;
              if (v108 < 0 == v27)
                *((_DWORD *)a2 + 14) = v108;
              v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v73 <= 1)
                goto LABEL_2;
              v109 = *v73;
              if (v109 == 194)
                break;
              if (v109 != 186)
                goto LABEL_2;
            }
            if (v73[1] == 1)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v73 + 2;
LABEL_270:
                v110 = *((int *)this + 68);
                v111 = *((_DWORD *)this + 69);
                if ((int)v110 >= v111)
                {
                  if (v111 == *((_DWORD *)this + 70))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v125);
                    v111 = *((_DWORD *)this + 69);
                  }
                  *((_DWORD *)this + 69) = v111 + 1;
                  v113 = operator new();
                  *(_QWORD *)v113 = &off_1E25BFCC8;
                  *(_OWORD *)(v113 + 8) = 0u;
                  *(_OWORD *)(v113 + 24) = 0u;
                  *(_DWORD *)(v113 + 40) = 0;
                  v114 = *((_QWORD *)this + 33);
                  v115 = *((int *)this + 68);
                  *((_DWORD *)this + 68) = v115 + 1;
                  *(_QWORD *)(v114 + 8 * v115) = v113;
                }
                else
                {
                  v112 = *((_QWORD *)this + 33);
                  *((_DWORD *)this + 68) = v110 + 1;
                  v113 = *(_QWORD *)(v112 + 8 * v110);
                }
                v127[0] = 0;
                v116 = (char *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v116 >= *((_QWORD *)a2 + 2) || *v116 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v127))return 0;
                }
                else
                {
                  v127[0] = *v116;
                  *((_QWORD *)a2 + 1) = v116 + 1;
                }
                v117 = *((_DWORD *)a2 + 14);
                v118 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v117 + 1;
                if (v117 >= v118)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)v113, a2)|| !*((_BYTE *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                v119 = *((_DWORD *)a2 + 14);
                v27 = __OFSUB__(v119, 1);
                v120 = v119 - 1;
                if (v120 < 0 == v27)
                  *((_DWORD *)a2 + 14) = v120;
                v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v121 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
              }
              while ((int)v121 - (int)v73 > 1 && *v73 == 194 && v73[1] == 1);
              if (v73 == v121 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 3u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_60;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_82;
      case 4u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_92;
        goto LABEL_60;
      case 5u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_96;
        goto LABEL_60;
      case 6u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_60;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_100;
      case 7u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_60;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_108;
      case 8u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_60;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_116;
      case 9u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_124;
        goto LABEL_60;
      case 0xAu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_128;
        goto LABEL_60;
      case 0xBu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_132;
        goto LABEL_60;
      case 0xCu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_136;
        goto LABEL_60;
      case 0xDu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_140;
        goto LABEL_60;
      case 0xEu:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_144;
        goto LABEL_60;
      case 0xFu:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_148;
        goto LABEL_60;
      case 0x10u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_168;
        goto LABEL_60;
      case 0x11u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_188;
        goto LABEL_60;
      case 0x12u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_193;
        goto LABEL_60;
      case 0x13u:
        v11 = TagFallback & 7;
        if (v11 == 1)
          goto LABEL_198;
        goto LABEL_60;
      case 0x14u:
        v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_60;
        v22 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v23 = *((_QWORD *)a2 + 2);
        goto LABEL_203;
      case 0x15u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_212;
        goto LABEL_60;
      case 0x16u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_230;
        goto LABEL_60;
      case 0x17u:
        v11 = TagFallback & 7;
        if (v11 == 2)
          goto LABEL_249;
        goto LABEL_60;
      case 0x18u:
        v11 = TagFallback & 7;
        if (v11 != 2)
          goto LABEL_60;
        goto LABEL_270;
      default:
        v11 = TagFallback & 7;
LABEL_60:
        if (v11 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 292);
  if ((v6 & 1) != 0)
  {
    v14 = *(_QWORD *)(this + 8);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v14, a2, a4);
    v6 = *(_DWORD *)(v5 + 292);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_44;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_16;
    goto LABEL_15;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 96), a3);
  if ((*(_DWORD *)(v5 + 292) & 0x2000) != 0)
LABEL_15:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 104), a3);
LABEL_16:
  if (*(int *)(v5 + 120) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_QWORD *)(*(_QWORD *)(v5 + 112) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 144));
  }
  v9 = *(_DWORD *)(v5 + 292);
  if ((v9 & 0x10000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 160), a3);
    v9 = *(_DWORD *)(v5 + 292);
    if ((v9 & 0x20000) == 0)
    {
LABEL_24:
      if ((v9 & 0x40000) == 0)
        goto LABEL_25;
      goto LABEL_58;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 168), a3);
  v9 = *(_DWORD *)(v5 + 292);
  if ((v9 & 0x40000) == 0)
  {
LABEL_25:
    if ((v9 & 0x80000) == 0)
      goto LABEL_27;
    goto LABEL_26;
  }
LABEL_58:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(v5 + 176), a3);
  if ((*(_DWORD *)(v5 + 292) & 0x80000) != 0)
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_QWORD *)(v5 + 184), (uint64_t)a2, a4);
LABEL_27:
  if (*(int *)(v5 + 200) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_QWORD *)(*(_QWORD *)(v5 + 192) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_QWORD *)(*(_QWORD *)(v5 + 216) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 224));
  }
  if (*(int *)(v5 + 248) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(_QWORD *)(*(_QWORD *)(v5 + 240) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 248));
  }
  if (*(int *)(v5 + 272) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(_QWORD *)(*(_QWORD *)(v5 + 264) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 272));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::ByteSize(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  int v2;
  int v3;
  int v4;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  uint64_t v42;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v43;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  int v51;

  v2 = *((_DWORD *)this + 73);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_34;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_
                                                             + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = v7 + v8 + 1;
  v2 = *((_DWORD *)this + 73);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      v2 = *((_DWORD *)this + 73);
    }
    else
    {
      v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      v2 = *((_DWORD *)this + 73);
    }
    else
    {
      v12 = 1;
    }
    v3 += v12 + 1;
  }
  v13 = v3 + 9;
  if ((v2 & 8) == 0)
    v13 = v3;
  if ((v2 & 0x10) != 0)
    v4 = v13 + 9;
  else
    v4 = v13;
  if ((v2 & 0x20) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
    v2 = *((_DWORD *)this + 73);
    if ((v2 & 0x40) == 0)
    {
LABEL_32:
      if ((v2 & 0x80) == 0)
        goto LABEL_34;
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_32;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 6))
      + 1;
  v2 = *((_DWORD *)this + 73);
  if ((v2 & 0x80) != 0)
  {
LABEL_33:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 7))
        + 1;
    v2 = *((_DWORD *)this + 73);
  }
LABEL_34:
  v14 = v4 + 9;
  if ((v2 & 0x100) == 0)
    v14 = v4;
  if ((v2 & 0x200) != 0)
    v14 += 9;
  if ((v2 & 0x400) != 0)
    v14 += 9;
  if ((v2 & 0x800) != 0)
    v14 += 9;
  if ((v2 & 0x1000) != 0)
    v14 += 9;
  if ((v2 & 0x2000) != 0)
    v14 += 9;
  if ((v2 & 0xFF00) != 0)
    v4 = v14;
  if ((v2 & 0xFF0000) != 0)
  {
    v15 = v4 + 10;
    if ((v2 & 0x10000) == 0)
      v15 = v4;
    if ((v2 & 0x20000) != 0)
      v15 += 10;
    if ((v2 & 0x40000) != 0)
      v4 = v15 + 10;
    else
      v4 = v15;
    if ((v2 & 0x80000) != 0)
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 23))
          + 2;
  }
  v16 = *((_DWORD *)this + 30);
  v17 = v16 + v4;
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 14) + 8 * v18));
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 30));
  }
  v22 = *((_DWORD *)this + 36);
  v23 = v17 + 2 * v22;
  if (v22 >= 1)
  {
    v24 = 0;
    do
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 17) + 8 * v24));
      v26 = (int)v25;
      if (v25 >= 0x80)
        v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      else
        v27 = 1;
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 36));
  }
  v28 = *((_DWORD *)this + 50);
  v29 = v23 + 2 * v28;
  if (v28 >= 1)
  {
    v30 = 0;
    do
    {
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 24) + 8 * v30));
      v32 = (int)v31;
      if (v31 >= 0x80)
        v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      else
        v33 = 1;
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 50));
  }
  v34 = *((_DWORD *)this + 56);
  v35 = v29 + 2 * v34;
  if (v34 >= 1)
  {
    v36 = 0;
    do
    {
      v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 27) + 8 * v36));
      v38 = (int)v37;
      if (v37 >= 0x80)
        v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      else
        v39 = 1;
      v35 += v38 + v39;
      ++v36;
    }
    while (v36 < *((int *)this + 56));
  }
  v40 = *((_DWORD *)this + 62);
  v41 = v35 + 2 * v40;
  if (v40 >= 1)
  {
    v42 = 0;
    do
    {
      v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 30) + 8 * v42));
      v44 = (int)v43;
      if (v43 >= 0x80)
        v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      else
        v45 = 1;
      v41 += v44 + v45;
      ++v42;
    }
    while (v42 < *((int *)this + 62));
  }
  v46 = *((_DWORD *)this + 68);
  v47 = (v41 + 2 * v46);
  if (v46 >= 1)
  {
    v48 = 0;
    do
    {
      v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((_QWORD *)this + 33) + 8 * v48));
      v50 = (int)v49;
      if (v49 >= 0x80)
        v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
      else
        v51 = 1;
      v47 = (v50 + v47 + v51);
      ++v48;
    }
    while (v48 < *((int *)this + 68));
  }
  *((_DWORD *)this + 72) = v47;
  return v47;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;

  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    v8 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v8;
    v9 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v9;
    v10 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v10;
    v11 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v11;
    v12 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v12;
    v13 = *(_QWORD *)(this + 88);
    *(_QWORD *)(this + 88) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v13;
    v14 = *(_QWORD *)(this + 96);
    *(_QWORD *)(this + 96) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v14;
    v15 = *(_QWORD *)(this + 104);
    *(_QWORD *)(this + 104) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v15;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v16 = *(_QWORD *)(v3 + 160);
    *(_QWORD *)(v3 + 160) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v16;
    v17 = *(_QWORD *)(v3 + 168);
    *(_QWORD *)(v3 + 168) = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 21) = v17;
    v18 = *(_QWORD *)(v3 + 176);
    *(_QWORD *)(v3 + 176) = *((_QWORD *)a2 + 22);
    *((_QWORD *)a2 + 22) = v18;
    v19 = *(_QWORD *)(v3 + 184);
    *(_QWORD *)(v3 + 184) = *((_QWORD *)a2 + 23);
    *((_QWORD *)a2 + 23) = v19;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v20 = *(_DWORD *)(v3 + 292);
    *(_DWORD *)(v3 + 292) = *((_DWORD *)a2 + 73);
    *((_DWORD *)a2 + 73) = v20;
    v21 = *(_DWORD *)(v3 + 288);
    *(_DWORD *)(v3 + 288) = *((_DWORD *)a2 + 72);
    *((_DWORD *)a2 + 72) = v21;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.EstimatorHealth");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserActivityType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 0xA;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_MovingStateType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_MountStateType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_PositionContextStateType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_SignalEnvironmentType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 8;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserFitnessSessionType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 0xA;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::EstimatorActivity(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  *(_QWORD *)this = &off_1E25BFAE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(this, a2);
  return this;
}

void sub_18D0A81CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::~EstimatorActivity(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFAE8;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::~EstimatorActivity(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 224) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::New(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFAE8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  BOOL v24;
  int v25;
  _BYTE *v26;
  unsigned int v27;
  uint64_t result;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  unsigned int v37;
  _BYTE *v38;
  unsigned int v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  unsigned __int8 *v43;
  unsigned __int8 *v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  unsigned __int8 *v47;
  unsigned __int8 *v48;
  unsigned __int8 *v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  unsigned __int8 *v52;
  unsigned __int8 *v53;
  unsigned __int8 *v54;
  unsigned __int8 *v55;
  unsigned __int8 *v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  unsigned __int8 *v59;
  unsigned __int8 *v60;
  unsigned int v61;
  unsigned int v62[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_72;
        *((_DWORD *)this + 57) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v62[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62))return 0;
        }
        else
        {
          v62[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v23 = *((_DWORD *)a2 + 14);
        v24 = __OFSUB__(v23, 1);
        v25 = v23 - 1;
        if (v25 < 0 == v24)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v26 >= v11 || *v26 != 16)
          continue;
        v12 = v26 + 1;
        *((_QWORD *)a2 + 1) = v12;
        goto LABEL_84;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_72;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
LABEL_84:
        v62[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v27 = v62[0];
        }
        else
        {
          v27 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v27 <= 9)
        {
          *((_DWORD *)this + 57) |= 2u;
          *((_DWORD *)this + 6) = v27;
        }
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_94:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 4u;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v30 >= v13 || *v30 != 32)
          continue;
        v14 = v30 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_98:
        v62[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v31 = v62[0];
        }
        else
        {
          v31 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v31 <= 3)
        {
          *((_DWORD *)this + 57) |= 8u;
          *((_DWORD *)this + 7) = v31;
        }
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_108:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x10u;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_112:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x20u;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v34 >= v15 || *v34 != 56)
          continue;
        v16 = v34 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_116:
        v62[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v35 = v62[0];
        }
        else
        {
          v35 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v35 <= 9)
        {
          *((_DWORD *)this + 57) |= 0x40u;
          *((_DWORD *)this + 12) = v35;
        }
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v36 >= v17 || *v36 != 64)
          continue;
        v18 = v36 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_126:
        v62[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v37 = v62[0];
        }
        else
        {
          v37 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v37 <= 3)
        {
          *((_DWORD *)this + 57) |= 0x80u;
          *((_DWORD *)this + 13) = v37;
        }
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v38 >= v19 || *v38 != 72)
          continue;
        v20 = v38 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_136:
        v62[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!(_DWORD)result)
            return result;
          v39 = v62[0];
        }
        else
        {
          v39 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        if (v39 <= 2)
        {
          *((_DWORD *)this + 57) |= 0x100u;
          *((_DWORD *)this + 34) = v39;
        }
        v40 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v40 < 2 || *v40 != 161 || v40[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v40 + 2;
LABEL_147:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x200u;
        v41 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v41 < 2 || *v41 != 169 || v41[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 2;
LABEL_152:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x400u;
        v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v42 < 2 || *v42 != 177 || v42[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 2;
LABEL_157:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x800u;
        v43 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v43 < 2 || *v43 != 185 || v43[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 2;
LABEL_162:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x1000u;
        v44 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v44 < 2 || *v44 != 193 || v44[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 2;
LABEL_167:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x2000u;
        v45 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v45 < 2 || *v45 != 201 || v45[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v45 + 2;
LABEL_172:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x4000u;
        v46 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v46 < 2 || *v46 != 209 || v46[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 2;
LABEL_177:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x8000u;
        v47 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v47 < 2 || *v47 != 217 || v47[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v47 + 2;
LABEL_182:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 14) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x10000u;
        v48 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v48 < 2 || *v48 != 225 || v48[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v48 + 2;
LABEL_187:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 15) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x20000u;
        v49 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v49 < 2 || *v49 != 233 || v49[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v49 + 2;
LABEL_192:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 16) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x40000u;
        v50 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v50 < 2 || *v50 != 145 || v50[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 2;
LABEL_197:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 18) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x80000u;
        v51 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v51 < 2 || *v51 != 153 || v51[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v51 + 2;
LABEL_202:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 19) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x100000u;
        v52 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v52 < 2 || *v52 != 161 || v52[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v52 + 2;
LABEL_207:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 20) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x200000u;
        v53 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v53 < 2 || *v53 != 169 || v53[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 2;
LABEL_212:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 21) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x400000u;
        v54 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v54 < 2 || *v54 != 225 || v54[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v54 + 2;
LABEL_217:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 22) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x800000u;
        v55 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v55 < 2 || *v55 != 233 || v55[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v55 + 2;
LABEL_222:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 23) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x1000000u;
        v56 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v56 < 2 || *v56 != 241 || v56[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v56 + 2;
LABEL_227:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 24) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x2000000u;
        v57 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v57 < 2 || *v57 != 249 || v57[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v57 + 2;
LABEL_232:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 25) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x4000000u;
        v58 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v58 < 2 || *v58 != 177 || v58[1] != 4)
          continue;
        *((_QWORD *)a2 + 1) = v58 + 2;
LABEL_237:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0;
        *((_QWORD *)this + 26) = *(_QWORD *)v62;
        *((_DWORD *)this + 57) |= 0x8000000u;
        v59 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v59 < 2 || *v59 != 185 || v59[1] != 4)
          continue;
        *((_QWORD *)a2 + 1) = v59 + 2;
LABEL_242:
        *(_QWORD *)v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) != 0)
        {
          *((_QWORD *)this + 27) = *(_QWORD *)v62;
          *((_DWORD *)this + 57) |= 0x10000000u;
          v60 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((int)v9 - (int)v60 >= 2 && *v60 == 128 && v60[1] == 5)
          {
            v10 = (char *)(v60 + 2);
            *((_QWORD *)a2 + 1) = v10;
LABEL_247:
            v62[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
              if (!(_DWORD)result)
                return result;
              v61 = v62[0];
            }
            else
            {
              v61 = *v10;
              *((_QWORD *)a2 + 1) = v10 + 1;
            }
            if (v61 <= 7)
            {
              *((_DWORD *)this + 57) |= 0x20000000u;
              *((_DWORD *)this + 35) = v61;
            }
            if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_94;
        goto LABEL_72;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_72;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_98;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_108;
        goto LABEL_72;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_112;
        goto LABEL_72;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_72;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_116;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_72;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_126;
      case 9u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_72;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_136;
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x2Eu:
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x40u:
      case 0x41u:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x45u:
        goto LABEL_16;
      case 0x14u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_147;
        goto LABEL_72;
      case 0x15u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_152;
        goto LABEL_72;
      case 0x16u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_157;
        goto LABEL_72;
      case 0x17u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_162;
        goto LABEL_72;
      case 0x18u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_167;
        goto LABEL_72;
      case 0x19u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_172;
        goto LABEL_72;
      case 0x1Au:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_177;
        goto LABEL_72;
      case 0x1Bu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_182;
        goto LABEL_72;
      case 0x1Cu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_187;
        goto LABEL_72;
      case 0x1Du:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_192;
        goto LABEL_72;
      case 0x32u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_197;
        goto LABEL_72;
      case 0x33u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_202;
        goto LABEL_72;
      case 0x34u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_207;
        goto LABEL_72;
      case 0x35u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_212;
        goto LABEL_72;
      case 0x3Cu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_217;
        goto LABEL_72;
      case 0x3Du:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_222;
        goto LABEL_72;
      case 0x3Eu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_227;
        goto LABEL_72;
      case 0x3Fu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_232;
        goto LABEL_72;
      case 0x46u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_237;
        goto LABEL_72;
      case 0x47u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_72;
        goto LABEL_242;
      default:
        if (TagFallback >> 3 == 80)
        {
          v6 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            v10 = (char *)*((_QWORD *)a2 + 1);
            v9 = *((_QWORD *)a2 + 2);
            goto LABEL_247;
          }
        }
        else
        {
LABEL_16:
          v6 = TagFallback & 7;
        }
LABEL_72:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 228);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 228);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 136), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 112), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (uint64_t)a2, *(double *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (uint64_t)a2, *(double *)(v5 + 128), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, (uint64_t)a2, *(double *)(v5 + 144), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, (uint64_t)a2, *(double *)(v5 + 152), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, (uint64_t)a2, *(double *)(v5 + 160), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (uint64_t)a2, *(double *)(v5 + 168), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_58;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, (uint64_t)a2, *(double *)(v5 + 176), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_59;
  }
LABEL_58:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, (uint64_t)a2, *(double *)(v5 + 184), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_60;
  }
LABEL_59:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, (uint64_t)a2, *(double *)(v5 + 192), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_61;
  }
LABEL_60:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, (uint64_t)a2, *(double *)(v5 + 200), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, (uint64_t)a2, *(double *)(v5 + 208), a3);
  v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, (uint64_t)a2, *(double *)(v5 + 216), a3);
  if ((*(_DWORD *)(v5 + 228) & 0x20000000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, *(unsigned int *)(v5 + 140), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::ByteSize(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  unsigned int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;

  v2 = *((_DWORD *)this + 57);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_46;
  }
  if ((v2 & 1) != 0)
  {
    v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_
                                                               + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = v7 + v8 + 1;
    v2 = *((_DWORD *)this + 57);
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      v2 = *((_DWORD *)this + 57);
    }
    else
    {
      v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
    v3 += 9;
  if ((v2 & 8) != 0)
  {
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v11 & 0x80000000) != 0)
    {
      v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      v2 = *((_DWORD *)this + 57);
    }
    else
    {
      v12 = 2;
    }
    v3 += v12;
  }
  v13 = v3 + 9;
  if ((v2 & 0x10) == 0)
    v13 = v3;
  if ((v2 & 0x20) != 0)
    v4 = v13 + 9;
  else
    v4 = v13;
  if ((v2 & 0x40) != 0)
  {
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      v2 = *((_DWORD *)this + 57);
    }
    else
    {
      v15 = 2;
    }
    v4 = (v15 + v4);
  }
  if ((v2 & 0x80) != 0)
  {
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 57);
    }
    else
    {
      v17 = 2;
    }
    v4 = (v17 + v4);
  }
LABEL_46:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 34);
      if ((v18 & 0x80000000) != 0)
      {
        v19 = 11;
      }
      else if (v18 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
        v2 = *((_DWORD *)this + 57);
      }
      else
      {
        v19 = 2;
      }
      LODWORD(v4) = v19 + v4;
    }
    v20 = v4 + 10;
    if ((v2 & 0x200) == 0)
      v20 = v4;
    if ((v2 & 0x400) != 0)
      v20 += 10;
    if ((v2 & 0x800) != 0)
      v20 += 10;
    if ((v2 & 0x1000) != 0)
      v20 += 10;
    if ((v2 & 0x2000) != 0)
      v20 += 10;
    if ((v2 & 0x4000) != 0)
      v20 += 10;
    if ((v2 & 0x8000) != 0)
      v4 = v20 + 10;
    else
      v4 = v20;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    v21 = v4 + 10;
    if ((v2 & 0x10000) == 0)
      v21 = v4;
    if ((v2 & 0x20000) != 0)
      v21 += 10;
    if ((v2 & 0x40000) != 0)
      v21 += 10;
    if ((v2 & 0x80000) != 0)
      v21 += 10;
    if ((v2 & 0x100000) != 0)
      v21 += 10;
    if ((v2 & 0x200000) != 0)
      v21 += 10;
    if ((v2 & 0x400000) != 0)
      v21 += 10;
    if ((v2 & 0x800000) != 0)
      v4 = v21 + 10;
    else
      v4 = v21;
  }
  if (HIBYTE(v2))
  {
    v22 = v4 + 10;
    if ((v2 & 0x1000000) == 0)
      v22 = v4;
    if ((v2 & 0x2000000) != 0)
      v22 += 10;
    if ((v2 & 0x4000000) != 0)
      v22 += 10;
    if ((v2 & 0x8000000) != 0)
      v22 += 10;
    if ((v2 & 0x10000000) != 0)
      v4 = v22 + 10;
    else
      v4 = v22;
    if ((v2 & 0x20000000) != 0)
    {
      v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
      if ((v23 & 0x80000000) != 0)
      {
        v24 = 12;
      }
      else if (v23 >= 0x80)
      {
        v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 2;
      }
      else
      {
        v24 = 3;
      }
      v4 = (v24 + v4);
    }
  }
  *((_DWORD *)this + 56) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::Swap(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    v4 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    v5 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v2;
    v6 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v6;
    v7 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v7;
    v8 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v8;
    v9 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v9;
    v10 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v10;
    v11 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v11;
    v12 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v12;
    v13 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v13;
    v14 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v14;
    v15 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v15;
    v16 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v16;
    v17 = *((_QWORD *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v17;
    v18 = *((_QWORD *)this + 20);
    *((_QWORD *)this + 20) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v18;
    v19 = *((_QWORD *)this + 21);
    *((_QWORD *)this + 21) = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 21) = v19;
    v20 = *((_QWORD *)this + 22);
    *((_QWORD *)this + 22) = *((_QWORD *)a2 + 22);
    *((_QWORD *)a2 + 22) = v20;
    v21 = *((_QWORD *)this + 23);
    *((_QWORD *)this + 23) = *((_QWORD *)a2 + 23);
    *((_QWORD *)a2 + 23) = v21;
    v22 = *((_QWORD *)this + 24);
    *((_QWORD *)this + 24) = *((_QWORD *)a2 + 24);
    *((_QWORD *)a2 + 24) = v22;
    v23 = *((_QWORD *)this + 25);
    *((_QWORD *)this + 25) = *((_QWORD *)a2 + 25);
    *((_QWORD *)a2 + 25) = v23;
    v24 = *((_QWORD *)this + 26);
    *((_QWORD *)this + 26) = *((_QWORD *)a2 + 26);
    *((_QWORD *)a2 + 26) = v24;
    result = *((double *)this + 27);
    *((_QWORD *)this + 27) = *((_QWORD *)a2 + 27);
    *((double *)a2 + 27) = result;
    LODWORD(v2) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v2;
    LODWORD(v2) = *((_DWORD *)this + 57);
    *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
    *((_DWORD *)a2 + 57) = v2;
    LODWORD(v2) = *((_DWORD *)this + 56);
    *((_DWORD *)this + 56) = *((_DWORD *)a2 + 56);
    *((_DWORD *)a2 + 56) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.EstimatorActivity");
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  double result;

  *((_DWORD *)this + 39) = 0;
  *((_DWORD *)this + 40) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_WORD *)this + 76) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::NrParameters *CoreNavigation::CLP::LogEntry::Raven::NrParameters::NrParameters(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  *(_QWORD *)this = &off_1E25BF728;
  *((_DWORD *)this + 39) = 0;
  *((_DWORD *)this + 40) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_WORD *)this + 76) = 0;
  CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(this, a2);
  return this;
}

void sub_18D0A9BCC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrParameters::~NrParameters(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF728;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrParameters *)CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::NrParameters::~NrParameters(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::NrParameters::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrParameters *)CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 156) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::New(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF728;
  *(_DWORD *)(v1 + 156) = 0;
  *(_DWORD *)(v1 + 160) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_WORD *)(v1 + 152) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  unsigned __int8 *v34;
  unsigned __int8 *v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  unsigned __int8 *v38;
  unsigned int v39[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_51;
        *((_DWORD *)this + 40) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v39[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39))return 0;
        }
        else
        {
          v39[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
        goto LABEL_63;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_51;
LABEL_63:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 2u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_67:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 4u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_71:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 8u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v9 || *v20 != 40)
          continue;
        v10 = v20 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_75:
        v39[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!(_DWORD)result)
            return result;
          v21 = v39[0];
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v10;
          v22 = v10 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_BYTE *)this + 152) = v21 != 0;
        *((_DWORD *)this + 40) |= 0x10u;
        if ((unint64_t)v22 >= v9 || *v22 != 48)
          continue;
        v11 = v22 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_83:
        v39[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!(_DWORD)result)
            return result;
          v24 = v39[0];
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v24 = *v11;
          v25 = v11 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_BYTE *)this + 153) = v24 != 0;
        *((_DWORD *)this + 40) |= 0x20u;
        if ((unint64_t)v25 >= v9 || *v25 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_91:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x40u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_95:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x80u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_99:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x100u;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_103:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x200u;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_107:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x400u;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_111:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x800u;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_115:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x1000u;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 != 113)
          continue;
        *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_119:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x2000u;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 121)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_123:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x4000u;
        v34 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v34 < 2 || *v34 != 129 || v34[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 2;
LABEL_128:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 14) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x8000u;
        v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v35 < 2 || *v35 != 137 || v35[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 2;
LABEL_133:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 15) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x10000u;
        v36 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v36 < 2 || *v36 != 145 || v36[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 2;
LABEL_138:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 16) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x20000u;
        v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v37 < 2 || *v37 != 153 || v37[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v37 + 2;
LABEL_143:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0;
        *((_QWORD *)this + 17) = *(_QWORD *)v39;
        *((_DWORD *)this + 40) |= 0x40000u;
        v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v38 < 2 || *v38 != 161 || v38[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 2;
LABEL_148:
        *(_QWORD *)v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) != 0)
        {
          *((_QWORD *)this + 18) = *(_QWORD *)v39;
          *((_DWORD *)this + 40) |= 0x80000u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_51;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_51;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_51;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_91;
        goto LABEL_51;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_95;
        goto LABEL_51;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_99;
        goto LABEL_51;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_103;
        goto LABEL_51;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_107;
        goto LABEL_51;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_111;
        goto LABEL_51;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_115;
        goto LABEL_51;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_119;
        goto LABEL_51;
      case 0xFu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_123;
        goto LABEL_51;
      case 0x10u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_128;
        goto LABEL_51;
      case 0x11u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_133;
        goto LABEL_51;
      case 0x12u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_138;
        goto LABEL_51;
      case 0x13u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_143;
        goto LABEL_51;
      case 0x14u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_51;
        goto LABEL_148;
      default:
        v6 = TagFallback & 7;
LABEL_51:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 160);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 160);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 152), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 153), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (uint64_t)a2, *(double *)(v5 + 112), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 128), a3);
  v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 144), a3);
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(v5 + 136), a3);
  if ((*(_DWORD *)(v5 + 160) & 0x80000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 144), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::ByteSize(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;

  v2 = *((_DWORD *)this + 40);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_
                                                                 + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 40);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 2;
    if ((v2 & 0x20) != 0)
      v3 += 2;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v9 = result + 9;
    if ((v2 & 0x100) == 0)
      v9 = result;
    if ((v2 & 0x200) != 0)
      v9 += 9;
    if ((v2 & 0x400) != 0)
      v9 += 9;
    if ((v2 & 0x800) != 0)
      v9 += 9;
    if ((v2 & 0x1000) != 0)
      v9 += 9;
    if ((v2 & 0x2000) != 0)
      v9 += 9;
    if ((v2 & 0x4000) != 0)
      v9 += 9;
    if ((v2 & 0x8000) != 0)
      result = v9 + 10;
    else
      result = v9;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    v10 = result + 10;
    if ((v2 & 0x10000) == 0)
      v10 = result;
    if ((v2 & 0x20000) != 0)
      v10 += 10;
    if ((v2 & 0x40000) != 0)
      v10 += 10;
    if ((v2 & 0x80000) != 0)
      result = v10 + 10;
    else
      result = v10;
  }
  *((_DWORD *)this + 39) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::NrParameters *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::Swap(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LOBYTE(v2) = *((_BYTE *)this + 152);
    *((_BYTE *)this + 152) = *((_BYTE *)a2 + 152);
    *((_BYTE *)a2 + 152) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 153);
    *((_BYTE *)this + 153) = *((_BYTE *)a2 + 153);
    *((_BYTE *)a2 + 153) = v2;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    v11 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    v12 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v12;
    v13 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v13;
    v14 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v14;
    v15 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v15;
    v16 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v16;
    v17 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v17;
    v18 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v18;
    result = *((double *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((double *)a2 + 18) = result;
    LODWORD(v2) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v2;
    LODWORD(v2) = *((_DWORD *)this + 39);
    *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::NrParameters::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.NrParameters");
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  double result;

  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_WORD *)this + 44) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::NrBiases *CoreNavigation::CLP::LogEntry::Raven::NrBiases::NrBiases(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  *(_QWORD *)this = &off_1E25BFF98;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_WORD *)this + 44) = 0;
  CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(this, a2);
  return this;
}

void sub_18D0AAD10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrBiases::~NrBiases(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFF98;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrBiases *)CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::NrBiases::~NrBiases(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::NrBiases::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrBiases *)CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::New(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFF98;
  *(_DWORD *)(v1 + 92) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_WORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  unsigned int v18;
  _BYTE *v19;
  uint64_t result;
  unsigned int v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  unsigned int v31[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_35;
        *((_DWORD *)this + 24) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v31[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31))return 0;
        }
        else
        {
          v31[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v17 >= v9 || *v17 != 16)
          continue;
        v10 = v17 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_47;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_47:
        v31[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
          if (!(_DWORD)result)
            return result;
          v18 = v31[0];
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v10;
          v19 = v10 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 88) = v18 != 0;
        *((_DWORD *)this + 24) |= 2u;
        if ((unint64_t)v19 >= v9 || *v19 != 24)
          continue;
        v11 = v19 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_55:
        v31[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
          if (!(_DWORD)result)
            return result;
          v21 = v31[0];
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v11;
          v22 = v11 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_BYTE *)this + 89) = v21 != 0;
        *((_DWORD *)this + 24) |= 4u;
        if ((unint64_t)v22 >= v9 || *v22 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_63:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 8u;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_67:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x10u;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_71:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x20u;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_75:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x40u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_79:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x80u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_83:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x100u;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_87:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x200u;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_91:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v31;
        *((_DWORD *)this + 24) |= 0x400u;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_95:
        *(_QWORD *)v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v31;
          *((_DWORD *)this + 24) |= 0x800u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_35;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_35;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_35;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_35;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_75;
        goto LABEL_35;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_79;
        goto LABEL_35;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_83;
        goto LABEL_35;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_87;
        goto LABEL_35;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_91;
        goto LABEL_35;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_35;
        goto LABEL_95;
      default:
        v6 = TagFallback & 7;
LABEL_35:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 88), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 89), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 96) & 0x800) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::ByteSize(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  unsigned int v9;

  v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_
                                                                 + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 24);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 2;
    if ((v2 & 4) != 0)
      v3 += 2;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v9 = result + 9;
    if ((v2 & 0x100) == 0)
      v9 = result;
    if ((v2 & 0x200) != 0)
      v9 += 9;
    if ((v2 & 0x400) != 0)
      v9 += 9;
    if ((v2 & 0x800) != 0)
      result = v9 + 9;
    else
      result = v9;
  }
  *((_DWORD *)this + 23) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::NrBiases *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::Swap(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 88);
    *((_BYTE *)this + 88) = *((_BYTE *)a2 + 88);
    *((_BYTE *)a2 + 88) = v2;
    LOBYTE(v2) = *((_BYTE *)this + 89);
    *((_BYTE *)this + 89) = *((_BYTE *)a2 + 89);
    *((_BYTE *)a2 + 89) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v2;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::NrBiases::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.NrBiases");
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::EstimatorState *CoreNavigation::CLP::LogEntry::Raven::EstimatorState::EstimatorState(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  *(_QWORD *)this = &off_1E25BF9F8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(this, a2);
  return this;
}

void sub_18D0AB94C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorState::~EstimatorState(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  *(_QWORD *)this = &off_1E25BF9F8;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::~EstimatorState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 6);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 7);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 8);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = *((_QWORD *)this + 9);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = *((_QWORD *)this + 10);
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::New(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF9F8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 132);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 132);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  *(_DWORD *)(v1 + 132) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 132);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 132);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  *(_DWORD *)(v1 + 132) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(_QWORD *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_QWORD *)(v1 + 72) = 0;
    *(_QWORD *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = this;
  if (*(_BYTE *)(this + 60))
  {
    if ((*(_BYTE *)(this + 60) & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
    }
    *(_QWORD *)(v1 + 48) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  _BYTE *v35;
  uint64_t v36;
  char *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _BYTE *v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  int v47;
  int v48;
  _BYTE *v49;
  uint64_t v50;
  char *v51;
  int v52;
  int v53;
  int v54;
  int v55;
  _BYTE *v56;
  uint64_t v57;
  char *v58;
  int v59;
  int v60;
  int v61;
  int v62;
  _BYTE *v63;
  uint64_t v64;
  char *v65;
  int v66;
  int v67;
  int v68;
  int v69;
  _BYTE *v70;
  uint64_t v71;
  char *v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t result;
  unsigned int v78;

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v78 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
LABEL_43:
        *((_DWORD *)this + 23) |= 2u;
        v15 = *((_QWORD *)this + 2);
        if (!v15)
        {
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E25BF7A0;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *(_OWORD *)(v15 + 40) = 0u;
          *(_OWORD *)(v15 + 56) = 0u;
          *(_OWORD *)(v15 + 72) = 0u;
          *(_QWORD *)(v15 + 88) = 0;
          *((_QWORD *)this + 2) = v15;
        }
        v78 = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::UserPosition *)v15, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v19 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v19, 1);
        v20 = v19 - 1;
        if (v20 < 0 == v12)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_57:
        *((_DWORD *)this + 23) |= 4u;
        v22 = *((_QWORD *)this + 3);
        if (!v22)
        {
          v22 = operator new();
          *(_QWORD *)v22 = &off_1E25BF818;
          *(_OWORD *)(v22 + 8) = 0u;
          *(_OWORD *)(v22 + 24) = 0u;
          *(_OWORD *)(v22 + 40) = 0u;
          *(_OWORD *)(v22 + 56) = 0u;
          *(_OWORD *)(v22 + 72) = 0u;
          *(_OWORD *)(v22 + 88) = 0u;
          *(_OWORD *)(v22 + 104) = 0u;
          *(_OWORD *)(v22 + 120) = 0u;
          *((_QWORD *)this + 3) = v22;
        }
        v78 = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)v22, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v12)
          *((_DWORD *)a2 + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_71:
        *((_DWORD *)this + 23) |= 8u;
        v29 = *((_QWORD *)this + 4);
        if (!v29)
        {
          v29 = operator new();
          *(_QWORD *)v29 = &off_1E25BF908;
          *(_OWORD *)(v29 + 8) = 0u;
          *(_OWORD *)(v29 + 24) = 0u;
          *(_OWORD *)(v29 + 40) = 0u;
          *(_OWORD *)(v29 + 56) = 0u;
          *(_OWORD *)(v29 + 72) = 0u;
          *(_QWORD *)(v29 + 88) = 0;
          *((_QWORD *)this + 4) = v29;
        }
        v78 = 0;
        v30 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)a2 + 14);
        v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)v29, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v33 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v12)
          *((_DWORD *)a2 + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_85:
        *((_DWORD *)this + 23) |= 0x10u;
        v36 = *((_QWORD *)this + 5);
        if (!v36)
        {
          v36 = operator new();
          *(_QWORD *)v36 = &off_1E25BF980;
          *(_OWORD *)(v36 + 8) = 0u;
          *(_OWORD *)(v36 + 24) = 0u;
          *(_OWORD *)(v36 + 40) = 0u;
          *(_OWORD *)(v36 + 56) = 0u;
          *(_OWORD *)(v36 + 72) = 0u;
          *(_QWORD *)(v36 + 88) = 0;
          *((_QWORD *)this + 5) = v36;
        }
        v78 = 0;
        v37 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v37;
          *((_QWORD *)a2 + 1) = v37 + 1;
        }
        v38 = *((_DWORD *)a2 + 14);
        v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)v36, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v40 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v40, 1);
        v41 = v40 - 1;
        if (v41 < 0 == v12)
          *((_DWORD *)a2 + 14) = v41;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_99:
        *((_DWORD *)this + 23) |= 0x20u;
        v43 = *((_QWORD *)this + 6);
        if (!v43)
        {
          v43 = operator new();
          *(_QWORD *)v43 = &off_1E25BF890;
          *(_OWORD *)(v43 + 8) = 0u;
          *(_OWORD *)(v43 + 24) = 0u;
          *(_OWORD *)(v43 + 40) = 0u;
          *(_OWORD *)(v43 + 56) = 0u;
          *(_OWORD *)(v43 + 72) = 0u;
          *(_OWORD *)(v43 + 88) = 0u;
          *(_OWORD *)(v43 + 104) = 0u;
          *(_OWORD *)(v43 + 120) = 0u;
          *((_QWORD *)this + 6) = v43;
        }
        v78 = 0;
        v44 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v44;
          *((_QWORD *)a2 + 1) = v44 + 1;
        }
        v45 = *((_DWORD *)a2 + 14);
        v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)v43, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v47 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v47, 1);
        v48 = v47 - 1;
        if (v48 < 0 == v12)
          *((_DWORD *)a2 + 14) = v48;
        v49 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v49 >= *((_QWORD *)a2 + 2) || *v49 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v49 + 1;
LABEL_113:
        *((_DWORD *)this + 23) |= 0x40u;
        v50 = *((_QWORD *)this + 7);
        if (!v50)
        {
          v50 = operator new();
          *(_QWORD *)v50 = &off_1E25BFC50;
          *(_OWORD *)(v50 + 8) = 0u;
          *(_OWORD *)(v50 + 24) = 0u;
          *(_OWORD *)(v50 + 40) = 0u;
          *(_OWORD *)(v50 + 56) = 0u;
          *(_OWORD *)(v50 + 72) = 0u;
          *(_QWORD *)(v50 + 88) = 0;
          *((_QWORD *)this + 7) = v50;
        }
        v78 = 0;
        v51 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v51 >= *((_QWORD *)a2 + 2) || *v51 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v51;
          *((_QWORD *)a2 + 1) = v51 + 1;
        }
        v52 = *((_DWORD *)a2 + 14);
        v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)v50, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v54 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v54, 1);
        v55 = v54 - 1;
        if (v55 < 0 == v12)
          *((_DWORD *)a2 + 14) = v55;
        v56 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v56 >= *((_QWORD *)a2 + 2) || *v56 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v56 + 1;
LABEL_127:
        *((_DWORD *)this + 23) |= 0x80u;
        v57 = *((_QWORD *)this + 8);
        if (!v57)
        {
          v57 = operator new();
          *(_QWORD *)v57 = &off_1E25BFD40;
          *(_OWORD *)(v57 + 8) = 0u;
          *(_OWORD *)(v57 + 24) = 0u;
          *(_OWORD *)(v57 + 40) = 0u;
          *(_OWORD *)(v57 + 56) = 0u;
          *(_OWORD *)(v57 + 72) = 0u;
          *(_QWORD *)(v57 + 88) = 0;
          *((_QWORD *)this + 8) = v57;
        }
        v78 = 0;
        v58 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v58 >= *((_QWORD *)a2 + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v58;
          *((_QWORD *)a2 + 1) = v58 + 1;
        }
        v59 = *((_DWORD *)a2 + 14);
        v60 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v59 + 1;
        if (v59 >= v60)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)v57, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v61 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v61, 1);
        v62 = v61 - 1;
        if (v62 < 0 == v12)
          *((_DWORD *)a2 + 14) = v62;
        v63 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v63 >= *((_QWORD *)a2 + 2) || *v63 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v63 + 1;
LABEL_141:
        *((_DWORD *)this + 23) |= 0x100u;
        v64 = *((_QWORD *)this + 9);
        if (!v64)
        {
          v64 = operator new();
          *(_QWORD *)v64 = &off_1E25BFE30;
          *(_OWORD *)(v64 + 8) = 0u;
          *(_OWORD *)(v64 + 24) = 0u;
          *(_OWORD *)(v64 + 40) = 0u;
          *(_OWORD *)(v64 + 56) = 0u;
          *(_OWORD *)(v64 + 72) = 0u;
          *(_QWORD *)(v64 + 88) = 0;
          *((_QWORD *)this + 9) = v64;
        }
        v78 = 0;
        v65 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v65 >= *((_QWORD *)a2 + 2) || *v65 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v65;
          *((_QWORD *)a2 + 1) = v65 + 1;
        }
        v66 = *((_DWORD *)a2 + 14);
        v67 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v66 + 1;
        if (v66 >= v67)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)v64, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v68 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v68, 1);
        v69 = v68 - 1;
        if (v69 < 0 == v12)
          *((_DWORD *)a2 + 14) = v69;
        v70 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v70 >= *((_QWORD *)a2 + 2) || *v70 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v70 + 1;
LABEL_155:
        *((_DWORD *)this + 23) |= 0x200u;
        v71 = *((_QWORD *)this + 10);
        if (!v71)
        {
          v71 = operator new();
          *(_QWORD *)v71 = &off_1E25BFEA8;
          *(_OWORD *)(v71 + 8) = 0u;
          *(_OWORD *)(v71 + 24) = 0u;
          *(_OWORD *)(v71 + 40) = 0u;
          *(_QWORD *)(v71 + 56) = 0;
          *((_QWORD *)this + 10) = v71;
        }
        v78 = 0;
        v72 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v72 >= *((_QWORD *)a2 + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0;
        }
        else
        {
          v78 = *v72;
          *((_QWORD *)a2 + 1) = v72 + 1;
        }
        v73 = *((_DWORD *)a2 + 14);
        v74 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v73 + 1;
        if (v73 >= v74)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)v71, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v75 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v75, 1);
        v76 = v75 - 1;
        if (v76 < 0 == v12)
          *((_DWORD *)a2 + 14) = v76;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_57;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_71;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_85;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_99;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_113;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_127;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_141;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        goto LABEL_155;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_18:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_24;
  }
LABEL_21:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_27;
  }
LABEL_24:
  v11 = *(_QWORD *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_27:
  v12 = *(_QWORD *)(v5 + 48);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_33;
  }
LABEL_30:
  v13 = *(_QWORD *)(v5 + 56);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_36;
  }
LABEL_33:
  v14 = *(_QWORD *)(v5 + 64);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    goto LABEL_39;
  }
LABEL_36:
  v15 = *(_QWORD *)(v5 + 72);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v15 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
  {
LABEL_39:
    v16 = *(_QWORD *)(v5 + 80);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v16 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 80);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v16, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::ByteSize(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  int v2;
  uint64_t v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::Raven::UserPosition *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  CoreNavigation::CLP::LogEntry::Raven::UserVelocity *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::Raven::DevicePosition *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  int v43;

  v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_61;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                             + 8);
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = (v6 + v7 + 1);
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v8 = (CoreNavigation::CLP::LogEntry::Raven::UserPosition *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::Raven::UserPosition **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                  + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::UserPosition::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 = (v3 + v10 + v11 + 1);
    v2 = *((_DWORD *)this + 23);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v12 = (CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)*((_QWORD *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v12 = *(CoreNavigation::CLP::LogEntry::Raven::UserVelocity **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 24);
    }
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::UserVelocity::ByteSize(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v3 = (v3 + v14 + v15 + 1);
    v2 = *((_DWORD *)this + 23);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_37;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v16 = (CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)*((_QWORD *)this + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v16 = *(CoreNavigation::CLP::LogEntry::Raven::DevicePosition **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 32);
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DevicePosition::ByteSize(v16);
  v18 = (int)v17;
  if (v17 >= 0x80)
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  else
    v19 = 1;
  v3 = (v3 + v18 + v19 + 1);
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_43;
  }
LABEL_37:
  v20 = (CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)*((_QWORD *)this + 5);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v20 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 40);
  }
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::ByteSize(v20);
  v22 = (int)v21;
  if (v21 >= 0x80)
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  else
    v23 = 1;
  v3 = (v3 + v22 + v23 + 1);
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_23;
    goto LABEL_49;
  }
LABEL_43:
  v24 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)*((_QWORD *)this + 6);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v24 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 48);
  }
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::ByteSize(v24);
  v26 = (int)v25;
  if (v25 >= 0x80)
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
  else
    v27 = 1;
  v3 = (v3 + v26 + v27 + 1);
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0)
      goto LABEL_61;
    goto LABEL_55;
  }
LABEL_49:
  v28 = (CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)*((_QWORD *)this + 7);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    v28 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                       + 56);
  }
  v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::ByteSize(v28);
  v30 = (int)v29;
  if (v29 >= 0x80)
    v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
  else
    v31 = 1;
  v3 = (v3 + v30 + v31 + 1);
  v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x80) != 0)
  {
LABEL_55:
    v32 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)*((_QWORD *)this + 8);
    if (!v32)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      v32 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                              + 64);
    }
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::ByteSize(v32);
    v34 = (int)v33;
    if (v33 >= 0x80)
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    else
      v35 = 1;
    v3 = (v3 + v34 + v35 + 1);
    v2 = *((_DWORD *)this + 23);
  }
LABEL_61:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v36 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)*((_QWORD *)this + 9);
      if (!v36)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v36 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                       + 72);
      }
      v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::ByteSize(v36);
      v38 = (int)v37;
      if (v37 >= 0x80)
        v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      else
        v39 = 1;
      v3 = (v3 + v38 + v39 + 1);
      v2 = *((_DWORD *)this + 23);
    }
    if ((v2 & 0x200) != 0)
    {
      v40 = (CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)*((_QWORD *)this + 10);
      if (!v40)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v40 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                       + 80);
      }
      v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::ByteSize(v40);
      v42 = (int)v41;
      if (v41 >= 0x80)
        v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
      else
        v43 = 1;
      v3 = (v3 + v42 + v43 + 1);
    }
  }
  *((_DWORD *)this + 22) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::UserPosition *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 23) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::UserPosition *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 23) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 23) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((double *)a2 + 9);
      *((_DWORD *)v3 + 23) |= 0x100u;
      *((double *)v3 + 9) = result;
      v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((double *)a2 + 10);
      *((_DWORD *)v3 + 23) |= 0x200u;
      *((double *)v3 + 10) = result;
    }
  }
  return result;
}

void sub_18D0AD27C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::UserVelocity *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 33);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 33) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 33) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_29:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 33) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 33) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_32:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 33) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 33) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x20) != 0)
    goto LABEL_32;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_33:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 33) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 33) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 33);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) != 0)
  {
    result = *((double *)a2 + 9);
    *((_DWORD *)v3 + 33) |= 0x100u;
    *((double *)v3 + 9) = result;
    v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  result = *((double *)a2 + 10);
  *((_DWORD *)v3 + 33) |= 0x200u;
  *((double *)v3 + 10) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_38;
  }
LABEL_37:
  result = *((double *)a2 + 11);
  *((_DWORD *)v3 + 33) |= 0x400u;
  *((double *)v3 + 11) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_38:
  result = *((double *)a2 + 12);
  *((_DWORD *)v3 + 33) |= 0x800u;
  *((double *)v3 + 12) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_39:
  result = *((double *)a2 + 13);
  *((_DWORD *)v3 + 33) |= 0x1000u;
  *((double *)v3 + 13) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      return result;
    goto LABEL_21;
  }
LABEL_40:
  result = *((double *)a2 + 14);
  *((_DWORD *)v3 + 33) |= 0x2000u;
  *((double *)v3 + 14) = result;
  if ((*((_DWORD *)a2 + 33) & 0x4000) == 0)
    return result;
LABEL_21:
  result = *((double *)a2 + 15);
  *((_DWORD *)v3 + 33) |= 0x4000u;
  *((double *)v3 + 15) = result;
  return result;
}

void sub_18D0AD554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DevicePosition *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 23) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 23) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 23) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((double *)a2 + 9);
      *((_DWORD *)v3 + 23) |= 0x100u;
      *((double *)v3 + 9) = result;
      v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((double *)a2 + 10);
      *((_DWORD *)v3 + 23) |= 0x200u;
      *((double *)v3 + 10) = result;
    }
  }
  return result;
}

void sub_18D0AD784(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 23) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 23) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 23) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((double *)a2 + 9);
      *((_DWORD *)v3 + 23) |= 0x100u;
      *((double *)v3 + 9) = result;
      v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((double *)a2 + 10);
      *((_DWORD *)v3 + 23) |= 0x200u;
      *((double *)v3 + 10) = result;
    }
  }
  return result;
}

void sub_18D0AD9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 33);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 33) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 33) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_30;
  }
LABEL_29:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 33) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_31;
  }
LABEL_30:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 33) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_32:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 33) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 33) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x20) != 0)
    goto LABEL_32;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_33:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 33) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 33) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 33);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) != 0)
  {
    result = *((double *)a2 + 9);
    *((_DWORD *)v3 + 33) |= 0x100u;
    *((double *)v3 + 9) = result;
    v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  result = *((double *)a2 + 10);
  *((_DWORD *)v3 + 33) |= 0x200u;
  *((double *)v3 + 10) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_38;
  }
LABEL_37:
  result = *((double *)a2 + 11);
  *((_DWORD *)v3 + 33) |= 0x400u;
  *((double *)v3 + 11) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_39;
  }
LABEL_38:
  result = *((double *)a2 + 12);
  *((_DWORD *)v3 + 33) |= 0x800u;
  *((double *)v3 + 12) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_40;
  }
LABEL_39:
  result = *((double *)a2 + 13);
  *((_DWORD *)v3 + 33) |= 0x1000u;
  *((double *)v3 + 13) = result;
  v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      return result;
    goto LABEL_21;
  }
LABEL_40:
  result = *((double *)a2 + 14);
  *((_DWORD *)v3 + 33) |= 0x2000u;
  *((double *)v3 + 14) = result;
  if ((*((_DWORD *)a2 + 33) & 0x4000) == 0)
    return result;
LABEL_21:
  result = *((double *)a2 + 15);
  *((_DWORD *)v3 + 33) |= 0x4000u;
  *((double *)v3 + 15) = result;
  return result;
}

void sub_18D0ADC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 23) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 23) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 23) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((double *)a2 + 9);
      *((_DWORD *)v3 + 23) |= 0x100u;
      *((double *)v3 + 9) = result;
      v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((double *)a2 + 10);
      *((_DWORD *)v3 + 23) |= 0x200u;
      *((double *)v3 + 10) = result;
    }
  }
  return result;
}

void sub_18D0ADEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 23) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 23) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 23) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((double *)a2 + 9);
      *((_DWORD *)v3 + 23) |= 0x100u;
      *((double *)v3 + 9) = result;
      v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((double *)a2 + 10);
      *((_DWORD *)v3 + 23) |= 0x200u;
      *((double *)v3 + 10) = result;
    }
  }
  return result;
}

void sub_18D0AE0EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 23) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25C0010;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_
                                                                     + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)v3 + 23) |= 2u;
  *((double *)v3 + 2) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_25:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 23) |= 4u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 8u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_28:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 5);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((double *)v3 + 5) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_29:
  result = *((double *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((double *)v3 + 7) = result;
  v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 8);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((double *)v3 + 8) = result;
    v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      result = *((double *)a2 + 9);
      *((_DWORD *)v3 + 23) |= 0x100u;
      *((double *)v3 + 9) = result;
      v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      result = *((double *)a2 + 10);
      *((_DWORD *)v3 + 23) |= 0x200u;
      *((double *)v3 + 10) = result;
    }
  }
  return result;
}

void sub_18D0AE31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 60);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 60) & 1) != 0)
    {
      *((_DWORD *)v3 + 15) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25C0010;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_
                                                                       + 8);
      }
      result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 15);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)v3 + 15) |= 2u;
    *((double *)v3 + 2) = result;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_19;
    }
LABEL_18:
    result = *((double *)a2 + 3);
    *((_DWORD *)v3 + 15) |= 4u;
    *((double *)v3 + 3) = result;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_20;
    }
LABEL_19:
    result = *((double *)a2 + 4);
    *((_DWORD *)v3 + 15) |= 8u;
    *((double *)v3 + 4) = result;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return result;
      goto LABEL_10;
    }
LABEL_20:
    result = *((double *)a2 + 5);
    *((_DWORD *)v3 + 15) |= 0x10u;
    *((double *)v3 + 5) = result;
    if ((*((_DWORD *)a2 + 15) & 0x20) == 0)
      return result;
LABEL_10:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 15) |= 0x20u;
    *((double *)v3 + 6) = result;
  }
  return result;
}

void sub_18D0AE4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    v11 = *(_QWORD *)(this + 80);
    *(_QWORD *)(this + 80) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::EstimatorState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.EstimatorState");
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::UserPosition *CoreNavigation::CLP::LogEntry::Raven::UserPosition::UserPosition(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  *(_QWORD *)this = &off_1E25BF7A0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(this, a2);
  return this;
}

void sub_18D0AE69C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::UserPosition::~UserPosition(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF7A0;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::UserPosition *)CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::UserPosition::~UserPosition(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::UserPosition::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::UserPosition *)CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::New(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF7A0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_43:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_47:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_55:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_59:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_63:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_67:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_71:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_75:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_55;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_59;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::ByteSize(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  int v2;
  unsigned int v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_
                                                                 + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v8 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v8 = v3;
  if ((v2 & 0x200) != 0)
    v8 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v8;
  else
    result = v3;
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::UserPosition *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::Swap(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::UserPosition::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.UserPosition");
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::UserVelocity *CoreNavigation::CLP::LogEntry::Raven::UserVelocity::UserVelocity(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  *(_QWORD *)this = &off_1E25BF818;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(this, a2);
  return this;
}

void sub_18D0AF17C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::UserVelocity::~UserVelocity(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF818;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::UserVelocity::~UserVelocity(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 128) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::New(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF818;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_41;
        *((_DWORD *)this + 33) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v29[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29))return 0;
        }
        else
        {
          v29[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_53;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_41;
LABEL_53:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_57:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_61:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_65:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_69:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_73:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_77:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_81:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_85:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x200u;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_89:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x400u;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_93:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x800u;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_97:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x1000u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 113)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_101:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 14) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x2000u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 121)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_105:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) != 0)
        {
          *((_QWORD *)this + 15) = *(_QWORD *)v29;
          *((_DWORD *)this + 33) |= 0x4000u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_57;
        goto LABEL_41;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_61;
        goto LABEL_41;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_65;
        goto LABEL_41;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_69;
        goto LABEL_41;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_73;
        goto LABEL_41;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_77;
        goto LABEL_41;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_81;
        goto LABEL_41;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_85;
        goto LABEL_41;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_89;
        goto LABEL_41;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_93;
        goto LABEL_41;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_97;
        goto LABEL_41;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_101;
        goto LABEL_41;
      case 0xFu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_41;
        goto LABEL_105;
      default:
        v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 132);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 120), a3);
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 112), a3);
  if ((*(_DWORD *)(v5 + 132) & 0x4000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 120), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::ByteSize(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  unsigned int v9;

  v2 = *((_DWORD *)this + 33);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_
                                                                 + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 33);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v9 = result + 9;
    if ((v2 & 0x100) == 0)
      v9 = result;
    if ((v2 & 0x200) != 0)
      v9 += 9;
    if ((v2 & 0x400) != 0)
      v9 += 9;
    if ((v2 & 0x800) != 0)
      v9 += 9;
    if ((v2 & 0x1000) != 0)
      v9 += 9;
    if ((v2 & 0x2000) != 0)
      v9 += 9;
    if ((v2 & 0x4000) != 0)
      result = v9 + 9;
    else
      result = v9;
  }
  *((_DWORD *)this + 32) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::Swap(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    v11 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    v12 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v12;
    v13 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v13;
    v14 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v14;
    v15 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v15;
    result = *((double *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((double *)a2 + 15) = result;
    LODWORD(v2) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v2;
    LODWORD(v2) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::UserVelocity::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.UserVelocity");
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DevicePosition *CoreNavigation::CLP::LogEntry::Raven::DevicePosition::DevicePosition(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  *(_QWORD *)this = &off_1E25BF908;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(this, a2);
  return this;
}

void sub_18D0AFF1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DevicePosition::~DevicePosition(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF908;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DevicePosition::~DevicePosition(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::New(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF908;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_43:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_47:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_55:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_59:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_63:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_67:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_71:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_75:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_55;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_59;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  int v2;
  unsigned int v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_
                                                                 + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v8 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v8 = v3;
  if ((v2 & 0x200) != 0)
    v8 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v8;
  else
    result = v3;
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::Swap(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DevicePosition::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DevicePosition");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::DeviceVelocity(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  *(_QWORD *)this = &off_1E25BF980;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(this, a2);
  return this;
}

void sub_18D0B09E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::~DeviceVelocity(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF980;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::~DeviceVelocity(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::New(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF980;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_43:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_47:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_55:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_59:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_63:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_67:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_71:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_75:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_55;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_59;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  int v2;
  unsigned int v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_
                                                                 + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v8 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v8 = v3;
  if ((v2 & 0x200) != 0)
    v8 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v8;
  else
    result = v3;
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceVelocity");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::DeviceAttitude(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  *(_QWORD *)this = &off_1E25BF890;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(this, a2);
  return this;
}

void sub_18D0B14C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::~DeviceAttitude(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BF890;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::~DeviceAttitude(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 128) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::New(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BF890;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_41;
        *((_DWORD *)this + 33) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v29[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29))return 0;
        }
        else
        {
          v29[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_53;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_41;
LABEL_53:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_57:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_61:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_65:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_69:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_73:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_77:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_81:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_85:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x200u;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_89:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x400u;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_93:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x800u;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_97:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x1000u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 113)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_101:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0;
        *((_QWORD *)this + 14) = *(_QWORD *)v29;
        *((_DWORD *)this + 33) |= 0x2000u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 121)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_105:
        *(_QWORD *)v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) != 0)
        {
          *((_QWORD *)this + 15) = *(_QWORD *)v29;
          *((_DWORD *)this + 33) |= 0x4000u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_57;
        goto LABEL_41;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_61;
        goto LABEL_41;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_65;
        goto LABEL_41;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_69;
        goto LABEL_41;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_73;
        goto LABEL_41;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_77;
        goto LABEL_41;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_81;
        goto LABEL_41;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_85;
        goto LABEL_41;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_89;
        goto LABEL_41;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_93;
        goto LABEL_41;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_97;
        goto LABEL_41;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_101;
        goto LABEL_41;
      case 0xFu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_41;
        goto LABEL_105;
      default:
        v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 132);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 120), a3);
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 112), a3);
  if ((*(_DWORD *)(v5 + 132) & 0x4000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 120), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  unsigned int v9;

  v2 = *((_DWORD *)this + 33);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_
                                                                 + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 33);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    v9 = result + 9;
    if ((v2 & 0x100) == 0)
      v9 = result;
    if ((v2 & 0x200) != 0)
      v9 += 9;
    if ((v2 & 0x400) != 0)
      v9 += 9;
    if ((v2 & 0x800) != 0)
      v9 += 9;
    if ((v2 & 0x1000) != 0)
      v9 += 9;
    if ((v2 & 0x2000) != 0)
      v9 += 9;
    if ((v2 & 0x4000) != 0)
      result = v9 + 9;
    else
      result = v9;
  }
  *((_DWORD *)this + 32) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    v11 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    v12 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v12;
    v13 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v13;
    v14 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v14;
    v15 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v15;
    result = *((double *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((double *)a2 + 15) = result;
    LODWORD(v2) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v2;
    LODWORD(v2) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceAttitude");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::DeviceRateGyroBias(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  *(_QWORD *)this = &off_1E25BFC50;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(this, a2);
  return this;
}

void sub_18D0B2264(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::~DeviceRateGyroBias(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFC50;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::~DeviceRateGyroBias(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::New(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFC50;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_43:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_47:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_55:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_59:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_63:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_67:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_71:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_75:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_55;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_59;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  int v2;
  unsigned int v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_
                                                                 + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v8 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v8 = v3;
  if ((v2 & 0x200) != 0)
    v8 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v8;
  else
    result = v3;
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceRateGyroBias");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::DeviceAccelerometerBias(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  *(_QWORD *)this = &off_1E25BFD40;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(this, a2);
  return this;
}

void sub_18D0B2D2C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::~DeviceAccelerometerBias(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFD40;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::~DeviceAccelerometerBias(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::New(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFD40;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_43:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_47:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_55:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_59:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_63:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_67:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_71:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_75:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_55;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_59;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  int v2;
  unsigned int v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_
                                                                 + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v8 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v8 = v3;
  if ((v2 & 0x200) != 0)
    v8 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v8;
  else
    result = v3;
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceAccelerometerBias");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  double result;

  *((_QWORD *)this + 11) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::DeviceAccelerometerScaleFactor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  *(_QWORD *)this = &off_1E25BFE30;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(this, a2);
  return this;
}

void sub_18D0B37F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::~DeviceAccelerometerScaleFactor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFE30;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::~DeviceAccelerometerScaleFactor(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::New(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFE30;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_31;
        *((_DWORD *)this + 23) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_43:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_47:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_51:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_55:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_59:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x20u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_63:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x40u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_67:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x80u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_71:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v24;
        *((_DWORD *)this + 23) |= 0x100u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_75:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_55;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_59;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_63;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_67;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_71;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_75;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 92);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  int v2;
  unsigned int v3;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  unsigned int v8;
  uint64_t result;

  v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_
                                                                 + 8);
      }
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      v6 = (int)v5;
      if (v5 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      else
        v7 = 1;
      v3 = v6 + v7 + 1;
      v2 = *((_DWORD *)this + 23);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v8 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v8 = v3;
  if ((v2 & 0x200) != 0)
    v8 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v8;
  else
    result = v3;
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceAccelerometerScaleFactor");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::DeviceReceiverClockDiscrepancy(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  *(_QWORD *)this = &off_1E25BFEA8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(this, a2);
  return this;
}

void sub_18D0B42A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::~DeviceReceiverClockDiscrepancy(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BFEA8;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::~DeviceReceiverClockDiscrepancy(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::New(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFEA8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t result;
  unsigned int v20[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_23;
        *((_DWORD *)this + 15) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0010;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v20[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20))return 0;
        }
        else
        {
          v20[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_35;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_23;
LABEL_35:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v20;
        *((_DWORD *)this + 15) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_39:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v20;
        *((_DWORD *)this + 15) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_43:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v20;
        *((_DWORD *)this + 15) |= 8u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_47:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v20;
        *((_DWORD *)this + 15) |= 0x10u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_51:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) != 0)
        {
          *((_QWORD *)this + 6) = *(_QWORD *)v20;
          *((_DWORD *)this + 15) |= 0x20u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_39;
        goto LABEL_23;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_43;
        goto LABEL_23;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_47;
        goto LABEL_23;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_23;
        goto LABEL_51;
      default:
        v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 48), a3);
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;

  LOBYTE(v2) = *((_BYTE *)this + 60);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 60) & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_
                                                                 + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 15);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 14) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    result = *((double *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceReceiverClockDiscrepancy");
}

uint64_t sub_18D0B4A80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18D0B4A88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0B4A90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18D0B4A98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D0B4AA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 164);
}

uint64_t sub_18D0B4AA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 288);
}

uint64_t sub_18D0B4AB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 224);
}

uint64_t sub_18D0B4AB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 156);
}

uint64_t sub_18D0B4AC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18D0B4AC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4AD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4AD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_18D0B4AE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4AE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4AF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_18D0B4AF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4B00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4B08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18D0B4B10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_ShutdownFile_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(CoreNavigation::CLP::LogEntry::TropicalSavanna *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_);
  result = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_;
  if (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry::TropicalSavanna *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPTropicalSavannaLogEntry.pb.cc", a4);
  v4 = (_QWORD *)operator new();
  v4[1] = 0;
  v4[2] = 0;
  *v4 = &off_1E25BDD60;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ = (uint64_t)v4;
  v5 = operator new();
  *(_QWORD *)v5 = &off_1E25BDDD8;
  *(_OWORD *)(v5 + 8) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_ = v5;
  v6 = (_QWORD *)operator new();
  v6[3] = 0;
  v6[4] = 0;
  v7 = CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ = (uint64_t)v6;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ + 8) = v6;
  *v6 = &off_1E25BDCE8;
  v6[1] = v7;
  v6[2] = v7;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_ShutdownFile_CoreNavigationCLPTropicalSavannaLogEntry_2eproto, v8);
}

_QWORD *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::LogEntry(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BDD60;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BDD60;
  return this;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDDD8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDDD8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::TropicalSavannaHint(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDCE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDCE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(CoreNavigation::CLP::LogEntry::TropicalSavanna *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0B4D30(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BDD60;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18D0B4D94(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *v3;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *v4;
  const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *v5;
  _BYTE v6[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    *((_DWORD *)v3 + 5) |= 1u;
    v4 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((_QWORD *)v3 + 1);
    if (!v4)
    {
      this = (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)operator new();
      v4 = this;
      *(_QWORD *)this = &off_1E25BDCE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v5 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((_QWORD *)a2 + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
      v5 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_
                                                                                         + 8);
    }
    CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(v4, v5);
  }
}

void sub_18D0B4E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BDD60;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::~LogEntry(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::New(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BDD60;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = this;
  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    this = *(_QWORD *)(this + 8);
    if (this)
      this = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Clear(this);
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(this + 36);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 36);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t result;
  unsigned int v14;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *((_DWORD *)this + 5) |= 1u;
      v6 = *((_QWORD *)this + 1);
      if (!v6)
      {
        v6 = operator new();
        *(_QWORD *)v6 = &off_1E25BDCE8;
        *(_OWORD *)(v6 + 8) = 0u;
        *(_OWORD *)(v6 + 24) = 0u;
        *((_QWORD *)this + 1) = v6;
      }
      v14 = 0;
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14))
          return 0;
      }
      else
      {
        v14 = *v7;
        *((_QWORD *)a2 + 1) = v7 + 1;
      }
      v8 = *((_DWORD *)a2 + 14);
      v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)v6, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v10 = *((_DWORD *)a2 + 14);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (v12 < 0 == v11)
        *((_DWORD *)a2 + 14) = v12;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v5 = *(_QWORD *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto((CoreNavigation::CLP::LogEntry::TropicalSavanna *)this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  uint64_t result;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;

  if ((*((_BYTE *)this + 20) & 1) != 0)
  {
    v3 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(0);
      v3 = *(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_
                                                                                   + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    result = (v5 + v6 + 1);
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *v6;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *v8;
  int v9;
  unsigned int v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      *((_DWORD *)v3 + 9) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDDD8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_
                                                                                 + 8);
      }
      CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_19;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 9) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((_QWORD *)v3 + 2);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDDD8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((_QWORD *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_
                                                                               + 16);
    }
    CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
LABEL_20:
      v10 = *((_DWORD *)a2 + 7);
      if (v10 >= 3)
        __assert_rtn("set_notification", "CoreNavigationCLPTropicalSavannaLogEntry.pb.h", 618, "::CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint_Notification_IsValid(value)");
      *((_DWORD *)v3 + 9) |= 8u;
      *((_DWORD *)v3 + 7) = v10;
      return;
    }
LABEL_19:
    v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 9) |= 4u;
    *((_DWORD *)v3 + 6) = v9;
    if ((*((_DWORD *)a2 + 9) & 8) == 0)
      return;
    goto LABEL_20;
  }
}

void sub_18D0B5510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.TropicalSavanna.LogEntry");
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  *(_QWORD *)this = &off_1E25BDDD8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0B5624(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0B5708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  *(_QWORD *)this = &off_1E25BDDD8;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::~TimeStamp(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::New(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDDD8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.TropicalSavanna.TimeStamp");
}

BOOL CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint_Notification_IsValid(CoreNavigation::CLP::LogEntry::TropicalSavanna *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SharedCtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::TropicalSavannaHint(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  *(_QWORD *)this = &off_1E25BDCE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(this, a2);
  return this;
}

void sub_18D0B5C04(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::~TropicalSavannaHint(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  *(_QWORD *)this = &off_1E25BDCE8;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::~TropicalSavannaHint(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SharedDtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::New(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDCE8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  _BYTE *v25;
  _BYTE *v26;
  uint64_t result;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;

  v4 = (unsigned int *)((char *)this + 24);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
        *((_DWORD *)this + 9) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDDD8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v30 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v13 = *((_DWORD *)a2 + 14);
        v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v15 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v15, 1);
        v17 = v15 - 1;
        if (v17 < 0 == v16)
          *((_DWORD *)a2 + 14) = v17;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
        goto LABEL_33;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
LABEL_33:
        *((_DWORD *)this + 9) |= 2u;
        v19 = *((_QWORD *)this + 2);
        if (!v19)
        {
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E25BDDD8;
          *(_OWORD *)(v19 + 8) = 0u;
          *(_OWORD *)(v19 + 24) = 0u;
          *((_QWORD *)this + 2) = v19;
        }
        v31 = 0;
        v20 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
        }
        else
        {
          v31 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        v21 = *((_DWORD *)a2 + 14);
        v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 < v22)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)v19, a2))
          {
            if (*((_BYTE *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v23 = *((_DWORD *)a2 + 14);
              v16 = __OFSUB__(v23, 1);
              v24 = v23 - 1;
              if (v24 < 0 == v16)
                *((_DWORD *)a2 + 14) = v24;
              v25 = (_BYTE *)*((_QWORD *)a2 + 1);
              v10 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v25 < v10 && *v25 == 24)
              {
                v11 = v25 + 1;
                *((_QWORD *)a2 + 1) = v11;
LABEL_47:
                if ((unint64_t)v11 >= v10 || *v11 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
                  if (!(_DWORD)result)
                    return result;
                  v26 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v10 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v4 = *v11;
                  v26 = v11 + 1;
                  *((_QWORD *)a2 + 1) = v26;
                }
                *((_DWORD *)this + 9) |= 4u;
                if ((unint64_t)v26 < v10 && *v26 == 32)
                {
                  v12 = v26 + 1;
                  *((_QWORD *)a2 + 1) = v12;
LABEL_55:
                  v29 = 0;
                  if ((unint64_t)v12 >= v10 || *v12 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
                    if (!(_DWORD)result)
                      return result;
                    v28 = v29;
                  }
                  else
                  {
                    v28 = *v12;
                    *((_QWORD *)a2 + 1) = v12 + 1;
                  }
                  if (v28 <= 2)
                  {
                    *((_DWORD *)this + 9) |= 8u;
                    *((_DWORD *)this + 7) = v28;
                  }
                  if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    result = 1;
                    *((_BYTE *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_55;
      default:
        v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto((CoreNavigation::CLP::LogEntry::TropicalSavanna *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto((CoreNavigation::CLP::LogEntry::TropicalSavanna *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::ByteSize(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_37;
  }
  if ((*((_BYTE *)this + 36) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 36) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = (v5 + 2);
  v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 16);
    }
    v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(_BYTE *)(v7 + 36))
    {
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if ((v8 & 4) != 0)
        v8 = v9 + 9;
      else
        v8 = v9;
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 = (v3 + v8 + 2);
    v2 = *((_DWORD *)this + 9);
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_37;
    goto LABEL_31;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 9);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_31:
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v12 & 0x80000000) != 0)
    {
      v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else
    {
      v13 = 2;
    }
    v3 = (v13 + v3);
  }
LABEL_37:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::CopyFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *))(*(_QWORD *)this
                                                                                                  + 32))(this);
    CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::IsInitialized(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.TropicalSavanna.TropicalSavannaHint");
}

uint64_t sub_18D0B6460(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D0B6468(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0B6470(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::protobuf_ShutdownFile_CoreNavigationCLPRavenLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Raven *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_);
  result = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry::Raven *this, uint64_t a2, uint64_t a3, const char *a4)
{
  CoreNavigation::CLP::LogEntry::Raven *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);

  v4 = (CoreNavigation::CLP::LogEntry::Raven *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPRavenLogEntry.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(v4);
  v5 = (_QWORD *)operator new();
  *v5 = &off_1E25BFF20;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ = (uint64_t)v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E25BFBD8;
  *(_QWORD *)(v6 + 8) = 0;
  *(_DWORD *)(v6 + 16) = 0;
  *(_BYTE *)(v6 + 20) = 0;
  v7 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v6 + 24) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 48) = 0;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ = v6;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E25BFDB8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_ = v8;
  v9 = CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_;
  v10 = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_;
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v10 + 8) = v8;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::Raven::protobuf_ShutdownFile_CoreNavigationCLPRavenLogEntry_2eproto, v11);
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::LogEntry::LogEntry(_QWORD *this)
{
  *this = &off_1E25BFF20;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BFF20;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::RavenPlatformInfo(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_1E25BFBD8;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 20) = 0;
  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 24) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 32) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_1E25BFBD8;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 20) = 0;
  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 24) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 32) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::RavenPlatformInfo_TimeStamp(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BFDB8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BFDB8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Raven *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0B66CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::LogEntry::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Raven::LogEntry *CoreNavigation::CLP::LogEntry::Raven::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  *(_QWORD *)this = &off_1E25BFF20;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18D0B6734(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::LogEntry *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::Raven::RavenOutput *v5;
  const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *v6;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *v7;
  uint64_t v8;
  const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      *((_DWORD *)v3 + 7) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BF6B0;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_QWORD *)this + 7) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::Raven::RavenOutput **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                                         + 8);
      }
      CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)v3 + 7) |= 2u;
      v7 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((_QWORD *)v3 + 2);
      if (!v7)
      {
        this = (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)operator new();
        v7 = this;
        *(_QWORD *)this = &off_1E25BFBD8;
        *((_QWORD *)this + 1) = 0;
        *((_DWORD *)this + 4) = 0;
        *((_BYTE *)this + 20) = 0;
        v8 = MEMORY[0x1E0DE8338];
        *((_QWORD *)this + 3) = MEMORY[0x1E0DE8338];
        *((_QWORD *)this + 4) = v8;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)this + 6) = 0;
        *((_QWORD *)v3 + 2) = this;
      }
      v9 = (const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((_QWORD *)a2 + 2);
      if (!v9)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
        v9 = *(const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                                               + 16);
      }
      CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(v7, v9);
    }
  }
}

void sub_18D0B68C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  *(_QWORD *)this = &off_1E25BFF20;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::~LogEntry(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::LogEntry *)CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::LogEntry::New(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BFF20;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 28);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 28) & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::RavenOutput::Clear(this);
        v2 = *(_DWORD *)(v1 + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 16);
      if (this)
        this = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(this + 52);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 52) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 52);
      }
    }
    *(_DWORD *)(this + 16) = 0;
    *(_BYTE *)(this + 20) = 0;
    v3 = MEMORY[0x1E0DE8338];
    if ((v1 & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(_BYTE **)v4 = 0;
          *(_QWORD *)(v4 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v4 = 0;
          *(_BYTE *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(_BYTE *)(this + 52) & 0x10) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5 != v3)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(_BYTE **)v5 = 0;
          *(_QWORD *)(v5 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v5 = 0;
          *(_BYTE *)(v5 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t result;
  unsigned int v23;
  unsigned int v24;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 7) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BF6B0;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(_OWORD *)(v8 + 40) = 0u;
          *(_QWORD *)(v8 + 56) = 0;
          *((_QWORD *)this + 1) = v8;
        }
        v23 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23))return 0;
        }
        else
        {
          v23 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
        {
          *((_QWORD *)a2 + 1) = v15 + 1;
          goto LABEL_30;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
LABEL_30:
      *((_DWORD *)this + 7) |= 2u;
      v16 = *((_QWORD *)this + 2);
      if (!v16)
      {
        v16 = operator new();
        *(_QWORD *)v16 = &off_1E25BFBD8;
        *(_QWORD *)(v16 + 8) = 0;
        *(_DWORD *)(v16 + 16) = 0;
        *(_BYTE *)(v16 + 20) = 0;
        *(_QWORD *)(v16 + 24) = v4;
        *(_QWORD *)(v16 + 32) = v4;
        *(_QWORD *)(v16 + 40) = 0;
        *(_QWORD *)(v16 + 48) = 0;
        *((_QWORD *)this + 2) = v16;
      }
      v24 = 0;
      v17 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))
          return 0;
      }
      else
      {
        v24 = *v17;
        *((_QWORD *)a2 + 1) = v17 + 1;
      }
      v18 = *((_DWORD *)a2 + 14);
      v19 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v18 + 1;
      if (v18 >= v19)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)v16, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v20 = *((_DWORD *)a2 + 14);
      v13 = __OFSUB__(v20, 1);
      v21 = v20 - 1;
      if (v21 < 0 == v13)
        *((_DWORD *)a2 + 14) = v21;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return this;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    v8 = *(_QWORD *)(v5 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  uint64_t v2;
  CoreNavigation::CLP::LogEntry::Raven::RavenOutput *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;

  if (!*((_BYTE *)this + 28))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 28) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 28) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((_QWORD *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(0);
    v3 = *(CoreNavigation::CLP::LogEntry::Raven::RavenOutput **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                               + 8);
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::RavenOutput::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = (v5 + v6 + 1);
  if ((*((_DWORD *)this + 7) & 2) != 0)
  {
LABEL_12:
    v7 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(0);
      v7 = *(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                                       + 16);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 = (v2 + v9 + v10 + 1);
  }
LABEL_18:
  *((_DWORD *)this + 6) = v2;
  return v2;
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *v6;
  unsigned int v7;
  char v8;
  const std::string *v9;
  std::string *v10;
  const std::string *v11;
  std::string *v12;
  unsigned int v13;
  unsigned int v14;
  _BYTE v15[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 52);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 52) & 1) != 0)
  {
    *((_DWORD *)v3 + 13) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)operator new();
      v5 = this;
      *(_QWORD *)this = &off_1E25BFDB8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_
                                                                                       + 8);
    }
    CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(v5, v6);
    v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 2) != 0)
  {
    v7 = *((_DWORD *)a2 + 4);
    if ((CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid((CoreNavigation::CLP::LogEntry::Raven *)v7) & 1) == 0)
      __assert_rtn("set_hardware", "CoreNavigationCLPRavenLogEntry.pb.h", 865, "::CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid(value)");
    *((_DWORD *)v3 + 13) |= 2u;
    *((_DWORD *)v3 + 4) = v7;
    v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 4) != 0)
  {
    v8 = *((_BYTE *)a2 + 20);
    *((_DWORD *)v3 + 13) |= 4u;
    *((_BYTE *)v3 + 20) = v8;
    v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_15:
      if ((v4 & 0x10) == 0)
        goto LABEL_16;
LABEL_23:
      v11 = (const std::string *)*((_QWORD *)a2 + 4);
      *((_DWORD *)v3 + 13) |= 0x10u;
      v12 = (std::string *)*((_QWORD *)v3 + 4);
      if (v12 == (std::string *)MEMORY[0x1E0DE8338])
      {
        v12 = (std::string *)operator new();
        v12->__r_.__value_.__l.__size_ = 0;
        v12->__r_.__value_.__r.__words[2] = 0;
        v12->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 4) = v12;
      }
      std::string::operator=(v12, v11);
      v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 0x20) == 0)
      {
LABEL_17:
        if ((v4 & 0x40) == 0)
          return;
        goto LABEL_28;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_15;
  }
  v9 = (const std::string *)*((_QWORD *)a2 + 3);
  *((_DWORD *)v3 + 13) |= 8u;
  v10 = (std::string *)*((_QWORD *)v3 + 3);
  if (v10 == (std::string *)MEMORY[0x1E0DE8338])
  {
    v10 = (std::string *)operator new();
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)v3 + 3) = v10;
  }
  std::string::operator=(v10, v9);
  v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) != 0)
    goto LABEL_23;
LABEL_16:
  if ((v4 & 0x20) == 0)
    goto LABEL_17;
LABEL_26:
  v13 = *((_DWORD *)a2 + 10);
  if (v13 >= 4)
    __assert_rtn("set_product_category", "CoreNavigationCLPRavenLogEntry.pb.h", 1050, "::CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_ProductCategory_IsValid(value)");
  *((_DWORD *)v3 + 13) |= 0x20u;
  *((_DWORD *)v3 + 10) = v13;
  if ((*((_DWORD *)a2 + 13) & 0x40) != 0)
  {
LABEL_28:
    v14 = *((_DWORD *)a2 + 11);
    if (v14 >= 3)
      __assert_rtn("set_gnss_band_support", "CoreNavigationCLPRavenLogEntry.pb.h", 1073, "::CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_GnssBandSupport_IsValid(value)");
    *((_DWORD *)v3 + 13) |= 0x40u;
    *((_DWORD *)v3 + 11) = v14;
  }
}

void sub_18D0B7250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::LogEntry *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::LogEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.LogEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  unsigned int v1;
  uint64_t result;
  unsigned int v3;

  v1 = this;
  result = 1;
  if (v1 >= 0x30)
  {
    v3 = v1 - 50;
    if (v3 > 0x32 || ((1 << v3) & 0x4001FFFFFFFFFLL) == 0)
      return 0;
  }
  return result;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_ProductCategory_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_GnssBandSupport_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::RavenPlatformInfo_TimeStamp(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  *(_QWORD *)this = &off_1E25BFDB8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0B73CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0B74B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::~RavenPlatformInfo_TimeStamp(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  *(_QWORD *)this = &off_1E25BFDB8;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::~RavenPlatformInfo_TimeStamp(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::New(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BFDB8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::Swap(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.RavenPlatformInfo.TimeStamp");
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SharedCtor(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(_BYTE *)(this + 20) = 0;
  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 24) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(this + 32) = v1;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::RavenPlatformInfo(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BFBD8;
  *((_QWORD *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  *((_BYTE *)this + 20) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 4) = v3;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0B79C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::~RavenPlatformInfo(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  *(_QWORD *)this = &off_1E25BFBD8;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::~RavenPlatformInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;

  v1 = this;
  v2 = *((_QWORD *)this + 3);
  v3 = MEMORY[0x1E0DE8338];
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  v5 = *((_QWORD *)v1 + 4);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)MEMORY[0x18D78B5D4](v5, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ != v1)
  {
    v7 = *((_QWORD *)v1 + 1);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::New(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  uint64_t result;
  uint64_t v2;

  result = operator new();
  *(_QWORD *)result = &off_1E25BFBD8;
  *(_QWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 20) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(result + 32) = v2;
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  unint64_t v25;
  uint64_t result;
  _BYTE *v27;
  unsigned int v28;
  _BYTE *v29;
  _QWORD *v30;
  _BYTE *v31;
  _QWORD *v32;
  _BYTE *v33;
  unsigned int v34;
  _BYTE *v35;
  unsigned int v36;
  unsigned int v37;

  v4 = MEMORY[0x1E0DE8338];
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_26;
        *((_DWORD *)this + 13) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BFDB8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v37 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0;
        }
        else
        {
          v37 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v10 || *v24 != 16)
          continue;
        v11 = v24 + 1;
        *((_QWORD *)a2 + 1) = v11;
        goto LABEL_39;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_39:
        v37 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37);
          if (!(_DWORD)result)
            return result;
          v25 = v37;
        }
        else
        {
          v25 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid((CoreNavigation::CLP::LogEntry::Raven *)v25))
        {
          *((_DWORD *)this + 13) |= 2u;
          *((_DWORD *)this + 4) = v25;
        }
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v27 >= v12 || *v27 != 24)
          continue;
        v13 = v27 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_49:
        v37 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37);
          if (!(_DWORD)result)
            return result;
          v28 = v37;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v28 = *v13;
          v29 = v13 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_BYTE *)this + 20) = v28 != 0;
        v14 = *((_DWORD *)this + 13) | 4;
        *((_DWORD *)this + 13) = v14;
        if ((unint64_t)v29 >= v12 || *v29 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_57:
        *((_DWORD *)this + 13) = v14 | 8;
        if (*((_QWORD *)this + 3) == v4)
        {
          v30 = (_QWORD *)operator new();
          v30[1] = 0;
          v30[2] = 0;
          *v30 = 0;
          *((_QWORD *)this + 3) = v30;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v31 + 1;
LABEL_63:
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((_QWORD *)this + 4) == v4)
        {
          v32 = (_QWORD *)operator new();
          v32[1] = 0;
          v32[2] = 0;
          *v32 = 0;
          *((_QWORD *)this + 4) = v32;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!(_DWORD)result)
          return result;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v33 >= v15 || *v33 != 48)
          continue;
        v16 = v33 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_69:
        v37 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37);
          if (!(_DWORD)result)
            return result;
          v34 = v37;
        }
        else
        {
          v34 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v34 <= 3)
        {
          *((_DWORD *)this + 13) |= 0x20u;
          *((_DWORD *)this + 10) = v34;
        }
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 >= v17 || *v35 != 56)
          continue;
        v18 = v35 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_79:
        v37 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37);
          if (!(_DWORD)result)
            return result;
          v36 = v37;
        }
        else
        {
          v36 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v36 <= 2)
        {
          *((_DWORD *)this + 13) |= 0x40u;
          *((_DWORD *)this + 11) = v36;
        }
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_26;
        v14 = *((_DWORD *)this + 13);
        goto LABEL_57;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_63;
        goto LABEL_26;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_69;
      case 7u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_26;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      default:
        v7 = TagFallback & 7;
LABEL_26:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 52);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x40) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::ByteSize(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v23;
  int v24;

  LOBYTE(v2) = *((_BYTE *)this + 52);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_59;
  }
  if ((*((_BYTE *)this + 52) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((_BYTE *)this + 52) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  LODWORD(v3) = v5 + 2;
  v2 = *((_DWORD *)this + 13);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v7 & 0x80000000) != 0)
    {
      v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 13);
    }
    else
    {
      v8 = 2;
    }
    LODWORD(v3) = v8 + v3;
  }
LABEL_21:
  if ((v2 & 4) != 0)
    v3 = (v3 + 2);
  else
    v3 = v3;
  if ((v2 & 8) != 0)
  {
    v9 = *((_QWORD *)this + 3);
    v10 = *(unsigned __int8 *)(v9 + 23);
    v11 = v10;
    v12 = *(_QWORD *)(v9 + 8);
    if ((v10 & 0x80u) == 0)
      v13 = *(unsigned __int8 *)(v9 + 23);
    else
      v13 = v12;
    if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13);
      v10 = *(unsigned __int8 *)(v9 + 23);
      v12 = *(_QWORD *)(v9 + 8);
      v2 = *((_DWORD *)this + 13);
      v11 = *(_BYTE *)(v9 + 23);
    }
    else
    {
      v14 = 1;
    }
    if (v11 < 0)
      v10 = v12;
    v3 = (v3 + v14 + v10 + 1);
    if ((v2 & 0x10) == 0)
    {
LABEL_26:
      if ((v2 & 0x20) == 0)
        goto LABEL_27;
      goto LABEL_47;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_26;
  }
  v15 = *((_QWORD *)this + 4);
  v16 = *(unsigned __int8 *)(v15 + 23);
  v17 = v16;
  v18 = *(_QWORD *)(v15 + 8);
  if ((v16 & 0x80u) == 0)
    v19 = *(unsigned __int8 *)(v15 + 23);
  else
    v19 = v18;
  if (v19 >= 0x80)
  {
    v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19);
    v16 = *(unsigned __int8 *)(v15 + 23);
    v18 = *(_QWORD *)(v15 + 8);
    v2 = *((_DWORD *)this + 13);
    v17 = *(_BYTE *)(v15 + 23);
  }
  else
  {
    v20 = 1;
  }
  if (v17 < 0)
    v16 = v18;
  v3 = (v3 + v20 + v16 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_27:
    if ((v2 & 0x40) == 0)
      goto LABEL_59;
    goto LABEL_53;
  }
LABEL_47:
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v21 & 0x80000000) != 0)
  {
    v22 = 11;
  }
  else if (v21 >= 0x80)
  {
    v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
    v2 = *((_DWORD *)this + 13);
  }
  else
  {
    v22 = 2;
  }
  v3 = (v22 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_53:
    v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v23 & 0x80000000) != 0)
    {
      v24 = 11;
    }
    else if (v23 >= 0x80)
    {
      v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
    }
    else
    {
      v24 = 2;
    }
    v3 = (v24 + v3);
  }
LABEL_59:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 20);
    *(_BYTE *)(this + 20) = *((_BYTE *)a2 + 20);
    *((_BYTE *)a2 + 20) = v2;
    v3 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    v4 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Raven.RavenPlatformInfo");
}

uint64_t sub_18D0B84CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0B84D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0B84DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_ShutdownFile_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_);
  result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_;
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto_impl(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  CoreNavigation::CLP::LogEntry::PrivateData *v4;
  CoreNavigation::CLP::LogEntry::Raven *v5;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void (*v44)(void);

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPGnssMsmtAnalysisToolData.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(v4);
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(v5);
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(v6);
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E25BE558;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_OWORD *)(v7 + 56) = 0u;
  *(_OWORD *)(v7 + 72) = 0u;
  *(_OWORD *)(v7 + 84) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E25BE5D0;
  *(_QWORD *)(v8 + 160) = 0;
  *(_QWORD *)(v8 + 168) = 0;
  *(_DWORD *)(v8 + 176) = 0;
  *(_QWORD *)(v8 + 184) = 0;
  *(_QWORD *)(v8 + 192) = 0;
  *(_DWORD *)(v8 + 200) = 0;
  *(_QWORD *)(v8 + 208) = 0;
  *(_QWORD *)(v8 + 216) = 0;
  *(_DWORD *)(v8 + 224) = 0;
  *(_QWORD *)(v8 + 232) = 0;
  *(_DWORD *)(v8 + 240) = 0;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_OWORD *)(v8 + 40) = 0u;
  *(_OWORD *)(v8 + 52) = 0u;
  *(_OWORD *)(v8 + 100) = 0u;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_OWORD *)(v8 + 72) = 0u;
  *(_DWORD *)(v8 + 152) = 0;
  *(_OWORD *)(v8 + 136) = 0u;
  *(_OWORD *)(v8 + 120) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_1E25B1048;
  *(_QWORD *)(v9 + 8) = 0;
  *(_QWORD *)(v9 + 16) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 36) = 2;
  *(_DWORD *)(v9 + 44) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ = v9;
  v10 = (_QWORD *)operator new();
  v10[1] = 0;
  v10[2] = 0;
  *v10 = &off_1E25BE468;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_ = (uint64_t)v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E25BDF40;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_QWORD *)(v11 + 56) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)v12 = &off_1E25BDFB8;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 36) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_ = v12;
  v13 = operator new();
  *(_QWORD *)v13 = &off_1E25BE198;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  *(_OWORD *)(v13 + 56) = 0u;
  *(_OWORD *)(v13 + 72) = 0u;
  *(_OWORD *)(v13 + 88) = 0u;
  *(_OWORD *)(v13 + 104) = 0u;
  *(_OWORD *)(v13 + 120) = 0u;
  *(_OWORD *)(v13 + 136) = 0u;
  *(_OWORD *)(v13 + 152) = 0u;
  *(_OWORD *)(v13 + 168) = 0u;
  *(_OWORD *)(v13 + 184) = 0u;
  *(_OWORD *)(v13 + 200) = 0u;
  *(_OWORD *)(v13 + 216) = 0u;
  *(_OWORD *)(v13 + 232) = 0u;
  *(_QWORD *)(v13 + 248) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ = v13;
  v14 = operator new();
  *(_QWORD *)v14 = &off_1E25BE0A8;
  *(_OWORD *)(v14 + 8) = 0u;
  *(_OWORD *)(v14 + 24) = 0u;
  *(_QWORD *)(v14 + 40) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ = v14;
  v15 = operator new();
  *(_QWORD *)v15 = &off_1E25BE210;
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_QWORD *)(v15 + 40) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_ = v15;
  v16 = operator new();
  *(_QWORD *)v16 = &off_1E25BE3F0;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_DWORD *)(v16 + 40) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_ = v16;
  v17 = operator new();
  *(_QWORD *)v17 = &off_1E25BE648;
  *(_BYTE *)(v17 + 80) = 0;
  *(_QWORD *)(v17 + 84) = 0;
  *(_OWORD *)(v17 + 8) = 0u;
  *(_OWORD *)(v17 + 24) = 0u;
  *(_OWORD *)(v17 + 40) = 0u;
  *(_OWORD *)(v17 + 56) = 0u;
  *(_DWORD *)(v17 + 72) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ = v17;
  v18 = (_QWORD *)operator new();
  *v18 = &off_1E25BDEC8;
  v18[1] = 0;
  v18[2] = 0;
  v18[3] = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_ = (uint64_t)v18;
  v19 = operator new();
  *(_QWORD *)v19 = &off_1E25BE300;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_QWORD *)(v19 + 40) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_ = v19;
  v20 = operator new();
  *(_QWORD *)v20 = &off_1E25BE4E0;
  *(_QWORD *)(v20 + 80) = 0;
  *(_QWORD *)(v20 + 88) = 0;
  *(_DWORD *)(v20 + 96) = 0;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 56) = 0u;
  *(_DWORD *)(v20 + 72) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ = v20;
  v21 = operator new();
  *(_QWORD *)v21 = &off_1E25BE288;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  *(_OWORD *)(v21 + 72) = 0u;
  *(_OWORD *)(v21 + 88) = 0u;
  *(_QWORD *)(v21 + 104) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ = v21;
  v22 = operator new();
  *(_QWORD *)v22 = &off_1E25BE030;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  *(_OWORD *)(v22 + 40) = 0u;
  *(_OWORD *)(v22 + 56) = 0u;
  *(_OWORD *)(v22 + 72) = 0u;
  *(_OWORD *)(v22 + 86) = 0u;
  *(_QWORD *)(v22 + 104) = 0;
  *(_QWORD *)(v22 + 112) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ = v22;
  v23 = (_QWORD *)operator new();
  v23[1] = 0;
  v23[2] = 0;
  *v23 = &off_1E25BE120;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_ = (uint64_t)v23;
  v24 = operator new();
  *(_QWORD *)v24 = &off_1E25BE378;
  *(_OWORD *)(v24 + 8) = 0u;
  *(_OWORD *)(v24 + 24) = 0u;
  *(_OWORD *)(v24 + 40) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_ = v24;
  v25 = (_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_;
  v26 = (_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_;
  v27 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
            + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_;
  v25[2] = v27;
  v28 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  v25[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  v25[4] = v28;
  v25[5] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_;
  v29 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
  v25[9] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
  v25[10] = v29;
  v25[11] = v29;
  v30 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_;
  v31 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_;
  v25[15] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_;
  v25[16] = v31;
  v32 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_
            + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  v33 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
  v34 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_;
  v26[2] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
  v26[3] = v34;
  v35 = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  v26[4] = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  v26[5] = v35;
  v36 = (_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
            + 8) = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  v36[2] = v33;
  v37 = (_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_;
  v38 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_;
  v36[5] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_;
  v36[6] = v38;
  v39 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  v37[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  v37[2] = v39;
  v37[3] = v39;
  v37[4] = v27;
  *(_QWORD *)(v38 + 24) = v39;
  *(_QWORD *)(v38 + 32) = v39;
  v40 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  *(_QWORD *)(v30 + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  *(_QWORD *)(v30 + 48) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_;
  v41 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_;
  v42 = (_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
            + 8) = v32;
  *(_QWORD *)(v41 + 16) = v42;
  v42[1] = v32;
  v42[2] = v40;
  v42[3] = v40;
  v42[4] = v40;
  v43 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
            + 8) = v40;
  *(_QWORD *)(v43 + 16) = v40;
  *(_QWORD *)(v43 + 56) = v24;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_ShutdownFile_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto, v44);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::RavenUserActivityEstimate(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE558;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE558;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::GnssMsmtAnalysisToolDataCapture(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE5D0;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_DWORD *)this + 50) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE5D0;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_DWORD *)this + 50) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SatelliteVisibility(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  double result;

  *(_QWORD *)this = &off_1E25B1048;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  *(_QWORD *)&result = 2;
  *(_QWORD *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25B1048;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  *(_QWORD *)&result = 2;
  *(_QWORD *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::PerBandMeasurementCount(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BE468;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BE468;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::TimeStamps(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDF40;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDF40;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ClockOffsets(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDFB8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDFB8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE198;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *((_QWORD *)this + 31) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE198;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *((_QWORD *)this + 31) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE0A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE0A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::UserToSatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE210;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE210;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::PerConstellationCounts(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE3F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE3F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::GnssPreprocessedMeasurementsEvent(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE648;
  *((_BYTE *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE648;
  *((_BYTE *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CNTimeSpan(_QWORD *this)
{
  *this = &off_1E25BDEC8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BDEC8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::GnssReceiverClockModel(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE300;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE300;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::GnssSvAndMeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE4E0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE4E0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::PolynomialEphemerides(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE288;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE288;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::GnssObservable(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE030;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 86) = 0u;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE030;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 86) = 0u;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::GNSSSatelliteID(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BE120;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BE120;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MeasurementCorrections(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE378;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE378;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  this[4] = v2;
  this[5] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_;
  v3 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
  this[9] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
  this[10] = v3;
  this[11] = v3;
  v4 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_;
  this[15] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_;
  this[16] = v4;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_;
  this[2] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
  this[3] = v1;
  v2 = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  this[4] = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  this[5] = v2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_;
  this[6] = v2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
  this[3] = v1;
  this[4] = v2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  *(_QWORD *)(this + 24) = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  *(_QWORD *)(this + 32) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  *(_QWORD *)(this + 48) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  this[2] = v1;
  this[7] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0B91CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::LineOfSight_IsValid(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::Constellation_IsValid(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSObservableType_IsValid(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  return this < 7;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::RavenUserActivityEstimate(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  *(_QWORD *)this = &off_1E25BE558;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(this, a2);
  return this;
}

void sub_18D0B929C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  double result;
  int v5;
  unsigned int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  v5 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v5)
    goto LABEL_15;
  if ((v5 & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 22);
    if (v6 >= 0xA)
      __assert_rtn("set_user_activity", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3016, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserActivityType_IsValid(value)");
    *((_DWORD *)this + 24) |= 1u;
    *((_DWORD *)this + 22) = v6;
    v5 = *((_DWORD *)a2 + 24);
  }
  if ((v5 & 2) != 0)
  {
    result = *((double *)a2 + 1);
    *((_DWORD *)this + 24) |= 2u;
    *((double *)this + 1) = result;
    v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_10;
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  result = *((double *)a2 + 2);
  *((_DWORD *)this + 24) |= 4u;
  *((double *)this + 2) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_27;
  }
LABEL_26:
  result = *((double *)a2 + 3);
  *((_DWORD *)this + 24) |= 8u;
  *((double *)this + 3) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0)
      goto LABEL_12;
LABEL_28:
    result = *((double *)a2 + 5);
    *((_DWORD *)this + 24) |= 0x20u;
    *((double *)this + 5) = result;
    v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0)
        goto LABEL_15;
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_27:
  result = *((double *)a2 + 4);
  *((_DWORD *)this + 24) |= 0x10u;
  *((double *)this + 4) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x20) != 0)
    goto LABEL_28;
LABEL_12:
  if ((v5 & 0x40) == 0)
    goto LABEL_13;
LABEL_29:
  result = *((double *)a2 + 6);
  *((_DWORD *)this + 24) |= 0x40u;
  *((double *)this + 6) = result;
  v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    result = *((double *)a2 + 7);
    *((_DWORD *)this + 24) |= 0x80u;
    *((double *)this + 7) = result;
    v5 = *((_DWORD *)a2 + 24);
  }
LABEL_15:
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) != 0)
  {
    result = *((double *)a2 + 8);
    *((_DWORD *)this + 24) |= 0x100u;
    *((double *)this + 8) = result;
    v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0)
        return result;
      goto LABEL_19;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  result = *((double *)a2 + 9);
  *((_DWORD *)this + 24) |= 0x200u;
  *((double *)this + 9) = result;
  if ((*((_DWORD *)a2 + 24) & 0x400) != 0)
  {
LABEL_19:
    result = *((double *)a2 + 10);
    *((_DWORD *)this + 24) |= 0x400u;
    *((double *)this + 10) = result;
  }
  return result;
}

void sub_18D0B94B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::~RavenUserActivityEstimate(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  *(_QWORD *)this = &off_1E25BE558;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::~RavenUserActivityEstimate(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE558;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 84) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 96);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 88) = 0;
    *(_OWORD *)(this + 8) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 40) = 0u;
    *(_QWORD *)(this + 56) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 64) = 0;
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 80) = 0;
  }
  *(_DWORD *)(this + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  uint64_t result;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned int v20[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_31;
        v20[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!(_DWORD)result)
            return result;
          v8 = v20[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 9)
        {
          *((_DWORD *)this + 24) |= 1u;
          *((_DWORD *)this + 22) = v8;
        }
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 < *((_QWORD *)a2 + 2) && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
LABEL_41:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 2u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_45:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 4u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_49:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 8u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_53:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 0x10u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_57:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 0x20u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_61:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 0x40u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_65:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 0x80u;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_69:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 0x100u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_73:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v20;
        *((_DWORD *)this + 24) |= 0x200u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_77:
        *(_QWORD *)v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) != 0)
        {
          *((_QWORD *)this + 10) = *(_QWORD *)v20;
          *((_DWORD *)this + 24) |= 0x400u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_45;
        goto LABEL_31;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_49;
        goto LABEL_31;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_53;
        goto LABEL_31;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_57;
        goto LABEL_31;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_61;
        goto LABEL_31;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_65;
        goto LABEL_31;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_69;
        goto LABEL_31;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_73;
        goto LABEL_31;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_31;
        goto LABEL_77;
      default:
        v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 88), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 80), a3);
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 72), a3);
  if ((*(_DWORD *)(v5 + 96) & 0x400) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 80), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  int v2;
  unsigned int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  unsigned int v5;
  uint64_t result;

  v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 24);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 9;
    if ((v2 & 0x40) != 0)
      v3 += 9;
    if ((v2 & 0x80) != 0)
      v3 += 9;
  }
  else
  {
    v3 = 0;
  }
  v5 = v3 + 9;
  if ((v2 & 0x100) == 0)
    v5 = v3;
  if ((v2 & 0x200) != 0)
    v5 += 9;
  if ((v2 & 0x400) != 0)
    v5 += 9;
  if ((v2 & 0xFF00) != 0)
    result = v5;
  else
    result = v3;
  *((_DWORD *)this + 23) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  int v13;
  int v14;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
    v3 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    v8 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v8;
    v9 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v9;
    v10 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v10;
    v11 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v11;
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    v13 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v13;
    v14 = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v14;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.RavenUserActivityEstimate");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  double result;

  *((_QWORD *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_QWORD *)this + 16) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::GnssMsmtAnalysisToolDataCapture(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  *(_QWORD *)this = &off_1E25BE5D0;
  *((_QWORD *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *((_QWORD *)this + 20) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_DWORD *)this + 50) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_QWORD *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((_QWORD *)this + 26) = 0;
  *((_QWORD *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 120) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(this, a2);
  return this;
}

void sub_18D0B9FB8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;

  v8 = v5;
  sub_18D09ECA4(v8);
  sub_18D09ECA4(v6);
  sub_18D09ECA4(v4);
  sub_18D09ECA4(v7);
  sub_18D09ECA4(v3);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *v54;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *v55;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *v56;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *v57;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v58;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v59;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v60;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v61;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *v62;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *v63;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v64;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v65;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v66;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v67;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v68;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v69;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *v70;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *v71;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *v72;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *v73;
  unsigned int v74;
  _BYTE v75[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v75);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 48));
  if (*((int *)a2 + 14) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData **)(*((_QWORD *)a2 + 6) + 8 * v4);
      v6 = *((_DWORD *)this + 15);
      v7 = *((int *)this + 14);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 48));
          v6 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E25BE198;
        *(_QWORD *)(v9 + 248) = 0;
        *(_OWORD *)(v9 + 232) = 0u;
        *(_OWORD *)(v9 + 216) = 0u;
        *(_OWORD *)(v9 + 200) = 0u;
        *(_OWORD *)(v9 + 184) = 0u;
        *(_OWORD *)(v9 + 168) = 0u;
        *(_OWORD *)(v9 + 152) = 0u;
        *(_OWORD *)(v9 + 136) = 0u;
        *(_OWORD *)(v9 + 120) = 0u;
        *(_OWORD *)(v9 + 104) = 0u;
        *(_OWORD *)(v9 + 88) = 0u;
        *(_OWORD *)(v9 + 72) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 8) = 0u;
        v10 = *((_QWORD *)this + 6);
        v11 = *((int *)this + 14);
        *((_DWORD *)this + 14) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 6);
        *((_DWORD *)this + 14) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 14));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 96));
  if (*((int *)a2 + 26) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections **)(*((_QWORD *)a2 + 12)
                                                                                          + 8 * v12);
      v14 = *((_DWORD *)this + 27);
      v15 = *((int *)this + 26);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 28))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 96));
          v14 = *((_DWORD *)this + 27);
        }
        *((_DWORD *)this + 27) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)v17 = &off_1E25BC8C0;
        *(_QWORD *)(v17 + 8) = 0;
        *(_QWORD *)(v17 + 16) = 0;
        *(_QWORD *)(v17 + 24) = 0;
        *(_DWORD *)(v17 + 32) = 0;
        v18 = *((_QWORD *)this + 12);
        v19 = *((int *)this + 26);
        *((_DWORD *)this + 26) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 12);
        *((_DWORD *)this + 26) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 26));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    v20 = 0;
    do
    {
      v21 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((_QWORD *)a2 + 17) + 8 * v20);
      v22 = *((_DWORD *)this + 37);
      v23 = *((int *)this + 36);
      if ((int)v23 >= v22)
      {
        if (v22 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 136));
          v22 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v22 + 1;
        v25 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *)operator new();
        *((_QWORD *)v25 + 1) = 0;
        *((_QWORD *)v25 + 2) = 0;
        *(_QWORD *)v25 = &off_1E25BE468;
        v26 = *((_QWORD *)this + 17);
        v27 = *((int *)this + 36);
        *((_DWORD *)this + 36) = v27 + 1;
        *(_QWORD *)(v26 + 8 * v27) = v25;
      }
      else
      {
        v24 = *((_QWORD *)this + 17);
        *((_DWORD *)this + 36) = v23 + 1;
        v25 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v24 + 8 * v23);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(v25, v21);
      ++v20;
    }
    while (v20 < *((int *)a2 + 36));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 160));
  if (*((int *)a2 + 42) >= 1)
  {
    v28 = 0;
    do
    {
      v29 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((_QWORD *)a2 + 20) + 8 * v28);
      v30 = *((_DWORD *)this + 43);
      v31 = *((int *)this + 42);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)this + 44))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 160));
          v30 = *((_DWORD *)this + 43);
        }
        *((_DWORD *)this + 43) = v30 + 1;
        v33 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *)operator new();
        *((_QWORD *)v33 + 1) = 0;
        *((_QWORD *)v33 + 2) = 0;
        *(_QWORD *)v33 = &off_1E25BE468;
        v34 = *((_QWORD *)this + 20);
        v35 = *((int *)this + 42);
        *((_DWORD *)this + 42) = v35 + 1;
        *(_QWORD *)(v34 + 8 * v35) = v33;
      }
      else
      {
        v32 = *((_QWORD *)this + 20);
        *((_DWORD *)this + 42) = v31 + 1;
        v33 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v32 + 8 * v31);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(v33, v29);
      ++v28;
    }
    while (v28 < *((int *)a2 + 42));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 184));
  if (*((int *)a2 + 48) >= 1)
  {
    v36 = 0;
    do
    {
      v37 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((_QWORD *)a2 + 23) + 8 * v36);
      v38 = *((_DWORD *)this + 49);
      v39 = *((int *)this + 48);
      if ((int)v39 >= v38)
      {
        if (v38 == *((_DWORD *)this + 50))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 184));
          v38 = *((_DWORD *)this + 49);
        }
        *((_DWORD *)this + 49) = v38 + 1;
        v41 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *)operator new();
        *((_QWORD *)v41 + 1) = 0;
        *((_QWORD *)v41 + 2) = 0;
        *(_QWORD *)v41 = &off_1E25BE468;
        v42 = *((_QWORD *)this + 23);
        v43 = *((int *)this + 48);
        *((_DWORD *)this + 48) = v43 + 1;
        *(_QWORD *)(v42 + 8 * v43) = v41;
      }
      else
      {
        v40 = *((_QWORD *)this + 23);
        *((_DWORD *)this + 48) = v39 + 1;
        v41 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v40 + 8 * v39);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(v41, v37);
      ++v36;
    }
    while (v36 < *((int *)a2 + 48));
  }
  v44 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 208));
  if (*((int *)a2 + 54) >= 1)
  {
    v45 = 0;
    do
    {
      v46 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility **)(*((_QWORD *)a2 + 26) + 8 * v45);
      v47 = *((_DWORD *)this + 55);
      v48 = *((int *)this + 54);
      if ((int)v48 >= v47)
      {
        if (v47 == *((_DWORD *)this + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 208));
          v47 = *((_DWORD *)this + 55);
        }
        *((_DWORD *)this + 55) = v47 + 1;
        v50 = operator new();
        *(_QWORD *)v50 = &off_1E25B1048;
        *(_QWORD *)(v50 + 8) = 0;
        *(_QWORD *)(v50 + 16) = 0;
        *(_QWORD *)(v50 + 24) = 0;
        *(_BYTE *)(v50 + 32) = 0;
        *(_QWORD *)(v50 + 36) = 2;
        *(_DWORD *)(v50 + 44) = 0;
        v51 = *((_QWORD *)this + 26);
        v52 = *((int *)this + 54);
        *((_DWORD *)this + 54) = v52 + 1;
        *(_QWORD *)(v51 + 8 * v52) = v50;
      }
      else
      {
        v49 = *((_QWORD *)this + 26);
        *((_DWORD *)this + 54) = v48 + 1;
        v50 = *(_QWORD *)(v49 + 8 * v48);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *)v50, v46);
      ++v45;
    }
    while (v45 < *((int *)a2 + 54));
  }
  v53 = *((_DWORD *)a2 + 60);
  if (!(_BYTE)v53)
    goto LABEL_95;
  if ((v53 & 1) != 0)
  {
    *((_DWORD *)this + 60) |= 1u;
    v54 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((_QWORD *)this + 1);
    if (!v54)
    {
      v44 = operator new();
      v54 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)v44;
      *(_QWORD *)v44 = &off_1E25BDF40;
      *(_OWORD *)(v44 + 8) = 0u;
      *(_OWORD *)(v44 + 24) = 0u;
      *(_OWORD *)(v44 + 40) = 0u;
      *(_QWORD *)(v44 + 56) = 0;
      *((_QWORD *)this + 1) = v44;
    }
    v55 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((_QWORD *)a2 + 1);
    if (!v55)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
      v55 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(v54, v55);
    v53 = *((_DWORD *)a2 + 60);
    if ((v53 & 2) == 0)
    {
LABEL_54:
      if ((v53 & 4) == 0)
        goto LABEL_55;
      goto LABEL_70;
    }
  }
  else if ((v53 & 2) == 0)
  {
    goto LABEL_54;
  }
  *((_DWORD *)this + 60) |= 2u;
  v56 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((_QWORD *)this + 2);
  if (!v56)
  {
    v44 = operator new();
    v56 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)v44;
    *(_QWORD *)v44 = &off_1E25BDFB8;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *(_OWORD *)(v44 + 36) = 0u;
    *((_QWORD *)this + 2) = v44;
  }
  v57 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((_QWORD *)a2 + 2);
  if (!v57)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
    v57 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 16);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(v56, v57);
  v53 = *((_DWORD *)a2 + 60);
  if ((v53 & 4) == 0)
  {
LABEL_55:
    if ((v53 & 8) == 0)
      goto LABEL_56;
    goto LABEL_75;
  }
LABEL_70:
  *((_DWORD *)this + 60) |= 4u;
  v58 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((_QWORD *)this + 3);
  if (!v58)
  {
    v44 = operator new();
    v58 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)v44;
    *(_QWORD *)v44 = &off_1E25BED50;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *((_QWORD *)this + 3) = v44;
  }
  v59 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((_QWORD *)a2 + 3);
  if (!v59)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
    v59 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                    + 24);
  }
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(v58, v59);
  v53 = *((_DWORD *)a2 + 60);
  if ((v53 & 8) == 0)
  {
LABEL_56:
    if ((v53 & 0x10) == 0)
      goto LABEL_57;
LABEL_80:
    *((_DWORD *)this + 60) |= 0x10u;
    v62 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((_QWORD *)this + 5);
    if (!v62)
    {
      v44 = operator new();
      v62 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)v44;
      *(_QWORD *)v44 = &off_1E25BEAF8;
      *(_OWORD *)(v44 + 8) = 0u;
      *(_OWORD *)(v44 + 24) = 0u;
      *(_OWORD *)(v44 + 40) = 0u;
      *(_QWORD *)(v44 + 56) = 0;
      *((_QWORD *)this + 5) = v44;
    }
    v63 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((_QWORD *)a2 + 5);
    if (!v63)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
      v63 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                           + 40);
    }
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(v62, v63);
    v53 = *((_DWORD *)a2 + 60);
    if ((v53 & 0x40) == 0)
    {
LABEL_58:
      if ((v53 & 0x80) == 0)
        goto LABEL_95;
      goto LABEL_90;
    }
    goto LABEL_85;
  }
LABEL_75:
  *((_DWORD *)this + 60) |= 8u;
  v60 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((_QWORD *)this + 4);
  if (!v60)
  {
    v44 = operator new();
    v60 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)v44;
    *(_QWORD *)v44 = &off_1E25BED50;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *((_QWORD *)this + 4) = v44;
  }
  v61 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((_QWORD *)a2 + 4);
  if (!v61)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
    v61 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                    + 32);
  }
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(v60, v61);
  v53 = *((_DWORD *)a2 + 60);
  if ((v53 & 0x10) != 0)
    goto LABEL_80;
LABEL_57:
  if ((v53 & 0x40) == 0)
    goto LABEL_58;
LABEL_85:
  *((_DWORD *)this + 60) |= 0x40u;
  v64 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)this + 9);
  if (!v64)
  {
    v44 = operator new();
    v64 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)v44;
    *(_QWORD *)v44 = &off_1E25BE3F0;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *(_DWORD *)(v44 + 40) = 0;
    *((_QWORD *)this + 9) = v44;
  }
  v65 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)a2 + 9);
  if (!v65)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
    v65 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 72);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(v64, v65);
  v53 = *((_DWORD *)a2 + 60);
  if ((v53 & 0x80) != 0)
  {
LABEL_90:
    *((_DWORD *)this + 60) |= 0x80u;
    v66 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)this + 10);
    if (!v66)
    {
      v44 = operator new();
      v66 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)v44;
      *(_QWORD *)v44 = &off_1E25BE3F0;
      *(_OWORD *)(v44 + 8) = 0u;
      *(_OWORD *)(v44 + 24) = 0u;
      *(_DWORD *)(v44 + 40) = 0;
      *((_QWORD *)this + 10) = v44;
    }
    v67 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)a2 + 10);
    if (!v67)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
      v67 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 80);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(v66, v67);
    v53 = *((_DWORD *)a2 + 60);
  }
LABEL_95:
  if ((v53 & 0xFF00) == 0)
    return;
  if ((v53 & 0x100) != 0)
  {
    *((_DWORD *)this + 60) |= 0x100u;
    v68 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)this + 11);
    if (!v68)
    {
      v44 = operator new();
      v68 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)v44;
      *(_QWORD *)v44 = &off_1E25BE3F0;
      *(_OWORD *)(v44 + 8) = 0u;
      *(_OWORD *)(v44 + 24) = 0u;
      *(_DWORD *)(v44 + 40) = 0;
      *((_QWORD *)this + 11) = v44;
    }
    v69 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)a2 + 11);
    if (!v69)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
      v69 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 88);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(v68, v69);
    v53 = *((_DWORD *)a2 + 60);
    if ((v53 & 0x400) == 0)
    {
LABEL_98:
      if ((v53 & 0x800) == 0)
        goto LABEL_99;
      goto LABEL_111;
    }
  }
  else if ((v53 & 0x400) == 0)
  {
    goto LABEL_98;
  }
  *((_DWORD *)this + 60) |= 0x400u;
  v70 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((_QWORD *)this + 15);
  if (!v70)
  {
    v44 = operator new();
    v70 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)v44;
    *(_QWORD *)v44 = &off_1E25BE648;
    *(_BYTE *)(v44 + 80) = 0;
    *(_DWORD *)(v44 + 84) = 0;
    *(_DWORD *)(v44 + 88) = 0;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *(_OWORD *)(v44 + 40) = 0u;
    *(_OWORD *)(v44 + 56) = 0u;
    *(_DWORD *)(v44 + 72) = 0;
    *((_QWORD *)this + 15) = v44;
  }
  v71 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((_QWORD *)a2 + 15);
  if (!v71)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
    v71 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 120);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(v70, v71);
  v53 = *((_DWORD *)a2 + 60);
  if ((v53 & 0x800) == 0)
  {
LABEL_99:
    if ((v53 & 0x1000) == 0)
      return;
    goto LABEL_116;
  }
LABEL_111:
  *((_DWORD *)this + 60) |= 0x800u;
  v72 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((_QWORD *)this + 16);
  if (!v72)
  {
    v44 = operator new();
    v72 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)v44;
    *(_QWORD *)v44 = &off_1E25BE558;
    *(_OWORD *)(v44 + 8) = 0u;
    *(_OWORD *)(v44 + 24) = 0u;
    *(_OWORD *)(v44 + 40) = 0u;
    *(_OWORD *)(v44 + 56) = 0u;
    *(_OWORD *)(v44 + 72) = 0u;
    *(_OWORD *)(v44 + 84) = 0u;
    *((_QWORD *)this + 16) = v44;
  }
  v73 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((_QWORD *)a2 + 16);
  if (!v73)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v44);
    v73 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 128);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(v72, v73);
  if ((*((_DWORD *)a2 + 60) & 0x1000) != 0)
  {
LABEL_116:
    v74 = *((_DWORD *)a2 + 58);
    if (v74 >= 8)
      __assert_rtn("set_raven_signal_environment_estimate", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3733, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_SignalEnvironmentType_IsValid(value)");
    *((_DWORD *)this + 60) |= 0x1000u;
    *((_DWORD *)this + 58) = v74;
  }
}

void sub_18D0BAB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::~GnssMsmtAnalysisToolDataCapture(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  *(_QWORD *)this = &off_1E25BE5D0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 26);
  sub_18D09ECA4((uint64_t *)this + 23);
  sub_18D09ECA4((uint64_t *)this + 20);
  sub_18D09ECA4((uint64_t *)this + 17);
  sub_18D09ECA4((uint64_t *)this + 12);
  sub_18D09ECA4((uint64_t *)this + 6);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::~GnssMsmtAnalysisToolDataCapture(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 9);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 10);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 11);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = *((_QWORD *)this + 15);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = *((_QWORD *)this + 16);
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 236) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE5D0;
  *(_QWORD *)(v1 + 160) = 0;
  *(_QWORD *)(v1 + 168) = 0;
  *(_DWORD *)(v1 + 176) = 0;
  *(_QWORD *)(v1 + 184) = 0;
  *(_QWORD *)(v1 + 192) = 0;
  *(_DWORD *)(v1 + 200) = 0;
  *(_QWORD *)(v1 + 208) = 0;
  *(_QWORD *)(v1 + 216) = 0;
  *(_DWORD *)(v1 + 224) = 0;
  *(_QWORD *)(v1 + 232) = 0;
  *(_DWORD *)(v1 + 240) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  *(_OWORD *)(v1 + 100) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_DWORD *)(v1 + 152) = 0;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = this;
  v2 = *(_DWORD *)(this + 240);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::Clear(this);
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 48))
        {
          *(_DWORD *)(v3 + 40) = 0;
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        *(_DWORD *)(v3 + 48) = 0;
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Clear(this);
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Clear(this);
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::Clear(this);
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      v4 = *(_QWORD *)(v1 + 72);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 40))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_DWORD *)(v4 + 32) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 40) = 0;
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      v5 = *(_QWORD *)(v1 + 80);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 40))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_DWORD *)(v5 + 32) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 40) = 0;
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v6 = *(_QWORD *)(v1 + 88);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 40))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_DWORD *)(v6 + 32) = 0;
          *(_QWORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 40) = 0;
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(_QWORD *)(v1 + 120);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::Clear(this);
        v2 = *(_DWORD *)(v1 + 240);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      v7 = *(_QWORD *)(v1 + 128);
      if (v7)
      {
        v8 = *(_DWORD *)(v7 + 96);
        if ((_BYTE)v8)
        {
          *(_DWORD *)(v7 + 88) = 0;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *(_OWORD *)(v7 + 40) = 0u;
          *(_QWORD *)(v7 + 56) = 0;
        }
        if ((v8 & 0xFF00) != 0)
        {
          *(_QWORD *)(v7 + 64) = 0;
          *(_QWORD *)(v7 + 72) = 0;
          *(_QWORD *)(v7 + 80) = 0;
        }
        *(_DWORD *)(v7 + 96) = 0;
      }
    }
    *(_DWORD *)(v1 + 232) = 0;
  }
  if (*(int *)(v1 + 56) >= 1)
  {
    v9 = 0;
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v9);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 32))(v10);
      ++v9;
    }
    while (v9 < *(int *)(v1 + 56));
  }
  *(_DWORD *)(v1 + 56) = 0;
  if (*(int *)(v1 + 104) >= 1)
  {
    v11 = 0;
    do
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 8 * v11);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v12 + 32))(v12);
      ++v11;
    }
    while (v11 < *(int *)(v1 + 104));
  }
  *(_DWORD *)(v1 + 104) = 0;
  if (*(int *)(v1 + 144) >= 1)
  {
    v13 = 0;
    do
    {
      v14 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * v13);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v14 + 32))(v14);
      ++v13;
    }
    while (v13 < *(int *)(v1 + 144));
  }
  *(_DWORD *)(v1 + 144) = 0;
  if (*(int *)(v1 + 168) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 160) + 8 * v15);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v16 + 32))(v16);
      ++v15;
    }
    while (v15 < *(int *)(v1 + 168));
  }
  *(_DWORD *)(v1 + 168) = 0;
  if (*(int *)(v1 + 192) >= 1)
  {
    v17 = 0;
    do
    {
      v18 = *(_QWORD *)(*(_QWORD *)(v1 + 184) + 8 * v17);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 32))(v18);
      ++v17;
    }
    while (v17 < *(int *)(v1 + 192));
  }
  *(_DWORD *)(v1 + 192) = 0;
  if (*(int *)(v1 + 216) >= 1)
  {
    v19 = 0;
    do
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v1 + 208) + 8 * v19);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v20 + 32))(v20);
      ++v19;
    }
    while (v19 < *(int *)(v1 + 216));
  }
  *(_DWORD *)(v1 + 216) = 0;
  *(_DWORD *)(v1 + 240) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(this + 60);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 24))
        {
          *(_DWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 8) != 0)
    {
      v4 = *(_QWORD *)(this + 32);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      v5 = *(_QWORD *)(this + 40);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
    *(_QWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 48))
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 88);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 88) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v2 = *(_DWORD *)(this + 88);
      }
    }
    *(_BYTE *)(this + 80) = 0;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    if ((v2 & 0x40) != 0)
    {
      v4 = *(_QWORD *)(this + 48);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0uLL;
          *(_OWORD *)(v4 + 8) = 0uLL;
        }
        *(_DWORD *)(v4 + 44) = 0;
      }
    }
  }
  if (*(int *)(this + 64) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  _BYTE *v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  _BYTE *v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  int v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  char *v61;
  int v62;
  int v63;
  int v64;
  int v65;
  _BYTE *v66;
  uint64_t v67;
  char *v68;
  int v69;
  int v70;
  int v71;
  int v72;
  _BYTE *v73;
  uint64_t v74;
  char *v75;
  int v76;
  int v77;
  int v78;
  int v79;
  _BYTE *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  uint64_t v93;
  char *v94;
  int v95;
  int v96;
  int v97;
  int v98;
  _BYTE *v99;
  uint64_t v100;
  char *v101;
  int v102;
  int v103;
  int v104;
  int v105;
  _BYTE *v106;
  unsigned int v107;
  uint64_t result;
  unsigned __int8 *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  int v129;
  int v130;
  int v131;
  int v132;
  unint64_t v133;
  int v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  int v153;
  int v154;
  int v155;
  int v156;
  unsigned __int8 *v157;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v158;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v159;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v160;
  unsigned int v161;

  v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 48);
  v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 96);
  v160 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 136);
  v6 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 160);
  v158 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 184);
  v159 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 208);
  while (1)
  {
LABEL_2:
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_46;
        *((_DWORD *)this + 60) |= 1u;
        v10 = *((_QWORD *)this + 1);
        if (!v10)
        {
          v10 = operator new();
          *(_QWORD *)v10 = &off_1E25BDF40;
          *(_OWORD *)(v10 + 8) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 40) = 0u;
          *(_QWORD *)(v10 + 56) = 0;
          *((_QWORD *)this + 1) = v10;
        }
        v161 = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)v10, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
        goto LABEL_58;
      case 2u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_46;
LABEL_58:
        *((_DWORD *)this + 60) |= 2u;
        v20 = *((_QWORD *)this + 2);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)v20 = &off_1E25BDFB8;
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *(_OWORD *)(v20 + 36) = 0u;
          *((_QWORD *)this + 2) = v20;
        }
        v161 = 0;
        v21 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v17)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_72:
        *((_DWORD *)this + 60) |= 4u;
        v27 = *((_QWORD *)this + 3);
        if (!v27)
        {
          v27 = operator new();
          *(_QWORD *)v27 = &off_1E25BED50;
          *(_OWORD *)(v27 + 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *((_QWORD *)this + 3) = v27;
        }
        v161 = 0;
        v28 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v28;
          *((_QWORD *)a2 + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)a2 + 14);
        v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)v27, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v31 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v31, 1);
        v32 = v31 - 1;
        if (v32 < 0 == v17)
          *((_DWORD *)a2 + 14) = v32;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_86:
        *((_DWORD *)this + 60) |= 8u;
        v34 = *((_QWORD *)this + 4);
        if (!v34)
        {
          v34 = operator new();
          *(_QWORD *)v34 = &off_1E25BED50;
          *(_OWORD *)(v34 + 8) = 0u;
          *(_OWORD *)(v34 + 24) = 0u;
          *((_QWORD *)this + 4) = v34;
        }
        v161 = 0;
        v35 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v35;
          *((_QWORD *)a2 + 1) = v35 + 1;
        }
        v36 = *((_DWORD *)a2 + 14);
        v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 >= v37)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)v34, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v38 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v38, 1);
        v39 = v38 - 1;
        if (v39 < 0 == v17)
          *((_DWORD *)a2 + 14) = v39;
        v40 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_100:
        *((_DWORD *)this + 60) |= 0x10u;
        v41 = *((_QWORD *)this + 5);
        if (!v41)
        {
          v41 = operator new();
          *(_QWORD *)v41 = &off_1E25BEAF8;
          *(_OWORD *)(v41 + 8) = 0u;
          *(_OWORD *)(v41 + 24) = 0u;
          *(_OWORD *)(v41 + 40) = 0u;
          *(_QWORD *)(v41 + 56) = 0;
          *((_QWORD *)this + 5) = v41;
        }
        v161 = 0;
        v42 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v42;
          *((_QWORD *)a2 + 1) = v42 + 1;
        }
        v43 = *((_DWORD *)a2 + 14);
        v44 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v43 + 1;
        if (v43 >= v44)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)v41, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v45 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v45, 1);
        v46 = v45 - 1;
        if (v46 < 0 == v17)
          *((_DWORD *)a2 + 14) = v46;
        v47 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 != 50)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v47 + 1;
LABEL_114:
          v48 = *((_DWORD *)this + 15);
          v49 = *((int *)this + 14);
          if ((int)v49 >= v48)
          {
            if (v48 == *((_DWORD *)this + 16))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v48 = *((_DWORD *)this + 15);
            }
            *((_DWORD *)this + 15) = v48 + 1;
            v51 = operator new();
            *(_QWORD *)v51 = &off_1E25BE198;
            *(_QWORD *)(v51 + 248) = 0;
            *(_OWORD *)(v51 + 232) = 0u;
            *(_OWORD *)(v51 + 216) = 0u;
            *(_OWORD *)(v51 + 200) = 0u;
            *(_OWORD *)(v51 + 184) = 0u;
            *(_OWORD *)(v51 + 168) = 0u;
            *(_OWORD *)(v51 + 152) = 0u;
            *(_OWORD *)(v51 + 136) = 0u;
            *(_OWORD *)(v51 + 120) = 0u;
            *(_OWORD *)(v51 + 104) = 0u;
            *(_OWORD *)(v51 + 88) = 0u;
            *(_OWORD *)(v51 + 72) = 0u;
            *(_OWORD *)(v51 + 56) = 0u;
            *(_OWORD *)(v51 + 40) = 0u;
            *(_OWORD *)(v51 + 24) = 0u;
            *(_OWORD *)(v51 + 8) = 0u;
            v52 = *((_QWORD *)this + 6);
            v53 = *((int *)this + 14);
            *((_DWORD *)this + 14) = v53 + 1;
            *(_QWORD *)(v52 + 8 * v53) = v51;
          }
          else
          {
            v50 = *((_QWORD *)this + 6);
            *((_DWORD *)this + 14) = v49 + 1;
            v51 = *(_QWORD *)(v50 + 8 * v49);
          }
          v161 = 0;
          v54 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v54 >= *((_QWORD *)a2 + 2) || *v54 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
          }
          else
          {
            v161 = *v54;
            *((_QWORD *)a2 + 1) = v54 + 1;
          }
          v55 = *((_DWORD *)a2 + 14);
          v56 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v55 + 1;
          if (v55 >= v56)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)v51, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v57 = *((_DWORD *)a2 + 14);
          v17 = __OFSUB__(v57, 1);
          v58 = v57 - 1;
          if (v58 < 0 == v17)
            *((_DWORD *)a2 + 14) = v58;
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v47 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v59 = *v47;
        }
        while (v59 == 50);
        if (v59 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v47 + 1;
LABEL_132:
        *((_DWORD *)this + 60) |= 0x40u;
        v60 = *((_QWORD *)this + 9);
        if (!v60)
        {
          v60 = operator new();
          *(_QWORD *)v60 = &off_1E25BE3F0;
          *(_OWORD *)(v60 + 8) = 0u;
          *(_OWORD *)(v60 + 24) = 0u;
          *(_DWORD *)(v60 + 40) = 0;
          *((_QWORD *)this + 9) = v60;
        }
        v161 = 0;
        v61 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v61 >= *((_QWORD *)a2 + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v61;
          *((_QWORD *)a2 + 1) = v61 + 1;
        }
        v62 = *((_DWORD *)a2 + 14);
        v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)v60, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v64 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v64, 1);
        v65 = v64 - 1;
        if (v65 < 0 == v17)
          *((_DWORD *)a2 + 14) = v65;
        v66 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v66 >= *((_QWORD *)a2 + 2) || *v66 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v66 + 1;
LABEL_146:
        *((_DWORD *)this + 60) |= 0x80u;
        v67 = *((_QWORD *)this + 10);
        if (!v67)
        {
          v67 = operator new();
          *(_QWORD *)v67 = &off_1E25BE3F0;
          *(_OWORD *)(v67 + 8) = 0u;
          *(_OWORD *)(v67 + 24) = 0u;
          *(_DWORD *)(v67 + 40) = 0;
          *((_QWORD *)this + 10) = v67;
        }
        v161 = 0;
        v68 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v68 >= *((_QWORD *)a2 + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v68;
          *((_QWORD *)a2 + 1) = v68 + 1;
        }
        v69 = *((_DWORD *)a2 + 14);
        v70 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v69 + 1;
        if (v69 >= v70)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)v67, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v71 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v71, 1);
        v72 = v71 - 1;
        if (v72 < 0 == v17)
          *((_DWORD *)a2 + 14) = v72;
        v73 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v73 >= *((_QWORD *)a2 + 2) || *v73 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v73 + 1;
LABEL_160:
        *((_DWORD *)this + 60) |= 0x100u;
        v74 = *((_QWORD *)this + 11);
        if (!v74)
        {
          v74 = operator new();
          *(_QWORD *)v74 = &off_1E25BE3F0;
          *(_OWORD *)(v74 + 8) = 0u;
          *(_OWORD *)(v74 + 24) = 0u;
          *(_DWORD *)(v74 + 40) = 0;
          *((_QWORD *)this + 11) = v74;
        }
        v161 = 0;
        v75 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v75 >= *((_QWORD *)a2 + 2) || *v75 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v75;
          *((_QWORD *)a2 + 1) = v75 + 1;
        }
        v76 = *((_DWORD *)a2 + 14);
        v77 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v76 + 1;
        if (v76 >= v77)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)v74, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v78 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v78, 1);
        v79 = v78 - 1;
        if (v79 < 0 == v17)
          *((_DWORD *)a2 + 14) = v79;
        v80 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v80 >= *((_QWORD *)a2 + 2) || *v80 != 82)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v80 + 1;
LABEL_174:
          v81 = *((_DWORD *)this + 27);
          v82 = *((int *)this + 26);
          if ((int)v82 >= v81)
          {
            if (v81 == *((_DWORD *)this + 28))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              v81 = *((_DWORD *)this + 27);
            }
            *((_DWORD *)this + 27) = v81 + 1;
            v84 = operator new();
            *(_QWORD *)v84 = &off_1E25BC8C0;
            *(_QWORD *)(v84 + 8) = 0;
            *(_QWORD *)(v84 + 16) = 0;
            *(_QWORD *)(v84 + 24) = 0;
            *(_DWORD *)(v84 + 32) = 0;
            v85 = *((_QWORD *)this + 12);
            v86 = *((int *)this + 26);
            *((_DWORD *)this + 26) = v86 + 1;
            *(_QWORD *)(v85 + 8 * v86) = v84;
          }
          else
          {
            v83 = *((_QWORD *)this + 12);
            *((_DWORD *)this + 26) = v82 + 1;
            v84 = *(_QWORD *)(v83 + 8 * v82);
          }
          v161 = 0;
          v87 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v87 >= *((_QWORD *)a2 + 2) || *v87 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
          }
          else
          {
            v161 = *v87;
            *((_QWORD *)a2 + 1) = v87 + 1;
          }
          v88 = *((_DWORD *)a2 + 14);
          v89 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v88 + 1;
          if (v88 >= v89)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections *)v84, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v90 = *((_DWORD *)a2 + 14);
          v17 = __OFSUB__(v90, 1);
          v91 = v90 - 1;
          if (v91 < 0 == v17)
            *((_DWORD *)a2 + 14) = v91;
          v80 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v80 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v92 = *v80;
        }
        while (v92 == 82);
        if (v92 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v80 + 1;
LABEL_192:
        *((_DWORD *)this + 60) |= 0x400u;
        v93 = *((_QWORD *)this + 15);
        if (!v93)
        {
          v93 = operator new();
          *(_QWORD *)v93 = &off_1E25BE648;
          *(_BYTE *)(v93 + 80) = 0;
          *(_DWORD *)(v93 + 84) = 0;
          *(_DWORD *)(v93 + 88) = 0;
          *(_OWORD *)(v93 + 8) = 0u;
          *(_OWORD *)(v93 + 24) = 0u;
          *(_OWORD *)(v93 + 40) = 0u;
          *(_OWORD *)(v93 + 56) = 0u;
          *(_DWORD *)(v93 + 72) = 0;
          *((_QWORD *)this + 15) = v93;
        }
        v161 = 0;
        v94 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v94 >= *((_QWORD *)a2 + 2) || *v94 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v94;
          *((_QWORD *)a2 + 1) = v94 + 1;
        }
        v95 = *((_DWORD *)a2 + 14);
        v96 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v95 + 1;
        if (v95 >= v96)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)v93, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v97 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v97, 1);
        v98 = v97 - 1;
        if (v98 < 0 == v17)
          *((_DWORD *)a2 + 14) = v98;
        v99 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v99 >= *((_QWORD *)a2 + 2) || *v99 != 98)
          continue;
        *((_QWORD *)a2 + 1) = v99 + 1;
LABEL_206:
        *((_DWORD *)this + 60) |= 0x800u;
        v100 = *((_QWORD *)this + 16);
        if (!v100)
        {
          v100 = operator new();
          *(_QWORD *)v100 = &off_1E25BE558;
          *(_OWORD *)(v100 + 8) = 0u;
          *(_OWORD *)(v100 + 24) = 0u;
          *(_OWORD *)(v100 + 40) = 0u;
          *(_OWORD *)(v100 + 56) = 0u;
          *(_OWORD *)(v100 + 72) = 0u;
          *(_OWORD *)(v100 + 84) = 0u;
          *((_QWORD *)this + 16) = v100;
        }
        v161 = 0;
        v101 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v101 >= *((_QWORD *)a2 + 2) || *v101 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
        }
        else
        {
          v161 = *v101;
          *((_QWORD *)a2 + 1) = v101 + 1;
        }
        v102 = *((_DWORD *)a2 + 14);
        v103 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v102 + 1;
        if (v102 >= v103)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)v100, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v104 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v104, 1);
        v105 = v104 - 1;
        if (v105 < 0 == v17)
          *((_DWORD *)a2 + 14) = v105;
        v106 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v106 < v12 && *v106 == 104)
        {
          v13 = v106 + 1;
          *((_QWORD *)a2 + 1) = v13;
LABEL_220:
          v161 = 0;
          if ((unint64_t)v13 >= v12 || *v13 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161);
            if (!(_DWORD)result)
              return result;
            v107 = v161;
          }
          else
          {
            v107 = *v13;
            *((_QWORD *)a2 + 1) = v13 + 1;
          }
          if (v107 <= 7)
          {
            *((_DWORD *)this + 60) |= 0x1000u;
            *((_DWORD *)this + 58) = v107;
          }
          v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v109 < *((_QWORD *)a2 + 2) && *v109 == 114)
          {
            do
            {
              *((_QWORD *)a2 + 1) = v109 + 1;
LABEL_230:
              v110 = *((_DWORD *)this + 37);
              v111 = *((int *)this + 36);
              if ((int)v111 >= v110)
              {
                if (v110 == *((_DWORD *)this + 38))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v160);
                  v110 = *((_DWORD *)this + 37);
                }
                *((_DWORD *)this + 37) = v110 + 1;
                v113 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *)operator new();
                *((_QWORD *)v113 + 1) = 0;
                *((_QWORD *)v113 + 2) = 0;
                *(_QWORD *)v113 = &off_1E25BE468;
                v114 = *((_QWORD *)this + 17);
                v115 = *((int *)this + 36);
                *((_DWORD *)this + 36) = v115 + 1;
                *(_QWORD *)(v114 + 8 * v115) = v113;
              }
              else
              {
                v112 = *((_QWORD *)this + 17);
                *((_DWORD *)this + 36) = v111 + 1;
                v113 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v112 + 8 * v111);
              }
              v161 = 0;
              v116 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v116 >= *((_QWORD *)a2 + 2) || *v116 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
              }
              else
              {
                v161 = *v116;
                *((_QWORD *)a2 + 1) = v116 + 1;
              }
              v117 = *((_DWORD *)a2 + 14);
              v118 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v117 + 1;
              if (v117 >= v118)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(v113, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v119 = *((_DWORD *)a2 + 14);
              v17 = __OFSUB__(v119, 1);
              v120 = v119 - 1;
              if (v120 < 0 == v17)
                *((_DWORD *)a2 + 14) = v120;
              v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v109 >= *((_QWORD *)a2 + 2))
                goto LABEL_2;
              v121 = *v109;
            }
            while (v121 == 114);
            if (v121 == 122)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v109 + 1;
LABEL_248:
                v122 = *((_DWORD *)this + 43);
                v123 = *((int *)this + 42);
                if ((int)v123 >= v122)
                {
                  if (v122 == *((_DWORD *)this + 44))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                    v122 = *((_DWORD *)this + 43);
                  }
                  *((_DWORD *)this + 43) = v122 + 1;
                  v125 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *)operator new();
                  *((_QWORD *)v125 + 1) = 0;
                  *((_QWORD *)v125 + 2) = 0;
                  *(_QWORD *)v125 = &off_1E25BE468;
                  v126 = *((_QWORD *)this + 20);
                  v127 = *((int *)this + 42);
                  *((_DWORD *)this + 42) = v127 + 1;
                  *(_QWORD *)(v126 + 8 * v127) = v125;
                }
                else
                {
                  v124 = *((_QWORD *)this + 20);
                  *((_DWORD *)this + 42) = v123 + 1;
                  v125 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v124 + 8 * v123);
                }
                v161 = 0;
                v128 = (char *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v128 >= *((_QWORD *)a2 + 2) || *v128 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
                }
                else
                {
                  v161 = *v128;
                  *((_QWORD *)a2 + 1) = v128 + 1;
                }
                v129 = *((_DWORD *)a2 + 14);
                v130 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v129 + 1;
                if (v129 >= v130)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(v125, a2)|| !*((_BYTE *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                v131 = *((_DWORD *)a2 + 14);
                v17 = __OFSUB__(v131, 1);
                v132 = v131 - 1;
                if (v132 < 0 == v17)
                  *((_DWORD *)a2 + 14) = v132;
                v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v133 = *((_QWORD *)a2 + 2);
              }
              while ((unint64_t)v109 < v133 && *v109 == 122);
              if ((int)v133 - (int)v109 >= 2)
              {
                v134 = *v109;
                do
                {
                  if (v134 != 130 || v109[1] != 1)
                    goto LABEL_2;
                  *((_QWORD *)a2 + 1) = v109 + 2;
LABEL_268:
                  v135 = *((_DWORD *)this + 49);
                  v136 = *((int *)this + 48);
                  if ((int)v136 >= v135)
                  {
                    if (v135 == *((_DWORD *)this + 50))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v158);
                      v135 = *((_DWORD *)this + 49);
                    }
                    *((_DWORD *)this + 49) = v135 + 1;
                    v138 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *)operator new();
                    *((_QWORD *)v138 + 1) = 0;
                    *((_QWORD *)v138 + 2) = 0;
                    *(_QWORD *)v138 = &off_1E25BE468;
                    v139 = *((_QWORD *)this + 23);
                    v140 = *((int *)this + 48);
                    *((_DWORD *)this + 48) = v140 + 1;
                    *(_QWORD *)(v139 + 8 * v140) = v138;
                  }
                  else
                  {
                    v137 = *((_QWORD *)this + 23);
                    *((_DWORD *)this + 48) = v136 + 1;
                    v138 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v137 + 8 * v136);
                  }
                  v161 = 0;
                  v141 = (char *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v141 >= *((_QWORD *)a2 + 2) || *v141 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
                  }
                  else
                  {
                    v161 = *v141;
                    *((_QWORD *)a2 + 1) = v141 + 1;
                  }
                  v142 = *((_DWORD *)a2 + 14);
                  v143 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v142 + 1;
                  if (v142 >= v143)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(v138, a2)|| !*((_BYTE *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  v144 = *((_DWORD *)a2 + 14);
                  v17 = __OFSUB__(v144, 1);
                  v145 = v144 - 1;
                  if (v145 < 0 == v17)
                    *((_DWORD *)a2 + 14) = v145;
                  v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  if (*((_DWORD *)a2 + 4) - (int)v109 <= 1)
                    goto LABEL_2;
                  v134 = *v109;
                }
                while (v134 != 138);
                if (v109[1] == 1)
                {
                  do
                  {
                    *((_QWORD *)a2 + 1) = v109 + 2;
LABEL_288:
                    v146 = *((_DWORD *)this + 55);
                    v147 = *((int *)this + 54);
                    if ((int)v147 >= v146)
                    {
                      if (v146 == *((_DWORD *)this + 56))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v159);
                        v146 = *((_DWORD *)this + 55);
                      }
                      *((_DWORD *)this + 55) = v146 + 1;
                      v149 = operator new();
                      *(_QWORD *)v149 = &off_1E25B1048;
                      *(_QWORD *)(v149 + 8) = 0;
                      *(_QWORD *)(v149 + 16) = 0;
                      *(_QWORD *)(v149 + 24) = 0;
                      *(_BYTE *)(v149 + 32) = 0;
                      *(_QWORD *)(v149 + 36) = 2;
                      *(_DWORD *)(v149 + 44) = 0;
                      v150 = *((_QWORD *)this + 26);
                      v151 = *((int *)this + 54);
                      *((_DWORD *)this + 54) = v151 + 1;
                      *(_QWORD *)(v150 + 8 * v151) = v149;
                    }
                    else
                    {
                      v148 = *((_QWORD *)this + 26);
                      *((_DWORD *)this + 54) = v147 + 1;
                      v149 = *(_QWORD *)(v148 + 8 * v147);
                    }
                    v161 = 0;
                    v152 = (char *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v152 >= *((_QWORD *)a2 + 2) || *v152 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v161))return 0;
                    }
                    else
                    {
                      v161 = *v152;
                      *((_QWORD *)a2 + 1) = v152 + 1;
                    }
                    v153 = *((_DWORD *)a2 + 14);
                    v154 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v153 + 1;
                    if (v153 >= v154)
                      return 0;
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *)v149, a2)|| !*((_BYTE *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    v155 = *((_DWORD *)a2 + 14);
                    v17 = __OFSUB__(v155, 1);
                    v156 = v155 - 1;
                    if (v156 < 0 == v17)
                      *((_DWORD *)a2 + 14) = v156;
                    v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                    v157 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
                  }
                  while ((int)v157 - (int)v109 > 1 && *v109 == 138 && v109[1] == 1);
                  if (v109 == v157 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    result = 1;
                    *((_BYTE *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
        }
        break;
      case 3u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_72;
        goto LABEL_46;
      case 4u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_86;
        goto LABEL_46;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_100;
        goto LABEL_46;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_114;
        goto LABEL_46;
      case 7u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_132;
        goto LABEL_46;
      case 8u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_146;
        goto LABEL_46;
      case 9u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_160;
        goto LABEL_46;
      case 0xAu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_174;
        goto LABEL_46;
      case 0xBu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_192;
        goto LABEL_46;
      case 0xCu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_206;
        goto LABEL_46;
      case 0xDu:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_46;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_220;
      case 0xEu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_230;
        goto LABEL_46;
      case 0xFu:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_248;
        goto LABEL_46;
      case 0x10u:
        v9 = TagFallback & 7;
        if (v9 == 2)
          goto LABEL_268;
        goto LABEL_46;
      case 0x11u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_46;
        goto LABEL_288;
      default:
        v9 = TagFallback & 7;
LABEL_46:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = this;
  v6 = *(_DWORD *)(this + 240);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 240);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 240);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_16;
  }
LABEL_13:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 240);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_22;
    goto LABEL_19;
  }
LABEL_16:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                    + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 240) & 0x10) != 0)
  {
LABEL_19:
    v11 = *(_QWORD *)(v5 + 40);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 40);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  }
LABEL_22:
  if (*(int *)(v5 + 56) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 56));
  }
  v13 = *(_DWORD *)(v5 + 240);
  if ((v13 & 0x40) != 0)
  {
    v14 = *(_QWORD *)(v5 + 72);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 72);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v14, a2, a4);
    v13 = *(_DWORD *)(v5 + 240);
    if ((v13 & 0x80) == 0)
    {
LABEL_27:
      if ((v13 & 0x100) == 0)
        goto LABEL_38;
      goto LABEL_35;
    }
  }
  else if ((v13 & 0x80) == 0)
  {
    goto LABEL_27;
  }
  v15 = *(_QWORD *)(v5 + 80);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v15 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                    + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 240) & 0x100) != 0)
  {
LABEL_35:
    v16 = *(_QWORD *)(v5 + 88);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v16 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 88);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v16, a2, a4);
  }
LABEL_38:
  if (*(int *)(v5 + 104) >= 1)
  {
    v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_QWORD *)(*(_QWORD *)(v5 + 96) + 8 * v17++), a2, a4);
    while (v17 < *(int *)(v5 + 104));
  }
  v18 = *(_DWORD *)(v5 + 240);
  if ((v18 & 0x400) != 0)
  {
    v23 = *(_QWORD *)(v5 + 120);
    if (!v23)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v23 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 120);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v23, a2, a4);
    v18 = *(_DWORD *)(v5 + 240);
    if ((v18 & 0x800) == 0)
    {
LABEL_43:
      if ((v18 & 0x1000) == 0)
        goto LABEL_45;
      goto LABEL_44;
    }
  }
  else if ((v18 & 0x800) == 0)
  {
    goto LABEL_43;
  }
  v24 = *(_QWORD *)(v5 + 128);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v24 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                    + 128);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v24, a2, a4);
  if ((*(_DWORD *)(v5 + 240) & 0x1000) != 0)
LABEL_44:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 232), (uint64_t)a2, a4);
LABEL_45:
  if (*(int *)(v5 + 144) >= 1)
  {
    v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * v19++), a2, a4);
    while (v19 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_QWORD *)(*(_QWORD *)(v5 + 160) + 8 * v20++), a2, a4);
    while (v20 < *(int *)(v5 + 168));
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    v21 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_QWORD *)(*(_QWORD *)(v5 + 184) + 8 * v21++), a2, a4);
    while (v21 < *(int *)(v5 + 192));
  }
  if (*(int *)(v5 + 216) >= 1)
  {
    v22 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(_QWORD *)(*(_QWORD *)(v5 + 208) + 8 * v22++), a2, a4);
    while (v22 < *(int *)(v5 + 216));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  int v2;
  int v3;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  int v26;
  int v27;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  int v31;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *v36;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v37;
  int v38;
  int v39;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *v40;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v41;
  int v42;
  int v43;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v67;
  int v68;
  int v69;
  int v70;
  int v71;
  uint64_t v72;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v79;
  int v80;
  int v81;

  v2 = *((_DWORD *)this + 60);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_54;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 8);
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  v2 = *((_DWORD *)this + 60);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 60);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v12 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((_QWORD *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v12 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                + 24);
    }
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::ByteSize(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      v15 = 1;
    v3 += v14 + v15 + 1;
    v2 = *((_DWORD *)this + 60);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v16 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((_QWORD *)this + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v16 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                              + 32);
  }
  v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::ByteSize(v16);
  v18 = (int)v17;
  if (v17 >= 0x80)
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  else
    v19 = 1;
  v3 += v18 + v19 + 1;
  v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x40) == 0)
      goto LABEL_22;
    goto LABEL_42;
  }
LABEL_36:
  v20 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((_QWORD *)this + 5);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v20 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                   + 40);
  }
  v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::ByteSize(v20);
  v22 = (int)v21;
  if (v21 >= 0x80)
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  else
    v23 = 1;
  v3 += v22 + v23 + 1;
  v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_22:
    if ((v2 & 0x80) == 0)
      goto LABEL_54;
    goto LABEL_48;
  }
LABEL_42:
  v24 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)this + 9);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v24 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 72);
  }
  v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(v24);
  v26 = (int)v25;
  if (v25 >= 0x80)
    v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
  else
    v27 = 1;
  v3 += v26 + v27 + 1;
  v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    v28 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)this + 10);
    if (!v28)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v28 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 80);
    }
    v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(v28);
    v30 = (int)v29;
    if (v29 >= 0x80)
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    else
      v31 = 1;
    v3 += v30 + v31 + 1;
    v2 = *((_DWORD *)this + 60);
  }
LABEL_54:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_84;
  if ((v2 & 0x100) != 0)
  {
    v32 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((_QWORD *)this + 11);
    if (!v32)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v32 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 88);
    }
    v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(v32);
    v34 = (int)v33;
    if (v33 >= 0x80)
      v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    else
      v35 = 1;
    v3 += v34 + v35 + 1;
    v2 = *((_DWORD *)this + 60);
    if ((v2 & 0x400) == 0)
    {
LABEL_57:
      if ((v2 & 0x800) == 0)
        goto LABEL_58;
      goto LABEL_72;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_57;
  }
  v36 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((_QWORD *)this + 15);
  if (!v36)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v36 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 120);
  }
  v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::ByteSize(v36);
  v38 = (int)v37;
  if (v37 >= 0x80)
    v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
  else
    v39 = 1;
  v3 += v38 + v39 + 1;
  v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x800) == 0)
  {
LABEL_58:
    if ((v2 & 0x1000) == 0)
      goto LABEL_84;
    goto LABEL_78;
  }
LABEL_72:
  v40 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((_QWORD *)this + 16);
  if (!v40)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v40 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 128);
  }
  v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::ByteSize(v40);
  v42 = (int)v41;
  if (v41 >= 0x80)
    v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  else
    v43 = 1;
  v3 += v42 + v43 + 1;
  if ((*((_DWORD *)this + 60) & 0x1000) != 0)
  {
LABEL_78:
    v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 58);
    if ((v44 & 0x80000000) != 0)
    {
      v45 = 10;
    }
    else if (v44 >= 0x80)
    {
      v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
    }
    else
    {
      v45 = 1;
    }
    v3 += v45 + 1;
  }
LABEL_84:
  v46 = *((_DWORD *)this + 14);
  v47 = v46 + v3;
  if (v46 >= 1)
  {
    v48 = 0;
    do
    {
      v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData **)(*((_QWORD *)this + 6) + 8 * v48));
      v50 = (int)v49;
      if (v49 >= 0x80)
        v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
      else
        v51 = 1;
      v47 += v50 + v51;
      ++v48;
    }
    while (v48 < *((int *)this + 14));
  }
  v52 = *((_DWORD *)this + 26);
  v53 = v52 + v47;
  if (v52 >= 1)
  {
    v54 = 0;
    do
    {
      v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections **)(*((_QWORD *)this + 12) + 8 * v54));
      v56 = (int)v55;
      if (v55 >= 0x80)
        v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
      else
        v57 = 1;
      v53 += v56 + v57;
      ++v54;
    }
    while (v54 < *((int *)this + 26));
  }
  v58 = *((_DWORD *)this + 36);
  v59 = v58 + v53;
  if (v58 >= 1)
  {
    v60 = 0;
    do
    {
      v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((_QWORD *)this + 17) + 8 * v60));
      v62 = (int)v61;
      if (v61 >= 0x80)
        v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61);
      else
        v63 = 1;
      v59 += v62 + v63;
      ++v60;
    }
    while (v60 < *((int *)this + 36));
  }
  v64 = *((_DWORD *)this + 42);
  v65 = v64 + v59;
  if (v64 >= 1)
  {
    v66 = 0;
    do
    {
      v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((_QWORD *)this + 20) + 8 * v66));
      v68 = (int)v67;
      if (v67 >= 0x80)
        v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67);
      else
        v69 = 1;
      v65 += v68 + v69;
      ++v66;
    }
    while (v66 < *((int *)this + 42));
  }
  v70 = *((_DWORD *)this + 48);
  v71 = v65 + 2 * v70;
  if (v70 >= 1)
  {
    v72 = 0;
    do
    {
      v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((_QWORD *)this + 23) + 8 * v72));
      v74 = (int)v73;
      if (v73 >= 0x80)
        v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v73);
      else
        v75 = 1;
      v71 += v74 + v75;
      ++v72;
    }
    while (v72 < *((int *)this + 48));
  }
  v76 = *((_DWORD *)this + 54);
  v77 = (v71 + 2 * v76);
  if (v76 >= 1)
  {
    v78 = 0;
    do
    {
      v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility **)(*((_QWORD *)this + 26) + 8 * v78));
      v80 = (int)v79;
      if (v79 >= 0x80)
        v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79);
      else
        v81 = 1;
      v77 = (v80 + v77 + v81);
      ++v78;
    }
    while (v78 < *((int *)this + 54));
  }
  *((_DWORD *)this + 59) = v77;
  return v77;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *v3;
  double result;
  int v5;
  uint64_t v6;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *v7;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *v8;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *v9;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *v10;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v11;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v12;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v13;
  const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v14;
  _BYTE v15[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 60);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 60) & 1) != 0)
  {
    v6 = *((_QWORD *)a2 + 1);
    *((_DWORD *)v3 + 15) |= 1u;
    *((_QWORD *)v3 + 1) = v6;
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_18;
    }
  }
  else if ((*((_BYTE *)a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 15) |= 2u;
  v7 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((_QWORD *)v3 + 2);
  if (!v7)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)operator new();
    v7 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BEC60;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v8 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((_QWORD *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v8 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                                 + 16);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(v7, v8);
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
LABEL_23:
    *((_DWORD *)v3 + 15) |= 8u;
    v11 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)v3 + 4);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25BF638;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 4) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)a2 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                       + 32);
    }
    result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v11, v12);
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return result;
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_18:
  *((_DWORD *)v3 + 15) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((_QWORD *)v3 + 3);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)operator new();
    v9 = this;
    *(_QWORD *)this = &off_1E25BECD8;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((_QWORD *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                                  + 24);
  }
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(v9, v10);
  v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 8) != 0)
    goto LABEL_23;
LABEL_8:
  if ((v5 & 0x10) == 0)
    goto LABEL_9;
LABEL_28:
  *((_DWORD *)v3 + 15) |= 0x10u;
  v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)v3 + 5);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)operator new();
    v13 = this;
    *(_QWORD *)this = &off_1E25BF638;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 5) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)a2 + 5);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                     + 40);
  }
  result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v13, v14);
  if ((*((_DWORD *)a2 + 15) & 0x20) != 0)
  {
LABEL_10:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 15) |= 0x20u;
    *((double *)v3 + 6) = result;
  }
  return result;
}

void sub_18D0BD2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  double result;
  int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 12) |= 4u;
    *((double *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 12) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 12) & 0x10) == 0)
      return result;
LABEL_9:
    v6 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_DWORD *)this + 10) = v6;
  }
  return result;
}

void sub_18D0BD3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_15;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 3) = v7;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_16;
    }
LABEL_15:
    v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 4) = v8;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_17;
    }
LABEL_16:
    v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 5) = v9;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_17:
    v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 6) = v10;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        return;
      goto LABEL_11;
    }
LABEL_18:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    if ((*((_DWORD *)a2 + 10) & 0x40) == 0)
      return;
LABEL_11:
    v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x40u;
    *((_DWORD *)this + 8) = v5;
  }
}

void sub_18D0BD55C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  _QWORD *v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v15;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v16;
  char v17;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *v18;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  v4 = (_QWORD *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData **)(*((_QWORD *)a2 + 7) + 8 * v6);
      v8 = *((_DWORD *)this + 17);
      v9 = *((int *)this + 16);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)((char *)this + 56));
          v8 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25BE4E0;
        *(_QWORD *)(v11 + 80) = 0;
        *(_QWORD *)(v11 + 88) = 0;
        *(_DWORD *)(v11 + 96) = 0;
        *(_OWORD *)(v11 + 8) = 0u;
        *(_OWORD *)(v11 + 24) = 0u;
        *(_OWORD *)(v11 + 40) = 0u;
        *(_OWORD *)(v11 + 56) = 0u;
        *(_DWORD *)(v11 + 72) = 0;
        v12 = *((_QWORD *)this + 7);
        v13 = *((int *)this + 16);
        *((_DWORD *)this + 16) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 7);
        *((_DWORD *)this + 16) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 16));
  }
  LOBYTE(v14) = *((_BYTE *)a2 + 88);
  if ((_BYTE)v14)
  {
    if ((*((_BYTE *)a2 + 88) & 1) != 0)
    {
      *((_DWORD *)this + 22) |= 1u;
      v15 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 1);
      if (!v15)
      {
        v4 = (_QWORD *)operator new();
        v15 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)v4;
        *v4 = &off_1E25BDEC8;
        v4[1] = 0;
        v4[2] = 0;
        v4[3] = 0;
        *((_QWORD *)this + 1) = v4;
      }
      v16 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)a2 + 1);
      if (!v16)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v4);
        v16 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 8);
      }
      result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v15, v16);
      v14 = *((_DWORD *)a2 + 22);
      if ((v14 & 2) == 0)
      {
LABEL_14:
        if ((v14 & 4) == 0)
          goto LABEL_15;
        goto LABEL_26;
      }
    }
    else if ((*((_BYTE *)a2 + 88) & 2) == 0)
    {
      goto LABEL_14;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 22) |= 2u;
    *((double *)this + 2) = result;
    v14 = *((_DWORD *)a2 + 22);
    if ((v14 & 4) == 0)
    {
LABEL_15:
      if ((v14 & 8) == 0)
        goto LABEL_16;
      goto LABEL_27;
    }
LABEL_26:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 22) |= 4u;
    *((double *)this + 3) = result;
    v14 = *((_DWORD *)a2 + 22);
    if ((v14 & 8) == 0)
    {
LABEL_16:
      if ((v14 & 0x10) == 0)
        goto LABEL_17;
      goto LABEL_28;
    }
LABEL_27:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 22) |= 8u;
    *((double *)this + 4) = result;
    v14 = *((_DWORD *)a2 + 22);
    if ((v14 & 0x10) == 0)
    {
LABEL_17:
      if ((v14 & 0x20) == 0)
        goto LABEL_18;
      goto LABEL_29;
    }
LABEL_28:
    result = *((double *)a2 + 5);
    *((_DWORD *)this + 22) |= 0x10u;
    *((double *)this + 5) = result;
    v14 = *((_DWORD *)a2 + 22);
    if ((v14 & 0x20) == 0)
    {
LABEL_18:
      if ((v14 & 0x40) == 0)
        return result;
      goto LABEL_30;
    }
LABEL_29:
    v17 = *((_BYTE *)a2 + 80);
    *((_DWORD *)this + 22) |= 0x20u;
    *((_BYTE *)this + 80) = v17;
    if ((*((_DWORD *)a2 + 22) & 0x40) == 0)
      return result;
LABEL_30:
    *((_DWORD *)this + 22) |= 0x40u;
    v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((_QWORD *)this + 6);
    if (!v18)
    {
      v4 = (_QWORD *)operator new();
      v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)v4;
      *v4 = &off_1E25BE300;
      *(_OWORD *)(v4 + 1) = 0u;
      *(_OWORD *)(v4 + 3) = 0u;
      v4[5] = 0;
      *((_QWORD *)this + 6) = v4;
    }
    v19 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((_QWORD *)a2 + 6);
    if (!v19)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v4);
      v19 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 48);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(v18, v19);
  }
  return result;
}

void sub_18D0BD868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    v8 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v8;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v9 = *((_QWORD *)v3 + 9);
    *((_QWORD *)v3 + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v9;
    v10 = *((_QWORD *)v3 + 10);
    *((_QWORD *)v3 + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v10;
    v11 = *((_QWORD *)v3 + 11);
    *((_QWORD *)v3 + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v11;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v12 = *((_QWORD *)v3 + 15);
    *((_QWORD *)v3 + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v12;
    v13 = *((_QWORD *)v3 + 16);
    *((_QWORD *)v3 + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v13;
    LODWORD(v13) = *((_DWORD *)v3 + 58);
    *((_DWORD *)v3 + 58) = *((_DWORD *)a2 + 58);
    *((_DWORD *)a2 + 58) = v13;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v14 = *((_DWORD *)v3 + 60);
    *((_DWORD *)v3 + 60) = *((_DWORD *)a2 + 60);
    *((_DWORD *)a2 + 60) = v14;
    v15 = *((_DWORD *)v3 + 59);
    *((_DWORD *)v3 + 59) = *((_DWORD *)a2 + 59);
    *((_DWORD *)a2 + 59) = v15;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssMsmtAnalysisToolDataCapture");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_BYTE *)this + 32) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)&result = 2;
  *(_QWORD *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SatelliteVisibility(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  *(_QWORD *)this = &off_1E25B1048;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_BYTE *)this + 32) = 0;
  *(_QWORD *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(this, a2);
  return this;
}

void sub_18D0BDAA8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v5;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      *((_DWORD *)v3 + 11) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *)operator new();
        v5 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BE120;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ + 8);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_16;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)v3 + 11) |= 2u;
    *((_QWORD *)v3 + 2) = v7;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_17;
    }
LABEL_16:
    v8 = *((_QWORD *)a2 + 3);
    *((_DWORD *)v3 + 11) |= 4u;
    *((_QWORD *)v3 + 3) = v8;
    v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        return;
LABEL_18:
      v10 = *((_DWORD *)a2 + 9);
      if (v10 >= 3)
        __assert_rtn("set_los_status", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3968, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::LineOfSight_IsValid(value)");
      *((_DWORD *)v3 + 11) |= 0x10u;
      *((_DWORD *)v3 + 9) = v10;
      return;
    }
LABEL_17:
    v9 = *((_BYTE *)a2 + 32);
    *((_DWORD *)v3 + 11) |= 8u;
    *((_BYTE *)v3 + 32) = v9;
    if ((*((_DWORD *)a2 + 11) & 0x10) == 0)
      return;
    goto LABEL_18;
  }
}

void sub_18D0BDC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::~SatelliteVisibility(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25B1048;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::~SatelliteVisibility(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25B1048;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 0;
  *(_QWORD *)&result = 2;
  *(_QWORD *)(v1 + 36) = 2;
  *(_DWORD *)(v1 + 44) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 44))
  {
    if ((*(_BYTE *)(this + 44) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_BYTE *)(this + 32) = 0;
    *(_DWORD *)(this + 36) = 2;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v7;
  char *v8;
  unint64_t v9;
  char *v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  unsigned int v20;
  _BYTE *v21;
  uint64_t result;
  unsigned int v23;
  unsigned int v24[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_21;
        *((_DWORD *)this + 11) |= 1u;
        v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)operator new();
          *((_QWORD *)v7 + 1) = 0;
          *((_QWORD *)v7 + 2) = 0;
          *(_QWORD *)v7 = &off_1E25BE120;
          *((_QWORD *)this + 1) = v7;
        }
        v24[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0;
        }
        else
        {
          v24[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
        goto LABEL_34;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
LABEL_34:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v24;
        *((_DWORD *)this + 11) |= 2u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_38:
        *(_QWORD *)v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) != 0)
        {
          *((_QWORD *)this + 3) = *(_QWORD *)v24;
          *((_DWORD *)this + 11) |= 4u;
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v19 < v9 && *v19 == 32)
          {
            v10 = v19 + 1;
            *((_QWORD *)a2 + 1) = v10;
LABEL_42:
            v24[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
              if (!(_DWORD)result)
                return result;
              v20 = v24[0];
              v21 = (_BYTE *)*((_QWORD *)a2 + 1);
              v9 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v20 = *v10;
              v21 = v10 + 1;
              *((_QWORD *)a2 + 1) = v21;
            }
            *((_BYTE *)this + 32) = v20 != 0;
            *((_DWORD *)this + 11) |= 8u;
            if ((unint64_t)v21 < v9 && *v21 == 40)
            {
              v11 = v21 + 1;
              *((_QWORD *)a2 + 1) = v11;
LABEL_50:
              v24[0] = 0;
              if ((unint64_t)v11 >= v9 || *v11 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
                if (!(_DWORD)result)
                  return result;
                v23 = v24[0];
              }
              else
              {
                v23 = *v11;
                *((_QWORD *)a2 + 1) = v11 + 1;
              }
              if (v23 <= 2)
              {
                *((_DWORD *)this + 11) |= 0x10u;
                *((_DWORD *)this + 9) = v23;
              }
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_38;
        goto LABEL_21;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_42;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_21;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_50;
      default:
        v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 44) & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 11);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v4 = v3 + 2;
    else
      v4 = v3;
    if ((v2 & 0x10) != 0)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
      if ((v9 & 0x80000000) != 0)
      {
        v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      }
      else
      {
        v10 = 2;
      }
      v4 = (v10 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 7)
        __assert_rtn("set_constellation", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6927, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::Constellation_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18D0BE45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    LOBYTE(v2) = *((_BYTE *)this + 32);
    *((_BYTE *)this + 32) = *((_BYTE *)a2 + 32);
    *((_BYTE *)a2 + 32) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.SatelliteVisibility");
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::PerBandMeasurementCount(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BE468;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(this, a2);
  return this;
}

void sub_18D0BE598(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  int v4;
  unsigned int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xD)
        __assert_rtn("set_gnss_band", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3995, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18D0BE67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::~PerBandMeasurementCount(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  *(_QWORD *)this = &off_1E25BE468;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::~PerBandMeasurementCount(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BE468;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v15 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v10 = v15;
      }
      else
      {
        v10 = *v9;
        *((_QWORD *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 0xC)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_25:
        v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!(_DWORD)result)
            return result;
          v12 = v16;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 3) = v12;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.PerBandMeasurementCount");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::TimeStamps(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  *(_QWORD *)this = &off_1E25BDF40;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(this, a2);
  return this;
}

void sub_18D0BEBA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::~TimeStamps(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  *(_QWORD *)this = &off_1E25BDF40;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::~TimeStamps(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 2);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 4);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 5);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDF40;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  int v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int v15;
  int v16;
  int v17;
  BOOL v18;
  int v19;
  _BYTE *v20;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  unsigned int v42[2];

  v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_22;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        v11 = *((_DWORD *)this + 15) | 1;
        *((_DWORD *)this + 15) = v11;
        if ((unint64_t)v10 < v8 && *v10 == 18)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_22;
        v11 = *((_DWORD *)this + 15);
LABEL_30:
        *((_DWORD *)this + 15) = v11 | 2;
        v13 = *((_QWORD *)this + 2);
        if (!v13)
        {
          v13 = operator new();
          *(_QWORD *)(v13 + 8) = 0;
          *(_QWORD *)(v13 + 16) = 0;
          *(_QWORD *)v13 = &off_1E25BEC60;
          *(_DWORD *)(v13 + 24) = 0;
          *((_QWORD *)this + 2) = v13;
        }
        v42[0] = 0;
        v14 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0;
        }
        else
        {
          v42[0] = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        v15 = *((_DWORD *)a2 + 14);
        v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)v13, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v17 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (v19 < 0 == v18)
          *((_DWORD *)a2 + 14) = v19;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_44:
        *((_DWORD *)this + 15) |= 4u;
        v21 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((_QWORD *)this + 3);
        if (!v21)
        {
          v21 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)operator new();
          *(_QWORD *)v21 = &off_1E25BECD8;
          *((_QWORD *)v21 + 1) = 0;
          *((_QWORD *)v21 + 2) = 0;
          *((_QWORD *)v21 + 3) = 0;
          *((_QWORD *)this + 3) = v21;
        }
        v42[0] = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0;
        }
        else
        {
          v42[0] = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergePartialFromCodedStream(v21, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v18)
          *((_DWORD *)a2 + 14) = v26;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_58:
        *((_DWORD *)this + 15) |= 8u;
        v28 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 4);
        if (!v28)
        {
          v28 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)operator new();
          *(_QWORD *)v28 = &off_1E25BF638;
          *((_QWORD *)v28 + 1) = 0;
          *((_QWORD *)v28 + 2) = 0;
          *((_QWORD *)v28 + 3) = 0;
          *((_QWORD *)this + 4) = v28;
        }
        v42[0] = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0;
        }
        else
        {
          v42[0] = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v28, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v18)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_72:
        *((_DWORD *)this + 15) |= 0x10u;
        v35 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 5);
        if (!v35)
        {
          v35 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)operator new();
          *(_QWORD *)v35 = &off_1E25BF638;
          *((_QWORD *)v35 + 1) = 0;
          *((_QWORD *)v35 + 2) = 0;
          *((_QWORD *)v35 + 3) = 0;
          *((_QWORD *)this + 5) = v35;
        }
        v42[0] = 0;
        v36 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0;
        }
        else
        {
          v42[0] = *v36;
          *((_QWORD *)a2 + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)a2 + 14);
        v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v35, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v39 = *((_DWORD *)a2 + 14);
        v18 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v18)
          *((_DWORD *)a2 + 14) = v40;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_86:
        *(_QWORD *)v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v42;
        *((_DWORD *)this + 15) |= 0x20u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_44;
        goto LABEL_22;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_58;
        goto LABEL_22;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_72;
        goto LABEL_22;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_22;
        goto LABEL_86;
      default:
        v7 = TagFallback & 7;
LABEL_22:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *(_QWORD *)(v5 + 16);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_15;
  }
LABEL_12:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_15:
  v9 = *(_QWORD *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                   + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  }
LABEL_18:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                    + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;

  LOBYTE(v2) = *((_BYTE *)this + 60);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_38;
  }
  if ((*((_BYTE *)this + 60) & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0)
      goto LABEL_13;
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 60) & 2) == 0)
      goto LABEL_13;
  }
  v5 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((_QWORD *)this + 2);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                           + 16);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 += v7 + v8 + 1;
  v2 = *((_DWORD *)this + 15);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_15;
LABEL_23:
    v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v13 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                 + 32);
    }
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v13);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v16 = 1;
    v3 += v15 + v16 + 1;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 0x10) == 0)
      goto LABEL_35;
    goto LABEL_29;
  }
  v9 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((_QWORD *)this + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v9 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                           + 24);
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::ByteSize(v9);
  v11 = (int)v10;
  if (v10 >= 0x80)
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  else
    v12 = 1;
  v3 += v11 + v12 + 1;
  v2 = *((_DWORD *)this + 15);
  if ((v2 & 8) != 0)
    goto LABEL_23;
LABEL_15:
  if ((v2 & 0x10) != 0)
  {
LABEL_29:
    v17 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((_QWORD *)this + 5);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v17 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                 + 40);
    }
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v17);
    v19 = (int)v18;
    if (v18 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    else
      v20 = 1;
    v3 += v19 + v20 + 1;
    v2 = *((_DWORD *)this + 15);
  }
LABEL_35:
  if ((v2 & 0x20) != 0)
    result = v3 + 9;
  else
    result = v3;
LABEL_38:
  *((_DWORD *)this + 14) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    result = *((double *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v7) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v7;
    LODWORD(v7) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.TimeStamps");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ClockOffsets(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  *(_QWORD *)this = &off_1E25BDFB8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(this, a2);
  return this;
}

void sub_18D0BF754(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::~ClockOffsets(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  *(_QWORD *)this = &off_1E25BDFB8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::~ClockOffsets(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDFB8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  unint64_t v10;
  _BYTE *v11;
  char *v12;
  unsigned int v13;
  unsigned __int8 *v14;
  uint64_t result;
  unsigned int v16[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
        *(_QWORD *)v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v16;
        *((_DWORD *)this + 12) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
LABEL_14:
        *(_QWORD *)v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v16;
        *((_DWORD *)this + 12) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        *(_QWORD *)v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v16;
        *((_DWORD *)this + 12) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        *(_QWORD *)v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) != 0)
        {
          *((_QWORD *)this + 4) = *(_QWORD *)v16;
          *((_DWORD *)this + 12) |= 8u;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v11 < v10 && *v11 == 40)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
LABEL_33:
            v16[0] = 0;
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
              if (!(_DWORD)result)
                return result;
              v13 = v16[0];
              v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v10 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v13 = *v12;
              v14 = (unsigned __int8 *)(v12 + 1);
              *((_QWORD *)a2 + 1) = v14;
            }
            *((_DWORD *)this + 10) = v13;
            *((_DWORD *)this + 12) |= 0x10u;
            if (v14 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_29;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_29;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_29;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_33;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((unsigned __int8 *)this + 48);
  if (*((_BYTE *)this + 48))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 0x10) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v5 & 0x80000000) != 0)
      {
        v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else
      {
        v6 = 2;
      }
      v4 = (v6 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  int v6;
  int v7;
  int v8;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    v6 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    v7 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
    v8 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.ClockOffsets");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  double result;

  *((_QWORD *)this + 31) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  *(_QWORD *)this = &off_1E25BE198;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *((_QWORD *)this + 31) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(this, a2);
  return this;
}

void sub_18D0BFE70(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *v3;
  double result;
  unsigned int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::SvId *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *v9;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *v10;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *v11;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *v12;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *v13;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  _BYTE v18[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *((_DWORD *)a2 + 63);
  if (!(_BYTE)v5)
    goto LABEL_13;
  if ((v5 & 1) != 0)
  {
    *((_DWORD *)v3 + 63) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)operator new();
      v6 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25BD478;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 16);
  *((_DWORD *)v3 + 63) |= 2u;
  *((_DWORD *)v3 + 16) = v8;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0)
      goto LABEL_8;
    goto LABEL_34;
  }
LABEL_29:
  *((_DWORD *)v3 + 63) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((_QWORD *)v3 + 2);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)operator new();
    v9 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BEC60;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((_QWORD *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                                  + 16);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(v9, v10);
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_35;
  }
LABEL_34:
  result = *((double *)a2 + 3);
  *((_DWORD *)v3 + 63) |= 8u;
  *((double *)v3 + 3) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0)
      goto LABEL_10;
LABEL_36:
    *((_DWORD *)v3 + 63) |= 0x20u;
    v11 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((_QWORD *)v3 + 5);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25BE0A8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)this + 5) = 0;
      *((_QWORD *)v3 + 5) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((_QWORD *)a2 + 5);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 40);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(v11, v12);
    v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_35:
  result = *((double *)a2 + 4);
  *((_DWORD *)v3 + 63) |= 0x10u;
  *((double *)v3 + 4) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x20) != 0)
    goto LABEL_36;
LABEL_10:
  if ((v5 & 0x40) == 0)
    goto LABEL_11;
LABEL_41:
  *((_DWORD *)v3 + 63) |= 0x40u;
  v13 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((_QWORD *)v3 + 6);
  if (!v13)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)operator new();
    v13 = this;
    *(_QWORD *)this = &off_1E25BE210;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)this + 5) = 0;
    *((_QWORD *)v3 + 6) = this;
  }
  v14 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((_QWORD *)a2 + 6);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v14 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 48);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(v13, v14);
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    result = *((double *)a2 + 7);
    *((_DWORD *)v3 + 63) |= 0x80u;
    *((double *)v3 + 7) = result;
    v5 = *((_DWORD *)a2 + 63);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0)
    goto LABEL_58;
  if ((v5 & 0x100) != 0)
  {
    result = *((double *)a2 + 9);
    *((_DWORD *)v3 + 63) |= 0x100u;
    *((double *)v3 + 9) = result;
    v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_49;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  result = *((double *)a2 + 10);
  *((_DWORD *)v3 + 63) |= 0x200u;
  *((double *)v3 + 10) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_50;
  }
LABEL_49:
  result = *((double *)a2 + 11);
  *((_DWORD *)v3 + 63) |= 0x400u;
  *((double *)v3 + 11) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_51;
  }
LABEL_50:
  result = *((double *)a2 + 12);
  *((_DWORD *)v3 + 63) |= 0x800u;
  *((double *)v3 + 12) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0)
      goto LABEL_20;
    goto LABEL_52;
  }
LABEL_51:
  result = *((double *)a2 + 13);
  *((_DWORD *)v3 + 63) |= 0x1000u;
  *((double *)v3 + 13) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0)
      goto LABEL_21;
    goto LABEL_54;
  }
LABEL_52:
  v15 = *((_DWORD *)a2 + 17);
  if (v15 >= 5)
    __assert_rtn("set_multipath_indicator", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 4740, "::CoreNavigation::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(value)");
  *((_DWORD *)v3 + 63) |= 0x2000u;
  *((_DWORD *)v3 + 17) = v15;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0)
      goto LABEL_58;
    goto LABEL_56;
  }
LABEL_54:
  v16 = *((_DWORD *)a2 + 28);
  if (v16 >= 3)
    __assert_rtn("set_line_of_sight", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 4763, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::LineOfSight_IsValid(value)");
  *((_DWORD *)v3 + 63) |= 0x4000u;
  *((_DWORD *)v3 + 28) = v16;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x8000) != 0)
  {
LABEL_56:
    v17 = *((_DWORD *)a2 + 29);
    if (v17 >= 0xD)
      __assert_rtn("set_gnss_band", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 4786, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    *((_DWORD *)v3 + 63) |= 0x8000u;
    *((_DWORD *)v3 + 29) = v17;
    v5 = *((_DWORD *)a2 + 63);
  }
LABEL_58:
  if ((v5 & 0xFF0000) == 0)
    goto LABEL_68;
  if ((v5 & 0x10000) != 0)
  {
    result = *((double *)a2 + 15);
    *((_DWORD *)v3 + 63) |= 0x10000u;
    *((double *)v3 + 15) = result;
    v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x20000) == 0)
    {
LABEL_61:
      if ((v5 & 0x40000) == 0)
        goto LABEL_62;
      goto LABEL_80;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_61;
  }
  result = *((double *)a2 + 16);
  *((_DWORD *)v3 + 63) |= 0x20000u;
  *((double *)v3 + 16) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x40000) == 0)
  {
LABEL_62:
    if ((v5 & 0x80000) == 0)
      goto LABEL_63;
    goto LABEL_81;
  }
LABEL_80:
  result = *((double *)a2 + 17);
  *((_DWORD *)v3 + 63) |= 0x40000u;
  *((double *)v3 + 17) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x80000) == 0)
  {
LABEL_63:
    if ((v5 & 0x100000) == 0)
      goto LABEL_64;
    goto LABEL_82;
  }
LABEL_81:
  result = *((double *)a2 + 18);
  *((_DWORD *)v3 + 63) |= 0x80000u;
  *((double *)v3 + 18) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x100000) == 0)
  {
LABEL_64:
    if ((v5 & 0x200000) == 0)
      goto LABEL_65;
    goto LABEL_83;
  }
LABEL_82:
  result = *((double *)a2 + 19);
  *((_DWORD *)v3 + 63) |= 0x100000u;
  *((double *)v3 + 19) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x200000) == 0)
  {
LABEL_65:
    if ((v5 & 0x400000) == 0)
      goto LABEL_66;
    goto LABEL_84;
  }
LABEL_83:
  result = *((double *)a2 + 20);
  *((_DWORD *)v3 + 63) |= 0x200000u;
  *((double *)v3 + 20) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x400000) == 0)
  {
LABEL_66:
    if ((v5 & 0x800000) == 0)
      goto LABEL_68;
    goto LABEL_67;
  }
LABEL_84:
  result = *((double *)a2 + 21);
  *((_DWORD *)v3 + 63) |= 0x400000u;
  *((double *)v3 + 21) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x800000) != 0)
  {
LABEL_67:
    result = *((double *)a2 + 22);
    *((_DWORD *)v3 + 63) |= 0x800000u;
    *((double *)v3 + 22) = result;
    v5 = *((_DWORD *)a2 + 63);
  }
LABEL_68:
  if (!HIBYTE(v5))
    return result;
  if ((v5 & 0x1000000) != 0)
  {
    result = *((double *)a2 + 23);
    *((_DWORD *)v3 + 63) |= 0x1000000u;
    *((double *)v3 + 23) = result;
    v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_71:
      if ((v5 & 0x4000000) == 0)
        goto LABEL_72;
      goto LABEL_88;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_71;
  }
  result = *((double *)a2 + 24);
  *((_DWORD *)v3 + 63) |= 0x2000000u;
  *((double *)v3 + 24) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x8000000) == 0)
      goto LABEL_73;
    goto LABEL_89;
  }
LABEL_88:
  result = *((double *)a2 + 25);
  *((_DWORD *)v3 + 63) |= 0x4000000u;
  *((double *)v3 + 25) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_73:
    if ((v5 & 0x10000000) == 0)
      goto LABEL_74;
    goto LABEL_90;
  }
LABEL_89:
  result = *((double *)a2 + 26);
  *((_DWORD *)v3 + 63) |= 0x8000000u;
  *((double *)v3 + 26) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x20000000) == 0)
      goto LABEL_75;
    goto LABEL_91;
  }
LABEL_90:
  result = *((double *)a2 + 27);
  *((_DWORD *)v3 + 63) |= 0x10000000u;
  *((double *)v3 + 27) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x40000000) == 0)
      goto LABEL_76;
    goto LABEL_92;
  }
LABEL_91:
  result = *((double *)a2 + 28);
  *((_DWORD *)v3 + 63) |= 0x20000000u;
  *((double *)v3 + 28) = result;
  v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x80000000) == 0)
      return result;
LABEL_93:
    result = *((double *)a2 + 30);
    *((_DWORD *)v3 + 63) |= 0x80000000;
    *((double *)v3 + 30) = result;
    return result;
  }
LABEL_92:
  result = *((double *)a2 + 29);
  *((_DWORD *)v3 + 63) |= 0x40000000u;
  *((double *)v3 + 29) = result;
  if ((*((_DWORD *)a2 + 63) & 0x80000000) != 0)
    goto LABEL_93;
  return result;
}

void sub_18D0C04F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::~MeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  *(_QWORD *)this = &off_1E25BE198;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::~MeasurementData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 5);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 6);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 248) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE198;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 168) = 0u;
  *(_OWORD *)(v1 + 184) = 0u;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_QWORD *)(v1 + 248) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::Clear(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  v1 = this;
  v2 = *(_DWORD *)(this + 252);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SvId::Clear(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    *(_DWORD *)(v1 + 64) = 0;
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(v1 + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 24))
        {
          *(_DWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    if ((v2 & 0x20) != 0)
    {
      this = *(_QWORD *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::Clear(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::Clear(this);
        v2 = *(_DWORD *)(v1 + 252);
      }
    }
    *(_QWORD *)(v1 + 56) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 116) = 0;
    *(_OWORD *)(v1 + 100) = 0u;
    *(_OWORD *)(v1 + 84) = 0u;
    *(_OWORD *)(v1 + 68) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 168) = 0u;
    *(_OWORD *)(v1 + 152) = 0u;
    *(_OWORD *)(v1 + 136) = 0u;
    *(_OWORD *)(v1 + 120) = 0u;
  }
  if (HIBYTE(v2))
  {
    *(_OWORD *)(v1 + 232) = 0u;
    *(_OWORD *)(v1 + 216) = 0u;
    *(_OWORD *)(v1 + 200) = 0u;
    *(_OWORD *)(v1 + 184) = 0u;
  }
  *(_DWORD *)(v1 + 252) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(this + 44);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 44) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 48))
        {
          *(_DWORD *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 48) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(this + 44);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    if ((v1 & 4) != 0)
    {
      v2 = *(_QWORD *)(this + 24);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      v3 = *(_QWORD *)(this + 32);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  int v11;
  int v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  char *v38;
  int v39;
  int v40;
  int v41;
  int v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  int v46;
  int v47;
  int v48;
  int v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  _BYTE *v56;
  unsigned int v57;
  _BYTE *v58;
  unsigned int v59;
  unsigned __int8 *v60;
  unsigned int v61;
  unsigned __int8 *v62;
  unsigned __int8 *v63;
  unsigned __int8 *v64;
  unsigned __int8 *v65;
  unsigned __int8 *v66;
  unsigned __int8 *v67;
  unsigned __int8 *v68;
  unsigned __int8 *v69;
  unsigned __int8 *v70;
  unsigned __int8 *v71;
  unsigned __int8 *v72;
  unsigned __int8 *v73;
  unsigned __int8 *v74;
  unsigned __int8 *v75;
  unsigned __int8 *v76;
  unsigned __int8 *v77;
  unsigned int v78[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_75;
        *((_DWORD *)this + 63) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)v7 = &off_1E25BD478;
          *(_DWORD *)(v7 + 24) = 0;
          *((_QWORD *)this + 1) = v7;
        }
        v78[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0;
        }
        else
        {
          v78[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::SvId *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v9 || *v24 != 16)
          continue;
        v10 = v24 + 1;
        *((_QWORD *)a2 + 1) = v10;
        goto LABEL_87;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_75;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_87:
        v78[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!(_DWORD)result)
            return result;
          v25 = v78[0];
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v10;
          v26 = v10 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 16) = v25;
        v11 = *((_DWORD *)this + 63) | 2;
        *((_DWORD *)this + 63) = v11;
        if ((unint64_t)v26 >= v9 || *v26 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_95:
        *((_DWORD *)this + 63) = v11 | 4;
        v28 = *((_QWORD *)this + 2);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)(v28 + 8) = 0;
          *(_QWORD *)(v28 + 16) = 0;
          *(_QWORD *)v28 = &off_1E25BEC60;
          *(_DWORD *)(v28 + 24) = 0;
          *((_QWORD *)this + 2) = v28;
        }
        v78[0] = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0;
        }
        else
        {
          v78[0] = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v22)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_109:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 8u;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_113:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v78;
        v12 = *((_DWORD *)this + 63) | 0x10;
        *((_DWORD *)this + 63) = v12;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_117:
        *((_DWORD *)this + 63) = v12 | 0x20;
        v37 = *((_QWORD *)this + 5);
        if (!v37)
        {
          v37 = operator new();
          *(_QWORD *)v37 = &off_1E25BE0A8;
          *(_OWORD *)(v37 + 8) = 0u;
          *(_OWORD *)(v37 + 24) = 0u;
          *(_QWORD *)(v37 + 40) = 0;
          *((_QWORD *)this + 5) = v37;
        }
        v78[0] = 0;
        v38 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0;
        }
        else
        {
          v78[0] = *v38;
          *((_QWORD *)a2 + 1) = v38 + 1;
        }
        v39 = *((_DWORD *)a2 + 14);
        v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)v37, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v41 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v41, 1);
        v42 = v41 - 1;
        if (v42 < 0 == v22)
          *((_DWORD *)a2 + 14) = v42;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
LABEL_131:
        *((_DWORD *)this + 63) |= 0x40u;
        v44 = *((_QWORD *)this + 6);
        if (!v44)
        {
          v44 = operator new();
          *(_QWORD *)v44 = &off_1E25BE210;
          *(_OWORD *)(v44 + 8) = 0u;
          *(_OWORD *)(v44 + 24) = 0u;
          *(_QWORD *)(v44 + 40) = 0;
          *((_QWORD *)this + 6) = v44;
        }
        v78[0] = 0;
        v45 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v45 >= *((_QWORD *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0;
        }
        else
        {
          v78[0] = *v45;
          *((_QWORD *)a2 + 1) = v45 + 1;
        }
        v46 = *((_DWORD *)a2 + 14);
        v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 >= v47)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)v44, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v48 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v48, 1);
        v49 = v48 - 1;
        if (v49 < 0 == v22)
          *((_DWORD *)a2 + 14) = v49;
        v50 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_145:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x80u;
        v51 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v51 >= *((_QWORD *)a2 + 2) || *v51 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v51 + 1;
LABEL_149:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x100u;
        v52 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v52 + 1;
LABEL_153:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x200u;
        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 1;
LABEL_157:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x400u;
        v54 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v54 >= *((_QWORD *)a2 + 2) || *v54 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v54 + 1;
LABEL_161:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 12) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x800u;
        v55 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v55 + 1;
LABEL_165:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 13) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x1000u;
        v56 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v56 >= v13 || *v56 != 112)
          continue;
        v14 = v56 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_169:
        v78[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!(_DWORD)result)
            return result;
          v57 = v78[0];
        }
        else
        {
          v57 = *v14;
          *((_QWORD *)a2 + 1) = v14 + 1;
        }
        if (v57 <= 4)
        {
          *((_DWORD *)this + 63) |= 0x2000u;
          *((_DWORD *)this + 17) = v57;
        }
        v58 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v58 >= v15 || *v58 != 120)
          continue;
        v16 = v58 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_179:
        v78[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!(_DWORD)result)
            return result;
          v59 = v78[0];
        }
        else
        {
          v59 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v59 <= 2)
        {
          *((_DWORD *)this + 63) |= 0x4000u;
          *((_DWORD *)this + 28) = v59;
        }
        v60 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((int)v17 - (int)v60 < 2 || *v60 != 128 || v60[1] != 1)
          continue;
        v18 = (char *)(v60 + 2);
        *((_QWORD *)a2 + 1) = v18;
LABEL_190:
        v78[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!(_DWORD)result)
            return result;
          v61 = v78[0];
        }
        else
        {
          v61 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v61 <= 0xC)
        {
          *((_DWORD *)this + 63) |= 0x8000u;
          *((_DWORD *)this + 29) = v61;
        }
        v62 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v62 < 2 || *v62 != 137 || v62[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v62 + 2;
LABEL_201:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 15) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x10000u;
        v63 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v63 < 2 || *v63 != 145 || v63[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v63 + 2;
LABEL_206:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 16) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x20000u;
        v64 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v64 < 2 || *v64 != 153 || v64[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v64 + 2;
LABEL_211:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 17) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x40000u;
        v65 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v65 < 2 || *v65 != 161 || v65[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v65 + 2;
LABEL_216:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 18) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x80000u;
        v66 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v66 < 2 || *v66 != 169 || v66[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v66 + 2;
LABEL_221:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 19) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x100000u;
        v67 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v67 < 2 || *v67 != 177 || v67[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 2;
LABEL_226:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 20) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x200000u;
        v68 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v68 < 2 || *v68 != 185 || v68[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v68 + 2;
LABEL_231:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 21) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x400000u;
        v69 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v69 < 2 || *v69 != 193 || v69[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v69 + 2;
LABEL_236:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 22) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x800000u;
        v70 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v70 < 2 || *v70 != 201 || v70[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v70 + 2;
LABEL_241:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 23) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x1000000u;
        v71 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v71 < 2 || *v71 != 209 || v71[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v71 + 2;
LABEL_246:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 24) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x2000000u;
        v72 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v72 < 2 || *v72 != 217 || v72[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v72 + 2;
LABEL_251:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 25) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x4000000u;
        v73 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v73 < 2 || *v73 != 225 || v73[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v73 + 2;
LABEL_256:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 26) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x8000000u;
        v74 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v74 < 2 || *v74 != 233 || v74[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v74 + 2;
LABEL_261:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 27) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x10000000u;
        v75 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v75 < 2 || *v75 != 241 || v75[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v75 + 2;
LABEL_266:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 28) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x20000000u;
        v76 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v76 < 2 || *v76 != 249 || v76[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v76 + 2;
LABEL_271:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0;
        *((_QWORD *)this + 29) = *(_QWORD *)v78;
        *((_DWORD *)this + 63) |= 0x40000000u;
        v77 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v77 < 2 || *v77 != 129 || v77[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v77 + 2;
LABEL_276:
        *(_QWORD *)v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) != 0)
        {
          *((_QWORD *)this + 30) = *(_QWORD *)v78;
          *((_DWORD *)this + 63) |= 0x80000000;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_75;
        v11 = *((_DWORD *)this + 63);
        goto LABEL_95;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_109;
        goto LABEL_75;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_113;
        goto LABEL_75;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_75;
        v12 = *((_DWORD *)this + 63);
        goto LABEL_117;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_131;
        goto LABEL_75;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_145;
        goto LABEL_75;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_149;
        goto LABEL_75;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_153;
        goto LABEL_75;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_157;
        goto LABEL_75;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_161;
        goto LABEL_75;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_165;
        goto LABEL_75;
      case 0xEu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_75;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_169;
      case 0xFu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_75;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_179;
      case 0x10u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_75;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_190;
      case 0x11u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_201;
        goto LABEL_75;
      case 0x12u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_206;
        goto LABEL_75;
      case 0x13u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_211;
        goto LABEL_75;
      case 0x14u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_216;
        goto LABEL_75;
      case 0x15u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_221;
        goto LABEL_75;
      case 0x16u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_226;
        goto LABEL_75;
      case 0x17u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_231;
        goto LABEL_75;
      case 0x18u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_236;
        goto LABEL_75;
      case 0x19u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_241;
        goto LABEL_75;
      case 0x1Au:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_246;
        goto LABEL_75;
      case 0x1Bu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_251;
        goto LABEL_75;
      case 0x1Cu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_256;
        goto LABEL_75;
      case 0x1Du:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_261;
        goto LABEL_75;
      case 0x1Eu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_266;
        goto LABEL_75;
      case 0x1Fu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_271;
        goto LABEL_75;
      case 0x20u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_75;
        goto LABEL_276;
      default:
        v6 = TagFallback & 7;
LABEL_75:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 252);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 252);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_38;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_41;
  }
LABEL_38:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_46;
  }
LABEL_43:
  v9 = *(_QWORD *)(v5 + 40);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                   + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_49;
  }
LABEL_46:
  v10 = *(_QWORD *)(v5 + 48);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                    + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 96), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_58;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_59;
  }
LABEL_58:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_60;
  }
LABEL_59:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 128), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_61;
  }
LABEL_60:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(v5 + 136), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 144), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_63;
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(double *)(v5 + 152), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(double *)(v5 + 160), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_65;
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(double *)(v5 + 168), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_66;
  }
LABEL_65:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(double *)(v5 + 176), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_67;
  }
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(double *)(v5 + 184), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 192), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 200), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (uint64_t)a2, *(double *)(v5 + 208), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (uint64_t)a2, *(double *)(v5 + 216), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
    goto LABEL_72;
  }
LABEL_71:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, (uint64_t)a2, *(double *)(v5 + 224), a3);
  v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v6 & 0x80000000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, (uint64_t)a2, *(double *)(v5 + 240), a3);
  }
LABEL_72:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, (uint64_t)a2, *(double *)(v5 + 232), a3);
  if ((*(_DWORD *)(v5 + 252) & 0x80000000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, (uint64_t)a2, *(double *)(v5 + 240), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  int v2;
  int v3;
  uint64_t v4;
  CoreNavigation::CLP::LogEntry::PrivateData::SvId *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  int v24;
  unsigned int v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v30;
  int v31;
  unsigned int v32;
  unsigned int v33;

  v2 = *((_DWORD *)this + 63);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_47;
  }
  if ((v2 & 1) != 0)
  {
    v5 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((_QWORD *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                + 8);
    }
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::ByteSize(v5);
    v7 = (int)v6;
    if (v6 >= 0x80)
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    else
      v8 = 1;
    v3 = v7 + v8 + 1;
    v2 = *((_DWORD *)this + 63);
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v9 & 0x80000000) != 0)
    {
      v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      v2 = *((_DWORD *)this + 63);
    }
    else
    {
      v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v11 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((_QWORD *)this + 2);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v11 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                              + 16);
    }
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      v14 = 1;
    v3 += v13 + v14 + 1;
    v2 = *((_DWORD *)this + 63);
  }
  v15 = v3 + 9;
  if ((v2 & 8) == 0)
    v15 = v3;
  if ((v2 & 0x10) != 0)
    v16 = v15 + 9;
  else
    v16 = v15;
  if ((v2 & 0x20) != 0)
  {
    v17 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((_QWORD *)this + 5);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v17 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 40);
    }
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::ByteSize(v17);
    v19 = (int)v18;
    if (v18 >= 0x80)
      v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    else
      v20 = 1;
    v16 += v19 + v20 + 1;
    v2 = *((_DWORD *)this + 63);
  }
  if ((v2 & 0x40) != 0)
  {
    v21 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((_QWORD *)this + 6);
    if (!v21)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v21 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 48);
    }
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::ByteSize(v21);
    v23 = (int)v22;
    if (v22 >= 0x80)
      v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    else
      v24 = 1;
    v16 += v23 + v24 + 1;
    v2 = *((_DWORD *)this + 63);
  }
  if ((v2 & 0x80) != 0)
    v4 = v16 + 9;
  else
    v4 = v16;
LABEL_47:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_81;
  v25 = v4 + 9;
  if ((v2 & 0x100) == 0)
    v25 = v4;
  if ((v2 & 0x200) != 0)
    v25 += 9;
  if ((v2 & 0x400) != 0)
    v25 += 9;
  if ((v2 & 0x800) != 0)
    v25 += 9;
  if ((v2 & 0x1000) != 0)
    v4 = v25 + 9;
  else
    v4 = v25;
  if ((v2 & 0x2000) != 0)
  {
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v26 & 0x80000000) != 0)
    {
      v27 = 11;
    }
    else if (v26 >= 0x80)
    {
      v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
      v2 = *((_DWORD *)this + 63);
    }
    else
    {
      v27 = 2;
    }
    v4 = (v27 + v4);
    if ((v2 & 0x4000) == 0)
    {
LABEL_61:
      if ((v2 & 0x8000) == 0)
        goto LABEL_81;
      goto LABEL_75;
    }
  }
  else if ((v2 & 0x4000) == 0)
  {
    goto LABEL_61;
  }
  v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
  if ((v28 & 0x80000000) != 0)
  {
    v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    v2 = *((_DWORD *)this + 63);
  }
  else
  {
    v29 = 2;
  }
  v4 = (v29 + v4);
  if ((v2 & 0x8000) != 0)
  {
LABEL_75:
    v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
    if ((v30 & 0x80000000) != 0)
    {
      v31 = 12;
    }
    else if (v30 >= 0x80)
    {
      v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 2;
      v2 = *((_DWORD *)this + 63);
    }
    else
    {
      v31 = 3;
    }
    v4 = (v31 + v4);
  }
LABEL_81:
  if ((v2 & 0xFF0000) != 0)
  {
    v32 = v4 + 10;
    if ((v2 & 0x10000) == 0)
      v32 = v4;
    if ((v2 & 0x20000) != 0)
      v32 += 10;
    if ((v2 & 0x40000) != 0)
      v32 += 10;
    if ((v2 & 0x80000) != 0)
      v32 += 10;
    if ((v2 & 0x100000) != 0)
      v32 += 10;
    if ((v2 & 0x200000) != 0)
      v32 += 10;
    if ((v2 & 0x400000) != 0)
      v32 += 10;
    if ((v2 & 0x800000) != 0)
      v4 = v32 + 10;
    else
      v4 = v32;
  }
  if (HIBYTE(v2))
  {
    v33 = v4 + 10;
    if ((v2 & 0x1000000) == 0)
      v33 = v4;
    if ((v2 & 0x2000000) != 0)
      v33 += 10;
    if ((v2 & 0x4000000) != 0)
      v33 += 10;
    if ((v2 & 0x8000000) != 0)
      v33 += 10;
    if ((v2 & 0x10000000) != 0)
      v33 += 10;
    if ((v2 & 0x20000000) != 0)
      v33 += 10;
    if ((v2 & 0x40000000) != 0)
      v33 += 10;
    if (v2 >= 0)
      v4 = v33;
    else
      v4 = v33 + 10;
  }
  *((_DWORD *)this + 62) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v6;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v7;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v8;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v9;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v10;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v11;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *v12;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *v13;
  _BYTE v14[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 44) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_14:
    *((_DWORD *)v3 + 11) |= 2u;
    v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BEBE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                                                                   + 16);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  *((_DWORD *)v3 + 11) |= 1u;
  v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 1);
  if (!v6)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)operator new();
    v6 = this;
    *(_QWORD *)this = &off_1E25BEBE8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 1) = this;
  }
  v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                                                                 + 8);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
  v5 = *((_DWORD *)a2 + 11);
  if ((v5 & 2) != 0)
    goto LABEL_14;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_19:
  *((_DWORD *)v3 + 11) |= 4u;
  v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 3);
  if (!v10)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)operator new();
    v10 = this;
    *(_QWORD *)this = &off_1E25BEBE8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 3) = this;
  }
  v11 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                                                                  + 24);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v10, v11);
  if ((*((_DWORD *)a2 + 11) & 8) != 0)
  {
LABEL_24:
    *((_DWORD *)v3 + 11) |= 8u;
    v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((_QWORD *)v3 + 4);
    if (!v12)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)operator new();
      v12 = this;
      *(_QWORD *)this = &off_1E25BDFB8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 36) = 0u;
      *((_QWORD *)v3 + 4) = this;
    }
    v13 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((_QWORD *)a2 + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ + 32);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(v12, v13);
  }
  return result;
}

void sub_18D0C2374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v6;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v7;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v8;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if (!(_BYTE)v5)
    return result;
  if ((*((_BYTE *)a2 + 44) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 44) & 2) == 0)
      goto LABEL_6;
LABEL_10:
    result = *((double *)a2 + 2);
    *((_DWORD *)v3 + 11) |= 2u;
    *((double *)v3 + 2) = result;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  result = *((double *)a2 + 1);
  *((_DWORD *)v3 + 11) |= 1u;
  *((double *)v3 + 1) = result;
  v5 = *((_DWORD *)a2 + 11);
  if ((v5 & 2) != 0)
    goto LABEL_10;
LABEL_6:
  if ((v5 & 4) == 0)
    goto LABEL_7;
LABEL_11:
  *((_DWORD *)v3 + 11) |= 4u;
  v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 3);
  if (!v6)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)operator new();
    v6 = this;
    *(_QWORD *)this = &off_1E25BEBE8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 3) = this;
  }
  v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 3);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                                                                                 + 24);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
  if ((*((_DWORD *)a2 + 11) & 8) != 0)
  {
LABEL_16:
    *((_DWORD *)v3 + 11) |= 8u;
    v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 4);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BEBE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 4) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 4);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                                                                                   + 32);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
  }
  return result;
}

void sub_18D0C253C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v9;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v10;
    v11 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v11;
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v12;
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v13;
    LODWORD(v7) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    LODWORD(v7) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v7;
    LODWORD(v7) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v7;
    v14 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v14;
    v15 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v15;
    v16 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v16;
    v17 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v17;
    v18 = *((_QWORD *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v18;
    v19 = *((_QWORD *)this + 20);
    *((_QWORD *)this + 20) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v19;
    v20 = *((_QWORD *)this + 21);
    *((_QWORD *)this + 21) = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 21) = v20;
    v21 = *((_QWORD *)this + 22);
    *((_QWORD *)this + 22) = *((_QWORD *)a2 + 22);
    *((_QWORD *)a2 + 22) = v21;
    v22 = *((_QWORD *)this + 23);
    *((_QWORD *)this + 23) = *((_QWORD *)a2 + 23);
    *((_QWORD *)a2 + 23) = v22;
    v23 = *((_QWORD *)this + 24);
    *((_QWORD *)this + 24) = *((_QWORD *)a2 + 24);
    *((_QWORD *)a2 + 24) = v23;
    v24 = *((_QWORD *)this + 25);
    *((_QWORD *)this + 25) = *((_QWORD *)a2 + 25);
    *((_QWORD *)a2 + 25) = v24;
    v25 = *((_QWORD *)this + 26);
    *((_QWORD *)this + 26) = *((_QWORD *)a2 + 26);
    *((_QWORD *)a2 + 26) = v25;
    v26 = *((_QWORD *)this + 27);
    *((_QWORD *)this + 27) = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 27) = v26;
    v27 = *((_QWORD *)this + 28);
    *((_QWORD *)this + 28) = *((_QWORD *)a2 + 28);
    *((_QWORD *)a2 + 28) = v27;
    v28 = *((_QWORD *)this + 29);
    *((_QWORD *)this + 29) = *((_QWORD *)a2 + 29);
    *((_QWORD *)a2 + 29) = v28;
    result = *((double *)this + 30);
    *((_QWORD *)this + 30) = *((_QWORD *)a2 + 30);
    *((double *)a2 + 30) = result;
    LODWORD(v7) = *((_DWORD *)this + 63);
    *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
    *((_DWORD *)a2 + 63) = v7;
    LODWORD(v7) = *((_DWORD *)this + 62);
    *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
    *((_DWORD *)a2 + 62) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.MeasurementData");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  *(_QWORD *)this = &off_1E25BE0A8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(this, a2);
  return this;
}

void sub_18D0C284C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::~SatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  *(_QWORD *)this = &off_1E25BE0A8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::~SatelliteState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE0A8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t result;
  unsigned int v36;

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 11) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BEBE8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v36 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
        }
        else
        {
          v36 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
LABEL_31:
        *((_DWORD *)this + 11) |= 2u;
        v15 = *((_QWORD *)this + 2);
        if (!v15)
        {
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E25BEBE8;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *((_QWORD *)this + 2) = v15;
        }
        v36 = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
        }
        else
        {
          v36 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v15, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v19 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v19, 1);
        v20 = v19 - 1;
        if (v20 < 0 == v12)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_45:
        *((_DWORD *)this + 11) |= 4u;
        v22 = *((_QWORD *)this + 3);
        if (!v22)
        {
          v22 = operator new();
          *(_QWORD *)v22 = &off_1E25BEBE8;
          *(_OWORD *)(v22 + 8) = 0u;
          *(_OWORD *)(v22 + 24) = 0u;
          *((_QWORD *)this + 3) = v22;
        }
        v36 = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
        }
        else
        {
          v36 = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v22, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v12)
          *((_DWORD *)a2 + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_59:
        *((_DWORD *)this + 11) |= 8u;
        v29 = *((_QWORD *)this + 4);
        if (!v29)
        {
          v29 = operator new();
          *(_QWORD *)v29 = &off_1E25BDFB8;
          *(_OWORD *)(v29 + 8) = 0u;
          *(_OWORD *)(v29 + 24) = 0u;
          *(_OWORD *)(v29 + 36) = 0u;
          *((_QWORD *)this + 4) = v29;
        }
        v36 = 0;
        v30 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
        }
        else
        {
          v36 = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)a2 + 14);
        v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)v29, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v33 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v12)
          *((_DWORD *)a2 + 14) = v34;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_45;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        goto LABEL_59;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    goto LABEL_15;
  }
LABEL_12:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_15:
    v10 = *(_QWORD *)(v5 + 32);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                      + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  LOBYTE(v2) = *((_BYTE *)this + 44);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_42;
  }
  if ((*((_BYTE *)this + 44) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v4 = *((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                   + 8);
  }
  v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(_BYTE *)(v4 + 36))
  {
    v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0)
      v6 += 9;
    if ((v5 & 4) != 0)
      v5 = v6 + 9;
    else
      v5 = v6;
  }
  *(_DWORD *)(v4 + 32) = v5;
  v3 = (v5 + 2);
  v2 = *((_DWORD *)this + 11);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                     + 16);
    }
    v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(_BYTE *)(v7 + 36))
    {
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if ((v8 & 4) != 0)
        v8 = v9 + 9;
      else
        v8 = v9;
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 = (v3 + v8 + 2);
    v2 = *((_DWORD *)this + 11);
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_42;
    goto LABEL_36;
  }
  v10 = *((_QWORD *)this + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                    + 24);
  }
  v11 = *(unsigned __int8 *)(v10 + 36);
  if (*(_BYTE *)(v10 + 36))
  {
    v12 = (v11 << 31 >> 31) & 9;
    if ((v11 & 2) != 0)
      v12 += 9;
    if ((v11 & 4) != 0)
      v11 = v12 + 9;
    else
      v11 = v12;
  }
  *(_DWORD *)(v10 + 32) = v11;
  v3 = (v3 + v11 + 2);
  if ((*((_DWORD *)this + 11) & 8) != 0)
  {
LABEL_36:
    v13 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((_QWORD *)this + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v13 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ + 32);
    }
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ByteSize(v13);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v16 = 1;
    v3 = (v3 + v15 + v16 + 1);
  }
LABEL_42:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.SatelliteState");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::UserToSatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  *(_QWORD *)this = &off_1E25BE210;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(this, a2);
  return this;
}

void sub_18D0C32F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::~UserToSatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  *(_QWORD *)this = &off_1E25BE210;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::~UserToSatelliteState(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 3);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 4);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE210;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  int v8;
  _BYTE *v9;
  uint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t result;
  unsigned int v25[2];

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_26;
        *(_QWORD *)v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v25;
        *((_DWORD *)this + 11) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_26;
LABEL_14:
        *(_QWORD *)v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v25;
        v8 = *((_DWORD *)this + 11) | 2;
        *((_DWORD *)this + 11) = v8;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_20:
        *((_DWORD *)this + 11) = v8 | 4;
        v10 = *((_QWORD *)this + 3);
        if (!v10)
        {
          v10 = operator new();
          *(_QWORD *)v10 = &off_1E25BEBE8;
          *(_OWORD *)(v10 + 8) = 0u;
          *(_OWORD *)(v10 + 24) = 0u;
          *((_QWORD *)this + 3) = v10;
        }
        v25[0] = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0;
        }
        else
        {
          v25[0] = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v10, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_38:
        *((_DWORD *)this + 11) |= 8u;
        v18 = *((_QWORD *)this + 4);
        if (!v18)
        {
          v18 = operator new();
          *(_QWORD *)v18 = &off_1E25BEBE8;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *((_QWORD *)this + 4) = v18;
        }
        v25[0] = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0;
        }
        else
        {
          v25[0] = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v18, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v22, 1);
        v23 = v22 - 1;
        if (v23 < 0 == v15)
          *((_DWORD *)a2 + 14) = v23;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_26;
        v8 = *((_DWORD *)this + 11);
        goto LABEL_20;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_26;
        goto LABEL_38;
      default:
        v6 = TagFallback & 7;
LABEL_26:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    goto LABEL_11;
  }
LABEL_8:
  v7 = *(_QWORD *)(v5 + 24);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_11:
    v8 = *(_QWORD *)(v5 + 32);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                     + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;

  v2 = *((unsigned __int8 *)this + 44);
  if (*((_BYTE *)this + 44))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 4) != 0)
    {
      v5 = *((_QWORD *)this + 3);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                       + 24);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0)
        v7 += 9;
      if ((v6 & 4) != 0)
        v7 += 9;
      if (*(_BYTE *)(v5 + 36))
        v8 = v7;
      else
        v8 = 0;
      *(_DWORD *)(v5 + 32) = v8;
      v4 = (v4 + v8 + 2);
      v2 = *((_DWORD *)this + 11);
    }
    if ((v2 & 8) != 0)
    {
      v9 = *((_QWORD *)this + 4);
      if (!v9)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                       + 32);
      }
      v10 = *(unsigned __int8 *)(v9 + 36);
      v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0)
        v11 += 9;
      if ((v10 & 4) != 0)
        v11 += 9;
      if (*(_BYTE *)(v9 + 36))
        v12 = v11;
      else
        v12 = 0;
      *(_DWORD *)(v9 + 32) = v12;
      v4 = (v4 + v12 + 2);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;
  uint64_t v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.UserToSatelliteState");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  double result;

  *((_DWORD *)this + 10) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::PerConstellationCounts(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  *(_QWORD *)this = &off_1E25BE3F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(this, a2);
  return this;
}

void sub_18D0C3B38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::~PerConstellationCounts(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  *(_QWORD *)this = &off_1E25BE3F0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::~PerConstellationCounts(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE3F0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unsigned int v9;
  _BYTE *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  unsigned int v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  unsigned __int8 *v28;
  uint64_t result;
  unsigned int v30;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v30 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
LABEL_29:
          *((_DWORD *)this + 2) = v9;
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_32;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
        if ((_DWORD)result)
        {
          v9 = v30;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
          goto LABEL_29;
        }
        break;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
LABEL_32:
        v30 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v17 = v30;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v11;
          v18 = v11 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 3) = v17;
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v18 >= v7 || *v18 != 24)
          continue;
        v12 = v18 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_40:
        v30 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v19 = v30;
          v20 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v19 = *v12;
          v20 = v12 + 1;
          *((_QWORD *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 4) = v19;
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v20 >= v7 || *v20 != 32)
          continue;
        v13 = v20 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_48:
        v30 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v21 = v30;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v21 = *v13;
          v22 = v13 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 5) = v21;
        *((_DWORD *)this + 10) |= 8u;
        if ((unint64_t)v22 >= v7 || *v22 != 40)
          continue;
        v14 = v22 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_56:
        v30 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v23 = v30;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v23 = *v14;
          v24 = v14 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 6) = v23;
        *((_DWORD *)this + 10) |= 0x10u;
        if ((unint64_t)v24 >= v7 || *v24 != 48)
          continue;
        v15 = v24 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_64:
        v30 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v25 = v30;
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v15;
          v26 = v15 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 7) = v25;
        *((_DWORD *)this + 10) |= 0x20u;
        if ((unint64_t)v26 >= v7 || *v26 != 56)
          continue;
        v16 = v26 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_72:
        v30 = 0;
        if ((unint64_t)v16 >= v7 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!(_DWORD)result)
            return result;
          v27 = v30;
          v28 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v27 = *v16;
          v28 = (unsigned __int8 *)(v16 + 1);
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 8) = v27;
        *((_DWORD *)this + 10) |= 0x40u;
        if (v28 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_40;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_48;
      case 5u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_56;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_64;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_23;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_72;
      default:
        v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = this;
  v6 = this[10];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_12;
  }
LABEL_11:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_13;
  }
LABEL_12:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_14;
  }
LABEL_13:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  v6 = v5[10];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], (uint64_t)a2, a4);
  }
LABEL_14:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
  if ((v5[10] & 0x40) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[8], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_54;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v4 & 0x80000000) != 0)
  {
    v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v7 = 2;
    }
    v3 = (v7 + v3);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v9 = 2;
    }
    v3 = (v9 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0)
        goto LABEL_21;
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v10 & 0x80000000) != 0)
  {
    v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0)
      goto LABEL_22;
    goto LABEL_42;
  }
LABEL_36:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v12 & 0x80000000) != 0)
  {
    v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0)
      goto LABEL_54;
    goto LABEL_48;
  }
LABEL_42:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v14 & 0x80000000) != 0)
  {
    v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 10);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_48:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v16 & 0x80000000) != 0)
    {
      v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
  }
LABEL_54:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    v9 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v9;
    v10 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v10;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.PerConstellationCounts");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  double result;

  *((_BYTE *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::GnssPreprocessedMeasurementsEvent(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  *(_QWORD *)this = &off_1E25BE648;
  *((_BYTE *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(this, a2);
  return this;
}

void sub_18D0C44CC(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::~GnssPreprocessedMeasurementsEvent(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  *(_QWORD *)this = &off_1E25BE648;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::~GnssPreprocessedMeasurementsEvent(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 6);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE648;
  *(_BYTE *)(v1 + 80) = 0;
  *(_DWORD *)(v1 + 84) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v8;
  char *v9;
  unint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  BOOL v16;
  int v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned int v23;
  _BYTE *v24;
  uint64_t result;
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  _BYTE *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  _BYTE *v44;
  unsigned int v45[2];

  v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)((char *)this + 56);
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
        *((_DWORD *)this + 22) |= 1u;
        v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)operator new();
          *(_QWORD *)v8 = &off_1E25BDEC8;
          *((_QWORD *)v8 + 1) = 0;
          *((_QWORD *)v8 + 2) = 0;
          *((_QWORD *)v8 + 3) = 0;
          *((_QWORD *)this + 1) = v8;
        }
        v45[0] = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45))return 0;
        }
        else
        {
          v45[0] = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v13 = *((_DWORD *)a2 + 14);
        v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v15 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v15, 1);
        v17 = v15 - 1;
        if (v17 < 0 == v16)
          *((_DWORD *)a2 + 14) = v17;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
        goto LABEL_40;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_28;
LABEL_40:
        *(_QWORD *)v45 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v45) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v45;
        *((_DWORD *)this + 22) |= 2u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_44:
        *(_QWORD *)v45 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v45) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v45;
        *((_DWORD *)this + 22) |= 4u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_48:
        *(_QWORD *)v45 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v45) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v45;
        *((_DWORD *)this + 22) |= 8u;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_52:
        *(_QWORD *)v45 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v45) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v45;
        *((_DWORD *)this + 22) |= 0x10u;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v22 >= v10 || *v22 != 48)
          continue;
        v11 = v22 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_56:
        v45[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45);
          if (!(_DWORD)result)
            return result;
          v23 = v45[0];
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v23 = *v11;
          v24 = v11 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_BYTE *)this + 80) = v23 != 0;
        v12 = *((_DWORD *)this + 22) | 0x20;
        *((_DWORD *)this + 22) = v12;
        if ((unint64_t)v24 >= v10 || *v24 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_64:
        *((_DWORD *)this + 22) = v12 | 0x40;
        v26 = *((_QWORD *)this + 6);
        if (!v26)
        {
          v26 = operator new();
          *(_QWORD *)v26 = &off_1E25BE300;
          *(_OWORD *)(v26 + 8) = 0u;
          *(_OWORD *)(v26 + 24) = 0u;
          *(_QWORD *)(v26 + 40) = 0;
          *((_QWORD *)this + 6) = v26;
        }
        v45[0] = 0;
        v27 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45))return 0;
        }
        else
        {
          v45[0] = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        v28 = *((_DWORD *)a2 + 14);
        v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)v26, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v30 = *((_DWORD *)a2 + 14);
        v16 = __OFSUB__(v30, 1);
        v31 = v30 - 1;
        if (v31 < 0 == v16)
          *((_DWORD *)a2 + 14) = v31;
        v32 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 < *((_QWORD *)a2 + 2) && *v32 == 66)
        {
          do
          {
            *((_QWORD *)a2 + 1) = v32 + 1;
LABEL_78:
            v33 = *((_DWORD *)this + 17);
            v34 = *((int *)this + 16);
            if ((int)v34 >= v33)
            {
              if (v33 == *((_DWORD *)this + 18))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                v33 = *((_DWORD *)this + 17);
              }
              *((_DWORD *)this + 17) = v33 + 1;
              v36 = operator new();
              *(_QWORD *)v36 = &off_1E25BE4E0;
              *(_QWORD *)(v36 + 80) = 0;
              *(_QWORD *)(v36 + 88) = 0;
              *(_DWORD *)(v36 + 96) = 0;
              *(_OWORD *)(v36 + 8) = 0u;
              *(_OWORD *)(v36 + 24) = 0u;
              *(_OWORD *)(v36 + 40) = 0u;
              *(_OWORD *)(v36 + 56) = 0u;
              *(_DWORD *)(v36 + 72) = 0;
              v37 = *((_QWORD *)this + 7);
              v38 = *((int *)this + 16);
              *((_DWORD *)this + 16) = v38 + 1;
              *(_QWORD *)(v37 + 8 * v38) = v36;
            }
            else
            {
              v35 = *((_QWORD *)this + 7);
              *((_DWORD *)this + 16) = v34 + 1;
              v36 = *(_QWORD *)(v35 + 8 * v34);
            }
            v45[0] = 0;
            v39 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v45))return 0;
            }
            else
            {
              v45[0] = *v39;
              *((_QWORD *)a2 + 1) = v39 + 1;
            }
            v40 = *((_DWORD *)a2 + 14);
            v41 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v40 + 1;
            if (v40 >= v41)
              return 0;
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)v36, a2)|| !*((_BYTE *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            v42 = *((_DWORD *)a2 + 14);
            v16 = __OFSUB__(v42, 1);
            v43 = v42 - 1;
            if (v43 < 0 == v16)
              *((_DWORD *)a2 + 14) = v43;
            v32 = (_BYTE *)*((_QWORD *)a2 + 1);
            v44 = (_BYTE *)*((_QWORD *)a2 + 2);
          }
          while (v32 < v44 && *v32 == 66);
          if (v32 == v44 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_44;
        goto LABEL_28;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_48;
        goto LABEL_28;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_52;
        goto LABEL_28;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_28;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_56;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
        v12 = *((_DWORD *)this + 22);
        goto LABEL_64;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_28;
        goto LABEL_78;
      default:
        v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 88);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 88);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_20;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 80), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 88) & 0x40) == 0)
    goto LABEL_20;
LABEL_17:
  v8 = *(_QWORD *)(v5 + 48);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_
                   + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, a2, a4);
LABEL_20:
  if (*(int *)(v5 + 64) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 64));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  int v2;
  int v3;
  int v4;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;

  LOBYTE(v2) = *((_BYTE *)this + 88);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 88) & 1) != 0)
    {
      v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
        v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v5);
      v7 = (int)v6;
      if (v6 >= 0x80)
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v8 = 1;
      v3 = v7 + v8 + 1;
      v2 = *((_DWORD *)this + 22);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v4 = v3 + 2;
    else
      v4 = v3;
    if ((v2 & 0x40) != 0)
    {
      v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((_QWORD *)this + 6);
      if (!v9)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
        v9 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 48);
      }
      v4 += CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::ByteSize(v9)
          + 2;
    }
  }
  else
  {
    v4 = 0;
  }
  v10 = *((_DWORD *)this + 16);
  v11 = (v10 + v4);
  if (v10 >= 1)
  {
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData **)(*((_QWORD *)this + 7) + 8 * v12));
      v14 = (int)v13;
      if (v13 >= 0x80)
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v15 = 1;
      v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *((int *)this + 16));
  }
  *((_DWORD *)this + 21) = v11;
  return v11;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0C5060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0)
      return result;
LABEL_8:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18D0C5168(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;

  if (a2 != (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)this)
  {
    v3 = this;
    v4 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    v8 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v8;
    LOBYTE(v4) = *(_BYTE *)(this + 80);
    *(_BYTE *)(this + 80) = *((_BYTE *)a2 + 80);
    *((_BYTE *)a2 + 80) = v4;
    v9 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v9;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v10 = *(_DWORD *)(v3 + 88);
    *(_DWORD *)(v3 + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
    v11 = *(_DWORD *)(v3 + 84);
    *(_DWORD *)(v3 + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssPreprocessedMeasurementsEvent");
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CNTimeSpan(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  *(_QWORD *)this = &off_1E25BDEC8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(this, a2);
  return this;
}

void sub_18D0C52F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::~CNTimeSpan(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  *(_QWORD *)this = &off_1E25BDEC8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::~CNTimeSpan(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BDEC8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_15;
        v12 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v12);
          if (!(_DWORD)result)
            return result;
          v9 = v12;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v9 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v6 = TagFallback & 7;
      if (v6 != 1)
        goto LABEL_15;
LABEL_23:
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
        return 0;
      *((_QWORD *)this + 2) = v12;
      *((_DWORD *)this + 7) |= 2u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v6 = TagFallback & 7;
LABEL_15:
    if (v6 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  uint64_t v2;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.CNTimeSpan");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::GnssReceiverClockModel(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  *(_QWORD *)this = &off_1E25BE300;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(this, a2);
  return this;
}

void sub_18D0C5778(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::~GnssReceiverClockModel(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  *(_QWORD *)this = &off_1E25BE300;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::~GnssReceiverClockModel(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE300;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 11) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
LABEL_14:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v11;
        *((_DWORD *)this + 11) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v11;
        *((_DWORD *)this + 11) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 4) = v11;
        *((_DWORD *)this + 11) |= 8u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_29;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_29;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 44);
  if (*((_BYTE *)this + 44))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 10) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    v6 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssReceiverClockModel");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::GnssSvAndMeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  *(_QWORD *)this = &off_1E25BE4E0;
  *((_QWORD *)this + 10) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(this, a2);
  return this;
}

void sub_18D0C5D2C(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  uint64_t v4;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v16;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v17;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *v18;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable **)(*((_QWORD *)a2 + 7) + 8 * v5);
      v7 = *((_DWORD *)this + 17);
      v8 = *((int *)this + 16);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)((char *)this + 56));
          v7 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v7 + 1;
        v10 = operator new();
        *(_QWORD *)v10 = &off_1E25BE030;
        *(_OWORD *)(v10 + 8) = 0u;
        *(_OWORD *)(v10 + 24) = 0u;
        *(_OWORD *)(v10 + 40) = 0u;
        *(_OWORD *)(v10 + 56) = 0u;
        *(_OWORD *)(v10 + 72) = 0u;
        *(_OWORD *)(v10 + 86) = 0u;
        *(_QWORD *)(v10 + 104) = 0;
        *(_QWORD *)(v10 + 112) = 0;
        v11 = *((_QWORD *)this + 7);
        v12 = *((int *)this + 16);
        *((_DWORD *)this + 16) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 7);
        *((_DWORD *)this + 16) = v8 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v8);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 16));
  }
  v13 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v13)
    goto LABEL_20;
  if ((v13 & 1) != 0)
  {
    *((_DWORD *)this + 24) |= 1u;
    v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
    if (!v16)
    {
      v4 = operator new();
      v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)v4;
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)v4 = &off_1E25BE120;
      *((_QWORD *)this + 1) = v4;
    }
    v17 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)a2 + 1);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v4);
      v17 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(v16, v17);
    v13 = *((_DWORD *)a2 + 24);
    if ((v13 & 2) == 0)
    {
LABEL_14:
      if ((v13 & 4) == 0)
        goto LABEL_15;
      goto LABEL_34;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_14;
  }
  *((_DWORD *)this + 24) |= 2u;
  v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((_QWORD *)this + 2);
  if (!v18)
  {
    v4 = operator new();
    v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)v4;
    *(_QWORD *)v4 = &off_1E25BE288;
    *(_OWORD *)(v4 + 8) = 0u;
    *(_OWORD *)(v4 + 24) = 0u;
    *(_OWORD *)(v4 + 40) = 0u;
    *(_OWORD *)(v4 + 56) = 0u;
    *(_OWORD *)(v4 + 72) = 0u;
    *(_OWORD *)(v4 + 88) = 0u;
    *(_QWORD *)(v4 + 104) = 0;
    *((_QWORD *)this + 2) = v4;
  }
  v19 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((_QWORD *)a2 + 2);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)v4);
    v19 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 16);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(v18, v19);
  v13 = *((_DWORD *)a2 + 24);
  if ((v13 & 4) == 0)
  {
LABEL_15:
    if ((v13 & 8) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_34:
  v20 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 24) |= 4u;
  *((_QWORD *)this + 3) = v20;
  v13 = *((_DWORD *)a2 + 24);
  if ((v13 & 8) == 0)
  {
LABEL_16:
    if ((v13 & 0x10) == 0)
      goto LABEL_17;
LABEL_36:
    v22 = *((_QWORD *)a2 + 5);
    *((_DWORD *)this + 24) |= 0x10u;
    *((_QWORD *)this + 5) = v22;
    v13 = *((_DWORD *)a2 + 24);
    if ((v13 & 0x20) == 0)
    {
LABEL_18:
      if ((v13 & 0x80) == 0)
        goto LABEL_20;
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_35:
  v21 = *((_QWORD *)a2 + 4);
  *((_DWORD *)this + 24) |= 8u;
  *((_QWORD *)this + 4) = v21;
  v13 = *((_DWORD *)a2 + 24);
  if ((v13 & 0x10) != 0)
    goto LABEL_36;
LABEL_17:
  if ((v13 & 0x20) == 0)
    goto LABEL_18;
LABEL_37:
  v23 = *((_QWORD *)a2 + 6);
  *((_DWORD *)this + 24) |= 0x20u;
  *((_QWORD *)this + 6) = v23;
  v13 = *((_DWORD *)a2 + 24);
  if ((v13 & 0x80) != 0)
  {
LABEL_19:
    v14 = *((_QWORD *)a2 + 10);
    *((_DWORD *)this + 24) |= 0x80u;
    *((_QWORD *)this + 10) = v14;
    v13 = *((_DWORD *)a2 + 24);
  }
LABEL_20:
  if ((v13 & 0x100) != 0)
  {
    v15 = *((_DWORD *)a2 + 22);
    if (v15 >= 7)
      __assert_rtn("set_sv_position_source", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6209, "::CoreNavigation::CLP::LogEntry::PrivateData::SvPositionSource_IsValid(value)");
    *((_DWORD *)this + 24) |= 0x100u;
    *((_DWORD *)this + 22) = v15;
  }
}

void sub_18D0C6098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::~GnssSvAndMeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  *(_QWORD *)this = &off_1E25BE4E0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::~GnssSvAndMeasurementData(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE4E0;
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_DWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  v2 = *(_DWORD *)(this + 96);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 20))
          *(_QWORD *)(v3 + 8) = 0;
        *(_DWORD *)(v3 + 20) = 0;
        v2 = *(_DWORD *)(this + 96);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::Clear(this);
        v2 = *(_DWORD *)(v1 + 96);
      }
    }
    *(_QWORD *)(v1 + 80) = 0;
    *(_OWORD *)(v1 + 24) = 0u;
    *(_OWORD *)(v1 + 40) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
    *(_DWORD *)(v1 + 88) = 0;
  if (*(int *)(v1 + 64) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(this + 108);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 108) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 20))
          *(_QWORD *)(v2 + 8) = 0;
        *(_DWORD *)(v2 + 20) = 0;
        v1 = *(_DWORD *)(this + 108);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v1 = *(_DWORD *)(this + 108);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        v1 = *(_DWORD *)(this + 108);
      }
    }
    if ((v1 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 108) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v8;
  char *v9;
  unint64_t v10;
  char *v11;
  int v12;
  int v13;
  int v14;
  BOOL v15;
  int v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  unsigned int v42;
  uint64_t result;
  unsigned int v44[2];

  v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)((char *)this + 56);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_30;
        *((_DWORD *)this + 24) |= 1u;
        v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)operator new();
          *((_QWORD *)v8 + 1) = 0;
          *((_QWORD *)v8 + 2) = 0;
          *(_QWORD *)v8 = &off_1E25BE120;
          *((_QWORD *)this + 1) = v8;
        }
        v44[0] = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44))return 0;
        }
        else
        {
          v44[0] = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v12 = *((_DWORD *)a2 + 14);
        v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v14 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v14, 1);
        v16 = v14 - 1;
        if (v16 < 0 == v15)
          *((_DWORD *)a2 + 14) = v16;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_30;
LABEL_43:
        *((_DWORD *)this + 24) |= 2u;
        v18 = *((_QWORD *)this + 2);
        if (!v18)
        {
          v18 = operator new();
          *(_QWORD *)v18 = &off_1E25BE288;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *(_OWORD *)(v18 + 40) = 0u;
          *(_OWORD *)(v18 + 56) = 0u;
          *(_OWORD *)(v18 + 72) = 0u;
          *(_OWORD *)(v18 + 88) = 0u;
          *(_QWORD *)(v18 + 104) = 0;
          *((_QWORD *)this + 2) = v18;
        }
        v44[0] = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44))return 0;
        }
        else
        {
          v44[0] = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)v18, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v15 = __OFSUB__(v22, 1);
        v23 = v22 - 1;
        if (v23 < 0 == v15)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
LABEL_57:
        *(_QWORD *)v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v44) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v44;
        *((_DWORD *)this + 24) |= 4u;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_61:
        *(_QWORD *)v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v44) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v44;
        *((_DWORD *)this + 24) |= 8u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_65:
        *(_QWORD *)v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v44) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v44;
        *((_DWORD *)this + 24) |= 0x10u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_69:
        *(_QWORD *)v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v44) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v44;
        *((_DWORD *)this + 24) |= 0x20u;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 58)
          continue;
        do
        {
          *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_73:
          v29 = *((_DWORD *)this + 17);
          v30 = *((int *)this + 16);
          if ((int)v30 >= v29)
          {
            if (v29 == *((_DWORD *)this + 18))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v29 = *((_DWORD *)this + 17);
            }
            *((_DWORD *)this + 17) = v29 + 1;
            v32 = operator new();
            *(_QWORD *)v32 = &off_1E25BE030;
            *(_OWORD *)(v32 + 8) = 0u;
            *(_OWORD *)(v32 + 24) = 0u;
            *(_OWORD *)(v32 + 40) = 0u;
            *(_OWORD *)(v32 + 56) = 0u;
            *(_OWORD *)(v32 + 72) = 0u;
            *(_OWORD *)(v32 + 86) = 0u;
            *(_QWORD *)(v32 + 104) = 0;
            *(_QWORD *)(v32 + 112) = 0;
            v33 = *((_QWORD *)this + 7);
            v34 = *((int *)this + 16);
            *((_DWORD *)this + 16) = v34 + 1;
            *(_QWORD *)(v33 + 8 * v34) = v32;
          }
          else
          {
            v31 = *((_QWORD *)this + 7);
            *((_DWORD *)this + 16) = v30 + 1;
            v32 = *(_QWORD *)(v31 + 8 * v30);
          }
          v44[0] = 0;
          v35 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44))return 0;
          }
          else
          {
            v44[0] = *v35;
            *((_QWORD *)a2 + 1) = v35 + 1;
          }
          v36 = *((_DWORD *)a2 + 14);
          v37 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v36 + 1;
          if (v36 >= v37)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)v32, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v38 = *((_DWORD *)a2 + 14);
          v15 = __OFSUB__(v38, 1);
          v39 = v38 - 1;
          if (v39 < 0 == v15)
            *((_DWORD *)a2 + 14) = v39;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v28 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v40 = *v28;
        }
        while (v40 == 58);
        if (v40 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_91:
        *(_QWORD *)v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v44) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v44;
        *((_DWORD *)this + 24) |= 0x80u;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v41 < v10 && *v41 == 72)
        {
          v11 = v41 + 1;
          *((_QWORD *)a2 + 1) = v11;
LABEL_95:
          v44[0] = 0;
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
            if (!(_DWORD)result)
              return result;
            v42 = v44[0];
          }
          else
          {
            v42 = *v11;
            *((_QWORD *)a2 + 1) = v11 + 1;
          }
          if (v42 <= 6)
          {
            *((_DWORD *)this + 24) |= 0x100u;
            *((_DWORD *)this + 22) = v42;
          }
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_57;
        goto LABEL_30;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_61;
        goto LABEL_30;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_65;
        goto LABEL_30;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_69;
        goto LABEL_30;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_73;
        goto LABEL_30;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_91;
        goto LABEL_30;
      case 9u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      default:
        v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 96);
  if ((v6 & 1) != 0)
  {
    v9 = *(_QWORD *)(this + 8);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v9, a2, a4);
    v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v10 = *(_QWORD *)(v5 + 16);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
                    + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 96) & 0x20) != 0)
LABEL_7:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
LABEL_8:
  if (*(int *)(v5 + 64) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 64));
  }
  v8 = *(_DWORD *)(v5 + 96);
  if ((v8 & 0x80) == 0)
  {
    if ((v8 & 0x100) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 80), a3);
  if ((*(_DWORD *)(v5 + 96) & 0x100) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 88), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  int v2;
  int v3;
  int v4;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  int v21;

  v2 = *((_DWORD *)this + 24);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    if ((v2 & 0x100) == 0)
      goto LABEL_37;
    goto LABEL_31;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = v7 + v8 + 1;
  v2 = *((_DWORD *)this + 24);
  if ((v2 & 2) != 0)
  {
LABEL_13:
    v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 += v11 + v12 + 1;
    v2 = *((_DWORD *)this + 24);
  }
LABEL_19:
  v13 = v3 + 9;
  if ((v2 & 4) == 0)
    v13 = v3;
  if ((v2 & 8) != 0)
    v13 += 9;
  if ((v2 & 0x10) != 0)
    v13 += 9;
  if ((v2 & 0x20) != 0)
    v13 += 9;
  if ((v2 & 0x80) != 0)
    v4 = v13 + 9;
  else
    v4 = v13;
  if ((v2 & 0x100) != 0)
  {
LABEL_31:
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if ((v14 & 0x80000000) != 0)
    {
      v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else
    {
      v15 = 2;
    }
    v4 += v15;
  }
LABEL_37:
  v16 = *((_DWORD *)this + 16);
  v17 = (v16 + v4);
  if (v16 >= 1)
  {
    v18 = 0;
    do
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable **)(*((_QWORD *)this + 7) + 8 * v18));
      v20 = (int)v19;
      if (v19 >= 0x80)
        v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      else
        v21 = 1;
      v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 16));
  }
  *((_DWORD *)this + 23) = v17;
  return v17;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *v3;
  double result;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v10;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v11;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v12;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v13;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v14;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v15;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v16;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v17;
  _BYTE v18[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    sub_18D09EC0C((_DWORD *)v3 + 10, *((_DWORD *)v3 + 12) + v5);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((_QWORD *)v3 + 5) + 8 * *((int *)v3 + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)v3 + 12) += *((_DWORD *)a2 + 12);
  }
  v6 = *((_DWORD *)a2 + 16);
  if (v6)
  {
    sub_18D09EC0C((_DWORD *)v3 + 14, *((_DWORD *)v3 + 16) + v6);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((_QWORD *)v3 + 7) + 8 * *((int *)v3 + 16)), *((const void **)a2 + 7), 8 * *((int *)a2 + 16));
    *((_DWORD *)v3 + 16) += *((_DWORD *)a2 + 16);
  }
  v7 = *((_DWORD *)a2 + 20);
  if (v7)
  {
    sub_18D09EC0C((_DWORD *)v3 + 18, *((_DWORD *)v3 + 20) + v7);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((_QWORD *)v3 + 9) + 8 * *((int *)v3 + 20)), *((const void **)a2 + 9), 8 * *((int *)a2 + 20));
    *((_DWORD *)v3 + 20) += *((_DWORD *)a2 + 20);
  }
  v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    sub_18D09EC0C((_DWORD *)v3 + 22, *((_DWORD *)v3 + 24) + v8);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((_QWORD *)v3 + 11) + 8 * *((int *)v3 + 24)), *((const void **)a2 + 11), 8 * *((int *)a2 + 24));
    *((_DWORD *)v3 + 24) += *((_DWORD *)a2 + 24);
  }
  LOBYTE(v9) = *((_BYTE *)a2 + 108);
  if (!(_BYTE)v9)
    return result;
  if ((*((_BYTE *)a2 + 108) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 108) & 2) == 0)
      goto LABEL_14;
LABEL_22:
    *((_DWORD *)v3 + 27) |= 2u;
    v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)v3 + 2);
    if (!v12)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)operator new();
      v12 = this;
      *(_QWORD *)this = &off_1E25BDEC8;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v13 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)a2 + 2);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 16);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v12, v13);
    v9 = *((_DWORD *)a2 + 27);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0)
        return result;
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  *((_DWORD *)v3 + 27) |= 1u;
  v10 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)v3 + 1);
  if (!v10)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)operator new();
    v10 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25BE120;
    *((_QWORD *)v3 + 1) = this;
  }
  v11 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)a2 + 1);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 8);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(v10, v11);
  v9 = *((_DWORD *)a2 + 27);
  if ((v9 & 2) != 0)
    goto LABEL_22;
LABEL_14:
  if ((v9 & 4) == 0)
    goto LABEL_15;
LABEL_27:
  *((_DWORD *)v3 + 27) |= 4u;
  v14 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)v3 + 3);
  if (!v14)
  {
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)operator new();
    v14 = this;
    *(_QWORD *)this = &off_1E25BDEC8;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v15 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)a2 + 3);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    v15 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 24);
  }
  result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v14, v15);
  if ((*((_DWORD *)a2 + 27) & 8) != 0)
  {
LABEL_32:
    *((_DWORD *)v3 + 27) |= 8u;
    v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)v3 + 4);
    if (!v16)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)operator new();
      v16 = this;
      *(_QWORD *)this = &off_1E25BDEC8;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 4) = this;
    }
    v17 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)a2 + 4);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v17 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 32);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v16, v17);
  }
  return result;
}

void sub_18D0C70C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  int v11;
  int v12;
  int v13;

  if (a2 != this)
  {
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    v8 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v8;
    v9 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v9;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    result = *((double *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((double *)a2 + 10) = result;
    v11 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
    v12 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v12;
    v13 = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v13;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssSvAndMeasurementData");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  double result;

  *((_QWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::PolynomialEphemerides(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  *(_QWORD *)this = &off_1E25BE288;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((_QWORD *)this + 13) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(this, a2);
  return this;
}

void sub_18D0C72A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *((_QWORD *)v1 + 11);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)v1 + 9);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8000313F17);
  v5 = *((_QWORD *)v1 + 7);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8000313F17);
  v6 = *((_QWORD *)v1 + 5);
  if (v6)
    MEMORY[0x18D78B5BC](v6, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::~PolynomialEphemerides(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_1E25BE288;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SharedDtor(this);
  v2 = *((_QWORD *)this + 11);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8000313F17);
  v3 = *((_QWORD *)this + 9);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)this + 7);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8000313F17);
  v5 = *((_QWORD *)this + 5);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::~PolynomialEphemerides(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE288;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_QWORD *)(v1 + 104) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v7;
  char *v8;
  uint64_t result;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  _BYTE *v29;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  _BYTE *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  signed int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  signed int v54;
  int v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  signed int v65;
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  signed int v76;
  int v77;
  int v78;
  uint64_t v79;
  _BYTE *v80;
  _DWORD *v81;
  _DWORD *v82;
  _DWORD *v83;
  _DWORD *v84;
  unsigned int v85[2];

  v83 = (_DWORD *)((char *)this + 72);
  v84 = (_DWORD *)((char *)this + 88);
  v81 = (_DWORD *)((char *)this + 40);
  v82 = (_DWORD *)((char *)this + 56);
LABEL_2:
  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_37;
        *((_DWORD *)this + 27) |= 1u;
        v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)operator new();
          *((_QWORD *)v7 + 1) = 0;
          *((_QWORD *)v7 + 2) = 0;
          *(_QWORD *)v7 = &off_1E25BE120;
          *((_QWORD *)this + 1) = v7;
        }
        v85[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0;
        }
        else
        {
          v85[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
        goto LABEL_49;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_37;
LABEL_49:
        *((_DWORD *)this + 27) |= 2u;
        v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)operator new();
          *(_QWORD *)v16 = &off_1E25BDEC8;
          *((_QWORD *)v16 + 1) = 0;
          *((_QWORD *)v16 + 2) = 0;
          *((_QWORD *)v16 + 3) = 0;
          *((_QWORD *)this + 2) = v16;
        }
        v85[0] = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0;
        }
        else
        {
          v85[0] = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v20 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v20, 1);
        v21 = v20 - 1;
        if (v21 < 0 == v13)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_63:
        *((_DWORD *)this + 27) |= 4u;
        v23 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 3);
        if (!v23)
        {
          v23 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)operator new();
          *(_QWORD *)v23 = &off_1E25BDEC8;
          *((_QWORD *)v23 + 1) = 0;
          *((_QWORD *)v23 + 2) = 0;
          *((_QWORD *)v23 + 3) = 0;
          *((_QWORD *)this + 3) = v23;
        }
        v85[0] = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0;
        }
        else
        {
          v85[0] = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v23, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v27 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v27, 1);
        v28 = v27 - 1;
        if (v28 < 0 == v13)
          *((_DWORD *)a2 + 14) = v28;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_77:
        *((_DWORD *)this + 27) |= 8u;
        v30 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 4);
        if (!v30)
        {
          v30 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)operator new();
          *(_QWORD *)v30 = &off_1E25BDEC8;
          *((_QWORD *)v30 + 1) = 0;
          *((_QWORD *)v30 + 2) = 0;
          *((_QWORD *)v30 + 3) = 0;
          *((_QWORD *)this + 4) = v30;
        }
        v85[0] = 0;
        v31 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0;
        }
        else
        {
          v85[0] = *v31;
          *((_QWORD *)a2 + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)a2 + 14);
        v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v30, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v34 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v34, 1);
        v35 = v34 - 1;
        if (v35 < 0 == v13)
          *((_DWORD *)a2 + 14) = v35;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 41)
          continue;
        while (1)
        {
          *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_91:
          *(_QWORD *)v85 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0;
          v37 = *(_QWORD *)v85;
          v38 = *((_DWORD *)this + 12);
          if (v38 == *((_DWORD *)this + 13))
          {
            sub_18D09EC0C(v81, v38 + 1);
            v38 = *((_DWORD *)this + 12);
          }
          v39 = *((_QWORD *)this + 5);
          v40 = v38 + 1;
          *((_DWORD *)this + 12) = v38 + 1;
          *(_QWORD *)(v39 + 8 * v38) = v37;
          v41 = *((_QWORD *)a2 + 1);
          v42 = *((_DWORD *)a2 + 4) - v41;
          if (v42 >= 1)
          {
            v43 = v42 / 9u;
            v44 = v43 >= *((_DWORD *)this + 13) - v40 ? *((_DWORD *)this + 13) - v40 : v43;
            if (v44 >= 1)
            {
              v45 = 0;
              while (*(_BYTE *)v41 == 41)
              {
                v46 = *(_QWORD *)(v41 + 1);
                if (v40 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                  v40 = *((_DWORD *)this + 12);
                  v39 = *((_QWORD *)this + 5);
                }
                *((_DWORD *)this + 12) = v40 + 1;
                *(_QWORD *)(v39 + 8 * v40) = v46;
                ++v45;
                v41 += 9;
                ++v40;
                if (v44 == v45)
                {
                  v45 = v44;
                  break;
                }
              }
              if (v45)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_107:
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v36 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v47 = *v36;
          if (v47 != 41)
          {
            if (v47 == 49)
            {
              while (1)
              {
                *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_111:
                *(_QWORD *)v85 = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0;
                v48 = *(_QWORD *)v85;
                v49 = *((_DWORD *)this + 16);
                if (v49 == *((_DWORD *)this + 17))
                {
                  sub_18D09EC0C(v82, v49 + 1);
                  v49 = *((_DWORD *)this + 16);
                }
                v50 = *((_QWORD *)this + 7);
                v51 = v49 + 1;
                *((_DWORD *)this + 16) = v49 + 1;
                *(_QWORD *)(v50 + 8 * v49) = v48;
                v52 = *((_QWORD *)a2 + 1);
                v53 = *((_DWORD *)a2 + 4) - v52;
                if (v53 >= 1)
                {
                  v54 = v53 / 9u;
                  v55 = v54 >= *((_DWORD *)this + 17) - v51 ? *((_DWORD *)this + 17) - v51 : v54;
                  if (v55 >= 1)
                  {
                    v56 = 0;
                    while (*(_BYTE *)v52 == 49)
                    {
                      v57 = *(_QWORD *)(v52 + 1);
                      if (v51 >= *((_DWORD *)this + 17))
                      {
                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                        v51 = *((_DWORD *)this + 16);
                        v50 = *((_QWORD *)this + 7);
                      }
                      *((_DWORD *)this + 16) = v51 + 1;
                      *(_QWORD *)(v50 + 8 * v51) = v57;
                      ++v56;
                      v52 += 9;
                      ++v51;
                      if (v55 == v56)
                      {
                        v56 = v55;
                        break;
                      }
                    }
                    if (v56)
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                  }
                }
LABEL_127:
                v36 = (_BYTE *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v36 >= *((_QWORD *)a2 + 2))
                  break;
                v58 = *v36;
                if (v58 != 49)
                {
                  if (v58 == 57)
                  {
                    while (1)
                    {
                      *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_131:
                      *(_QWORD *)v85 = 0;
                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0;
                      v59 = *(_QWORD *)v85;
                      v60 = *((_DWORD *)this + 20);
                      if (v60 == *((_DWORD *)this + 21))
                      {
                        sub_18D09EC0C(v83, v60 + 1);
                        v60 = *((_DWORD *)this + 20);
                      }
                      v61 = *((_QWORD *)this + 9);
                      v62 = v60 + 1;
                      *((_DWORD *)this + 20) = v60 + 1;
                      *(_QWORD *)(v61 + 8 * v60) = v59;
                      v63 = *((_QWORD *)a2 + 1);
                      v64 = *((_DWORD *)a2 + 4) - v63;
                      if (v64 >= 1)
                      {
                        v65 = v64 / 9u;
                        v66 = v65 >= *((_DWORD *)this + 21) - v62 ? *((_DWORD *)this + 21) - v62 : v65;
                        if (v66 >= 1)
                        {
                          v67 = 0;
                          while (*(_BYTE *)v63 == 57)
                          {
                            v68 = *(_QWORD *)(v63 + 1);
                            if (v62 >= *((_DWORD *)this + 21))
                            {
                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                              wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                              v62 = *((_DWORD *)this + 20);
                              v61 = *((_QWORD *)this + 9);
                            }
                            *((_DWORD *)this + 20) = v62 + 1;
                            *(_QWORD *)(v61 + 8 * v62) = v68;
                            ++v67;
                            v63 += 9;
                            ++v62;
                            if (v66 == v67)
                            {
                              v67 = v66;
                              break;
                            }
                          }
                          if (v67)
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                        }
                      }
LABEL_147:
                      v36 = (_BYTE *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v36 >= *((_QWORD *)a2 + 2))
                        break;
                      v69 = *v36;
                      if (v69 != 57)
                      {
                        if (v69 != 65)
                          goto LABEL_2;
                        goto LABEL_150;
                      }
                    }
                  }
                  goto LABEL_2;
                }
              }
            }
            goto LABEL_2;
          }
        }
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_63;
        goto LABEL_37;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_77;
        goto LABEL_37;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_91;
        if (v6 != 2)
          goto LABEL_37;
        result = sub_18D0C7FD4(a2, v81);
        if (!(_DWORD)result)
          return result;
        goto LABEL_107;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_111;
        if (v6 != 2)
          goto LABEL_37;
        result = sub_18D0C7FD4(a2, v82);
        if (!(_DWORD)result)
          return result;
        goto LABEL_127;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_131;
        if (v6 != 2)
          goto LABEL_37;
        result = sub_18D0C7FD4(a2, v83);
        if (!(_DWORD)result)
          return result;
        goto LABEL_147;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_151;
        if (v6 == 2)
        {
          result = sub_18D0C7FD4(a2, v84);
          if (!(_DWORD)result)
            return result;
          while (1)
          {
            v36 = (_BYTE *)*((_QWORD *)a2 + 1);
            v80 = (_BYTE *)*((_QWORD *)a2 + 2);
            if (v36 >= v80 || *v36 != 65)
              break;
LABEL_150:
            *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_151:
            *(_QWORD *)v85 = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0;
            v70 = *(_QWORD *)v85;
            v71 = *((_DWORD *)this + 24);
            if (v71 == *((_DWORD *)this + 25))
            {
              sub_18D09EC0C(v84, v71 + 1);
              v71 = *((_DWORD *)this + 24);
            }
            v72 = *((_QWORD *)this + 11);
            v73 = v71 + 1;
            *((_DWORD *)this + 24) = v71 + 1;
            *(_QWORD *)(v72 + 8 * v71) = v70;
            v74 = *((_QWORD *)a2 + 1);
            v75 = *((_DWORD *)a2 + 4) - v74;
            if (v75 >= 1)
            {
              v76 = v75 / 9u;
              v77 = v76 >= *((_DWORD *)this + 25) - v73 ? *((_DWORD *)this + 25) - v73 : v76;
              if (v77 >= 1)
              {
                v78 = 0;
                while (*(_BYTE *)v74 == 65)
                {
                  v79 = *(_QWORD *)(v74 + 1);
                  if (v73 >= *((_DWORD *)this + 25))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                    v73 = *((_DWORD *)this + 24);
                    v72 = *((_QWORD *)this + 11);
                  }
                  *((_DWORD *)this + 24) = v73 + 1;
                  *(_QWORD *)(v72 + 8 * v73) = v79;
                  ++v78;
                  v74 += 9;
                  ++v73;
                  if (v77 == v78)
                  {
                    v78 = v77;
                    break;
                  }
                }
                if (v78)
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
          if (v36 == v80 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_37:
        if (v6 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      default:
        v6 = TagFallback & 7;
        goto LABEL_37;
    }
  }
}

void sub_18D0C7FA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_18D0C7FD4(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unint64_t v10;

  v9 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v9 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_10:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    return 1;
  }
  else
  {
    while (1)
    {
      v10 = 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10);
      if (!(_DWORD)result)
        break;
      v6 = v10;
      v7 = a2[2];
      if (v7 == a2[3])
      {
        sub_18D09EC0C(a2, v7 + 1);
        v7 = a2[2];
      }
      v8 = *(_QWORD *)a2;
      a2[2] = v7 + 1;
      *(_QWORD *)(v8 + 8 * v7) = v6;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0)
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 108);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_18;
    goto LABEL_15;
  }
LABEL_12:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 8) != 0)
  {
LABEL_15:
    v10 = *(_QWORD *)(v5 + 32);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                      + 32);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
LABEL_18:
  if (*(int *)(v5 + 48) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 40) + 8 * v11++), a3);
    while (v11 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 56) + 8 * v12++), a3);
    while (v12 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 72) + 8 * v13++), a3);
    while (v13 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 88) + 8 * v14++), a3);
    while (v14 < *(int *)(v5 + 96));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  int v2;
  int v3;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  int v19;
  uint64_t result;

  LOBYTE(v2) = *((_BYTE *)this + 108);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_33;
  }
  if ((*((_BYTE *)this + 108) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 108) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((_QWORD *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v4 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 8);
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(v4);
  v6 = (int)v5;
  if (v5 >= 0x80)
    v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  else
    v7 = 1;
  v3 = v6 + v7 + 1;
  v2 = *((_DWORD *)this + 27);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 += v10 + v11 + 1;
    v2 = *((_DWORD *)this + 27);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 3);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v12 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 24);
  }
  v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v12);
  v14 = (int)v13;
  if (v13 >= 0x80)
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  else
    v15 = 1;
  v3 += v14 + v15 + 1;
  if ((*((_DWORD *)this + 27) & 8) != 0)
  {
LABEL_27:
    v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 4);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v16 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 32);
    }
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v16);
    v18 = (int)v17;
    if (v17 >= 0x80)
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    else
      v19 = 1;
    v3 += v18 + v19 + 1;
  }
LABEL_33:
  result = (9
                        * (*((_DWORD *)this + 16)
                         + *((_DWORD *)this + 12)
                         + *((_DWORD *)this + 20)
                         + *((_DWORD *)this + 24))
                        + v3);
  *((_DWORD *)this + 26) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    v7 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 5) = v6;
    v8 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = v7;
    *((_QWORD *)a2 + 6) = v8;
    v9 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    v10 = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 7) = v9;
    v11 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v10;
    *((_QWORD *)a2 + 8) = v11;
    v12 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    v13 = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 9) = v12;
    v14 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v13;
    *((_QWORD *)a2 + 10) = v14;
    v15 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    result = *((double *)a2 + 12);
    *((_QWORD *)a2 + 11) = v15;
    v17 = *((_QWORD *)this + 12);
    *((double *)this + 12) = result;
    *((_QWORD *)a2 + 12) = v17;
    LODWORD(v15) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v15;
    LODWORD(v15) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v15;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.PolynomialEphemerides");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 86) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::GnssObservable(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  *(_QWORD *)this = &off_1E25BE030;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 86) = 0u;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(this, a2);
  return this;
}

void sub_18D0C866C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v5;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v6;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v7;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *v14;
  const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *v15;
  uint64_t v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  v4 = *((_DWORD *)a2 + 29);
  if ((_BYTE)v4)
  {
    if ((v4 & 1) != 0)
    {
      *((_DWORD *)v3 + 29) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BDEC8;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *((_QWORD *)this + 3) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 8);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 29);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 29) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)v3 + 2);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25BDEC8;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 16);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_25;
    }
LABEL_23:
    v9 = *((_DWORD *)a2 + 6);
    if (v9 >= 7)
      __assert_rtn("set_observable_type", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6592, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSObservableType_IsValid(value)");
    *((_DWORD *)v3 + 29) |= 4u;
    *((_DWORD *)v3 + 6) = v9;
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_27;
    }
LABEL_25:
    v10 = *((_DWORD *)a2 + 7);
    if (v10 >= 0xD)
      __assert_rtn("set_gnss_band", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6615, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    *((_DWORD *)v3 + 29) |= 8u;
    *((_DWORD *)v3 + 7) = v10;
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_28;
    }
LABEL_27:
    v11 = *((_QWORD *)a2 + 4);
    *((_DWORD *)v3 + 29) |= 0x10u;
    *((_QWORD *)v3 + 4) = v11;
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_29;
    }
LABEL_28:
    v12 = *((_QWORD *)a2 + 5);
    *((_DWORD *)v3 + 29) |= 0x20u;
    *((_QWORD *)v3 + 5) = v12;
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_35;
      goto LABEL_30;
    }
LABEL_29:
    v13 = *((_QWORD *)a2 + 6);
    *((_DWORD *)v3 + 29) |= 0x40u;
    *((_QWORD *)v3 + 6) = v13;
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x80) == 0)
      goto LABEL_35;
LABEL_30:
    *((_DWORD *)v3 + 29) |= 0x80u;
    v14 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((_QWORD *)v3 + 7);
    if (!v14)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)operator new();
      v14 = this;
      *(_QWORD *)this = &off_1E25BE378;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *((_QWORD *)v3 + 7) = this;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((_QWORD *)a2 + 7);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      v15 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 56);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(v14, v15);
    v4 = *((_DWORD *)a2 + 29);
  }
LABEL_35:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v16 = *((_QWORD *)a2 + 8);
    *((_DWORD *)v3 + 29) |= 0x100u;
    *((_QWORD *)v3 + 8) = v16;
    v4 = *((_DWORD *)a2 + 29);
  }
  if ((v4 & 0x200) != 0)
  {
    v17 = *((_DWORD *)a2 + 24);
    if (v17 >= 5)
      __assert_rtn("set_multipath_indicator", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6768, "::CoreNavigation::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(value)");
    *((_DWORD *)v3 + 29) |= 0x200u;
    *((_DWORD *)v3 + 24) = v17;
    v4 = *((_DWORD *)a2 + 29);
  }
  if ((v4 & 0x400) != 0)
  {
    v19 = *((_QWORD *)a2 + 9);
    *((_DWORD *)v3 + 29) |= 0x400u;
    *((_QWORD *)v3 + 9) = v19;
    v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x800) == 0)
    {
LABEL_43:
      if ((v4 & 0x1000) == 0)
        goto LABEL_44;
      goto LABEL_51;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_43;
  }
  v20 = *((_QWORD *)a2 + 10);
  *((_DWORD *)v3 + 29) |= 0x800u;
  *((_QWORD *)v3 + 10) = v20;
  v4 = *((_DWORD *)a2 + 29);
  if ((v4 & 0x1000) == 0)
  {
LABEL_44:
    if ((v4 & 0x2000) == 0)
      goto LABEL_45;
    goto LABEL_52;
  }
LABEL_51:
  v21 = *((_QWORD *)a2 + 11);
  *((_DWORD *)v3 + 29) |= 0x1000u;
  *((_QWORD *)v3 + 11) = v21;
  v4 = *((_DWORD *)a2 + 29);
  if ((v4 & 0x2000) == 0)
  {
LABEL_45:
    if ((v4 & 0x4000) == 0)
      goto LABEL_46;
    goto LABEL_53;
  }
LABEL_52:
  v22 = *((_QWORD *)a2 + 13);
  *((_DWORD *)v3 + 29) |= 0x2000u;
  *((_QWORD *)v3 + 13) = v22;
  v4 = *((_DWORD *)a2 + 29);
  if ((v4 & 0x4000) == 0)
  {
LABEL_46:
    if ((v4 & 0x8000) == 0)
      return;
    goto LABEL_47;
  }
LABEL_53:
  v23 = *((_BYTE *)a2 + 100);
  *((_DWORD *)v3 + 29) |= 0x4000u;
  *((_BYTE *)v3 + 100) = v23;
  if ((*((_DWORD *)a2 + 29) & 0x8000) != 0)
  {
LABEL_47:
    v18 = *((_BYTE *)a2 + 101);
    *((_DWORD *)v3 + 29) |= 0x8000u;
    *((_BYTE *)v3 + 101) = v18;
  }
}

void sub_18D0C8A70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::~GnssObservable(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  *(_QWORD *)this = &off_1E25BE030;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::~GnssObservable(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 7);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 112) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE030;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 86) = 0u;
  *(_QWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_DWORD *)(this + 116);
  if ((_BYTE)v1)
  {
    if ((v1 & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        v1 = *(_DWORD *)(this + 116);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v1 = *(_DWORD *)(this + 116);
      }
    }
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    if ((v1 & 0x80) != 0)
    {
      v4 = *(_QWORD *)(this + 56);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 52))
        {
          *(_QWORD *)(v4 + 40) = 0;
          *(_OWORD *)(v4 + 24) = 0uLL;
          *(_OWORD *)(v4 + 8) = 0uLL;
        }
        *(_DWORD *)(v4 + 52) = 0;
        v1 = *(_DWORD *)(this + 116);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 104) = 0;
    *(_OWORD *)(this + 64) = 0u;
    *(_OWORD *)(this + 80) = 0u;
    *(_QWORD *)(this + 94) = 0;
  }
  *(_DWORD *)(this + 116) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 52))
  {
    *(_QWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v7;
  char *v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  int v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  unsigned __int8 *v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v25;
  char *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE *v31;
  unsigned int v32;
  uint64_t result;
  _BYTE *v34;
  unsigned int v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BYTE *v46;
  _BYTE *v47;
  unsigned int v48;
  _BYTE *v49;
  _BYTE *v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  unsigned int v54;
  unsigned __int8 *v55;
  unsigned int v56;
  unsigned __int8 *v57;
  unsigned int v58[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_43;
        *((_DWORD *)this + 29) |= 1u;
        v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)operator new();
          *(_QWORD *)v7 = &off_1E25BDEC8;
          *((_QWORD *)v7 + 1) = 0;
          *((_QWORD *)v7 + 2) = 0;
          *((_QWORD *)v7 + 3) = 0;
          *((_QWORD *)this + 1) = v7;
        }
        v58[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58))return 0;
        }
        else
        {
          v58[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v24 + 1;
        goto LABEL_56;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_43;
LABEL_56:
        *((_DWORD *)this + 29) |= 2u;
        v25 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 2);
        if (!v25)
        {
          v25 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)operator new();
          *(_QWORD *)v25 = &off_1E25BDEC8;
          *((_QWORD *)v25 + 1) = 0;
          *((_QWORD *)v25 + 2) = 0;
          *((_QWORD *)v25 + 3) = 0;
          *((_QWORD *)this + 2) = v25;
        }
        v58[0] = 0;
        v26 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58))return 0;
        }
        else
        {
          v58[0] = *v26;
          *((_QWORD *)a2 + 1) = v26 + 1;
        }
        v27 = *((_DWORD *)a2 + 14);
        v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v25, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v29 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v29, 1);
        v30 = v29 - 1;
        if (v30 < 0 == v22)
          *((_DWORD *)a2 + 14) = v30;
        v31 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v31 >= v9 || *v31 != 24)
          continue;
        v10 = v31 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_70:
        v58[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!(_DWORD)result)
            return result;
          v32 = v58[0];
        }
        else
        {
          v32 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v32 <= 6)
        {
          *((_DWORD *)this + 29) |= 4u;
          *((_DWORD *)this + 6) = v32;
        }
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v34 >= v11 || *v34 != 32)
          continue;
        v12 = v34 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_80:
        v58[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!(_DWORD)result)
            return result;
          v35 = v58[0];
        }
        else
        {
          v35 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v35 <= 0xC)
        {
          *((_DWORD *)this + 29) |= 8u;
          *((_DWORD *)this + 7) = v35;
        }
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_90:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v58;
        *((_DWORD *)this + 29) |= 0x10u;
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_94:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v58;
        *((_DWORD *)this + 29) |= 0x20u;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_98:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v58;
        v13 = *((_DWORD *)this + 29) | 0x40;
        *((_DWORD *)this + 29) = v13;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_102:
        *((_DWORD *)this + 29) = v13 | 0x80;
        v40 = *((_QWORD *)this + 7);
        if (!v40)
        {
          v40 = operator new();
          *(_QWORD *)v40 = &off_1E25BE378;
          *(_OWORD *)(v40 + 8) = 0u;
          *(_OWORD *)(v40 + 24) = 0u;
          *(_OWORD *)(v40 + 40) = 0u;
          *((_QWORD *)this + 7) = v40;
        }
        v58[0] = 0;
        v41 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58))return 0;
        }
        else
        {
          v58[0] = *v41;
          *((_QWORD *)a2 + 1) = v41 + 1;
        }
        v42 = *((_DWORD *)a2 + 14);
        v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)v40, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v44 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v44, 1);
        v45 = v44 - 1;
        if (v45 < 0 == v22)
          *((_DWORD *)a2 + 14) = v45;
        v46 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v46 + 1;
LABEL_116:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v58;
        *((_DWORD *)this + 29) |= 0x100u;
        v47 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v47 >= v14 || *v47 != 80)
          continue;
        v15 = v47 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_120:
        v58[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!(_DWORD)result)
            return result;
          v48 = v58[0];
        }
        else
        {
          v48 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v48 <= 4)
        {
          *((_DWORD *)this + 29) |= 0x200u;
          *((_DWORD *)this + 24) = v48;
        }
        v49 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v49 >= *((_QWORD *)a2 + 2) || *v49 != 89)
          continue;
        *((_QWORD *)a2 + 1) = v49 + 1;
LABEL_130:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v58;
        *((_DWORD *)this + 29) |= 0x400u;
        v50 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_134:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v58;
        *((_DWORD *)this + 29) |= 0x800u;
        v51 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v51 >= *((_QWORD *)a2 + 2) || *v51 != 105)
          continue;
        *((_QWORD *)a2 + 1) = v51 + 1;
LABEL_138:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v58;
        *((_DWORD *)this + 29) |= 0x1000u;
        v52 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 != 113)
          continue;
        *((_QWORD *)a2 + 1) = v52 + 1;
LABEL_142:
        *(_QWORD *)v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) != 0)
        {
          *((_QWORD *)this + 13) = *(_QWORD *)v58;
          *((_DWORD *)this + 29) |= 0x2000u;
          v53 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v53 < v16 && *v53 == 120)
          {
            v17 = v53 + 1;
            *((_QWORD *)a2 + 1) = v17;
LABEL_146:
            v58[0] = 0;
            if ((unint64_t)v17 >= v16 || (char)*v17 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
              if (!(_DWORD)result)
                return result;
              v54 = v58[0];
              v55 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v16 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v54 = *v17;
              v55 = v17 + 1;
              *((_QWORD *)a2 + 1) = v55;
            }
            *((_BYTE *)this + 100) = v54 != 0;
            *((_DWORD *)this + 29) |= 0x4000u;
            if ((int)v16 - (int)v55 >= 2 && *v55 == 128 && v55[1] == 1)
            {
              v18 = (char *)(v55 + 2);
              *((_QWORD *)a2 + 1) = v18;
LABEL_155:
              v58[0] = 0;
              if ((unint64_t)v18 >= v16 || *v18 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
                if (!(_DWORD)result)
                  return result;
                v56 = v58[0];
                v57 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v16 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v56 = *v18;
                v57 = (unsigned __int8 *)(v18 + 1);
                *((_QWORD *)a2 + 1) = v57;
              }
              *((_BYTE *)this + 101) = v56 != 0;
              *((_DWORD *)this + 29) |= 0x8000u;
              if (v57 == (unsigned __int8 *)v16
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_43;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_70;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_43;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_80;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_90;
        goto LABEL_43;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_94;
        goto LABEL_43;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_98;
        goto LABEL_43;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_43;
        v13 = *((_DWORD *)this + 29);
        goto LABEL_102;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_116;
        goto LABEL_43;
      case 0xAu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_43;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_120;
      case 0xBu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_130;
        goto LABEL_43;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_134;
        goto LABEL_43;
      case 0xDu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_138;
        goto LABEL_43;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_142;
        goto LABEL_43;
      case 0xFu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_43;
        v17 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_146;
      case 0x10u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_43;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_155;
      default:
        v6 = TagFallback & 7;
LABEL_43:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 116);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_32;
  }
LABEL_29:
  v9 = *(_QWORD *)(v5 + 56);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                   + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 80), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 88), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 104), a3);
  v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 101), (uint64_t)a2, a4);
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 100), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 116) & 0x8000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 101), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  int v2;
  int v3;
  uint64_t v4;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  unsigned int v17;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  int v20;
  unsigned int v21;

  v2 = *((_DWORD *)this + 29);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_44;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = v7 + v8 + 1;
  v2 = *((_DWORD *)this + 29);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((_QWORD *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v9 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 16);
    }
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v9);
    v11 = (int)v10;
    if (v10 >= 0x80)
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    else
      v12 = 1;
    v3 += v11 + v12 + 1;
    v2 = *((_DWORD *)this + 29);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v13 & 0x80000000) != 0)
    {
      v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      v2 = *((_DWORD *)this + 29);
    }
    else
    {
      v14 = 2;
    }
    v3 += v14;
    if ((v2 & 8) == 0)
      goto LABEL_33;
    goto LABEL_27;
  }
  if ((v2 & 8) != 0)
  {
LABEL_27:
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v15 & 0x80000000) != 0)
    {
      v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      v2 = *((_DWORD *)this + 29);
    }
    else
    {
      v16 = 2;
    }
    v3 += v16;
  }
LABEL_33:
  v17 = v3 + 9;
  if ((v2 & 0x10) == 0)
    v17 = v3;
  if ((v2 & 0x20) != 0)
    v17 += 9;
  if ((v2 & 0x40) != 0)
    v4 = v17 + 9;
  else
    v4 = v17;
  if ((v2 & 0x80) != 0)
  {
    v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((_QWORD *)this + 7);
    if (!v18)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      v18 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 56);
    }
    v4 = v4
       + CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::ByteSize(v18)
       + 2;
    v2 = *((_DWORD *)this + 29);
  }
LABEL_44:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
      LODWORD(v4) = v4 + 9;
    if ((v2 & 0x200) != 0)
    {
      v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
      if ((v19 & 0x80000000) != 0)
      {
        v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19) + 1;
        v2 = *((_DWORD *)this + 29);
      }
      else
      {
        v20 = 2;
      }
      LODWORD(v4) = v20 + v4;
    }
    v21 = v4 + 9;
    if ((v2 & 0x400) == 0)
      v21 = v4;
    if ((v2 & 0x800) != 0)
      v21 += 9;
    if ((v2 & 0x1000) != 0)
      v21 += 9;
    if ((v2 & 0x2000) != 0)
      v21 += 9;
    if ((v2 & 0x4000) != 0)
      v21 += 2;
    if ((v2 & 0x8000) != 0)
      v4 = v21 + 3;
    else
      v4 = v21;
  }
  *((_DWORD *)this + 28) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_13;
      }
    }
    else if ((*((_BYTE *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_14;
    }
LABEL_13:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((double *)this + 3) = result;
    v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        return result;
      goto LABEL_9;
    }
LABEL_14:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0)
      return result;
LABEL_9:
    result = *((double *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((double *)this + 5) = result;
  }
  return result;
}

void sub_18D0C9BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    v4 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v4;
    v5 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    v6 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v6;
    v7 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v7;
    v8 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v8;
    LODWORD(v7) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v7;
    v9 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v9;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v10;
    v11 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v11;
    result = *((double *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((double *)a2 + 13) = result;
    LOBYTE(v7) = *((_BYTE *)this + 100);
    *((_BYTE *)this + 100) = *((_BYTE *)a2 + 100);
    *((_BYTE *)a2 + 100) = v7;
    LOBYTE(v7) = *((_BYTE *)this + 101);
    *((_BYTE *)this + 101) = *((_BYTE *)a2 + 101);
    *((_BYTE *)a2 + 101) = v7;
    LODWORD(v7) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v7;
    LODWORD(v7) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssObservable");
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::GNSSSatelliteID(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BE120;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(this, a2);
  return this;
}

void sub_18D0C9D98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::~GNSSSatelliteID(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  *(_QWORD *)this = &off_1E25BE120;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::~GNSSSatelliteID(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BE120;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v15 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v10 = v15;
      }
      else
      {
        v10 = *v9;
        *((_QWORD *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 6)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_25:
        v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!(_DWORD)result)
            return result;
          v12 = v16;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 3) = v12;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  char v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((_BYTE *)this + 20);
  if (v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        v3 = 11;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
      else if (v4 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0)
          goto LABEL_19;
      }
      else
      {
        v3 = 2;
        if ((v2 & 2) == 0)
          goto LABEL_19;
      }
    }
    else
    {
      v3 = 0;
      if ((*((_BYTE *)this + 20) & 2) == 0)
        goto LABEL_19;
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      v6 = 2;
    }
    v3 = (v6 + v3);
  }
  else
  {
    v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GNSSSatelliteID");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MeasurementCorrections(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  *(_QWORD *)this = &off_1E25BE378;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(this, a2);
  return this;
}

void sub_18D0CA298(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::~MeasurementCorrections(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  *(_QWORD *)this = &off_1E25BE378;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::~MeasurementCorrections(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE378;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_34;
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v12;
        *((_DWORD *)this + 13) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_34;
LABEL_14:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v12;
        *((_DWORD *)this + 13) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v12;
        *((_DWORD *)this + 13) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 4) = v12;
        *((_DWORD *)this + 13) |= 8u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_29:
        v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
          return 0;
        *((_QWORD *)this + 5) = v12;
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_34;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_34;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_29;
        goto LABEL_34;
      default:
        v6 = TagFallback & 7;
LABEL_34:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 52);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v4 + 40), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  if ((*(_DWORD *)(v4 + 52) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v4 + 40), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 52);
  if (*((_BYTE *)this + 52))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v2 += 9;
    if ((v1 & 0x10) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 12) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  int v7;
  int v8;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    result = *((double *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((double *)a2 + 5) = result;
    v7 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v7;
    v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.MeasurementCorrections");
}

uint64_t sub_18D0CA840(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18D0CA848(uint64_t a1)
{
  return *(unsigned int *)(a1 + 236);
}

uint64_t sub_18D0CA850(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0CA858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D0CA860(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18D0CA868(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18D0CA870(uint64_t a1)
{
  return *(unsigned int *)(a1 + 248);
}

uint64_t sub_18D0CA878(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0CA880(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0CA888(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D0CA890(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_18D0CA898(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0CA8A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0CA8A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18D0CA8B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

uint64_t sub_18D0CA8B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_18D0CA8C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D0CA8C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_ShutdownFile_CoreNavigationCLPInternalToolDataTypes_2eproto(CoreNavigation::CLP::LogEntry::InternalToolDataTypes *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_);
  result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_;
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto_impl(CoreNavigation::CLP::LogEntry::InternalToolDataTypes *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPInternalToolDataTypes.pb.cc", a4);
  v4 = operator new();
  *(_QWORD *)(v4 + 8) = 0;
  *(_QWORD *)(v4 + 16) = 0;
  *(_QWORD *)v4 = &off_1E25BEC60;
  *(_DWORD *)(v4 + 24) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_ = v4;
  v5 = (_QWORD *)operator new();
  *v5 = &off_1E25BECD8;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_ = (uint64_t)v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E25BED50;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ = v6;
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E25BEAF8;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 40) = 0u;
  *(_QWORD *)(v7 + 56) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E25BEBE8;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_ = v8;
  v9 = operator new();
  *(_QWORD *)v9 = &off_1E25BEA80;
  *(_OWORD *)(v9 + 8) = 0u;
  *(_OWORD *)(v9 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_ = v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E25BEB70;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_ = v10;
  v11 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  v12 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  *(_QWORD *)(v11 + 16) = v12;
  *(_QWORD *)(v11 + 24) = v10;
  v13 = (_QWORD *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 8) = v12;
  v13[2] = v12;
  v14 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
  v13[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
  v13[4] = v14;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_ShutdownFile_CoreNavigationCLPInternalToolDataTypes_2eproto, v15);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::GpsTime(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BEC60;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BEC60;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::UtcTime(_QWORD *this)
{
  *this = &off_1E25BECD8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BECD8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::PosAndVel(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BED50;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BED50;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::PosAndVelError(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEAF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEAF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::EcefXyz(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEBE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEBE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::EastNorthUp(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEA80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEA80;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::LatLonAltGeodetic(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BEB70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BEB70;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
  this[4] = v2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(CoreNavigation::CLP::LogEntry::InternalToolDataTypes *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0CACE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::GpsTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BEC60;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(this, a2);
  return this;
}

void sub_18D0CAD58(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  double result;
  int v5;
  int v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 24);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 24) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v6;
      v5 = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((double *)this + 1) = result;
    }
  }
  return result;
}

void sub_18D0CAE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::~GpsTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  *(_QWORD *)this = &off_1E25BEC60;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::~GpsTime(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BEC60;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  unint64_t v8;
  char *v9;
  _BYTE *v10;
  uint64_t result;
  unint64_t v12;

  v4 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v10 = v9 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 6) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((_QWORD *)a2 + 1) = v10 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_16;
LABEL_24:
      v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
        return 0;
      *((_QWORD *)this + 1) = v12;
      *((_DWORD *)this + 6) |= 2u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_16:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 24);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;

  LOBYTE(v2) = *((_BYTE *)this + 24);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 24) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 6);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  int v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.GpsTime");
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::UtcTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  *(_QWORD *)this = &off_1E25BECD8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(this, a2);
  return this;
}

void sub_18D0CB2B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v4 = *((_DWORD *)a2 + 7);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 7) |= 2u;
    *((_DWORD *)this + 3) = v7;
    if ((*((_DWORD *)a2 + 7) & 4) == 0)
      return;
LABEL_7:
    v5 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 7) |= 4u;
    *((_QWORD *)this + 2) = v5;
  }
}

void sub_18D0CB394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::~UtcTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  *(_QWORD *)this = &off_1E25BECD8;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::~UtcTime(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BECD8;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  unint64_t v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  char *v12;
  uint64_t result;
  unsigned int v14;
  _BYTE *v15;
  unsigned int v16[2];

  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if ((TagFallback & 7) != 0)
            goto LABEL_18;
          v16[0] = 0;
          v9 = (char *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v9 >= v8 || *v9 < 0)
          {
            result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
            if (!(_DWORD)result)
              return result;
            v10 = v16[0];
            v11 = (_BYTE *)*((_QWORD *)a2 + 1);
            v8 = *((_QWORD *)a2 + 2);
          }
          else
          {
            v10 = *v9;
            v11 = v9 + 1;
            *((_QWORD *)a2 + 1) = v11;
          }
          *((_DWORD *)this + 2) = v10;
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            v12 = v11 + 1;
            *((_QWORD *)a2 + 1) = v12;
            goto LABEL_26;
          }
        }
        if (v6 != 2)
          break;
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
LABEL_26:
        v16[0] = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
          if (!(_DWORD)result)
            return result;
          v14 = v16[0];
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v14 = *v12;
          v15 = v12 + 1;
          *((_QWORD *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 3) = v14;
        *((_DWORD *)this + 7) |= 2u;
        if ((unint64_t)v15 < v8 && *v15 == 25)
        {
          *((_QWORD *)a2 + 1) = v15 + 1;
          goto LABEL_34;
        }
      }
      if (v6 != 3)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_18;
LABEL_34:
      *(_QWORD *)v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0;
      *((_QWORD *)this + 2) = *(_QWORD *)v16;
      *((_DWORD *)this + 7) |= 4u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_22;
  }
  if ((*((_BYTE *)this + 28) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 28) & 2) == 0)
      goto LABEL_19;
LABEL_13:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v7 = 2;
    }
    v3 += v7;
    goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v5 & 0x80000000) != 0)
  {
    v3 = 11;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
  else
  {
    if (v5 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      v2 = *((_DWORD *)this + 7);
      if ((v2 & 2) == 0)
        goto LABEL_19;
      goto LABEL_13;
    }
    v3 = 2;
    if ((v2 & 2) != 0)
      goto LABEL_13;
  }
LABEL_19:
  if ((v2 & 4) != 0)
    result = v3 + 9;
  else
    result = v3;
LABEL_22:
  *((_DWORD *)this + 6) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  int v2;
  int v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.UtcTime");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::PosAndVel(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  *(_QWORD *)this = &off_1E25BED50;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(this, a2);
  return this;
}

void sub_18D0CB934(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v6;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v7;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v8;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v9;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *v10;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *v11;
  _BYTE v12[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      *((_DWORD *)v3 + 9) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BEBE8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                                                                     + 8);
      }
      result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 9) |= 2u;
    v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BEBE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                                                                   + 16);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
    if ((*((_DWORD *)a2 + 9) & 4) != 0)
    {
LABEL_18:
      *((_DWORD *)v3 + 9) |= 4u;
      v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *)*((_QWORD *)v3 + 3);
      if (!v10)
      {
        this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)operator new();
        v10 = this;
        *(_QWORD *)this = &off_1E25BEB70;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 3) = this;
      }
      v11 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *)*((_QWORD *)a2 + 3);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
        v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                                                                                + 24);
      }
      return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(v10, v11);
    }
  }
  return result;
}

void sub_18D0CBB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::~PosAndVel(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  *(_QWORD *)this = &off_1E25BED50;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::~PosAndVel(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BED50;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  LOBYTE(v1) = *(_BYTE *)(this + 36);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 36);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 36);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  uint64_t v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t result;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;

  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          v4 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
          {
            TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          else
          {
            TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((_QWORD *)a2 + 1) = v4 + 1;
            if (!(_DWORD)TagFallback)
              return 1;
          }
          v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1)
            break;
          v7 = TagFallback & 7;
          if (v7 != 2)
            goto LABEL_20;
          *((_DWORD *)this + 9) |= 1u;
          v8 = *((_QWORD *)this + 1);
          if (!v8)
          {
            v8 = operator new();
            *(_QWORD *)v8 = &off_1E25BEBE8;
            *(_OWORD *)(v8 + 8) = 0u;
            *(_OWORD *)(v8 + 24) = 0u;
            *((_QWORD *)this + 1) = v8;
          }
          v30 = 0;
          v9 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
          }
          else
          {
            v30 = *v9;
            *((_QWORD *)a2 + 1) = v9 + 1;
          }
          v10 = *((_DWORD *)a2 + 14);
          v11 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v10 + 1;
          if (v10 >= v11)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v8, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v12 = *((_DWORD *)a2 + 14);
          v13 = __OFSUB__(v12, 1);
          v14 = v12 - 1;
          if (v14 < 0 == v13)
            *((_DWORD *)a2 + 14) = v14;
          v15 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          {
            *((_QWORD *)a2 + 1) = v15 + 1;
            goto LABEL_32;
          }
        }
        if (v6 != 2)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
LABEL_32:
        *((_DWORD *)this + 9) |= 2u;
        v16 = *((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = operator new();
          *(_QWORD *)v16 = &off_1E25BEBE8;
          *(_OWORD *)(v16 + 8) = 0u;
          *(_OWORD *)(v16 + 24) = 0u;
          *((_QWORD *)this + 2) = v16;
        }
        v31 = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
        }
        else
        {
          v31 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v20 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v20, 1);
        v21 = v20 - 1;
        if (v21 < 0 == v13)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 < *((_QWORD *)a2 + 2) && *v22 == 26)
        {
          *((_QWORD *)a2 + 1) = v22 + 1;
          goto LABEL_46;
        }
      }
      if (v6 != 3)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_20;
LABEL_46:
      *((_DWORD *)this + 9) |= 4u;
      v23 = *((_QWORD *)this + 3);
      if (!v23)
      {
        v23 = operator new();
        *(_QWORD *)v23 = &off_1E25BEB70;
        *(_OWORD *)(v23 + 8) = 0u;
        *(_OWORD *)(v23 + 24) = 0u;
        *((_QWORD *)this + 3) = v23;
      }
      v32 = 0;
      v24 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))
          return 0;
      }
      else
      {
        v32 = *v24;
        *((_QWORD *)a2 + 1) = v24 + 1;
      }
      v25 = *((_DWORD *)a2 + 14);
      v26 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v25 + 1;
      if (v25 >= v26)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *)v23, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v27 = *((_DWORD *)a2 + 14);
      v13 = __OFSUB__(v27, 1);
      v28 = v27 - 1;
      if (v28 < 0 == v13)
        *((_DWORD *)a2 + 14) = v28;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_20:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    v9 = *(_QWORD *)(v5 + 24);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_34;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v4 = *((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v4 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 8);
    }
    v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(_BYTE *)(v4 + 36))
    {
      v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0)
        v6 += 9;
      if ((v5 & 4) != 0)
        v5 = v6 + 9;
      else
        v5 = v6;
    }
    *(_DWORD *)(v4 + 32) = v5;
    v3 = (v5 + 2);
    v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 36) & 2) != 0)
  {
LABEL_15:
    v7 = *((_QWORD *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 16);
    }
    v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(_BYTE *)(v7 + 36))
    {
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if ((v8 & 4) != 0)
        v8 = v9 + 9;
      else
        v8 = v9;
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 = (v3 + v8 + 2);
    v2 = *((_DWORD *)this + 9);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v10 = *((_QWORD *)this + 3);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 24);
    }
    v11 = *(unsigned __int8 *)(v10 + 36);
    if (*(_BYTE *)(v10 + 36))
    {
      v12 = (v11 << 31 >> 31) & 9;
      if ((v11 & 2) != 0)
        v12 += 9;
      if ((v11 & 4) != 0)
        v11 = v12 + 9;
      else
        v11 = v12;
    }
    *(_DWORD *)(v10 + 32) = v11;
    v3 = (v3 + v11 + 2);
  }
LABEL_34:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0CC440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0CC528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.PosAndVel");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  double result;

  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::PosAndVelError(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  *(_QWORD *)this = &off_1E25BEAF8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_QWORD *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(this, a2);
  return this;
}

void sub_18D0CC674(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v6;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v7;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v8;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *v9;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *v10;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *v11;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *v12;
  const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *v13;
  _BYTE v14[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 60);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 60) & 1) != 0)
    {
      *((_DWORD *)v3 + 15) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BEBE8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                     + 8);
      }
      result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 15);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_22;
      }
    }
    else if ((*((_BYTE *)a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 15) |= 2u;
    v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)v3 + 2);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25BEBE8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 2) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((_QWORD *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                   + 16);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_27;
    }
LABEL_22:
    *((_DWORD *)v3 + 15) |= 4u;
    v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((_QWORD *)v3 + 3);
    if (!v10)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)operator new();
      v10 = this;
      *(_QWORD *)this = &off_1E25BEA80;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 3) = this;
    }
    v11 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((_QWORD *)a2 + 3);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                        + 24);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(v10, v11);
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_32;
    }
LABEL_27:
    *((_DWORD *)v3 + 15) |= 8u;
    v12 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((_QWORD *)v3 + 4);
    if (!v12)
    {
      this = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)operator new();
      v12 = this;
      *(_QWORD *)this = &off_1E25BEA80;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 4) = this;
    }
    v13 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((_QWORD *)a2 + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                        + 32);
    }
    result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(v12, v13);
    v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return result;
      goto LABEL_10;
    }
LABEL_32:
    result = *((double *)a2 + 5);
    *((_DWORD *)v3 + 15) |= 0x10u;
    *((double *)v3 + 5) = result;
    if ((*((_DWORD *)a2 + 15) & 0x20) == 0)
      return result;
LABEL_10:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 15) |= 0x20u;
    *((double *)v3 + 6) = result;
  }
  return result;
}

void sub_18D0CC920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::~PosAndVelError(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  *(_QWORD *)this = &off_1E25BEAF8;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::~PosAndVelError(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEAF8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  LOBYTE(v1) = *(_BYTE *)(this + 60);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 60) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 36))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
          *(_QWORD *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 16);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 24);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 32);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 36))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
          *(_QWORD *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  int v26;
  int v27;
  _BYTE *v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  int v33;
  int v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t result;
  unsigned int v38[2];

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_23;
        *((_DWORD *)this + 15) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BEBE8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v38[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0;
        }
        else
        {
          v38[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_35;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_23;
LABEL_35:
        *((_DWORD *)this + 15) |= 2u;
        v15 = *((_QWORD *)this + 2);
        if (!v15)
        {
          v15 = operator new();
          *(_QWORD *)v15 = &off_1E25BEBE8;
          *(_OWORD *)(v15 + 8) = 0u;
          *(_OWORD *)(v15 + 24) = 0u;
          *((_QWORD *)this + 2) = v15;
        }
        v38[0] = 0;
        v16 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0;
        }
        else
        {
          v38[0] = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        v17 = *((_DWORD *)a2 + 14);
        v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)v15, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v19 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v19, 1);
        v20 = v19 - 1;
        if (v20 < 0 == v12)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v21 + 1;
LABEL_49:
        *((_DWORD *)this + 15) |= 4u;
        v22 = *((_QWORD *)this + 3);
        if (!v22)
        {
          v22 = operator new();
          *(_QWORD *)v22 = &off_1E25BEA80;
          *(_OWORD *)(v22 + 8) = 0u;
          *(_OWORD *)(v22 + 24) = 0u;
          *((_QWORD *)this + 3) = v22;
        }
        v38[0] = 0;
        v23 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0;
        }
        else
        {
          v38[0] = *v23;
          *((_QWORD *)a2 + 1) = v23 + 1;
        }
        v24 = *((_DWORD *)a2 + 14);
        v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)v22, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v26 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v26, 1);
        v27 = v26 - 1;
        if (v27 < 0 == v12)
          *((_DWORD *)a2 + 14) = v27;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_63:
        *((_DWORD *)this + 15) |= 8u;
        v29 = *((_QWORD *)this + 4);
        if (!v29)
        {
          v29 = operator new();
          *(_QWORD *)v29 = &off_1E25BEA80;
          *(_OWORD *)(v29 + 8) = 0u;
          *(_OWORD *)(v29 + 24) = 0u;
          *((_QWORD *)this + 4) = v29;
        }
        v38[0] = 0;
        v30 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0;
        }
        else
        {
          v38[0] = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        v31 = *((_DWORD *)a2 + 14);
        v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)v29, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v33 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v33, 1);
        v34 = v33 - 1;
        if (v34 < 0 == v12)
          *((_DWORD *)a2 + 14) = v34;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_77:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v38;
        *((_DWORD *)this + 15) |= 0x10u;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_81:
        *(_QWORD *)v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v38;
        *((_DWORD *)this + 15) |= 0x20u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_49;
        goto LABEL_23;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_63;
        goto LABEL_23;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_77;
        goto LABEL_23;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_23;
        goto LABEL_81;
      default:
        v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = this;
  v6 = *(_DWORD *)(this + 60);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_14:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_17:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned int v17;

  LOBYTE(v2) = *((_BYTE *)this + 60);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_50;
  }
  if ((*((_BYTE *)this + 60) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 60) & 2) == 0)
      goto LABEL_24;
    goto LABEL_15;
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 16);
    }
    v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0)
        v10 += 9;
      if ((v9 & 4) != 0)
        v9 = v10 + 9;
      else
        v9 = v10;
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 += v9 + 2;
    v2 = *((_DWORD *)this + 15);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    v11 = *((_QWORD *)this + 3);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 24);
    }
    v12 = *(unsigned __int8 *)(v11 + 36);
    if (*(_BYTE *)(v11 + 36))
    {
      v13 = (v12 << 31 >> 31) & 9;
      if ((v12 & 2) != 0)
        v13 += 9;
      if ((v12 & 4) != 0)
        v12 = v13 + 9;
      else
        v12 = v13;
    }
    *(_DWORD *)(v11 + 32) = v12;
    v3 += v12 + 2;
    v2 = *((_DWORD *)this + 15);
    if ((v2 & 8) == 0)
      goto LABEL_45;
    goto LABEL_36;
  }
  if ((v2 & 8) != 0)
  {
LABEL_36:
    v14 = *((_QWORD *)this + 4);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 32);
    }
    v15 = *(unsigned __int8 *)(v14 + 36);
    if (*(_BYTE *)(v14 + 36))
    {
      v16 = (v15 << 31 >> 31) & 9;
      if ((v15 & 2) != 0)
        v16 += 9;
      if ((v15 & 4) != 0)
        v15 = v16 + 9;
      else
        v15 = v16;
    }
    *(_DWORD *)(v14 + 32) = v15;
    v3 += v15 + 2;
    v2 = *((_DWORD *)this + 15);
  }
LABEL_45:
  v17 = v3 + 9;
  if ((v2 & 0x10) == 0)
    v17 = v3;
  if ((v2 & 0x20) != 0)
    result = v17 + 9;
  else
    result = v17;
LABEL_50:
  *((_DWORD *)this + 14) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0CD510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v6;
    result = *((double *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v5) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.PosAndVelError");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::EcefXyz(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  *(_QWORD *)this = &off_1E25BEBE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(this, a2);
  return this;
}

void sub_18D0CD674(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::~EcefXyz(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  *(_QWORD *)this = &off_1E25BEBE8;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::~EcefXyz(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEBE8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.EcefXyz");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::EastNorthUp(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  *(_QWORD *)this = &off_1E25BEA80;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(this, a2);
  return this;
}

void sub_18D0CDB48(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::~EastNorthUp(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  *(_QWORD *)this = &off_1E25BEA80;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::~EastNorthUp(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEA80;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.EastNorthUp");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::LatLonAltGeodetic(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  *(_QWORD *)this = &off_1E25BEB70;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(this, a2);
  return this;
}

void sub_18D0CE01C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::~LatLonAltGeodetic(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  *(_QWORD *)this = &off_1E25BEB70;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::~LatLonAltGeodetic(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BEB70;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.LatLonAltGeodetic");
}

uint64_t sub_18D0CE488(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18D0CE490(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0CE498(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0CE4A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18D0CE4A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0CE4B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0CE4B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_ShutdownFile_CoreNavigationCLPRayTracingTileData_2eproto(CoreNavigation::CLP::LogEntry::RayTracingTileData *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_);
  result = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_;
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto_impl(CoreNavigation::CLP::LogEntry::RayTracingTileData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPRayTracingTileData.pb.cc", a4);
  v4 = (_QWORD *)operator new();
  *v4 = &off_1E25BEA08;
  v4[1] = 0;
  v5 = MEMORY[0x1E0DE8338];
  v4[2] = 0;
  v4[3] = v5;
  v4[4] = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ = (uint64_t)v4;
  v6 = (_QWORD *)operator new();
  v6[1] = 0;
  v6[2] = 0;
  *v6 = &off_1E25BE828;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_ = (uint64_t)v6;
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E25BE738;
  *(_OWORD *)(v7 + 8) = 0u;
  *(_OWORD *)(v7 + 24) = 0u;
  *(_OWORD *)(v7 + 36) = 0u;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)v8 = &off_1E25BE990;
  *(_OWORD *)(v8 + 8) = 0u;
  *(_OWORD *)(v8 + 24) = 0u;
  *(_DWORD *)(v8 + 40) = 1;
  *(_QWORD *)(v8 + 68) = 0;
  *(_QWORD *)(v8 + 44) = 0;
  *(_QWORD *)(v8 + 60) = 0;
  *(_QWORD *)(v8 + 52) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_ = v8;
  v9 = (_QWORD *)operator new();
  *(_QWORD *)((char *)v9 + 36) = 0;
  *v9 = &off_1E25BE918;
  v9[1] = 0;
  v9[2] = 0;
  v9[3] = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_ = (uint64_t)v9;
  v10 = (_QWORD *)operator new();
  *(_QWORD *)((char *)v10 + 36) = 0;
  *v10 = &off_1E25BE8A0;
  v10[1] = 0;
  v10[2] = 0;
  v10[3] = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_ = (uint64_t)v10;
  v11 = operator new();
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ = v11;
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 64) = 0;
  *(_QWORD *)(v11 + 72) = 0;
  *(_QWORD *)(v11 + 88) = 0;
  *(_QWORD *)(v11 + 96) = 0;
  *(_DWORD *)(v11 + 104) = 0;
  *(_QWORD *)(v11 + 112) = 0;
  *(_QWORD *)(v11 + 120) = 0;
  *(_DWORD *)(v11 + 128) = 0;
  *(_QWORD *)(v11 + 136) = 0;
  *(_QWORD *)(v11 + 144) = 0;
  *(_DWORD *)(v11 + 152) = 0;
  *(_DWORD *)(v11 + 176) = 0;
  *(_QWORD *)(v11 + 160) = 0;
  *(_QWORD *)(v11 + 168) = 0;
  *(_DWORD *)(v11 + 200) = 0;
  *(_QWORD *)(v11 + 184) = 0;
  *(_QWORD *)(v11 + 192) = 0;
  *(_QWORD *)(v11 + 208) = 0;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  v12 = CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_;
  v13 = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_;
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v13 + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_;
  v14 = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_;
  *(_QWORD *)v11 = &off_1E25BE7B0;
  *(_QWORD *)(v11 + 8) = v14;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_ShutdownFile_CoreNavigationCLPRayTracingTileData_2eproto, v15);
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::LogEntry(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  *this = &off_1E25BEA08;
  this[1] = 0;
  this[2] = 0;
  this[3] = v1;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  *this = &off_1E25BEA08;
  this[1] = 0;
  this[2] = 0;
  this[3] = v1;
  this[4] = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::RayTracingTileTimestamp(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BE828;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BE828;
  return this;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::RayTracingTileHeader(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE738;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE738;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::RayTracingTilePayloadMetaData(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE990;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE990;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::PointFacetVisibilityData(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BE918;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BE918;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::FacetInterVisibilityData(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BE8A0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BE8A0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::RayTracingTilePayload(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_QWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(_QWORD *)(this + 112) = 0;
  *(_QWORD *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_QWORD *)(this + 136) = 0;
  *(_QWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(_DWORD *)(this + 176) = 0;
  *(_QWORD *)(this + 160) = 0;
  *(_QWORD *)(this + 168) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(_QWORD *)(this + 184) = 0;
  *(_QWORD *)(this + 192) = 0;
  *(_QWORD *)(this + 208) = 0;
  *(_QWORD *)this = &off_1E25BE7B0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 72) = 0;
  *(_QWORD *)(this + 88) = 0;
  *(_QWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(_QWORD *)(this + 112) = 0;
  *(_QWORD *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_QWORD *)(this + 136) = 0;
  *(_QWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(_DWORD *)(this + 176) = 0;
  *(_QWORD *)(this + 160) = 0;
  *(_QWORD *)(this + 168) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(_QWORD *)(this + 184) = 0;
  *(_QWORD *)(this + 192) = 0;
  *(_QWORD *)(this + 208) = 0;
  *(_QWORD *)this = &off_1E25BE7B0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(CoreNavigation::CLP::LogEntry::RayTracingTileData *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0CE960(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = MEMORY[0x1E0DE8338];
  this[4] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  uint64_t v3;

  *(_QWORD *)this = &off_1E25BEA08;
  *((_QWORD *)this + 1) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = v3;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18D0CE9E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *v5;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *v6;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *v7;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *v8;
  const std::string *v9;
  std::string *v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      *((_DWORD *)v3 + 9) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BE738;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 36) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                               + 8);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          return;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 9) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((_QWORD *)v3 + 2);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)operator new();
      v7 = this;
      *((_QWORD *)this + 5) = 0;
      *((_QWORD *)this + 6) = 0;
      *((_QWORD *)this + 8) = 0;
      *((_QWORD *)this + 9) = 0;
      *((_QWORD *)this + 11) = 0;
      *((_QWORD *)this + 12) = 0;
      *((_DWORD *)this + 26) = 0;
      *((_QWORD *)this + 14) = 0;
      *((_QWORD *)this + 15) = 0;
      *((_DWORD *)this + 32) = 0;
      *((_QWORD *)this + 17) = 0;
      *((_QWORD *)this + 18) = 0;
      *((_DWORD *)this + 38) = 0;
      *((_DWORD *)this + 44) = 0;
      *((_QWORD *)this + 20) = 0;
      *((_QWORD *)this + 21) = 0;
      *((_DWORD *)this + 50) = 0;
      *((_QWORD *)this + 23) = 0;
      *((_QWORD *)this + 24) = 0;
      *((_QWORD *)this + 26) = 0;
      *(_QWORD *)this = &off_1E25BE7B0;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((_QWORD *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                              + 16);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 9) & 4) != 0)
    {
LABEL_18:
      v9 = (const std::string *)*((_QWORD *)a2 + 3);
      *((_DWORD *)v3 + 9) |= 4u;
      v10 = (std::string *)*((_QWORD *)v3 + 3);
      if (v10 == (std::string *)MEMORY[0x1E0DE8338])
      {
        v10 = (std::string *)operator new();
        v10->__r_.__value_.__l.__size_ = 0;
        v10->__r_.__value_.__r.__words[2] = 0;
        v10->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)v3 + 3) = v10;
      }
      std::string::operator=(v10, v9);
    }
  }
}

void sub_18D0CEBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  *(_QWORD *)this = &off_1E25BEA08;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::~LogEntry(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  v2 = *((_QWORD *)this + 3);
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ != v1)
  {
    v4 = *((_QWORD *)v1 + 1);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)v1 + 2);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  _QWORD *result;
  uint64_t v2;

  result = (_QWORD *)operator new();
  v2 = MEMORY[0x1E0DE8338];
  *result = &off_1E25BEA08;
  result[1] = 0;
  result[2] = 0;
  result[3] = v2;
  result[4] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 36);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::Clear(this);
        v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::Clear(this);
        v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      v3 = *(_QWORD *)(v1 + 24);
      if (v3 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(_BYTE **)v3 = 0;
          *(_QWORD *)(v3 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v3 = 0;
          *(_BYTE *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 48))
  {
    if ((*(_BYTE *)(this + 48) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 20))
          *(_QWORD *)(v1 + 8) = 0;
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(_QWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = this;
  if ((*(_BYTE *)(this + 212) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      v3 = *(_DWORD *)(v2 + 72);
      if ((_BYTE)v3)
      {
        *(_OWORD *)(v2 + 24) = 0u;
        *(_OWORD *)(v2 + 8) = 0u;
        *(_DWORD *)(v2 + 40) = 1;
      }
      if ((v3 & 0xFF00) != 0)
      {
        *(_QWORD *)(v2 + 52) = 0;
        *(_QWORD *)(v2 + 44) = 0;
        *(_QWORD *)(v2 + 60) = 0;
      }
      *(_DWORD *)(v2 + 72) = 0;
    }
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 72) = 0;
  if (*(int *)(this + 96) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 88) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 96));
  }
  *(_DWORD *)(v1 + 96) = 0;
  if (*(int *)(v1 + 120) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v1 + 112) + 8 * v6);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v7 + 32))(v7);
      ++v6;
    }
    while (v6 < *(int *)(v1 + 120));
  }
  *(_DWORD *)(v1 + 120) = 0;
  if (*(int *)(v1 + 144) >= 1)
  {
    v8 = 0;
    do
    {
      v9 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 8 * v8);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
      ++v8;
    }
    while (v8 < *(int *)(v1 + 144));
  }
  *(_DWORD *)(v1 + 144) = 0;
  if (*(int *)(v1 + 168) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v1 + 160) + 8 * v10);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *(int *)(v1 + 168));
  }
  *(_DWORD *)(v1 + 168) = 0;
  if (*(int *)(v1 + 192) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v1 + 184) + 8 * v12);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v13 + 32))(v13);
      ++v12;
    }
    while (v12 < *(int *)(v1 + 192));
  }
  *(_DWORD *)(v1 + 192) = 0;
  *(_DWORD *)(v1 + 212) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  uint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  _BYTE *v23;
  _QWORD *v24;
  uint64_t result;
  unsigned int v26;
  unsigned int v27;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_21;
        *((_DWORD *)this + 9) |= 1u;
        v9 = *((_QWORD *)this + 1);
        if (!v9)
        {
          v9 = operator new();
          *(_QWORD *)v9 = &off_1E25BE738;
          *(_OWORD *)(v9 + 8) = 0u;
          *(_OWORD *)(v9 + 24) = 0u;
          *(_OWORD *)(v9 + 36) = 0u;
          *((_QWORD *)this + 1) = v9;
        }
        v26 = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0;
        }
        else
        {
          v26 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)v9, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 18)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_33;
        }
      }
      if (v7 == 2)
        break;
      if (v7 == 3)
      {
        v8 = TagFallback & 7;
        if (v8 == 2)
          goto LABEL_47;
      }
      else
      {
        v8 = TagFallback & 7;
      }
LABEL_21:
      if (v8 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
    v8 = TagFallback & 7;
    if (v8 != 2)
      goto LABEL_21;
LABEL_33:
    *((_DWORD *)this + 9) |= 2u;
    v17 = *((_QWORD *)this + 2);
    if (!v17)
    {
      v17 = operator new();
      *(_QWORD *)(v17 + 40) = 0;
      *(_QWORD *)(v17 + 48) = 0;
      *(_QWORD *)(v17 + 64) = 0;
      *(_QWORD *)(v17 + 72) = 0;
      *(_QWORD *)(v17 + 88) = 0;
      *(_QWORD *)(v17 + 96) = 0;
      *(_DWORD *)(v17 + 104) = 0;
      *(_QWORD *)(v17 + 112) = 0;
      *(_QWORD *)(v17 + 120) = 0;
      *(_DWORD *)(v17 + 128) = 0;
      *(_QWORD *)(v17 + 136) = 0;
      *(_QWORD *)(v17 + 144) = 0;
      *(_DWORD *)(v17 + 152) = 0;
      *(_DWORD *)(v17 + 176) = 0;
      *(_QWORD *)(v17 + 160) = 0;
      *(_QWORD *)(v17 + 168) = 0;
      *(_DWORD *)(v17 + 200) = 0;
      *(_QWORD *)(v17 + 184) = 0;
      *(_QWORD *)(v17 + 192) = 0;
      *(_QWORD *)(v17 + 208) = 0;
      *(_QWORD *)v17 = &off_1E25BE7B0;
      *(_QWORD *)(v17 + 8) = 0;
      *(_QWORD *)(v17 + 16) = 0;
      *(_QWORD *)(v17 + 24) = 0;
      *((_QWORD *)this + 2) = v17;
    }
    v27 = 0;
    v18 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))
        return 0;
    }
    else
    {
      v27 = *v18;
      *((_QWORD *)a2 + 1) = v18 + 1;
    }
    v19 = *((_DWORD *)a2 + 14);
    v20 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v19 + 1;
    if (v19 >= v20)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)v17, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v21 = *((_DWORD *)a2 + 14);
    v14 = __OFSUB__(v21, 1);
    v22 = v21 - 1;
    if (v22 < 0 == v14)
      *((_DWORD *)a2 + 14) = v22;
    v23 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v23 < *((_QWORD *)a2 + 2) && *v23 == 26)
    {
      *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_47:
      *((_DWORD *)this + 9) |= 4u;
      if (*((_QWORD *)this + 3) == v4)
      {
        v24 = (_QWORD *)operator new();
        v24[1] = 0;
        v24[2] = 0;
        *v24 = 0;
        *((_QWORD *)this + 3) = v24;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  int v2;
  uint64_t v3;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  int v17;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_28;
  }
  if ((*((_BYTE *)this + 36) & 1) != 0)
  {
    v4 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((_QWORD *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(0);
      v4 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                       + 8);
    }
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::ByteSize(v4);
    v6 = (int)v5;
    if (v5 >= 0x80)
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    else
      v7 = 1;
    v3 = (v6 + v7 + 1);
    v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = 0;
  if ((*((_BYTE *)this + 36) & 2) != 0)
  {
LABEL_12:
    v8 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((_QWORD *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                        + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      v11 = 1;
    v3 = (v3 + v10 + v11 + 1);
    v2 = *((_DWORD *)this + 9);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    v12 = *((_QWORD *)this + 3);
    v13 = *(unsigned __int8 *)(v12 + 23);
    v14 = v13;
    v15 = *(_QWORD *)(v12 + 8);
    if ((v13 & 0x80u) == 0)
      v16 = *(unsigned __int8 *)(v12 + 23);
    else
      v16 = v15;
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
      v13 = *(unsigned __int8 *)(v12 + 23);
      v15 = *(_QWORD *)(v12 + 8);
      v14 = *(_BYTE *)(v12 + 23);
    }
    else
    {
      v17 = 1;
    }
    if (v14 < 0)
      v13 = v15;
    v3 = (v3 + v17 + v13 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *v6;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *v7;
  int v8;
  int v9;
  int v10;
  _BYTE v11[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 48);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 48) & 1) != 0)
    {
      *((_DWORD *)v3 + 12) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)operator new();
        v6 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25BE828;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_
                                                                                                  + 8);
      }
      result = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_18;
      }
    }
    else if ((*((_BYTE *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)v3 + 12) |= 2u;
    *((_DWORD *)v3 + 4) = v8;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_19;
    }
LABEL_18:
    v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)v3 + 12) |= 4u;
    *((_DWORD *)v3 + 5) = v9;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_20;
    }
LABEL_19:
    v10 = *((_DWORD *)a2 + 10);
    *((_DWORD *)v3 + 12) |= 8u;
    *((_DWORD *)v3 + 10) = v10;
    v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        return result;
      goto LABEL_10;
    }
LABEL_20:
    result = *((double *)a2 + 3);
    *((_DWORD *)v3 + 12) |= 0x10u;
    *((double *)v3 + 3) = result;
    if ((*((_DWORD *)a2 + 12) & 0x20) == 0)
      return result;
LABEL_10:
    result = *((double *)a2 + 4);
    *((_DWORD *)v3 + 12) |= 0x20u;
    *((double *)v3 + 4) = result;
  }
  return result;
}

void sub_18D0CF724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *v48;
  const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *v49;
  _BYTE v50[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v50);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18D09EC0C((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 8 * *((int *)this + 6)), *((const void **)a2 + 2), 8 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    sub_18D0D44E8((_DWORD *)this + 10, *((_DWORD *)this + 12) + v5);
    memcpy((void *)(*((_QWORD *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  v6 = *((_DWORD *)a2 + 18);
  if (v6)
  {
    sub_18D0D44E8((_DWORD *)this + 16, *((_DWORD *)this + 18) + v6);
    memcpy((void *)(*((_QWORD *)this + 8) + 4 * *((int *)this + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    v7 = 0;
    do
    {
      v8 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData **)(*((_QWORD *)a2 + 11)
                                                                                                 + 8 * v7);
      v9 = *((_DWORD *)this + 25);
      v10 = *((int *)this + 24);
      if ((int)v10 >= v9)
      {
        if (v9 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 88));
          v9 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v9 + 1;
        v12 = operator new();
        *(_DWORD *)(v12 + 36) = 0;
        *(_DWORD *)(v12 + 40) = 0;
        *(_QWORD *)v12 = &off_1E25BE8A0;
        *(_QWORD *)(v12 + 8) = 0;
        *(_QWORD *)(v12 + 16) = 0;
        *(_QWORD *)(v12 + 24) = 0;
        v13 = *((_QWORD *)this + 11);
        v14 = *((int *)this + 24);
        *((_DWORD *)this + 24) = v14 + 1;
        *(_QWORD *)(v13 + 8 * v14) = v12;
      }
      else
      {
        v11 = *((_QWORD *)this + 11);
        *((_DWORD *)this + 24) = v10 + 1;
        v12 = *(_QWORD *)(v11 + 8 * v10);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom((CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *)v12, v8);
      ++v7;
    }
    while (v7 < *((int *)a2 + 24));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    v15 = 0;
    do
    {
      v16 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)a2 + 14)
                                                                                                  + 8 * v15);
      v17 = *((_DWORD *)this + 31);
      v18 = *((int *)this + 30);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 112));
          v17 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v17 + 1;
        v20 = operator new();
        *(_DWORD *)(v20 + 36) = 0;
        *(_DWORD *)(v20 + 40) = 0;
        *(_QWORD *)v20 = &off_1E25BE918;
        *(_QWORD *)(v20 + 8) = 0;
        *(_QWORD *)(v20 + 16) = 0;
        *(_QWORD *)(v20 + 24) = 0;
        v21 = *((_QWORD *)this + 14);
        v22 = *((int *)this + 30);
        *((_DWORD *)this + 30) = v22 + 1;
        *(_QWORD *)(v21 + 8 * v22) = v20;
      }
      else
      {
        v19 = *((_QWORD *)this + 14);
        *((_DWORD *)this + 30) = v18 + 1;
        v20 = *(_QWORD *)(v19 + 8 * v18);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v20, v16);
      ++v15;
    }
    while (v15 < *((int *)a2 + 30));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    v23 = 0;
    do
    {
      v24 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)a2 + 17)
                                                                                                  + 8 * v23);
      v25 = *((_DWORD *)this + 37);
      v26 = *((int *)this + 36);
      if ((int)v26 >= v25)
      {
        if (v25 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 136));
          v25 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v25 + 1;
        v28 = operator new();
        *(_DWORD *)(v28 + 36) = 0;
        *(_DWORD *)(v28 + 40) = 0;
        *(_QWORD *)v28 = &off_1E25BE918;
        *(_QWORD *)(v28 + 8) = 0;
        *(_QWORD *)(v28 + 16) = 0;
        *(_QWORD *)(v28 + 24) = 0;
        v29 = *((_QWORD *)this + 17);
        v30 = *((int *)this + 36);
        *((_DWORD *)this + 36) = v30 + 1;
        *(_QWORD *)(v29 + 8 * v30) = v28;
      }
      else
      {
        v27 = *((_QWORD *)this + 17);
        *((_DWORD *)this + 36) = v26 + 1;
        v28 = *(_QWORD *)(v27 + 8 * v26);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v28, v24);
      ++v23;
    }
    while (v23 < *((int *)a2 + 36));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 160));
  if (*((int *)a2 + 42) >= 1)
  {
    v31 = 0;
    do
    {
      v32 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)a2 + 20)
                                                                                                  + 8 * v31);
      v33 = *((_DWORD *)this + 43);
      v34 = *((int *)this + 42);
      if ((int)v34 >= v33)
      {
        if (v33 == *((_DWORD *)this + 44))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 160));
          v33 = *((_DWORD *)this + 43);
        }
        *((_DWORD *)this + 43) = v33 + 1;
        v36 = operator new();
        *(_DWORD *)(v36 + 36) = 0;
        *(_DWORD *)(v36 + 40) = 0;
        *(_QWORD *)v36 = &off_1E25BE918;
        *(_QWORD *)(v36 + 8) = 0;
        *(_QWORD *)(v36 + 16) = 0;
        *(_QWORD *)(v36 + 24) = 0;
        v37 = *((_QWORD *)this + 20);
        v38 = *((int *)this + 42);
        *((_DWORD *)this + 42) = v38 + 1;
        *(_QWORD *)(v37 + 8 * v38) = v36;
      }
      else
      {
        v35 = *((_QWORD *)this + 20);
        *((_DWORD *)this + 42) = v34 + 1;
        v36 = *(_QWORD *)(v35 + 8 * v34);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v36, v32);
      ++v31;
    }
    while (v31 < *((int *)a2 + 42));
  }
  v39 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 184));
  if (*((int *)a2 + 48) >= 1)
  {
    v40 = 0;
    do
    {
      v41 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)a2 + 23)
                                                                                                  + 8 * v40);
      v42 = *((_DWORD *)this + 49);
      v43 = *((int *)this + 48);
      if ((int)v43 >= v42)
      {
        if (v42 == *((_DWORD *)this + 50))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 184));
          v42 = *((_DWORD *)this + 49);
        }
        *((_DWORD *)this + 49) = v42 + 1;
        v45 = operator new();
        *(_DWORD *)(v45 + 36) = 0;
        *(_DWORD *)(v45 + 40) = 0;
        *(_QWORD *)v45 = &off_1E25BE918;
        *(_QWORD *)(v45 + 8) = 0;
        *(_QWORD *)(v45 + 16) = 0;
        *(_QWORD *)(v45 + 24) = 0;
        v46 = *((_QWORD *)this + 23);
        v47 = *((int *)this + 48);
        *((_DWORD *)this + 48) = v47 + 1;
        *(_QWORD *)(v46 + 8 * v47) = v45;
      }
      else
      {
        v44 = *((_QWORD *)this + 23);
        *((_DWORD *)this + 48) = v43 + 1;
        v45 = *(_QWORD *)(v44 + 8 * v43);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v45, v41);
      ++v40;
    }
    while (v40 < *((int *)a2 + 48));
  }
  if ((*((_BYTE *)a2 + 212) & 1) != 0)
  {
    *((_DWORD *)this + 53) |= 1u;
    v48 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((_QWORD *)this + 1);
    if (!v48)
    {
      v39 = operator new();
      v48 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)v39;
      *(_QWORD *)v39 = &off_1E25BE990;
      *(_OWORD *)(v39 + 8) = 0u;
      *(_OWORD *)(v39 + 24) = 0u;
      *(_DWORD *)(v39 + 40) = 1;
      *(_DWORD *)(v39 + 68) = 0;
      *(_DWORD *)(v39 + 72) = 0;
      *(_QWORD *)(v39 + 44) = 0;
      *(_QWORD *)(v39 + 60) = 0;
      *(_QWORD *)(v39 + 52) = 0;
      *((_QWORD *)this + 1) = v39;
    }
    v49 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((_QWORD *)a2 + 1);
    if (!v49)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)v39);
      v49 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(v48, v49);
  }
}

void sub_18D0CFD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.LogEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::RayTracingTileTimestamp(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BE828;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0CFE24(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  double result;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    result = *((double *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    *((double *)this + 1) = result;
  }
  return result;
}

void sub_18D0CFEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::~RayTracingTileTimestamp(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  *(_QWORD *)this = &off_1E25BE828;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::~RayTracingTileTimestamp(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25BE828;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  uint64_t result;
  unint64_t v7;

  do
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 9)
        break;
      v7 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v7) & 1) == 0)
        return 0;
      *((_QWORD *)this + 1) = v7;
      *((_DWORD *)this + 5) |= 1u;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if ((*(_BYTE *)(this + 20) & 1) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  uint64_t v1;

  v1 = ((int)(*((_DWORD *)this + 5) << 31) >> 31) & 9;
  *((_DWORD *)this + 4) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  double result;
  int v3;
  int v4;

  if (a2 != this)
  {
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTileTimestamp");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::RayTracingTileHeader(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  *(_QWORD *)this = &off_1E25BE738;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(this, a2);
  return this;
}

void sub_18D0D0240(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::~RayTracingTileHeader(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BE738;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::~RayTracingTileHeader(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE738;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  int v9;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *v10;
  char *v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t result;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  unsigned int v27[2];

  v4 = (unsigned int *)((char *)this + 16);
  v5 = (unsigned int *)((char *)this + 20);
  v6 = (unsigned int *)((char *)this + 40);
  while (2)
  {
    v7 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v7 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v9 = TagFallback & 7;
        if (v9 != 2)
          goto LABEL_24;
        *((_DWORD *)this + 12) |= 1u;
        v10 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)*((_QWORD *)this + 1);
        if (!v10)
        {
          v10 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)operator new();
          *((_QWORD *)v10 + 1) = 0;
          *((_QWORD *)v10 + 2) = 0;
          *(_QWORD *)v10 = &off_1E25BE828;
          *((_QWORD *)this + 1) = v10;
        }
        v27[0] = 0;
        v11 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27))return 0;
        }
        else
        {
          v27[0] = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        v16 = *((_DWORD *)a2 + 14);
        v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergePartialFromCodedStream(v10, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v18 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v18, 1);
        v20 = v18 - 1;
        if (v20 < 0 == v19)
          *((_DWORD *)a2 + 14) = v20;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v21 >= v12 || *v21 != 16)
          continue;
        v13 = v21 + 1;
        *((_QWORD *)a2 + 1) = v13;
        goto LABEL_36;
      case 2u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
LABEL_36:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v22 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v13;
          v22 = v13 + 1;
          *((_QWORD *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v22 >= v12 || *v22 != 24)
          continue;
        v14 = v22 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_44:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v24 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v14;
          v24 = v14 + 1;
          *((_QWORD *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v24 >= v12 || *v24 != 32)
          continue;
        v15 = v24 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_52:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v25 = (_BYTE *)*((_QWORD *)a2 + 1);
          v12 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v15;
          v25 = v15 + 1;
          *((_QWORD *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v25 >= v12 || *v25 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_60:
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v27;
        *((_DWORD *)this + 12) |= 0x10u;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_64:
        *(_QWORD *)v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) != 0)
        {
          *((_QWORD *)this + 4) = *(_QWORD *)v27;
          *((_DWORD *)this + 12) |= 0x20u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_44;
      case 4u:
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v12 = *((_QWORD *)a2 + 2);
        goto LABEL_52;
      case 5u:
        v9 = TagFallback & 7;
        if (v9 == 1)
          goto LABEL_60;
        goto LABEL_24;
      case 6u:
        v9 = TagFallback & 7;
        if (v9 != 1)
          goto LABEL_24;
        goto LABEL_64;
      default:
        v9 = TagFallback & 7;
LABEL_24:
        if (v9 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 48);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 32), a3);
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 48) & 0x20) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 32), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  int v12;
  unsigned int v13;

  LOBYTE(v2) = *((_BYTE *)this + 48);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_29;
  }
  if ((*((_BYTE *)this + 48) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 48) & 2) == 0)
      goto LABEL_13;
    goto LABEL_9;
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ + 8);
  }
  v6 = ((int)(*(_DWORD *)(v5 + 20) << 31) >> 31) & 9;
  *(_DWORD *)(v5 + 16) = v6;
  v3 = v6 | 2;
  v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v7 >= 0x80)
    {
      v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v8 = 2;
    }
    v3 += v8;
  }
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_24;
    goto LABEL_20;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    v2 = *((_DWORD *)this + 12);
  }
  else
  {
    v10 = 2;
  }
  v3 += v10;
  if ((v2 & 8) != 0)
  {
LABEL_20:
    v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v11 >= 0x80)
    {
      v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      v2 = *((_DWORD *)this + 12);
    }
    else
    {
      v12 = 2;
    }
    v3 += v12;
  }
LABEL_24:
  v13 = v3 + 9;
  if ((v2 & 0x10) == 0)
    v13 = v3;
  if ((v2 & 0x20) != 0)
    result = v13 + 9;
  else
    result = v13;
LABEL_29:
  *((_DWORD *)this + 11) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    v3 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v3;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTileHeader");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::RayTracingTilePayloadMetaData(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  *(_QWORD *)this = &off_1E25BE990;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(_QWORD *)((char *)this + 44) = 0;
  *(_QWORD *)((char *)this + 60) = 0;
  *(_QWORD *)((char *)this + 52) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(this, a2);
  return this;
}

void sub_18D0D0B70(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BYTE v19[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  v4 = *((_DWORD *)a2 + 18);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 18) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 18) |= 2u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_25;
  }
LABEL_24:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_26;
  }
LABEL_25:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_27:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0)
    goto LABEL_27;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_28:
  v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 18) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 18) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    v4 = *((_DWORD *)a2 + 18);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 18) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 18) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      goto LABEL_18;
    goto LABEL_33;
  }
LABEL_32:
  v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 18) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0)
      goto LABEL_19;
    goto LABEL_34;
  }
LABEL_33:
  v17 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 18) |= 0x800u;
  *((_DWORD *)this + 14) = v17;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0)
      return;
    goto LABEL_20;
  }
LABEL_34:
  v18 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 18) |= 0x1000u;
  *((_DWORD *)this + 15) = v18;
  if ((*((_DWORD *)a2 + 18) & 0x2000) == 0)
    return;
LABEL_20:
  v6 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 18) |= 0x2000u;
  *((_DWORD *)this + 16) = v6;
}

void sub_18D0D0DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::~RayTracingTilePayloadMetaData(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  *(_QWORD *)this = &off_1E25BE990;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::~RayTracingTilePayloadMetaData(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE990;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_DWORD *)(v1 + 40) = 1;
  *(_DWORD *)(v1 + 68) = 0;
  *(_DWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 44) = 0;
  *(_QWORD *)(v1 + 60) = 0;
  *(_QWORD *)(v1 + 52) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 72);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
    *(_DWORD *)(this + 40) = 1;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 52) = 0;
    *(_QWORD *)(this + 44) = 0;
    *(_QWORD *)(this + 60) = 0;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  uint64_t result;
  unint64_t v15;
  _BYTE *v16;
  char *v17;
  _BYTE *v18;
  unint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned __int8 *v38;
  unint64_t *v39;
  unsigned int *v40;
  unsigned int v41;

  v39 = (unint64_t *)((char *)this + 8);
  v40 = (unsigned int *)((char *)this + 16);
  v4 = (unsigned int *)((char *)this + 40);
  v5 = (unsigned int *)((char *)this + 44);
  v6 = (unsigned int *)((char *)this + 48);
  v7 = (unsigned int *)((char *)this + 52);
  v8 = (unsigned int *)((char *)this + 56);
  v9 = (unsigned int *)((char *)this + 60);
  v10 = (unsigned int *)((char *)this + 64);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if (v13 != 1)
          goto LABEL_42;
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v39);
        if ((_DWORD)result)
        {
          *((_DWORD *)this + 18) |= 1u;
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v16 < v15 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
LABEL_16:
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v40);
          if (!(_DWORD)result)
            return result;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v40 = *v17;
          v18 = v17 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v18 < v15 && *v18 == 29)
        {
          *((_QWORD *)a2 + 1) = v18 + 1;
          goto LABEL_51;
        }
        continue;
      case 3u:
        v13 = TagFallback & 7;
        if (v13 != 5)
          goto LABEL_42;
LABEL_51:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v41;
        *((_DWORD *)this + 18) |= 4u;
        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v27 >= *((_QWORD *)a2 + 2) || *v27 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_55:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v41;
        *((_DWORD *)this + 18) |= 8u;
        v28 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v28 + 1;
LABEL_59:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0)
          return 0;
        *((_DWORD *)this + 7) = v41;
        *((_DWORD *)this + 18) |= 0x10u;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_63:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0)
          return 0;
        *((_DWORD *)this + 8) = v41;
        *((_DWORD *)this + 18) |= 0x20u;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_67:
        v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) != 0)
        {
          *((_DWORD *)this + 9) = v41;
          *((_DWORD *)this + 18) |= 0x40u;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v19 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v31 < v19 && *v31 == 64)
          {
            v20 = v31 + 1;
            *((_QWORD *)a2 + 1) = v20;
LABEL_71:
            if ((unint64_t)v20 >= v19 || *v20 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
              if (!(_DWORD)result)
                return result;
              v32 = (_BYTE *)*((_QWORD *)a2 + 1);
              v19 = *((_QWORD *)a2 + 2);
            }
            else
            {
              *v4 = *v20;
              v32 = v20 + 1;
              *((_QWORD *)a2 + 1) = v32;
            }
            *((_DWORD *)this + 18) |= 0x80u;
            if ((unint64_t)v32 < v19 && *v32 == 72)
            {
              v21 = v32 + 1;
              *((_QWORD *)a2 + 1) = v21;
LABEL_79:
              if ((unint64_t)v21 >= v19 || *v21 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
                if (!(_DWORD)result)
                  return result;
                v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                v19 = *((_QWORD *)a2 + 2);
              }
              else
              {
                *v5 = *v21;
                v33 = v21 + 1;
                *((_QWORD *)a2 + 1) = v33;
              }
              *((_DWORD *)this + 18) |= 0x100u;
              if ((unint64_t)v33 < v19 && *v33 == 80)
              {
                v22 = v33 + 1;
                *((_QWORD *)a2 + 1) = v22;
LABEL_87:
                if ((unint64_t)v22 >= v19 || *v22 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
                  if (!(_DWORD)result)
                    return result;
                  v34 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v19 = *((_QWORD *)a2 + 2);
                }
                else
                {
                  *v6 = *v22;
                  v34 = v22 + 1;
                  *((_QWORD *)a2 + 1) = v34;
                }
                *((_DWORD *)this + 18) |= 0x200u;
                if ((unint64_t)v34 < v19 && *v34 == 88)
                {
                  v23 = v34 + 1;
                  *((_QWORD *)a2 + 1) = v23;
LABEL_95:
                  if ((unint64_t)v23 >= v19 || *v23 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                    if (!(_DWORD)result)
                      return result;
                    v35 = (_BYTE *)*((_QWORD *)a2 + 1);
                    v19 = *((_QWORD *)a2 + 2);
                  }
                  else
                  {
                    *v7 = *v23;
                    v35 = v23 + 1;
                    *((_QWORD *)a2 + 1) = v35;
                  }
                  *((_DWORD *)this + 18) |= 0x400u;
                  if ((unint64_t)v35 < v19 && *v35 == 96)
                  {
                    v24 = v35 + 1;
                    *((_QWORD *)a2 + 1) = v24;
LABEL_103:
                    if ((unint64_t)v24 >= v19 || *v24 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                      if (!(_DWORD)result)
                        return result;
                      v36 = (_BYTE *)*((_QWORD *)a2 + 1);
                      v19 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      *v8 = *v24;
                      v36 = v24 + 1;
                      *((_QWORD *)a2 + 1) = v36;
                    }
                    *((_DWORD *)this + 18) |= 0x800u;
                    if ((unint64_t)v36 < v19 && *v36 == 104)
                    {
                      v25 = v36 + 1;
                      *((_QWORD *)a2 + 1) = v25;
LABEL_111:
                      if ((unint64_t)v25 >= v19 || *v25 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
                        if (!(_DWORD)result)
                          return result;
                        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
                        v19 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        *v9 = *v25;
                        v37 = v25 + 1;
                        *((_QWORD *)a2 + 1) = v37;
                      }
                      *((_DWORD *)this + 18) |= 0x1000u;
                      if ((unint64_t)v37 < v19 && *v37 == 112)
                      {
                        v26 = v37 + 1;
                        *((_QWORD *)a2 + 1) = v26;
LABEL_119:
                        if ((unint64_t)v26 >= v19 || *v26 < 0)
                        {
                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
                          if (!(_DWORD)result)
                            return result;
                          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                          v19 = *((_QWORD *)a2 + 2);
                        }
                        else
                        {
                          *v10 = *v26;
                          v38 = (unsigned __int8 *)(v26 + 1);
                          *((_QWORD *)a2 + 1) = v38;
                        }
                        *((_DWORD *)this + 18) |= 0x2000u;
                        if (v38 == (unsigned __int8 *)v19
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          result = 1;
                          *((_BYTE *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 4u:
        v13 = TagFallback & 7;
        if (v13 == 5)
          goto LABEL_55;
        goto LABEL_42;
      case 5u:
        v13 = TagFallback & 7;
        if (v13 == 5)
          goto LABEL_59;
        goto LABEL_42;
      case 6u:
        v13 = TagFallback & 7;
        if (v13 == 5)
          goto LABEL_63;
        goto LABEL_42;
      case 7u:
        v13 = TagFallback & 7;
        if (v13 == 5)
          goto LABEL_67;
        goto LABEL_42;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_71;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_79;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_87;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_95;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_103;
      case 0xDu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_111;
      case 0xEu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_42;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_119;
      default:
        v13 = TagFallback & 7;
LABEL_42:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 36), a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x2000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  int v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;

  v2 = *((_DWORD *)this + 18);
  if ((_BYTE)v2)
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v4 >= 0x80)
      {
        v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        v2 = *((_DWORD *)this + 18);
      }
      else
      {
        v5 = 2;
      }
      v3 += v5;
    }
    v7 = v3 + 5;
    if ((v2 & 4) == 0)
      v7 = v3;
    if ((v2 & 8) != 0)
      v7 += 5;
    if ((v2 & 0x10) != 0)
      v7 += 5;
    if ((v2 & 0x20) != 0)
      v7 += 5;
    if ((v2 & 0x40) != 0)
      v6 = v7 + 5;
    else
      v6 = v7;
    if ((v2 & 0x80) != 0)
    {
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
        v2 = *((_DWORD *)this + 18);
      }
      else
      {
        v9 = 2;
      }
      v6 = (v9 + v6);
    }
  }
  else
  {
    v6 = 0;
  }
  if ((v2 & 0xFF00) == 0)
    goto LABEL_56;
  if ((v2 & 0x100) != 0)
  {
    v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v10 >= 0x80)
    {
      v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v11 = 2;
    }
    v6 = (v11 + v6);
    if ((v2 & 0x200) == 0)
    {
LABEL_27:
      if ((v2 & 0x400) == 0)
        goto LABEL_28;
      goto LABEL_40;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_27;
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v13 = 2;
  }
  v6 = (v13 + v6);
  if ((v2 & 0x400) == 0)
  {
LABEL_28:
    if ((v2 & 0x800) == 0)
      goto LABEL_29;
LABEL_44:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 18);
    }
    else
    {
      v17 = 2;
    }
    v6 = (v17 + v6);
    if ((v2 & 0x1000) == 0)
    {
LABEL_30:
      if ((v2 & 0x2000) == 0)
        goto LABEL_56;
      goto LABEL_52;
    }
    goto LABEL_48;
  }
LABEL_40:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v15 = 2;
  }
  v6 = (v15 + v6);
  if ((v2 & 0x800) != 0)
    goto LABEL_44;
LABEL_29:
  if ((v2 & 0x1000) == 0)
    goto LABEL_30;
LABEL_48:
  v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v18 >= 0x80)
  {
    v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    v2 = *((_DWORD *)this + 18);
  }
  else
  {
    v19 = 2;
  }
  v6 = (v19 + v6);
  if ((v2 & 0x2000) != 0)
  {
LABEL_52:
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v20 >= 0x80)
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    else
      v21 = 2;
    v6 = (v21 + v6);
  }
LABEL_56:
  *((_DWORD *)this + 17) = v6;
  return v6;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    result = *((float *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((float *)a2 + 9) = result;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTilePayloadMetaData");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  double result;

  result = 0.0;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::PointFacetVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25BE918;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(this, a2);
  return this;
}

void sub_18D0D1B44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;

  v3 = *((_QWORD *)v1 + 2);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18D0D44E8((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v5 = *((_DWORD *)a2 + 10);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 3) = v7;
    }
  }
}

void sub_18D0D1C60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::~PointFacetVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BE918;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  v2 = *((_QWORD *)this + 2);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::~PointFacetVisibilityData(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BE918;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unsigned int *v5;
  char *v6;
  uint64_t TagFallback;
  unsigned int v8;
  int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  _BYTE *v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  char *v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;

  v4 = (_DWORD *)((char *)this + 16);
  v5 = (unsigned int *)((char *)this + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v22 = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!(_DWORD)result)
            return result;
          v13 = v22;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v13 = *v12;
          v14 = v12 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 2) = -(v13 & 1) ^ (v13 >> 1);
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v14 < v10 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_30;
        }
      }
      if (v8 != 2)
        break;
      v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v15 = (char *)*((_QWORD *)a2 + 1);
      v10 = *((_QWORD *)a2 + 2);
LABEL_30:
      if ((unint64_t)v15 >= v10 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v5 = *v15;
        v17 = v15 + 1;
        *((_QWORD *)a2 + 1) = v17;
      }
      *((_DWORD *)this + 10) |= 2u;
      if ((unint64_t)v17 < v10 && *v17 == 26)
      {
        v11 = v17 + 1;
        *((_QWORD *)a2 + 1) = v11;
LABEL_38:
        v24 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))return 0;
        }
        else
        {
          v24 = *v11;
          *((_QWORD *)a2 + 1) = v11 + 1;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
        {
          v23 = 0;
          v18 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23))return 0;
          }
          else
          {
            v23 = *v18;
            *((_QWORD *)a2 + 1) = v18 + 1;
          }
          v19 = *((_DWORD *)this + 6);
          if (v19 == *((_DWORD *)this + 7))
          {
            sub_18D0D44E8(v4, v19 + 1);
            v19 = *((_DWORD *)this + 6);
          }
          v20 = v23;
          v21 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v19 + 1;
          *(_DWORD *)(v21 + 4 * v19) = v20;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_52:
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        result = sub_18D0D205C(26, a2, v4);
        if (!(_DWORD)result)
          return result;
        goto LABEL_52;
      }
      if (v9 == 2)
      {
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_38;
      }
    }
    else
    {
      v9 = TagFallback & 7;
    }
LABEL_20:
    if (v9 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_18D0D205C(int a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a3)
{
  char *v6;
  uint64_t result;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned __int8 *v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  unsigned int v18;
  _BYTE v19[48];

  v18 = 0;
  v6 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v18 = *v6;
    *((_QWORD *)this + 1) = v6 + 1;
  }
  v8 = a3[2];
  if (v8 == a3[3])
  {
    sub_18D0D44E8(a3, v8 + 1);
    v8 = a3[2];
  }
  v9 = v18;
  v10 = *(_QWORD *)a3;
  a3[2] = v8 + 1;
  *(_DWORD *)(v10 + 4 * v8) = v9;
  v11 = a3[3] - a3[2];
  if (v11 >= 1)
  {
    v12 = v11 + 1;
    do
    {
      v13 = (unsigned __int8 *)*((_QWORD *)this + 1);
      v14 = *((_QWORD *)this + 2);
      if ((unint64_t)v13 >= v14 || *v13 != a1)
        break;
      *((_QWORD *)this + 1) = v13 + 1;
      if ((unint64_t)(v13 + 1) >= v14 || (char)v13[1] < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
        if (!(_DWORD)result)
          return result;
      }
      else
      {
        v18 = v13[1];
        *((_QWORD *)this + 1) = v13 + 2;
      }
      v15 = a3[2];
      if (v15 >= a3[3])
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
        v15 = a3[2];
      }
      v16 = v18;
      v17 = *(_QWORD *)a3;
      a3[2] = v15 + 1;
      *(_DWORD *)(v17 + 4 * v15) = v16;
      --v12;
    }
    while (v12 > 1);
  }
  return 1;
}

void sub_18D0D21E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_DWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::SerializeWithCachedSizes(_DWORD *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  _DWORD *v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[10];
  if ((v6 & 1) != 0)
  {
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[10];
  }
  if ((v6 & 2) != 0)
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  if ((int)v5[6] >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if ((int)v5[6] >= 1)
    {
      v7 = 0;
      do
      {
        this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v7;
      }
      while (v7 < (int)v5[6]);
    }
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  char v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t result;

  v2 = *((_BYTE *)this + 40);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_14;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *((_DWORD *)this + 2)) ^ (*((int *)this + 2) >> 31));
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 10) & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  else
    v6 = 2;
  v3 += v6;
LABEL_14:
  v7 = *((_DWORD *)this + 6);
  if (v7 < 1)
  {
    LODWORD(v9) = 0;
  }
  else
  {
    v8 = 0;
    LODWORD(v9) = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 2)
                                                                                             + 4 * v8);
      if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        v7 = *((_DWORD *)this + 6);
      }
      else
      {
        v11 = 1;
      }
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v11 + (_DWORD)v9);
      ++v8;
    }
    while (v8 < v7);
    if ((int)v9 > 0)
    {
      if (v9 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      else
        v12 = 2;
      v3 += v12;
    }
  }
  result = (v3 + (_DWORD)v9);
  *((_DWORD *)this + 8) = (_DWORD)v9;
  *((_DWORD *)this + 9) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  int v2;
  int v3;
  uint64_t v4;
  double result;
  uint64_t v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    result = *((double *)a2 + 3);
    *((_QWORD *)a2 + 2) = v4;
    v6 = *((_QWORD *)this + 3);
    *((double *)this + 3) = result;
    *((_QWORD *)a2 + 3) = v6;
    LODWORD(v4) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.PointFacetVisibilityData");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  double result;

  result = 0.0;
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)((char *)this + 36) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::FacetInterVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25BE8A0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(this, a2);
  return this;
}

void sub_18D0D2544(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t v3;

  v3 = *((_QWORD *)v1 + 2);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18D0D44E8((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 2) = v6;
      v5 = *((_DWORD *)a2 + 10);
    }
    if ((v5 & 2) != 0)
    {
      v7 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 3) = v7;
    }
  }
}

void sub_18D0D2660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::~FacetInterVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BE8A0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  v2 = *((_QWORD *)this + 2);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::~FacetInterVisibilityData(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BE8A0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
    *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  unsigned int *v5;
  unsigned int *v6;
  char *v7;
  uint64_t TagFallback;
  unsigned int v9;
  int v10;
  unint64_t v11;
  char *v12;
  char *v13;
  _BYTE *v14;
  char *v15;
  uint64_t result;
  _BYTE *v17;
  char *v18;
  int v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;

  v4 = (_DWORD *)((char *)this + 16);
  v5 = (unsigned int *)((char *)this + 8);
  v6 = (unsigned int *)((char *)this + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v7;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v7 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v13;
          v14 = v13 + 1;
          *((_QWORD *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          v15 = v14 + 1;
          *((_QWORD *)a2 + 1) = v15;
          goto LABEL_30;
        }
      }
      if (v9 != 2)
        break;
      v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_20;
      v15 = (char *)*((_QWORD *)a2 + 1);
      v11 = *((_QWORD *)a2 + 2);
LABEL_30:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!(_DWORD)result)
          return result;
        v17 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
      }
      else
      {
        *v6 = *v15;
        v17 = v15 + 1;
        *((_QWORD *)a2 + 1) = v17;
      }
      *((_DWORD *)this + 10) |= 2u;
      if ((unint64_t)v17 < v11 && *v17 == 26)
      {
        v12 = v17 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_38:
        v23 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23))return 0;
        }
        else
        {
          v23 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
        {
          v22 = 0;
          v18 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0;
          }
          else
          {
            v22 = *v18;
            *((_QWORD *)a2 + 1) = v18 + 1;
          }
          v19 = *((_DWORD *)this + 6);
          if (v19 == *((_DWORD *)this + 7))
          {
            sub_18D0D44E8(v4, v19 + 1);
            v19 = *((_DWORD *)this + 6);
          }
          v20 = v22;
          v21 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v19 + 1;
          *(_DWORD *)(v21 + 4 * v19) = v20;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_52:
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        result = sub_18D0D205C(26, a2, v4);
        if (!(_DWORD)result)
          return result;
        goto LABEL_52;
      }
      if (v10 == 2)
      {
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_38;
      }
    }
    else
    {
      v10 = TagFallback & 7;
    }
LABEL_20:
    if (v10 == 4)
      return 1;
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

_DWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::SerializeWithCachedSizes(_DWORD *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  _DWORD *v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = this[10];
  if ((v6 & 1) != 0)
  {
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    v6 = v5[10];
  }
  if ((v6 & 2) != 0)
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  if ((int)v5[6] >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if ((int)v5[6] >= 1)
    {
      v7 = 0;
      do
      {
        this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v7;
      }
      while (v7 < (int)v5[6]);
    }
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  char v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t result;

  v2 = *((_BYTE *)this + 40);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_14;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 10) & 2) == 0)
        goto LABEL_14;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_14;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  else
    v6 = 2;
  v3 += v6;
LABEL_14:
  v7 = *((_DWORD *)this + 6);
  if (v7 < 1)
  {
    LODWORD(v9) = 0;
  }
  else
  {
    v8 = 0;
    LODWORD(v9) = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 2)
                                                                                             + 4 * v8);
      if (v10 >= 0x80)
      {
        v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        v7 = *((_DWORD *)this + 6);
      }
      else
      {
        v11 = 1;
      }
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v11 + (_DWORD)v9);
      ++v8;
    }
    while (v8 < v7);
    if ((int)v9 > 0)
    {
      if (v9 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      else
        v12 = 2;
      v3 += v12;
    }
  }
  result = (v3 + (_DWORD)v9);
  *((_DWORD *)this + 8) = (_DWORD)v9;
  *((_DWORD *)this + 9) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  int v2;
  int v3;
  uint64_t v4;
  double result;
  uint64_t v6;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    result = *((double *)a2 + 3);
    *((_QWORD *)a2 + 2) = v4;
    v6 = *((_QWORD *)this + 3);
    *((double *)this + 3) = result;
    *((_QWORD *)a2 + 3) = v6;
    LODWORD(v4) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.FacetInterVisibilityData");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 208) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::RayTracingTilePayload(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0;
  *((_QWORD *)this + 14) = 0;
  *((_DWORD *)this + 26) = 0;
  *((_QWORD *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((_QWORD *)this + 17) = 0;
  *((_QWORD *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((_QWORD *)this + 20) = 0;
  *((_DWORD *)this + 44) = 0;
  *((_QWORD *)this + 21) = 0;
  *((_QWORD *)this + 23) = 0;
  *((_DWORD *)this + 50) = 0;
  *((_QWORD *)this + 24) = 0;
  *((_QWORD *)this + 26) = 0;
  *(_QWORD *)this = &off_1E25BE7B0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(this, a2);
  return this;
}

void sub_18D0D2E38(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v11;

  v9 = v2;
  sub_18D09ECA4(v9);
  sub_18D09ECA4(v6);
  sub_18D09ECA4(v5);
  sub_18D09ECA4(v4);
  sub_18D09ECA4(v3);
  if (*v8)
    MEMORY[0x18D78B5BC](*v8, 0x1000C8052888210);
  if (*v7)
    MEMORY[0x18D78B5BC](*v7, 0x1000C8052888210);
  v11 = *((_QWORD *)v1 + 2);
  if (v11)
    MEMORY[0x18D78B5BC](v11, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::~RayTracingTilePayload(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_1E25BE7B0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 23);
  sub_18D09ECA4((uint64_t *)this + 20);
  sub_18D09ECA4((uint64_t *)this + 17);
  sub_18D09ECA4((uint64_t *)this + 14);
  sub_18D09ECA4((uint64_t *)this + 11);
  v3 = *((_QWORD *)this + 8);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8052888210);
  v4 = *((_QWORD *)this + 5);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8052888210);
  v5 = *((_QWORD *)this + 2);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::~RayTracingTilePayload(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 208) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 64) = 0;
  *(_QWORD *)(result + 72) = 0;
  *(_QWORD *)(result + 88) = 0;
  *(_QWORD *)(result + 96) = 0;
  *(_DWORD *)(result + 104) = 0;
  *(_QWORD *)(result + 112) = 0;
  *(_QWORD *)(result + 120) = 0;
  *(_DWORD *)(result + 128) = 0;
  *(_QWORD *)(result + 136) = 0;
  *(_QWORD *)(result + 144) = 0;
  *(_DWORD *)(result + 152) = 0;
  *(_DWORD *)(result + 176) = 0;
  *(_QWORD *)(result + 160) = 0;
  *(_QWORD *)(result + 168) = 0;
  *(_DWORD *)(result + 200) = 0;
  *(_QWORD *)(result + 184) = 0;
  *(_QWORD *)(result + 192) = 0;
  *(_QWORD *)(result + 208) = 0;
  *(_QWORD *)result = &off_1E25BE7B0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  _DWORD *v5;
  _DWORD *v6;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v7;
  char *v8;
  uint64_t TagFallback;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t result;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  char *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  int v32;
  unsigned int v33;
  uint64_t v34;
  _BYTE *v35;
  char *v36;
  int v37;
  unsigned int v38;
  uint64_t v39;
  _BYTE *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int v48;
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  int v96;
  int v97;
  int v98;
  int v99;
  _BYTE *v100;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v101;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v102;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v103;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v104;
  unsigned int v105[2];
  unsigned int v106;

  v4 = (_DWORD *)((char *)this + 64);
  v5 = (_DWORD *)((char *)this + 40);
  v6 = (_DWORD *)((char *)this + 16);
  v103 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 112);
  v104 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 88);
  v101 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 160);
  v102 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 136);
  v7 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 184);
LABEL_2:
  while (2)
  {
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v8 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_33;
        *((_DWORD *)this + 53) |= 1u;
        v11 = *((_QWORD *)this + 1);
        if (!v11)
        {
          v11 = operator new();
          *(_QWORD *)v11 = &off_1E25BE990;
          *(_OWORD *)(v11 + 8) = 0u;
          *(_OWORD *)(v11 + 24) = 0u;
          *(_DWORD *)(v11 + 40) = 1;
          *(_DWORD *)(v11 + 68) = 0;
          *(_DWORD *)(v11 + 72) = 0;
          *(_QWORD *)(v11 + 44) = 0;
          *(_QWORD *)(v11 + 60) = 0;
          *(_QWORD *)(v11 + 52) = 0;
          *((_QWORD *)this + 1) = v11;
        }
        v105[0] = 0;
        v12 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
        }
        else
        {
          v105[0] = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)v11, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v25 = (_BYTE *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v25 >= v14 || *v25 != 18)
          continue;
        v13 = v25 + 1;
        *((_QWORD *)a2 + 1) = v13;
        goto LABEL_51;
      case 2u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          result = sub_18D09DE18(1, 0x12u, a2, v6);
          if (!(_DWORD)result)
            return result;
LABEL_65:
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v16 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v30 < v16 && *v30 == 26)
          {
            v15 = v30 + 1;
            *((_QWORD *)a2 + 1) = v15;
LABEL_68:
            v105[0] = 0;
            if ((unint64_t)v15 >= v16 || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
            }
            else
            {
              v105[0] = *v15;
              *((_QWORD *)a2 + 1) = v15 + 1;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
            {
              v106 = 0;
              v31 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v106))return 0;
              }
              else
              {
                v106 = *v31;
                *((_QWORD *)a2 + 1) = v31 + 1;
              }
              v32 = *((_DWORD *)this + 12);
              if (v32 == *((_DWORD *)this + 13))
              {
                sub_18D0D44E8(v5, v32 + 1);
                v32 = *((_DWORD *)this + 12);
              }
              v33 = v106;
              v34 = *((_QWORD *)this + 5);
              *((_DWORD *)this + 12) = v32 + 1;
              *(_DWORD *)(v34 + 4 * v32) = v33;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            goto LABEL_82;
          }
          continue;
        }
        if (v10 == 2)
        {
          v13 = (char *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
LABEL_51:
          v106 = 0;
          if ((unint64_t)v13 >= v14 || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v106))return 0;
          }
          else
          {
            v106 = *v13;
            *((_QWORD *)a2 + 1) = v13 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            *(_QWORD *)v105 = 0;
            v26 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v105))return 0;
            }
            else
            {
              *(_QWORD *)v105 = *v26;
              *((_QWORD *)a2 + 1) = v26 + 1;
            }
            v27 = *((_DWORD *)this + 6);
            if (v27 == *((_DWORD *)this + 7))
            {
              sub_18D09EC0C(v6, v27 + 1);
              v27 = *((_DWORD *)this + 6);
            }
            v28 = *(_QWORD *)v105;
            v29 = *((_QWORD *)this + 2);
            *((_DWORD *)this + 6) = v27 + 1;
            *(_QWORD *)(v29 + 8 * v27) = v28;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          goto LABEL_65;
        }
LABEL_33:
        if (v10 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        return 1;
      case 3u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v10 == 2)
          {
            v15 = (char *)*((_QWORD *)a2 + 1);
            v16 = *((_QWORD *)a2 + 2);
            goto LABEL_68;
          }
          goto LABEL_33;
        }
        result = sub_18D0D205C(26, a2, v5);
        if (!(_DWORD)result)
          return result;
LABEL_82:
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v35 < v18 && *v35 == 34)
        {
          v17 = v35 + 1;
          *((_QWORD *)a2 + 1) = v17;
LABEL_85:
          v105[0] = 0;
          if ((unint64_t)v17 >= v18 || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
          }
          else
          {
            v105[0] = *v17;
            *((_QWORD *)a2 + 1) = v17 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            v106 = 0;
            v36 = (char *)*((_QWORD *)a2 + 1);
            if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v106))return 0;
            }
            else
            {
              v106 = *v36;
              *((_QWORD *)a2 + 1) = v36 + 1;
            }
            v37 = *((_DWORD *)this + 18);
            if (v37 == *((_DWORD *)this + 19))
            {
              sub_18D0D44E8(v4, v37 + 1);
              v37 = *((_DWORD *)this + 18);
            }
            v38 = v106;
            v39 = *((_QWORD *)this + 8);
            *((_DWORD *)this + 18) = v37 + 1;
            *(_DWORD *)(v39 + 4 * v37) = v38;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_99:
          v40 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v40 < *((_QWORD *)a2 + 2) && *v40 == 42)
          {
            do
            {
              *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_102:
              v41 = *((_DWORD *)this + 25);
              v42 = *((int *)this + 24);
              if ((int)v42 >= v41)
              {
                if (v41 == *((_DWORD *)this + 26))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v104);
                  v41 = *((_DWORD *)this + 25);
                }
                *((_DWORD *)this + 25) = v41 + 1;
                v44 = operator new();
                *(_DWORD *)(v44 + 36) = 0;
                *(_DWORD *)(v44 + 40) = 0;
                *(_QWORD *)v44 = &off_1E25BE8A0;
                *(_QWORD *)(v44 + 8) = 0;
                *(_QWORD *)(v44 + 16) = 0;
                *(_QWORD *)(v44 + 24) = 0;
                v45 = *((_QWORD *)this + 11);
                v46 = *((int *)this + 24);
                *((_DWORD *)this + 24) = v46 + 1;
                *(_QWORD *)(v45 + 8 * v46) = v44;
              }
              else
              {
                v43 = *((_QWORD *)this + 11);
                *((_DWORD *)this + 24) = v42 + 1;
                v44 = *(_QWORD *)(v43 + 8 * v42);
              }
              v105[0] = 0;
              v47 = (char *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v47 >= *((_QWORD *)a2 + 2) || *v47 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
              }
              else
              {
                v105[0] = *v47;
                *((_QWORD *)a2 + 1) = v47 + 1;
              }
              v48 = *((_DWORD *)a2 + 14);
              v49 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v48 + 1;
              if (v48 >= v49)
                return 0;
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *)v44, a2)|| !*((_BYTE *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              v50 = *((_DWORD *)a2 + 14);
              v23 = __OFSUB__(v50, 1);
              v51 = v50 - 1;
              if (v51 < 0 == v23)
                *((_DWORD *)a2 + 14) = v51;
              v40 = (_BYTE *)*((_QWORD *)a2 + 1);
              if ((unint64_t)v40 >= *((_QWORD *)a2 + 2))
                goto LABEL_2;
              v52 = *v40;
            }
            while (v52 == 42);
            if (v52 == 50)
            {
              do
              {
                *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_120:
                v53 = *((_DWORD *)this + 31);
                v54 = *((int *)this + 30);
                if ((int)v54 >= v53)
                {
                  if (v53 == *((_DWORD *)this + 32))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v103);
                    v53 = *((_DWORD *)this + 31);
                  }
                  *((_DWORD *)this + 31) = v53 + 1;
                  v56 = operator new();
                  *(_DWORD *)(v56 + 36) = 0;
                  *(_DWORD *)(v56 + 40) = 0;
                  *(_QWORD *)v56 = &off_1E25BE918;
                  *(_QWORD *)(v56 + 8) = 0;
                  *(_QWORD *)(v56 + 16) = 0;
                  *(_QWORD *)(v56 + 24) = 0;
                  v57 = *((_QWORD *)this + 14);
                  v58 = *((int *)this + 30);
                  *((_DWORD *)this + 30) = v58 + 1;
                  *(_QWORD *)(v57 + 8 * v58) = v56;
                }
                else
                {
                  v55 = *((_QWORD *)this + 14);
                  *((_DWORD *)this + 30) = v54 + 1;
                  v56 = *(_QWORD *)(v55 + 8 * v54);
                }
                v105[0] = 0;
                v59 = (char *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v59 >= *((_QWORD *)a2 + 2) || *v59 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
                }
                else
                {
                  v105[0] = *v59;
                  *((_QWORD *)a2 + 1) = v59 + 1;
                }
                v60 = *((_DWORD *)a2 + 14);
                v61 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v60 + 1;
                if (v60 >= v61)
                  return 0;
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v56, a2)|| !*((_BYTE *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                v62 = *((_DWORD *)a2 + 14);
                v23 = __OFSUB__(v62, 1);
                v63 = v62 - 1;
                if (v63 < 0 == v23)
                  *((_DWORD *)a2 + 14) = v63;
                v40 = (_BYTE *)*((_QWORD *)a2 + 1);
                if ((unint64_t)v40 >= *((_QWORD *)a2 + 2))
                  goto LABEL_2;
                v64 = *v40;
              }
              while (v64 == 50);
              if (v64 == 58)
              {
                do
                {
                  *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_138:
                  v65 = *((_DWORD *)this + 37);
                  v66 = *((int *)this + 36);
                  if ((int)v66 >= v65)
                  {
                    if (v65 == *((_DWORD *)this + 38))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v102);
                      v65 = *((_DWORD *)this + 37);
                    }
                    *((_DWORD *)this + 37) = v65 + 1;
                    v68 = operator new();
                    *(_DWORD *)(v68 + 36) = 0;
                    *(_DWORD *)(v68 + 40) = 0;
                    *(_QWORD *)v68 = &off_1E25BE918;
                    *(_QWORD *)(v68 + 8) = 0;
                    *(_QWORD *)(v68 + 16) = 0;
                    *(_QWORD *)(v68 + 24) = 0;
                    v69 = *((_QWORD *)this + 17);
                    v70 = *((int *)this + 36);
                    *((_DWORD *)this + 36) = v70 + 1;
                    *(_QWORD *)(v69 + 8 * v70) = v68;
                  }
                  else
                  {
                    v67 = *((_QWORD *)this + 17);
                    *((_DWORD *)this + 36) = v66 + 1;
                    v68 = *(_QWORD *)(v67 + 8 * v66);
                  }
                  v105[0] = 0;
                  v71 = (char *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v71 >= *((_QWORD *)a2 + 2) || *v71 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
                  }
                  else
                  {
                    v105[0] = *v71;
                    *((_QWORD *)a2 + 1) = v71 + 1;
                  }
                  v72 = *((_DWORD *)a2 + 14);
                  v73 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v72 + 1;
                  if (v72 >= v73)
                    return 0;
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v68, a2)|| !*((_BYTE *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  v74 = *((_DWORD *)a2 + 14);
                  v23 = __OFSUB__(v74, 1);
                  v75 = v74 - 1;
                  if (v75 < 0 == v23)
                    *((_DWORD *)a2 + 14) = v75;
                  v40 = (_BYTE *)*((_QWORD *)a2 + 1);
                  if ((unint64_t)v40 >= *((_QWORD *)a2 + 2))
                    goto LABEL_2;
                  v76 = *v40;
                }
                while (v76 == 58);
                if (v76 == 66)
                {
                  do
                  {
                    *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_156:
                    v77 = *((_DWORD *)this + 43);
                    v78 = *((int *)this + 42);
                    if ((int)v78 >= v77)
                    {
                      if (v77 == *((_DWORD *)this + 44))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v101);
                        v77 = *((_DWORD *)this + 43);
                      }
                      *((_DWORD *)this + 43) = v77 + 1;
                      v80 = operator new();
                      *(_DWORD *)(v80 + 36) = 0;
                      *(_DWORD *)(v80 + 40) = 0;
                      *(_QWORD *)v80 = &off_1E25BE918;
                      *(_QWORD *)(v80 + 8) = 0;
                      *(_QWORD *)(v80 + 16) = 0;
                      *(_QWORD *)(v80 + 24) = 0;
                      v81 = *((_QWORD *)this + 20);
                      v82 = *((int *)this + 42);
                      *((_DWORD *)this + 42) = v82 + 1;
                      *(_QWORD *)(v81 + 8 * v82) = v80;
                    }
                    else
                    {
                      v79 = *((_QWORD *)this + 20);
                      *((_DWORD *)this + 42) = v78 + 1;
                      v80 = *(_QWORD *)(v79 + 8 * v78);
                    }
                    v105[0] = 0;
                    v83 = (char *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v83 >= *((_QWORD *)a2 + 2) || *v83 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
                    }
                    else
                    {
                      v105[0] = *v83;
                      *((_QWORD *)a2 + 1) = v83 + 1;
                    }
                    v84 = *((_DWORD *)a2 + 14);
                    v85 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v84 + 1;
                    if (v84 >= v85)
                      return 0;
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v80, a2)|| !*((_BYTE *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    v86 = *((_DWORD *)a2 + 14);
                    v23 = __OFSUB__(v86, 1);
                    v87 = v86 - 1;
                    if (v87 < 0 == v23)
                      *((_DWORD *)a2 + 14) = v87;
                    v40 = (_BYTE *)*((_QWORD *)a2 + 1);
                    if ((unint64_t)v40 >= *((_QWORD *)a2 + 2))
                      goto LABEL_2;
                    v88 = *v40;
                  }
                  while (v88 == 66);
                  if (v88 == 74)
                  {
                    do
                    {
                      *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_174:
                      v89 = *((_DWORD *)this + 49);
                      v90 = *((int *)this + 48);
                      if ((int)v90 >= v89)
                      {
                        if (v89 == *((_DWORD *)this + 50))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                          v89 = *((_DWORD *)this + 49);
                        }
                        *((_DWORD *)this + 49) = v89 + 1;
                        v92 = operator new();
                        *(_DWORD *)(v92 + 36) = 0;
                        *(_DWORD *)(v92 + 40) = 0;
                        *(_QWORD *)v92 = &off_1E25BE918;
                        *(_QWORD *)(v92 + 8) = 0;
                        *(_QWORD *)(v92 + 16) = 0;
                        *(_QWORD *)(v92 + 24) = 0;
                        v93 = *((_QWORD *)this + 23);
                        v94 = *((int *)this + 48);
                        *((_DWORD *)this + 48) = v94 + 1;
                        *(_QWORD *)(v93 + 8 * v94) = v92;
                      }
                      else
                      {
                        v91 = *((_QWORD *)this + 23);
                        *((_DWORD *)this + 48) = v90 + 1;
                        v92 = *(_QWORD *)(v91 + 8 * v90);
                      }
                      v105[0] = 0;
                      v95 = (char *)*((_QWORD *)a2 + 1);
                      if ((unint64_t)v95 >= *((_QWORD *)a2 + 2) || *v95 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v105))return 0;
                      }
                      else
                      {
                        v105[0] = *v95;
                        *((_QWORD *)a2 + 1) = v95 + 1;
                      }
                      v96 = *((_DWORD *)a2 + 14);
                      v97 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v96 + 1;
                      if (v96 >= v97)
                        return 0;
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *)v92, a2)|| !*((_BYTE *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      v98 = *((_DWORD *)a2 + 14);
                      v23 = __OFSUB__(v98, 1);
                      v99 = v98 - 1;
                      if (v99 < 0 == v23)
                        *((_DWORD *)a2 + 14) = v99;
                      v40 = (_BYTE *)*((_QWORD *)a2 + 1);
                      v100 = (_BYTE *)*((_QWORD *)a2 + 2);
                    }
                    while (v40 < v100 && *v40 == 74);
                    if (v40 == v100 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      result = 1;
                      *((_BYTE *)a2 + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
        }
        continue;
      case 4u:
        v10 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          result = sub_18D0D205C(34, a2, v4);
          if (!(_DWORD)result)
            return result;
          goto LABEL_99;
        }
        if (v10 != 2)
          goto LABEL_33;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 5u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_102;
        goto LABEL_33;
      case 6u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_120;
        goto LABEL_33;
      case 7u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_138;
        goto LABEL_33;
      case 8u:
        v10 = TagFallback & 7;
        if (v10 == 2)
          goto LABEL_156;
        goto LABEL_33;
      case 9u:
        v10 = TagFallback & 7;
        if (v10 != 2)
          goto LABEL_33;
        goto LABEL_174;
      default:
        v10 = TagFallback & 7;
        goto LABEL_33;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = this;
  if ((*(_BYTE *)(this + 212) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 24) >= 1)
    {
      v7 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a2);
        ++v7;
      }
      while (v7 < *(int *)(v5 + 24));
    }
  }
  if (*(int *)(v5 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 48) >= 1)
    {
      v8 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v8;
      }
      while (v8 < *(int *)(v5 + 48));
    }
  }
  if (*(int *)(v5 + 72) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 72) >= 1)
    {
      v9 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v9;
      }
      while (v9 < *(int *)(v5 + 72));
    }
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_QWORD *)(*(_QWORD *)(v5 + 88) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(*(_QWORD *)(v5 + 112) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_QWORD *)(*(_QWORD *)(v5 + 136) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(*(_QWORD *)(v5 + 160) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 168));
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_QWORD *)(*(_QWORD *)(v5 + 184) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 192));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  int v2;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  uint64_t v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  int v53;

  if ((*((_BYTE *)this + 212) & 1) != 0)
  {
    v3 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(0);
      v3 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_
                                                                                                + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    v2 = v5 + v6 + 1;
  }
  else
  {
    v2 = 0;
  }
  if (*((int *)this + 6) < 1)
  {
    LODWORD(v8) = 0;
  }
  else
  {
    v7 = 0;
    LODWORD(v8) = 0;
    do
      v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((_QWORD *)this + 2) + 8 * v7++))
                                                                           + v8);
    while (v7 < *((int *)this + 6));
    if ((int)v8 > 0)
    {
      if (v8 >= 0x80)
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      else
        v9 = 1;
      v2 += v9 + 1;
    }
  }
  *((_DWORD *)this + 8) = (_DWORD)v8;
  v10 = v2 + (_DWORD)v8;
  v11 = *((_DWORD *)this + 12);
  if (v11 < 1)
  {
    LODWORD(v13) = 0;
  }
  else
  {
    v12 = 0;
    LODWORD(v13) = 0;
    do
    {
      v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 5)
                                                                                             + 4 * v12);
      if (v14 >= 0x80)
      {
        v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
        v11 = *((_DWORD *)this + 12);
      }
      else
      {
        v15 = 1;
      }
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v15 + (_DWORD)v13);
      ++v12;
    }
    while (v12 < v11);
    if ((int)v13 > 0)
    {
      if (v13 >= 0x80)
        v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      else
        v16 = 1;
      v10 += v16 + 1;
    }
  }
  *((_DWORD *)this + 14) = (_DWORD)v13;
  v17 = v10 + (_DWORD)v13;
  v18 = *((_DWORD *)this + 18);
  if (v18 < 1)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    v19 = 0;
    LODWORD(v20) = 0;
    do
    {
      v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 8)
                                                                                             + 4 * v19);
      if (v21 >= 0x80)
      {
        v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
        v18 = *((_DWORD *)this + 18);
      }
      else
      {
        v22 = 1;
      }
      v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v22 + (_DWORD)v20);
      ++v19;
    }
    while (v19 < v18);
    if ((int)v20 > 0)
    {
      if (v20 >= 0x80)
        v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      else
        v23 = 2;
      v17 += v23;
    }
  }
  *((_DWORD *)this + 20) = (_DWORD)v20;
  v24 = *((_DWORD *)this + 24);
  v25 = v17 + (_DWORD)v20 + v24;
  if (v24 >= 1)
  {
    v26 = 0;
    do
    {
      v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData **)(*((_QWORD *)this + 11) + 8 * v26));
      v28 = (int)v27;
      if (v27 >= 0x80)
        v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
      else
        v29 = 1;
      v25 += v28 + v29;
      ++v26;
    }
    while (v26 < *((int *)this + 24));
  }
  v30 = *((_DWORD *)this + 30);
  v31 = v30 + v25;
  if (v30 >= 1)
  {
    v32 = 0;
    do
    {
      v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)this + 14) + 8 * v32));
      v34 = (int)v33;
      if (v33 >= 0x80)
        v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      else
        v35 = 1;
      v31 += v34 + v35;
      ++v32;
    }
    while (v32 < *((int *)this + 30));
  }
  v36 = *((_DWORD *)this + 36);
  v37 = v36 + v31;
  if (v36 >= 1)
  {
    v38 = 0;
    do
    {
      v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)this + 17) + 8 * v38));
      v40 = (int)v39;
      if (v39 >= 0x80)
        v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
      else
        v41 = 1;
      v37 += v40 + v41;
      ++v38;
    }
    while (v38 < *((int *)this + 36));
  }
  v42 = *((_DWORD *)this + 42);
  v43 = v42 + v37;
  if (v42 >= 1)
  {
    v44 = 0;
    do
    {
      v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)this + 20) + 8 * v44));
      v46 = (int)v45;
      if (v45 >= 0x80)
        v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
      else
        v47 = 1;
      v43 += v46 + v47;
      ++v44;
    }
    while (v44 < *((int *)this + 42));
  }
  v48 = *((_DWORD *)this + 48);
  v49 = (v48 + v43);
  if (v48 >= 1)
  {
    v50 = 0;
    do
    {
      v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((_QWORD *)this + 23) + 8 * v50));
      v52 = (int)v51;
      if (v51 >= 0x80)
        v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
      else
        v53 = 1;
      v49 = (v52 + v49 + v53);
      ++v50;
    }
    while (v50 < *((int *)this + 48));
  }
  *((_DWORD *)this + 52) = v49;
  return v49;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    v6 = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 2) = v5;
    v7 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = v6;
    *((_QWORD *)a2 + 3) = v7;
    v8 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    v9 = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 5) = v8;
    v10 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = v9;
    *((_QWORD *)a2 + 6) = v10;
    v11 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    v12 = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 8) = v11;
    v13 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v12;
    *((_QWORD *)a2 + 9) = v13;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v14 = *((_DWORD *)v3 + 53);
    *((_DWORD *)v3 + 53) = *((_DWORD *)a2 + 53);
    *((_DWORD *)a2 + 53) = v14;
    v15 = *((_DWORD *)v3 + 52);
    *((_DWORD *)v3 + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v15;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTilePayload");
}

uint64_t sub_18D0D44B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0D44B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D0D44C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18D0D44C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_18D0D44D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D0D44D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18D0D44E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 208);
}

_DWORD *sub_18D0D44E8(_DWORD *result, int a2)
{
  int v2;
  _DWORD *v3;
  const void *v4;
  int v5;

  v2 = result[3];
  if (v2 < a2)
  {
    v3 = result;
    v4 = *(const void **)result;
    v5 = 2 * v2;
    if (v5 <= a2)
      v5 = a2;
    if (v5 <= 4)
      v5 = 4;
    result[3] = v5;
    result = (_DWORD *)operator new[]();
    *(_QWORD *)v3 = result;
    if (v4)
    {
      memcpy(result, v4, 4 * (int)v3[2]);
      JUMPOUT(0x18D78B5BCLL);
    }
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::protobuf_ShutdownFile_CoreNavigationCLPVisionEvent_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_);
  result = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto_impl(CoreNavigation::CLP::LogEntry::Vision *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPVisionEvent.pb.cc", a4);
  v4 = operator new();
  *(_QWORD *)v4 = &off_1E25C0A60;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_ = v4;
  v5 = (_QWORD *)operator new();
  *v5 = &off_1E25C0268;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_ = (uint64_t)v5;
  v6 = (_QWORD *)operator new();
  *v6 = &off_1E25C0358;
  v6[1] = 0;
  v6[2] = 0;
  v6[3] = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_ = (uint64_t)v6;
  v7 = operator new();
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)v7 = &off_1E25C0448;
  *(_DWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)v8 = &off_1E25C04C0;
  *(_DWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_ = v8;
  v9 = (_QWORD *)operator new();
  *v9 = &off_1E25C0970;
  v9[1] = 0;
  v9[2] = 0;
  v9[3] = 0;
  CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_ = (uint64_t)v9;
  v10 = operator new();
  *(_QWORD *)v10 = &off_1E25C06A0;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 52) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_ = v10;
  v11 = operator new();
  *(_QWORD *)v11 = &off_1E25C0880;
  *(_OWORD *)(v11 + 8) = 0u;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 52) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_ = v11;
  v12 = operator new();
  *(_QWORD *)(v12 + 80) = 0xFFFFFFFFLL;
  *(_QWORD *)v12 = &off_1E25C03D0;
  *(_QWORD *)(v12 + 8) = 0;
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  v13 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v12 + 32) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v12 + 40) = 0;
  *(_DWORD *)(v12 + 88) = 0;
  *(_QWORD *)(v12 + 48) = v13;
  *(_QWORD *)(v12 + 56) = 0;
  *(_QWORD *)(v12 + 64) = 0;
  *(_QWORD *)(v12 + 72) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ = v12;
  v14 = (_QWORD *)operator new();
  *v14 = &off_1E25C0790;
  v14[1] = 0;
  v14[2] = 0;
  v14[3] = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_ = (uint64_t)v14;
  v15 = operator new();
  *(_QWORD *)v15 = &off_1E25C01F0;
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ = v15;
  v16 = operator new();
  *(_QWORD *)v16 = &off_1E25C0088;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_QWORD *)(v16 + 64) = 0xFFFFFFFFLL;
  *(_DWORD *)(v16 + 72) = 0;
  *(_QWORD *)(v16 + 48) = 0;
  *(_QWORD *)(v16 + 56) = 0;
  *(_QWORD *)(v16 + 40) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ = v16;
  v17 = operator new();
  *(_QWORD *)(v17 + 40) = 0;
  *(_QWORD *)v17 = &off_1E25C0538;
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_DWORD *)(v17 + 32) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_ = v17;
  v18 = (_QWORD *)operator new();
  v18[1] = 0;
  v18[2] = 0;
  *v18 = &off_1E25C05B0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_ = (uint64_t)v18;
  v19 = operator new();
  *(_QWORD *)(v19 + 8) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)v19 = &off_1E25C0628;
  *(_DWORD *)(v19 + 24) = 0;
  *(_OWORD *)(v19 + 32) = xmmword_18D30ECE0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_ = v19;
  v20 = (_QWORD *)operator new();
  *v20 = &off_1E25C0100;
  v20[1] = 0;
  v20[2] = 0;
  v20[3] = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ = (uint64_t)v20;
  v21 = (_QWORD *)operator new();
  *v21 = &off_1E25C0178;
  v21[1] = 0;
  v21[2] = 0;
  v21[3] = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_ = (uint64_t)v21;
  v22 = operator new();
  *(_QWORD *)(v22 + 8) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)v22 = &off_1E25C02E0;
  *(_DWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 32) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_ = v22;
  v23 = operator new();
  *(_QWORD *)v23 = &off_1E25C08F8;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  *(_OWORD *)(v23 + 72) = 0u;
  *(_OWORD *)(v23 + 88) = 0u;
  *(_OWORD *)(v23 + 120) = 0u;
  *(_OWORD *)(v23 + 136) = 0u;
  *(_OWORD *)(v23 + 152) = 0u;
  *(_OWORD *)(v23 + 176) = 0u;
  *(_OWORD *)(v23 + 192) = 0u;
  *(_OWORD *)(v23 + 208) = 0u;
  *(_OWORD *)(v23 + 224) = 0u;
  *(_OWORD *)(v23 + 240) = 0u;
  *(_OWORD *)(v23 + 256) = 0u;
  *(_QWORD *)(v23 + 272) = 0;
  *(_QWORD *)(v23 + 104) = 0;
  *(_QWORD *)(v23 + 112) = v13;
  *(_QWORD *)(v23 + 168) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_ = v23;
  v24 = (_QWORD *)operator new();
  *v24 = &off_1E25C0808;
  v24[1] = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_ = (uint64_t)v24;
  v25 = operator new();
  *(_QWORD *)(v25 + 48) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ = v25;
  *(_DWORD *)(v25 + 56) = 0;
  v26 = (_QWORD *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_;
  v27 = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  v26[2] = v27;
  v26[3] = CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_;
  v26[5] = CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_;
  v28 = CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
  v26[7] = CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
  v26[8] = v28;
  v26[9] = CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_;
  v29 = CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_;
  *(_QWORD *)(v29 + 24) = v27;
  v30 = (_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_;
  v31 = CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 8) = v27;
  v30[2] = v31;
  v32 = CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
  v30[3] = v31;
  v30[4] = v32;
  v33 = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_;
  v30[6] = v29;
  v30[7] = v33;
  *(_QWORD *)(v33 + 8) = CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_;
  v34 = CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ + 8) = v32;
  *(_QWORD *)v25 = &off_1E25C0718;
  *(_QWORD *)(v25 + 8) = v27;
  *(_QWORD *)(v25 + 16) = v34;
  *(_QWORD *)(v25 + 24) = v31;
  v35 = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_;
  *(_QWORD *)(v25 + 32) = CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_;
  *(_QWORD *)(v25 + 40) = v35;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::Vision::protobuf_ShutdownFile_CoreNavigationCLPVisionEvent_2eproto, v36);
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25C0A60;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25C0A60;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::simd_floatM(_QWORD *this)
{
  *this = &off_1E25C0268;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25C0268;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::simd_doubleM(_QWORD *this)
{
  *this = &off_1E25C0358;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25C0358;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::simd_floatMxN(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25C0448;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25C0448;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::simd_doubleMxN(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25C04C0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25C04C0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::CGSize::CGSize(_QWORD *this)
{
  *this = &off_1E25C0970;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25C0970;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::VIOInertialStateInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25C06A0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25C06A0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::VIOInertialCovarianceInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25C0880;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25C0880;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::VIOEstimation(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  double result;
  uint64_t v2;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 10) = 0xFFFFFFFFLL;
  *(_QWORD *)this = &off_1E25C03D0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 4) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 6) = v2;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 10) = 0xFFFFFFFFLL;
  *(_QWORD *)this = &off_1E25C03D0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 4) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 6) = v2;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::LSLLocationCoordinate(_QWORD *this)
{
  *this = &off_1E25C0790;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25C0790;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::LSLLocation(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  double result;

  *(_QWORD *)this = &off_1E25C01F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25C01F0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::LSLHeading(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  double result;

  *(_QWORD *)this = &off_1E25C0088;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25C0088;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::LSLMapRoadSegment(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25C0538;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25C0538;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::LSLHeadingSupplInfo(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25C05B0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25C05B0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::LSLHeadingEstimation(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25C0628;
  *((_DWORD *)this + 6) = 0;
  *(_QWORD *)&result = 0x8FFFFFFFFLL;
  *((_OWORD *)this + 2) = xmmword_18D30ECE0;
  return result;
}

{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25C0628;
  *((_DWORD *)this + 6) = 0;
  *(_QWORD *)&result = 0x8FFFFFFFFLL;
  *((_OWORD *)this + 2) = xmmword_18D30ECE0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocation::VLLocation(_QWORD *this)
{
  *this = &off_1E25C0100;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25C0100;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::VLVectorfM(_QWORD *this)
{
  *this = &off_1E25C0178;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25C0178;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::VLMatrixfMxN(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25C02E0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25C02E0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::VLLocalizationMaps488Details(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  double result;
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C08F8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 34) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = v2;
  *((_QWORD *)this + 21) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C08F8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 34) = 0;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = v2;
  *((_QWORD *)this + 21) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::VLLocalizationDebugInfo(_QWORD *this)
{
  *this = &off_1E25C0808;
  this[1] = 0;
  return this;
}

{
  *this = &off_1E25C0808;
  this[1] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::VLLocalizationResult(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  double result;

  *(_QWORD *)this = &off_1E25C0718;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25C0718;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_;
  v2 = CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
  this[8] = v2;
  this[9] = CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_;
  *(_QWORD *)(this + 24) = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLHeading::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
  this[3] = v1;
  this[4] = v2;
  v3 = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_;
  this[6] = CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_;
  this[7] = v3;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
  this[4] = v2;
  this[5] = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0D5180(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::Vision::ARSessionState_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return ((_DWORD)this + 1) < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::VIOTrackingState_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return ((_DWORD)this + 1) < 6;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::LSLStatus_DEPRECATED_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return ((_DWORD)this + 1) < 6;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::LSLHeadingStatus_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return this < 9;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::LSLGlobalReferenceFrame_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return ((_DWORD)this + 1) < 4;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::TimeStamp *CoreNavigation::CLP::LogEntry::Vision::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  *(_QWORD *)this = &off_1E25C0A60;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0D5248(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0D532C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  *(_QWORD *)this = &off_1E25C0A60;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp::~TimeStamp(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::New(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C0A60;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::TimeStamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.TimeStamp");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_floatM *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::simd_floatM(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  *(_QWORD *)this = &off_1E25C0268;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(this, a2);
  return this;
}

void sub_18D0D580C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  if (*v3)
    MEMORY[0x18D78B5BC](*v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  int v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    sub_18D0D44E8((_DWORD *)this + 2, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((_QWORD *)this + 1) + 4 * *((int *)this + 4)), *((const void **)a2 + 1), 4 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
}

void sub_18D0D58F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::~simd_floatM(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C0268;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  v2 = *((_QWORD *)this + 1);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::~simd_floatM(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::New(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0268;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t result;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  signed int v15;
  int v16;
  int v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21[12];

  v4 = (_DWORD *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8)
        break;
      if (v7 != 2)
      {
        if (v7 != 5)
          break;
        goto LABEL_15;
      }
      result = sub_18D0D5C68(a2, v4);
      if (!(_DWORD)result)
        return result;
      while (1)
      {
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v19 >= v20 || *v19 != 13)
          break;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_15:
        v21[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v21) & 1) == 0)
          return 0;
        v9 = v21[0];
        v10 = *((_DWORD *)this + 4);
        if (v10 == *((_DWORD *)this + 5))
        {
          sub_18D0D44E8(v4, v10 + 1);
          v10 = *((_DWORD *)this + 4);
        }
        v11 = *((_QWORD *)this + 1);
        v12 = v10 + 1;
        *((_DWORD *)this + 4) = v10 + 1;
        *(_DWORD *)(v11 + 4 * v10) = v9;
        v13 = *((_QWORD *)a2 + 1);
        v14 = *((_DWORD *)a2 + 4) - v13;
        if (v14 >= 1)
        {
          v15 = v14 / 5u;
          v16 = v15 >= *((_DWORD *)this + 5) - v12 ? *((_DWORD *)this + 5) - v12 : v15;
          if (v16 >= 1)
          {
            v17 = 0;
            while (*(_BYTE *)v13 == 13)
            {
              v18 = *(_DWORD *)(v13 + 1);
              if (v12 >= *((_DWORD *)this + 5))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
                v12 = *((_DWORD *)this + 4);
                v11 = *((_QWORD *)this + 1);
              }
              *((_DWORD *)this + 4) = v12 + 1;
              *(_DWORD *)(v11 + 4 * v12) = v18;
              ++v17;
              v13 += 5;
              ++v12;
              if (v16 == v17)
              {
                v17 = v16;
                break;
              }
            }
            if (v17)
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
          }
        }
      }
      if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

void sub_18D0D5C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_18D0D5C68(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  unsigned int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;

  v9 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v9 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_10:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    return 1;
  }
  else
  {
    while (1)
    {
      v10 = 0;
      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v10);
      if (!(_DWORD)result)
        break;
      v6 = v10;
      v7 = a2[2];
      if (v7 == a2[3])
      {
        sub_18D0D44E8(a2, v7 + 1);
        v7 = a2[2];
      }
      v8 = *(_QWORD *)a2;
      a2[2] = v7 + 1;
      *(_DWORD *)(v8 + 4 * v7) = v6;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0)
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;

  if (*(int *)(this + 16) >= 1)
  {
    v4 = this;
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(*(_QWORD *)(v4 + 8) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  uint64_t v1;

  v1 = (5 * *((_DWORD *)this + 4));
  *((_DWORD *)this + 6) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::simd_floatM::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    result = *((double *)a2 + 2);
    *((_QWORD *)a2 + 1) = v2;
    v4 = *((_QWORD *)this + 2);
    *((double *)this + 2) = result;
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_floatM");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::simd_doubleM(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  *(_QWORD *)this = &off_1E25C0358;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(this, a2);
  return this;
}

void sub_18D0D5F34(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  if (*v3)
    MEMORY[0x18D78B5BC](*v3, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  int v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    sub_18D09EC0C((_DWORD *)this + 2, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((_QWORD *)this + 1) + 8 * *((int *)this + 4)), *((const void **)a2 + 1), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
}

void sub_18D0D6018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::~simd_doubleM(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C0358;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  v2 = *((_QWORD *)this + 1);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8000313F17);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::~simd_doubleM(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::New(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0358;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t result;
  unint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  signed int v15;
  int v16;
  int v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  unint64_t v21[6];

  v4 = (_DWORD *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    v7 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v7 == 1)
      {
        while (1)
        {
          v21[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v21) & 1) == 0)
            return 0;
          v9 = v21[0];
          v10 = *((_DWORD *)this + 4);
          if (v10 == *((_DWORD *)this + 5))
          {
            sub_18D09EC0C(v4, v10 + 1);
            v10 = *((_DWORD *)this + 4);
          }
          v11 = *((_QWORD *)this + 1);
          v12 = v10 + 1;
          *((_DWORD *)this + 4) = v10 + 1;
          *(_QWORD *)(v11 + 8 * v10) = v9;
          v13 = *((_QWORD *)a2 + 1);
          v14 = *((_DWORD *)a2 + 4) - v13;
          if (v14 >= 1)
          {
            v15 = v14 / 9u;
            v16 = v15 >= *((_DWORD *)this + 5) - v12 ? *((_DWORD *)this + 5) - v12 : v15;
            if (v16 >= 1)
            {
              v17 = 0;
              while (*(_BYTE *)v13 == 9)
              {
                v18 = *(_QWORD *)(v13 + 1);
                if (v12 >= *((_DWORD *)this + 5))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
                  v12 = *((_DWORD *)this + 4);
                  v11 = *((_QWORD *)this + 1);
                }
                *((_DWORD *)this + 4) = v12 + 1;
                *(_QWORD *)(v11 + 8 * v12) = v18;
                ++v17;
                v13 += 9;
                ++v12;
                if (v16 == v17)
                {
                  v17 = v16;
                  break;
                }
              }
              if (v17)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_31:
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v20 = (_BYTE *)*((_QWORD *)a2 + 2);
          if (v19 >= v20 || *v19 != 9)
          {
            if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
      }
      if (v7 == 2)
        break;
    }
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  result = sub_18D0C7FD4(a2, v4);
  if ((_DWORD)result)
    goto LABEL_31;
  return result;
}

void sub_18D0D6378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;

  if (*(int *)(this + 16) >= 1)
  {
    v4 = this;
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(*(_QWORD *)(v4 + 8) + 8 * v5++), a3);
    while (v5 < *(int *)(v4 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  uint64_t v1;

  v1 = (9 * *((_DWORD *)this + 4));
  *((_DWORD *)this + 6) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    result = *((double *)a2 + 2);
    *((_QWORD *)a2 + 1) = v2;
    v4 = *((_QWORD *)this + 2);
    *((double *)this + 2) = result;
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_doubleM");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::simd_floatMxN(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  *(_QWORD *)this = &off_1E25C0448;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(this, a2);
  return this;
}

void sub_18D0D657C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_floatM **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatM *)operator new();
        *(_QWORD *)v9 = &off_1E25C0268;
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *((_QWORD *)v9 + 3) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatM **)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
}

void sub_18D0D66E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::~simd_floatMxN(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  *(_QWORD *)this = &off_1E25C0448;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::~simd_floatMxN(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::New(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25C0448;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = *((_DWORD *)this + 5);
        v8 = *((int *)this + 4);
        if ((int)v8 >= v7)
        {
          if (v7 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v7 + 1;
          v10 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatM *)operator new();
          *(_QWORD *)v10 = &off_1E25C0268;
          *((_QWORD *)v10 + 1) = 0;
          *((_QWORD *)v10 + 2) = 0;
          *((_QWORD *)v10 + 3) = 0;
          v11 = *((_QWORD *)this + 1);
          v12 = *((int *)this + 4);
          *((_DWORD *)this + 4) = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)this + 1);
          *((_DWORD *)this + 4) = v8 + 1;
          v10 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatM **)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergePartialFromCodedStream(v10, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(this + 16) >= 1)
  {
    v5 = this;
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v2 = *((_DWORD *)this + 4);
  if (v2 < 1)
  {
    v4 = *((unsigned int *)this + 4);
  }
  else
  {
    v3 = 0;
    LODWORD(v4) = *((_DWORD *)this + 4);
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)this + 1) + 8 * v3);
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(5 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = (_DWORD)v6;
      if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        v2 = *((_DWORD *)this + 4);
      }
      else
      {
        v7 = 1;
      }
      v4 = ((_DWORD)v6 + v4 + v7);
      ++v3;
    }
    while (v3 < v2);
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v3 = this;
    this = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    v5 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_floatMxN");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::simd_doubleMxN(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  *(_QWORD *)this = &off_1E25C04C0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(this, a2);
  return this;
}

void sub_18D0D6CA8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)operator new();
        *(_QWORD *)v9 = &off_1E25C0358;
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *((_QWORD *)v9 + 3) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
}

void sub_18D0D6E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::~simd_doubleMxN(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  *(_QWORD *)this = &off_1E25C04C0;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::~simd_doubleMxN(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::New(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25C04C0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = *((_DWORD *)this + 5);
        v8 = *((int *)this + 4);
        if ((int)v8 >= v7)
        {
          if (v7 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v7 + 1;
          v10 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)operator new();
          *(_QWORD *)v10 = &off_1E25C0358;
          *((_QWORD *)v10 + 1) = 0;
          *((_QWORD *)v10 + 2) = 0;
          *((_QWORD *)v10 + 3) = 0;
          v11 = *((_QWORD *)this + 1);
          v12 = *((int *)this + 4);
          *((_DWORD *)this + 4) = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)this + 1);
          *((_DWORD *)this + 4) = v8 + 1;
          v10 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(v10, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(this + 16) >= 1)
  {
    v5 = this;
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v2 = *((_DWORD *)this + 4);
  if (v2 < 1)
  {
    v4 = *((unsigned int *)this + 4);
  }
  else
  {
    v3 = 0;
    LODWORD(v4) = *((_DWORD *)this + 4);
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)this + 1) + 8 * v3);
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(9 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = (_DWORD)v6;
      if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        v2 = *((_DWORD *)this + 4);
      }
      else
      {
        v7 = 1;
      }
      v4 = ((_DWORD)v6 + v4 + v7);
      ++v3;
    }
    while (v3 < v2);
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v3 = this;
    this = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    v5 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_doubleMxN");
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::CGSize::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::CGSize *CoreNavigation::CLP::LogEntry::Vision::CGSize::CGSize(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  *(_QWORD *)this = &off_1E25C0970;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(this, a2);
  return this;
}

void sub_18D0D73B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0D7474(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::CGSize::~CGSize(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  *(_QWORD *)this = &off_1E25C0970;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::CGSize::~CGSize(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::CGSize::New(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0970;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::ByteSize(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::CGSize *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::Swap(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::CGSize::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.CGSize");
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::VIOInertialStateInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  *(_QWORD *)this = &off_1E25C06A0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0D78D4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = *((_DWORD *)a2 + 16);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 16) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 16) |= 2u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 16) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 16) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 16) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 16) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    v4 = *((_DWORD *)a2 + 16);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 16) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 16) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      return;
    goto LABEL_18;
  }
LABEL_30:
  v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 16) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  if ((*((_DWORD *)a2 + 16) & 0x800) == 0)
    return;
LABEL_18:
  v6 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 0x800u;
  *((_DWORD *)this + 14) = v6;
}

void sub_18D0D7AE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::~VIOInertialStateInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  *(_QWORD *)this = &off_1E25C06A0;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::~VIOInertialStateInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::New(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C06A0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 52) = 0;
    *(_QWORD *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned __int8 *v38;
  uint64_t result;
  unint64_t *v40;
  unsigned int *v41;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int *v44;

  v40 = (unint64_t *)((char *)this + 8);
  v41 = (unsigned int *)((char *)this + 16);
  v42 = (unsigned int *)((char *)this + 20);
  v43 = (unsigned int *)((char *)this + 24);
  v44 = (unsigned int *)((char *)this + 28);
  v4 = (unsigned int *)((char *)this + 32);
  v5 = (unsigned int *)((char *)this + 36);
  v6 = (unsigned int *)((char *)this + 40);
  v7 = (unsigned int *)((char *)this + 44);
  v8 = (unsigned int *)((char *)this + 48);
  v9 = (unsigned int *)((char *)this + 52);
  v10 = (unsigned int *)((char *)this + 56);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v40 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_40:
          *((_DWORD *)this + 16) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_43;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v40);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_43:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v41 = *v17;
          v28 = v17 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 16) |= 2u;
        if ((unint64_t)v28 >= v14 || *v28 != 24)
          continue;
        v18 = v28 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_51:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v42 = *v18;
          v29 = v18 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32)
          continue;
        v19 = v29 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_59:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v43 = *v19;
          v30 = v19 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40)
          continue;
        v20 = v30 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v44 = *v20;
          v31 = v20 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 16) |= 0x10u;
        if ((unint64_t)v31 >= v14 || *v31 != 48)
          continue;
        v21 = v31 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_75:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 16) |= 0x20u;
        if ((unint64_t)v32 >= v14 || *v32 != 56)
          continue;
        v22 = v32 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 16) |= 0x40u;
        if ((unint64_t)v33 >= v14 || *v33 != 64)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_91:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 16) |= 0x80u;
        if ((unint64_t)v34 >= v14 || *v34 != 72)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_99:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 16) |= 0x100u;
        if ((unint64_t)v35 >= v14 || *v35 != 80)
          continue;
        v25 = v35 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_107:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v25;
          v36 = v25 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 16) |= 0x200u;
        if ((unint64_t)v36 >= v14 || *v36 != 88)
          continue;
        v26 = v36 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_115:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v26;
          v37 = v26 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 16) |= 0x400u;
        if ((unint64_t)v37 >= v14 || *v37 != 96)
          continue;
        v27 = v37 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_123:
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v27;
          v38 = (unsigned __int8 *)(v27 + 1);
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 16) |= 0x800u;
        if (v38 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_91;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_115;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_123;
      default:
        v13 = TagFallback & 7;
LABEL_34:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 64);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[14], (uint64_t)a2, a4);
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  if ((v5[16] & 0x800) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[14], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;

  v2 = *((_DWORD *)this + 16);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_42;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 16);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v9 = 1;
  }
  v3 = (v3 + v9 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_30;
  }
LABEL_26:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_64;
  if ((v2 & 0x100) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0)
        goto LABEL_46;
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v21 = 2;
  }
  v3 = (v21 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0)
      goto LABEL_64;
    goto LABEL_60;
  }
LABEL_56:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x800) != 0)
  {
LABEL_60:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v24 >= 0x80)
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    else
      v25 = 2;
    v3 = (v25 + v3);
  }
LABEL_64:
  *((_DWORD *)this + 15) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VIOInertialStateInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::VIOInertialCovarianceInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  *(_QWORD *)this = &off_1E25C0880;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0D8858(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  _BYTE v17[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  v4 = *((_DWORD *)a2 + 16);
  if (!(_BYTE)v4)
    goto LABEL_13;
  if ((v4 & 1) != 0)
  {
    v7 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 16) |= 1u;
    *((_QWORD *)this + 1) = v7;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 16) |= 2u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_23;
  }
LABEL_22:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_24;
  }
LABEL_23:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_25:
    v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 16) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        goto LABEL_13;
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 16) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0)
    goto LABEL_25;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_26:
  v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 16) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 16) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    v4 = *((_DWORD *)a2 + 16);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0)
    return;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 16) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0)
        goto LABEL_17;
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 16) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0)
      return;
    goto LABEL_18;
  }
LABEL_30:
  v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 16) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  if ((*((_DWORD *)a2 + 16) & 0x800) == 0)
    return;
LABEL_18:
  v6 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 0x800u;
  *((_DWORD *)this + 14) = v6;
}

void sub_18D0D8A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::~VIOInertialCovarianceInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  *(_QWORD *)this = &off_1E25C0880;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::~VIOInertialCovarianceInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::New(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C0880;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 52) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::Clear(uint64_t this)
{
  int v1;

  v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_QWORD *)(this + 52) = 0;
    *(_QWORD *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  unsigned int *v5;
  unsigned int *v6;
  unsigned int *v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  char *v11;
  uint64_t TagFallback;
  int v13;
  unint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  unsigned __int8 *v38;
  uint64_t result;
  unint64_t *v40;
  unsigned int *v41;
  unsigned int *v42;
  unsigned int *v43;
  unsigned int *v44;

  v40 = (unint64_t *)((char *)this + 8);
  v41 = (unsigned int *)((char *)this + 16);
  v42 = (unsigned int *)((char *)this + 20);
  v43 = (unsigned int *)((char *)this + 24);
  v44 = (unsigned int *)((char *)this + 28);
  v4 = (unsigned int *)((char *)this + 32);
  v5 = (unsigned int *)((char *)this + 36);
  v6 = (unsigned int *)((char *)this + 40);
  v7 = (unsigned int *)((char *)this + 44);
  v8 = (unsigned int *)((char *)this + 48);
  v9 = (unsigned int *)((char *)this + 52);
  v10 = (unsigned int *)((char *)this + 56);
  while (2)
  {
    v11 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v11 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v14 && (*v15 & 0x80000000) == 0)
        {
          *v40 = *v15;
          v16 = v15 + 1;
          *((_QWORD *)a2 + 1) = v16;
LABEL_40:
          *((_DWORD *)this + 16) |= 1u;
          if ((unint64_t)v16 < v14 && *v16 == 16)
          {
            v17 = v16 + 1;
            *((_QWORD *)a2 + 1) = v17;
            goto LABEL_43;
          }
          continue;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v40);
        if ((_DWORD)result)
        {
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
LABEL_43:
        if ((unint64_t)v17 >= v14 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v41);
          if (!(_DWORD)result)
            return result;
          v28 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v41 = *v17;
          v28 = v17 + 1;
          *((_QWORD *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 16) |= 2u;
        if ((unint64_t)v28 >= v14 || *v28 != 24)
          continue;
        v18 = v28 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_51:
        if ((unint64_t)v18 >= v14 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
          if (!(_DWORD)result)
            return result;
          v29 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v42 = *v18;
          v29 = v18 + 1;
          *((_QWORD *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v29 >= v14 || *v29 != 32)
          continue;
        v19 = v29 + 1;
        *((_QWORD *)a2 + 1) = v19;
LABEL_59:
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
          if (!(_DWORD)result)
            return result;
          v30 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v43 = *v19;
          v30 = v19 + 1;
          *((_QWORD *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v30 >= v14 || *v30 != 40)
          continue;
        v20 = v30 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_67:
        if ((unint64_t)v20 >= v14 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
          if (!(_DWORD)result)
            return result;
          v31 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v44 = *v20;
          v31 = v20 + 1;
          *((_QWORD *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 16) |= 0x10u;
        if ((unint64_t)v31 >= v14 || *v31 != 48)
          continue;
        v21 = v31 + 1;
        *((_QWORD *)a2 + 1) = v21;
LABEL_75:
        if ((unint64_t)v21 >= v14 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v32 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v21;
          v32 = v21 + 1;
          *((_QWORD *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 16) |= 0x20u;
        if ((unint64_t)v32 >= v14 || *v32 != 56)
          continue;
        v22 = v32 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_83:
        if ((unint64_t)v22 >= v14 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!(_DWORD)result)
            return result;
          v33 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v5 = *v22;
          v33 = v22 + 1;
          *((_QWORD *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 16) |= 0x40u;
        if ((unint64_t)v33 >= v14 || *v33 != 64)
          continue;
        v23 = v33 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_91:
        if ((unint64_t)v23 >= v14 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!(_DWORD)result)
            return result;
          v34 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v6 = *v23;
          v34 = v23 + 1;
          *((_QWORD *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 16) |= 0x80u;
        if ((unint64_t)v34 >= v14 || *v34 != 72)
          continue;
        v24 = v34 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_99:
        if ((unint64_t)v24 >= v14 || *v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!(_DWORD)result)
            return result;
          v35 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v7 = *v24;
          v35 = v24 + 1;
          *((_QWORD *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 16) |= 0x100u;
        if ((unint64_t)v35 >= v14 || *v35 != 80)
          continue;
        v25 = v35 + 1;
        *((_QWORD *)a2 + 1) = v25;
LABEL_107:
        if ((unint64_t)v25 >= v14 || *v25 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!(_DWORD)result)
            return result;
          v36 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v8 = *v25;
          v36 = v25 + 1;
          *((_QWORD *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 16) |= 0x200u;
        if ((unint64_t)v36 >= v14 || *v36 != 88)
          continue;
        v26 = v36 + 1;
        *((_QWORD *)a2 + 1) = v26;
LABEL_115:
        if ((unint64_t)v26 >= v14 || *v26 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!(_DWORD)result)
            return result;
          v37 = (_BYTE *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v9 = *v26;
          v37 = v26 + 1;
          *((_QWORD *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 16) |= 0x400u;
        if ((unint64_t)v37 >= v14 || *v37 != 96)
          continue;
        v27 = v37 + 1;
        *((_QWORD *)a2 + 1) = v27;
LABEL_123:
        if ((unint64_t)v27 >= v14 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!(_DWORD)result)
            return result;
          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v14 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v10 = *v27;
          v38 = (unsigned __int8 *)(v27 + 1);
          *((_QWORD *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 16) |= 0x800u;
        if (v38 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 4u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_59;
      case 5u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_67;
      case 6u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_75;
      case 7u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_83;
      case 8u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_91;
      case 9u:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v25 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v26 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_115;
      case 0xCu:
        v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_34;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_123;
      default:
        v13 = TagFallback & 7;
LABEL_34:
        if (v13 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;

  v5 = (unsigned int *)this;
  v6 = *(_DWORD *)(this + 64);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
    v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  v6 = v5[16];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[14], (uint64_t)a2, a4);
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  if ((v5[16] & 0x800) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[14], (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;

  v2 = *((_DWORD *)this + 16);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_42;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    v2 = *((_DWORD *)this + 16);
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_11;
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v5 = 1;
  }
  v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v7 = 1;
    }
    v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0)
        goto LABEL_14;
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v9 = 1;
  }
  v3 = (v3 + v9 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0)
      goto LABEL_15;
    goto LABEL_30;
  }
LABEL_26:
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v11 = 2;
  }
  v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_34;
  }
LABEL_30:
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v13 = 2;
  }
  v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0)
      goto LABEL_42;
    goto LABEL_38;
  }
LABEL_34:
  v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v15 = 2;
  }
  v3 = (v15 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v17 = 2;
    }
    v3 = (v17 + v3);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_64;
  if ((v2 & 0x100) != 0)
  {
    v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      v2 = *((_DWORD *)this + 16);
    }
    else
    {
      v19 = 2;
    }
    v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0)
        goto LABEL_46;
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v21 = 2;
  }
  v3 = (v21 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0)
      goto LABEL_64;
    goto LABEL_60;
  }
LABEL_56:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v22 >= 0x80)
  {
    v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    v2 = *((_DWORD *)this + 16);
  }
  else
  {
    v23 = 2;
  }
  v3 = (v23 + v3);
  if ((v2 & 0x800) != 0)
  {
LABEL_60:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v24 >= 0x80)
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    else
      v25 = 2;
    v3 = (v25 + v3);
  }
LABEL_64:
  *((_DWORD *)this + 15) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VIOInertialCovarianceInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  double result;
  uint64_t v2;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 10) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = v2;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = v2;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 7) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::VIOEstimation(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  uint64_t v3;

  *((_QWORD *)this + 10) = 0xFFFFFFFFLL;
  *(_QWORD *)this = &off_1E25C03D0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 4) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_QWORD *)this + 6) = v3;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(this, a2);
  return this;
}

void sub_18D0D9810(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *v3;
  double result;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v7;
  const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v8;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v9;
  const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v10;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *v11;
  const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *v12;
  std::string *v13;
  const std::string *v14;
  std::string *v15;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *v16;
  const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *v17;
  const std::string *v18;
  std::string *v19;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v20;
  const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v21;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v22;
  const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v23;
  CoreNavigation::CLP::LogEntry::Vision::CGSize *v24;
  const CoreNavigation::CLP::LogEntry::Vision::CGSize *v25;
  _BYTE v26[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  v5 = *((_DWORD *)a2 + 22);
  if (!(_BYTE)v5)
    goto LABEL_47;
  if ((v5 & 1) != 0)
  {
    v6 = *((_DWORD *)a2 + 20);
    if ((v6 + 1) >= 6)
      __assert_rtn("set_tracking_state", "CoreNavigationCLPVisionEvent.pb.h", 3487, "::CoreNavigation::CLP::LogEntry::Vision::VIOTrackingState_IsValid(value)");
    *((_DWORD *)v3 + 22) |= 1u;
    *((_DWORD *)v3 + 20) = v6;
    v5 = *((_DWORD *)a2 + 22);
  }
  if ((v5 & 2) != 0)
  {
    *((_DWORD *)v3 + 22) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25C0A60;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                      + 8);
    }
    result = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v7, v8);
    v5 = *((_DWORD *)a2 + 22);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0)
        goto LABEL_26;
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  *((_DWORD *)v3 + 22) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)v3 + 2);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
    v9 = this;
    *(_QWORD *)this = &off_1E25C0A60;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 2) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                     + 16);
  }
  result = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v9, v10);
  v5 = *((_DWORD *)a2 + 22);
  if ((v5 & 8) != 0)
  {
LABEL_21:
    *((_DWORD *)v3 + 22) |= 8u;
    v11 = (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)*((_QWORD *)v3 + 3);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25C06A0;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 52) = 0u;
      *((_QWORD *)v3 + 3) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)*((_QWORD *)a2 + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                                  + 24);
    }
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(v11, v12);
    v5 = *((_DWORD *)a2 + 22);
  }
LABEL_26:
  v13 = (std::string *)MEMORY[0x1E0DE8338];
  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 0x20) == 0)
      goto LABEL_28;
LABEL_34:
    *((_DWORD *)v3 + 22) |= 0x20u;
    v16 = (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)*((_QWORD *)v3 + 5);
    if (!v16)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
      v16 = this;
      *(_QWORD *)this = &off_1E25C0880;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 52) = 0u;
      *((_QWORD *)v3 + 5) = this;
    }
    v17 = (const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)*((_QWORD *)a2 + 5);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v17 = *(const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                                       + 40);
    }
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(v16, v17);
    v5 = *((_DWORD *)a2 + 22);
    if ((v5 & 0x40) == 0)
    {
LABEL_29:
      if ((v5 & 0x80) == 0)
        goto LABEL_47;
      goto LABEL_42;
    }
    goto LABEL_39;
  }
  v14 = (const std::string *)*((_QWORD *)a2 + 4);
  *((_DWORD *)v3 + 22) |= 0x10u;
  v15 = (std::string *)*((_QWORD *)v3 + 4);
  if (v15 == v13)
  {
    v15 = (std::string *)operator new();
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)v3 + 4) = v15;
  }
  this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)std::string::operator=(v15, v14);
  v5 = *((_DWORD *)a2 + 22);
  if ((v5 & 0x20) != 0)
    goto LABEL_34;
LABEL_28:
  if ((v5 & 0x40) == 0)
    goto LABEL_29;
LABEL_39:
  v18 = (const std::string *)*((_QWORD *)a2 + 6);
  *((_DWORD *)v3 + 22) |= 0x40u;
  v19 = (std::string *)*((_QWORD *)v3 + 6);
  if (v19 == v13)
  {
    v19 = (std::string *)operator new();
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    *((_QWORD *)v3 + 6) = v19;
  }
  this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)std::string::operator=(v19, v18);
  v5 = *((_DWORD *)a2 + 22);
  if ((v5 & 0x80) != 0)
  {
LABEL_42:
    *((_DWORD *)v3 + 22) |= 0x80u;
    v20 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((_QWORD *)v3 + 7);
    if (!v20)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
      v20 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25C0448;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 7) = this;
    }
    v21 = (const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((_QWORD *)a2 + 7);
    if (!v21)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v21 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                           + 56);
    }
    CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(v20, v21);
    v5 = *((_DWORD *)a2 + 22);
  }
LABEL_47:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *((_DWORD *)v3 + 22) |= 0x100u;
      v22 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((_QWORD *)v3 + 8);
      if (!v22)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
        v22 = this;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *(_QWORD *)this = &off_1E25C0448;
        *((_DWORD *)this + 6) = 0;
        *((_QWORD *)this + 4) = 0;
        *((_QWORD *)v3 + 8) = this;
      }
      v23 = (const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((_QWORD *)a2 + 8);
      if (!v23)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v23 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                             + 64);
      }
      CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(v22, v23);
      v5 = *((_DWORD *)a2 + 22);
    }
    if ((v5 & 0x200) != 0)
    {
      *((_DWORD *)v3 + 22) |= 0x200u;
      v24 = (CoreNavigation::CLP::LogEntry::Vision::CGSize *)*((_QWORD *)v3 + 9);
      if (!v24)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)operator new();
        v24 = this;
        *(_QWORD *)this = &off_1E25C0970;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *((_QWORD *)this + 3) = 0;
        *((_QWORD *)v3 + 9) = this;
      }
      v25 = (const CoreNavigation::CLP::LogEntry::Vision::CGSize *)*((_QWORD *)a2 + 9);
      if (!v25)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v25 = *(const CoreNavigation::CLP::LogEntry::Vision::CGSize **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                      + 72);
      }
      return CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(v24, v25);
    }
  }
  return result;
}

void sub_18D0D9CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::~VIOEstimation(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  *(_QWORD *)this = &off_1E25C03D0;
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::~VIOEstimation(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = this;
  v2 = *((_QWORD *)this + 4);
  v3 = MEMORY[0x1E0DE8338];
  if (v2 != MEMORY[0x1E0DE8338] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0)
      operator delete(*(void **)v2);
    this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)MEMORY[0x18D78B5D4](v2, 0x1012C40EC159624);
  }
  v5 = *((_QWORD *)v1 + 6);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0)
      operator delete(*(void **)v5);
    this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)MEMORY[0x18D78B5D4](v5, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ != v1)
  {
    v7 = *((_QWORD *)v1 + 1);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)v1 + 2);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)v1 + 3);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
    v10 = *((_QWORD *)v1 + 5);
    if (v10)
      (*(void (**)(uint64_t))(*(_QWORD *)v10 + 8))(v10);
    v11 = *((_QWORD *)v1 + 7);
    if (v11)
      (*(void (**)(uint64_t))(*(_QWORD *)v11 + 8))(v11);
    v12 = *((_QWORD *)v1 + 8);
    if (v12)
      (*(void (**)(uint64_t))(*(_QWORD *)v12 + 8))(v12);
    v13 = *((_QWORD *)v1 + 9);
    if (v13)
      (*(void (**)(uint64_t))(*(_QWORD *)v13 + 8))(v13);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::New(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  v1 = operator new();
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 80) = 0xFFFFFFFFLL;
  *(_QWORD *)v1 = &off_1E25C03D0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 72) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = this;
  v2 = *(_DWORD *)(this + 88);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 80) = -1;
    if ((v2 & 2) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 88);
      }
    }
    if ((v2 & 4) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 36))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
          *(_QWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        v2 = *(_DWORD *)(this + 88);
      }
    }
    if ((v2 & 8) != 0)
    {
      v5 = *(_QWORD *)(this + 24);
      if (v5)
      {
        v6 = *(_DWORD *)(v5 + 64);
        if ((_BYTE)v6)
        {
          *(_DWORD *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        if ((v6 & 0xFF00) != 0)
        {
          *(_QWORD *)(v5 + 52) = 0;
          *(_QWORD *)(v5 + 44) = 0;
        }
        *(_DWORD *)(v5 + 64) = 0;
        v2 = *(_DWORD *)(this + 88);
      }
    }
    v7 = MEMORY[0x1E0DE8338];
    if ((v2 & 0x10) != 0)
    {
      v8 = *(_QWORD *)(this + 32);
      if (v8 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(_BYTE **)v8 = 0;
          *(_QWORD *)(v8 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v8 = 0;
          *(_BYTE *)(v8 + 23) = 0;
        }
      }
    }
    v9 = *(_DWORD *)(this + 88);
    if ((v9 & 0x20) != 0)
    {
      v10 = *(_QWORD *)(this + 40);
      if (v10)
      {
        v11 = *(_DWORD *)(v10 + 64);
        if ((_BYTE)v11)
        {
          *(_DWORD *)(v10 + 40) = 0;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 8) = 0u;
        }
        if ((v11 & 0xFF00) != 0)
        {
          *(_QWORD *)(v10 + 52) = 0;
          *(_QWORD *)(v10 + 44) = 0;
        }
        *(_DWORD *)(v10 + 64) = 0;
        v9 = *(_DWORD *)(this + 88);
      }
    }
    if ((v9 & 0x40) != 0)
    {
      v12 = *(_QWORD *)(this + 48);
      if (v12 != v7)
      {
        if (*(char *)(v12 + 23) < 0)
        {
          **(_BYTE **)v12 = 0;
          *(_QWORD *)(v12 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v12 = 0;
          *(_BYTE *)(v12 + 23) = 0;
        }
      }
    }
    v2 = *(_DWORD *)(this + 88);
    if ((v2 & 0x80) != 0)
    {
      v13 = *(_QWORD *)(this + 56);
      if (v13)
      {
        if (*(int *)(v13 + 16) >= 1)
        {
          v14 = 0;
          do
          {
            v15 = *(_QWORD *)(*(_QWORD *)(v13 + 8) + 8 * v14);
            this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v15 + 32))(v15);
            ++v14;
          }
          while (v14 < *(int *)(v13 + 16));
        }
        *(_DWORD *)(v13 + 16) = 0;
        *(_DWORD *)(v13 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 88);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v16 = *(_QWORD *)(v1 + 64);
      if (v16)
      {
        if (*(int *)(v16 + 16) >= 1)
        {
          v17 = 0;
          do
          {
            v18 = *(_QWORD *)(*(_QWORD *)(v16 + 8) + 8 * v17);
            this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v18 + 32))(v18);
            ++v17;
          }
          while (v17 < *(int *)(v16 + 16));
        }
        *(_DWORD *)(v16 + 16) = 0;
        *(_DWORD *)(v16 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 88);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      v19 = *(_QWORD *)(v1 + 72);
      if (v19)
      {
        if (*(_BYTE *)(v19 + 28))
        {
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
        }
        *(_DWORD *)(v19 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 88) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  _BYTE *v33;
  _QWORD *v34;
  _BYTE *v35;
  uint64_t v36;
  char *v37;
  int v38;
  int v39;
  int v40;
  int v41;
  _BYTE *v42;
  _QWORD *v43;
  _BYTE *v44;
  uint64_t v45;
  char *v46;
  int v47;
  int v48;
  int v49;
  int v50;
  _BYTE *v51;
  uint64_t v52;
  char *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  _BYTE *v58;
  CoreNavigation::CLP::LogEntry::Vision::CGSize *v59;
  char *v60;
  int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_30;
        v65 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65);
          if (!(_DWORD)result)
            return result;
          v9 = v65;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        if (v9 + 1 <= 5)
        {
          *((_DWORD *)this + 22) |= 1u;
          *((_DWORD *)this + 20) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 < *((_QWORD *)a2 + 2) && *v11 == 18)
        {
          *((_QWORD *)a2 + 1) = v11 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_30;
LABEL_40:
        *((_DWORD *)this + 22) |= 2u;
        v12 = *((_QWORD *)this + 1);
        if (!v12)
        {
          v12 = operator new();
          *(_QWORD *)v12 = &off_1E25C0A60;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *((_QWORD *)this + 1) = v12;
        }
        v65 = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)v12, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_54:
        *((_DWORD *)this + 22) |= 4u;
        v20 = *((_QWORD *)this + 2);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)v20 = &off_1E25C0A60;
          *(_OWORD *)(v20 + 8) = 0u;
          *(_OWORD *)(v20 + 24) = 0u;
          *((_QWORD *)this + 2) = v20;
        }
        v65 = 0;
        v21 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v17)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_68:
        *((_DWORD *)this + 22) |= 8u;
        v27 = *((_QWORD *)this + 3);
        if (!v27)
        {
          v27 = operator new();
          *(_QWORD *)v27 = &off_1E25C06A0;
          *(_OWORD *)(v27 + 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(_OWORD *)(v27 + 40) = 0u;
          *(_OWORD *)(v27 + 52) = 0u;
          *((_QWORD *)this + 3) = v27;
        }
        v65 = 0;
        v28 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v28;
          *((_QWORD *)a2 + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)a2 + 14);
        v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)v27, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v31 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v31, 1);
        v32 = v31 - 1;
        if (v32 < 0 == v17)
          *((_DWORD *)a2 + 14) = v32;
        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v33 >= *((_QWORD *)a2 + 2) || *v33 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v33 + 1;
LABEL_82:
        *((_DWORD *)this + 22) |= 0x10u;
        if (*((_QWORD *)this + 4) == v4)
        {
          v34 = (_QWORD *)operator new();
          v34[1] = 0;
          v34[2] = 0;
          *v34 = 0;
          *((_QWORD *)this + 4) = v34;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!(_DWORD)result)
          return result;
        v35 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v35 >= *((_QWORD *)a2 + 2) || *v35 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v35 + 1;
LABEL_88:
        *((_DWORD *)this + 22) |= 0x20u;
        v36 = *((_QWORD *)this + 5);
        if (!v36)
        {
          v36 = operator new();
          *(_QWORD *)v36 = &off_1E25C0880;
          *(_OWORD *)(v36 + 8) = 0u;
          *(_OWORD *)(v36 + 24) = 0u;
          *(_OWORD *)(v36 + 40) = 0u;
          *(_OWORD *)(v36 + 52) = 0u;
          *((_QWORD *)this + 5) = v36;
        }
        v65 = 0;
        v37 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v37;
          *((_QWORD *)a2 + 1) = v37 + 1;
        }
        v38 = *((_DWORD *)a2 + 14);
        v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)v36, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v40 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v40, 1);
        v41 = v40 - 1;
        if (v41 < 0 == v17)
          *((_DWORD *)a2 + 14) = v41;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_102:
        *((_DWORD *)this + 22) |= 0x40u;
        if (*((_QWORD *)this + 6) == v4)
        {
          v43 = (_QWORD *)operator new();
          v43[1] = 0;
          v43[2] = 0;
          *v43 = 0;
          *((_QWORD *)this + 6) = v43;
        }
        result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!(_DWORD)result)
          return result;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 1;
LABEL_108:
        *((_DWORD *)this + 22) |= 0x80u;
        v45 = *((_QWORD *)this + 7);
        if (!v45)
        {
          v45 = operator new();
          *(_QWORD *)(v45 + 8) = 0;
          *(_QWORD *)(v45 + 16) = 0;
          *(_QWORD *)v45 = &off_1E25C0448;
          *(_DWORD *)(v45 + 24) = 0;
          *(_QWORD *)(v45 + 32) = 0;
          *((_QWORD *)this + 7) = v45;
        }
        v65 = 0;
        v46 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v46;
          *((_QWORD *)a2 + 1) = v46 + 1;
        }
        v47 = *((_DWORD *)a2 + 14);
        v48 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v47 + 1;
        if (v47 >= v48)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)v45, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v49 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v49, 1);
        v50 = v49 - 1;
        if (v50 < 0 == v17)
          *((_DWORD *)a2 + 14) = v50;
        v51 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v51 >= *((_QWORD *)a2 + 2) || *v51 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v51 + 1;
LABEL_122:
        *((_DWORD *)this + 22) |= 0x100u;
        v52 = *((_QWORD *)this + 8);
        if (!v52)
        {
          v52 = operator new();
          *(_QWORD *)(v52 + 8) = 0;
          *(_QWORD *)(v52 + 16) = 0;
          *(_QWORD *)v52 = &off_1E25C0448;
          *(_DWORD *)(v52 + 24) = 0;
          *(_QWORD *)(v52 + 32) = 0;
          *((_QWORD *)this + 8) = v52;
        }
        v65 = 0;
        v53 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v53;
          *((_QWORD *)a2 + 1) = v53 + 1;
        }
        v54 = *((_DWORD *)a2 + 14);
        v55 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v54 + 1;
        if (v54 >= v55)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)v52, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v56 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v56, 1);
        v57 = v56 - 1;
        if (v57 < 0 == v17)
          *((_DWORD *)a2 + 14) = v57;
        v58 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v58 >= *((_QWORD *)a2 + 2) || *v58 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v58 + 1;
LABEL_136:
        *((_DWORD *)this + 22) |= 0x200u;
        v59 = (CoreNavigation::CLP::LogEntry::Vision::CGSize *)*((_QWORD *)this + 9);
        if (!v59)
        {
          v59 = (CoreNavigation::CLP::LogEntry::Vision::CGSize *)operator new();
          *(_QWORD *)v59 = &off_1E25C0970;
          *((_QWORD *)v59 + 1) = 0;
          *((_QWORD *)v59 + 2) = 0;
          *((_QWORD *)v59 + 3) = 0;
          *((_QWORD *)this + 9) = v59;
        }
        v65 = 0;
        v60 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v65))return 0;
        }
        else
        {
          v65 = *v60;
          *((_QWORD *)a2 + 1) = v60 + 1;
        }
        v61 = *((_DWORD *)a2 + 14);
        v62 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v61 + 1;
        if (v61 >= v62)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::CGSize::MergePartialFromCodedStream(v59, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v63 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v63, 1);
        v64 = v63 - 1;
        if (v64 < 0 == v17)
          *((_DWORD *)a2 + 14) = v64;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_54;
        goto LABEL_30;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_68;
        goto LABEL_30;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_82;
        goto LABEL_30;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_88;
        goto LABEL_30;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_102;
        goto LABEL_30;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_108;
        goto LABEL_30;
      case 9u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_122;
        goto LABEL_30;
      case 0xAu:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_30;
        goto LABEL_136;
      default:
        v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = this;
  v6 = this[22];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[20], (uint64_t)a2, a4);
    v6 = v5[22];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = v5[22];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_16:
  v8 = *((_QWORD *)v5 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 16);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = v5[22];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_19:
  v9 = *((_QWORD *)v5 + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 24);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  v6 = v5[22];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  v6 = v5[22];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_26;
  }
LABEL_23:
  v10 = *((_QWORD *)v5 + 5);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 40);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  v6 = v5[22];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_27;
  }
LABEL_26:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  v6 = v5[22];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_30;
  }
LABEL_27:
  v11 = *((_QWORD *)v5 + 7);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 56);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  v6 = v5[22];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      return this;
    goto LABEL_33;
  }
LABEL_30:
  v12 = *((_QWORD *)v5 + 8);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 64);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  if ((v5[22] & 0x200) != 0)
  {
LABEL_33:
    v13 = *((_QWORD *)v5 + 9);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 72);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  uint64_t v22;
  int v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v27;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v28;
  int v29;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *v30;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;

  v1 = this;
  v2 = *(_DWORD *)(this + 88);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_73;
  }
  if ((v2 & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 80);
    if ((v4 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v4 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      v2 = *(_DWORD *)(v1 + 88);
    }
    else
    {
      this = 1;
    }
    v3 = (this + 1);
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  else
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_21;
  }
  v5 = *(_QWORD *)(v1 + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = (v3 + v6 + 2);
  v2 = *(_DWORD *)(v1 + 88);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v8 = *(_QWORD *)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 16);
    }
    v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(_BYTE *)(v8 + 36))
    {
      v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0)
        v10 += 9;
      if ((v9 & 4) != 0)
        v9 = v10 + 9;
      else
        v9 = v10;
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 = (v3 + v9 + 2);
    v2 = *(_DWORD *)(v1 + 88);
    if ((v2 & 8) == 0)
    {
LABEL_23:
      if ((v2 & 0x10) == 0)
        goto LABEL_24;
      goto LABEL_43;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_23;
  }
  v11 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo **)(v1 + 24);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    v11 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                          + 24);
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::ByteSize(v11);
  v13 = (int)v12;
  if (v12 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  else
    this = 1;
  v3 = (v3 + v13 + this + 1);
  v2 = *(_DWORD *)(v1 + 88);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x20) == 0)
      goto LABEL_25;
    goto LABEL_52;
  }
LABEL_43:
  v14 = *(_QWORD *)(v1 + 32);
  v15 = *(unsigned __int8 *)(v14 + 23);
  v16 = v15;
  v17 = *(_QWORD *)(v14 + 8);
  if ((v15 & 0x80u) == 0)
    v18 = *(unsigned __int8 *)(v14 + 23);
  else
    v18 = v17;
  if (v18 >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18);
    v15 = *(unsigned __int8 *)(v14 + 23);
    v17 = *(_QWORD *)(v14 + 8);
    v2 = *(_DWORD *)(v1 + 88);
    v16 = *(_BYTE *)(v14 + 23);
  }
  else
  {
    this = 1;
  }
  if (v16 < 0)
    v15 = v17;
  v3 = (v3 + this + v15 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_25:
    if ((v2 & 0x40) == 0)
      goto LABEL_26;
    goto LABEL_58;
  }
LABEL_52:
  v19 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo **)(v1 + 40);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    v19 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                               + 40);
  }
  v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::ByteSize(v19);
  v21 = (int)v20;
  if (v20 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
  else
    this = 1;
  v3 = (v3 + v21 + this + 1);
  v2 = *(_DWORD *)(v1 + 88);
  if ((v2 & 0x40) == 0)
  {
LABEL_26:
    if ((v2 & 0x80) == 0)
      goto LABEL_73;
    goto LABEL_67;
  }
LABEL_58:
  v22 = *(_QWORD *)(v1 + 48);
  v23 = *(unsigned __int8 *)(v22 + 23);
  v24 = v23;
  v25 = *(_QWORD *)(v22 + 8);
  if ((v23 & 0x80u) == 0)
    v26 = *(unsigned __int8 *)(v22 + 23);
  else
    v26 = v25;
  if (v26 >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26);
    v23 = *(unsigned __int8 *)(v22 + 23);
    v25 = *(_QWORD *)(v22 + 8);
    v2 = *(_DWORD *)(v1 + 88);
    v24 = *(_BYTE *)(v22 + 23);
  }
  else
  {
    this = 1;
  }
  if (v24 < 0)
    v23 = v25;
  v3 = (v3 + this + v23 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_67:
    v27 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(v1 + 56);
    if (!v27)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v27 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                     + 56);
    }
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::ByteSize(v27);
    v29 = (int)v28;
    if (v28 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    else
      this = 1;
    v3 = (v3 + v29 + this + 1);
    v2 = *(_DWORD *)(v1 + 88);
  }
LABEL_73:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v30 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(v1 + 64);
      if (!v30)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
        v30 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                       + 64);
      }
      v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::ByteSize(v30);
      v32 = (int)v31;
      if (v31 >= 0x80)
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      else
        this = 1;
      v3 = (v3 + v32 + this + 1);
      v2 = *(_DWORD *)(v1 + 88);
    }
    if ((v2 & 0x200) != 0)
    {
      v33 = *(_QWORD *)(v1 + 72);
      if (!v33)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
        v33 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 72);
      }
      v34 = *(unsigned __int8 *)(v33 + 28);
      v35 = (v34 << 31 >> 31) & 9;
      if ((v34 & 2) != 0)
        v35 += 9;
      if (*(_BYTE *)(v33 + 28))
        v36 = v35;
      else
        v36 = 0;
      *(_DWORD *)(v33 + 24) = v36;
      v3 = (v3 + v36 + 2);
    }
  }
  *(_DWORD *)(v1 + 84) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)this)
  {
    v2 = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    v8 = *(_QWORD *)(this + 48);
    *(_QWORD *)(this + 48) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v8;
    v9 = *(_QWORD *)(this + 56);
    *(_QWORD *)(this + 56) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v9;
    v10 = *(_QWORD *)(this + 64);
    *(_QWORD *)(this + 64) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v10;
    v11 = *(_QWORD *)(this + 72);
    *(_QWORD *)(this + 72) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 84);
    *(_DWORD *)(this + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VIOEstimation");
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::LSLLocationCoordinate(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  *(_QWORD *)this = &off_1E25C0790;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(this, a2);
  return this;
}

void sub_18D0DB248(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0DB304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::~LSLLocationCoordinate(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  *(_QWORD *)this = &off_1E25C0790;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::~LSLLocationCoordinate(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::New(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0790;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLLocationCoordinate");
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LSLLocation *CoreNavigation::CLP::LogEntry::Vision::LSLLocation::LSLLocation(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  *(_QWORD *)this = &off_1E25C01F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(this, a2);
  return this;
}

void sub_18D0DB74C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *v6;
  const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *v7;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v8;
  const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v9;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      *((_DWORD *)v3 + 9) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25C0790;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *((_QWORD *)this + 3) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_
                                                                                    + 8);
      }
      result = CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_14;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)v3 + 9) |= 2u;
    *((double *)v3 + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_14:
    *((_DWORD *)v3 + 9) |= 4u;
    v8 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)v3 + 3);
    if (!v8)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)operator new();
      v8 = this;
      *(_QWORD *)this = &off_1E25C0A60;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 3) = this;
    }
    v9 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)a2 + 3);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v9 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_
                                                                      + 24);
    }
    return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v8, v9);
  }
  return result;
}

void sub_18D0DB8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocation::~LSLLocation(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  *(_QWORD *)this = &off_1E25C01F0;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::~LSLLocation(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 3);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::New(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C01F0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  LOBYTE(v1) = *(_BYTE *)(this + 36);
  if ((_BYTE)v1)
  {
    if ((*(_BYTE *)(this + 36) & 1) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        v1 = *(_DWORD *)(this + 36);
      }
    }
    *(_QWORD *)(this + 16) = 0;
    if ((v1 & 4) != 0)
    {
      v3 = *(_QWORD *)(this + 24);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t result;
  unsigned int v25[2];

  while (1)
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_20;
        *((_DWORD *)this + 9) |= 1u;
        v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)*((_QWORD *)this + 1);
        if (!v9)
        {
          v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)operator new();
          *(_QWORD *)v9 = &off_1E25C0790;
          *((_QWORD *)v9 + 1) = 0;
          *((_QWORD *)v9 + 2) = 0;
          *((_QWORD *)v9 + 3) = 0;
          *((_QWORD *)this + 1) = v9;
        }
        v25[0] = 0;
        v10 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0;
        }
        else
        {
          v25[0] = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergePartialFromCodedStream(v9, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 17)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_32;
        }
      }
      if (v6 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 1)
        goto LABEL_20;
LABEL_32:
      *(_QWORD *)v25 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0;
      *((_QWORD *)this + 2) = *(_QWORD *)v25;
      v8 = *((_DWORD *)this + 9) | 2;
      *((_DWORD *)this + 9) = v8;
      v17 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v17 < *((_QWORD *)a2 + 2) && *v17 == 26)
      {
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_36:
        *((_DWORD *)this + 9) = v8 | 4;
        v18 = *((_QWORD *)this + 3);
        if (!v18)
        {
          v18 = operator new();
          *(_QWORD *)v18 = &off_1E25C0A60;
          *(_OWORD *)(v18 + 8) = 0u;
          *(_OWORD *)(v18 + 24) = 0u;
          *((_QWORD *)this + 3) = v18;
        }
        v25[0] = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0;
        }
        else
        {
          v25[0] = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)v18, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v22, 1);
        v23 = v22 - 1;
        if (v23 < 0 == v14)
          *((_DWORD *)a2 + 14) = v23;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      v7 = TagFallback & 7;
      if (v7 == 2)
      {
        v8 = *((_DWORD *)this + 9);
        goto LABEL_36;
      }
    }
    else
    {
      v7 = TagFallback & 7;
    }
LABEL_20:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      goto LABEL_3;
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0)
      return this;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0)
    goto LABEL_8;
LABEL_3:
  if ((v6 & 4) == 0)
    return this;
LABEL_9:
  v8 = *(_QWORD *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 24);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;

  LOBYTE(v2) = *((_BYTE *)this + 36);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 36) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 28);
      if (*(_BYTE *)(v5 + 28))
      {
        if ((v6 & 2) != 0)
          v6 = ((v6 << 31 >> 31) & 9) + 9;
        else
          v6 = (v6 << 31 >> 31) & 9;
      }
      *(_DWORD *)(v5 + 24) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 9);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 4) != 0)
    {
      v7 = *((_QWORD *)this + 3);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 24);
      }
      v8 = *(unsigned __int8 *)(v7 + 36);
      if (*(_BYTE *)(v7 + 36))
      {
        v9 = (v8 << 31 >> 31) & 9;
        if ((v8 & 2) != 0)
          v9 += 9;
        if ((v8 & 4) != 0)
          v8 = v9 + 9;
        else
          v8 = v9;
      }
      *(_DWORD *)(v7 + 32) = v8;
      v4 = (v4 + v8 + 2);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLLocation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLLocation");
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 7) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeading *CoreNavigation::CLP::LogEntry::Vision::LSLHeading::LSLHeading(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  *(_QWORD *)this = &off_1E25C0088;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(this, a2);
  return this;
}

void sub_18D0DC0F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v6;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v7;
  const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v8;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v9;
  const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v10;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v11;
  const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v12;
  uint64_t v13;
  int v14;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation *v15;
  const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *v16;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *v17;
  const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *v18;
  _BYTE v19[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 72);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 72) & 1) != 0)
  {
    *((_DWORD *)v3 + 18) |= 1u;
    v5 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v5)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)operator new();
      v5 = this;
      *(_QWORD *)this = &off_1E25C0A60;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v6 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v6 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v5, v6);
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0)
        goto LABEL_7;
      goto LABEL_23;
    }
  }
  else if ((*((_BYTE *)a2 + 72) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 18) |= 2u;
  v7 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((_QWORD *)v3 + 2);
  if (!v7)
  {
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)operator new();
    v7 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25C04C0;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)this + 4) = 0;
    *((_QWORD *)v3 + 2) = this;
  }
  v8 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((_QWORD *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    v8 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(v7, v8);
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0)
      goto LABEL_8;
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)v3 + 18) |= 4u;
  v9 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((_QWORD *)v3 + 3);
  if (!v9)
  {
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)operator new();
    v9 = this;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *(_QWORD *)this = &off_1E25C04C0;
    *((_DWORD *)this + 6) = 0;
    *((_QWORD *)this + 4) = 0;
    *((_QWORD *)v3 + 3) = this;
  }
  v10 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((_QWORD *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    v10 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                          + 24);
  }
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(v9, v10);
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0)
      goto LABEL_9;
    goto LABEL_33;
  }
LABEL_28:
  *((_DWORD *)v3 + 18) |= 8u;
  v11 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((_QWORD *)v3 + 4);
  if (!v11)
  {
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)operator new();
    v11 = this;
    *(_QWORD *)this = &off_1E25C0358;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 4) = this;
  }
  v12 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((_QWORD *)a2 + 4);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    v12 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                        + 32);
  }
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(v11, v12);
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0)
      goto LABEL_10;
LABEL_34:
    v14 = *((_DWORD *)a2 + 16);
    if ((v14 + 1) >= 4)
      __assert_rtn("set_global_reference_frame", "CoreNavigationCLPVisionEvent.pb.h", 4296, "::CoreNavigation::CLP::LogEntry::Vision::LSLGlobalReferenceFrame_IsValid(value)");
    *((_DWORD *)v3 + 18) |= 0x20u;
    *((_DWORD *)v3 + 16) = v14;
    v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_33:
  v13 = *((_QWORD *)a2 + 5);
  *((_DWORD *)v3 + 18) |= 0x10u;
  *((_QWORD *)v3 + 5) = v13;
  v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0)
    goto LABEL_34;
LABEL_10:
  if ((v4 & 0x40) == 0)
    goto LABEL_11;
LABEL_36:
  *((_DWORD *)v3 + 18) |= 0x40u;
  v15 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)*((_QWORD *)v3 + 6);
  if (!v15)
  {
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)operator new();
    v15 = this;
    *(_QWORD *)this = &off_1E25C01F0;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 6) = this;
  }
  v16 = (const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)*((_QWORD *)a2 + 6);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    v16 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLLocation **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                       + 48);
  }
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(v15, v16);
  if ((*((_DWORD *)a2 + 18) & 0x80) != 0)
  {
LABEL_41:
    *((_DWORD *)v3 + 18) |= 0x80u;
    v17 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)*((_QWORD *)v3 + 7);
    if (!v17)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)operator new();
      v17 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25C05B0;
      *((_QWORD *)v3 + 7) = this;
    }
    v18 = (const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)*((_QWORD *)a2 + 7);
    if (!v18)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v18 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                                 + 56);
    }
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(v17, v18);
  }
}

void sub_18D0DC4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::~LSLHeading(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  *(_QWORD *)this = &off_1E25C0088;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::~LSLHeading(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 6);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 7);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::New(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C0088;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 64) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 72) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 72);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 72) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 72);
      }
    }
    if ((v2 & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(int *)(v4 + 16) >= 1)
        {
          v5 = 0;
          do
          {
            v6 = *(_QWORD *)(*(_QWORD *)(v4 + 8) + 8 * v5);
            this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v6 + 32))(v6);
            ++v5;
          }
          while (v5 < *(int *)(v4 + 16));
        }
        *(_DWORD *)(v4 + 16) = 0;
        *(_DWORD *)(v4 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 4) != 0)
    {
      v7 = *(_QWORD *)(v1 + 24);
      if (v7)
      {
        if (*(int *)(v7 + 16) >= 1)
        {
          v8 = 0;
          do
          {
            v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8) + 8 * v8);
            this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v9 + 32))(v9);
            ++v8;
          }
          while (v8 < *(int *)(v7 + 16));
        }
        *(_DWORD *)(v7 + 16) = 0;
        *(_DWORD *)(v7 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 8) != 0)
    {
      v10 = *(_QWORD *)(v1 + 32);
      if (v10)
      {
        *(_DWORD *)(v10 + 16) = 0;
        *(_DWORD *)(v10 + 28) = 0;
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    *(_QWORD *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 64) = -1;
    if ((v2 & 0x40) != 0)
    {
      this = *(_QWORD *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::LSLLocation::Clear(this);
        v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      v11 = *(_QWORD *)(v1 + 56);
      if (v11)
      {
        if ((*(_BYTE *)(v11 + 20) & 1) != 0)
        {
          this = *(_QWORD *)(v11 + 8);
          if (this)
            this = CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::Clear(this);
        }
        *(_DWORD *)(v11 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::Clear(uint64_t this)
{
  uint64_t v1;

  v1 = this;
  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    this = *(_QWORD *)(this + 8);
    if (this)
      this = CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::Clear(this);
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  BOOL v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  int v22;
  _BYTE *v23;
  uint64_t v24;
  char *v25;
  int v26;
  int v27;
  int v28;
  int v29;
  _BYTE *v30;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  _BYTE *v37;
  _BYTE *v38;
  unsigned int v39;
  uint64_t result;
  _BYTE *v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  _BYTE *v48;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *v49;
  char *v50;
  int v51;
  int v52;
  int v53;
  int v54;
  unsigned int v55[2];

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_27;
        *((_DWORD *)this + 18) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0A60;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v55[0] = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0;
        }
        else
        {
          v55[0] = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v11 = *((_DWORD *)a2 + 14);
        v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v13 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v13, 1);
        v15 = v13 - 1;
        if (v15 < 0 == v14)
          *((_DWORD *)a2 + 14) = v15;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
        goto LABEL_39;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_27;
LABEL_39:
        *((_DWORD *)this + 18) |= 2u;
        v17 = *((_QWORD *)this + 2);
        if (!v17)
        {
          v17 = operator new();
          *(_QWORD *)(v17 + 8) = 0;
          *(_QWORD *)(v17 + 16) = 0;
          *(_QWORD *)v17 = &off_1E25C04C0;
          *(_DWORD *)(v17 + 24) = 0;
          *(_QWORD *)(v17 + 32) = 0;
          *((_QWORD *)this + 2) = v17;
        }
        v55[0] = 0;
        v18 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0;
        }
        else
        {
          v55[0] = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)v17, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v21, 1);
        v22 = v21 - 1;
        if (v22 < 0 == v14)
          *((_DWORD *)a2 + 14) = v22;
        v23 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v23 >= *((_QWORD *)a2 + 2) || *v23 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v23 + 1;
LABEL_53:
        *((_DWORD *)this + 18) |= 4u;
        v24 = *((_QWORD *)this + 3);
        if (!v24)
        {
          v24 = operator new();
          *(_QWORD *)(v24 + 8) = 0;
          *(_QWORD *)(v24 + 16) = 0;
          *(_QWORD *)v24 = &off_1E25C04C0;
          *(_DWORD *)(v24 + 24) = 0;
          *(_QWORD *)(v24 + 32) = 0;
          *((_QWORD *)this + 3) = v24;
        }
        v55[0] = 0;
        v25 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v25 >= *((_QWORD *)a2 + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0;
        }
        else
        {
          v55[0] = *v25;
          *((_QWORD *)a2 + 1) = v25 + 1;
        }
        v26 = *((_DWORD *)a2 + 14);
        v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)v24, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v28 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v28, 1);
        v29 = v28 - 1;
        if (v29 < 0 == v14)
          *((_DWORD *)a2 + 14) = v29;
        v30 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v30 >= *((_QWORD *)a2 + 2) || *v30 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v30 + 1;
LABEL_67:
        *((_DWORD *)this + 18) |= 8u;
        v31 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((_QWORD *)this + 4);
        if (!v31)
        {
          v31 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)operator new();
          *(_QWORD *)v31 = &off_1E25C0358;
          *((_QWORD *)v31 + 1) = 0;
          *((_QWORD *)v31 + 2) = 0;
          *((_QWORD *)v31 + 3) = 0;
          *((_QWORD *)this + 4) = v31;
        }
        v55[0] = 0;
        v32 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v32 >= *((_QWORD *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0;
        }
        else
        {
          v55[0] = *v32;
          *((_QWORD *)a2 + 1) = v32 + 1;
        }
        v33 = *((_DWORD *)a2 + 14);
        v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(v31, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v35 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v35, 1);
        v36 = v35 - 1;
        if (v36 < 0 == v14)
          *((_DWORD *)a2 + 14) = v36;
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_81:
        *(_QWORD *)v55 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v55) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v55;
        *((_DWORD *)this + 18) |= 0x10u;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v38 >= v9 || *v38 != 48)
          continue;
        v10 = v38 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_85:
        v55[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55);
          if (!(_DWORD)result)
            return result;
          v39 = v55[0];
        }
        else
        {
          v39 = *v10;
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v39 + 1 <= 3)
        {
          *((_DWORD *)this + 18) |= 0x20u;
          *((_DWORD *)this + 16) = v39;
        }
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 58)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_95:
        *((_DWORD *)this + 18) |= 0x40u;
        v42 = *((_QWORD *)this + 6);
        if (!v42)
        {
          v42 = operator new();
          *(_QWORD *)v42 = &off_1E25C01F0;
          *(_OWORD *)(v42 + 8) = 0u;
          *(_OWORD *)(v42 + 24) = 0u;
          *((_QWORD *)this + 6) = v42;
        }
        v55[0] = 0;
        v43 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0;
        }
        else
        {
          v55[0] = *v43;
          *((_QWORD *)a2 + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)a2 + 14);
        v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)v42, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v46 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v14)
          *((_DWORD *)a2 + 14) = v47;
        v48 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v48 >= *((_QWORD *)a2 + 2) || *v48 != 66)
          continue;
        *((_QWORD *)a2 + 1) = v48 + 1;
LABEL_109:
        *((_DWORD *)this + 18) |= 0x80u;
        v49 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)*((_QWORD *)this + 7);
        if (!v49)
        {
          v49 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)operator new();
          *((_QWORD *)v49 + 1) = 0;
          *((_QWORD *)v49 + 2) = 0;
          *(_QWORD *)v49 = &off_1E25C05B0;
          *((_QWORD *)this + 7) = v49;
        }
        v55[0] = 0;
        v50 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0;
        }
        else
        {
          v55[0] = *v50;
          *((_QWORD *)a2 + 1) = v50 + 1;
        }
        v51 = *((_DWORD *)a2 + 14);
        v52 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v51 + 1;
        if (v51 >= v52)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergePartialFromCodedStream(v49, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v53 = *((_DWORD *)a2 + 14);
        v14 = __OFSUB__(v53, 1);
        v54 = v53 - 1;
        if (v54 < 0 == v14)
          *((_DWORD *)a2 + 14) = v54;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_53;
        goto LABEL_27;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_67;
        goto LABEL_27;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_81;
        goto LABEL_27;
      case 6u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_27;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_85;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_95;
        goto LABEL_27;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_27;
        goto LABEL_109;
      default:
        v6 = TagFallback & 7;
LABEL_27:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = this;
  v6 = *(_DWORD *)(this + 72);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_19;
  }
LABEL_16:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_22;
  }
LABEL_19:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    goto LABEL_27;
  }
LABEL_24:
  v11 = *(_QWORD *)(v5 + 48);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x80) != 0)
  {
LABEL_27:
    v12 = *(_QWORD *)(v5 + 56);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  uint64_t v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation *v19;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *v20;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v21;
  int v22;
  int v23;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 72);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_58;
  }
  if ((*(_BYTE *)(this + 72) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(this + 72) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *(_DWORD *)(v1 + 72);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                     + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      this = 1;
    v3 += v10 + this + 1;
    v2 = *(_DWORD *)(v1 + 72);
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_36;
    goto LABEL_30;
  }
  v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(v1 + 24);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                    + 24);
  }
  v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(v11);
  v13 = (int)v12;
  if (v12 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  else
    this = 1;
  v3 += v13 + this + 1;
  v2 = *(_DWORD *)(v1 + 72);
  if ((v2 & 8) != 0)
  {
LABEL_30:
    v14 = *(_QWORD *)(v1 + 32);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 32);
    }
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(9 * *(_DWORD *)(v14 + 16));
    *(_DWORD *)(v14 + 24) = (_DWORD)v15;
    if (v15 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    else
      v16 = 1;
    v3 += (_DWORD)v15 + v16 + 1;
    v2 = *(_DWORD *)(v1 + 72);
  }
LABEL_36:
  if ((v2 & 0x10) != 0)
    v4 = v3 + 9;
  else
    v4 = v3;
  if ((v2 & 0x20) != 0)
  {
    v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 64);
    if ((v17 & 0x80000000) != 0)
    {
      v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
      v2 = *(_DWORD *)(v1 + 72);
    }
    else
    {
      v18 = 2;
    }
    v4 = (v18 + v4);
    if ((v2 & 0x40) == 0)
    {
LABEL_41:
      if ((v2 & 0x80) == 0)
        goto LABEL_58;
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_41;
  }
  v19 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocation **)(v1 + 48);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    v19 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocation **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                 + 48);
  }
  v4 = v4 + CoreNavigation::CLP::LogEntry::Vision::LSLLocation::ByteSize(v19) + 2;
  if ((*(_DWORD *)(v1 + 72) & 0x80) != 0)
  {
LABEL_52:
    v20 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo **)(v1 + 56);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v20 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                           + 56);
    }
    v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::ByteSize(v20);
    v22 = (int)v21;
    if (v21 >= 0x80)
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
    else
      v23 = 1;
    v4 = (v4 + v22 + v23 + 1);
  }
LABEL_58:
  *(_DWORD *)(v1 + 68) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *v3;
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *v4;
  const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *v5;
  _BYTE v6[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if ((*((_BYTE *)a2 + 20) & 1) != 0)
  {
    *((_DWORD *)v3 + 5) |= 1u;
    v4 = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)*((_QWORD *)v3 + 1);
    if (!v4)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)operator new();
      v4 = this;
      *((_QWORD *)this + 5) = 0;
      *(_QWORD *)this = &off_1E25C0538;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_DWORD *)this + 8) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v5 = (const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)*((_QWORD *)a2 + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v5 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_
                                                                              + 8);
    }
    CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(v4, v5);
  }
}

void sub_18D0DD4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    result = *((double *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((double *)a2 + 5) = result;
    LODWORD(v5) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
    v7 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    LODWORD(v8) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v8;
    LODWORD(v8) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLHeading::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLHeading");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::LSLMapRoadSegment(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25C0538;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(this, a2);
  return this;
}

void sub_18D0DD668(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(*((_QWORD *)a2 + 2) + 8 * v4);
      v6 = *((_DWORD *)this + 7);
      v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)((char *)this + 16));
          v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)operator new();
        *(_QWORD *)v9 = &off_1E25C0790;
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *((_QWORD *)v9 + 3) = 0;
        v10 = *((_QWORD *)this + 2);
        v11 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v7 + 1;
        v9 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    v12 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 11) |= 1u;
    *((_QWORD *)this + 1) = v12;
  }
}

void sub_18D0DD7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::~LSLMapRoadSegment(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  *(_QWORD *)this = &off_1E25C0538;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::~LSLMapRoadSegment(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::New(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25C0538;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 44))
    *(_QWORD *)(this + 8) = 0;
  if (*(int *)(this + 24) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unint64_t *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  char *v9;
  unint64_t v10;
  _BYTE *v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  uint64_t v15;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  int v21;
  int v22;
  BOOL v23;
  int v24;
  _BYTE *v25;
  unsigned int v26;

  v4 = (unint64_t *)((char *)this + 8);
  v5 = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_16;
        v9 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v11 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v9;
          v11 = v9 + 1;
          *((_QWORD *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 11) |= 1u;
        if ((unint64_t)v11 < v10 && *v11 == 18)
          goto LABEL_23;
      }
      if (TagFallback >> 3 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_16;
      while (1)
      {
        v13 = *((_DWORD *)this + 7);
        v14 = *((int *)this + 6);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            v13 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v13 + 1;
          v16 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)operator new();
          *(_QWORD *)v16 = &off_1E25C0790;
          *((_QWORD *)v16 + 1) = 0;
          *((_QWORD *)v16 + 2) = 0;
          *((_QWORD *)v16 + 3) = 0;
          v17 = *((_QWORD *)this + 2);
          v18 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v18 + 1;
          *(_QWORD *)(v17 + 8 * v18) = v16;
        }
        else
        {
          v15 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v14 + 1;
          v16 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(v15 + 8 * v14);
        }
        v26 = 0;
        v19 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26))return 0;
        }
        else
        {
          v26 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        v20 = *((_DWORD *)a2 + 14);
        v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergePartialFromCodedStream(v16, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v22 = *((_DWORD *)a2 + 14);
        v23 = __OFSUB__(v22, 1);
        v24 = v22 - 1;
        if (v24 < 0 == v23)
          *((_DWORD *)a2 + 14) = v24;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        v25 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v11 >= v25 || *v11 != 18)
          break;
LABEL_23:
        *((_QWORD *)a2 + 1) = v11 + 1;
      }
      if (v11 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2;
  uint64_t v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  if ((*((_BYTE *)this + 44) & 1) != 0)
    v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  else
    v2 = 0;
  v3 = *((unsigned int *)this + 6);
  result = (v3 + v2);
  if ((int)v3 >= 1)
  {
    v5 = this[2];
    do
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)v5 + 28);
      if (*(_BYTE *)(*(_QWORD *)v5 + 28))
      {
        if ((v6 & 2) != 0)
          v6 = ((v6 << 31 >> 31) & 9) + 9;
        else
          v6 = (v6 << 31 >> 31) & 9;
      }
      *(_DWORD *)(*(_QWORD *)v5 + 24) = v6;
      result = (result + v6 + 1);
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((char *)v5 + 8);
      --v3;
    }
    while (v3);
  }
  *((_DWORD *)this + 10) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLMapRoadSegment");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::LSLHeadingSupplInfo(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25C05B0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0DDE54(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::~LSLHeadingSupplInfo(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C05B0;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::~LSLHeadingSupplInfo(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::New(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  result[1] = 0;
  result[2] = 0;
  *result = &off_1E25C05B0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  uint64_t v6;
  char *v7;
  int v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;
  uint64_t result;
  unsigned int v14;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
      }
      if ((_DWORD)TagFallback != 10)
        break;
      *((_DWORD *)this + 5) |= 1u;
      v6 = *((_QWORD *)this + 1);
      if (!v6)
      {
        v6 = operator new();
        *(_QWORD *)(v6 + 40) = 0;
        *(_QWORD *)v6 = &off_1E25C0538;
        *(_QWORD *)(v6 + 8) = 0;
        *(_QWORD *)(v6 + 16) = 0;
        *(_QWORD *)(v6 + 24) = 0;
        *(_DWORD *)(v6 + 32) = 0;
        *((_QWORD *)this + 1) = v6;
      }
      v14 = 0;
      v7 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14))
          return 0;
      }
      else
      {
        v14 = *v7;
        *((_QWORD *)a2 + 1) = v7 + 1;
      }
      v8 = *((_DWORD *)a2 + 14);
      v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9)
        return 0;
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)v6, a2)|| !*((_BYTE *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      v10 = *((_DWORD *)a2 + 14);
      v11 = __OFSUB__(v10, 1);
      v12 = v10 - 1;
      if (v12 < 0 == v11)
        *((_DWORD *)a2 + 14) = v12;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      break;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;

  if ((*(_BYTE *)(this + 20) & 1) != 0)
  {
    v5 = *(_QWORD *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream **v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;

  if ((*((_BYTE *)this + 20) & 1) != 0)
  {
    v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream **)*((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v3 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream ***)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_
                                                                              + 8);
    }
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::ByteSize(v3);
    v5 = (int)v4;
    if (v4 >= 0x80)
      v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    else
      v6 = 1;
    result = (v5 + v6 + 1);
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  uint64_t v2;

  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)this)
  {
    v2 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLHeadingSupplInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  double result;

  *(_QWORD *)&result = 0x8FFFFFFFFLL;
  *((_OWORD *)this + 2) = xmmword_18D30ECE0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::LSLHeadingEstimation(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  *((_QWORD *)this + 1) = 0;
  *(_QWORD *)this = &off_1E25C0628;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_OWORD *)this + 2) = xmmword_18D30ECE0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(this, a2);
  return this;
}

void sub_18D0DE390(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  _BYTE v15[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLHeading **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E25C0088;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_QWORD *)(v9 + 64) = 0xFFFFFFFFLL;
        *(_DWORD *)(v9 + 72) = 0;
        *(_QWORD *)(v9 + 48) = 0;
        *(_QWORD *)(v9 + 56) = 0;
        *(_QWORD *)(v9 + 40) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom((CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  LOBYTE(v12) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v12)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      v13 = *((_DWORD *)a2 + 8);
      if ((v13 + 1) >= 6)
        __assert_rtn("set_status_deprecated", "CoreNavigationCLPVisionEvent.pb.h", 4504, "::CoreNavigation::CLP::LogEntry::Vision::LSLStatus_DEPRECATED_IsValid(value)");
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 8) = v13;
      v12 = *((_DWORD *)a2 + 11);
    }
    if ((v12 & 4) != 0)
    {
      v14 = *((_DWORD *)a2 + 9);
      if (v14 >= 9)
        __assert_rtn("set_status", "CoreNavigationCLPVisionEvent.pb.h", 4552, "::CoreNavigation::CLP::LogEntry::Vision::LSLHeadingStatus_IsValid(value)");
      *((_DWORD *)this + 11) |= 4u;
      *((_DWORD *)this + 9) = v14;
    }
  }
}

void sub_18D0DE5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::~LSLHeadingEstimation(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  *(_QWORD *)this = &off_1E25C0628;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::~LSLHeadingEstimation(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::New(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)v1 = &off_1E25C0628;
  *(_DWORD *)(v1 + 24) = 0;
  *(_QWORD *)&result = 0x8FFFFFFFFLL;
  *(_OWORD *)(v1 + 32) = xmmword_18D30ECE0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(_BYTE *)(this + 44))
    *(_QWORD *)(this + 32) = 0x8FFFFFFFFLL;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  unsigned int v7;
  int v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unsigned int v12;
  uint64_t result;
  _BYTE *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  BOOL v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;

  v4 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
LABEL_2:
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1)
        break;
      v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_19;
      v30 = 0;
      v11 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
        if (!(_DWORD)result)
          return result;
        v12 = v30;
      }
      else
      {
        v12 = *v11;
        *((_QWORD *)a2 + 1) = v11 + 1;
      }
      if (v12 + 1 <= 5)
      {
        *((_DWORD *)this + 11) |= 1u;
        *((_DWORD *)this + 8) = v12;
      }
      v14 = (_BYTE *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v14 < *((_QWORD *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_29:
          v15 = *((_DWORD *)this + 5);
          v16 = *((int *)this + 4);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v15 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v15 + 1;
            v18 = operator new();
            *(_QWORD *)v18 = &off_1E25C0088;
            *(_OWORD *)(v18 + 8) = 0u;
            *(_OWORD *)(v18 + 24) = 0u;
            *(_QWORD *)(v18 + 64) = 0xFFFFFFFFLL;
            *(_DWORD *)(v18 + 72) = 0;
            *(_QWORD *)(v18 + 48) = 0;
            *(_QWORD *)(v18 + 56) = 0;
            *(_QWORD *)(v18 + 40) = 0;
            v19 = *((_QWORD *)this + 1);
            v20 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v20 + 1;
            *(_QWORD *)(v19 + 8 * v20) = v18;
          }
          else
          {
            v17 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v16 + 1;
            v18 = *(_QWORD *)(v17 + 8 * v16);
          }
          v31 = 0;
          v21 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0;
          }
          else
          {
            v31 = *v21;
            *((_QWORD *)a2 + 1) = v21 + 1;
          }
          v22 = *((_DWORD *)a2 + 14);
          v23 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v22 + 1;
          if (v22 >= v23)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)v18, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v24 = *((_DWORD *)a2 + 14);
          v25 = __OFSUB__(v24, 1);
          v26 = v24 - 1;
          if (v26 < 0 == v25)
            *((_DWORD *)a2 + 14) = v26;
          v14 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v14 >= v10)
            break;
          v27 = *v14;
          if (v27 != 18)
          {
            if (v27 == 24)
            {
              v9 = v14 + 1;
              *((_QWORD *)a2 + 1) = v9;
LABEL_47:
              v29 = 0;
              if ((unint64_t)v9 >= v10 || *v9 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
                if (!(_DWORD)result)
                  return result;
                v28 = v29;
              }
              else
              {
                v28 = *v9;
                *((_QWORD *)a2 + 1) = v9 + 1;
              }
              if (v28 <= 8)
              {
                *((_DWORD *)this + 11) |= 4u;
                *((_DWORD *)this + 9) = v28;
              }
              if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_19;
      goto LABEL_29;
    }
    if (v7 == 3)
    {
      v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v9 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_47;
      }
    }
    else
    {
      v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  if (*(int *)(v5 + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(_BYTE *)(v5 + 44) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  char v2;
  int v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  v2 = *((_BYTE *)this + 44);
  if (!v2)
  {
    v3 = 0;
    goto LABEL_19;
  }
  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 4) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 11) & 4) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 4) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 44) & 4) == 0)
      goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v5 & 0x80000000) != 0)
  {
    v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else
  {
    v6 = 2;
  }
  v3 += v6;
LABEL_19:
  v7 = *((_DWORD *)this + 4);
  v8 = (v7 + v3);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::ByteSize(*(_QWORD *)(*((_QWORD *)this + 1) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 4));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    v7 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLHeadingEstimation");
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocation::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocation *CoreNavigation::CLP::LogEntry::Vision::VLLocation::VLLocation(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  *(_QWORD *)this = &off_1E25C0100;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(this, a2);
  return this;
}

void sub_18D0DED7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocation *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v6;
  const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v7;
  _BYTE v8[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      *((_DWORD *)v3 + 7) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::VLLocation *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25C0358;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *((_QWORD *)this + 3) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_
                                                                           + 8);
      }
      CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)v3 + 7) |= 2u;
      *((double *)v3 + 2) = result;
    }
  }
  return result;
}

void sub_18D0DEE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocation::~VLLocation(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C0100;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VLLocation *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VLLocation::~VLLocation(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocation::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VLLocation *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocation::New(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0100;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 28))
  {
    if ((*(_BYTE *)(this + 28) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        *(_DWORD *)(v1 + 16) = 0;
        *(_DWORD *)(v1 + 28) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  uint64_t result;
  unint64_t v16;
  unsigned int v17;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_17;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
      {
LABEL_29:
        v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v16) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v16;
        *((_DWORD *)this + 7) |= 2u;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
      else
      {
LABEL_17:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
      }
    }
    v6 = TagFallback & 7;
    if (v6 != 2)
      goto LABEL_17;
    *((_DWORD *)this + 7) |= 1u;
    v7 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((_QWORD *)this + 1);
    if (!v7)
    {
      v7 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)operator new();
      *(_QWORD *)v7 = &off_1E25C0358;
      *((_QWORD *)v7 + 1) = 0;
      *((_QWORD *)v7 + 2) = 0;
      *((_QWORD *)v7 + 3) = 0;
      *((_QWORD *)this + 1) = v7;
    }
    v17 = 0;
    v8 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v17))
        return 0;
    }
    else
    {
      v17 = *v8;
      *((_QWORD *)a2 + 1) = v8 + 1;
    }
    v9 = *((_DWORD *)a2 + 14);
    v10 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v9 + 1;
    if (v9 >= v10)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(v7, a2)
      || !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v11 = *((_DWORD *)a2 + 14);
    v12 = __OFSUB__(v11, 1);
    v13 = v11 - 1;
    if (v13 < 0 == v12)
      *((_DWORD *)a2 + 14) = v13;
    v14 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v14 < *((_QWORD *)a2 + 2) && *v14 == 17)
    {
      *((_QWORD *)a2 + 1) = v14 + 1;
      goto LABEL_29;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  }
  v7 = *(_QWORD *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ + 8);
      }
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(9 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = (_DWORD)v6;
      if (v6 >= 0x80)
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      else
        v7 = 1;
      v3 = (_DWORD)v6 + v7 + 1;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 9;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocation *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  uint64_t v2;
  double result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocation");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::VLVectorfM(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  *(_QWORD *)this = &off_1E25C0178;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(this, a2);
  return this;
}

void sub_18D0DF484(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;

  v3 = v2;
  if (*v3)
    MEMORY[0x18D78B5BC](*v3, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  int v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    sub_18D0D44E8((_DWORD *)this + 2, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((_QWORD *)this + 1) + 4 * *((int *)this + 4)), *((const void **)a2 + 1), 4 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
}

void sub_18D0DF568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::~VLVectorfM(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25C0178;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  v2 = *((_QWORD *)this + 1);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::~VLVectorfM(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::New(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0178;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t result;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  signed int v15;
  int v16;
  int v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  unsigned int v21[12];

  v4 = (_DWORD *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v7 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8)
        break;
      if (v7 != 2)
      {
        if (v7 != 5)
          break;
        goto LABEL_15;
      }
      result = sub_18D0D5C68(a2, v4);
      if (!(_DWORD)result)
        return result;
      while (1)
      {
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v19 >= v20 || *v19 != 13)
          break;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_15:
        v21[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v21) & 1) == 0)
          return 0;
        v9 = v21[0];
        v10 = *((_DWORD *)this + 4);
        if (v10 == *((_DWORD *)this + 5))
        {
          sub_18D0D44E8(v4, v10 + 1);
          v10 = *((_DWORD *)this + 4);
        }
        v11 = *((_QWORD *)this + 1);
        v12 = v10 + 1;
        *((_DWORD *)this + 4) = v10 + 1;
        *(_DWORD *)(v11 + 4 * v10) = v9;
        v13 = *((_QWORD *)a2 + 1);
        v14 = *((_DWORD *)a2 + 4) - v13;
        if (v14 >= 1)
        {
          v15 = v14 / 5u;
          v16 = v15 >= *((_DWORD *)this + 5) - v12 ? *((_DWORD *)this + 5) - v12 : v15;
          if (v16 >= 1)
          {
            v17 = 0;
            while (*(_BYTE *)v13 == 13)
            {
              v18 = *(_DWORD *)(v13 + 1);
              if (v12 >= *((_DWORD *)this + 5))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
                v12 = *((_DWORD *)this + 4);
                v11 = *((_QWORD *)this + 1);
              }
              *((_DWORD *)this + 4) = v12 + 1;
              *(_DWORD *)(v11 + 4 * v12) = v18;
              ++v17;
              v13 += 5;
              ++v12;
              if (v16 == v17)
              {
                v17 = v16;
                break;
              }
            }
            if (v17)
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
          }
        }
      }
      if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

void sub_18D0DF8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  uint64_t v5;

  if (*(int *)(this + 16) >= 1)
  {
    v4 = this;
    v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(*(_QWORD *)(v4 + 8) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  uint64_t v1;

  v1 = (5 * *((_DWORD *)this + 4));
  *((_DWORD *)this + 6) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::Swap(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  uint64_t v2;
  double result;
  uint64_t v4;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    result = *((double *)a2 + 2);
    *((_QWORD *)a2 + 1) = v2;
    v4 = *((_QWORD *)this + 2);
    *((double *)this + 2) = result;
    *((_QWORD *)a2 + 2) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VLVectorfM");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::VLMatrixfMxN(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  *(_QWORD *)this = &off_1E25C02E0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(this, a2);
  return this;
}

void sub_18D0DFACC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = (CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *)operator new();
        *(_QWORD *)v9 = &off_1E25C0178;
        *((_QWORD *)v9 + 1) = 0;
        *((_QWORD *)v9 + 2) = 0;
        *((_QWORD *)v9 + 3) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM **)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
}

void sub_18D0DFC34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::~VLMatrixfMxN(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  *(_QWORD *)this = &off_1E25C02E0;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::~VLMatrixfMxN(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::New(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25C02E0;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  uint64_t v9;
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t result;
  unsigned int v22;

  v4 = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
    }
    if ((_DWORD)TagFallback == 10)
    {
      while (1)
      {
        v7 = *((_DWORD *)this + 5);
        v8 = *((int *)this + 4);
        if ((int)v8 >= v7)
        {
          if (v7 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v7 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v7 + 1;
          v10 = (CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *)operator new();
          *(_QWORD *)v10 = &off_1E25C0178;
          *((_QWORD *)v10 + 1) = 0;
          *((_QWORD *)v10 + 2) = 0;
          *((_QWORD *)v10 + 3) = 0;
          v11 = *((_QWORD *)this + 1);
          v12 = *((int *)this + 4);
          *((_DWORD *)this + 4) = v12 + 1;
          *(_QWORD *)(v11 + 8 * v12) = v10;
        }
        else
        {
          v9 = *((_QWORD *)this + 1);
          *((_DWORD *)this + 4) = v8 + 1;
          v10 = *(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM **)(v9 + 8 * v8);
        }
        v22 = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0;
        }
        else
        {
          v22 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergePartialFromCodedStream(v10, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        v20 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v19 >= v20 || *v19 != 10)
        {
          if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((_QWORD *)a2 + 1) = v19 + 1;
      }
    }
    if (!(_DWORD)TagFallback || (TagFallback & 7) == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(int *)(this + 16) >= 1)
  {
    v5 = this;
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;

  v2 = *((_DWORD *)this + 4);
  if (v2 < 1)
  {
    v4 = *((unsigned int *)this + 4);
  }
  else
  {
    v3 = 0;
    LODWORD(v4) = *((_DWORD *)this + 4);
    do
    {
      v5 = *(_QWORD *)(*((_QWORD *)this + 1) + 8 * v3);
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(5 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = (_DWORD)v6;
      if (v6 >= 0x80)
      {
        v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        v2 = *((_DWORD *)this + 4);
      }
      else
      {
        v7 = 1;
      }
      v4 = ((_DWORD)v6 + v4 + v7);
      ++v3;
    }
    while (v3 < v2);
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::Swap(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v3 = this;
    this = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    v5 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VLMatrixfMxN");
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  this[1] = 0;
  v1 = MEMORY[0x1E0DE8338];
  this[10] = 0;
  this[13] = 0;
  this[14] = v1;
  this[21] = 0;
  this[34] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::VLLocalizationMaps488Details(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  uint64_t v3;

  *(_OWORD *)((char *)this + 120) = 0u;
  *(_QWORD *)this = &off_1E25C08F8;
  *((_OWORD *)this + 11) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_DWORD *)this + 68) = 0;
  v3 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 14) = v3;
  *((_QWORD *)this + 21) = 0;
  *((_DWORD *)this + 69) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(this, a2);
  return this;
}

void sub_18D0E0290(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *((_QWORD *)v1 + 32);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8000313F17);
  v6 = *((_QWORD *)v1 + 30);
  if (v6)
    MEMORY[0x18D78B5BC](v6, 0x1000C8000313F17);
  v7 = *((_QWORD *)v1 + 28);
  if (v7)
    MEMORY[0x18D78B5BC](v7, 0x1000C8052888210);
  v8 = *((_QWORD *)v1 + 26);
  if (v8)
    MEMORY[0x18D78B5BC](v8, 0x1000C8052888210);
  v9 = *((_QWORD *)v1 + 24);
  if (v9)
    MEMORY[0x18D78B5BC](v9, 0x1000C8052888210);
  if (*v3)
    MEMORY[0x18D78B5BC](*v3, 0x1000C8052888210);
  v10 = *((_QWORD *)v1 + 19);
  if (v10)
    MEMORY[0x18D78B5BC](v10, 0x1000C8052888210);
  v11 = *((_QWORD *)v1 + 17);
  if (v11)
    MEMORY[0x18D78B5BC](v11, 0x1000C8052888210);
  if (*v2)
    MEMORY[0x18D78B5BC](*v2, 0x1000C8052888210);
  v12 = *((_QWORD *)v1 + 11);
  if (v12)
    MEMORY[0x18D78B5BC](v12, 0x1000C8052888210);
  v13 = *((_QWORD *)v1 + 8);
  if (v13)
    MEMORY[0x18D78B5BC](v13, 0x1000C8000313F17);
  v14 = *((_QWORD *)v1 + 6);
  if (v14)
    MEMORY[0x18D78B5BC](v14, 0x1000C8052888210);
  v15 = *((_QWORD *)v1 + 4);
  if (v15)
    MEMORY[0x18D78B5BC](v15, 0x1000C8000313F17);
  v16 = *((_QWORD *)v1 + 2);
  if (v16)
    MEMORY[0x18D78B5BC](v16, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  const std::string *v20;
  std::string *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18D0D44E8((_DWORD *)this + 4, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((_QWORD *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  v5 = *((_DWORD *)a2 + 10);
  if (v5)
  {
    sub_18D09EC0C((_DWORD *)this + 8, *((_DWORD *)this + 10) + v5);
    memcpy((void *)(*((_QWORD *)this + 4) + 8 * *((int *)this + 10)), *((const void **)a2 + 4), 8 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  v6 = *((_DWORD *)a2 + 14);
  if (v6)
  {
    sub_18D0D44E8((_DWORD *)this + 12, *((_DWORD *)this + 14) + v6);
    memcpy((void *)(*((_QWORD *)this + 6) + 4 * *((int *)this + 14)), *((const void **)a2 + 6), 4 * *((int *)a2 + 14));
    *((_DWORD *)this + 14) += *((_DWORD *)a2 + 14);
  }
  v7 = *((_DWORD *)a2 + 18);
  if (v7)
  {
    sub_18D09EC0C((_DWORD *)this + 16, *((_DWORD *)this + 18) + v7);
    memcpy((void *)(*((_QWORD *)this + 8) + 8 * *((int *)this + 18)), *((const void **)a2 + 8), 8 * *((int *)a2 + 18));
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
  }
  v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    sub_18D0D44E8((_DWORD *)this + 22, *((_DWORD *)this + 24) + v8);
    memcpy((void *)(*((_QWORD *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  v9 = *((_DWORD *)a2 + 32);
  if (v9)
  {
    sub_18D0D44E8((_DWORD *)this + 30, *((_DWORD *)this + 32) + v9);
    memcpy((void *)(*((_QWORD *)this + 15) + 4 * *((int *)this + 32)), *((const void **)a2 + 15), 4 * *((int *)a2 + 32));
    *((_DWORD *)this + 32) += *((_DWORD *)a2 + 32);
  }
  v10 = *((_DWORD *)a2 + 36);
  if (v10)
  {
    sub_18D0D44E8((_DWORD *)this + 34, *((_DWORD *)this + 36) + v10);
    memcpy((void *)(*((_QWORD *)this + 17) + 4 * *((int *)this + 36)), *((const void **)a2 + 17), 4 * *((int *)a2 + 36));
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
  }
  v11 = *((_DWORD *)a2 + 40);
  if (v11)
  {
    sub_18D0D44E8((_DWORD *)this + 38, *((_DWORD *)this + 40) + v11);
    memcpy((void *)(*((_QWORD *)this + 19) + 4 * *((int *)this + 40)), *((const void **)a2 + 19), 4 * *((int *)a2 + 40));
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
  }
  v12 = *((_DWORD *)a2 + 46);
  if (v12)
  {
    sub_18D0D44E8((_DWORD *)this + 44, *((_DWORD *)this + 46) + v12);
    memcpy((void *)(*((_QWORD *)this + 22) + 4 * *((int *)this + 46)), *((const void **)a2 + 22), 4 * *((int *)a2 + 46));
    *((_DWORD *)this + 46) += *((_DWORD *)a2 + 46);
  }
  v13 = *((_DWORD *)a2 + 50);
  if (v13)
  {
    sub_18D0D44E8((_DWORD *)this + 48, *((_DWORD *)this + 50) + v13);
    memcpy((void *)(*((_QWORD *)this + 24) + 4 * *((int *)this + 50)), *((const void **)a2 + 24), 4 * *((int *)a2 + 50));
    *((_DWORD *)this + 50) += *((_DWORD *)a2 + 50);
  }
  v14 = *((_DWORD *)a2 + 54);
  if (v14)
  {
    sub_18D0D44E8((_DWORD *)this + 52, *((_DWORD *)this + 54) + v14);
    memcpy((void *)(*((_QWORD *)this + 26) + 4 * *((int *)this + 54)), *((const void **)a2 + 26), 4 * *((int *)a2 + 54));
    *((_DWORD *)this + 54) += *((_DWORD *)a2 + 54);
  }
  v15 = *((_DWORD *)a2 + 58);
  if (v15)
  {
    sub_18D0D44E8((_DWORD *)this + 56, *((_DWORD *)this + 58) + v15);
    memcpy((void *)(*((_QWORD *)this + 28) + 4 * *((int *)this + 58)), *((const void **)a2 + 28), 4 * *((int *)a2 + 58));
    *((_DWORD *)this + 58) += *((_DWORD *)a2 + 58);
  }
  v16 = *((_DWORD *)a2 + 62);
  if (v16)
  {
    sub_18D09EC0C((_DWORD *)this + 60, *((_DWORD *)this + 62) + v16);
    memcpy((void *)(*((_QWORD *)this + 30) + 8 * *((int *)this + 62)), *((const void **)a2 + 30), 8 * *((int *)a2 + 62));
    *((_DWORD *)this + 62) += *((_DWORD *)a2 + 62);
  }
  v17 = *((_DWORD *)a2 + 66);
  if (v17)
  {
    sub_18D09EC0C((_DWORD *)this + 64, *((_DWORD *)this + 66) + v17);
    memcpy((void *)(*((_QWORD *)this + 32) + 8 * *((int *)this + 66)), *((const void **)a2 + 32), 8 * *((int *)a2 + 66));
    *((_DWORD *)this + 66) += *((_DWORD *)a2 + 66);
  }
  v18 = *((_DWORD *)a2 + 69);
  if ((_BYTE)v18)
  {
    if ((v18 & 1) != 0)
    {
      v23 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 69) |= 1u;
      *((_QWORD *)this + 1) = v23;
      v18 = *((_DWORD *)a2 + 69);
      if ((v18 & 0x20) == 0)
      {
LABEL_34:
        if ((v18 & 0x80) == 0)
          goto LABEL_36;
        goto LABEL_35;
      }
    }
    else if ((v18 & 0x20) == 0)
    {
      goto LABEL_34;
    }
    v24 = *((_QWORD *)a2 + 10);
    *((_DWORD *)this + 69) |= 0x20u;
    *((_QWORD *)this + 10) = v24;
    v18 = *((_DWORD *)a2 + 69);
    if ((v18 & 0x80) != 0)
    {
LABEL_35:
      v19 = *((_QWORD *)a2 + 13);
      *((_DWORD *)this + 69) |= 0x80u;
      *((_QWORD *)this + 13) = v19;
      v18 = *((_DWORD *)a2 + 69);
    }
  }
LABEL_36:
  if ((v18 & 0xFF00) != 0)
  {
    if ((v18 & 0x100) != 0)
    {
      v20 = (const std::string *)*((_QWORD *)a2 + 14);
      *((_DWORD *)this + 69) |= 0x100u;
      v21 = (std::string *)*((_QWORD *)this + 14);
      if (v21 == (std::string *)MEMORY[0x1E0DE8338])
      {
        v21 = (std::string *)operator new();
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 14) = v21;
      }
      std::string::operator=(v21, v20);
      v18 = *((_DWORD *)a2 + 69);
    }
    if ((v18 & 0x1000) != 0)
    {
      v22 = *((_QWORD *)a2 + 21);
      *((_DWORD *)this + 69) |= 0x1000u;
      *((_QWORD *)this + 21) = v22;
    }
  }
}

void sub_18D0E093C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::~VLLocalizationMaps488Details(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)this = &off_1E25C08F8;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SharedDtor(this);
  v2 = *((_QWORD *)this + 32);
  if (v2)
    MEMORY[0x18D78B5BC](v2, 0x1000C8000313F17);
  v3 = *((_QWORD *)this + 30);
  if (v3)
    MEMORY[0x18D78B5BC](v3, 0x1000C8000313F17);
  v4 = *((_QWORD *)this + 28);
  if (v4)
    MEMORY[0x18D78B5BC](v4, 0x1000C8052888210);
  v5 = *((_QWORD *)this + 26);
  if (v5)
    MEMORY[0x18D78B5BC](v5, 0x1000C8052888210);
  v6 = *((_QWORD *)this + 24);
  if (v6)
    MEMORY[0x18D78B5BC](v6, 0x1000C8052888210);
  v7 = *((_QWORD *)this + 22);
  if (v7)
    MEMORY[0x18D78B5BC](v7, 0x1000C8052888210);
  v8 = *((_QWORD *)this + 19);
  if (v8)
    MEMORY[0x18D78B5BC](v8, 0x1000C8052888210);
  v9 = *((_QWORD *)this + 17);
  if (v9)
    MEMORY[0x18D78B5BC](v9, 0x1000C8052888210);
  v10 = *((_QWORD *)this + 15);
  if (v10)
    MEMORY[0x18D78B5BC](v10, 0x1000C8052888210);
  v11 = *((_QWORD *)this + 11);
  if (v11)
    MEMORY[0x18D78B5BC](v11, 0x1000C8052888210);
  v12 = *((_QWORD *)this + 8);
  if (v12)
    MEMORY[0x18D78B5BC](v12, 0x1000C8000313F17);
  v13 = *((_QWORD *)this + 6);
  if (v13)
    MEMORY[0x18D78B5BC](v13, 0x1000C8052888210);
  v14 = *((_QWORD *)this + 4);
  if (v14)
    MEMORY[0x18D78B5BC](v14, 0x1000C8000313F17);
  v15 = *((_QWORD *)this + 2);
  if (v15)
    MEMORY[0x18D78B5BC](v15, 0x1000C8052888210);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::~VLLocalizationMaps488Details(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 14);
  if (v1 != MEMORY[0x1E0DE8338] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *)MEMORY[0x18D78B5D4](v1, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 272) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::New(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C08F8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 120) = 0u;
  *(_OWORD *)(v1 + 136) = 0u;
  *(_OWORD *)(v1 + 152) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_OWORD *)(v1 + 208) = 0u;
  *(_OWORD *)(v1 + 224) = 0u;
  *(_OWORD *)(v1 + 240) = 0u;
  *(_OWORD *)(v1 + 256) = 0u;
  v3 = MEMORY[0x1E0DE8338];
  *(_QWORD *)(v1 + 272) = 0;
  *(_QWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 112) = v3;
  *(_QWORD *)(v1 + 168) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(this + 276);
  if ((_BYTE)v1)
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 80) = 0;
    *(_QWORD *)(this + 104) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      v2 = *(_QWORD *)(this + 112);
      if (v2 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
    *(_QWORD *)(this + 168) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 160) = 0;
  *(_DWORD *)(this + 184) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(_DWORD *)(this + 216) = 0;
  *(_DWORD *)(this + 232) = 0;
  *(_DWORD *)(this + 248) = 0;
  *(_DWORD *)(this + 264) = 0;
  *(_DWORD *)(this + 276) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  _DWORD *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unint64_t v9;
  _BYTE *v10;
  uint64_t result;
  char *i;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  char *v17;
  int v18;
  unint64_t v19;
  char *j;
  char *k;
  unint64_t v22;
  unsigned __int8 *v23;
  char *v24;
  unsigned __int8 *v25;
  int v26;
  _BYTE *v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  int v31;
  int v32;
  _BYTE *v33;
  unint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  unsigned __int8 *v38;
  int v39;
  unsigned int v40;
  int v41;
  uint64_t v42;
  int v43;
  unsigned __int8 *v44;
  int v45;
  signed int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  unsigned __int8 *v56;
  int v57;
  signed int v58;
  int v59;
  int v60;
  uint64_t v61;
  unsigned __int8 *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  unsigned __int8 *v67;
  int v68;
  signed int v69;
  int v70;
  int v71;
  uint64_t v72;
  unsigned int v73;
  int v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  int v78;
  signed int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  signed int v90;
  int v91;
  int v92;
  uint64_t v93;
  int v94;
  unsigned int v95;
  int v96;
  uint64_t v97;
  int v98;
  int v99;
  _BYTE *v100;
  unint64_t v101;
  unsigned int v102;
  int v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  int v111;
  signed int v112;
  int v113;
  int v114;
  uint64_t v115;
  unsigned int v116;
  int v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  int v121;
  signed int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  _BYTE *v127;
  _QWORD *v128;
  _BYTE *v129;
  unsigned int v130;
  int v131;
  uint64_t v132;
  int v133;
  int v134;
  _BYTE *v135;
  unint64_t v136;
  unsigned int v137;
  int v138;
  uint64_t v139;
  unsigned __int8 *v140;
  int v141;
  unsigned int v142;
  int v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  signed int v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  int v154;
  uint64_t v155;
  int v156;
  int v157;
  _BYTE *v158;
  unint64_t v159;
  unsigned int v160;
  int v161;
  uint64_t v162;
  unsigned __int8 *v163;
  int v164;
  unsigned int v165;
  int v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  int v170;
  signed int v171;
  int v172;
  int v173;
  int v174;
  unint64_t v175;
  int v176;
  unsigned int v177;
  int v178;
  uint64_t v179;
  int v180;
  unsigned __int8 *v181;
  int v182;
  signed int v183;
  int v184;
  int v185;
  int v186;
  unint64_t *v187;
  _DWORD *v188;
  _DWORD *v189;
  _DWORD *v190;
  _DWORD *v191;
  unint64_t *v192;
  unint64_t *v193;
  _DWORD *v194;
  unint64_t *v195;
  _DWORD *v196;
  _DWORD *v197;
  _DWORD *v198;
  _DWORD *v199;
  _DWORD *v200;
  _DWORD *v201;
  _DWORD *v202;
  _DWORD *v203;
  unsigned int v204[2];

  v188 = (_DWORD *)((char *)this + 240);
  v189 = (_DWORD *)((char *)this + 224);
  v190 = (_DWORD *)((char *)this + 256);
  v191 = (_DWORD *)((char *)this + 208);
  v4 = (_DWORD *)((char *)this + 192);
  v196 = (_DWORD *)((char *)this + 176);
  v197 = (_DWORD *)((char *)this + 120);
  v200 = (_DWORD *)((char *)this + 152);
  v201 = (_DWORD *)((char *)this + 88);
  v202 = (_DWORD *)((char *)this + 136);
  v203 = (_DWORD *)((char *)this + 64);
  v198 = (_DWORD *)((char *)this + 32);
  v199 = (_DWORD *)((char *)this + 48);
  v187 = (unint64_t *)((char *)this + 8);
  v194 = (_DWORD *)((char *)this + 16);
  v195 = (unint64_t *)((char *)this + 80);
  v192 = (unint64_t *)((char *)this + 168);
  v193 = (unint64_t *)((char *)this + 104);
LABEL_2:
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v8 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v8 >= v9 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v187);
          if (!(_DWORD)result)
            return result;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v187 = *v8;
          v10 = v8 + 1;
          *((_QWORD *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 69) |= 1u;
        if ((unint64_t)v10 >= v9 || *v10 != 21)
          continue;
        goto LABEL_207;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0D5C68(a2, v194);
          if (!(_DWORD)result)
            return result;
          goto LABEL_224;
        }
        if (v7 != 5)
        {
LABEL_67:
          if (v7 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
          continue;
        }
        while (1)
        {
          v204[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v204) & 1) == 0)
            return 0;
          v73 = v204[0];
          v74 = *((_DWORD *)this + 6);
          if (v74 == *((_DWORD *)this + 7))
          {
            sub_18D0D44E8(v194, v74 + 1);
            v74 = *((_DWORD *)this + 6);
          }
          v75 = *((_QWORD *)this + 2);
          v76 = v74 + 1;
          *((_DWORD *)this + 6) = v74 + 1;
          *(_DWORD *)(v75 + 4 * v74) = v73;
          v77 = *((_QWORD *)a2 + 1);
          v78 = *((_DWORD *)a2 + 4) - v77;
          if (v78 >= 1)
          {
            v79 = v78 / 5u;
            v80 = v79 >= *((_DWORD *)this + 7) - v76 ? *((_DWORD *)this + 7) - v76 : v79;
            if (v80 >= 1)
            {
              v81 = 0;
              while (*(_BYTE *)v77 == 21)
              {
                v82 = *(_DWORD *)(v77 + 1);
                if (v76 >= *((_DWORD *)this + 7))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                  v76 = *((_DWORD *)this + 6);
                  v75 = *((_QWORD *)this + 2);
                }
                *((_DWORD *)this + 6) = v76 + 1;
                *(_DWORD *)(v75 + 4 * v76) = v82;
                ++v81;
                v77 += 5;
                ++v76;
                if (v80 == v81)
                {
                  v81 = v80;
                  break;
                }
              }
              if (v81)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_224:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v10 >= *((_QWORD *)a2 + 2))
            goto LABEL_2;
          v83 = *v10;
          if (v83 != 21)
            break;
LABEL_207:
          *((_QWORD *)a2 + 1) = v10 + 1;
        }
        if (v83 != 25)
          continue;
LABEL_227:
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_228:
        *(_QWORD *)v204 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v204) & 1) != 0)
        {
          v84 = *(_QWORD *)v204;
          v85 = *((_DWORD *)this + 10);
          if (v85 == *((_DWORD *)this + 11))
          {
            sub_18D09EC0C(v198, v85 + 1);
            v85 = *((_DWORD *)this + 10);
          }
          v86 = *((_QWORD *)this + 4);
          v87 = v85 + 1;
          *((_DWORD *)this + 10) = v85 + 1;
          *(_QWORD *)(v86 + 8 * v85) = v84;
          v88 = *((_QWORD *)a2 + 1);
          v89 = *((_DWORD *)a2 + 4) - v88;
          if (v89 >= 1)
          {
            v90 = v89 / 9u;
            v91 = v90 >= *((_DWORD *)this + 11) - v87 ? *((_DWORD *)this + 11) - v87 : v90;
            if (v91 >= 1)
            {
              v92 = 0;
              while (*(_BYTE *)v88 == 25)
              {
                v93 = *(_QWORD *)(v88 + 1);
                if (v87 >= *((_DWORD *)this + 11))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                  v87 = *((_DWORD *)this + 10);
                  v86 = *((_QWORD *)this + 4);
                }
                *((_DWORD *)this + 10) = v87 + 1;
                *(_QWORD *)(v86 + 8 * v87) = v93;
                ++v92;
                v88 += 9;
                ++v87;
                if (v91 == v92)
                {
                  v92 = v91;
                  break;
                }
              }
              if (v92)
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
LABEL_244:
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 >= v13)
            continue;
          v94 = *v10;
          if (v94 == 25)
            goto LABEL_227;
          if (v94 == 32)
          {
            for (i = v10 + 1; ; i = (char *)(v25 + 1))
            {
              *((_QWORD *)a2 + 1) = i;
LABEL_249:
              v204[0] = 0;
              if ((unint64_t)i >= v13 || *i < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                if (!(_DWORD)result)
                  return result;
                v95 = v204[0];
              }
              else
              {
                v95 = *i;
                *((_QWORD *)a2 + 1) = i + 1;
              }
              v96 = *((_DWORD *)this + 14);
              if (v96 == *((_DWORD *)this + 15))
              {
                sub_18D0D44E8(v199, v96 + 1);
                v96 = *((_DWORD *)this + 14);
              }
              v97 = *((_QWORD *)this + 6);
              *((_DWORD *)this + 14) = v96 + 1;
              *(_DWORD *)(v97 + 4 * v96) = v95;
              v98 = *((_DWORD *)this + 15) - *((_DWORD *)this + 14);
              if (v98 >= 1)
              {
                v99 = v98 + 1;
                do
                {
                  v100 = (_BYTE *)*((_QWORD *)a2 + 1);
                  v101 = *((_QWORD *)a2 + 2);
                  if ((unint64_t)v100 >= v101 || *v100 != 32)
                    break;
                  *((_QWORD *)a2 + 1) = v100 + 1;
                  v204[0] = 0;
                  if ((unint64_t)(v100 + 1) >= v101 || (char)v100[1] < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                    if (!(_DWORD)result)
                      return result;
                    v102 = v204[0];
                  }
                  else
                  {
                    v102 = v100[1];
                    *((_QWORD *)a2 + 1) = v100 + 2;
                  }
                  v103 = *((_DWORD *)this + 14);
                  if (v103 >= *((_DWORD *)this + 15))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                    v103 = *((_DWORD *)this + 14);
                  }
                  v104 = *((_QWORD *)this + 6);
                  *((_DWORD *)this + 14) = v103 + 1;
                  *(_DWORD *)(v104 + 4 * v103) = v102;
                  --v99;
                }
                while (v99 > 1);
              }
LABEL_268:
              v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v13 = *((_QWORD *)a2 + 2);
              if ((unint64_t)v25 >= v13)
                break;
              v105 = *v25;
              if (v105 == 41)
              {
                while (1)
                {
                  *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_273:
                  *(_QWORD *)v204 = 0;
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v204) & 1) == 0)return 0;
                  v106 = *(_QWORD *)v204;
                  v107 = *((_DWORD *)this + 18);
                  if (v107 == *((_DWORD *)this + 19))
                  {
                    sub_18D09EC0C(v203, v107 + 1);
                    v107 = *((_DWORD *)this + 18);
                  }
                  v108 = *((_QWORD *)this + 8);
                  v109 = v107 + 1;
                  *((_DWORD *)this + 18) = v107 + 1;
                  *(_QWORD *)(v108 + 8 * v107) = v106;
                  v110 = *((_QWORD *)a2 + 1);
                  v111 = *((_DWORD *)a2 + 4) - v110;
                  if (v111 >= 1)
                  {
                    v112 = v111 / 9u;
                    v113 = v112 >= *((_DWORD *)this + 19) - v109 ? *((_DWORD *)this + 19) - v109 : v112;
                    if (v113 >= 1)
                    {
                      v114 = 0;
                      while (*(_BYTE *)v110 == 41)
                      {
                        v115 = *(_QWORD *)(v110 + 1);
                        if (v109 >= *((_DWORD *)this + 19))
                        {
                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                          v109 = *((_DWORD *)this + 18);
                          v108 = *((_QWORD *)this + 8);
                        }
                        *((_DWORD *)this + 18) = v109 + 1;
                        *(_QWORD *)(v108 + 8 * v109) = v115;
                        ++v114;
                        v110 += 9;
                        ++v109;
                        if (v113 == v114)
                        {
                          v114 = v113;
                          break;
                        }
                      }
                      if (v114)
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                    }
                  }
LABEL_95:
                  v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v14 = *((_QWORD *)a2 + 2);
                  if ((unint64_t)v25 >= v14)
                    goto LABEL_2;
                  v26 = *v25;
                  if (v26 != 41)
                  {
                    if (v26 == 48)
                    {
                      v15 = (char *)(v25 + 1);
                      *((_QWORD *)a2 + 1) = v25 + 1;
LABEL_99:
                      if ((unint64_t)v15 >= v14 || *v15 < 0)
                      {
                        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v195);
                        if (!(_DWORD)result)
                          return result;
                        v27 = (_BYTE *)*((_QWORD *)a2 + 1);
                        v14 = *((_QWORD *)a2 + 2);
                      }
                      else
                      {
                        *v195 = *v15;
                        v27 = v15 + 1;
                        *((_QWORD *)a2 + 1) = v27;
                      }
                      *((_DWORD *)this + 69) |= 0x20u;
                      if ((unint64_t)v27 < v14 && *v27 == 61)
                      {
                        while (1)
                        {
                          *((_QWORD *)a2 + 1) = v27 + 1;
LABEL_290:
                          v204[0] = 0;
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v204) & 1) == 0)return 0;
                          v116 = v204[0];
                          v117 = *((_DWORD *)this + 24);
                          if (v117 == *((_DWORD *)this + 25))
                          {
                            sub_18D0D44E8(v201, v117 + 1);
                            v117 = *((_DWORD *)this + 24);
                          }
                          v118 = *((_QWORD *)this + 11);
                          v119 = v117 + 1;
                          *((_DWORD *)this + 24) = v117 + 1;
                          *(_DWORD *)(v118 + 4 * v117) = v116;
                          v120 = *((_QWORD *)a2 + 1);
                          v121 = *((_DWORD *)a2 + 4) - v120;
                          if (v121 >= 1)
                          {
                            v122 = v121 / 5u;
                            v123 = v122 >= *((_DWORD *)this + 25) - v119 ? *((_DWORD *)this + 25) - v119 : v122;
                            if (v123 >= 1)
                            {
                              v124 = 0;
                              while (*(_BYTE *)v120 == 61)
                              {
                                v125 = *(_DWORD *)(v120 + 1);
                                if (v119 >= *((_DWORD *)this + 25))
                                {
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                  v119 = *((_DWORD *)this + 24);
                                  v118 = *((_QWORD *)this + 11);
                                }
                                *((_DWORD *)this + 24) = v119 + 1;
                                *(_DWORD *)(v118 + 4 * v119) = v125;
                                ++v124;
                                v120 += 5;
                                ++v119;
                                if (v123 == v124)
                                {
                                  v124 = v123;
                                  break;
                                }
                              }
                              if (v124)
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                            }
                          }
LABEL_306:
                          v27 = (_BYTE *)*((_QWORD *)a2 + 1);
                          v16 = *((_QWORD *)a2 + 2);
                          if ((unint64_t)v27 >= v16)
                            break;
                          v126 = *v27;
                          if (v126 != 61)
                          {
                            if (v126 == 64)
                            {
                              v17 = v27 + 1;
                              *((_QWORD *)a2 + 1) = v17;
LABEL_310:
                              if ((unint64_t)v17 >= v16 || *v17 < 0)
                              {
                                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v193);
                                if (!(_DWORD)result)
                                  return result;
                                v127 = (_BYTE *)*((_QWORD *)a2 + 1);
                                v16 = *((_QWORD *)a2 + 2);
                              }
                              else
                              {
                                *v193 = *v17;
                                v127 = v17 + 1;
                                *((_QWORD *)a2 + 1) = v127;
                              }
                              v18 = *((_DWORD *)this + 69) | 0x80;
                              *((_DWORD *)this + 69) = v18;
                              if ((unint64_t)v127 < v16 && *v127 == 74)
                              {
                                *((_QWORD *)a2 + 1) = v127 + 1;
LABEL_318:
                                *((_DWORD *)this + 69) = v18 | 0x100;
                                if (*((_QWORD *)this + 14) == MEMORY[0x1E0DE8338])
                                {
                                  v128 = (_QWORD *)operator new();
                                  v128[1] = 0;
                                  v128[2] = 0;
                                  *v128 = 0;
                                  *((_QWORD *)this + 14) = v128;
                                }
                                result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                                if (!(_DWORD)result)
                                  return result;
                                v129 = (_BYTE *)*((_QWORD *)a2 + 1);
                                v19 = *((_QWORD *)a2 + 2);
                                if ((unint64_t)v129 < v19 && *v129 == 80)
                                {
                                  for (j = v129 + 1; ; j = (char *)(v140 + 1))
                                  {
                                    *((_QWORD *)a2 + 1) = j;
LABEL_325:
                                    v204[0] = 0;
                                    if ((unint64_t)j >= v19 || *j < 0)
                                    {
                                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                                      if (!(_DWORD)result)
                                        return result;
                                      v130 = v204[0];
                                    }
                                    else
                                    {
                                      v130 = *j;
                                      *((_QWORD *)a2 + 1) = j + 1;
                                    }
                                    v131 = *((_DWORD *)this + 32);
                                    if (v131 == *((_DWORD *)this + 33))
                                    {
                                      sub_18D0D44E8(v197, v131 + 1);
                                      v131 = *((_DWORD *)this + 32);
                                    }
                                    v132 = *((_QWORD *)this + 15);
                                    *((_DWORD *)this + 32) = v131 + 1;
                                    *(_DWORD *)(v132 + 4 * v131) = v130;
                                    v133 = *((_DWORD *)this + 33) - *((_DWORD *)this + 32);
                                    if (v133 >= 1)
                                    {
                                      v134 = v133 + 1;
                                      do
                                      {
                                        v135 = (_BYTE *)*((_QWORD *)a2 + 1);
                                        v136 = *((_QWORD *)a2 + 2);
                                        if ((unint64_t)v135 >= v136 || *v135 != 80)
                                          break;
                                        *((_QWORD *)a2 + 1) = v135 + 1;
                                        v204[0] = 0;
                                        if ((unint64_t)(v135 + 1) >= v136 || (char)v135[1] < 0)
                                        {
                                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                                          if (!(_DWORD)result)
                                            return result;
                                          v137 = v204[0];
                                        }
                                        else
                                        {
                                          v137 = v135[1];
                                          *((_QWORD *)a2 + 1) = v135 + 2;
                                        }
                                        v138 = *((_DWORD *)this + 32);
                                        if (v138 >= *((_DWORD *)this + 33))
                                        {
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                          v138 = *((_DWORD *)this + 32);
                                        }
                                        v139 = *((_QWORD *)this + 15);
                                        *((_DWORD *)this + 32) = v138 + 1;
                                        *(_DWORD *)(v139 + 4 * v138) = v137;
                                        --v134;
                                      }
                                      while (v134 > 1);
                                    }
LABEL_344:
                                    v140 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                    v19 = *((_QWORD *)a2 + 2);
                                    if ((unint64_t)v140 >= v19)
                                      break;
                                    v141 = *v140;
                                    if (v141 == 93)
                                    {
                                      while (1)
                                      {
                                        *((_QWORD *)a2 + 1) = v140 + 1;
LABEL_349:
                                        v204[0] = 0;
                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v204) & 1) == 0)return 0;
                                        v142 = v204[0];
                                        v143 = *((_DWORD *)this + 36);
                                        if (v143 == *((_DWORD *)this + 37))
                                        {
                                          sub_18D0D44E8(v202, v143 + 1);
                                          v143 = *((_DWORD *)this + 36);
                                        }
                                        v144 = *((_QWORD *)this + 17);
                                        v145 = v143 + 1;
                                        *((_DWORD *)this + 36) = v143 + 1;
                                        *(_DWORD *)(v144 + 4 * v143) = v142;
                                        v146 = *((_QWORD *)a2 + 1);
                                        v147 = *((_DWORD *)a2 + 4) - v146;
                                        if (v147 >= 1)
                                        {
                                          v148 = v147 / 5u;
                                          v149 = v148 >= *((_DWORD *)this + 37) - v145
                                               ? *((_DWORD *)this + 37) - v145
                                               : v148;
                                          if (v149 >= 1)
                                          {
                                            v150 = 0;
                                            while (*(_BYTE *)v146 == 93)
                                            {
                                              v151 = *(_DWORD *)(v146 + 1);
                                              if (v145 >= *((_DWORD *)this + 37))
                                              {
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                v145 = *((_DWORD *)this + 36);
                                                v144 = *((_QWORD *)this + 17);
                                              }
                                              *((_DWORD *)this + 36) = v145 + 1;
                                              *(_DWORD *)(v144 + 4 * v145) = v151;
                                              ++v150;
                                              v146 += 5;
                                              ++v145;
                                              if (v149 == v150)
                                              {
                                                v150 = v149;
                                                break;
                                              }
                                            }
                                            if (v150)
                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                          }
                                        }
LABEL_365:
                                        v140 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                        v22 = *((_QWORD *)a2 + 2);
                                        if ((unint64_t)v140 >= v22)
                                          goto LABEL_2;
                                        v152 = *v140;
                                        if (v152 != 93)
                                        {
                                          if (v152 == 96)
                                          {
                                            for (k = (char *)(v140 + 1); ; k = (char *)(v163 + 1))
                                            {
                                              *((_QWORD *)a2 + 1) = k;
LABEL_370:
                                              v204[0] = 0;
                                              if ((unint64_t)k >= v22 || *k < 0)
                                              {
                                                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                                                if (!(_DWORD)result)
                                                  return result;
                                                v153 = v204[0];
                                              }
                                              else
                                              {
                                                v153 = *k;
                                                *((_QWORD *)a2 + 1) = k + 1;
                                              }
                                              v154 = *((_DWORD *)this + 40);
                                              if (v154 == *((_DWORD *)this + 41))
                                              {
                                                sub_18D0D44E8(v200, v154 + 1);
                                                v154 = *((_DWORD *)this + 40);
                                              }
                                              v155 = *((_QWORD *)this + 19);
                                              *((_DWORD *)this + 40) = v154 + 1;
                                              *(_DWORD *)(v155 + 4 * v154) = v153;
                                              v156 = *((_DWORD *)this + 41) - *((_DWORD *)this + 40);
                                              if (v156 >= 1)
                                              {
                                                v157 = v156 + 1;
                                                do
                                                {
                                                  v158 = (_BYTE *)*((_QWORD *)a2 + 1);
                                                  v159 = *((_QWORD *)a2 + 2);
                                                  if ((unint64_t)v158 >= v159 || *v158 != 96)
                                                    break;
                                                  *((_QWORD *)a2 + 1) = v158 + 1;
                                                  v204[0] = 0;
                                                  if ((unint64_t)(v158 + 1) >= v159 || (char)v158[1] < 0)
                                                  {
                                                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                                                    if (!(_DWORD)result)
                                                      return result;
                                                    v160 = v204[0];
                                                  }
                                                  else
                                                  {
                                                    v160 = v158[1];
                                                    *((_QWORD *)a2 + 1) = v158 + 2;
                                                  }
                                                  v161 = *((_DWORD *)this + 40);
                                                  if (v161 >= *((_DWORD *)this + 41))
                                                  {
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                    v161 = *((_DWORD *)this + 40);
                                                  }
                                                  v162 = *((_QWORD *)this + 19);
                                                  *((_DWORD *)this + 40) = v161 + 1;
                                                  *(_DWORD *)(v162 + 4 * v161) = v160;
                                                  --v157;
                                                }
                                                while (v157 > 1);
                                              }
LABEL_389:
                                              v163 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                              v22 = *((_QWORD *)a2 + 2);
                                              if ((unint64_t)v163 >= v22)
                                                break;
                                              v164 = *v163;
                                              if (v164 == 104)
                                              {
                                                v23 = v163 + 1;
                                                *((_QWORD *)a2 + 1) = v23;
LABEL_394:
                                                if ((unint64_t)v23 >= v22 || (char)*v23 < 0)
                                                {
                                                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v192);
                                                  if (!(_DWORD)result)
                                                    return result;
                                                  v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                  v22 = *((_QWORD *)a2 + 2);
                                                }
                                                else
                                                {
                                                  *v192 = *v23;
                                                  v38 = v23 + 1;
                                                  *((_QWORD *)a2 + 1) = v38;
                                                }
                                                *((_DWORD *)this + 69) |= 0x1000u;
                                                if ((unint64_t)v38 < v22)
                                                {
                                                  v39 = *v38;
                                                  while (v39 == 112)
                                                  {
                                                    v24 = (char *)(v38 + 1);
                                                    *((_QWORD *)a2 + 1) = v24;
LABEL_107:
                                                    v204[0] = 0;
                                                    if ((unint64_t)v24 >= v22 || *v24 < 0)
                                                    {
                                                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                                                      if (!(_DWORD)result)
                                                        return result;
                                                      v28 = v204[0];
                                                    }
                                                    else
                                                    {
                                                      v28 = *v24;
                                                      *((_QWORD *)a2 + 1) = v24 + 1;
                                                    }
                                                    v29 = *((_DWORD *)this + 46);
                                                    if (v29 == *((_DWORD *)this + 47))
                                                    {
                                                      sub_18D0D44E8(v196, v29 + 1);
                                                      v29 = *((_DWORD *)this + 46);
                                                    }
                                                    v30 = *((_QWORD *)this + 22);
                                                    *((_DWORD *)this + 46) = v29 + 1;
                                                    *(_DWORD *)(v30 + 4 * v29) = v28;
                                                    v31 = *((_DWORD *)this + 47) - *((_DWORD *)this + 46);
                                                    if (v31 >= 1)
                                                    {
                                                      v32 = v31 + 1;
                                                      do
                                                      {
                                                        v33 = (_BYTE *)*((_QWORD *)a2 + 1);
                                                        v34 = *((_QWORD *)a2 + 2);
                                                        if ((unint64_t)v33 >= v34 || *v33 != 112)
                                                          break;
                                                        *((_QWORD *)a2 + 1) = v33 + 1;
                                                        v204[0] = 0;
                                                        if ((unint64_t)(v33 + 1) >= v34 || (char)v33[1] < 0)
                                                        {
                                                          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v204);
                                                          if (!(_DWORD)result)
                                                            return result;
                                                          v35 = v204[0];
                                                        }
                                                        else
                                                        {
                                                          v35 = v33[1];
                                                          *((_QWORD *)a2 + 1) = v33 + 2;
                                                        }
                                                        v36 = *((_DWORD *)this + 46);
                                                        if (v36 >= *((_DWORD *)this + 47))
                                                        {
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                          v36 = *((_DWORD *)this + 46);
                                                        }
                                                        v37 = *((_QWORD *)this + 22);
                                                        *((_DWORD *)this + 46) = v36 + 1;
                                                        *(_DWORD *)(v37 + 4 * v36) = v35;
                                                        --v32;
                                                      }
                                                      while (v32 > 1);
                                                    }
LABEL_126:
                                                    v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                    v22 = *((_QWORD *)a2 + 2);
                                                    if ((unint64_t)v38 >= v22)
                                                      break;
                                                    v39 = *v38;
                                                    if (v39 == 125)
                                                    {
                                                      do
                                                      {
                                                        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_404:
                                                        v204[0] = 0;
                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v204) & 1) == 0)return 0;
                                                        v165 = v204[0];
                                                        v166 = *((_DWORD *)this + 50);
                                                        if (v166 == *((_DWORD *)this + 51))
                                                        {
                                                          sub_18D0D44E8(v4, v166 + 1);
                                                          v166 = *((_DWORD *)this + 50);
                                                        }
                                                        v167 = *((_QWORD *)this + 24);
                                                        v168 = v166 + 1;
                                                        *((_DWORD *)this + 50) = v166 + 1;
                                                        *(_DWORD *)(v167 + 4 * v166) = v165;
                                                        v169 = *((_QWORD *)a2 + 1);
                                                        v170 = *((_DWORD *)a2 + 4) - v169;
                                                        if (v170 >= 1)
                                                        {
                                                          v171 = v170 / 5u;
                                                          v172 = v171 >= *((_DWORD *)this + 51) - v168
                                                               ? *((_DWORD *)this + 51) - v168
                                                               : v171;
                                                          if (v172 >= 1)
                                                          {
                                                            v173 = 0;
                                                            while (*(_BYTE *)v169 == 125)
                                                            {
                                                              v174 = *(_DWORD *)(v169 + 1);
                                                              if (v168 >= *((_DWORD *)this + 51))
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                v168 = *((_DWORD *)this + 50);
                                                                v167 = *((_QWORD *)this + 24);
                                                              }
                                                              *((_DWORD *)this + 50) = v168 + 1;
                                                              *(_DWORD *)(v167 + 4 * v168) = v174;
                                                              ++v173;
                                                              v169 += 5;
                                                              ++v168;
                                                              if (v172 == v173)
                                                              {
                                                                v173 = v172;
                                                                break;
                                                              }
                                                            }
                                                            if (v173)
                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                          }
                                                        }
LABEL_420:
                                                        v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                        v175 = *((_QWORD *)a2 + 2);
                                                      }
                                                      while ((unint64_t)v38 < v175 && *v38 == 125);
                                                      if ((int)v175 - (int)v38 >= 2)
                                                      {
                                                        v176 = *v38;
                                                        while (v176 == 133 && v38[1] == 1)
                                                        {
                                                          *((_QWORD *)a2 + 1) = v38 + 2;
LABEL_426:
                                                          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x85) != 2)
                                                          {
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                          }
                                                          v204[0] = 0;
                                                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v204) & 1) == 0)return 0;
                                                          v177 = v204[0];
                                                          v178 = *((_DWORD *)this + 54);
                                                          if (v178 == *((_DWORD *)this + 55))
                                                          {
                                                            sub_18D0D44E8(v191, v178 + 1);
                                                            v178 = *((_DWORD *)this + 54);
                                                          }
                                                          v179 = *((_QWORD *)this + 26);
                                                          v180 = v178 + 1;
                                                          *((_DWORD *)this + 54) = v178 + 1;
                                                          *(_DWORD *)(v179 + 4 * v178) = v177;
                                                          v181 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                          v182 = *((_DWORD *)a2 + 4) - (_DWORD)v181;
                                                          if (v182 >= 1)
                                                          {
                                                            v183 = v182 / 6u;
                                                            v184 = v183 >= *((_DWORD *)this + 55) - v180
                                                                 ? *((_DWORD *)this + 55) - v180
                                                                 : v183;
                                                            if (v184 >= 1)
                                                            {
                                                              v185 = 0;
                                                              while (*v181 == 133 && v181[1] == 1)
                                                              {
                                                                v186 = *(_DWORD *)(v181 + 2);
                                                                if (v180 >= *((_DWORD *)this + 55))
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                  v180 = *((_DWORD *)this + 54);
                                                                  v179 = *((_QWORD *)this + 26);
                                                                }
                                                                *((_DWORD *)this + 54) = v180 + 1;
                                                                *(_DWORD *)(v179 + 4 * v180) = v186;
                                                                ++v185;
                                                                v181 += 6;
                                                                ++v180;
                                                                if (v184 == v185)
                                                                {
                                                                  v185 = v184;
                                                                  break;
                                                                }
                                                              }
                                                              if (v185)
                                                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                            }
                                                          }
LABEL_445:
                                                          v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                          if (*((_DWORD *)a2 + 4) - (int)v38 <= 1)
                                                            break;
                                                          v176 = *v38;
                                                          if (v176 == 141)
                                                          {
                                                            while (v38[1] == 1)
                                                            {
                                                              *((_QWORD *)a2 + 1) = v38 + 2;
LABEL_129:
                                                              if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x8D) != 2)
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                              }
                                                              v204[0] = 0;
                                                              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v204) & 1) == 0)return 0;
                                                              v40 = v204[0];
                                                              v41 = *((_DWORD *)this + 58);
                                                              if (v41 == *((_DWORD *)this + 59))
                                                              {
                                                                sub_18D0D44E8(v189, v41 + 1);
                                                                v41 = *((_DWORD *)this + 58);
                                                              }
                                                              v42 = *((_QWORD *)this + 28);
                                                              v43 = v41 + 1;
                                                              *((_DWORD *)this + 58) = v41 + 1;
                                                              *(_DWORD *)(v42 + 4 * v41) = v40;
                                                              v44 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                              v45 = *((_DWORD *)a2 + 4) - (_DWORD)v44;
                                                              if (v45 >= 1)
                                                              {
                                                                v46 = v45 / 6u;
                                                                v47 = v46 >= *((_DWORD *)this + 59) - v43
                                                                    ? *((_DWORD *)this + 59) - v43
                                                                    : v46;
                                                                if (v47 >= 1)
                                                                {
                                                                  v48 = 0;
                                                                  while (*v44 == 141 && v44[1] == 1)
                                                                  {
                                                                    v49 = *(_DWORD *)(v44 + 2);
                                                                    if (v43 >= *((_DWORD *)this + 59))
                                                                    {
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                      v43 = *((_DWORD *)this + 58);
                                                                      v42 = *((_QWORD *)this + 28);
                                                                    }
                                                                    *((_DWORD *)this + 58) = v43 + 1;
                                                                    *(_DWORD *)(v42 + 4 * v43) = v49;
                                                                    ++v48;
                                                                    v44 += 6;
                                                                    ++v43;
                                                                    if (v47 == v48)
                                                                    {
                                                                      v48 = v47;
                                                                      break;
                                                                    }
                                                                  }
                                                                  if (v48)
                                                                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                }
                                                              }
LABEL_148:
                                                              v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                              if (*((_DWORD *)a2 + 4) - (int)v38 <= 1)
                                                                break;
                                                              v50 = *v38;
                                                              if (v50 == 145)
                                                              {
                                                                while (1)
                                                                {
                                                                  if (v38[1] != 1)
                                                                    goto LABEL_2;
                                                                  *((_QWORD *)a2 + 1) = v38 + 2;
LABEL_157:
                                                                  if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x91) != 2)
                                                                  {
                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                  }
                                                                  *(_QWORD *)v204 = 0;
                                                                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v204) & 1) == 0)return 0;
                                                                  v52 = *(_QWORD *)v204;
                                                                  v53 = *((_DWORD *)this + 62);
                                                                  if (v53 == *((_DWORD *)this + 63))
                                                                  {
                                                                    sub_18D09EC0C(v188, v53 + 1);
                                                                    v53 = *((_DWORD *)this + 62);
                                                                  }
                                                                  v54 = *((_QWORD *)this + 30);
                                                                  v55 = v53 + 1;
                                                                  *((_DWORD *)this + 62) = v53 + 1;
                                                                  *(_QWORD *)(v54 + 8 * v53) = v52;
                                                                  v56 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                                  v57 = *((_DWORD *)a2 + 4) - (_DWORD)v56;
                                                                  if (v57 >= 1)
                                                                  {
                                                                    v58 = v57 / 0xAu;
                                                                    v59 = v58 >= *((_DWORD *)this + 63) - v55
                                                                        ? *((_DWORD *)this + 63) - v55
                                                                        : v58;
                                                                    if (v59 >= 1)
                                                                    {
                                                                      v60 = 0;
                                                                      while (*v56 == 145 && v56[1] == 1)
                                                                      {
                                                                        v61 = *(_QWORD *)(v56 + 2);
                                                                        if (v55 >= *((_DWORD *)this + 63))
                                                                        {
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                          v55 = *((_DWORD *)this + 62);
                                                                          v54 = *((_QWORD *)this + 30);
                                                                        }
                                                                        *((_DWORD *)this + 62) = v55 + 1;
                                                                        *(_QWORD *)(v54 + 8 * v55) = v61;
                                                                        ++v60;
                                                                        v56 += 10;
                                                                        ++v55;
                                                                        if (v59 == v60)
                                                                        {
                                                                          v60 = v59;
                                                                          break;
                                                                        }
                                                                      }
                                                                      if (v60)
                                                                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                    }
                                                                  }
LABEL_152:
                                                                  v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                                  if (*((_DWORD *)a2 + 4) - (int)v38 <= 1)
                                                                    goto LABEL_2;
                                                                  v51 = *v38;
                                                                  if (v51 == 153)
                                                                    break;
                                                                  if (v51 != 145)
                                                                    goto LABEL_2;
                                                                }
                                                                if (v38[1] == 1)
                                                                {
                                                                  do
                                                                  {
                                                                    *((_QWORD *)a2 + 1) = v38 + 2;
LABEL_182:
                                                                    if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x99) != 2)
                                                                    {
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                    }
                                                                    *(_QWORD *)v204 = 0;
                                                                    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v204) & 1) == 0)return 0;
                                                                    v63 = *(_QWORD *)v204;
                                                                    v64 = *((_DWORD *)this + 66);
                                                                    if (v64 == *((_DWORD *)this + 67))
                                                                    {
                                                                      sub_18D09EC0C(v190, v64 + 1);
                                                                      v64 = *((_DWORD *)this + 66);
                                                                    }
                                                                    v65 = *((_QWORD *)this + 32);
                                                                    v66 = v64 + 1;
                                                                    *((_DWORD *)this + 66) = v64 + 1;
                                                                    *(_QWORD *)(v65 + 8 * v64) = v63;
                                                                    v67 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                                    v68 = *((_DWORD *)a2 + 4) - (_DWORD)v67;
                                                                    if (v68 >= 1)
                                                                    {
                                                                      v69 = v68 / 0xAu;
                                                                      v70 = v69 >= *((_DWORD *)this + 67) - v66
                                                                          ? *((_DWORD *)this + 67) - v66
                                                                          : v69;
                                                                      if (v70 >= 1)
                                                                      {
                                                                        v71 = 0;
                                                                        while (*v67 == 153 && v67[1] == 1)
                                                                        {
                                                                          v72 = *(_QWORD *)(v67 + 2);
                                                                          if (v66 >= *((_DWORD *)this + 67))
                                                                          {
                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v204);
                                                                            v66 = *((_DWORD *)this + 66);
                                                                            v65 = *((_QWORD *)this + 32);
                                                                          }
                                                                          *((_DWORD *)this + 66) = v66 + 1;
                                                                          *(_QWORD *)(v65 + 8 * v66) = v72;
                                                                          ++v71;
                                                                          v67 += 10;
                                                                          ++v66;
                                                                          if (v70 == v71)
                                                                          {
                                                                            v71 = v70;
                                                                            break;
                                                                          }
                                                                        }
                                                                        if (v71)
                                                                          wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                      }
                                                                    }
LABEL_178:
                                                                    v38 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                                                                    v62 = (unsigned __int8 *)*((_QWORD *)a2 + 2);
                                                                  }
                                                                  while ((int)v62 - (int)v38 > 1
                                                                       && *v38 == 153
                                                                       && v38[1] == 1);
                                                                  if (v38 == v62
                                                                    && (*((_DWORD *)a2 + 11)
                                                                     || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                                                                  {
                                                                    *((_DWORD *)a2 + 8) = 0;
                                                                    result = 1;
                                                                    *((_BYTE *)a2 + 36) = 1;
                                                                    return result;
                                                                  }
                                                                }
                                                                goto LABEL_2;
                                                              }
                                                              if (v50 != 141)
                                                                goto LABEL_2;
                                                            }
                                                            goto LABEL_2;
                                                          }
                                                        }
                                                      }
                                                      goto LABEL_2;
                                                    }
                                                  }
                                                }
                                                goto LABEL_2;
                                              }
                                              if (v164 != 96)
                                                goto LABEL_2;
                                            }
                                          }
                                          goto LABEL_2;
                                        }
                                      }
                                    }
                                    if (v141 != 80)
                                      goto LABEL_2;
                                  }
                                }
                              }
                            }
                            goto LABEL_2;
                          }
                        }
                      }
                    }
                    goto LABEL_2;
                  }
                }
              }
              if (v105 != 32)
                goto LABEL_2;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_228;
        if (v7 != 2)
          goto LABEL_67;
        result = sub_18D0C7FD4(a2, v198);
        if (!(_DWORD)result)
          return result;
        goto LABEL_244;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0E273C(a2, v199);
          if (!(_DWORD)result)
            return result;
          goto LABEL_268;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        i = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_249;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_273;
        if (v7 != 2)
          goto LABEL_67;
        result = sub_18D0C7FD4(a2, v203);
        if (!(_DWORD)result)
          return result;
        goto LABEL_95;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v14 = *((_QWORD *)a2 + 2);
        goto LABEL_99;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0D5C68(a2, v201);
          if (!(_DWORD)result)
            return result;
          goto LABEL_306;
        }
        if (v7 == 5)
          goto LABEL_290;
        goto LABEL_67;
      case 8u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_310;
      case 9u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_67;
        v18 = *((_DWORD *)this + 69);
        goto LABEL_318;
      case 0xAu:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0E273C(a2, v197);
          if (!(_DWORD)result)
            return result;
          goto LABEL_344;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        j = (char *)*((_QWORD *)a2 + 1);
        v19 = *((_QWORD *)a2 + 2);
        goto LABEL_325;
      case 0xBu:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0D5C68(a2, v202);
          if (!(_DWORD)result)
            return result;
          goto LABEL_365;
        }
        if (v7 == 5)
          goto LABEL_349;
        goto LABEL_67;
      case 0xCu:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0E273C(a2, v200);
          if (!(_DWORD)result)
            return result;
          goto LABEL_389;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        k = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_370;
      case 0xDu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_394;
      case 0xEu:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0E273C(a2, v196);
          if (!(_DWORD)result)
            return result;
          goto LABEL_126;
        }
        if ((TagFallback & 7) != 0)
          goto LABEL_67;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_107;
      case 0xFu:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0D5C68(a2, v4);
          if (!(_DWORD)result)
            return result;
          goto LABEL_420;
        }
        if (v7 == 5)
          goto LABEL_404;
        goto LABEL_67;
      case 0x10u:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0D5C68(a2, v191);
          if (!(_DWORD)result)
            return result;
          goto LABEL_445;
        }
        if (v7 == 5)
          goto LABEL_426;
        goto LABEL_67;
      case 0x11u:
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          result = sub_18D0D5C68(a2, v189);
          if (!(_DWORD)result)
            return result;
          goto LABEL_148;
        }
        if (v7 == 5)
          goto LABEL_129;
        goto LABEL_67;
      case 0x12u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_157;
        if (v7 != 2)
          goto LABEL_67;
        result = sub_18D0C7FD4(a2, v188);
        if (!(_DWORD)result)
          return result;
        goto LABEL_152;
      case 0x13u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_182;
        if (v7 != 2)
          goto LABEL_67;
        result = sub_18D0C7FD4(a2, v190);
        if (!(_DWORD)result)
          return result;
        goto LABEL_178;
      default:
        v7 = TagFallback & 7;
        goto LABEL_67;
    }
  }
}

void sub_18D0E269C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&a28);
  _Unwind_Resume(a1);
}

uint64_t sub_18D0E273C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, _DWORD *a2)
{
  char *v4;
  uint64_t result;
  char *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;

  v10 = 0;
  v4 = (char *)*((_QWORD *)this + 1);
  if ((unint64_t)v4 >= *((_QWORD *)this + 2) || *v4 < 0)
  {
    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!(_DWORD)result)
      return result;
  }
  else
  {
    v10 = *v4;
    *((_QWORD *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      v11 = 0;
      v6 = (char *)*((_QWORD *)this + 1);
      if ((unint64_t)v6 >= *((_QWORD *)this + 2) || *v6 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!(_DWORD)result)
          return result;
        v7 = v11;
      }
      else
      {
        v7 = *v6;
        *((_QWORD *)this + 1) = v6 + 1;
      }
      v8 = a2[2];
      if (v8 == a2[3])
      {
        sub_18D0D44E8(a2, v8 + 1);
        v8 = a2[2];
      }
      v9 = *(_QWORD *)a2;
      a2[2] = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = this;
  if ((*(_BYTE *)(this + 276) & 1) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(this + 8), (uint64_t)a2, a4);
  if (*(int *)(v5 + 24) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 64) + 8 * v9++), a3);
    while (v9 < *(int *)(v5 + 72));
  }
  if ((*(_BYTE *)(v5 + 276) & 0x20) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_QWORD *)(v5 + 80), (uint64_t)a2, a4);
  if (*(int *)(v5 + 96) >= 1)
  {
    v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 88) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 96));
  }
  v11 = *(_DWORD *)(v5 + 276);
  if ((v11 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_QWORD *)(v5 + 104), (uint64_t)a2, a4);
    v11 = *(_DWORD *)(v5 + 276);
  }
  if ((v11 & 0x100) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if (*(int *)(v5 + 128) >= 1)
  {
    v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(*(_QWORD *)(v5 + 120) + 4 * v12++), (uint64_t)a2, a4);
    while (v12 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 136) + 4 * v13++), a3);
    while (v13 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(*(_QWORD *)(v5 + 152) + 4 * v14++), (uint64_t)a2, a4);
    while (v14 < *(int *)(v5 + 160));
  }
  if ((*(_BYTE *)(v5 + 277) & 0x10) != 0)
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_QWORD *)(v5 + 168), (uint64_t)a2, a4);
  if (*(int *)(v5 + 184) >= 1)
  {
    v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(*(_QWORD *)(v5 + 176) + 4 * v15++), (uint64_t)a2, a4);
    while (v15 < *(int *)(v5 + 184));
  }
  if (*(int *)(v5 + 200) >= 1)
  {
    v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 192) + 4 * v16++), a3);
    while (v16 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 216) >= 1)
  {
    v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 208) + 4 * v17++), a3);
    while (v17 < *(int *)(v5 + 216));
  }
  if (*(int *)(v5 + 232) >= 1)
  {
    v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(float *)(*(_QWORD *)(v5 + 224) + 4 * v18++), a3);
    while (v18 < *(int *)(v5 + 232));
  }
  if (*(int *)(v5 + 248) >= 1)
  {
    v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 240) + 8 * v19++), a3);
    while (v19 < *(int *)(v5 + 248));
  }
  if (*(int *)(v5 + 264) >= 1)
  {
    v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(*(_QWORD *)(v5 + 256) + 8 * v20++), a3);
    while (v20 < *(int *)(v5 + 264));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v29;
  int v30;
  uint64_t result;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;

  v2 = *((_DWORD *)this + 69);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) != 0)
  {
    v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    v2 = *((_DWORD *)this + 69);
    if ((v2 & 0x20) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 10))
        + 1;
    v2 = *((_DWORD *)this + 69);
  }
LABEL_8:
  if ((v2 & 0x80) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 13))
        + 1;
    v2 = *((_DWORD *)this + 69);
  }
LABEL_10:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v4 = *((_QWORD *)this + 14);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = v7;
      if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
        v5 = *(unsigned __int8 *)(v4 + 23);
        v7 = *(_QWORD *)(v4 + 8);
        v2 = *((_DWORD *)this + 69);
        v6 = *(_BYTE *)(v4 + 23);
      }
      else
      {
        v9 = 1;
      }
      if (v6 < 0)
        v5 = v7;
      v3 += v9 + v5 + 1;
    }
    if ((v2 & 0x1000) != 0)
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                        + 21))
          + 1;
  }
  v34 = *((_DWORD *)this + 6);
  v35 = *((_DWORD *)this + 10);
  v36 = v3;
  v10 = *((_DWORD *)this + 14);
  if (v10 < 1)
  {
    v12 = 0;
  }
  else
  {
    v11 = 0;
    v12 = 0;
    do
    {
      v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 6)
                                                                                             + 4 * v11);
      if ((v13 & 0x80000000) != 0)
      {
        v14 = 10;
      }
      else if (v13 >= 0x80)
      {
        v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        v10 = *((_DWORD *)this + 14);
      }
      else
      {
        v14 = 1;
      }
      v12 += v14;
      ++v11;
    }
    while (v11 < v10);
  }
  v32 = *((_DWORD *)this + 24);
  v33 = *((_DWORD *)this + 18);
  v15 = *((_DWORD *)this + 32);
  if (v15 < 1)
  {
    v17 = 0;
  }
  else
  {
    v16 = 0;
    v17 = 0;
    do
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 15)
                                                                                             + 4 * v16);
      if ((v18 & 0x80000000) != 0)
      {
        v19 = 10;
      }
      else if (v18 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
        v15 = *((_DWORD *)this + 32);
      }
      else
      {
        v19 = 1;
      }
      v17 += v19;
      ++v16;
    }
    while (v16 < v15);
  }
  v20 = *((_DWORD *)this + 36);
  v21 = *((_DWORD *)this + 40);
  if (v21 < 1)
  {
    v23 = 0;
  }
  else
  {
    v22 = 0;
    v23 = 0;
    do
    {
      v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 19)
                                                                                             + 4 * v22);
      if ((v24 & 0x80000000) != 0)
      {
        v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
        v21 = *((_DWORD *)this + 40);
      }
      else
      {
        v25 = 1;
      }
      v23 += v25;
      ++v22;
    }
    while (v22 < v21);
  }
  v26 = *((_DWORD *)this + 46);
  if (v26 < 1)
  {
    v28 = 0;
  }
  else
  {
    v27 = 0;
    v28 = 0;
    do
    {
      v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((_QWORD *)this + 22)
                                                                                             + 4 * v27);
      if ((v29 & 0x80000000) != 0)
      {
        v30 = 10;
      }
      else if (v29 >= 0x80)
      {
        v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
        v26 = *((_DWORD *)this + 46);
      }
      else
      {
        v30 = 1;
      }
      v28 += v30;
      ++v27;
    }
    while (v27 < v26);
  }
  result = (v12
                        + v36
                        + v10
                        + v17
                        + 9 * (v33 + v35)
                        + v15
                        + v23
                        + v21
                        + v28
                        + v26
                        + 5 * (v32 + v34 + v20 + *((_DWORD *)this + 50))
                        + 6 * (*((_DWORD *)this + 58) + *((_DWORD *)this + 54))
                        + 10 * (*((_DWORD *)this + 66) + *((_DWORD *)this + 62)));
  *((_DWORD *)this + 68) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *))(*(_QWORD *)this
                                                                                                  + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    v3 = *((_QWORD *)this + 2);
    v4 = *((_QWORD *)a2 + 2);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)this + 2) = v4;
    *((_QWORD *)a2 + 1) = v2;
    *((_QWORD *)a2 + 2) = v3;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    v6 = *((_QWORD *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((_QWORD *)a2 + 6) = v6;
    v7 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v7;
    v8 = *((_QWORD *)this + 10);
    v9 = *((_QWORD *)this + 11);
    v10 = *((_QWORD *)a2 + 11);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)this + 11) = v10;
    *((_QWORD *)a2 + 10) = v8;
    *((_QWORD *)a2 + 11) = v9;
    v11 = *((_QWORD *)this + 13);
    v12 = *((_QWORD *)this + 14);
    v13 = *((_QWORD *)a2 + 14);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)this + 14) = v13;
    *((_QWORD *)a2 + 13) = v11;
    *((_QWORD *)a2 + 14) = v12;
    v14 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v14;
    v15 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v15;
    v16 = *((_QWORD *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v16;
    v17 = *((_QWORD *)this + 21);
    v18 = *((_QWORD *)this + 22);
    v19 = *((_QWORD *)a2 + 22);
    *((_QWORD *)this + 21) = *((_QWORD *)a2 + 21);
    *((_QWORD *)this + 22) = v19;
    v20 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v20;
    v21 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v21;
    v22 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v22;
    v23 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v23;
    v24 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v24;
    v25 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v25;
    v26 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v26;
    v27 = *((_QWORD *)this + 20);
    *((_QWORD *)this + 20) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v27;
    v28 = *((_QWORD *)a2 + 23);
    *((_QWORD *)a2 + 21) = v17;
    *((_QWORD *)a2 + 22) = v18;
    v29 = *((_QWORD *)this + 23);
    *((_QWORD *)this + 23) = v28;
    *((_QWORD *)a2 + 23) = v29;
    v30 = *((_QWORD *)this + 24);
    *((_QWORD *)this + 24) = *((_QWORD *)a2 + 24);
    v31 = *((_QWORD *)a2 + 25);
    *((_QWORD *)a2 + 24) = v30;
    v32 = *((_QWORD *)this + 25);
    *((_QWORD *)this + 25) = v31;
    *((_QWORD *)a2 + 25) = v32;
    v33 = *((_QWORD *)this + 26);
    *((_QWORD *)this + 26) = *((_QWORD *)a2 + 26);
    v34 = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 26) = v33;
    v35 = *((_QWORD *)this + 27);
    *((_QWORD *)this + 27) = v34;
    *((_QWORD *)a2 + 27) = v35;
    v36 = *((_QWORD *)this + 28);
    *((_QWORD *)this + 28) = *((_QWORD *)a2 + 28);
    v37 = *((_QWORD *)a2 + 29);
    *((_QWORD *)a2 + 28) = v36;
    v38 = *((_QWORD *)this + 29);
    *((_QWORD *)this + 29) = v37;
    *((_QWORD *)a2 + 29) = v38;
    v39 = *((_QWORD *)this + 30);
    *((_QWORD *)this + 30) = *((_QWORD *)a2 + 30);
    v40 = *((_QWORD *)a2 + 31);
    *((_QWORD *)a2 + 30) = v39;
    v41 = *((_QWORD *)this + 31);
    *((_QWORD *)this + 31) = v40;
    *((_QWORD *)a2 + 31) = v41;
    v42 = *((_QWORD *)this + 32);
    *((_QWORD *)this + 32) = *((_QWORD *)a2 + 32);
    result = *((double *)a2 + 33);
    *((_QWORD *)a2 + 32) = v42;
    v44 = *((_QWORD *)this + 33);
    *((double *)this + 33) = result;
    *((_QWORD *)a2 + 33) = v44;
    LODWORD(v42) = *((_DWORD *)this + 69);
    *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
    *((_DWORD *)a2 + 69) = v42;
    LODWORD(v42) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v42;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocalizationMaps488Details");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::VLLocalizationDebugInfo(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  *(_QWORD *)this = &off_1E25C0808;
  *((_QWORD *)this + 1) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0E31EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  _BYTE v2[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v2);
  }
}

void sub_18D0E3264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::~VLLocalizationDebugInfo(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  *(_QWORD *)this = &off_1E25C0808;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::~VLLocalizationDebugInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 8) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::New(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25C0808;
  result[1] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::Clear(uint64_t this)
{
  *(_DWORD *)(this + 12) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v3;
  uint64_t TagFallback;
  BOOL v5;
  uint64_t v6;

  do
  {
    v3 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v3 >= *((_QWORD *)a2 + 2) || *v3 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      TagFallback = *v3;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v3 + 1;
    }
    if ((_DWORD)TagFallback)
      v5 = (TagFallback & 7) == 4;
    else
      v5 = 1;
    v6 = v5;
  }
  while (!v5
       && (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return v6;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  *((_DWORD *)this + 2) = 0;
  return 0;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  int v2;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocalizationDebugInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  double result;

  *((_DWORD *)this + 14) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::VLLocalizationResult(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  *(_QWORD *)this = &off_1E25C0718;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(this, a2);
  return this;
}

void sub_18D0E3524(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *v6;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation *v7;
  const CoreNavigation::CLP::LogEntry::Vision::VLLocation *v8;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v9;
  const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v10;
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *v11;
  const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *v12;
  int v13;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *v14;
  const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *v15;
  _BYTE v16[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 56);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 56) & 1) != 0)
    {
      *((_DWORD *)v3 + 14) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25C0A60;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                        + 8);
      }
      CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 14);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_21;
      }
    }
    else if ((*((_BYTE *)a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 14) |= 2u;
    v7 = (CoreNavigation::CLP::LogEntry::Vision::VLLocation *)*((_QWORD *)v3 + 2);
    if (!v7)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)operator new();
      v7 = this;
      *(_QWORD *)this = &off_1E25C0100;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v8 = (const CoreNavigation::CLP::LogEntry::Vision::VLLocation *)*((_QWORD *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v8 = *(const CoreNavigation::CLP::LogEntry::Vision::VLLocation **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                       + 16);
    }
    CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(v7, v8);
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        goto LABEL_8;
      goto LABEL_26;
    }
LABEL_21:
    *((_DWORD *)v3 + 14) |= 4u;
    v9 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((_QWORD *)v3 + 3);
    if (!v9)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)operator new();
      v9 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25C04C0;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 3) = this;
    }
    v10 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((_QWORD *)a2 + 3);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v10 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                            + 24);
    }
    CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(v9, v10);
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_31;
    }
LABEL_26:
    *((_DWORD *)v3 + 14) |= 8u;
    v11 = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)*((_QWORD *)v3 + 4);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)operator new();
      v11 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25C02E0;
      *((_DWORD *)this + 6) = 0;
      *((_QWORD *)this + 4) = 0;
      *((_QWORD *)v3 + 4) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)*((_QWORD *)a2 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                          + 32);
    }
    CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(v11, v12);
    v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0)
        return;
      goto LABEL_32;
    }
LABEL_31:
    v13 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 14) |= 0x10u;
    *((_DWORD *)v3 + 12) = v13;
    if ((*((_DWORD *)a2 + 14) & 0x20) == 0)
      return;
LABEL_32:
    *((_DWORD *)v3 + 14) |= 0x20u;
    v14 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *)*((_QWORD *)v3 + 5);
    if (!v14)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)operator new();
      v14 = this;
      *(_QWORD *)this = &off_1E25C0808;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)v3 + 5) = this;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *)*((_QWORD *)a2 + 5);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      v15 = *(const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                                     + 40);
    }
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(v14, v15);
  }
}

void sub_18D0E3814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::~VLLocalizationResult(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  *(_QWORD *)this = &off_1E25C0718;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::~VLLocalizationResult(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 4);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 5);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::New(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25C0718;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_DWORD *)(v1 + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 56);
  if ((_BYTE)v2)
  {
    if ((*(_BYTE *)(this + 56) & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 56);
      }
    }
    if ((v2 & 2) != 0)
    {
      v4 = *(_QWORD *)(this + 16);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          if ((*(_BYTE *)(v4 + 28) & 1) != 0)
          {
            v5 = *(_QWORD *)(v4 + 8);
            if (v5)
            {
              *(_DWORD *)(v5 + 16) = 0;
              *(_DWORD *)(v5 + 28) = 0;
            }
          }
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        v2 = *(_DWORD *)(this + 56);
      }
    }
    if ((v2 & 4) != 0)
    {
      v6 = *(_QWORD *)(this + 24);
      if (v6)
      {
        if (*(int *)(v6 + 16) >= 1)
        {
          v7 = 0;
          do
          {
            v8 = *(_QWORD *)(*(_QWORD *)(v6 + 8) + 8 * v7);
            this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 32))(v8);
            ++v7;
          }
          while (v7 < *(int *)(v6 + 16));
        }
        *(_DWORD *)(v6 + 16) = 0;
        *(_DWORD *)(v6 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 8) != 0)
    {
      v9 = *(_QWORD *)(v1 + 32);
      if (v9)
      {
        if (*(int *)(v9 + 16) >= 1)
        {
          v10 = 0;
          do
          {
            v11 = *(_QWORD *)(*(_QWORD *)(v9 + 8) + 8 * v10);
            this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
            ++v10;
          }
          while (v10 < *(int *)(v9 + 16));
        }
        *(_DWORD *)(v9 + 16) = 0;
        *(_DWORD *)(v9 + 36) = 0;
        v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(_DWORD *)(v1 + 48) = 0;
    if ((v2 & 0x20) != 0)
    {
      v12 = *(_QWORD *)(v1 + 40);
      if (v12)
        *(_DWORD *)(v12 + 12) = 0;
    }
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation *v16;
  char *v17;
  int v18;
  int v19;
  int v20;
  int v21;
  _BYTE *v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  int v27;
  int v28;
  _BYTE *v29;
  uint64_t v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  _BYTE *v36;
  _BYTE *v37;
  _QWORD *v38;
  char *v39;
  int v40;
  int v41;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *v42;
  int v43;
  int v44;
  uint64_t result;
  unsigned int v46;

  while (1)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 < *((_QWORD *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_6;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_24;
        *((_DWORD *)this + 14) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25C0A60;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v46 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46))return 0;
        }
        else
        {
          v46 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 18)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
        goto LABEL_36;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_24;
LABEL_36:
        *((_DWORD *)this + 14) |= 2u;
        v16 = (CoreNavigation::CLP::LogEntry::Vision::VLLocation *)*((_QWORD *)this + 2);
        if (!v16)
        {
          v16 = (CoreNavigation::CLP::LogEntry::Vision::VLLocation *)operator new();
          *(_QWORD *)v16 = &off_1E25C0100;
          *((_QWORD *)v16 + 1) = 0;
          *((_QWORD *)v16 + 2) = 0;
          *((_QWORD *)v16 + 3) = 0;
          *((_QWORD *)this + 2) = v16;
        }
        v46 = 0;
        v17 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v17 >= *((_QWORD *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46))return 0;
        }
        else
        {
          v46 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        v18 = *((_DWORD *)a2 + 14);
        v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergePartialFromCodedStream(v16, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v20 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v20, 1);
        v21 = v20 - 1;
        if (v21 < 0 == v13)
          *((_DWORD *)a2 + 14) = v21;
        v22 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v22 + 1;
LABEL_50:
        *((_DWORD *)this + 14) |= 4u;
        v23 = *((_QWORD *)this + 3);
        if (!v23)
        {
          v23 = operator new();
          *(_QWORD *)(v23 + 8) = 0;
          *(_QWORD *)(v23 + 16) = 0;
          *(_QWORD *)v23 = &off_1E25C04C0;
          *(_DWORD *)(v23 + 24) = 0;
          *(_QWORD *)(v23 + 32) = 0;
          *((_QWORD *)this + 3) = v23;
        }
        v46 = 0;
        v24 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v24 >= *((_QWORD *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46))return 0;
        }
        else
        {
          v46 = *v24;
          *((_QWORD *)a2 + 1) = v24 + 1;
        }
        v25 = *((_DWORD *)a2 + 14);
        v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)v23, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v27 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v27, 1);
        v28 = v27 - 1;
        if (v28 < 0 == v13)
          *((_DWORD *)a2 + 14) = v28;
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v29 + 1;
LABEL_64:
        *((_DWORD *)this + 14) |= 8u;
        v30 = *((_QWORD *)this + 4);
        if (!v30)
        {
          v30 = operator new();
          *(_QWORD *)(v30 + 8) = 0;
          *(_QWORD *)(v30 + 16) = 0;
          *(_QWORD *)v30 = &off_1E25C02E0;
          *(_DWORD *)(v30 + 24) = 0;
          *(_QWORD *)(v30 + 32) = 0;
          *((_QWORD *)this + 4) = v30;
        }
        v46 = 0;
        v31 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46))return 0;
        }
        else
        {
          v46 = *v31;
          *((_QWORD *)a2 + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)a2 + 14);
        v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)v30, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v34 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v34, 1);
        v35 = v34 - 1;
        if (v35 < 0 == v13)
          *((_DWORD *)a2 + 14) = v35;
        v36 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v36 + 1;
LABEL_78:
        v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v46) & 1) == 0)
          return 0;
        *((_DWORD *)this + 12) = v46;
        v9 = *((_DWORD *)this + 14) | 0x10;
        *((_DWORD *)this + 14) = v9;
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 != 50)
          continue;
        *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_82:
        *((_DWORD *)this + 14) = v9 | 0x20;
        if (!*((_QWORD *)this + 5))
        {
          v38 = (_QWORD *)operator new();
          *v38 = &off_1E25C0808;
          v38[1] = 0;
          *((_QWORD *)this + 5) = v38;
        }
        v46 = 0;
        v39 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v46))return 0;
        }
        else
        {
          v46 = *v39;
          *((_QWORD *)a2 + 1) = v39 + 1;
        }
        v40 = *((_DWORD *)a2 + 14);
        v41 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v40 + 1;
        if (v40 >= v41)
          return 0;
        v42 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *)wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergePartialFromCodedStream(v42, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v43 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v43, 1);
        v44 = v43 - 1;
        if (v44 < 0 == v13)
          *((_DWORD *)a2 + 14) = v44;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_50;
        goto LABEL_24;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_64;
        goto LABEL_24;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_78;
        goto LABEL_24;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_24;
        v9 = *((_DWORD *)this + 14);
        goto LABEL_82;
      default:
        v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = this;
  v6 = *(_DWORD *)(this + 56);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_17;
  }
LABEL_14:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 48), a3);
    if ((*(_DWORD *)(v5 + 56) & 0x20) == 0)
      return this;
    goto LABEL_21;
  }
LABEL_17:
  v10 = *(_QWORD *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) != 0)
    goto LABEL_20;
LABEL_6:
  if ((v6 & 0x20) == 0)
    return this;
LABEL_21:
  v11 = *(_QWORD *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 40);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation *v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  int v13;
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *v14;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v15;
  int v16;
  uint64_t v17;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 56);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_43;
  }
  if ((*(_BYTE *)(this + 56) & 1) == 0)
  {
    v3 = 0;
    if ((*(_BYTE *)(this + 56) & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *(_DWORD *)(v1 + 56);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = *(CoreNavigation::CLP::LogEntry::Vision::VLLocation **)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v8 = *(CoreNavigation::CLP::LogEntry::Vision::VLLocation **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                 + 16);
    }
    v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::ByteSize(v8);
    v10 = (int)v9;
    if (v9 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    else
      this = 1;
    v3 += v10 + this + 1;
    v2 = *(_DWORD *)(v1 + 56);
  }
LABEL_21:
  if ((v2 & 4) != 0)
  {
    v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(v1 + 24);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                      + 24);
    }
    v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(v11);
    v13 = (int)v12;
    if (v12 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    else
      this = 1;
    v3 += v13 + this + 1;
    v2 = *(_DWORD *)(v1 + 56);
    if ((v2 & 8) == 0)
      goto LABEL_36;
    goto LABEL_30;
  }
  if ((v2 & 8) != 0)
  {
LABEL_30:
    v14 = *(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN **)(v1 + 32);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v14 = *(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                    + 32);
    }
    v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::ByteSize(v14);
    v16 = (int)v15;
    if (v15 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    else
      this = 1;
    v3 += v16 + this + 1;
    v2 = *(_DWORD *)(v1 + 56);
  }
LABEL_36:
  if ((v2 & 0x10) != 0)
    v4 = v3 + 5;
  else
    v4 = v3;
  if ((v2 & 0x20) != 0)
  {
    v17 = *(_QWORD *)(v1 + 40);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v17 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 40);
    }
    *(_DWORD *)(v17 + 8) = 0;
    v4 = (v4 + 2);
  }
LABEL_43:
  *(_DWORD *)(v1 + 52) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  float result;
  uint64_t v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    v7 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    LODWORD(v7) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
    LODWORD(v7) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocalizationResult");
}

uint64_t sub_18D0E4574(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0E457C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0E4584(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0E458C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0E4594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0E459C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0E45A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_18D0E45AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_18D0E45B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_18D0E45BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0E45C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0E45CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_18D0E45D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0E45DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18D0E45E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0E45EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0E45F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18D0E45FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18D0E4604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 272);
}

uint64_t sub_18D0E460C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

uint64_t sub_18D0E4614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::protobuf_ShutdownFile_CoreNavigationCLPVisionLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t result;

  result = CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry::Vision *this, uint64_t a2, uint64_t a3, const char *a4)
{
  CoreNavigation::CLP::LogEntry::Vision *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);

  v4 = (CoreNavigation::CLP::LogEntry::Vision *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPVisionLogEntry.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(v4);
  v5 = operator new();
  *(_QWORD *)(v5 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v5 + 40) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ = v5;
  v6 = CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_;
  *(_QWORD *)v5 = &off_1E25C09E8;
  *(_QWORD *)(v5 + 8) = v6;
  v7 = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
  *(_QWORD *)(v5 + 16) = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_;
  *(_QWORD *)(v5 + 24) = v7;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::Vision::protobuf_ShutdownFile_CoreNavigationCLPVisionLogEntry_2eproto, v8);
}

double CoreNavigation::CLP::LogEntry::Vision::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25C09E8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25C09E8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LogEntry::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t v1;
  _QWORD v2[2];
  char v3;

  v1 = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E0DE8448] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto_impl;
    v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18D0E4788(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::LogEntry::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  double result;

  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 1) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LogEntry *CoreNavigation::CLP::LogEntry::Vision::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25C09E8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18D0E4814(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  CoreNavigation::CLP::LogEntry::Vision::LogEntry *v3;
  int v4;
  int v5;
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *v6;
  uint64_t v7;
  const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *v8;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *v9;
  const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *v10;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *v11;
  const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *v12;
  _BYTE v13[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 8);
      if ((v5 + 1) >= 4)
        __assert_rtn("set_ar_session_state", "CoreNavigationCLPVisionLogEntry.pb.h", 185, "::CoreNavigation::CLP::LogEntry::Vision::ARSessionState_IsValid(value)");
      *((_DWORD *)v3 + 10) |= 1u;
      *((_DWORD *)v3 + 8) = v5;
      v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)v3 + 10) |= 2u;
      v6 = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)operator new();
        v6 = this;
        *((_QWORD *)this + 10) = 0xFFFFFFFFLL;
        *(_QWORD *)this = &off_1E25C03D0;
        *((_QWORD *)this + 1) = 0;
        *((_QWORD *)this + 2) = 0;
        *((_QWORD *)this + 3) = 0;
        v7 = MEMORY[0x1E0DE8338];
        *((_QWORD *)this + 4) = MEMORY[0x1E0DE8338];
        *((_QWORD *)this + 5) = 0;
        *((_DWORD *)this + 22) = 0;
        *((_QWORD *)this + 6) = v7;
        *((_QWORD *)this + 7) = 0;
        *((_QWORD *)this + 8) = 0;
        *((_QWORD *)this + 9) = 0;
        *((_QWORD *)v3 + 1) = this;
      }
      v8 = (const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)*((_QWORD *)a2 + 1);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
        v8 = *(const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                            + 8);
      }
      CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(v6, v8);
      v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0)
          return;
        goto LABEL_21;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    *((_DWORD *)v3 + 10) |= 4u;
    v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((_QWORD *)v3 + 2);
    if (!v9)
    {
      this = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)operator new();
      v9 = this;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *(_QWORD *)this = &off_1E25C0628;
      *((_DWORD *)this + 6) = 0;
      *((_OWORD *)this + 2) = xmmword_18D30ECE0;
      *((_QWORD *)v3 + 2) = this;
    }
    v10 = (const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((_QWORD *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
      v10 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                                  + 16);
    }
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(v9, v10);
    if ((*((_DWORD *)a2 + 10) & 8) != 0)
    {
LABEL_21:
      *((_DWORD *)v3 + 10) |= 8u;
      v11 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)*((_QWORD *)v3 + 3);
      if (!v11)
      {
        this = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)operator new();
        v11 = this;
        *(_QWORD *)this = &off_1E25C0718;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *((_DWORD *)this + 14) = 0;
        *((_QWORD *)v3 + 3) = this;
      }
      v12 = (const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)*((_QWORD *)a2 + 3);
      if (!v12)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
        v12 = *(const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                                    + 24);
      }
      CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(v11, v12);
    }
  }
}

void sub_18D0E4A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  *(_QWORD *)this = &off_1E25C09E8;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::~LogEntry(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LogEntry *)CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LogEntry::New(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 40) = 0;
  *(_QWORD *)v1 = &off_1E25C09E8;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;

  v1 = this;
  LOBYTE(v2) = *(_BYTE *)(this + 40);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 32) = -1;
    if ((v2 & 2) != 0)
    {
      this = *(_QWORD *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::Clear(this);
        v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::Clear(this);
        v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
        this = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  int v16;
  BOOL v17;
  int v18;
  _BYTE *v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  int v24;
  int v25;
  _BYTE *v26;
  uint64_t v27;
  char *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_18;
        v33 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!(_DWORD)result)
            return result;
          v9 = v33;
        }
        else
        {
          v9 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        if (v9 + 1 <= 3)
        {
          *((_DWORD *)this + 10) |= 1u;
          *((_DWORD *)this + 8) = v9;
        }
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 < *((_QWORD *)a2 + 2) && *v11 == 18)
        {
          *((_QWORD *)a2 + 1) = v11 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
LABEL_28:
        *((_DWORD *)this + 10) |= 2u;
        v12 = *((_QWORD *)this + 1);
        if (!v12)
        {
          v12 = operator new();
          *(_QWORD *)(v12 + 80) = 0xFFFFFFFFLL;
          *(_QWORD *)v12 = &off_1E25C03D0;
          *(_QWORD *)(v12 + 8) = 0;
          *(_QWORD *)(v12 + 16) = 0;
          *(_QWORD *)(v12 + 24) = 0;
          *(_QWORD *)(v12 + 32) = v4;
          *(_QWORD *)(v12 + 40) = 0;
          *(_DWORD *)(v12 + 88) = 0;
          *(_QWORD *)(v12 + 48) = v4;
          *(_QWORD *)(v12 + 56) = 0;
          *(_QWORD *)(v12 + 64) = 0;
          *(_QWORD *)(v12 + 72) = 0;
          *((_QWORD *)this + 1) = v12;
        }
        v33 = 0;
        v13 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33))return 0;
        }
        else
        {
          v33 = *v13;
          *((_QWORD *)a2 + 1) = v13 + 1;
        }
        v14 = *((_DWORD *)a2 + 14);
        v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)v12, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v16 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v16, 1);
        v18 = v16 - 1;
        if (v18 < 0 == v17)
          *((_DWORD *)a2 + 14) = v18;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_42:
        *((_DWORD *)this + 10) |= 4u;
        v20 = *((_QWORD *)this + 2);
        if (!v20)
        {
          v20 = operator new();
          *(_QWORD *)(v20 + 8) = 0;
          *(_QWORD *)(v20 + 16) = 0;
          *(_QWORD *)v20 = &off_1E25C0628;
          *(_DWORD *)(v20 + 24) = 0;
          *(_OWORD *)(v20 + 32) = xmmword_18D30ECE0;
          *((_QWORD *)this + 2) = v20;
        }
        v33 = 0;
        v21 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v21 >= *((_QWORD *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33))return 0;
        }
        else
        {
          v33 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        v22 = *((_DWORD *)a2 + 14);
        v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)v20, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v24 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v24, 1);
        v25 = v24 - 1;
        if (v25 < 0 == v17)
          *((_DWORD *)a2 + 14) = v25;
        v26 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v26 >= *((_QWORD *)a2 + 2) || *v26 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_56:
        *((_DWORD *)this + 10) |= 8u;
        v27 = *((_QWORD *)this + 3);
        if (!v27)
        {
          v27 = operator new();
          *(_QWORD *)v27 = &off_1E25C0718;
          *(_OWORD *)(v27 + 8) = 0u;
          *(_OWORD *)(v27 + 24) = 0u;
          *(_OWORD *)(v27 + 40) = 0u;
          *(_DWORD *)(v27 + 56) = 0;
          *((_QWORD *)this + 3) = v27;
        }
        v33 = 0;
        v28 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v28 >= *((_QWORD *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33))return 0;
        }
        else
        {
          v33 = *v28;
          *((_QWORD *)a2 + 1) = v28 + 1;
        }
        v29 = *((_DWORD *)a2 + 14);
        v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)v27, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v31 = *((_DWORD *)a2 + 14);
        v17 = __OFSUB__(v31, 1);
        v32 = v31 - 1;
        if (v32 < 0 == v17)
          *((_DWORD *)a2 + 14) = v32;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_42;
        goto LABEL_18;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        goto LABEL_56;
      default:
        v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::Vision::LogEntry::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = this;
  v6 = this[10];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[8], (uint64_t)a2, a4);
    v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    goto LABEL_13;
  }
LABEL_10:
  v8 = *((_QWORD *)v5 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 16);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((v5[10] & 8) != 0)
  {
LABEL_13:
    v9 = *((_QWORD *)v5 + 3);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 24);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  uint64_t v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  int v8;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;
  uint64_t v13;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v14;
  int v15;
  int v16;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_34;
  }
  if ((*((_BYTE *)this + 40) & 1) != 0)
  {
    v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      v3 = 11;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else if (v4 >= 0x80)
    {
      v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      v2 = *((_DWORD *)this + 10);
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
    else
    {
      v3 = 2;
      if ((v2 & 2) == 0)
        goto LABEL_19;
    }
  }
  else
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_19;
  }
  v5 = *((_QWORD *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(0);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 8);
  }
  v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::ByteSize(v5);
  v7 = (int)v6;
  if (v6 >= 0x80)
    v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  else
    v8 = 1;
  v3 = (v3 + v7 + v8 + 1);
  v2 = *((_DWORD *)this + 10);
LABEL_19:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_34;
    goto LABEL_28;
  }
  v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((_QWORD *)this + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(0);
    v9 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                         + 16);
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::ByteSize(v9);
  v11 = (int)v10;
  if (v10 >= 0x80)
    v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  else
    v12 = 1;
  v3 = (v3 + v11 + v12 + 1);
  if ((*((_DWORD *)this + 10) & 8) != 0)
  {
LABEL_28:
    v13 = *((_QWORD *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(0);
      v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 24);
    }
    v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::ByteSize(v13);
    v15 = (int)v14;
    if (v14 >= 0x80)
      v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    else
      v16 = 1;
    v3 = (v3 + v15 + v16 + 1);
  }
LABEL_34:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LogEntry *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)this)
  {
    v2 = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v3 = *(_QWORD *)(this + 8);
    *(_QWORD *)(this + 8) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *(_QWORD *)(this + 16);
    *(_QWORD *)(this + 16) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    v5 = *(_QWORD *)(this + 24);
    *(_QWORD *)(this + 24) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::Vision::LogEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.Vision.LogEntry");
}

uint64_t sub_18D0E5484(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t CoreNavigation::CLP::LogEntry::protobuf_ShutdownFile_CoreNavigationCLPLogEntry_2eproto(CoreNavigation::CLP::LogEntry *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::LogEntry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_);
  result = CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_;
  if (CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry *this, uint64_t a2, uint64_t a3, const char *a4)
{
  CoreNavigation::CLP::LogEntry::PrivateData *v4;
  CoreNavigation::CLP::LogEntry::LogEntry *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPLogEntry.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(v4);
  v5 = (CoreNavigation::CLP::LogEntry::LogEntry *)operator new();
  CoreNavigation::CLP::LogEntry::LogEntry::LogEntry(v5);
  CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ = (uint64_t)v5;
  v6 = operator new();
  *(_QWORD *)v6 = &off_1E25BE6C0;
  *(_OWORD *)(v6 + 8) = 0u;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_QWORD *)(v6 + 40) = 0;
  CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_ = v6;
  v7 = CoreNavigation::CLP::LogEntry::LogEntry::default_instance_;
  v8 = CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 32) = v6;
  *(_QWORD *)(v7 + 40) = v8;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::protobuf_ShutdownFile_CoreNavigationCLPLogEntry_2eproto, v9);
}

void sub_18D0E5588(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D78B5D4](v1, 0x10A1C400739E6B9);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::LogEntry_TimeStamp(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BE6C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BE6C0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
  *(_QWORD *)(this + 32) = CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_;
  *(_QWORD *)(this + 40) = v1;
  return this;
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::LogEntry_TimeStamp(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  *(_QWORD *)this = &off_1E25BE6C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0E5664(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  double result;
  int v5;
  uint64_t v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0)
      return result;
LABEL_8:
    v6 = *((_QWORD *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((_QWORD *)this + 4) = v6;
  }
  return result;
}

void sub_18D0E5768(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::New(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BE6C0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 44);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_QWORD *)(v5 + 32), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;

  v2 = *((unsigned __int8 *)this + 44);
  if (*((_BYTE *)this + 44))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 8) != 0)
      v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[4])
         + 1;
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::Swap(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  uint64_t v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.LogEntry.TimeStamp");
}

_QWORD *CoreNavigation::CLP::LogEntry::LogEntry::SharedCtor(_QWORD *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::LogEntry *this, const CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  *(_QWORD *)this = &off_1E25C0AD8;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8));
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(this, a2);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::LogEntry *this, const CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  CoreNavigation::CLP::LogEntry::LogEntry *v3;
  int v4;
  CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *v5;
  const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *v6;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *v7;
  const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *v8;
  _BYTE v10[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 52);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 52) & 1) != 0)
    {
      *((_DWORD *)v3 + 13) |= 1u;
      v5 = (CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *)*((_QWORD *)v3 + 4);
      if (!v5)
      {
        this = (CoreNavigation::CLP::LogEntry::LogEntry *)operator new();
        v5 = this;
        *(_QWORD *)this = &off_1E25BE6C0;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)this + 5) = 0;
        *((_QWORD *)v3 + 4) = this;
      }
      v6 = (const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *)*((_QWORD *)a2 + 4);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
        v6 = *(const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp **)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                         + 32);
      }
      CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(v5, v6);
      v4 = *((_DWORD *)a2 + 13);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)v3 + 13) |= 2u;
      v7 = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((_QWORD *)v3 + 5);
      if (!v7)
      {
        this = (CoreNavigation::CLP::LogEntry::LogEntry *)operator new();
        v7 = this;
        *(_QWORD *)this = &off_1E25BBD08;
        *(_OWORD *)((char *)this + 24) = 0u;
        *(_OWORD *)((char *)this + 40) = 0u;
        *(_OWORD *)((char *)this + 56) = 0u;
        *(_OWORD *)((char *)this + 72) = 0u;
        *(_OWORD *)((char *)this + 88) = 0u;
        *(_OWORD *)((char *)this + 104) = 0u;
        *(_OWORD *)((char *)this + 120) = 0u;
        *(_OWORD *)((char *)this + 136) = 0u;
        *(_OWORD *)((char *)this + 152) = 0u;
        *(_OWORD *)((char *)this + 168) = 0u;
        *(_OWORD *)((char *)this + 184) = 0u;
        *(_OWORD *)((char *)this + 200) = 0u;
        *(_OWORD *)((char *)this + 216) = 0u;
        *(_OWORD *)((char *)this + 232) = 0u;
        *(_OWORD *)((char *)this + 248) = 0u;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 264) = 0u;
        *(_OWORD *)((char *)this + 280) = 0u;
        *(_OWORD *)((char *)this + 296) = 0u;
        *(_OWORD *)((char *)this + 308) = 0u;
        *((_QWORD *)v3 + 5) = this;
      }
      v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((_QWORD *)a2 + 5);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
        v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture **)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                                      + 40);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)v3 + 8), (const CoreNavigation::CLP::LogEntry::LogEntry *)((char *)a2 + 8));
}

void sub_18D0E5C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
  return CoreNavigation::CLP::LogEntry::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

CoreNavigation::CLP::LogEntry::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::New(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::LogEntry *v1;

  v1 = (CoreNavigation::CLP::LogEntry::LogEntry *)operator new();
  CoreNavigation::CLP::LogEntry::LogEntry::LogEntry(v1);
  return v1;
}

void sub_18D0E5D28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x18D78B5D4](v1, 0x10A1C400739E6B9);
  _Unwind_Resume(a1);
}

CoreNavigation::CLP::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::SerializeWithCachedSizes(CoreNavigation::CLP::LogEntry::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v6;
  CoreNavigation::CLP::LogEntry *result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;

  if ((*((_BYTE *)this + 52) & 1) != 0)
  {
    v6 = *((_QWORD *)this + 4);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 32);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  result = (CoreNavigation::CLP::LogEntry *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8), 2, 3, a2);
  if ((*((_BYTE *)this + 52) & 2) != 0)
  {
    v9 = *((_QWORD *)this + 5);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(result);
      v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 40);
    }
    return (CoreNavigation::CLP::LogEntry *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, v8);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  int v2;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream **v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  int v9;
  int v10;
  uint64_t result;

  if (!*((_BYTE *)this + 52))
  {
    v2 = 0;
    goto LABEL_18;
  }
  if ((*((_BYTE *)this + 52) & 1) == 0)
  {
    v2 = 0;
    if ((*((_BYTE *)this + 52) & 2) == 0)
      goto LABEL_18;
    goto LABEL_12;
  }
  v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream **)*((_QWORD *)this + 4);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(0);
    v3 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream ***)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                            + 32);
  }
  v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::ByteSize(v3);
  v5 = (int)v4;
  if (v4 >= 0x80)
    v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  else
    v6 = 1;
  v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 13) & 2) != 0)
  {
LABEL_12:
    v7 = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((_QWORD *)this + 5);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(0);
      v7 = *(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture **)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                              + 40);
    }
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::ByteSize(v7);
    v9 = (int)v8;
    if (v8 >= 0x80)
      v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    else
      v10 = 1;
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8))
         + v2;
  *((_DWORD *)this + 12) = result;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(this, lpsrc);
}

const CoreNavigation::CLP::LogEntry::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::CopyFrom(const CoreNavigation::CLP::LogEntry::LogEntry *this, const CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  CoreNavigation::CLP::LogEntry::LogEntry *v3;

  if (a2 != this)
  {
    v3 = this;
    (*(void (**)(const CoreNavigation::CLP::LogEntry::LogEntry *))(*(_QWORD *)this + 32))(this);
    return (const CoreNavigation::CLP::LogEntry::LogEntry *)CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(v3, a2);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a2 != (CoreNavigation::CLP::LogEntry::LogEntry *)this)
  {
    v2 = *(_QWORD *)(this + 32);
    *(_QWORD *)(this + 32) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v2;
    v3 = *(_QWORD *)(this + 40);
    *(_QWORD *)(this + 40) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    JUMPOUT(0x18D78AF50);
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::LogEntry::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.LogEntry");
}

uint64_t sub_18D0E5FD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18D0E5FD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPPrivateDataShared_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t result;

  if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_)
    (*(void (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_);
  result = CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_;
  if (CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_
                                              + 8))(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_);
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto_impl(CoreNavigation::CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  void (*v136)(void);

  wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPPrivateDataShared.pb.cc", a4);
  v4 = operator new();
  *(_QWORD *)v4 = &off_1E25BDBF8;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_ = v4;
  v5 = operator new();
  *(_QWORD *)v5 = &off_1E25B9F80;
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  *(_DWORD *)(v5 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ = v5;
  v6 = operator new();
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)v6 = &off_1E25BD4F0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ = v6;
  v7 = operator new();
  *(_QWORD *)v7 = &off_1E25B9E18;
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 24) = 0;
  *(_DWORD *)(v7 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ = v7;
  v8 = operator new();
  *(_QWORD *)(v8 + 40) = 0;
  *(_QWORD *)v8 = &off_1E25BD400;
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  *(_DWORD *)(v8 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ = v8;
  v9 = (_QWORD *)operator new();
  *v9 = &off_1E25B9D28;
  v9[1] = 0;
  v9[2] = 0;
  v9[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ = (uint64_t)v9;
  v10 = operator new();
  *(_QWORD *)(v10 + 40) = 0;
  *(_QWORD *)v10 = &off_1E25BD388;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_DWORD *)(v10 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ = v10;
  v11 = (_QWORD *)operator new();
  *v11 = &off_1E25BC938;
  v11[1] = 0;
  v11[2] = 0;
  v11[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_ = (uint64_t)v11;
  v12 = operator new();
  *(_QWORD *)v12 = &off_1E25BA700;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *(_OWORD *)(v12 + 56) = 0u;
  *(_OWORD *)(v12 + 72) = 0u;
  *(_OWORD *)(v12 + 88) = 0u;
  *(_OWORD *)(v12 + 104) = 0u;
  *(_OWORD *)(v12 + 120) = xmmword_18D30F410;
  *(_QWORD *)(v12 + 136) = 0;
  *(_BYTE *)(v12 + 144) = 0;
  *(_QWORD *)(v12 + 148) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ = v12;
  v13 = operator new();
  *(_QWORD *)(v13 + 28) = 0;
  *(_QWORD *)(v13 + 8) = 0;
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)v13 = &off_1E25BA8E0;
  *(_WORD *)(v13 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_ = v13;
  v14 = (_QWORD *)operator new();
  *v14 = &off_1E25BAA48;
  v14[1] = 0;
  v14[2] = 0;
  v14[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_ = (uint64_t)v14;
  v15 = operator new();
  *(_QWORD *)(v15 + 36) = 0;
  *(_QWORD *)v15 = &off_1E25BBF60;
  *(_QWORD *)(v15 + 8) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0;
  *(_WORD *)(v15 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_ = v15;
  v16 = operator new();
  *(_QWORD *)v16 = &off_1E25BC410;
  *(_QWORD *)(v16 + 288) = 0;
  *(_QWORD *)(v16 + 296) = 0;
  *(_DWORD *)(v16 + 304) = 0;
  *(_DWORD *)(v16 + 356) = 0;
  *(_WORD *)(v16 + 112) = 0;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  *(_OWORD *)(v16 + 40) = 0u;
  *(_OWORD *)(v16 + 56) = 0u;
  *(_OWORD *)(v16 + 72) = 0u;
  *(_QWORD *)(v16 + 88) = 0;
  *(_QWORD *)(v16 + 96) = 0xFFFFFFFFLL;
  *(_QWORD *)(v16 + 104) = 0;
  *(_QWORD *)(v16 + 360) = 0;
  *(_OWORD *)(v16 + 130) = 0u;
  *(_OWORD *)(v16 + 146) = 0u;
  *(_OWORD *)(v16 + 162) = 0u;
  *(_OWORD *)(v16 + 178) = 0u;
  *(_OWORD *)(v16 + 194) = 0u;
  *(_OWORD *)(v16 + 210) = 0u;
  *(_OWORD *)(v16 + 226) = 0u;
  *(_OWORD *)(v16 + 242) = 0u;
  *(_OWORD *)(v16 + 272) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ = v16;
  *(_OWORD *)(v16 + 114) = 0u;
  *(_OWORD *)(v16 + 258) = 0u;
  *(_OWORD *)(v16 + 340) = 0u;
  *(_OWORD *)(v16 + 312) = 0u;
  *(_OWORD *)(v16 + 328) = 0u;
  v17 = operator new();
  *(_QWORD *)v17 = &off_1E25BD1A8;
  *(_QWORD *)(v17 + 8) = 0;
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  *(_QWORD *)(v17 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v17 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_ = v17;
  v18 = operator new();
  *(_QWORD *)v18 = &off_1E25BB2B8;
  *(_DWORD *)(v18 + 8) = 0;
  *(_BYTE *)(v18 + 12) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_ = v18;
  v19 = operator new();
  *(_QWORD *)v19 = &off_1E25BA430;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  *(_QWORD *)(v19 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_ = v19;
  v20 = (_QWORD *)operator new();
  *v20 = &off_1E25BABB0;
  v20[1] = 0;
  v20[2] = 0;
  v20[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_ = (uint64_t)v20;
  v21 = (_QWORD *)operator new();
  *v21 = &off_1E25BBA38;
  v21[1] = 0;
  v22 = MEMORY[0x1E0DE8338];
  v21[2] = MEMORY[0x1E0DE8338];
  v21[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_ = (uint64_t)v21;
  v23 = operator new();
  *(_QWORD *)v23 = &off_1E25BC230;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_ = v23;
  v24 = operator new();
  *(_QWORD *)v24 = &off_1E25BD928;
  *(_QWORD *)(v24 + 8) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 29) = 0;
  *(_OWORD *)(v24 + 40) = 0u;
  *(_OWORD *)(v24 + 56) = 0u;
  *(_OWORD *)(v24 + 72) = 0u;
  *(_OWORD *)(v24 + 88) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ = v24;
  v25 = operator new();
  *(_QWORD *)(v25 + 8) = 0;
  *(_QWORD *)(v25 + 16) = 0;
  *(_QWORD *)v25 = &off_1E25BB150;
  *(_DWORD *)(v25 + 24) = 0;
  *(_QWORD *)(v25 + 32) = 0;
  *(_QWORD *)(v25 + 40) = 0;
  *(_DWORD *)(v25 + 48) = 0;
  *(_QWORD *)(v25 + 56) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_ = v25;
  v26 = operator new();
  *(_QWORD *)v26 = &off_1E25BCAA0;
  *(_WORD *)(v26 + 16) = 0;
  *(_QWORD *)(v26 + 8) = 0x100000000;
  *(_QWORD *)(v26 + 20) = 0;
  *(_DWORD *)(v26 + 28) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_ = v26;
  v27 = operator new();
  *(_QWORD *)v27 = &off_1E25BCB18;
  *(_BYTE *)(v27 + 8) = 0;
  *(_QWORD *)(v27 + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_ = v27;
  v28 = operator new();
  *(_QWORD *)(v28 + 8) = 0;
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)v28 = &off_1E25BA958;
  *(_QWORD *)(v28 + 22) = 0;
  *(_OWORD *)(v28 + 32) = 0u;
  *(_OWORD *)(v28 + 48) = 0u;
  *(_OWORD *)(v28 + 64) = 0u;
  *(_OWORD *)(v28 + 80) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ = v28;
  v29 = operator new();
  *(_QWORD *)v29 = &off_1E25BA160;
  *(_QWORD *)(v29 + 8) = 0;
  *(_QWORD *)(v29 + 16) = 0;
  *(_QWORD *)(v29 + 24) = 0;
  *(_DWORD *)(v29 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ = v29;
  v30 = operator new();
  *(_QWORD *)v30 = &off_1E25BA610;
  *(_OWORD *)(v30 + 8) = 0u;
  *(_OWORD *)(v30 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ = v30;
  v31 = operator new();
  *(_QWORD *)v31 = &off_1E25BC0C8;
  *(_QWORD *)(v31 + 8) = 0;
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  *(_DWORD *)(v31 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ = v31;
  v32 = operator new();
  *(_QWORD *)v32 = &off_1E25BB0D8;
  *(_QWORD *)(v32 + 8) = v22;
  *(_QWORD *)(v32 + 16) = v22;
  *(_OWORD *)(v32 + 24) = 0u;
  *(_DWORD *)(v32 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_ = v32;
  v33 = operator new();
  *(_QWORD *)v33 = &off_1E25BA4A8;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_OWORD *)(v33 + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ = v33;
  v34 = operator new();
  *(_QWORD *)v34 = &off_1E25BC050;
  *(_QWORD *)(v34 + 8) = 0;
  *(_QWORD *)(v34 + 16) = 0;
  *(_QWORD *)(v34 + 24) = 0;
  *(_DWORD *)(v34 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ = v34;
  v35 = operator new();
  *(_QWORD *)(v35 + 28) = 0;
  *(_QWORD *)(v35 + 8) = 0;
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)v35 = &off_1E25B0FD0;
  *(_BYTE *)(v35 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ = v35;
  v36 = operator new();
  *(_QWORD *)v36 = &off_1E25B9FF8;
  *(_OWORD *)(v36 + 8) = 0u;
  *(_OWORD *)(v36 + 24) = 0u;
  *(_OWORD *)(v36 + 40) = 0u;
  *(_DWORD *)(v36 + 56) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_ = v36;
  v37 = operator new();
  *(_QWORD *)v37 = &off_1E25BA1D8;
  *(_QWORD *)(v37 + 8) = 0;
  *(_QWORD *)(v37 + 16) = 0;
  *(_QWORD *)(v37 + 24) = 0;
  *(_DWORD *)(v37 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ = v37;
  v38 = (_QWORD *)operator new();
  v38[1] = 0;
  v38[2] = 0;
  *v38 = &off_1E25BD658;
  CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ = (uint64_t)v38;
  v39 = operator new();
  *(_QWORD *)v39 = &off_1E25BC488;
  *(_OWORD *)(v39 + 8) = 0u;
  *(_OWORD *)(v39 + 24) = 0u;
  *(_OWORD *)(v39 + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ = v39;
  v40 = operator new();
  *(_QWORD *)v40 = &off_1E25BB600;
  *(_OWORD *)(v40 + 8) = 0u;
  *(_OWORD *)(v40 + 24) = 0u;
  *(_OWORD *)(v40 + 40) = 0u;
  *(_OWORD *)(v40 + 56) = 0u;
  *(_OWORD *)(v40 + 72) = 0u;
  *(_OWORD *)(v40 + 84) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ = v40;
  v41 = operator new();
  *(_QWORD *)v41 = &off_1E25BDA90;
  *(_QWORD *)(v41 + 8) = 0;
  *(_QWORD *)(v41 + 16) = 0;
  *(_QWORD *)(v41 + 24) = 0;
  *(_DWORD *)(v41 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ = v41;
  v42 = operator new();
  *(_QWORD *)v42 = &off_1E25BC758;
  *(_OWORD *)(v42 + 8) = 0u;
  *(_OWORD *)(v42 + 24) = 0u;
  *(_OWORD *)(v42 + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ = v42;
  v43 = operator new();
  *(_QWORD *)v43 = &off_1E25BCB90;
  *(_QWORD *)(v43 + 8) = 0;
  *(_QWORD *)(v43 + 16) = 0;
  *(_QWORD *)(v43 + 24) = 0;
  *(_DWORD *)(v43 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ = v43;
  v44 = operator new();
  *(_QWORD *)v44 = &off_1E25BCC08;
  *(_OWORD *)(v44 + 8) = 0u;
  *(_OWORD *)(v44 + 24) = 0u;
  *(_OWORD *)(v44 + 40) = 0u;
  *(_OWORD *)(v44 + 56) = 0u;
  *(_QWORD *)(v44 + 69) = 0;
  *(_OWORD *)(v44 + 80) = 0u;
  *(_OWORD *)(v44 + 96) = 0u;
  *(_OWORD *)(v44 + 112) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ = v44;
  v45 = operator new();
  *(_QWORD *)v45 = &off_1E25BAB38;
  *(_QWORD *)(v45 + 8) = 0;
  *(_QWORD *)(v45 + 16) = 0;
  *(_QWORD *)(v45 + 24) = 0;
  *(_DWORD *)(v45 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ = v45;
  v46 = operator new();
  *(_QWORD *)v46 = &off_1E25BB678;
  *(_OWORD *)(v46 + 8) = 0u;
  *(_OWORD *)(v46 + 24) = 0u;
  *(_OWORD *)(v46 + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_ = v46;
  v47 = operator new();
  *(_QWORD *)v47 = &off_1E25BC2A8;
  *(_QWORD *)(v47 + 56) = 0;
  *(_OWORD *)(v47 + 8) = 0u;
  *(_OWORD *)(v47 + 24) = 0u;
  *(_OWORD *)(v47 + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ = v47;
  v48 = operator new();
  *(_QWORD *)v48 = &off_1E25BD0B8;
  *(_OWORD *)(v48 + 8) = 0u;
  *(_OWORD *)(v48 + 24) = 0u;
  *(_OWORD *)(v48 + 37) = 0u;
  *(_QWORD *)(v48 + 56) = 0;
  *(_QWORD *)(v48 + 64) = 0;
  *(_QWORD *)(v48 + 72) = 0;
  *(_DWORD *)(v48 + 80) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_ = v48;
  v49 = operator new();
  *(_QWORD *)(v49 + 20) = 0;
  *(_QWORD *)v49 = &off_1E25BB858;
  *(_QWORD *)(v49 + 8) = 0;
  *(_WORD *)(v49 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_ = v49;
  v50 = operator new();
  *(_QWORD *)v50 = &off_1E25BD7C0;
  *(_QWORD *)(v50 + 8) = 0xBFF0000000000000;
  *(_WORD *)(v50 + 16) = 0;
  *(_BYTE *)(v50 + 18) = 0;
  *(_OWORD *)(v50 + 20) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_ = v50;
  v51 = operator new();
  *(_QWORD *)v51 = &off_1E25BA2C8;
  *(_QWORD *)(v51 + 52) = 0;
  *(_DWORD *)(v51 + 60) = 0;
  *(_OWORD *)(v51 + 8) = 0u;
  *(_OWORD *)(v51 + 24) = 0u;
  *(_OWORD *)(v51 + 34) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ = v51;
  v52 = operator new();
  *(_QWORD *)v52 = &off_1E25BB948;
  *(_QWORD *)(v52 + 8) = 0;
  *(_OWORD *)(v52 + 16) = xmmword_18D30F420;
  *(_DWORD *)(v52 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ = v52;
  v53 = operator new();
  *(_QWORD *)v53 = &off_1E25BC5F0;
  *(_OWORD *)(v53 + 8) = xmmword_18D30F430;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_ = v53;
  v54 = operator new();
  *(_QWORD *)v54 = &off_1E25BDA18;
  *(_QWORD *)(v54 + 8) = 0;
  *(_QWORD *)(v54 + 16) = 0;
  *(_QWORD *)(v54 + 24) = 0;
  *(_DWORD *)(v54 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ = v54;
  v55 = operator new();
  *(_QWORD *)(v55 + 40) = 0;
  *(_QWORD *)v55 = &off_1E25BA340;
  *(_QWORD *)(v55 + 8) = 0;
  *(_QWORD *)(v55 + 16) = 0;
  *(_QWORD *)(v55 + 24) = 0;
  *(_DWORD *)(v55 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ = v55;
  v56 = (_QWORD *)operator new();
  *v56 = &off_1E25BD5E0;
  v56[1] = 0;
  v56[2] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ = (uint64_t)v56;
  v57 = operator new();
  *(_QWORD *)v57 = &off_1E25BB420;
  *(_OWORD *)(v57 + 8) = 0u;
  *(_OWORD *)(v57 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_ = v57;
  v58 = (_QWORD *)operator new();
  *v58 = &off_1E25BC668;
  v58[1] = 0;
  v58[2] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_ = (uint64_t)v58;
  v59 = operator new();
  *(_QWORD *)v59 = &off_1E25BAAC0;
  *(_OWORD *)(v59 + 8) = 0u;
  *(_OWORD *)(v59 + 24) = 0u;
  *(_OWORD *)(v59 + 40) = 0u;
  *(_OWORD *)(v59 + 56) = 0u;
  *(_OWORD *)(v59 + 72) = 0u;
  *(_QWORD *)(v59 + 88) = v22;
  *(_WORD *)(v59 + 96) = 0;
  *(_QWORD *)(v59 + 144) = 0;
  *(_OWORD *)(v59 + 100) = 0u;
  *(_OWORD *)(v59 + 116) = 0u;
  *(_OWORD *)(v59 + 128) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ = v59;
  v60 = operator new();
  *(_QWORD *)v60 = &off_1E25BDB08;
  *(_QWORD *)(v60 + 8) = 0;
  *(_QWORD *)(v60 + 16) = 0;
  *(_QWORD *)(v60 + 24) = 0;
  *(_DWORD *)(v60 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ = v60;
  v61 = operator new();
  *(_QWORD *)v61 = &off_1E25BB7E0;
  *(_QWORD *)(v61 + 8) = 0;
  *(_QWORD *)(v61 + 16) = 0;
  *(_DWORD *)(v61 + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_ = v61;
  v62 = operator new();
  *(_QWORD *)v62 = &off_1E25BC848;
  *(_OWORD *)(v62 + 8) = 0u;
  *(_OWORD *)(v62 + 24) = 0u;
  *(_QWORD *)(v62 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_ = v62;
  v63 = operator new();
  *(_QWORD *)v63 = &off_1E25BB768;
  *(_QWORD *)(v63 + 8) = 0;
  *(_QWORD *)(v63 + 16) = 0;
  *(_QWORD *)(v63 + 24) = 0;
  *(_DWORD *)(v63 + 32) = 0;
  *(_DWORD *)(v63 + 36) = -1;
  *(_BYTE *)(v63 + 40) = 0;
  *(_QWORD *)(v63 + 64) = 0;
  *(_QWORD *)(v63 + 44) = 0;
  *(_QWORD *)(v63 + 52) = 0;
  *(_DWORD *)(v63 + 60) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ = v63;
  v64 = operator new();
  *(_QWORD *)(v64 + 36) = 0;
  *(_QWORD *)v64 = &off_1E25BB588;
  *(_QWORD *)(v64 + 8) = 0;
  *(_QWORD *)(v64 + 16) = 0;
  *(_QWORD *)(v64 + 24) = 0;
  *(_BYTE *)(v64 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ = v64;
  v65 = operator new();
  *(_QWORD *)(v65 + 40) = 0;
  *(_QWORD *)v65 = &off_1E25BD838;
  *(_QWORD *)(v65 + 8) = 0;
  *(_QWORD *)(v65 + 16) = 0;
  *(_QWORD *)(v65 + 24) = 0;
  *(_DWORD *)(v65 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ = v65;
  v66 = operator new();
  *(_QWORD *)v66 = &off_1E25BC6E0;
  *(_OWORD *)(v66 + 8) = 0u;
  *(_OWORD *)(v66 + 24) = 0u;
  *(_DWORD *)(v66 + 40) = -1;
  *(_WORD *)(v66 + 44) = 0;
  *(_BYTE *)(v66 + 46) = 0;
  *(_DWORD *)(v66 + 48) = 0;
  *(_QWORD *)(v66 + 52) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ = v66;
  v67 = operator new();
  *(_QWORD *)v67 = &off_1E25BBDF8;
  *(_QWORD *)(v67 + 8) = 0;
  *(_DWORD *)(v67 + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_ = v67;
  v68 = operator new();
  *(_QWORD *)v68 = &off_1E25BBAB0;
  *(_QWORD *)(v68 + 8) = 0;
  *(_QWORD *)(v68 + 16) = 0;
  *(_BYTE *)(v68 + 24) = 0;
  *(_OWORD *)(v68 + 28) = 0u;
  *(_OWORD *)(v68 + 44) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ = v68;
  v69 = operator new();
  *(_QWORD *)(v69 + 40) = 0;
  *(_QWORD *)v69 = &off_1E25BA250;
  *(_QWORD *)(v69 + 8) = 0;
  *(_QWORD *)(v69 + 16) = 0;
  *(_QWORD *)(v69 + 24) = 0;
  *(_DWORD *)(v69 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ = v69;
  v70 = operator new();
  *(_QWORD *)v70 = &off_1E25BCFC8;
  *(_OWORD *)(v70 + 8) = 0u;
  *(_OWORD *)(v70 + 24) = 0u;
  *(_OWORD *)(v70 + 40) = 0u;
  *(_OWORD *)(v70 + 56) = 0u;
  *(_QWORD *)(v70 + 72) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_ = v70;
  v71 = (_QWORD *)operator new();
  *v71 = &off_1E25BC1B8;
  v71[1] = 0;
  v71[2] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ = (uint64_t)v71;
  v72 = operator new();
  *(_QWORD *)v72 = &off_1E25BB060;
  *(_QWORD *)(v72 + 8) = 0;
  *(_OWORD *)(v72 + 44) = 0u;
  *(_QWORD *)(v72 + 16) = v22;
  *(_QWORD *)(v72 + 24) = 0;
  *(_QWORD *)(v72 + 32) = 0;
  *(_WORD *)(v72 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_ = v72;
  v73 = operator new();
  *(_BYTE *)(v73 + 16) = 0;
  *(_QWORD *)v73 = &off_1E25BC398;
  *(_QWORD *)(v73 + 8) = 0;
  *(_QWORD *)(v73 + 20) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ = v73;
  v74 = operator new();
  *(_QWORD *)(v74 + 40) = 0;
  *(_QWORD *)v74 = &off_1E25BAC28;
  *(_QWORD *)(v74 + 8) = 0;
  *(_QWORD *)(v74 + 16) = 0;
  *(_QWORD *)(v74 + 24) = 0;
  *(_DWORD *)(v74 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ = v74;
  v75 = operator new();
  *(_QWORD *)v75 = &off_1E25BB3A8;
  *(_QWORD *)(v75 + 52) = 0;
  *(_OWORD *)(v75 + 8) = 0u;
  *(_OWORD *)(v75 + 24) = 0u;
  *(_OWORD *)(v75 + 33) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ = v75;
  v76 = operator new();
  *(_QWORD *)v76 = &off_1E25BCDE8;
  *(_OWORD *)(v76 + 8) = 0u;
  *(_OWORD *)(v76 + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ = v76;
  v77 = (_QWORD *)operator new();
  *v77 = &off_1E25BC7D0;
  v77[1] = 0;
  v77[2] = 0;
  v77[3] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_ = (uint64_t)v77;
  v78 = operator new();
  *(_QWORD *)v78 = &off_1E25BCED8;
  *(_QWORD *)(v78 + 8) = 0;
  *(_QWORD *)(v78 + 16) = 0;
  *(_DWORD *)(v78 + 24) = 0;
  *(_QWORD *)(v78 + 84) = 0;
  *(_OWORD *)(v78 + 32) = 0u;
  *(_OWORD *)(v78 + 48) = 0u;
  *(_OWORD *)(v78 + 64) = 0u;
  *(_BYTE *)(v78 + 80) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_ = v78;
  v79 = operator new();
  *(_QWORD *)v79 = &off_1E25BC500;
  *(_QWORD *)(v79 + 8) = 0;
  *(_QWORD *)(v79 + 16) = 0;
  *(_DWORD *)(v79 + 24) = 0;
  *(_QWORD *)(v79 + 32) = 0;
  *(_QWORD *)(v79 + 40) = 0;
  *(_QWORD *)(v79 + 48) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_ = v79;
  v80 = operator new();
  *(_QWORD *)v80 = &off_1E25BBB28;
  *(_QWORD *)(v80 + 8) = 0;
  *(_QWORD *)(v80 + 16) = 0;
  *(_QWORD *)(v80 + 24) = 0;
  *(_DWORD *)(v80 + 32) = 0;
  *(_OWORD *)(v80 + 40) = 0u;
  *(_OWORD *)(v80 + 56) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ = v80;
  v81 = operator new();
  *(_QWORD *)v81 = &off_1E25BD220;
  *(_QWORD *)(v81 + 8) = 0;
  *(_QWORD *)(v81 + 16) = 0;
  *(_DWORD *)(v81 + 24) = 0;
  *(_QWORD *)(v81 + 32) = 0;
  *(_QWORD *)(v81 + 40) = 0;
  *(_QWORD *)(v81 + 48) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_ = v81;
  v82 = operator new();
  *(_QWORD *)v82 = &off_1E25BD298;
  *(_QWORD *)(v82 + 64) = 0;
  *(_OWORD *)(v82 + 8) = 0u;
  *(_OWORD *)(v82 + 24) = 0u;
  *(_OWORD *)(v82 + 40) = 0u;
  *(_DWORD *)(v82 + 56) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_ = v82;
  v83 = operator new();
  *(_OWORD *)(v83 + 40) = 0u;
  *(_OWORD *)(v83 + 56) = 0u;
  *(_QWORD *)(v83 + 72) = 0;
  *(_QWORD *)v83 = &off_1E25BCF50;
  *(_QWORD *)(v83 + 8) = 0;
  *(_QWORD *)(v83 + 16) = 0;
  *(_QWORD *)(v83 + 24) = 0;
  *(_DWORD *)(v83 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ = v83;
  v84 = operator new();
  *(_QWORD *)v84 = &off_1E25BD310;
  *(_WORD *)(v84 + 8) = 0;
  *(_QWORD *)(v84 + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_ = v84;
  v85 = operator new();
  *(_BYTE *)(v85 + 40) = 0;
  *(_QWORD *)(v85 + 44) = 0;
  *(_QWORD *)v85 = &off_1E25BCC80;
  *(_QWORD *)(v85 + 8) = 0;
  *(_QWORD *)(v85 + 16) = 0;
  *(_QWORD *)(v85 + 24) = 0;
  *(_DWORD *)(v85 + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ = v85;
  v86 = (_QWORD *)operator new();
  *v86 = &off_1E25BB330;
  v86[1] = 0;
  v86[2] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_ = (uint64_t)v86;
  v87 = (_QWORD *)operator new();
  v87[4] = 0;
  *v87 = &off_1E25B9F08;
  v87[1] = 0;
  v87[2] = 0;
  *(_QWORD *)((char *)v87 + 23) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ = (uint64_t)v87;
  v88 = operator new();
  *(_QWORD *)v88 = &off_1E25B9E90;
  *(_OWORD *)(v88 + 8) = 0u;
  *(_OWORD *)(v88 + 24) = 0u;
  *(_DWORD *)(v88 + 40) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ = v88;
  v89 = (_QWORD *)operator new();
  *v89 = &off_1E25BA9D0;
  v89[1] = 0;
  v89[2] = v22;
  v89[3] = v22;
  v89[4] = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_ = (uint64_t)v89;
  v90 = operator new();
  *(_QWORD *)v90 = &off_1E25BA3B8;
  *(_OWORD *)(v90 + 8) = 0u;
  *(_OWORD *)(v90 + 24) = 0u;
  *(_OWORD *)(v90 + 40) = 0u;
  *(_OWORD *)(v90 + 56) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ = v90;
  v91 = operator new();
  *(_QWORD *)v91 = &off_1E25B0EE0;
  *(_DWORD *)(v91 + 48) = 0;
  *(_QWORD *)(v91 + 52) = 0;
  *(_OWORD *)(v91 + 8) = 0u;
  *(_OWORD *)(v91 + 24) = 0u;
  *(_QWORD *)(v91 + 37) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_ = v91;
  v92 = operator new();
  *(_QWORD *)v92 = &off_1E25B0F58;
  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_ = v92;
  *(_QWORD *)(v92 + 76) = 0;
  *(_OWORD *)(v92 + 8) = 0u;
  *(_OWORD *)(v92 + 24) = 0u;
  *(_OWORD *)(v92 + 40) = 0u;
  *(_OWORD *)(v92 + 56) = 0u;
  *(_DWORD *)(v92 + 71) = 0;
  v93 = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_;
  *(_QWORD *)(v93 + 56) = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_;
  v94 = CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_;
  v95 = CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_;
  v96 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(v94 + 16) = v95;
  v97 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_;
  v98 = CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 8) = v96;
  *(_QWORD *)(v98 + 16) = v97;
  v99 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  v97[1] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  v97[2] = v99;
  v100 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
  v97[7] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
  v101 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 8) = v100;
  v101[2] = v99;
  v101[3] = v99;
  v101[4] = v99;
  v102 = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 8) = v96;
  *(_QWORD *)(v102 + 16) = v101;
  *(_QWORD *)(v102 + 32) = CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ + 8) = v96;
  v103 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 88) = CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_;
  v103[17] = CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_;
  v103[40] = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_;
  v104 = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_;
  v105 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  *(_QWORD *)(v104 + 96) = v105;
  v106 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 8) = v96;
  v106[2] = v104;
  v106[5] = CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_;
  v107 = CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_;
  v106[7] = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_;
  v106[8] = v107;
  v108 = CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_;
  v106[10] = CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_;
  v106[11] = v108;
  v106[3] = v103;
  v103[8] = v105;
  v103[13] = v105;
  v103[26] = v105;
  v109 = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
  v110 = CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 8) = v96;
  *(_QWORD *)(v110 + 16) = v109;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ + 16) = v109;
  *(_QWORD *)(v109 + 64) = v96;
  *(_QWORD *)(v109 + 80) = v96;
  v111 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_;
  v112 = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 8) = v96;
  *(_QWORD *)(v112 + 16) = v111;
  *(_QWORD *)(v111 + 24) = v96;
  v113 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 32) = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_;
  v114 = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 8) = v96;
  *(_QWORD *)(v114 + 16) = v113;
  v113[2] = v96;
  v113[3] = v96;
  v113[1] = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ + 8) = v96;
  v115 = CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_;
  v116 = CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 8) = v96;
  *(_QWORD *)(v116 + 16) = v115;
  *(_QWORD *)(v115 + 8) = v96;
  v117 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_;
  v118 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 8) = v96;
  *(_QWORD *)(v118 + 16) = v117;
  *(_QWORD *)(v117 + 8) = v96;
  v119 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_;
  v120 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 8) = v96;
  *(_QWORD *)(v120 + 16) = v119;
  *(_QWORD *)(v119 + 8) = v96;
  v121 = CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 8) = v96;
  *(_QWORD *)(v121 + 16) = v96;
  v122 = CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_ + 8) = v96;
  *(_QWORD *)(v122 + 16) = v96;
  v123 = CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_;
  v124 = CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 24) = CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_;
  *(_QWORD *)(v123 + 32) = v124;
  *(_QWORD *)(v123 + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ + 8) = v96;
  v125 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 104) = CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_;
  v125[17] = CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_;
  v126 = CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 8) = v96;
  *(_QWORD *)(v126 + 16) = v125;
  v125[1] = v96;
  v125[2] = v96;
  v125[3] = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ + 8) = v96;
  v127 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_;
  *(_QWORD *)(v127 + 64) = v96;
  v128 = CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ + 8) = CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_;
  v129 = CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_;
  v130 = CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 24) = v128;
  *(_QWORD *)(v129 + 8) = v96;
  *(_QWORD *)(v130 + 32) = v129;
  *(_QWORD *)(v130 + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ + 8) = v96;
  v131 = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 56) = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_;
  *(_QWORD *)(v131 + 8) = v96;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ + 8) = v96;
  v132 = CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_;
  v133 = CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 8) = v96;
  *(_QWORD *)(v132 + 16) = v133;
  v134 = CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_;
  *(_QWORD *)(v132 + 24) = CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_;
  *(_QWORD *)(v134 + 8) = v96;
  v135 = (_QWORD *)CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_;
  *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 8) = v96;
  v135[2] = v96;
  v135[3] = v96;
  v135[4] = v96;
  v135[5] = CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_;
  v135[6] = v105;
  return wireless_diagnostics::google::protobuf::internal::OnShutdown((wireless_diagnostics::google::protobuf::internal *)CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPPrivateDataShared_2eproto, v136);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BDBF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BDBF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::AccelSample(uint64_t this)
{
  *(_QWORD *)this = &off_1E25B9F80;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25B9F80;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::Accel(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD4F0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD4F0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::GyroSample(uint64_t this)
{
  *(_QWORD *)this = &off_1E25B9E18;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25B9E18;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Gyro(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD400;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD400;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::BaroSample(_QWORD *this)
{
  *this = &off_1E25B9D28;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25B9D28;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::Baro(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD388;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD388;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::ClientLocationCoordinate(_QWORD *this)
{
  *this = &off_1E25BC938;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BC938;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::DaemonLocation(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA700;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = xmmword_18D30F410;
  *((_QWORD *)this + 17) = 0;
  *((_BYTE *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA700;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = xmmword_18D30F410;
  *((_QWORD *)this + 17) = 0;
  *((_BYTE *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MapMatcherData(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BA8E0;
  *(_WORD *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BA8E0;
  *(_WORD *)(this + 24) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::PressureSample(_QWORD *this)
{
  *this = &off_1E25BAA48;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BAA48;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ClientSatelliteInfo(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BBF60;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_WORD *)(this + 32) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BBF60;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_WORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::DaemonLocationPrivate(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC410;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 37) = 0;
  *((_DWORD *)this + 76) = 0;
  *((_DWORD *)this + 89) = 0;
  *((_WORD *)this + 56) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 45) = 0;
  *(_OWORD *)((char *)this + 130) = 0u;
  *(_OWORD *)((char *)this + 146) = 0u;
  *(_OWORD *)((char *)this + 162) = 0u;
  *(_OWORD *)((char *)this + 178) = 0u;
  *(_OWORD *)((char *)this + 194) = 0u;
  *(_OWORD *)((char *)this + 210) = 0u;
  *(_OWORD *)((char *)this + 226) = 0u;
  *(_OWORD *)((char *)this + 242) = 0u;
  *(_OWORD *)((char *)this + 114) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 258) = 0u;
  *(_OWORD *)((char *)this + 340) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC410;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 37) = 0;
  *((_DWORD *)this + 76) = 0;
  *((_DWORD *)this + 89) = 0;
  *((_WORD *)this + 56) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 45) = 0;
  *(_OWORD *)((char *)this + 130) = 0u;
  *(_OWORD *)((char *)this + 146) = 0u;
  *(_OWORD *)((char *)this + 162) = 0u;
  *(_OWORD *)((char *)this + 178) = 0u;
  *(_OWORD *)((char *)this + 194) = 0u;
  *(_OWORD *)((char *)this + 210) = 0u;
  *(_OWORD *)((char *)this + 226) = 0u;
  *(_OWORD *)((char *)this + 242) = 0u;
  *(_OWORD *)((char *)this + 114) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 258) = 0u;
  *(_OWORD *)((char *)this + 340) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::DaemonLocationPrivate_AltitudeInfo(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD1A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD1A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::TechnologyStatus(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BB2B8;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BB2B8;
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::VehicleSpeed(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA430;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA430;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::VehicleHeading(_QWORD *this)
{
  *this = &off_1E25BABB0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BABB0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::XtraFileAvailable(_QWORD *this)
{
  *this = &off_1E25BBA38;
  this[1] = 0;
  this[2] = MEMORY[0x1E0DE8338];
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BBA38;
  this[1] = 0;
  this[2] = MEMORY[0x1E0DE8338];
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::LocationDerivedSpeed(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC230;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC230;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::Location(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD928;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)((char *)this + 29) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD928;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)((char *)this + 29) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::BatchedLocations(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BB150;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BB150;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 56) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::RhythmicGnssStatusUpdate(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCAA0;
  *((_WORD *)this + 8) = 0;
  *(_QWORD *)&result = 0x100000000;
  *((_QWORD *)this + 1) = 0x100000000;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCAA0;
  *((_WORD *)this + 8) = 0;
  *(_QWORD *)&result = 0x100000000;
  *((_QWORD *)this + 1) = 0x100000000;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::RhythmicStreamingControl(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BCB18;
  *(_BYTE *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BCB18;
  *(_BYTE *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BA958;
  *(_QWORD *)((char *)this + 22) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BA958;
  *(_QWORD *)((char *)this + 22) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MotionState(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BA160;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BA160;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::WorkoutUpdate(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA610;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA610;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MotionStateObserver(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BC0C8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BC0C8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::WorkoutSettings(uint64_t this)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)this = &off_1E25BB0D8;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  *(_QWORD *)this = &off_1E25BB0D8;
  *(_QWORD *)(this + 8) = v1;
  *(_QWORD *)(this + 16) = v1;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::WorkoutEvent(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA4A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA4A8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MotionStateMediator(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BC050;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BC050;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MediatedMotionActivity(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25B0FD0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25B0FD0;
  *(_BYTE *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::BodyMetrics(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  double result;

  *(_QWORD *)this = &off_1E25B9FF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25B9FF8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Natalimetry(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BA1D8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BA1D8;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Timer::Timer(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BD658;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BD658;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::DigitalElevationModel(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC488;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC488;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::DirectionOfTravel(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB600;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB600;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MapVector(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BDA90;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BDA90;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::TunnelBridgeAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC758;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC758;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::TunnelBridgeNotification(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BCB90;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BCB90;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::TunnelEndPointAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCC08;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_QWORD *)((char *)this + 69) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCC08;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_QWORD *)((char *)this + 69) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::TunnelEndPoint(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BAB38;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BAB38;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MapsRouteHintData(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB678;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB678;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MapMatchingRouteHint(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC2A8;
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC2A8;
  *((_QWORD *)this + 7) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::AccessoryVehicleSpeedNotification(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD0B8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 37) = 0u;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 20) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD0B8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 37) = 0u;
  *((_QWORD *)this + 8) = 0;
  *((_QWORD *)this + 9) = 0;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 20) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ReachabilityState(uint64_t this)
{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)this = &off_1E25BB858;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)this = &off_1E25BB858;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::Battery(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BD7C0;
  *(_QWORD *)(this + 8) = 0xBFF0000000000000;
  *(_WORD *)(this + 16) = 0;
  *(_BYTE *)(this + 18) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BD7C0;
  *(_QWORD *)(this + 8) = 0xBFF0000000000000;
  *(_WORD *)(this + 16) = 0;
  *(_BYTE *)(this + 18) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::DeviceStatus(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA2C8;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA2C8;
  *((_QWORD *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SignalEnvironment(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB948;
  *((_QWORD *)this + 1) = 0;
  result = NAN;
  *((_OWORD *)this + 1) = xmmword_18D30F420;
  *((_DWORD *)this + 8) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB948;
  *((_QWORD *)this + 1) = 0;
  result = NAN;
  *((_OWORD *)this + 1) = xmmword_18D30F420;
  *((_DWORD *)this + 8) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SignalEnvironmentInfo(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC5F0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 8) = xmmword_18D30F430;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC5F0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 8) = xmmword_18D30F430;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MagSample(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BDA18;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BDA18;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Magnetometer(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BA340;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BA340;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Reset::Reset(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BD5E0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BD5E0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::AccelerometerPace(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB420;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB420;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::FalseStepDetectorState(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BC668;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BC668;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::StepCountEntry(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BAAC0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = MEMORY[0x1E0DE8338];
  *((_WORD *)this + 48) = 0;
  *((_QWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BAAC0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = MEMORY[0x1E0DE8338];
  *((_WORD *)this + 48) = 0;
  *((_QWORD *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::StepCount(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BDB08;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BDB08;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MotionTypeVector3(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BB7E0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BB7E0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MotionTypeDoubleVector4(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC848;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC848;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MotionTypeCompass(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BB768;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0xFFFFFFFF00000000;
  *(_BYTE *)(this + 40) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 52) = 0;
  *(_QWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BB768;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0xFFFFFFFF00000000;
  *(_BYTE *)(this + 40) = 0;
  *(_QWORD *)(this + 64) = 0;
  *(_QWORD *)(this + 52) = 0;
  *(_QWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CompassTypeSample(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BB588;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BB588;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_BYTE *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::Compass(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD838;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BD838;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MotionTypeDeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BC6E0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((_BYTE *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BC6E0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((_BYTE *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SensorFusionStatus(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BBDF8;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BBDF8;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::DeviceMotionSample(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BBAB0;
  *((_BYTE *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  return result;
}

{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BBAB0;
  *((_BYTE *)this + 24) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::DeviceMotion(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BA250;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BA250;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MotionTypeGeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCFC8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCFC8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::GeomagneticModelData(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BC1B8;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BC1B8;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::WifiAccessPoint(uint64_t this)
{
  uint64_t v1;

  *(_QWORD *)this = &off_1E25BB060;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x1E0DE8338];
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_WORD *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  *(_QWORD *)this = &off_1E25BB060;
  *(_QWORD *)(this + 8) = 0;
  v1 = MEMORY[0x1E0DE8338];
  *(_DWORD *)(this + 56) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 16) = v1;
  *(_WORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::WifiAssociationState(uint64_t this)
{
  *(_BYTE *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BC398;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(_BYTE *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BC398;
  *(_QWORD *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::WifiScanResult(uint64_t this)
{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BAC28;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)this = &off_1E25BAC28;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::WifiNotification(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BB3A8;
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BB3A8;
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::GnssAvailabilityPrediction(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BCDE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BCDE8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::GEOLocationCoordinate2D(_QWORD *this)
{
  *this = &off_1E25BC7D0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &off_1E25BC7D0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::GEOMapFeatureBuildingSection(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BCED8;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_BYTE *)this + 80) = 0;
  return result;
}

{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BCED8;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_BYTE *)this + 80) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::GEOMapFeatureBuilding(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BC500;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BC500;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::GEOMapBuildingData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BBB28;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BBB28;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::GEOMapFeatureTropicalSavannaBranch(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD220;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)this = &off_1E25BD220;
  *(_DWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 48) = 0;
  *(_QWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::GEOMapFeatureTropicalSavannaBoundingBox(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BD298;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BD298;
  *((_QWORD *)this + 8) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::GEOMapFeatureTropicalSavanna(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *(_QWORD *)this = &off_1E25BCF50;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_QWORD *)this + 9) = 0;
  *(_QWORD *)this = &off_1E25BCF50;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::GEOMapFeatureTropicalSavanna_TreeFeatures(uint64_t this)
{
  *(_QWORD *)this = &off_1E25BD310;
  *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(_QWORD *)this = &off_1E25BD310;
  *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::GEOMapTropicalSavannaData(uint64_t this)
{
  *(_BYTE *)(this + 40) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)this = &off_1E25BCC80;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(_BYTE *)(this + 40) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_QWORD *)this = &off_1E25BCC80;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::WatchOrientation(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BB330;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25BB330;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WristState::WristState(_QWORD *this)
{
  this[4] = 0;
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25B9F08;
  *(_QWORD *)((char *)this + 23) = 0;
  return this;
}

{
  this[4] = 0;
  this[1] = 0;
  this[2] = 0;
  *this = &off_1E25B9F08;
  *(_QWORD *)((char *)this + 23) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WatchState::WatchState(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  double result;

  *(_QWORD *)this = &off_1E25B9E90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25B9E90;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::PlaceInference(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  double result;
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BA9D0;
  result = 0.0;
  *((_QWORD *)this + 1) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = v2;
  *((_QWORD *)this + 4) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BA9D0;
  result = 0.0;
  *((_QWORD *)this + 1) = 0;
  v2 = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = v2;
  *((_QWORD *)this + 4) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::RoutineVisit(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  double result;

  *(_QWORD *)this = &off_1E25BA3B8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25BA3B8;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::OutdoorUpdate(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  double result;

  *(_QWORD *)this = &off_1E25B0EE0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_QWORD *)((char *)this + 37) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25B0EE0;
  *((_DWORD *)this + 14) = 0;
  *((_QWORD *)this + 6) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_QWORD *)((char *)this + 37) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::InertialOdometrySample(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  double result;

  *(_QWORD *)this = &off_1E25B0F58;
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  return result;
}

{
  double result;

  *(_QWORD *)this = &off_1E25B0F58;
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  *(_QWORD *)(this + 96) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  this[8] = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  this[11] = CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_;
  this[13] = v1;
  this[17] = CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_;
  this[26] = v1;
  this[40] = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Location::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_;
  this[8] = v2;
  v3 = CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_;
  this[10] = CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_;
  this[11] = v3;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 64) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 80) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 24) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_;
  this[3] = v1;
  this[4] = v2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 16) = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  v1 = CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_;
  this[4] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[13] = CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_;
  this[17] = CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  this[2] = v1;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_;
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[4] = CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 64) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  v1 = CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_;
  this[4] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(_QWORD *)(this + 56) = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_;
  *(_QWORD *)(this + 56) = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::InitAsDefaultInstance(uint64_t this)
{
  *(_QWORD *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::WatchState::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::InitAsDefaultInstance(_QWORD *this)
{
  uint64_t v1;
  uint64_t v2;

  v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  v2 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_;
  this[6] = v2;
  return this;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::LocationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xE;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteConstellation_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocationFixType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GnssModeOfOperation_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssWakeMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BatchMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::OperatingMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::PipelineOperatingMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  int v1;
  uint64_t result;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v1 = (int)this;
  result = 1;
  if (v1 <= 11804)
  {
    if (v1 > 2009)
    {
      if (((v1 - 2010) > 0x3D || ((1 << (v1 + 38)) & 0x2488004000005401) == 0)
        && ((v1 - 2101) > 0x31 || ((1 << (v1 - 53)) & 0x2000000000011) == 0)
        && (v1 - 3015) >= 2)
      {
        return 0;
      }
      return result;
    }
    if (v1 < 0xC)
      return result;
    v4 = v1 - 41;
    if (v4 <= 0x3B)
    {
      v5 = 1 << v4;
      v6 = 0x800000003F08801;
      goto LABEL_33;
    }
    return 0;
  }
  if (v1 <= 15651)
  {
    if (v1 > 15329)
    {
      if ((v1 - 15562) <= 0x3A && ((1 << (v1 + 54)) & 0x401000040000001) != 0
        || (v1 - 15330) <= 0x1E && ((1 << (v1 + 30)) & 0x40100001) != 0)
      {
        return result;
      }
      v3 = 15460;
    }
    else if (v1 <= 15054)
    {
      if (v1 == 11805 || v1 == 12150)
        return result;
      v3 = 15030;
    }
    else
    {
      if ((v1 - 15100) <= 0x32 && ((1 << (v1 + 4)) & 0x4000000000401) != 0
        || (v1 - 15230) <= 0x19 && ((1 << (v1 - 126)) & 0x2000401) != 0)
      {
        return result;
      }
      v3 = 15055;
    }
    goto LABEL_51;
  }
  if (v1 > 18199)
  {
    if (v1 > 19149)
    {
      if (v1 <= 90602)
      {
        if (v1 == 19150)
          return result;
        v3 = 19160;
      }
      else
      {
        if (v1 == 90603 || v1 == 515621)
          return result;
        v3 = 515652;
      }
    }
    else
    {
      if ((v1 - 18200) <= 0x28 && ((1 << (v1 - 24)) & 0x10002000001) != 0
        || v1 == 19030)
      {
        return result;
      }
      v3 = 19090;
    }
    goto LABEL_51;
  }
  if (v1 > 15732)
  {
    if (v1 == 15733 || v1 == 17150)
      return result;
    v3 = 18070;
LABEL_51:
    if (v1 == v3)
      return result;
    return 0;
  }
  v7 = v1 - 15652;
  if (v7 > 0x3A)
    return 0;
  v5 = 1 << v7;
  v6 = 0x400000000840101;
LABEL_33:
  if ((v5 & v6) == 0)
    return 0;
  return result;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4 || (_DWORD)this == 1001;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BatteryChargerType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentFidelityLevel_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompassCalibrationLevel_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return ((_DWORD)this + 1) < 8;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPointMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiRfBand_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiScanType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xF;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiNotificationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xF;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::LocationServicesEnabled_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DataAvailability_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorConfidence_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  *(_QWORD *)this = &off_1E25BDBF8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18D0E95FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0E96E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::New(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BDBF8;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TimeStamp");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::AccelSample(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  *(_QWORD *)this = &off_1E25B9F80;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(this, a2);
  return this;
}

void sub_18D0E99AC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *v3;
  double v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    *((_DWORD *)v3 + 8) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_
                                                                           + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_16:
      LODWORD(v4) = *((_DWORD *)a2 + 5);
      *((_DWORD *)v3 + 8) |= 4u;
      *((_DWORD *)v3 + 5) = LODWORD(v4);
      if ((*((_DWORD *)a2 + 8) & 8) != 0)
        goto LABEL_8;
      return *(float *)&v4;
    }
  }
  else if ((*((_BYTE *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)v3 + 8) |= 2u;
  *((_DWORD *)v3 + 4) = LODWORD(v4);
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0)
    goto LABEL_16;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 8u;
    *((_DWORD *)v3 + 6) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18D0E9B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::~AccelSample(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25B9F80;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *)CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::~AccelSample(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *)CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::New(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25B9F80;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 32))
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t result;
  unsigned int v18;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 8) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v18 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0;
        }
        else
        {
          v18 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
LABEL_31:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_35:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_39:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_35;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
        goto LABEL_39;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.AccelSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Accel *CoreNavigation::CLP::LogEntry::PrivateData::Accel::Accel(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BD4F0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(this, a2);
  return this;
}

void sub_18D0EA268(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25B9F80;
        *(_QWORD *)(v11 + 8) = 0;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)(v11 + 24) = 0;
        *(_DWORD *)(v11 + 32) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D0EA448(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Accel::~Accel(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD4F0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Accel::~Accel(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Accel::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::New(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BD4F0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E25B9F80;
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_QWORD *)(v19 + 24) = 0;
          *(_DWORD *)(v19 + 32) = 0;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(_QWORD *)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
      v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample **)(*((_QWORD *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Accel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Accel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Accel *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Accel *CoreNavigation::CLP::LogEntry::PrivateData::Accel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Accel *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Accel::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Accel");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::GyroSample(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  *(_QWORD *)this = &off_1E25B9E18;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(this, a2);
  return this;
}

void sub_18D0EAC2C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *v3;
  double v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 32);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 32) & 1) != 0)
  {
    *((_DWORD *)v3 + 8) |= 1u;
    v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
    if (!v6)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *)operator new();
      v6 = this;
      *(_QWORD *)this = &off_1E25BDBF8;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 1) = this;
    }
    v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_
                                                                           + 8);
    }
    v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0)
        goto LABEL_7;
LABEL_16:
      LODWORD(v4) = *((_DWORD *)a2 + 5);
      *((_DWORD *)v3 + 8) |= 4u;
      *((_DWORD *)v3 + 5) = LODWORD(v4);
      if ((*((_DWORD *)a2 + 8) & 8) != 0)
        goto LABEL_8;
      return *(float *)&v4;
    }
  }
  else if ((*((_BYTE *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)v3 + 8) |= 2u;
  *((_DWORD *)v3 + 4) = LODWORD(v4);
  v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0)
    goto LABEL_16;
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 8) |= 8u;
    *((_DWORD *)v3 + 6) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18D0EAD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::~GyroSample(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25B9E18;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *)CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::~GyroSample(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *)CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::New(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25B9E18;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 32))
  {
    if ((*(_BYTE *)(this + 32) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  uint64_t v7;
  char *v8;
  int v9;
  int v10;
  int v11;
  BOOL v12;
  int v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t result;
  unsigned int v18;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_19;
        *((_DWORD *)this + 8) |= 1u;
        v7 = *((_QWORD *)this + 1);
        if (!v7)
        {
          v7 = operator new();
          *(_QWORD *)v7 = &off_1E25BDBF8;
          *(_OWORD *)(v7 + 8) = 0u;
          *(_OWORD *)(v7 + 24) = 0u;
          *((_QWORD *)this + 1) = v7;
        }
        v18 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0;
        }
        else
        {
          v18 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
        }
        v9 = *((_DWORD *)a2 + 14);
        v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v7, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v11 = *((_DWORD *)a2 + 14);
        v12 = __OFSUB__(v11, 1);
        v13 = v11 - 1;
        if (v13 < 0 == v12)
          *((_DWORD *)a2 + 14) = v13;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 21)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
LABEL_31:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v15 + 1;
LABEL_35:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 >= *((_QWORD *)a2 + 2) || *v16 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v16 + 1;
LABEL_39:
        v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) != 0)
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_35;
        goto LABEL_19;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 != 5)
          goto LABEL_19;
        goto LABEL_39;
      default:
        v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 32);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 32) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 8);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      v3 += 5;
    if ((v2 & 8) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  uint64_t v2;
  int v3;
  int v4;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GyroSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Gyro *CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Gyro(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BD400;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(this, a2);
  return this;
}

void sub_18D0EB4E8(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = operator new();
        *(_QWORD *)v11 = &off_1E25B9E18;
        *(_QWORD *)(v11 + 8) = 0;
        *(_QWORD *)(v11 + 16) = 0;
        *(_QWORD *)(v11 + 24) = 0;
        *(_DWORD *)(v11 + 32) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(_QWORD *)(v10 + 8 * v9);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *)v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D0EB6C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Gyro::~Gyro(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD400;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::~Gyro(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::New(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BD400;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = operator new();
          *(_QWORD *)v19 = &off_1E25B9E18;
          *(_QWORD *)(v19 + 8) = 0;
          *(_QWORD *)(v19 + 16) = 0;
          *(_QWORD *)(v19 + 24) = 0;
          *(_DWORD *)(v19 + 32) = 0;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(_QWORD *)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *)v19, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
      v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample **)(*((_QWORD *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Gyro::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Gyro::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Gyro *CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Gyro::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Gyro");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::BaroSample(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  *(_QWORD *)this = &off_1E25B9D28;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(this, a2);
  return this;
}

void sub_18D0EBEA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *v3;
  double v4;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  _BYTE v9[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if (!(_BYTE)v5)
    return *(float *)&v4;
  if ((*((_BYTE *)a2 + 28) & 1) == 0)
  {
    if ((*((_BYTE *)a2 + 28) & 2) == 0)
      goto LABEL_6;
LABEL_14:
    LODWORD(v4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)v3 + 7) |= 2u;
    *((_DWORD *)v3 + 4) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 7) & 4) != 0)
      goto LABEL_7;
    return *(float *)&v4;
  }
  *((_DWORD *)v3 + 7) |= 1u;
  v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
  if (!v6)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *)operator new();
    v6 = this;
    *(_QWORD *)this = &off_1E25BDBF8;
    *(_OWORD *)((char *)this + 8) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
    *((_QWORD *)v3 + 1) = this;
  }
  v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_
                                                                         + 8);
  }
  v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
  v5 = *((_DWORD *)a2 + 7);
  if ((v5 & 2) != 0)
    goto LABEL_14;
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    LODWORD(v4) = *((_DWORD *)a2 + 5);
    *((_DWORD *)v3 + 7) |= 4u;
    *((_DWORD *)v3 + 5) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18D0EBFE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::~BaroSample(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25B9D28;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *)CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::~BaroSample(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *)CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::New(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25B9D28;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::Clear(uint64_t this)
{
  uint64_t v1;

  if (*(_BYTE *)(this + 28))
  {
    if ((*(_BYTE *)(this + 28) & 1) != 0)
    {
      v1 = *(_QWORD *)(this + 8);
      if (v1)
      {
        if (*(_BYTE *)(v1 + 36))
        {
          *(_QWORD *)(v1 + 8) = 0;
          *(_QWORD *)(v1 + 16) = 0;
          *(_QWORD *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t result;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      v6 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
        break;
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 5)
          goto LABEL_20;
LABEL_32:
        v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v19) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v19;
        *((_DWORD *)this + 7) |= 2u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v16 < *((_QWORD *)a2 + 2) && *v16 == 29)
        {
          *((_QWORD *)a2 + 1) = v16 + 1;
          goto LABEL_36;
        }
      }
      else
      {
        if (v6 != 3)
        {
          v7 = TagFallback & 7;
          goto LABEL_20;
        }
        v7 = TagFallback & 7;
        if (v7 == 5)
        {
LABEL_36:
          v18 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0)
            return 0;
          *((_DWORD *)this + 5) = v18;
          *((_DWORD *)this + 7) |= 4u;
          if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            result = 1;
            *((_BYTE *)a2 + 36) = 1;
            return result;
          }
        }
        else
        {
LABEL_20:
          if (v7 == 4)
            return 1;
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        }
      }
    }
    v7 = TagFallback & 7;
    if (v7 != 2)
      goto LABEL_20;
    *((_DWORD *)this + 7) |= 1u;
    v8 = *((_QWORD *)this + 1);
    if (!v8)
    {
      v8 = operator new();
      *(_QWORD *)v8 = &off_1E25BDBF8;
      *(_OWORD *)(v8 + 8) = 0u;
      *(_OWORD *)(v8 + 24) = 0u;
      *((_QWORD *)this + 1) = v8;
    }
    v20 = 0;
    v9 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20))
        return 0;
    }
    else
    {
      v20 = *v9;
      *((_QWORD *)a2 + 1) = v9 + 1;
    }
    v10 = *((_DWORD *)a2 + 14);
    v11 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v10 + 1;
    if (v10 >= v11)
      return 0;
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    v12 = *((_DWORD *)a2 + 14);
    v13 = __OFSUB__(v12, 1);
    v14 = v12 - 1;
    if (v14 < 0 == v13)
      *((_DWORD *)a2 + 14) = v14;
    v15 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 21)
    {
      *((_QWORD *)a2 + 1) = v15 + 1;
      goto LABEL_32;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  if ((*(_DWORD *)(v5 + 28) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  uint64_t v5;
  int v6;
  int v7;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v5 = *((_QWORD *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ + 8);
      }
      v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(_BYTE *)(v5 + 36))
      {
        v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0)
          v7 += 9;
        if ((v6 & 4) != 0)
          v6 = v7 + 9;
        else
          v6 = v7;
      }
      *(_DWORD *)(v5 + 32) = v6;
      v3 = v6 + 2;
      v2 = *((_DWORD *)this + 7);
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v3 += 5;
    if ((v2 & 4) != 0)
      result = v3 + 5;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  float result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  uint64_t v2;
  int v3;
  float result;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    result = *((float *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((float *)a2 + 5) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BaroSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Baro *CoreNavigation::CLP::LogEntry::PrivateData::Baro::Baro(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  *((_QWORD *)this + 5) = 0;
  *(_QWORD *)this = &off_1E25BD388;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(this, a2);
  return this;
}

void sub_18D0EC698(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_18D09ECA4(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  uint64_t v4;
  double result;
  uint64_t v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *v11;
  uint64_t v12;
  uint64_t v13;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v14;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v15;
  _BYTE v16[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    v6 = 0;
    do
    {
      v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(*((_QWORD *)a2 + 2) + 8 * v6);
      v8 = *((_DWORD *)this + 7);
      v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)((char *)this + 16));
          v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        v11 = (CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *)operator new();
        *(_QWORD *)v11 = &off_1E25B9D28;
        *((_QWORD *)v11 + 1) = 0;
        *((_QWORD *)v11 + 2) = 0;
        *((_QWORD *)v11 + 3) = 0;
        v12 = *((_QWORD *)this + 2);
        v13 = *((int *)this + 6);
        *((_DWORD *)this + 6) = v13 + 1;
        *(_QWORD *)(v12 + 8 * v13) = v11;
      }
      else
      {
        v10 = *((_QWORD *)this + 2);
        *((_DWORD *)this + 6) = v9 + 1;
        v11 = *(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(v10 + 8 * v9);
      }
      *(float *)&result = CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(v11, v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if ((*((_BYTE *)a2 + 44) & 1) != 0)
  {
    *((_DWORD *)this + 11) |= 1u;
    v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)this + 1);
    if (!v14)
    {
      v4 = operator new();
      v14 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v4;
      *(_QWORD *)v4 = &off_1E25BDBF8;
      *(_OWORD *)(v4 + 8) = 0u;
      *(_OWORD *)(v4 + 24) = 0u;
      *((_QWORD *)this + 1) = v4;
    }
    v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v14, v15);
  }
  return result;
}

void sub_18D0EC874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Baro::~Baro(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_1E25BD388;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
  sub_18D09ECA4((uint64_t *)this + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::~Baro(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Baro::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  uint64_t v2;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::New(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BD388;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v2 = *(_QWORD *)(this + 8);
    if (v2)
    {
      if (*(_BYTE *)(v2 + 36))
      {
        *(_QWORD *)(v2 + 8) = 0;
        *(_QWORD *)(v2 + 16) = 0;
        *(_QWORD *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  if (*(int *)(this + 24) >= 1)
  {
    v3 = 0;
    do
    {
      v4 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  BOOL v13;
  int v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  int v25;
  int v26;
  _BYTE *v27;
  uint64_t result;
  unsigned int v29;
  unsigned int v30;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        v5 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v5 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_18;
        *((_DWORD *)this + 11) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v29 = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0;
        }
        else
        {
          v29 = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v10 = *((_DWORD *)a2 + 14);
        v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v12 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v12, 1);
        v14 = v12 - 1;
        if (v14 < 0 == v13)
          *((_DWORD *)a2 + 14) = v14;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v15 < *((_QWORD *)a2 + 2) && *v15 == 18)
          goto LABEL_29;
      }
      if (TagFallback >> 3 != 2)
        break;
      v7 = TagFallback & 7;
      if (v7 != 2)
        goto LABEL_18;
      while (1)
      {
        v16 = *((_DWORD *)this + 7);
        v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          v19 = (CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *)operator new();
          *(_QWORD *)v19 = &off_1E25B9D28;
          *((_QWORD *)v19 + 1) = 0;
          *((_QWORD *)v19 + 2) = 0;
          *((_QWORD *)v19 + 3) = 0;
          v20 = *((_QWORD *)this + 2);
          v21 = *((int *)this + 6);
          *((_DWORD *)this + 6) = v21 + 1;
          *(_QWORD *)(v20 + 8 * v21) = v19;
        }
        else
        {
          v18 = *((_QWORD *)this + 2);
          *((_DWORD *)this + 6) = v17 + 1;
          v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(v18 + 8 * v17);
        }
        v30 = 0;
        v22 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v22 >= *((_QWORD *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0;
        }
        else
        {
          v30 = *v22;
          *((_QWORD *)a2 + 1) = v22 + 1;
        }
        v23 = *((_DWORD *)a2 + 14);
        v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergePartialFromCodedStream(v19, a2)
          || !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v25 = *((_DWORD *)a2 + 14);
        v13 = __OFSUB__(v25, 1);
        v26 = v25 - 1;
        if (v26 < 0 == v13)
          *((_DWORD *)a2 + 14) = v26;
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v27 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v15 >= v27 || *v15 != 18)
          break;
LABEL_29:
        *((_QWORD *)a2 + 1) = v15 + 1;
      }
      if (v15 == v27 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if ((*(_BYTE *)(this + 44) & 1) != 0)
  {
    v6 = *(_QWORD *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  if ((*((_BYTE *)this + 44) & 1) != 0)
  {
    v3 = *((_QWORD *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v3 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ + 8);
    }
    v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(_BYTE *)(v3 + 36))
    {
      v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0)
        v5 += 9;
      if ((v4 & 4) != 0)
        v4 = v5 + 9;
      else
        v4 = v5;
    }
    *(_DWORD *)(v3 + 32) = v4;
    v2 = v4 + 2;
  }
  else
  {
    v2 = 0;
  }
  v6 = *((_DWORD *)this + 6);
  v7 = (v6 + v2);
  if (v6 >= 1)
  {
    v8 = 0;
    do
      v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(*((_QWORD *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Baro::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Baro::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Baro *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Baro *CoreNavigation::CLP::LogEntry::PrivateData::Baro::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Baro *v3;
  uint64_t v4;
  int v5;
  int v6;

  if (a2 != this)
  {
    v3 = this;
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Baro::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Baro");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::ClientLocationCoordinate(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  *(_QWORD *)this = &off_1E25BC938;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(this, a2);
  return this;
}

void sub_18D0ED048(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0ED104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::~ClientLocationCoordinate(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  *(_QWORD *)this = &off_1E25BC938;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::~ClientLocationCoordinate(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::New(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BC938;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ClientLocationCoordinate");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_ClientLocationSuitabilityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3 || (_DWORD)this == 0xFFFF;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_LocationIntegrityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  int v1;
  _BOOL8 result;

  v1 = (int)this;
  result = 1;
  if ((v1 - 25) > 0x32 || ((1 << (v1 - 25)) & 0x4000002000001) == 0)
    return (v1 + 1) < 2;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  double result;

  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = xmmword_18D30F410;
  *((_QWORD *)this + 17) = 0;
  *((_BYTE *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::DaemonLocation(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  *(_QWORD *)this = &off_1E25BA700;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = xmmword_18D30F410;
  *((_QWORD *)this + 17) = 0;
  *((_BYTE *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(this, a2);
  return this;
}

void sub_18D0ED630(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v19;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v20;
  uint64_t v21;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v22;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  v4 = *((_DWORD *)a2 + 38);
  if (!(_BYTE)v4)
    goto LABEL_16;
  if ((v4 & 1) != 0)
  {
    v5 = *((_DWORD *)a2 + 12);
    if (v5 >= 3 && v5 != 0xFFFF)
      __assert_rtn("set_suitability", "CoreNavigationCLPPrivateDataShared.pb.h", 14312, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_ClientLocationSuitabilityType_IsValid(value)");
    *((_DWORD *)v3 + 38) |= 1u;
    *((_DWORD *)v3 + 12) = v5;
    v4 = *((_DWORD *)a2 + 38);
  }
  if ((v4 & 2) != 0)
  {
    *((_DWORD *)v3 + 38) |= 2u;
    v22 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)v3 + 1);
    if (!v22)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)operator new();
      v22 = this;
      *(_QWORD *)this = &off_1E25BC938;
      *((_QWORD *)this + 1) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)this + 3) = 0;
      *((_QWORD *)v3 + 1) = this;
    }
    v23 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)a2 + 1);
    if (!v23)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v23 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_
                                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v22, v23);
    v4 = *((_DWORD *)a2 + 38);
    if ((v4 & 4) == 0)
    {
LABEL_10:
      if ((v4 & 8) == 0)
        goto LABEL_11;
      goto LABEL_65;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_10;
  }
  v24 = *((_QWORD *)a2 + 2);
  *((_DWORD *)v3 + 38) |= 4u;
  *((_QWORD *)v3 + 2) = v24;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0)
      goto LABEL_12;
    goto LABEL_66;
  }
LABEL_65:
  v25 = *((_QWORD *)a2 + 3);
  *((_DWORD *)v3 + 38) |= 8u;
  *((_QWORD *)v3 + 3) = v25;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0)
      goto LABEL_13;
LABEL_67:
    v27 = *((_QWORD *)a2 + 5);
    *((_DWORD *)v3 + 38) |= 0x20u;
    *((_QWORD *)v3 + 5) = v27;
    v4 = *((_DWORD *)a2 + 38);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0)
        goto LABEL_16;
      goto LABEL_15;
    }
    goto LABEL_68;
  }
LABEL_66:
  v26 = *((_QWORD *)a2 + 4);
  *((_DWORD *)v3 + 38) |= 0x10u;
  *((_QWORD *)v3 + 4) = v26;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x20) != 0)
    goto LABEL_67;
LABEL_13:
  if ((v4 & 0x40) == 0)
    goto LABEL_14;
LABEL_68:
  v28 = *((_QWORD *)a2 + 7);
  *((_DWORD *)v3 + 38) |= 0x40u;
  *((_QWORD *)v3 + 7) = v28;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    v6 = *((_QWORD *)a2 + 8);
    *((_DWORD *)v3 + 38) |= 0x80u;
    *((_QWORD *)v3 + 8) = v6;
    v4 = *((_DWORD *)a2 + 38);
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0)
    goto LABEL_26;
  if ((v4 & 0x100) != 0)
  {
    v14 = *((_QWORD *)a2 + 9);
    *((_DWORD *)v3 + 38) |= 0x100u;
    *((_QWORD *)v3 + 9) = v14;
    v4 = *((_DWORD *)a2 + 38);
    if ((v4 & 0x200) == 0)
    {
LABEL_19:
      if ((v4 & 0x400) == 0)
        goto LABEL_20;
      goto LABEL_48;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  v15 = *((_QWORD *)a2 + 10);
  *((_DWORD *)v3 + 38) |= 0x200u;
  *((_QWORD *)v3 + 10) = v15;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x400) == 0)
  {
LABEL_20:
    if ((v4 & 0x800) == 0)
      goto LABEL_21;
    goto LABEL_49;
  }
LABEL_48:
  v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)v3 + 38) |= 0x400u;
  *((_DWORD *)v3 + 13) = v16;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x800) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000) == 0)
      goto LABEL_22;
    goto LABEL_50;
  }
LABEL_49:
  v17 = *((_QWORD *)a2 + 11);
  *((_DWORD *)v3 + 38) |= 0x800u;
  *((_QWORD *)v3 + 11) = v17;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x1000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0)
      goto LABEL_23;
    goto LABEL_52;
  }
LABEL_50:
  v18 = *((_DWORD *)a2 + 26);
  if (v18 >= 0xE)
    __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 14597, "::CoreNavigation::CLP::LogEntry::PrivateData::LocationType_IsValid(value)");
  *((_DWORD *)v3 + 38) |= 0x1000u;
  *((_DWORD *)v3 + 26) = v18;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000) == 0)
      goto LABEL_24;
    goto LABEL_57;
  }
LABEL_52:
  *((_DWORD *)v3 + 38) |= 0x2000u;
  v19 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)v3 + 12);
  if (!v19)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)operator new();
    v19 = this;
    *(_QWORD *)this = &off_1E25BC938;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 12) = this;
  }
  v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)a2 + 12);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_
                                                                                         + 96);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v19, v20);
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x4000) == 0)
  {
LABEL_24:
    if ((v4 & 0x8000) == 0)
      goto LABEL_26;
    goto LABEL_25;
  }
LABEL_57:
  v21 = *((_QWORD *)a2 + 14);
  *((_DWORD *)v3 + 38) |= 0x4000u;
  *((_QWORD *)v3 + 14) = v21;
  v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x8000) != 0)
  {
LABEL_25:
    v7 = *((_DWORD *)a2 + 27);
    *((_DWORD *)v3 + 38) |= 0x8000u;
    *((_DWORD *)v3 + 27) = v7;
    v4 = *((_DWORD *)a2 + 38);
  }
LABEL_26:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      v8 = *((_DWORD *)a2 + 30);
      if (((v8 - 25) > 0x32 || ((1 << (v8 - 25)) & 0x4000002000001) == 0)
        && (v8 + 1) >= 2)
      {
        __assert_rtn("set_integrity", "CoreNavigationCLPPrivateDataShared.pb.h", 14706, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_LocationIntegrityType_IsValid(value)");
      }
      *((_DWORD *)v3 + 38) |= 0x10000u;
      *((_DWORD *)v3 + 30) = v8;
      v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x20000) != 0)
    {
      v9 = *((_DWORD *)a2 + 31);
      if (v9 >= 3)
        __assert_rtn("set_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 14729, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
      *((_DWORD *)v3 + 38) |= 0x20000u;
      *((_DWORD *)v3 + 31) = v9;
      v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x40000) != 0)
    {
      v10 = *((_DWORD *)a2 + 32);
      if (v10 >= 3)
        __assert_rtn("set_raw_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 14752, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
      *((_DWORD *)v3 + 38) |= 0x40000u;
      *((_DWORD *)v3 + 32) = v10;
      v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x80000) != 0)
    {
      v11 = *((_DWORD *)a2 + 33);
      if ((v11 + 1) >= 8)
        __assert_rtn("set_signal_environment_type", "CoreNavigationCLPPrivateDataShared.pb.h", 14775, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      *((_DWORD *)v3 + 38) |= 0x80000u;
      *((_DWORD *)v3 + 33) = v11;
      v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x100000) != 0)
    {
      v12 = *((_QWORD *)a2 + 17);
      *((_DWORD *)v3 + 38) |= 0x100000u;
      *((_QWORD *)v3 + 17) = v12;
      v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x200000) != 0)
    {
      v13 = *((_BYTE *)a2 + 144);
      *((_DWORD *)v3 + 38) |= 0x200000u;
      *((_BYTE *)v3 + 144) = v13;
    }
  }
}

void sub_18D0EDB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::~DaemonLocation(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  *(_QWORD *)this = &off_1E25BA700;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::~DaemonLocation(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  uint64_t v2;
  uint64_t v3;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 12);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 148) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::New(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA700;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_OWORD *)(v1 + 120) = xmmword_18D30F410;
  *(_QWORD *)(v1 + 136) = 0;
  *(_BYTE *)(v1 + 144) = 0;
  *(_DWORD *)(v1 + 148) = 0;
  *(_DWORD *)(v1 + 152) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::Clear(uint64_t this)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_DWORD *)(this + 152);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 48) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 8);
      if (v2)
      {
        if (*(_BYTE *)(v2 + 28))
        {
          *(_QWORD *)(v2 + 8) = 0;
          *(_QWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        v1 = *(_DWORD *)(this + 152);
      }
    }
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(_QWORD *)(this + 56) = 0;
    *(_QWORD *)(this + 64) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    *(_DWORD *)(this + 104) = 0;
    *(_QWORD *)(this + 80) = 0;
    *(_QWORD *)(this + 88) = 0;
    *(_QWORD *)(this + 72) = 0;
    if ((v1 & 0x2000) != 0)
    {
      v3 = *(_QWORD *)(this + 96);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v1 = *(_DWORD *)(this + 152);
      }
    }
    *(_QWORD *)(this + 112) = 0;
    *(_DWORD *)(this + 108) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(this + 120) = xmmword_18D30F410;
    *(_QWORD *)(this + 136) = 0;
    *(_BYTE *)(this + 144) = 0;
  }
  *(_DWORD *)(this + 152) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  unsigned __int8 *v14;
  char *v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unsigned __int8 *v23;
  char *v24;
  unsigned int v25;
  unsigned __int8 *v26;
  uint64_t result;
  _BYTE *v29;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  BOOL v35;
  int v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _BYTE *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  unsigned int v46;
  _BYTE *v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v51;
  char *v52;
  int v53;
  int v54;
  int v55;
  int v56;
  _BYTE *v57;
  unsigned __int8 *v58;
  unsigned int v59;
  unsigned __int8 *v60;
  unsigned int v61;
  unsigned __int8 *v64;
  unsigned int v65;
  unsigned __int8 *v66;
  unsigned int v67;
  unsigned __int8 *v68;
  unsigned int v69;
  unsigned __int8 *v70;
  unsigned int v71[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v71[0] = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v8 = v71[0];
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 < 3 || v8 == 0xFFFF)
        {
          *((_DWORD *)this + 38) |= 1u;
          *((_DWORD *)this + 12) = v8;
        }
        v29 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 < *((_QWORD *)a2 + 2) && *v29 == 18)
        {
          *((_QWORD *)a2 + 1) = v29 + 1;
          goto LABEL_81;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 2)
          goto LABEL_57;
LABEL_81:
        *((_DWORD *)this + 38) |= 2u;
        v30 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 1);
        if (!v30)
        {
          v30 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)operator new();
          *(_QWORD *)v30 = &off_1E25BC938;
          *((_QWORD *)v30 + 1) = 0;
          *((_QWORD *)v30 + 2) = 0;
          *((_QWORD *)v30 + 3) = 0;
          *((_QWORD *)this + 1) = v30;
        }
        v71[0] = 0;
        v31 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v31 >= *((_QWORD *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71))return 0;
        }
        else
        {
          v71[0] = *v31;
          *((_QWORD *)a2 + 1) = v31 + 1;
        }
        v32 = *((_DWORD *)a2 + 14);
        v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v30, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v34 = *((_DWORD *)a2 + 14);
        v35 = __OFSUB__(v34, 1);
        v36 = v34 - 1;
        if (v36 < 0 == v35)
          *((_DWORD *)a2 + 14) = v36;
        v37 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v37 >= *((_QWORD *)a2 + 2) || *v37 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v37 + 1;
LABEL_95:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 4u;
        v38 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v38 >= *((_QWORD *)a2 + 2) || *v38 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v38 + 1;
LABEL_99:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 8u;
        v39 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v39 >= *((_QWORD *)a2 + 2) || *v39 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v39 + 1;
LABEL_103:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x10u;
        v40 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v40 >= *((_QWORD *)a2 + 2) || *v40 != 49)
          continue;
        *((_QWORD *)a2 + 1) = v40 + 1;
LABEL_107:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x20u;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_111:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 7) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x40u;
        v42 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v42 >= *((_QWORD *)a2 + 2) || *v42 != 65)
          continue;
        *((_QWORD *)a2 + 1) = v42 + 1;
LABEL_115:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 8) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x80u;
        v43 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 != 73)
          continue;
        *((_QWORD *)a2 + 1) = v43 + 1;
LABEL_119:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x100u;
        v44 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v44 >= *((_QWORD *)a2 + 2) || *v44 != 81)
          continue;
        *((_QWORD *)a2 + 1) = v44 + 1;
LABEL_123:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 10) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x200u;
        v45 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v45 >= v9 || *v45 != 88)
          continue;
        v10 = v45 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_127:
        v71[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v46 = v71[0];
          v47 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v46 = *v10;
          v47 = v10 + 1;
          *((_QWORD *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 13) = v46;
        *((_DWORD *)this + 38) |= 0x400u;
        if ((unint64_t)v47 >= v9 || *v47 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v47 + 1;
LABEL_135:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 11) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x800u;
        v48 = (_BYTE *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v48 >= v11 || *v48 != 104)
          continue;
        v12 = v48 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_139:
        v71[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v49 = v71[0];
        }
        else
        {
          v49 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v49 <= 0xD)
        {
          *((_DWORD *)this + 38) |= 0x1000u;
          *((_DWORD *)this + 26) = v49;
        }
        v50 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v50 >= *((_QWORD *)a2 + 2) || *v50 != 114)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_149:
        *((_DWORD *)this + 38) |= 0x2000u;
        v51 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 12);
        if (!v51)
        {
          v51 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)operator new();
          *(_QWORD *)v51 = &off_1E25BC938;
          *((_QWORD *)v51 + 1) = 0;
          *((_QWORD *)v51 + 2) = 0;
          *((_QWORD *)v51 + 3) = 0;
          *((_QWORD *)this + 12) = v51;
        }
        v71[0] = 0;
        v52 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v52 >= *((_QWORD *)a2 + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71))return 0;
        }
        else
        {
          v71[0] = *v52;
          *((_QWORD *)a2 + 1) = v52 + 1;
        }
        v53 = *((_DWORD *)a2 + 14);
        v54 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v53 + 1;
        if (v53 >= v54)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v51, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v55 = *((_DWORD *)a2 + 14);
        v35 = __OFSUB__(v55, 1);
        v56 = v55 - 1;
        if (v56 < 0 == v35)
          *((_DWORD *)a2 + 14) = v56;
        v57 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v57 >= *((_QWORD *)a2 + 2) || *v57 != 121)
          continue;
        *((_QWORD *)a2 + 1) = v57 + 1;
LABEL_163:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0;
        *((_QWORD *)this + 14) = *(_QWORD *)v71;
        *((_DWORD *)this + 38) |= 0x4000u;
        v58 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((int)v13 - (int)v58 < 2 || *v58 != 128 || v58[1] != 1)
          continue;
        v14 = v58 + 2;
        *((_QWORD *)a2 + 1) = v14;
LABEL_168:
        v71[0] = 0;
        if ((unint64_t)v14 >= v13 || (char)*v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v59 = v71[0];
          v60 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v59 = *v14;
          v60 = v14 + 1;
          *((_QWORD *)a2 + 1) = v60;
        }
        *((_DWORD *)this + 27) = v59;
        *((_DWORD *)this + 38) |= 0x8000u;
        if ((int)v13 - (int)v60 < 2 || *v60 != 136 || v60[1] != 1)
          continue;
        v15 = (char *)(v60 + 2);
        *((_QWORD *)a2 + 1) = v15;
LABEL_177:
        v71[0] = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v61 = v71[0];
        }
        else
        {
          v61 = *v15;
          *((_QWORD *)a2 + 1) = v15 + 1;
        }
        if (v61 - 25 <= 0x32 && ((1 << (v61 - 25)) & 0x4000002000001) != 0 || v61 + 1 < 2)
        {
          *((_DWORD *)this + 38) |= 0x10000u;
          *((_DWORD *)this + 30) = v61;
        }
        v64 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        if ((int)v16 - (int)v64 < 2 || *v64 != 144 || v64[1] != 1)
          continue;
        v17 = (char *)(v64 + 2);
        *((_QWORD *)a2 + 1) = v17;
LABEL_194:
        v71[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v65 = v71[0];
        }
        else
        {
          v65 = *v17;
          *((_QWORD *)a2 + 1) = v17 + 1;
        }
        if (v65 <= 2)
        {
          *((_DWORD *)this + 38) |= 0x20000u;
          *((_DWORD *)this + 31) = v65;
        }
        v66 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        if ((int)v18 - (int)v66 < 2 || *v66 != 152 || v66[1] != 1)
          continue;
        v19 = (char *)(v66 + 2);
        *((_QWORD *)a2 + 1) = v19;
LABEL_205:
        v71[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v67 = v71[0];
        }
        else
        {
          v67 = *v19;
          *((_QWORD *)a2 + 1) = v19 + 1;
        }
        if (v67 <= 2)
        {
          *((_DWORD *)this + 38) |= 0x40000u;
          *((_DWORD *)this + 32) = v67;
        }
        v68 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        if ((int)v20 - (int)v68 < 2 || *v68 != 160 || v68[1] != 1)
          continue;
        v21 = (char *)(v68 + 2);
        *((_QWORD *)a2 + 1) = v21;
LABEL_216:
        v71[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!(_DWORD)result)
            return result;
          v69 = v71[0];
        }
        else
        {
          v69 = *v21;
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
        if (v69 + 1 <= 7)
        {
          *((_DWORD *)this + 38) |= 0x80000u;
          *((_DWORD *)this + 33) = v69;
        }
        v70 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v70 < 2 || *v70 != 169 || v70[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v70 + 2;
LABEL_51:
        *(_QWORD *)v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) != 0)
        {
          *((_QWORD *)this + 17) = *(_QWORD *)v71;
          *((_DWORD *)this + 38) |= 0x100000u;
          v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v22 = *((_QWORD *)a2 + 2);
          if ((int)v22 - (int)v23 >= 2 && *v23 == 176 && v23[1] == 1)
          {
            v24 = (char *)(v23 + 2);
            *((_QWORD *)a2 + 1) = v24;
LABEL_61:
            v71[0] = 0;
            if ((unint64_t)v24 >= v22 || *v24 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
              if (!(_DWORD)result)
                return result;
              v25 = v71[0];
              v26 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
              v22 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v25 = *v24;
              v26 = (unsigned __int8 *)(v24 + 1);
              *((_QWORD *)a2 + 1) = v26;
            }
            *((_BYTE *)this + 144) = v25 != 0;
            *((_DWORD *)this + 38) |= 0x200000u;
            if (v26 == (unsigned __int8 *)v22 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_95;
        goto LABEL_57;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_99;
        goto LABEL_57;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_103;
        goto LABEL_57;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_107;
        goto LABEL_57;
      case 7u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_111;
        goto LABEL_57;
      case 8u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_115;
        goto LABEL_57;
      case 9u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_119;
        goto LABEL_57;
      case 0xAu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_123;
        goto LABEL_57;
      case 0xBu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_127;
      case 0xCu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_135;
        goto LABEL_57;
      case 0xDu:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_139;
      case 0xEu:
        v6 = TagFallback & 7;
        if (v6 == 2)
          goto LABEL_149;
        goto LABEL_57;
      case 0xFu:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_163;
        goto LABEL_57;
      case 0x10u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v14 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_168;
      case 0x11u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_177;
      case 0x12u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v16 = *((_QWORD *)a2 + 2);
        goto LABEL_194;
      case 0x13u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v19 = (char *)*((_QWORD *)a2 + 1);
        v18 = *((_QWORD *)a2 + 2);
        goto LABEL_205;
      case 0x14u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v21 = (char *)*((_QWORD *)a2 + 1);
        v20 = *((_QWORD *)a2 + 2);
        goto LABEL_216;
      case 0x15u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_51;
        goto LABEL_57;
      case 0x16u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_57;
        v24 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        goto LABEL_61;
      default:
        v6 = TagFallback & 7;
LABEL_57:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return ((_DWORD)this + 1) < 8;
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = this;
  v6 = this[38];
  if ((v6 & 1) != 0)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[12], (uint64_t)a2, a4);
    v6 = v5[38];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  v7 = *((_QWORD *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  v6 = v5[38];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_29;
  }
LABEL_28:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *((double *)v5 + 2), a3);
  v6 = v5[38];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_30;
  }
LABEL_29:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *((double *)v5 + 3), a3);
  v6 = v5[38];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_31;
  }
LABEL_30:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *((double *)v5 + 4), a3);
  v6 = v5[38];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_32;
  }
LABEL_31:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *((double *)v5 + 5), a3);
  v6 = v5[38];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_33;
  }
LABEL_32:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *((double *)v5 + 7), a3);
  v6 = v5[38];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_34;
  }
LABEL_33:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *((double *)v5 + 8), a3);
  v6 = v5[38];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_35;
  }
LABEL_34:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *((double *)v5 + 9), a3);
  v6 = v5[38];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_36;
  }
LABEL_35:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *((double *)v5 + 10), a3);
  v6 = v5[38];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_37;
  }
LABEL_36:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_38;
  }
LABEL_37:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *((double *)v5 + 11), a3);
  v6 = v5[38];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_39;
  }
LABEL_38:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[26], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_42;
  }
LABEL_39:
  v8 = *((_QWORD *)v5 + 12);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 96);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v8, a2, a4);
  v6 = v5[38];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_43;
  }
LABEL_42:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *((double *)v5 + 14), a3);
  v6 = v5[38];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_44;
  }
LABEL_43:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[27], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_45;
  }
LABEL_44:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[30], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_46;
  }
LABEL_45:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[31], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_47;
  }
LABEL_46:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[32], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_48;
  }
LABEL_47:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[33], (uint64_t)a2, a4);
  v6 = v5[38];
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      return this;
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *((unsigned __int8 *)v5 + 144), (uint64_t)a2, a4);
  }
LABEL_48:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *((double *)v5 + 17), a3);
  if ((v5[38] & 0x200000) != 0)
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *((unsigned __int8 *)v5 + 144), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v18;
  int v19;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v20;
  int v21;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v22;
  int v23;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v24;
  int v25;
  unsigned int v26;

  v1 = this;
  v2 = *(_DWORD *)(this + 152);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_32;
  }
  if ((v2 & 1) != 0)
  {
    v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 48);
    if ((v5 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v5 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      this = 1;
    }
    v3 = this + 1;
    if ((v2 & 2) == 0)
      goto LABEL_19;
LABEL_12:
    v6 = *(_QWORD *)(v1 + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v6 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 8);
    }
    v7 = *(unsigned __int8 *)(v6 + 28);
    if (*(_BYTE *)(v6 + 28))
    {
      if ((v7 & 2) != 0)
        v7 = ((v7 << 31 >> 31) & 9) + 9;
      else
        v7 = (v7 << 31 >> 31) & 9;
    }
    *(_DWORD *)(v6 + 24) = v7;
    v3 += v7 + 2;
    v2 = *(_DWORD *)(v1 + 152);
    goto LABEL_19;
  }
  v3 = 0;
  if ((v2 & 2) != 0)
    goto LABEL_12;
LABEL_19:
  v8 = v3 + 9;
  if ((v2 & 4) == 0)
    v8 = v3;
  if ((v2 & 8) != 0)
    v8 += 9;
  if ((v2 & 0x10) != 0)
    v8 += 9;
  if ((v2 & 0x20) != 0)
    v8 += 9;
  if ((v2 & 0x40) != 0)
    v8 += 9;
  if ((v2 & 0x80) != 0)
    v4 = v8 + 9;
  else
    v4 = v8;
LABEL_32:
  if ((v2 & 0xFF00) != 0)
  {
    v9 = v4 + 9;
    if ((v2 & 0x100) == 0)
      v9 = v4;
    if ((v2 & 0x200) != 0)
      LODWORD(v4) = v9 + 9;
    else
      LODWORD(v4) = v9;
    if ((v2 & 0x400) != 0)
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 52);
      if ((v10 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v10 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        this = 1;
      }
      LODWORD(v4) = v4 + this + 1;
    }
    if ((v2 & 0x800) != 0)
      LODWORD(v4) = v4 + 9;
    if ((v2 & 0x1000) != 0)
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 104);
      if ((v11 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v11 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
        v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        this = 1;
      }
      LODWORD(v4) = v4 + this + 1;
    }
    if ((v2 & 0x2000) != 0)
    {
      v12 = *(_QWORD *)(v1 + 96);
      if (!v12)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 96);
      }
      v13 = *(unsigned __int8 *)(v12 + 28);
      v14 = (v13 << 31 >> 31) & 9;
      if ((v13 & 2) != 0)
        v14 += 9;
      if (*(_BYTE *)(v12 + 28))
        v15 = v14;
      else
        v15 = 0;
      *(_DWORD *)(v12 + 24) = v15;
      LODWORD(v4) = v4 + v15 + 2;
      v2 = *(_DWORD *)(v1 + 152);
    }
    if ((v2 & 0x4000) != 0)
      v4 = (v4 + 9);
    else
      v4 = v4;
    if ((v2 & 0x8000) != 0)
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 108);
      if ((v16 & 0x80000000) != 0)
      {
        v17 = 12;
      }
      else if (v16 >= 0x80)
      {
        v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 2;
        v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        v17 = 3;
      }
      v4 = (v17 + v4);
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 120);
      if ((v18 & 0x80000000) != 0)
      {
        v19 = 12;
      }
      else if (v18 >= 0x80)
      {
        v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 2;
        v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        v19 = 3;
      }
      LODWORD(v4) = v19 + v4;
      if ((v2 & 0x20000) == 0)
      {
LABEL_76:
        if ((v2 & 0x40000) == 0)
          goto LABEL_77;
        goto LABEL_91;
      }
    }
    else if ((v2 & 0x20000) == 0)
    {
      goto LABEL_76;
    }
    v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 124);
    if ((v20 & 0x80000000) != 0)
    {
      v21 = 12;
    }
    else if (v20 >= 0x80)
    {
      v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 2;
      v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      v21 = 3;
    }
    LODWORD(v4) = v21 + v4;
    if ((v2 & 0x40000) == 0)
    {
LABEL_77:
      if ((v2 & 0x80000) == 0)
        goto LABEL_103;
      goto LABEL_97;
    }
LABEL_91:
    v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 128);
    if ((v22 & 0x80000000) != 0)
    {
      v23 = 12;
    }
    else if (v22 >= 0x80)
    {
      v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 2;
      v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      v23 = 3;
    }
    LODWORD(v4) = v23 + v4;
    if ((v2 & 0x80000) == 0)
    {
LABEL_103:
      v26 = v4 + 10;
      if ((v2 & 0x100000) == 0)
        v26 = v4;
      if ((v2 & 0x200000) != 0)
        v4 = v26 + 3;
      else
        v4 = v26;
      goto LABEL_108;
    }
LABEL_97:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 132);
    if ((v24 & 0x80000000) != 0)
    {
      v25 = 12;
    }
    else if (v24 >= 0x80)
    {
      v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 2;
      v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      v25 = 3;
    }
    LODWORD(v4) = v25 + v4;
    goto LABEL_103;
  }
LABEL_108:
  *(_DWORD *)(v1 + 148) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    v3 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v3;
    v4 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v4;
    v5 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v5;
    v6 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v6;
    v7 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v7;
    v8 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v10;
    v11 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v11;
    LODWORD(v3) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    v12 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v12;
    LODWORD(v3) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v3;
    v13 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = *((_QWORD *)a2 + 12);
    *((_QWORD *)a2 + 12) = v13;
    v14 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = *((_QWORD *)a2 + 14);
    *((_QWORD *)a2 + 14) = v14;
    LODWORD(v13) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v13;
    LODWORD(v13) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v13;
    LODWORD(v13) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v13;
    LODWORD(v13) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v13;
    LODWORD(v13) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v13;
    result = *((double *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((double *)a2 + 17) = result;
    LOBYTE(v13) = *((_BYTE *)this + 144);
    *((_BYTE *)this + 144) = *((_BYTE *)a2 + 144);
    *((_BYTE *)a2 + 144) = v13;
    LODWORD(v13) = *((_DWORD *)this + 38);
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v13;
    LODWORD(v13) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v13;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DaemonLocation");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_WORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MapMatcherData(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)this = &off_1E25BA8E0;
  *((_WORD *)this + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(this, a2);
  return this;
}

void sub_18D0EF1C4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 32);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 32) & 1) != 0)
    {
      v6 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((_QWORD *)this + 1) = v6;
      v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    v7 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((_QWORD *)this + 2) = v7;
    v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
      goto LABEL_8;
    }
LABEL_12:
    v8 = *((_BYTE *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((_BYTE *)this + 24) = v8;
    if ((*((_DWORD *)a2 + 8) & 8) == 0)
      return;
LABEL_8:
    v5 = *((_BYTE *)a2 + 25);
    *((_DWORD *)this + 8) |= 8u;
    *((_BYTE *)this + 25) = v5;
  }
}

void sub_18D0EF2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::~MapMatcherData(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  *(_QWORD *)this = &off_1E25BA8E0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::~MapMatcherData(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::New(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 28) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BA8E0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 32))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_WORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  unint64_t v8;
  _BYTE *v9;
  char *v10;
  unsigned int v11;
  _BYTE *v12;
  char *v13;
  uint64_t result;
  unsigned int v15;
  unsigned __int8 *v16;
  unsigned int v17[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_24;
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v17;
        *((_DWORD *)this + 8) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_24;
LABEL_14:
        *(_QWORD *)v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v17;
        *((_DWORD *)this + 8) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 != 24)
          continue;
        v10 = v9 + 1;
        *((_QWORD *)a2 + 1) = v10;
LABEL_20:
        v17[0] = 0;
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!(_DWORD)result)
            return result;
          v11 = v17[0];
          v12 = (_BYTE *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v11 = *v10;
          v12 = v10 + 1;
          *((_QWORD *)a2 + 1) = v12;
        }
        *((_BYTE *)this + 24) = v11 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v12 >= v8 || *v12 != 32)
          continue;
        v13 = v12 + 1;
        *((_QWORD *)a2 + 1) = v13;
LABEL_33:
        v17[0] = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!(_DWORD)result)
            return result;
          v15 = v17[0];
          v16 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v8 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v15 = *v13;
          v16 = (unsigned __int8 *)(v13 + 1);
          *((_QWORD *)a2 + 1) = v16;
        }
        *((_BYTE *)this + 25) = v15 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v16 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_20;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v8 = *((_QWORD *)a2 + 2);
        goto LABEL_33;
      default:
        v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 25), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 32);
  if (*((_BYTE *)this + 32))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 2;
    if ((v1 & 8) != 0)
      v1 = v2 + 2;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  uint64_t v2;
  double result;
  char v4;
  char v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_BYTE *)this + 24);
    *((_BYTE *)this + 24) = *((_BYTE *)a2 + 24);
    *((_BYTE *)a2 + 24) = v4;
    v5 = *((_BYTE *)this + 25);
    *((_BYTE *)this + 25) = *((_BYTE *)a2 + 25);
    *((_BYTE *)a2 + 25) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapMatcherData");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::PressureSample(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  *(_QWORD *)this = &off_1E25BAA48;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(this, a2);
  return this;
}

void sub_18D0EF89C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0EF958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::~PressureSample(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  *(_QWORD *)this = &off_1E25BAA48;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::~PressureSample(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::New(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BAA48;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PressureSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_QWORD *)(this + 16) = 0;
  *(_QWORD *)(this + 24) = 0;
  *(_QWORD *)(this + 8) = 0;
  *(_WORD *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ClientSatelliteInfo(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(_QWORD *)this = &off_1E25BBF60;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_WORD *)this + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0EFDA4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  int v4;
  unsigned int v5;
  char v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  char v12;
  _BYTE v13[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if (!(_BYTE)v4)
    return;
  if ((*((_BYTE *)a2 + 40) & 1) != 0)
  {
    v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 7)
      __assert_rtn("set_constellation", "CoreNavigationCLPPrivateDataShared.pb.h", 14986, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteConstellation_IsValid(value)");
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 2) = v5;
    v4 = *((_DWORD *)a2 + 10);
  }
  if ((v4 & 2) != 0)
  {
    v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 3) = v7;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0)
        goto LABEL_10;
      goto LABEL_18;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 10) |= 4u;
  *((_DWORD *)this + 4) = v8;
  v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0)
      goto LABEL_11;
    goto LABEL_19;
  }
LABEL_18:
  v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 10) |= 8u;
  *((_DWORD *)this + 5) = v9;
  v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0)
      goto LABEL_12;
LABEL_20:
    v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0)
        return;
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_19:
  v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 10) |= 0x10u;
  *((_DWORD *)this + 6) = v10;
  v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 0x20) != 0)
    goto LABEL_20;
LABEL_12:
  if ((v4 & 0x40) == 0)
    goto LABEL_13;
LABEL_21:
  v12 = *((_BYTE *)a2 + 32);
  *((_DWORD *)this + 10) |= 0x40u;
  *((_BYTE *)this + 32) = v12;
  if ((*((_DWORD *)a2 + 10) & 0x80) != 0)
  {
LABEL_14:
    v6 = *((_BYTE *)a2 + 33);
    *((_DWORD *)this + 10) |= 0x80u;
    *((_BYTE *)this + 33) = v6;
  }
}

void sub_18D0EFF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::~ClientSatelliteInfo(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  *(_QWORD *)this = &off_1E25BBF60;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::~ClientSatelliteInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  uint64_t result;

  result = operator new();
  *(_DWORD *)(result + 36) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_QWORD *)result = &off_1E25BBF60;
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  *(_WORD *)(result + 32) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_WORD *)(this + 32) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  char *v7;
  unsigned int v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;
  _BYTE *v15;
  unsigned int v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  _BYTE *v23;
  unsigned int v24;
  unsigned __int8 *v25;
  unsigned int v26;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v26 = 0;
        v7 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!(_DWORD)result)
            return result;
          v8 = v26;
        }
        else
        {
          v8 = *v7;
          *((_QWORD *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 6)
        {
          *((_DWORD *)this + 10) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        v15 = (_BYTE *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v15 < v9 && *v15 == 16)
        {
          v10 = v15 + 1;
          *((_QWORD *)a2 + 1) = v10;
          goto LABEL_36;
        }
        continue;
      case 2u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v10 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
LABEL_36:
        v26 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!(_DWORD)result)
            return result;
          v16 = v26;
          v17 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v16 = *v10;
          v17 = v10 + 1;
          *((_QWORD *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 3) = v16;
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v17 >= v9 || *v17 != 29)
          continue;
        *((_QWORD *)a2 + 1) = v17 + 1;
LABEL_44:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) == 0)
          return 0;
        *((_DWORD *)this + 4) = v26;
        *((_DWORD *)this + 10) |= 4u;
        v18 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v18 >= *((_QWORD *)a2 + 2) || *v18 != 37)
          continue;
        *((_QWORD *)a2 + 1) = v18 + 1;
LABEL_48:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) == 0)
          return 0;
        *((_DWORD *)this + 5) = v26;
        *((_DWORD *)this + 10) |= 8u;
        v19 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v19 >= *((_QWORD *)a2 + 2) || *v19 != 45)
          continue;
        *((_QWORD *)a2 + 1) = v19 + 1;
LABEL_52:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) == 0)
          return 0;
        *((_DWORD *)this + 6) = v26;
        *((_DWORD *)this + 10) |= 0x10u;
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v20 >= *((_QWORD *)a2 + 2) || *v20 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v20 + 1;
LABEL_56:
        v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) != 0)
        {
          *((_DWORD *)this + 7) = v26;
          *((_DWORD *)this + 10) |= 0x20u;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v11 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v21 < v11 && *v21 == 56)
          {
            v12 = v21 + 1;
            *((_QWORD *)a2 + 1) = v12;
LABEL_60:
            v26 = 0;
            if ((unint64_t)v12 >= v11 || *v12 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
              if (!(_DWORD)result)
                return result;
              v22 = v26;
              v23 = (_BYTE *)*((_QWORD *)a2 + 1);
              v11 = *((_QWORD *)a2 + 2);
            }
            else
            {
              v22 = *v12;
              v23 = v12 + 1;
              *((_QWORD *)a2 + 1) = v23;
            }
            *((_BYTE *)this + 32) = v22 != 0;
            *((_DWORD *)this + 10) |= 0x40u;
            if ((unint64_t)v23 < v11 && *v23 == 64)
            {
              v13 = v23 + 1;
              *((_QWORD *)a2 + 1) = v13;
LABEL_68:
              v26 = 0;
              if ((unint64_t)v13 >= v11 || *v13 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
                if (!(_DWORD)result)
                  return result;
                v24 = v26;
                v25 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v11 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v24 = *v13;
                v25 = (unsigned __int8 *)(v13 + 1);
                *((_QWORD *)a2 + 1) = v25;
              }
              *((_BYTE *)this + 33) = v24 != 0;
              *((_DWORD *)this + 10) |= 0x80u;
              if (v25 == (unsigned __int8 *)v11
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                result = 1;
                *((_BYTE *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_44;
        goto LABEL_25;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_48;
        goto LABEL_25;
      case 5u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_52;
        goto LABEL_25;
      case 6u:
        v6 = TagFallback & 7;
        if (v6 == 5)
          goto LABEL_56;
        goto LABEL_25;
      case 7u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_60;
      case 8u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_25;
        v13 = (char *)*((_QWORD *)a2 + 1);
        v11 = *((_QWORD *)a2 + 2);
        goto LABEL_68;
      default:
        v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 28), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 33), (uint64_t)a2, a4);
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 0x80) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 33), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  int v2;
  int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  int v7;
  unsigned int v8;

  LOBYTE(v2) = *((_BYTE *)this + 40);
  if (!(_BYTE)v2)
  {
    result = 0;
    goto LABEL_32;
  }
  if ((*((_BYTE *)this + 40) & 1) == 0)
  {
    v3 = 0;
    if ((*((_BYTE *)this + 40) & 2) == 0)
      goto LABEL_19;
LABEL_13:
    v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      v2 = *((_DWORD *)this + 10);
    }
    else
    {
      v7 = 2;
    }
    v3 += v7;
    goto LABEL_19;
  }
  v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v5 & 0x80000000) != 0)
  {
    v3 = 11;
    if ((v2 & 2) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  if (v5 < 0x80)
  {
    v3 = 2;
    if ((v2 & 2) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
    goto LABEL_13;
LABEL_19:
  v8 = v3 + 5;
  if ((v2 & 4) == 0)
    v8 = v3;
  if ((v2 & 8) != 0)
    v8 += 5;
  if ((v2 & 0x10) != 0)
    v8 += 5;
  if ((v2 & 0x20) != 0)
    v8 += 5;
  if ((v2 & 0x40) != 0)
    v8 += 2;
  if ((v2 & 0x80) != 0)
    result = v8 + 2;
  else
    result = v8;
LABEL_32:
  *((_DWORD *)this + 9) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  float result;
  int v8;
  int v9;

  if (a2 != this)
  {
    v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    result = *((float *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((float *)a2 + 7) = result;
    LOBYTE(v3) = *((_BYTE *)this + 32);
    *((_BYTE *)this + 32) = *((_BYTE *)a2 + 32);
    *((_BYTE *)a2 + 32) = v3;
    LOBYTE(v3) = *((_BYTE *)this + 33);
    *((_BYTE *)this + 33) = *((_BYTE *)a2 + 33);
    *((_BYTE *)a2 + 33) = v3;
    v8 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v8;
    v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ClientSatelliteInfo");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MatchQualityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_UndulationModelType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return ((_DWORD)this + 1) < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_ClientLocationOriginDeviceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_GnssContent_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_PositionContextStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MapMatcherType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_LoiLocationSourceAccuracy_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::DaemonLocationPrivate_AltitudeInfo(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  *(_QWORD *)this = &off_1E25BD1A8;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(this, a2);
  return this;
}

void sub_18D0F08A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _BYTE v9[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 40);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 40) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0)
          goto LABEL_7;
        goto LABEL_11;
      }
    }
    else if ((*((_BYTE *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    v6 = *((_QWORD *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    *((_QWORD *)this + 2) = v6;
    v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0)
        return;
LABEL_12:
      v8 = *((_DWORD *)a2 + 8);
      if ((v8 + 1) >= 4)
        __assert_rtn("set_undulation_model", "CoreNavigationCLPPrivateDataShared.pb.h", 15233, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_UndulationModelType_IsValid(value)");
      *((_DWORD *)this + 10) |= 8u;
      *((_DWORD *)this + 8) = v8;
      return;
    }
LABEL_11:
    v7 = *((_QWORD *)a2 + 3);
    *((_DWORD *)this + 10) |= 4u;
    *((_QWORD *)this + 3) = v7;
    if ((*((_DWORD *)a2 + 10) & 8) == 0)
      return;
    goto LABEL_12;
  }
}

void sub_18D0F09D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::~DaemonLocationPrivate_AltitudeInfo(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  *(_QWORD *)this = &off_1E25BD1A8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::~DaemonLocationPrivate_AltitudeInfo(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BD1A8;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)&result = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 32) = 0xFFFFFFFFLL;
  *(_DWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 40))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = -1;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  unint64_t v9;
  _BYTE *v10;
  char *v11;
  unsigned int v12;
  uint64_t result;
  unsigned int v14[2];

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_24;
        *(_QWORD *)v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v14;
        *((_DWORD *)this + 10) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_24;
LABEL_14:
        *(_QWORD *)v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v14;
        *((_DWORD *)this + 10) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        *(_QWORD *)v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) != 0)
        {
          *((_QWORD *)this + 3) = *(_QWORD *)v14;
          *((_DWORD *)this + 10) |= 4u;
          v10 = (_BYTE *)*((_QWORD *)a2 + 1);
          v9 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v10 < v9 && *v10 == 32)
          {
            v11 = v10 + 1;
            *((_QWORD *)a2 + 1) = v11;
LABEL_28:
            v14[0] = 0;
            if ((unint64_t)v11 >= v9 || *v11 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
              if (!(_DWORD)result)
                return result;
              v12 = v14[0];
            }
            else
            {
              v12 = *v11;
              *((_QWORD *)a2 + 1) = v11 + 1;
            }
            if (v12 + 1 <= 3)
            {
              *((_DWORD *)this + 10) |= 8u;
              *((_DWORD *)this + 8) = v12;
            }
            if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              result = 1;
              *((_BYTE *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_24;
      case 4u:
        v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_24;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        goto LABEL_28;
      default:
        v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 40);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  int v6;

  v2 = *((unsigned __int8 *)this + 40);
  if (*((_BYTE *)this + 40))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v4 = v3 + 9;
    else
      v4 = v3;
    if ((v2 & 8) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
      if ((v5 & 0x80000000) != 0)
      {
        v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else
      {
        v6 = 2;
      }
      v4 = (v6 + v4);
    }
  }
  else
  {
    v4 = 0;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    v6 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    v7 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DaemonLocationPrivate.AltitudeInfo");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  uint64_t result;

  *(_OWORD *)((char *)this + 114) = 0u;
  result = (uint64_t)this + 114;
  *(_DWORD *)(result + 242) = 0;
  *(_WORD *)(result - 2) = 0;
  *(_OWORD *)(result - 106) = 0u;
  *(_OWORD *)(result - 90) = 0u;
  *(_OWORD *)(result - 74) = 0u;
  *(_OWORD *)(result - 58) = 0u;
  *(_OWORD *)(result - 42) = 0u;
  *(_QWORD *)(result - 26) = 0;
  *(_QWORD *)(result - 18) = 0xFFFFFFFFLL;
  *(_QWORD *)(result - 10) = 0;
  *(_QWORD *)(result + 246) = 0;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_OWORD *)(result + 158) = 0u;
  *(_OWORD *)(result + 226) = 0u;
  *(_OWORD *)(result + 214) = 0u;
  *(_OWORD *)(result + 198) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::DaemonLocationPrivate(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  *(_QWORD *)this = &off_1E25BC410;
  *((_QWORD *)this + 36) = 0;
  *((_QWORD *)this + 37) = 0;
  *((_DWORD *)this + 76) = 0;
  *((_DWORD *)this + 89) = 0;
  *((_WORD *)this + 56) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_QWORD *)this + 11) = 0;
  *((_QWORD *)this + 12) = 0xFFFFFFFFLL;
  *((_QWORD *)this + 13) = 0;
  *((_QWORD *)this + 45) = 0;
  *(_OWORD *)((char *)this + 130) = 0u;
  *(_OWORD *)((char *)this + 146) = 0u;
  *(_OWORD *)((char *)this + 162) = 0u;
  *(_OWORD *)((char *)this + 178) = 0u;
  *(_OWORD *)((char *)this + 194) = 0u;
  *(_OWORD *)((char *)this + 210) = 0u;
  *(_OWORD *)((char *)this + 226) = 0u;
  *(_OWORD *)((char *)this + 242) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 114) = 0u;
  *(_OWORD *)((char *)this + 258) = 0u;
  *(_OWORD *)((char *)this + 340) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(this, a2);
  return this;
}

void sub_18D0F1114(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;

  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  uint64_t v4;
  uint64_t v5;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  char v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v24;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v25;
  uint64_t v26;
  int v27;
  int v28;
  char v29;
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *v30;
  const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *v31;
  int v32;
  char v33;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *v34;
  const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *v35;
  int v36;
  uint64_t v37;
  int v38;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v39;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  char v45;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v46;
  const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *v58;
  const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *v59;
  unsigned int v60;
  char v61;
  unsigned int v62;
  unsigned int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  _BYTE v76[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v76);
  }
  v4 = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)((char *)this + 288));
  if (*((int *)a2 + 74) >= 1)
  {
    v5 = 0;
    do
    {
      v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo **)(*((_QWORD *)a2 + 36) + 8 * v5);
      v7 = *((int *)this + 74);
      v8 = *((_DWORD *)this + 75);
      if ((int)v7 >= v8)
      {
        if (v8 == *((_DWORD *)this + 76))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)((char *)this + 288));
          v8 = *((_DWORD *)this + 75);
        }
        *((_DWORD *)this + 75) = v8 + 1;
        v10 = operator new();
        *(_DWORD *)(v10 + 36) = 0;
        *(_DWORD *)(v10 + 40) = 0;
        *(_QWORD *)v10 = &off_1E25BBF60;
        *(_QWORD *)(v10 + 8) = 0;
        *(_QWORD *)(v10 + 16) = 0;
        *(_QWORD *)(v10 + 24) = 0;
        *(_WORD *)(v10 + 32) = 0;
        v11 = *((_QWORD *)this + 36);
        v12 = *((int *)this + 74);
        *((_DWORD *)this + 74) = v12 + 1;
        *(_QWORD *)(v11 + 8 * v12) = v10;
      }
      else
      {
        v9 = *((_QWORD *)this + 36);
        *((_DWORD *)this + 74) = v7 + 1;
        v10 = *(_QWORD *)(v9 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *)v10, v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 74));
  }
  v13 = *((_DWORD *)a2 + 90);
  if (!(_BYTE)v13)
    goto LABEL_21;
  if ((v13 & 1) != 0)
  {
    v17 = *((_QWORD *)a2 + 1);
    *((_DWORD *)this + 90) |= 1u;
    *((_QWORD *)this + 1) = v17;
    v13 = *((_DWORD *)a2 + 90);
    if ((v13 & 2) == 0)
    {
LABEL_14:
      if ((v13 & 4) == 0)
        goto LABEL_15;
      goto LABEL_36;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_14;
  }
  v18 = *((_QWORD *)a2 + 2);
  *((_DWORD *)this + 90) |= 2u;
  *((_QWORD *)this + 2) = v18;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 4) == 0)
  {
LABEL_15:
    if ((v13 & 8) == 0)
      goto LABEL_16;
    goto LABEL_37;
  }
LABEL_36:
  v19 = *((_QWORD *)a2 + 3);
  *((_DWORD *)this + 90) |= 4u;
  *((_QWORD *)this + 3) = v19;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 8) == 0)
  {
LABEL_16:
    if ((v13 & 0x10) == 0)
      goto LABEL_17;
    goto LABEL_38;
  }
LABEL_37:
  v20 = *((_QWORD *)a2 + 4);
  *((_DWORD *)this + 90) |= 8u;
  *((_QWORD *)this + 4) = v20;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x10) == 0)
  {
LABEL_17:
    if ((v13 & 0x20) == 0)
      goto LABEL_18;
LABEL_39:
    v22 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 90) |= 0x20u;
    *((_DWORD *)this + 12) = v22;
    v13 = *((_DWORD *)a2 + 90);
    if ((v13 & 0x40) == 0)
    {
LABEL_19:
      if ((v13 & 0x80) == 0)
        goto LABEL_21;
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_38:
  v21 = *((_QWORD *)a2 + 5);
  *((_DWORD *)this + 90) |= 0x10u;
  *((_QWORD *)this + 5) = v21;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x20) != 0)
    goto LABEL_39;
LABEL_18:
  if ((v13 & 0x40) == 0)
    goto LABEL_19;
LABEL_40:
  v23 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 90) |= 0x40u;
  *((_DWORD *)this + 13) = v23;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x80) != 0)
  {
LABEL_20:
    v14 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 90) |= 0x80u;
    *((_DWORD *)this + 14) = v14;
    v13 = *((_DWORD *)a2 + 90);
  }
LABEL_21:
  if ((v13 & 0xFF00) == 0)
    goto LABEL_56;
  if ((v13 & 0x100) != 0)
  {
    v15 = *((_BYTE *)a2 + 112);
    *((_DWORD *)this + 90) |= 0x100u;
    *((_BYTE *)this + 112) = v15;
    v13 = *((_DWORD *)a2 + 90);
  }
  if ((v13 & 0x200) != 0)
  {
    v16 = *((_DWORD *)a2 + 15);
    if (v16 >= 4)
      __assert_rtn("set_match_quality", "CoreNavigationCLPPrivateDataShared.pb.h", 15458, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MatchQualityType_IsValid(value)");
    *((_DWORD *)this + 90) |= 0x200u;
    *((_DWORD *)this + 15) = v16;
    v13 = *((_DWORD *)a2 + 90);
  }
  if ((v13 & 0x400) != 0)
  {
    *((_DWORD *)this + 90) |= 0x400u;
    v24 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 8);
    if (!v24)
    {
      v4 = operator new();
      v24 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)v4;
      *(_QWORD *)v4 = &off_1E25BC938;
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
      *((_QWORD *)this + 8) = v4;
    }
    v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)a2 + 8);
    if (!v25)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                           + 64);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v24, v25);
    v13 = *((_DWORD *)a2 + 90);
    if ((v13 & 0x800) == 0)
    {
LABEL_29:
      if ((v13 & 0x1000) == 0)
        goto LABEL_30;
      goto LABEL_48;
    }
  }
  else if ((v13 & 0x800) == 0)
  {
    goto LABEL_29;
  }
  v26 = *((_QWORD *)a2 + 9);
  *((_DWORD *)this + 90) |= 0x800u;
  *((_QWORD *)this + 9) = v26;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x1000) == 0)
  {
LABEL_30:
    if ((v13 & 0x2000) == 0)
      goto LABEL_31;
    goto LABEL_49;
  }
LABEL_48:
  v27 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 90) |= 0x1000u;
  *((_DWORD *)this + 20) = v27;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x2000) == 0)
  {
LABEL_31:
    if ((v13 & 0x4000) == 0)
      goto LABEL_32;
    goto LABEL_50;
  }
LABEL_49:
  v28 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 90) |= 0x2000u;
  *((_DWORD *)this + 21) = v28;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x4000) == 0)
  {
LABEL_32:
    if ((v13 & 0x8000) == 0)
      goto LABEL_56;
    goto LABEL_51;
  }
LABEL_50:
  v29 = *((_BYTE *)a2 + 113);
  *((_DWORD *)this + 90) |= 0x4000u;
  *((_BYTE *)this + 113) = v29;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x8000) == 0)
    goto LABEL_56;
LABEL_51:
  *((_DWORD *)this + 90) |= 0x8000u;
  v30 = (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)*((_QWORD *)this + 11);
  if (!v30)
  {
    v4 = operator new();
    v30 = (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)v4;
    *(_QWORD *)v4 = &off_1E25BAA48;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *((_QWORD *)this + 11) = v4;
  }
  v31 = (const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)*((_QWORD *)a2 + 11);
  if (!v31)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v31 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                               + 88);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(v30, v31);
  v13 = *((_DWORD *)a2 + 90);
LABEL_56:
  if ((v13 & 0xFF0000) == 0)
    goto LABEL_73;
  if ((v13 & 0x10000) != 0)
  {
    v32 = *((_DWORD *)a2 + 24);
    if ((v32 + 1) >= 4)
      __assert_rtn("set_undulation_model", "CoreNavigationCLPPrivateDataShared.pb.h", 15653, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_UndulationModelType_IsValid(value)");
    *((_DWORD *)this + 90) |= 0x10000u;
    *((_DWORD *)this + 24) = v32;
    v13 = *((_DWORD *)a2 + 90);
  }
  if ((v13 & 0x20000) != 0)
  {
    v38 = *((_DWORD *)a2 + 25);
    *((_DWORD *)this + 90) |= 0x20000u;
    *((_DWORD *)this + 25) = v38;
    v13 = *((_DWORD *)a2 + 90);
    if ((v13 & 0x40000) == 0)
    {
LABEL_62:
      if ((v13 & 0x80000) == 0)
        goto LABEL_63;
      goto LABEL_107;
    }
  }
  else if ((v13 & 0x40000) == 0)
  {
    goto LABEL_62;
  }
  *((_DWORD *)this + 90) |= 0x40000u;
  v39 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 13);
  if (!v39)
  {
    v4 = operator new();
    v39 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)v4;
    *(_QWORD *)v4 = &off_1E25BC938;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *((_QWORD *)this + 13) = v4;
  }
  v40 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)a2 + 13);
  if (!v40)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v40 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                         + 104);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v39, v40);
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x80000) == 0)
  {
LABEL_63:
    if ((v13 & 0x100000) == 0)
      goto LABEL_64;
    goto LABEL_108;
  }
LABEL_107:
  v41 = *((_QWORD *)a2 + 15);
  *((_DWORD *)this + 90) |= 0x80000u;
  *((_QWORD *)this + 15) = v41;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x100000) == 0)
  {
LABEL_64:
    if ((v13 & 0x200000) == 0)
      goto LABEL_65;
    goto LABEL_109;
  }
LABEL_108:
  v42 = *((_QWORD *)a2 + 16);
  *((_DWORD *)this + 90) |= 0x100000u;
  *((_QWORD *)this + 16) = v42;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x200000) == 0)
  {
LABEL_65:
    if ((v13 & 0x400000) == 0)
      goto LABEL_67;
    goto LABEL_66;
  }
LABEL_109:
  v43 = *((_DWORD *)a2 + 29);
  if (v43 >= 3)
    __assert_rtn("set_origin_device", "CoreNavigationCLPPrivateDataShared.pb.h", 15784, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_ClientLocationOriginDeviceType_IsValid(value)");
  *((_DWORD *)this + 90) |= 0x200000u;
  *((_DWORD *)this + 29) = v43;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x400000) == 0)
    goto LABEL_67;
LABEL_66:
  v33 = *((_BYTE *)a2 + 114);
  *((_DWORD *)this + 90) |= 0x400000u;
  *((_BYTE *)this + 114) = v33;
  v13 = *((_DWORD *)a2 + 90);
LABEL_67:
  if ((v13 & 0x800000) != 0)
  {
    *((_DWORD *)this + 90) |= 0x800000u;
    v34 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)*((_QWORD *)this + 17);
    if (!v34)
    {
      v4 = operator new();
      v34 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)v4;
      *(_DWORD *)(v4 + 28) = 0;
      *(_DWORD *)(v4 + 32) = 0;
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)v4 = &off_1E25BA8E0;
      *(_WORD *)(v4 + 24) = 0;
      *((_QWORD *)this + 17) = v4;
    }
    v35 = (const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)*((_QWORD *)a2 + 17);
    if (!v35)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v35 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                 + 136);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(v34, v35);
    v13 = *((_DWORD *)a2 + 90);
  }
LABEL_73:
  if (!HIBYTE(v13))
    goto LABEL_82;
  if ((v13 & 0x1000000) != 0)
  {
    v68 = *((_QWORD *)a2 + 18);
    *((_DWORD *)this + 90) |= 0x1000000u;
    *((_QWORD *)this + 18) = v68;
    v13 = *((_DWORD *)a2 + 90);
    if ((v13 & 0x2000000) == 0)
    {
LABEL_76:
      if ((v13 & 0x4000000) == 0)
        goto LABEL_77;
      goto LABEL_162;
    }
  }
  else if ((v13 & 0x2000000) == 0)
  {
    goto LABEL_76;
  }
  v69 = *((_QWORD *)a2 + 19);
  *((_DWORD *)this + 90) |= 0x2000000u;
  *((_QWORD *)this + 19) = v69;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x4000000) == 0)
  {
LABEL_77:
    if ((v13 & 0x8000000) == 0)
      goto LABEL_78;
    goto LABEL_163;
  }
LABEL_162:
  v70 = *((_QWORD *)a2 + 20);
  *((_DWORD *)this + 90) |= 0x4000000u;
  *((_QWORD *)this + 20) = v70;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x8000000) == 0)
  {
LABEL_78:
    if ((v13 & 0x10000000) == 0)
      goto LABEL_79;
    goto LABEL_164;
  }
LABEL_163:
  v71 = *((_QWORD *)a2 + 21);
  *((_DWORD *)this + 90) |= 0x8000000u;
  *((_QWORD *)this + 21) = v71;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x10000000) == 0)
  {
LABEL_79:
    if ((v13 & 0x20000000) == 0)
      goto LABEL_80;
    goto LABEL_165;
  }
LABEL_164:
  v72 = *((_QWORD *)a2 + 22);
  *((_DWORD *)this + 90) |= 0x10000000u;
  *((_QWORD *)this + 22) = v72;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v13 & 0x40000000) == 0)
      goto LABEL_81;
LABEL_166:
    v74 = *((_BYTE *)a2 + 115);
    *((_DWORD *)this + 90) |= 0x40000000u;
    *((_BYTE *)this + 115) = v74;
    if ((*((_DWORD *)a2 + 90) & 0x80000000) == 0)
      goto LABEL_82;
    goto LABEL_167;
  }
LABEL_165:
  v73 = *((_QWORD *)a2 + 23);
  *((_DWORD *)this + 90) |= 0x20000000u;
  *((_QWORD *)this + 23) = v73;
  v13 = *((_DWORD *)a2 + 90);
  if ((v13 & 0x40000000) != 0)
    goto LABEL_166;
LABEL_81:
  if ((v13 & 0x80000000) == 0)
    goto LABEL_82;
LABEL_167:
  v75 = *((_QWORD *)a2 + 24);
  *((_DWORD *)this + 90) |= 0x80000000;
  *((_QWORD *)this + 24) = v75;
LABEL_82:
  v36 = *((_DWORD *)a2 + 91);
  if (!(_BYTE)v36)
    goto LABEL_92;
  if ((v36 & 1) != 0)
  {
    v44 = *((_QWORD *)a2 + 25);
    *((_DWORD *)this + 91) |= 1u;
    *((_QWORD *)this + 25) = v44;
    v36 = *((_DWORD *)a2 + 91);
    if ((v36 & 2) == 0)
    {
LABEL_85:
      if ((v36 & 4) == 0)
        goto LABEL_86;
      goto LABEL_114;
    }
  }
  else if ((v36 & 2) == 0)
  {
    goto LABEL_85;
  }
  v45 = *((_BYTE *)a2 + 276);
  *((_DWORD *)this + 91) |= 2u;
  *((_BYTE *)this + 276) = v45;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 4) == 0)
  {
LABEL_86:
    if ((v36 & 8) == 0)
      goto LABEL_87;
    goto LABEL_119;
  }
LABEL_114:
  *((_DWORD *)this + 91) |= 4u;
  v46 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 26);
  if (!v46)
  {
    v4 = operator new();
    v46 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)v4;
    *(_QWORD *)v4 = &off_1E25BC938;
    *(_QWORD *)(v4 + 8) = 0;
    *(_QWORD *)(v4 + 16) = 0;
    *(_QWORD *)(v4 + 24) = 0;
    *((_QWORD *)this + 26) = v4;
  }
  v47 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)a2 + 26);
  if (!v47)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
    v47 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                         + 208);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v46, v47);
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 8) == 0)
  {
LABEL_87:
    if ((v36 & 0x10) == 0)
      goto LABEL_88;
    goto LABEL_120;
  }
LABEL_119:
  v48 = *((_QWORD *)a2 + 27);
  *((_DWORD *)this + 91) |= 8u;
  *((_QWORD *)this + 27) = v48;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x10) == 0)
  {
LABEL_88:
    if ((v36 & 0x20) == 0)
      goto LABEL_89;
    goto LABEL_122;
  }
LABEL_120:
  v49 = *((_DWORD *)a2 + 68);
  if (v49 >= 3)
    __assert_rtn("set_fused_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 16155, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
  *((_DWORD *)this + 91) |= 0x10u;
  *((_DWORD *)this + 68) = v49;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x20) == 0)
  {
LABEL_89:
    if ((v36 & 0x40) == 0)
      goto LABEL_90;
    goto LABEL_123;
  }
LABEL_122:
  v50 = *((_QWORD *)a2 + 28);
  *((_DWORD *)this + 91) |= 0x20u;
  *((_QWORD *)this + 28) = v50;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x40) == 0)
  {
LABEL_90:
    if ((v36 & 0x80) == 0)
      goto LABEL_92;
    goto LABEL_91;
  }
LABEL_123:
  v51 = *((_QWORD *)a2 + 29);
  *((_DWORD *)this + 91) |= 0x40u;
  *((_QWORD *)this + 29) = v51;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x80) != 0)
  {
LABEL_91:
    v37 = *((_QWORD *)a2 + 30);
    *((_DWORD *)this + 91) |= 0x80u;
    *((_QWORD *)this + 30) = v37;
    v36 = *((_DWORD *)a2 + 91);
  }
LABEL_92:
  if ((v36 & 0xFF00) == 0)
    goto LABEL_137;
  if ((v36 & 0x100) != 0)
  {
    v52 = *((_QWORD *)a2 + 31);
    *((_DWORD *)this + 91) |= 0x100u;
    *((_QWORD *)this + 31) = v52;
    v36 = *((_DWORD *)a2 + 91);
    if ((v36 & 0x200) == 0)
    {
LABEL_95:
      if ((v36 & 0x400) == 0)
        goto LABEL_96;
      goto LABEL_127;
    }
  }
  else if ((v36 & 0x200) == 0)
  {
    goto LABEL_95;
  }
  v53 = *((_QWORD *)a2 + 32);
  *((_DWORD *)this + 91) |= 0x200u;
  *((_QWORD *)this + 32) = v53;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x400) == 0)
  {
LABEL_96:
    if ((v36 & 0x800) == 0)
      goto LABEL_97;
    goto LABEL_128;
  }
LABEL_127:
  v54 = *((_BYTE *)a2 + 277);
  *((_DWORD *)this + 91) |= 0x400u;
  *((_BYTE *)this + 277) = v54;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x800) == 0)
  {
LABEL_97:
    if ((v36 & 0x1000) == 0)
      goto LABEL_98;
    goto LABEL_129;
  }
LABEL_128:
  v55 = *((_QWORD *)a2 + 33);
  *((_DWORD *)this + 91) |= 0x800u;
  *((_QWORD *)this + 33) = v55;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x1000) == 0)
  {
LABEL_98:
    if ((v36 & 0x4000) == 0)
      goto LABEL_99;
    goto LABEL_130;
  }
LABEL_129:
  v56 = *((_QWORD *)a2 + 35);
  *((_DWORD *)this + 91) |= 0x1000u;
  *((_QWORD *)this + 35) = v56;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x4000) == 0)
  {
LABEL_99:
    if ((v36 & 0x8000) == 0)
      goto LABEL_137;
    goto LABEL_132;
  }
LABEL_130:
  v57 = *((_DWORD *)a2 + 78);
  if (v57 >= 3)
    __assert_rtn("set_gnss_content", "CoreNavigationCLPPrivateDataShared.pb.h", 16379, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_GnssContent_IsValid(value)");
  *((_DWORD *)this + 91) |= 0x4000u;
  *((_DWORD *)this + 78) = v57;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x8000) != 0)
  {
LABEL_132:
    *((_DWORD *)this + 91) |= 0x8000u;
    v58 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)*((_QWORD *)this + 40);
    if (!v58)
    {
      v4 = operator new();
      v58 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)v4;
      *(_QWORD *)v4 = &off_1E25BD1A8;
      *(_QWORD *)(v4 + 8) = 0;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 0;
      *(_QWORD *)(v4 + 32) = 0xFFFFFFFFLL;
      *(_DWORD *)(v4 + 40) = 0;
      *((_QWORD *)this + 40) = v4;
    }
    v59 = (const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)*((_QWORD *)a2 + 40);
    if (!v59)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)v4);
      v59 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 320);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(v58, v59);
    v36 = *((_DWORD *)a2 + 91);
  }
LABEL_137:
  if ((v36 & 0xFF0000) == 0)
    return;
  if ((v36 & 0x10000) != 0)
  {
    v60 = *((_DWORD *)a2 + 79);
    if (v60 >= 3)
      __assert_rtn("set_estimated_position_context_state", "CoreNavigationCLPPrivateDataShared.pb.h", 16444, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_PositionContextStateType_IsValid(value)");
    *((_DWORD *)this + 91) |= 0x10000u;
    *((_DWORD *)this + 79) = v60;
    v36 = *((_DWORD *)a2 + 91);
  }
  if ((v36 & 0x20000) != 0)
  {
    v65 = *((_QWORD *)a2 + 41);
    *((_DWORD *)this + 91) |= 0x20000u;
    *((_QWORD *)this + 41) = v65;
    v36 = *((_DWORD *)a2 + 91);
    if ((v36 & 0x40000) == 0)
    {
LABEL_143:
      if ((v36 & 0x80000) == 0)
        goto LABEL_144;
LABEL_157:
      v67 = *((_DWORD *)a2 + 86);
      if (v67 >= 4)
        __assert_rtn("set_map_matcher_type", "CoreNavigationCLPPrivateDataShared.pb.h", 16511, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MapMatcherType_IsValid(value)");
      *((_DWORD *)this + 91) |= 0x80000u;
      *((_DWORD *)this + 86) = v67;
      v36 = *((_DWORD *)a2 + 91);
      if ((v36 & 0x100000) == 0)
        goto LABEL_146;
      goto LABEL_145;
    }
  }
  else if ((v36 & 0x40000) == 0)
  {
    goto LABEL_143;
  }
  v66 = *((_QWORD *)a2 + 42);
  *((_DWORD *)this + 91) |= 0x40000u;
  *((_QWORD *)this + 42) = v66;
  v36 = *((_DWORD *)a2 + 91);
  if ((v36 & 0x80000) != 0)
    goto LABEL_157;
LABEL_144:
  if ((v36 & 0x100000) != 0)
  {
LABEL_145:
    v61 = *((_BYTE *)a2 + 278);
    *((_DWORD *)this + 91) |= 0x100000u;
    *((_BYTE *)this + 278) = v61;
    v36 = *((_DWORD *)a2 + 91);
  }
LABEL_146:
  if ((v36 & 0x200000) != 0)
  {
    v62 = *((_DWORD *)a2 + 87);
    if (v62 >= 3)
      __assert_rtn("set_loi_location_source_accuracy", "CoreNavigationCLPPrivateDataShared.pb.h", 16556, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_LoiLocationSourceAccuracy_IsValid(value)");
    *((_DWORD *)this + 91) |= 0x200000u;
    *((_DWORD *)this + 87) = v62;
    v36 = *((_DWORD *)a2 + 91);
  }
  if ((v36 & 0x400000) != 0)
  {
    v63 = *((_DWORD *)a2 + 88);
    if (v63 >= 5)
      __assert_rtn("set_batched_location_fix_type", "CoreNavigationCLPPrivateDataShared.pb.h", 16579, "::CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocationFixType_IsValid(value)");
    *((_DWORD *)this + 91) |= 0x400000u;
    *((_DWORD *)this + 88) = v63;
    v36 = *((_DWORD *)a2 + 91);
  }
  if ((v36 & 0x800000) != 0)
  {
    v64 = *((_BYTE *)a2 + 279);
    *((_DWORD *)this + 91) |= 0x800000u;
    *((_BYTE *)this + 279) = v64;
  }
}

void sub_18D0F1CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::~DaemonLocationPrivate(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  *(_QWORD *)this = &off_1E25BC410;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SharedDtor(this);
  sub_18D09ECA4((uint64_t *)this + 36);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::~DaemonLocationPrivate(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 8);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 11);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 13);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 17);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 26);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 40);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 356) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::New(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC410;
  *(_QWORD *)(v1 + 288) = 0;
  *(_QWORD *)(v1 + 296) = 0;
  *(_DWORD *)(v1 + 304) = 0;
  *(_DWORD *)(v1 + 356) = 0;
  *(_WORD *)(v1 + 112) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_QWORD *)(v1 + 88) = 0;
  *(_QWORD *)(v1 + 96) = 0xFFFFFFFFLL;
  *(_QWORD *)(v1 + 104) = 0;
  *(_QWORD *)(v1 + 360) = 0;
  *(_OWORD *)(v1 + 130) = 0u;
  *(_OWORD *)(v1 + 146) = 0u;
  *(_OWORD *)(v1 + 162) = 0u;
  *(_OWORD *)(v1 + 178) = 0u;
  *(_OWORD *)(v1 + 194) = 0u;
  *(_OWORD *)(v1 + 210) = 0u;
  *(_OWORD *)(v1 + 226) = 0u;
  *(_OWORD *)(v1 + 242) = 0u;
  *(_OWORD *)(v1 + 114) = 0u;
  *(_OWORD *)(v1 + 272) = 0u;
  *(_OWORD *)(v1 + 258) = 0u;
  *(_OWORD *)(v1 + 340) = 0u;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::Clear(uint64_t this)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = this;
  v2 = *(_DWORD *)(this + 360);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_BYTE *)(this + 112) = 0;
    *(_DWORD *)(this + 60) = 0;
    if ((v2 & 0x400) != 0)
    {
      v3 = *(_QWORD *)(this + 64);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 28))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        v2 = *(_DWORD *)(this + 360);
      }
    }
    *(_BYTE *)(this + 113) = 0;
    *(_QWORD *)(this + 72) = 0;
    *(_QWORD *)(this + 80) = 0;
    if ((v2 & 0x8000) != 0)
    {
      v4 = *(_QWORD *)(this + 88);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 28))
        {
          *(_QWORD *)(v4 + 8) = 0;
          *(_QWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        v2 = *(_DWORD *)(this + 360);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_QWORD *)(this + 96) = 0xFFFFFFFFLL;
    if ((v2 & 0x40000) != 0)
    {
      v5 = *(_QWORD *)(this + 104);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 28))
        {
          *(_QWORD *)(v5 + 8) = 0;
          *(_QWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
        v2 = *(_DWORD *)(this + 360);
      }
    }
    *(_BYTE *)(this + 114) = 0;
    *(_QWORD *)(this + 124) = 0;
    *(_QWORD *)(this + 116) = 0;
    *(_DWORD *)(this + 132) = 0;
    if ((v2 & 0x800000) != 0)
    {
      v6 = *(_QWORD *)(this + 136);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 32))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
          *(_WORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 32) = 0;
        v2 = *(_DWORD *)(this + 360);
      }
    }
  }
  if (HIBYTE(v2))
  {
    *(_BYTE *)(this + 115) = 0;
    *(_OWORD *)(this + 144) = 0u;
    *(_OWORD *)(this + 160) = 0u;
    *(_OWORD *)(this + 176) = 0u;
    *(_QWORD *)(this + 192) = 0;
  }
  v7 = *(_DWORD *)(this + 364);
  if ((_BYTE)v7)
  {
    *(_QWORD *)(this + 200) = 0;
    *(_BYTE *)(this + 276) = 0;
    if ((v7 & 4) != 0)
    {
      v8 = *(_QWORD *)(this + 208);
      if (v8)
      {
        if (*(_BYTE *)(v8 + 28))
        {
          *(_QWORD *)(v8 + 8) = 0;
          *(_QWORD *)(v8 + 16) = 0;
        }
        *(_DWORD *)(v8 + 28) = 0;
        v7 = *(_DWORD *)(this + 364);
      }
    }
    *(_DWORD *)(this + 272) = 0;
    *(_OWORD *)(this + 216) = 0u;
    *(_OWORD *)(this + 232) = 0u;
  }
  if ((v7 & 0xFF00) != 0)
  {
    *(_BYTE *)(this + 277) = 0;
    *(_QWORD *)(this + 280) = 0;
    *(_DWORD *)(this + 312) = 0;
    *(_QWORD *)(this + 256) = 0;
    *(_QWORD *)(this + 264) = 0;
    *(_QWORD *)(this + 248) = 0;
    if ((v7 & 0x8000) != 0)
    {
      v9 = *(_QWORD *)(this + 320);
      if (v9)
      {
        if (*(_BYTE *)(v9 + 40))
        {
          *(_QWORD *)(v9 + 8) = 0;
          *(_QWORD *)(v9 + 16) = 0;
          *(_QWORD *)(v9 + 24) = 0;
          *(_DWORD *)(v9 + 32) = -1;
        }
        *(_DWORD *)(v9 + 40) = 0;
        v7 = *(_DWORD *)(this + 364);
      }
    }
  }
  if ((v7 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 316) = 0;
    *(_WORD *)(this + 278) = 0;
    *(_QWORD *)(this + 336) = 0;
    *(_QWORD *)(this + 344) = 0;
    *(_QWORD *)(this + 328) = 0;
    *(_DWORD *)(this + 352) = 0;
  }
  if (*(int *)(this + 296) >= 1)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v1 + 288) + 8 * v10);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *(int *)(v1 + 296));
  }
  *(_DWORD *)(v1 + 296) = 0;
  *(_QWORD *)(v1 + 360) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  unint64_t v15;
  _BYTE *v16;
  char *v17;
  unsigned int v18;
  _BYTE *v19;
  char *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  unsigned __int8 *v24;
  int v25;
  unint64_t v26;
  char *v27;
  int v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unsigned __int8 *v32;
  int v33;
  unint64_t v34;
  unsigned __int8 *v35;
  unint64_t v36;
  unsigned __int8 *v37;
  int v38;
  unint64_t v39;
  char *v40;
  unint64_t v41;
  unsigned __int8 *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char *v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  unsigned __int8 *v52;
  char *v53;
  unint64_t v54;
  char *v55;
  unint64_t v56;
  char *v57;
  uint64_t result;
  unsigned int v59;
  _BYTE *v60;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  BOOL v66;
  int v67;
  _BYTE *v68;
  _BYTE *v69;
  unsigned int v70;
  _BYTE *v71;
  unsigned int v72;
  _BYTE *v73;
  unsigned int v74;
  unsigned __int8 *v75;
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *v76;
  char *v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned __int8 *v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned __int8 *v88;
  unsigned int v89;
  unsigned __int8 *v90;
  unsigned __int8 *v91;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v92;
  char *v93;
  int v94;
  int v95;
  int v96;
  int v97;
  unsigned __int8 *v98;
  unsigned __int8 *v99;
  unsigned __int8 *v100;
  unsigned int v101;
  unsigned __int8 *v102;
  unsigned int v103;
  unsigned __int8 *v104;
  unsigned __int8 *v105;
  unsigned __int8 *v106;
  unsigned __int8 *v107;
  unsigned int v108;
  unsigned __int8 *v109;
  unsigned int v110;
  unsigned __int8 *v111;
  uint64_t v112;
  char *v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned __int8 *v118;
  unsigned __int8 *v119;
  unsigned __int8 *v120;
  unsigned __int8 *v121;
  unsigned __int8 *v122;
  unsigned __int8 *v123;
  unsigned __int8 *v124;
  unsigned int v125;
  unsigned __int8 *v126;
  unsigned __int8 *v127;
  unsigned __int8 *v128;
  unsigned int v129;
  unsigned __int8 *v130;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *v131;
  char *v132;
  int v133;
  int v134;
  int v135;
  int v136;
  unsigned __int8 *v137;
  unsigned __int8 *v138;
  unsigned int v139;
  unsigned __int8 *v140;
  unsigned __int8 *v141;
  unsigned __int8 *v142;
  unsigned __int8 *v143;
  unsigned __int8 *v144;
  unsigned __int8 *v145;
  unsigned int v146;
  unsigned __int8 *v147;
  unsigned __int8 *v148;
  unsigned __int8 *v149;
  unsigned int v150;
  unsigned __int8 *v151;
  unsigned int v152;
  unsigned __int8 *v153;
  unsigned int v154;
  unsigned __int8 *v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned __int8 *v169;
  unsigned int v170[2];

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)((char *)this + 288);
LABEL_2:
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_151;
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 1) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 2u:
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_151;
LABEL_15:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 2) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 2u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_20:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 3) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 4u;
        v10 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v10 >= *((_QWORD *)a2 + 2) || *v10 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v10 + 1;
LABEL_25:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 4) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 8u;
        v11 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v11 >= *((_QWORD *)a2 + 2) || *v11 != 41)
          continue;
        *((_QWORD *)a2 + 1) = v11 + 1;
LABEL_30:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 5) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x10u;
        v12 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v12 >= *((_QWORD *)a2 + 2) || *v12 != 53)
          continue;
        *((_QWORD *)a2 + 1) = v12 + 1;
LABEL_35:
        v170[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v170) & 1) == 0)
          return 0;
        *((_DWORD *)this + 12) = v170[0];
        *((_DWORD *)this + 90) |= 0x20u;
        v13 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v13 >= *((_QWORD *)a2 + 2) || *v13 != 61)
          continue;
        *((_QWORD *)a2 + 1) = v13 + 1;
LABEL_40:
        v170[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v170) & 1) == 0)
          return 0;
        *((_DWORD *)this + 13) = v170[0];
        *((_DWORD *)this + 90) |= 0x40u;
        v14 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v14 >= *((_QWORD *)a2 + 2) || *v14 != 69)
          continue;
        *((_QWORD *)a2 + 1) = v14 + 1;
LABEL_45:
        v170[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v170) & 1) == 0)
          return 0;
        *((_DWORD *)this + 14) = v170[0];
        *((_DWORD *)this + 90) |= 0x80u;
        v16 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 72)
          continue;
        v17 = v16 + 1;
        *((_QWORD *)a2 + 1) = v17;
LABEL_51:
        v170[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v18 = v170[0];
          v19 = (_BYTE *)*((_QWORD *)a2 + 1);
          v15 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v18 = *v17;
          v19 = v17 + 1;
          *((_QWORD *)a2 + 1) = v19;
        }
        *((_BYTE *)this + 112) = v18 != 0;
        *((_DWORD *)this + 90) |= 0x100u;
        if ((unint64_t)v19 >= v15 || *v19 != 80)
          continue;
        v20 = v19 + 1;
        *((_QWORD *)a2 + 1) = v20;
LABEL_160:
        v170[0] = 0;
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v59 = v170[0];
        }
        else
        {
          v59 = *v20;
          *((_QWORD *)a2 + 1) = v20 + 1;
        }
        if (v59 <= 3)
        {
          *((_DWORD *)this + 90) |= 0x200u;
          *((_DWORD *)this + 15) = v59;
        }
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_170:
        *((_DWORD *)this + 90) |= 0x400u;
        v61 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 8);
        if (!v61)
        {
          v61 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)operator new();
          *(_QWORD *)v61 = &off_1E25BC938;
          *((_QWORD *)v61 + 1) = 0;
          *((_QWORD *)v61 + 2) = 0;
          *((_QWORD *)v61 + 3) = 0;
          *((_QWORD *)this + 8) = v61;
        }
        v170[0] = 0;
        v62 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
        }
        else
        {
          v170[0] = *v62;
          *((_QWORD *)a2 + 1) = v62 + 1;
        }
        v63 = *((_DWORD *)a2 + 14);
        v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v61, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v65 = *((_DWORD *)a2 + 14);
        v66 = __OFSUB__(v65, 1);
        v67 = v65 - 1;
        if (v67 < 0 == v66)
          *((_DWORD *)a2 + 14) = v67;
        v68 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v68 >= *((_QWORD *)a2 + 2) || *v68 != 97)
          continue;
        *((_QWORD *)a2 + 1) = v68 + 1;
LABEL_184:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 9) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x800u;
        v69 = (_BYTE *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v69 >= v21 || *v69 != 104)
          continue;
        v22 = v69 + 1;
        *((_QWORD *)a2 + 1) = v22;
LABEL_188:
        v170[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v70 = v170[0];
          v71 = (_BYTE *)*((_QWORD *)a2 + 1);
          v21 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v70 = *v22;
          v71 = v22 + 1;
          *((_QWORD *)a2 + 1) = v71;
        }
        *((_DWORD *)this + 20) = v70;
        *((_DWORD *)this + 90) |= 0x1000u;
        if ((unint64_t)v71 >= v21 || *v71 != 112)
          continue;
        v23 = v71 + 1;
        *((_QWORD *)a2 + 1) = v23;
LABEL_196:
        v170[0] = 0;
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v72 = v170[0];
          v73 = (_BYTE *)*((_QWORD *)a2 + 1);
          v21 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v72 = *v23;
          v73 = v23 + 1;
          *((_QWORD *)a2 + 1) = v73;
        }
        *((_DWORD *)this + 21) = v72;
        *((_DWORD *)this + 90) |= 0x2000u;
        if ((unint64_t)v73 >= v21 || *v73 != 120)
          continue;
        v24 = v73 + 1;
        *((_QWORD *)a2 + 1) = v24;
LABEL_204:
        v170[0] = 0;
        if ((unint64_t)v24 >= v21 || (char)*v24 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v74 = v170[0];
          v75 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v21 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v74 = *v24;
          v75 = v24 + 1;
          *((_QWORD *)a2 + 1) = v75;
        }
        *((_BYTE *)this + 113) = v74 != 0;
        v25 = *((_DWORD *)this + 90) | 0x4000;
        *((_DWORD *)this + 90) = v25;
        if ((int)v21 - (int)v75 < 2 || *v75 != 130 || v75[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v75 + 2;
LABEL_213:
        *((_DWORD *)this + 90) = v25 | 0x8000;
        v76 = (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)*((_QWORD *)this + 11);
        if (!v76)
        {
          v76 = (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)operator new();
          *(_QWORD *)v76 = &off_1E25BAA48;
          *((_QWORD *)v76 + 1) = 0;
          *((_QWORD *)v76 + 2) = 0;
          *((_QWORD *)v76 + 3) = 0;
          *((_QWORD *)this + 11) = v76;
        }
        v170[0] = 0;
        v77 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v77 >= *((_QWORD *)a2 + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
        }
        else
        {
          v170[0] = *v77;
          *((_QWORD *)a2 + 1) = v77 + 1;
        }
        v78 = *((_DWORD *)a2 + 14);
        v79 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v78 + 1;
        if (v78 >= v79)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergePartialFromCodedStream(v76, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v80 = *((_DWORD *)a2 + 14);
        v66 = __OFSUB__(v80, 1);
        v81 = v80 - 1;
        if (v81 < 0 == v66)
          *((_DWORD *)a2 + 14) = v81;
        v82 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        if ((int)v26 - (int)v82 <= 1 || *v82 != 136 || v82[1] != 1)
          continue;
        v27 = (char *)(v82 + 2);
        *((_QWORD *)a2 + 1) = v27;
LABEL_228:
        v170[0] = 0;
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v83 = v170[0];
        }
        else
        {
          v83 = *v27;
          *((_QWORD *)a2 + 1) = v27 + 1;
        }
        if (v83 + 1 <= 3)
        {
          *((_DWORD *)this + 90) |= 0x10000u;
          *((_DWORD *)this + 24) = v83;
        }
        v90 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v90 < 2 || *v90 != 149 || v90[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v90 + 2;
LABEL_252:
        v170[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v170) & 1) == 0)
          return 0;
        *((_DWORD *)this + 25) = v170[0];
        v28 = *((_DWORD *)this + 90) | 0x20000;
        *((_DWORD *)this + 90) = v28;
        v91 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v91 < 2 || *v91 != 154 || v91[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v91 + 2;
LABEL_257:
        *((_DWORD *)this + 90) = v28 | 0x40000;
        v92 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 13);
        if (!v92)
        {
          v92 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)operator new();
          *(_QWORD *)v92 = &off_1E25BC938;
          *((_QWORD *)v92 + 1) = 0;
          *((_QWORD *)v92 + 2) = 0;
          *((_QWORD *)v92 + 3) = 0;
          *((_QWORD *)this + 13) = v92;
        }
        v170[0] = 0;
        v93 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v93 >= *((_QWORD *)a2 + 2) || *v93 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
        }
        else
        {
          v170[0] = *v93;
          *((_QWORD *)a2 + 1) = v93 + 1;
        }
        v94 = *((_DWORD *)a2 + 14);
        v95 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v94 + 1;
        if (v94 >= v95)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v92, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v96 = *((_DWORD *)a2 + 14);
        v66 = __OFSUB__(v96, 1);
        v97 = v96 - 1;
        if (v97 < 0 == v66)
          *((_DWORD *)a2 + 14) = v97;
        v98 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v98 <= 1 || *v98 != 161 || v98[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v98 + 2;
LABEL_272:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 15) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x80000u;
        v99 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v99 < 2 || *v99 != 169 || v99[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v99 + 2;
LABEL_277:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 16) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x100000u;
        v100 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        if ((int)v29 - (int)v100 < 2 || *v100 != 176 || v100[1] != 1)
          continue;
        v30 = (char *)(v100 + 2);
        *((_QWORD *)a2 + 1) = v30;
LABEL_282:
        v170[0] = 0;
        if ((unint64_t)v30 >= v29 || *v30 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v101 = v170[0];
        }
        else
        {
          v101 = *v30;
          *((_QWORD *)a2 + 1) = v30 + 1;
        }
        if (v101 <= 2)
        {
          *((_DWORD *)this + 90) |= 0x200000u;
          *((_DWORD *)this + 29) = v101;
        }
        v102 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        if ((int)v31 - (int)v102 < 2 || *v102 != 184 || v102[1] != 1)
          continue;
        v32 = v102 + 2;
        *((_QWORD *)a2 + 1) = v32;
LABEL_293:
        v170[0] = 0;
        if ((unint64_t)v32 >= v31 || (char)*v32 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v103 = v170[0];
          v104 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v31 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v103 = *v32;
          v104 = v32 + 1;
          *((_QWORD *)a2 + 1) = v104;
        }
        *((_BYTE *)this + 114) = v103 != 0;
        v33 = *((_DWORD *)this + 90) | 0x400000;
        *((_DWORD *)this + 90) = v33;
        if ((int)v31 - (int)v104 < 2 || *v104 != 194 || v104[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v104 + 2;
LABEL_334:
        *((_DWORD *)this + 90) = v33 | 0x800000;
        v112 = *((_QWORD *)this + 17);
        if (!v112)
        {
          v112 = operator new();
          *(_DWORD *)(v112 + 28) = 0;
          *(_DWORD *)(v112 + 32) = 0;
          *(_QWORD *)(v112 + 8) = 0;
          *(_QWORD *)(v112 + 16) = 0;
          *(_QWORD *)v112 = &off_1E25BA8E0;
          *(_WORD *)(v112 + 24) = 0;
          *((_QWORD *)this + 17) = v112;
        }
        v170[0] = 0;
        v113 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v113 >= *((_QWORD *)a2 + 2) || *v113 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
        }
        else
        {
          v170[0] = *v113;
          *((_QWORD *)a2 + 1) = v113 + 1;
        }
        v114 = *((_DWORD *)a2 + 14);
        v115 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v114 + 1;
        if (v114 >= v115)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)v112, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v116 = *((_DWORD *)a2 + 14);
        v66 = __OFSUB__(v116, 1);
        v117 = v116 - 1;
        if (v117 < 0 == v66)
          *((_DWORD *)a2 + 14) = v117;
        v118 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v118 <= 1 || *v118 != 201 || v118[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v118 + 2;
LABEL_349:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 18) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x1000000u;
        v119 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v119 < 2 || *v119 != 209 || v119[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v119 + 2;
LABEL_354:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 19) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x2000000u;
        v120 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v120 < 2 || *v120 != 217 || v120[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v120 + 2;
LABEL_359:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 20) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x4000000u;
        v121 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v121 < 2 || *v121 != 225 || v121[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v121 + 2;
LABEL_364:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 21) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x8000000u;
        v122 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v122 < 2 || *v122 != 233 || v122[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v122 + 2;
LABEL_369:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 22) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x10000000u;
        v123 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v123 < 2 || *v123 != 241 || v123[1] != 1)
          continue;
        *((_QWORD *)a2 + 1) = v123 + 2;
LABEL_374:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 23) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x20000000u;
        v124 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v34 = *((_QWORD *)a2 + 2);
        if ((int)v34 - (int)v124 < 2 || *v124 != 248 || v124[1] != 1)
          continue;
        v35 = v124 + 2;
        *((_QWORD *)a2 + 1) = v35;
LABEL_379:
        v170[0] = 0;
        if ((unint64_t)v35 >= v34 || (char)*v35 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v125 = v170[0];
          v126 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v34 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v125 = *v35;
          v126 = v35 + 1;
          *((_QWORD *)a2 + 1) = v126;
        }
        *((_BYTE *)this + 115) = v125 != 0;
        *((_DWORD *)this + 90) |= 0x40000000u;
        if ((int)v34 - (int)v126 < 2 || *v126 != 129 || v126[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v126 + 2;
LABEL_388:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 24) = *(_QWORD *)v170;
        *((_DWORD *)this + 90) |= 0x80000000;
        v127 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v127 < 2 || *v127 != 137 || v127[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v127 + 2;
LABEL_393:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 25) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 1u;
        v128 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v36 = *((_QWORD *)a2 + 2);
        if ((int)v36 - (int)v128 < 2 || *v128 != 144 || v128[1] != 2)
          continue;
        v37 = v128 + 2;
        *((_QWORD *)a2 + 1) = v37;
LABEL_398:
        v170[0] = 0;
        if ((unint64_t)v37 >= v36 || (char)*v37 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v129 = v170[0];
          v130 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v36 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v129 = *v37;
          v130 = v37 + 1;
          *((_QWORD *)a2 + 1) = v130;
        }
        *((_BYTE *)this + 276) = v129 != 0;
        v38 = *((_DWORD *)this + 91) | 2;
        *((_DWORD *)this + 91) = v38;
        if ((int)v36 - (int)v130 < 2 || *v130 != 154 || v130[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v130 + 2;
LABEL_407:
        *((_DWORD *)this + 91) = v38 | 4;
        v131 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((_QWORD *)this + 26);
        if (!v131)
        {
          v131 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)operator new();
          *(_QWORD *)v131 = &off_1E25BC938;
          *((_QWORD *)v131 + 1) = 0;
          *((_QWORD *)v131 + 2) = 0;
          *((_QWORD *)v131 + 3) = 0;
          *((_QWORD *)this + 26) = v131;
        }
        v170[0] = 0;
        v132 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v132 >= *((_QWORD *)a2 + 2) || *v132 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
        }
        else
        {
          v170[0] = *v132;
          *((_QWORD *)a2 + 1) = v132 + 1;
        }
        v133 = *((_DWORD *)a2 + 14);
        v134 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v133 + 1;
        if (v133 >= v134)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v131, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v135 = *((_DWORD *)a2 + 14);
        v66 = __OFSUB__(v135, 1);
        v136 = v135 - 1;
        if (v136 < 0 == v66)
          *((_DWORD *)a2 + 14) = v136;
        v137 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v137 <= 1 || *v137 != 161 || v137[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v137 + 2;
LABEL_422:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 27) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 8u;
        v138 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v39 = *((_QWORD *)a2 + 2);
        if ((int)v39 - (int)v138 < 2 || *v138 != 168 || v138[1] != 2)
          continue;
        v40 = (char *)(v138 + 2);
        *((_QWORD *)a2 + 1) = v40;
LABEL_427:
        v170[0] = 0;
        if ((unint64_t)v40 >= v39 || *v40 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v139 = v170[0];
        }
        else
        {
          v139 = *v40;
          *((_QWORD *)a2 + 1) = v40 + 1;
        }
        if (v139 <= 2)
        {
          *((_DWORD *)this + 91) |= 0x10u;
          *((_DWORD *)this + 68) = v139;
        }
        v140 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v140 < 2 || *v140 != 177 || v140[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v140 + 2;
LABEL_438:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 28) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x20u;
        v141 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v141 < 2 || *v141 != 185 || v141[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v141 + 2;
LABEL_443:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 29) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x40u;
        v142 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v142 < 2 || *v142 != 193 || v142[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v142 + 2;
LABEL_448:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 30) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x80u;
        v143 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v143 < 2 || *v143 != 201 || v143[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v143 + 2;
LABEL_453:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 31) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x100u;
        v144 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v144 < 2 || *v144 != 209 || v144[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v144 + 2;
LABEL_458:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 32) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x200u;
        v145 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        if ((int)v41 - (int)v145 < 2 || *v145 != 216 || v145[1] != 2)
          continue;
        v42 = v145 + 2;
        *((_QWORD *)a2 + 1) = v42;
LABEL_463:
        v170[0] = 0;
        if ((unint64_t)v42 >= v41 || (char)*v42 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v146 = v170[0];
          v147 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v41 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v146 = *v42;
          v147 = v42 + 1;
          *((_QWORD *)a2 + 1) = v147;
        }
        *((_BYTE *)this + 277) = v146 != 0;
        *((_DWORD *)this + 91) |= 0x400u;
        if ((int)v41 - (int)v147 < 2 || *v147 != 225 || v147[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v147 + 2;
LABEL_472:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 33) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x800u;
        v148 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v148 < 2 || *v148 != 233 || v148[1] != 2)
          continue;
        *((_QWORD *)a2 + 1) = v148 + 2;
LABEL_477:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 35) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x1000u;
        v149 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v149 < 2 || *v149 != 242)
          continue;
        while (1)
        {
          if (v149[1] != 2)
            goto LABEL_2;
          *((_QWORD *)a2 + 1) = v149 + 2;
LABEL_518:
          v156 = *((int *)this + 74);
          v157 = *((_DWORD *)this + 75);
          if ((int)v156 >= v157)
          {
            if (v157 == *((_DWORD *)this + 76))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v157 = *((_DWORD *)this + 75);
            }
            *((_DWORD *)this + 75) = v157 + 1;
            v159 = operator new();
            *(_DWORD *)(v159 + 36) = 0;
            *(_DWORD *)(v159 + 40) = 0;
            *(_QWORD *)v159 = &off_1E25BBF60;
            *(_QWORD *)(v159 + 8) = 0;
            *(_QWORD *)(v159 + 16) = 0;
            *(_QWORD *)(v159 + 24) = 0;
            *(_WORD *)(v159 + 32) = 0;
            v160 = *((_QWORD *)this + 36);
            v161 = *((int *)this + 74);
            *((_DWORD *)this + 74) = v161 + 1;
            *(_QWORD *)(v160 + 8 * v161) = v159;
          }
          else
          {
            v158 = *((_QWORD *)this + 36);
            *((_DWORD *)this + 74) = v156 + 1;
            v159 = *(_QWORD *)(v158 + 8 * v156);
          }
          v170[0] = 0;
          v162 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v162 >= *((_QWORD *)a2 + 2) || *v162 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
          }
          else
          {
            v170[0] = *v162;
            *((_QWORD *)a2 + 1) = v162 + 1;
          }
          v163 = *((_DWORD *)a2 + 14);
          v164 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v163 + 1;
          if (v163 >= v164)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *)v159, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v165 = *((_DWORD *)a2 + 14);
          v66 = __OFSUB__(v165, 1);
          v166 = v165 - 1;
          if (v166 < 0 == v66)
            *((_DWORD *)a2 + 14) = v166;
          v149 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v44 = *((_QWORD *)a2 + 2);
          if ((int)v44 - (int)v149 <= 1)
            goto LABEL_2;
          v167 = *v149;
          if (v167 == 248)
            break;
          if (v167 != 242)
            goto LABEL_2;
        }
        if (v149[1] != 2)
          continue;
        v43 = (char *)(v149 + 2);
        *((_QWORD *)a2 + 1) = v43;
LABEL_539:
        v170[0] = 0;
        if ((unint64_t)v43 >= v44 || *v43 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v168 = v170[0];
        }
        else
        {
          v168 = *v43;
          *((_QWORD *)a2 + 1) = v43 + 1;
        }
        if (v168 <= 2)
        {
          *((_DWORD *)this + 91) |= 0x4000u;
          *((_DWORD *)this + 78) = v168;
        }
        v169 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v169 < 2 || *v169 != 130 || v169[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v169 + 2;
LABEL_131:
        *((_DWORD *)this + 91) |= 0x8000u;
        v45 = *((_QWORD *)this + 40);
        if (!v45)
        {
          v45 = operator new();
          *(_QWORD *)v45 = &off_1E25BD1A8;
          *(_QWORD *)(v45 + 8) = 0;
          *(_QWORD *)(v45 + 16) = 0;
          *(_QWORD *)(v45 + 24) = 0;
          *(_QWORD *)(v45 + 32) = 0xFFFFFFFFLL;
          *(_DWORD *)(v45 + 40) = 0;
          *((_QWORD *)this + 40) = v45;
        }
        v170[0] = 0;
        v46 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v46 >= *((_QWORD *)a2 + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170))return 0;
        }
        else
        {
          v170[0] = *v46;
          *((_QWORD *)a2 + 1) = v46 + 1;
        }
        v84 = *((_DWORD *)a2 + 14);
        v85 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v84 + 1;
        if (v84 >= v85)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)v45, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v86 = *((_DWORD *)a2 + 14);
        v66 = __OFSUB__(v86, 1);
        v87 = v86 - 1;
        if (v87 < 0 == v66)
          *((_DWORD *)a2 + 14) = v87;
        v88 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v47 = *((_QWORD *)a2 + 2);
        if ((int)v47 - (int)v88 <= 1 || *v88 != 136 || v88[1] != 3)
          continue;
        v48 = (char *)(v88 + 2);
        *((_QWORD *)a2 + 1) = v48;
LABEL_241:
        v170[0] = 0;
        if ((unint64_t)v48 >= v47 || *v48 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
          if (!(_DWORD)result)
            return result;
          v89 = v170[0];
        }
        else
        {
          v89 = *v48;
          *((_QWORD *)a2 + 1) = v48 + 1;
        }
        if (v89 <= 2)
        {
          *((_DWORD *)this + 91) |= 0x10000u;
          *((_DWORD *)this + 79) = v89;
        }
        v105 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v105 < 2 || *v105 != 145 || v105[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v105 + 2;
LABEL_304:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) == 0)return 0;
        *((_QWORD *)this + 41) = *(_QWORD *)v170;
        *((_DWORD *)this + 91) |= 0x20000u;
        v106 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v106 < 2 || *v106 != 153 || v106[1] != 3)
          continue;
        *((_QWORD *)a2 + 1) = v106 + 2;
LABEL_309:
        *(_QWORD *)v170 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v170) & 1) != 0)
        {
          *((_QWORD *)this + 42) = *(_QWORD *)v170;
          *((_DWORD *)this + 91) |= 0x40000u;
          v107 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v49 = *((_QWORD *)a2 + 2);
          if ((int)v49 - (int)v107 >= 2 && *v107 == 160 && v107[1] == 3)
          {
            v50 = (char *)(v107 + 2);
            *((_QWORD *)a2 + 1) = v50;
LABEL_314:
            v170[0] = 0;
            if ((unint64_t)v50 >= v49 || *v50 < 0)
            {
              result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
              if (!(_DWORD)result)
                return result;
              v108 = v170[0];
            }
            else
            {
              v108 = *v50;
              *((_QWORD *)a2 + 1) = v50 + 1;
            }
            if (v108 <= 3)
            {
              *((_DWORD *)this + 91) |= 0x80000u;
              *((_DWORD *)this + 86) = v108;
            }
            v109 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
            v51 = *((_QWORD *)a2 + 2);
            if ((int)v51 - (int)v109 >= 2 && *v109 == 168 && v109[1] == 3)
            {
              v52 = v109 + 2;
              *((_QWORD *)a2 + 1) = v52;
LABEL_325:
              v170[0] = 0;
              if ((unint64_t)v52 >= v51 || (char)*v52 < 0)
              {
                result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
                if (!(_DWORD)result)
                  return result;
                v110 = v170[0];
                v111 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v51 = *((_QWORD *)a2 + 2);
              }
              else
              {
                v110 = *v52;
                v111 = v52 + 1;
                *((_QWORD *)a2 + 1) = v111;
              }
              *((_BYTE *)this + 278) = v110 != 0;
              *((_DWORD *)this + 91) |= 0x100000u;
              if ((int)v51 - (int)v111 >= 2 && *v111 == 176 && v111[1] == 3)
              {
                v53 = (char *)(v111 + 2);
                *((_QWORD *)a2 + 1) = v53;
LABEL_487:
                v170[0] = 0;
                if ((unint64_t)v53 >= v51 || *v53 < 0)
                {
                  result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
                  if (!(_DWORD)result)
                    return result;
                  v150 = v170[0];
                }
                else
                {
                  v150 = *v53;
                  *((_QWORD *)a2 + 1) = v53 + 1;
                }
                if (v150 <= 2)
                {
                  *((_DWORD *)this + 91) |= 0x200000u;
                  *((_DWORD *)this + 87) = v150;
                }
                v151 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                v54 = *((_QWORD *)a2 + 2);
                if ((int)v54 - (int)v151 >= 2 && *v151 == 184 && v151[1] == 3)
                {
                  v55 = (char *)(v151 + 2);
                  *((_QWORD *)a2 + 1) = v55;
LABEL_498:
                  v170[0] = 0;
                  if ((unint64_t)v55 >= v54 || *v55 < 0)
                  {
                    result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
                    if (!(_DWORD)result)
                      return result;
                    v152 = v170[0];
                  }
                  else
                  {
                    v152 = *v55;
                    *((_QWORD *)a2 + 1) = v55 + 1;
                  }
                  if (v152 <= 4)
                  {
                    *((_DWORD *)this + 91) |= 0x400000u;
                    *((_DWORD *)this + 88) = v152;
                  }
                  v153 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                  v56 = *((_QWORD *)a2 + 2);
                  if ((int)v56 - (int)v153 >= 2 && *v153 == 192 && v153[1] == 3)
                  {
                    v57 = (char *)(v153 + 2);
                    *((_QWORD *)a2 + 1) = v57;
LABEL_509:
                    v170[0] = 0;
                    if ((unint64_t)v57 >= v56 || *v57 < 0)
                    {
                      result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v170);
                      if (!(_DWORD)result)
                        return result;
                      v154 = v170[0];
                      v155 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
                      v56 = *((_QWORD *)a2 + 2);
                    }
                    else
                    {
                      v154 = *v57;
                      v155 = (unsigned __int8 *)(v57 + 1);
                      *((_QWORD *)a2 + 1) = v155;
                    }
                    *((_BYTE *)this + 279) = v154 != 0;
                    *((_DWORD *)this + 91) |= 0x800000u;
                    if (v155 == (unsigned __int8 *)v56
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      result = 1;
                      *((_BYTE *)a2 + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_20;
        goto LABEL_151;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_25;
        goto LABEL_151;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_30;
        goto LABEL_151;
      case 6u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_35;
        goto LABEL_151;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_40;
        goto LABEL_151;
      case 8u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_45;
        goto LABEL_151;
      case 9u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v17 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_51;
      case 0xAu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_160;
      case 0xBu:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_170;
        goto LABEL_151;
      case 0xCu:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_184;
        goto LABEL_151;
      case 0xDu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v22 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_188;
      case 0xEu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v23 = (char *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_196;
      case 0xFu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v24 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v21 = *((_QWORD *)a2 + 2);
        goto LABEL_204;
      case 0x10u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_151;
        v25 = *((_DWORD *)this + 90);
        goto LABEL_213;
      case 0x11u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v27 = (char *)*((_QWORD *)a2 + 1);
        v26 = *((_QWORD *)a2 + 2);
        goto LABEL_228;
      case 0x12u:
        v7 = TagFallback & 7;
        if (v7 == 5)
          goto LABEL_252;
        goto LABEL_151;
      case 0x13u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_151;
        v28 = *((_DWORD *)this + 90);
        goto LABEL_257;
      case 0x14u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_272;
        goto LABEL_151;
      case 0x15u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_277;
        goto LABEL_151;
      case 0x16u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v30 = (char *)*((_QWORD *)a2 + 1);
        v29 = *((_QWORD *)a2 + 2);
        goto LABEL_282;
      case 0x17u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v32 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        goto LABEL_293;
      case 0x18u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_151;
        v33 = *((_DWORD *)this + 90);
        goto LABEL_334;
      case 0x19u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_349;
        goto LABEL_151;
      case 0x1Au:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_354;
        goto LABEL_151;
      case 0x1Bu:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_359;
        goto LABEL_151;
      case 0x1Cu:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_364;
        goto LABEL_151;
      case 0x1Du:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_369;
        goto LABEL_151;
      case 0x1Eu:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_374;
        goto LABEL_151;
      case 0x1Fu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v35 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v34 = *((_QWORD *)a2 + 2);
        goto LABEL_379;
      case 0x20u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_388;
        goto LABEL_151;
      case 0x21u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_393;
        goto LABEL_151;
      case 0x22u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v37 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v36 = *((_QWORD *)a2 + 2);
        goto LABEL_398;
      case 0x23u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_151;
        v38 = *((_DWORD *)this + 91);
        goto LABEL_407;
      case 0x24u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_422;
        goto LABEL_151;
      case 0x25u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v40 = (char *)*((_QWORD *)a2 + 1);
        v39 = *((_QWORD *)a2 + 2);
        goto LABEL_427;
      case 0x26u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_438;
        goto LABEL_151;
      case 0x27u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_443;
        goto LABEL_151;
      case 0x28u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_448;
        goto LABEL_151;
      case 0x29u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_453;
        goto LABEL_151;
      case 0x2Au:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_458;
        goto LABEL_151;
      case 0x2Bu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v42 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v41 = *((_QWORD *)a2 + 2);
        goto LABEL_463;
      case 0x2Cu:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_472;
        goto LABEL_151;
      case 0x2Du:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_477;
        goto LABEL_151;
      case 0x2Eu:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_518;
        goto LABEL_151;
      case 0x2Fu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v43 = (char *)*((_QWORD *)a2 + 1);
        v44 = *((_QWORD *)a2 + 2);
        goto LABEL_539;
      case 0x30u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_131;
        goto LABEL_151;
      case 0x31u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v48 = (char *)*((_QWORD *)a2 + 1);
        v47 = *((_QWORD *)a2 + 2);
        goto LABEL_241;
      case 0x32u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_304;
        goto LABEL_151;
      case 0x33u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_309;
        goto LABEL_151;
      case 0x34u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v50 = (char *)*((_QWORD *)a2 + 1);
        v49 = *((_QWORD *)a2 + 2);
        goto LABEL_314;
      case 0x35u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v52 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
        v51 = *((_QWORD *)a2 + 2);
        goto LABEL_325;
      case 0x36u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v53 = (char *)*((_QWORD *)a2 + 1);
        v51 = *((_QWORD *)a2 + 2);
        goto LABEL_487;
      case 0x37u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v55 = (char *)*((_QWORD *)a2 + 1);
        v54 = *((_QWORD *)a2 + 2);
        goto LABEL_498;
      case 0x38u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_151;
        v57 = (char *)*((_QWORD *)a2 + 1);
        v56 = *((_QWORD *)a2 + 2);
        goto LABEL_509;
      default:
        v7 = TagFallback & 7;
LABEL_151:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = this;
  v6 = *(_DWORD *)(this + 360);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v6 = *(_DWORD *)(v5 + 360);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_63;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_65;
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_66;
  }
LABEL_65:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_67;
  }
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 52), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 56), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 112), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
    goto LABEL_74;
  }
LABEL_71:
  v10 = *(_QWORD *)(v5 + 64);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0)
      goto LABEL_14;
    goto LABEL_75;
  }
LABEL_74:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 72), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0)
      goto LABEL_15;
    goto LABEL_76;
  }
LABEL_75:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0)
      goto LABEL_16;
    goto LABEL_77;
  }
LABEL_76:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0)
      goto LABEL_17;
    goto LABEL_78;
  }
LABEL_77:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 113), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0)
      goto LABEL_18;
    goto LABEL_81;
  }
LABEL_78:
  v11 = *(_QWORD *)(v5 + 88);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0)
      goto LABEL_19;
    goto LABEL_82;
  }
LABEL_81:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0)
      goto LABEL_20;
    goto LABEL_83;
  }
LABEL_82:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(float *)(v5 + 100), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0)
      goto LABEL_21;
    goto LABEL_86;
  }
LABEL_83:
  v12 = *(_QWORD *)(v5 + 104);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0)
      goto LABEL_22;
    goto LABEL_87;
  }
LABEL_86:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 120), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0)
      goto LABEL_23;
    goto LABEL_88;
  }
LABEL_87:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(double *)(v5 + 128), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0)
      goto LABEL_24;
    goto LABEL_89;
  }
LABEL_88:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0)
      goto LABEL_25;
    goto LABEL_90;
  }
LABEL_89:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned __int8 *)(v5 + 114), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0)
      goto LABEL_26;
    goto LABEL_93;
  }
LABEL_90:
  v13 = *(_QWORD *)(v5 + 136);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0)
      goto LABEL_27;
    goto LABEL_94;
  }
LABEL_93:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(double *)(v5 + 144), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0)
      goto LABEL_28;
    goto LABEL_95;
  }
LABEL_94:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 152), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0)
      goto LABEL_29;
    goto LABEL_96;
  }
LABEL_95:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 160), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0)
      goto LABEL_30;
    goto LABEL_97;
  }
LABEL_96:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (uint64_t)a2, *(double *)(v5 + 168), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0)
      goto LABEL_31;
    goto LABEL_98;
  }
LABEL_97:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (uint64_t)a2, *(double *)(v5 + 176), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0)
      goto LABEL_32;
LABEL_99:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned __int8 *)(v5 + 115), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 360) & 0x80000000) == 0)
      goto LABEL_33;
    goto LABEL_100;
  }
LABEL_98:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, (uint64_t)a2, *(double *)(v5 + 184), a3);
  v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x40000000) != 0)
    goto LABEL_99;
LABEL_32:
  if ((v6 & 0x80000000) == 0)
    goto LABEL_33;
LABEL_100:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, (uint64_t)a2, *(double *)(v5 + 192), a3);
LABEL_33:
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, (uint64_t)a2, *(double *)(v5 + 200), a3);
    v7 = *(_DWORD *)(v5 + 364);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0)
        goto LABEL_36;
      goto LABEL_103;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned __int8 *)(v5 + 276), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0)
      goto LABEL_37;
    goto LABEL_106;
  }
LABEL_103:
  v14 = *(_QWORD *)(v5 + 208);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 208);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, v14, a2, a4);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0)
      goto LABEL_38;
    goto LABEL_107;
  }
LABEL_106:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, (uint64_t)a2, *(double *)(v5 + 216), a3);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0)
      goto LABEL_39;
    goto LABEL_108;
  }
LABEL_107:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned int *)(v5 + 272), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0)
      goto LABEL_40;
    goto LABEL_109;
  }
LABEL_108:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, (uint64_t)a2, *(double *)(v5 + 224), a3);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x40) == 0)
  {
LABEL_40:
    if ((v7 & 0x80) == 0)
      goto LABEL_41;
    goto LABEL_110;
  }
LABEL_109:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, (uint64_t)a2, *(double *)(v5 + 232), a3);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x80) == 0)
  {
LABEL_41:
    if ((v7 & 0x100) == 0)
      goto LABEL_42;
    goto LABEL_111;
  }
LABEL_110:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, (uint64_t)a2, *(double *)(v5 + 240), a3);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0)
      goto LABEL_43;
    goto LABEL_112;
  }
LABEL_111:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, (uint64_t)a2, *(double *)(v5 + 248), a3);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x200) == 0)
  {
LABEL_43:
    if ((v7 & 0x400) == 0)
      goto LABEL_44;
    goto LABEL_113;
  }
LABEL_112:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, (uint64_t)a2, *(double *)(v5 + 256), a3);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x400) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0)
      goto LABEL_45;
    goto LABEL_114;
  }
LABEL_113:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(unsigned __int8 *)(v5 + 277), (uint64_t)a2, a4);
  v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0)
      goto LABEL_47;
    goto LABEL_46;
  }
LABEL_114:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, (uint64_t)a2, *(double *)(v5 + 264), a3);
  if ((*(_DWORD *)(v5 + 364) & 0x1000) != 0)
LABEL_46:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, (uint64_t)a2, *(double *)(v5 + 280), a3);
LABEL_47:
  if (*(int *)(v5 + 296) >= 1)
  {
    v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(_QWORD *)(*(_QWORD *)(v5 + 288) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 296));
  }
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x4000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(unsigned int *)(v5 + 312), (uint64_t)a2, a4);
    v9 = *(_DWORD *)(v5 + 364);
    if ((v9 & 0x8000) == 0)
    {
LABEL_52:
      if ((v9 & 0x10000) == 0)
        goto LABEL_53;
      goto LABEL_120;
    }
  }
  else if ((v9 & 0x8000) == 0)
  {
    goto LABEL_52;
  }
  v15 = *(_QWORD *)(v5 + 320);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v15 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 320);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, v15, a2, a4);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x10000) == 0)
  {
LABEL_53:
    if ((v9 & 0x20000) == 0)
      goto LABEL_54;
    goto LABEL_121;
  }
LABEL_120:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 316), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x20000) == 0)
  {
LABEL_54:
    if ((v9 & 0x40000) == 0)
      goto LABEL_55;
    goto LABEL_122;
  }
LABEL_121:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, (uint64_t)a2, *(double *)(v5 + 328), a3);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x40000) == 0)
  {
LABEL_55:
    if ((v9 & 0x80000) == 0)
      goto LABEL_56;
    goto LABEL_123;
  }
LABEL_122:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, (uint64_t)a2, *(double *)(v5 + 336), a3);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x80000) == 0)
  {
LABEL_56:
    if ((v9 & 0x100000) == 0)
      goto LABEL_57;
    goto LABEL_124;
  }
LABEL_123:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 344), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x100000) == 0)
  {
LABEL_57:
    if ((v9 & 0x200000) == 0)
      goto LABEL_58;
    goto LABEL_125;
  }
LABEL_124:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(unsigned __int8 *)(v5 + 278), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x200000) == 0)
  {
LABEL_58:
    if ((v9 & 0x400000) == 0)
      goto LABEL_59;
    goto LABEL_126;
  }
LABEL_125:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(v5 + 348), (uint64_t)a2, a4);
  v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x400000) == 0)
  {
LABEL_59:
    if ((v9 & 0x800000) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned __int8 *)(v5 + 279), (uint64_t)a2, a4);
  }
LABEL_126:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 352), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 364) & 0x800000) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, *(unsigned __int8 *)(v5 + 279), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v11;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v25;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v35;
  int v36;
  int v37;
  int v38;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v39;
  int v40;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *v41;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v42;
  int v43;
  int v44;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v45;
  int v46;
  int v47;
  int v48;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v49;
  int v50;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v51;
  int v52;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v58;
  int v59;
  int v60;

  v1 = this;
  v2 = *(_DWORD *)(this + 360);
  if ((_BYTE)v2)
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
      v3 += 9;
    if ((v2 & 4) != 0)
      v3 += 9;
    if ((v2 & 8) != 0)
      v3 += 9;
    if ((v2 & 0x10) != 0)
      v3 += 9;
    if ((v2 & 0x20) != 0)
      v3 += 5;
    if ((v2 & 0x40) != 0)
      v3 += 5;
    if ((v2 & 0x80) != 0)
      v4 = v3 + 5;
    else
      v4 = v3;
  }
  else
  {
    v4 = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
      v5 = v4 + 2;
    else
      v5 = v4;
    if ((v2 & 0x200) != 0)
    {
      v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 60);
      if ((v6 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v6 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v5 += this + 1;
    }
    if ((v2 & 0x400) != 0)
    {
      v7 = *(_QWORD *)(v1 + 64);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 64);
      }
      v8 = *(unsigned __int8 *)(v7 + 28);
      v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0)
        v9 += 9;
      if (*(_BYTE *)(v7 + 28))
        v10 = v9;
      else
        v10 = 0;
      *(_DWORD *)(v7 + 24) = v10;
      v5 += v10 + 2;
      v2 = *(_DWORD *)(v1 + 360);
    }
    if ((v2 & 0x800) != 0)
      v5 += 9;
    if ((v2 & 0x1000) != 0)
    {
      v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 80);
      if ((v11 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v11 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
        v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v5 += this + 1;
    }
    if ((v2 & 0x2000) != 0)
    {
      v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 84);
      if ((v12 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v12 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
        v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v5 += this + 1;
    }
    if ((v2 & 0x4000) != 0)
      v4 = v5 + 2;
    else
      v4 = v5;
    if ((v2 & 0x8000) != 0)
    {
      v13 = *(_QWORD *)(v1 + 88);
      if (!v13)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 88);
      }
      v14 = *(unsigned __int8 *)(v13 + 28);
      v15 = (v14 << 31 >> 31) & 9;
      if ((v14 & 2) != 0)
        v15 += 9;
      if (*(_BYTE *)(v13 + 28))
        v16 = v15;
      else
        v16 = 0;
      *(_DWORD *)(v13 + 24) = v16;
      v4 += v16 + 3;
      v2 = *(_DWORD *)(v1 + 360);
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 96);
      if ((v17 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v17 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
        v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v4 += this + 2;
    }
    if ((v2 & 0x20000) != 0)
      v18 = v4 + 6;
    else
      v18 = v4;
    if ((v2 & 0x40000) != 0)
    {
      v19 = *(_QWORD *)(v1 + 104);
      if (!v19)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v19 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 104);
      }
      v20 = *(unsigned __int8 *)(v19 + 28);
      v21 = (v20 << 31 >> 31) & 9;
      if ((v20 & 2) != 0)
        v21 += 9;
      if (*(_BYTE *)(v19 + 28))
        v22 = v21;
      else
        v22 = 0;
      *(_DWORD *)(v19 + 24) = v22;
      v18 += v22 + 3;
      v2 = *(_DWORD *)(v1 + 360);
    }
    v23 = v18 + 10;
    if ((v2 & 0x80000) == 0)
      v23 = v18;
    if ((v2 & 0x100000) != 0)
      v24 = v23 + 10;
    else
      v24 = v23;
    if ((v2 & 0x200000) != 0)
    {
      v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 116);
      if ((v25 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v25 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
        v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v24 += this + 2;
    }
    if ((v2 & 0x400000) != 0)
      v4 = v24 + 3;
    else
      v4 = v24;
    if ((v2 & 0x800000) != 0)
    {
      v26 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData **)(v1 + 136);
      if (!v26)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v26 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                             + 136);
      }
      this = CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::ByteSize(v26);
      v4 += this + 3;
      v2 = *(_DWORD *)(v1 + 360);
    }
  }
  if (HIBYTE(v2))
  {
    v27 = v4 + 10;
    if ((v2 & 0x1000000) == 0)
      v27 = v4;
    if ((v2 & 0x2000000) != 0)
      v27 += 10;
    if ((v2 & 0x4000000) != 0)
      v27 += 10;
    if ((v2 & 0x8000000) != 0)
      v27 += 10;
    if ((v2 & 0x10000000) != 0)
      v27 += 10;
    if ((v2 & 0x20000000) != 0)
      v27 += 10;
    if ((v2 & 0x40000000) != 0)
      v27 += 3;
    if (v2 >= 0)
      v4 = v27;
    else
      v4 = v27 + 10;
  }
  v28 = *(_DWORD *)(v1 + 364);
  if ((_BYTE)v28)
  {
    v29 = v4 + 10;
    if ((v28 & 1) == 0)
      v29 = v4;
    if ((v28 & 2) != 0)
      v30 = v29 + 3;
    else
      v30 = v29;
    if ((v28 & 4) != 0)
    {
      v31 = *(_QWORD *)(v1 + 208);
      if (!v31)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        v31 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 208);
      }
      v32 = *(unsigned __int8 *)(v31 + 28);
      v33 = (v32 << 31 >> 31) & 9;
      if ((v32 & 2) != 0)
        v33 += 9;
      if (*(_BYTE *)(v31 + 28))
        v34 = v33;
      else
        v34 = 0;
      *(_DWORD *)(v31 + 24) = v34;
      v30 += v34 + 3;
      v28 = *(_DWORD *)(v1 + 364);
    }
    if ((v28 & 8) != 0)
      v30 += 10;
    if ((v28 & 0x10) != 0)
    {
      v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 272);
      if ((v35 & 0x80000000) != 0)
      {
        v36 = 10;
      }
      else if (v35 >= 0x80)
      {
        v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
        v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        v36 = 1;
      }
      v30 += v36 + 2;
    }
    v37 = v30 + 10;
    if ((v28 & 0x20) == 0)
      v37 = v30;
    if ((v28 & 0x40) != 0)
      v37 += 10;
    if ((v28 & 0x80) != 0)
      v4 = v37 + 10;
    else
      v4 = v37;
  }
  if ((v28 & 0xFF00) != 0)
  {
    v38 = v4 + 10;
    if ((v28 & 0x100) == 0)
      v38 = v4;
    if ((v28 & 0x200) != 0)
      v38 += 10;
    if ((v28 & 0x400) != 0)
      v38 += 3;
    if ((v28 & 0x800) != 0)
      v38 += 10;
    if ((v28 & 0x1000) != 0)
      v4 = v38 + 10;
    else
      v4 = v38;
    if ((v28 & 0x4000) != 0)
    {
      v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 312);
      if ((v39 & 0x80000000) != 0)
      {
        v40 = 10;
      }
      else if (v39 >= 0x80)
      {
        v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
        v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        v40 = 1;
      }
      v4 += v40 + 2;
    }
    if ((v28 & 0x8000) != 0)
    {
      v41 = *(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo **)(v1 + 320);
      if (!v41)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        v41 = *(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                                 + 320);
      }
      v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::ByteSize(v41);
      v43 = (int)v42;
      if (v42 >= 0x80)
        v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
      else
        v44 = 1;
      v4 += v43 + v44 + 2;
      v28 = *(_DWORD *)(v1 + 364);
    }
  }
  if ((v28 & 0xFF0000) != 0)
  {
    if ((v28 & 0x10000) != 0)
    {
      v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 316);
      if ((v45 & 0x80000000) != 0)
      {
        v46 = 12;
      }
      else if (v45 >= 0x80)
      {
        v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45) + 2;
        v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        v46 = 3;
      }
      v4 += v46;
    }
    v47 = v4 + 10;
    if ((v28 & 0x20000) == 0)
      v47 = v4;
    if ((v28 & 0x40000) != 0)
      v48 = v47 + 10;
    else
      v48 = v47;
    if ((v28 & 0x80000) != 0)
    {
      v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 344);
      if ((v49 & 0x80000000) != 0)
      {
        v50 = 12;
      }
      else if (v49 >= 0x80)
      {
        v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49) + 2;
        v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        v50 = 3;
      }
      v48 += v50;
    }
    if ((v28 & 0x100000) != 0)
      v48 += 3;
    if ((v28 & 0x200000) != 0)
    {
      v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 348);
      if ((v51 & 0x80000000) != 0)
      {
        v52 = 12;
      }
      else if (v51 >= 0x80)
      {
        v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51) + 2;
        v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        v52 = 3;
      }
      v48 += v52;
    }
    if ((v28 & 0x400000) != 0)
    {
      v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 352);
      if ((v53 & 0x80000000) != 0)
      {
        v54 = 12;
      }
      else if (v53 >= 0x80)
      {
        v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53) + 2;
        v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        v54 = 3;
      }
      v48 += v54;
    }
    if ((v28 & 0x800000) != 0)
      v4 = v48 + 3;
    else
      v4 = v48;
  }
  v55 = *(_DWORD *)(v1 + 296);
  v56 = (v4 + 2 * v55);
  if (v55 >= 1)
  {
    v57 = 0;
    do
    {
      v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo **)(*(_QWORD *)(v1 + 288) + 8 * v57));
      v59 = (int)v58;
      if (v58 >= 0x80)
        v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
      else
        v60 = 1;
      v56 = (v59 + v56 + v60);
      ++v57;
    }
    while (v57 < *(int *)(v1 + 296));
  }
  *(_DWORD *)(v1 + 356) = v56;
  return v56;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  double result;

  if (a2 != this)
  {
    v4 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v4;
    v5 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v5;
    v6 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v6;
    v7 = *((_QWORD *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a2 + 4) = v7;
    v8 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v8;
    LODWORD(v8) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
    LODWORD(v8) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v8;
    LODWORD(v8) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v8;
    v9 = *((_BYTE *)this + 112);
    *((_BYTE *)this + 112) = *((_BYTE *)a2 + 112);
    *((_BYTE *)a2 + 112) = v9;
    v10 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v10;
    v11 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v11;
    v12 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = *((_QWORD *)a2 + 9);
    *((_QWORD *)a2 + 9) = v12;
    LODWORD(v11) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v11;
    LODWORD(v11) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
    LOBYTE(v11) = *((_BYTE *)this + 113);
    *((_BYTE *)this + 113) = *((_BYTE *)a2 + 113);
    *((_BYTE *)a2 + 113) = v11;
    v13 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v13;
    LODWORD(v13) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v13;
    LODWORD(v12) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v12;
    v14 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = *((_QWORD *)a2 + 13);
    *((_QWORD *)a2 + 13) = v14;
    v15 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = *((_QWORD *)a2 + 15);
    *((_QWORD *)a2 + 15) = v15;
    v16 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = *((_QWORD *)a2 + 16);
    *((_QWORD *)a2 + 16) = v16;
    LODWORD(v14) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v14;
    LOBYTE(v14) = *((_BYTE *)this + 114);
    *((_BYTE *)this + 114) = *((_BYTE *)a2 + 114);
    *((_BYTE *)a2 + 114) = v14;
    v17 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = *((_QWORD *)a2 + 17);
    *((_QWORD *)a2 + 17) = v17;
    v18 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = *((_QWORD *)a2 + 18);
    *((_QWORD *)a2 + 18) = v18;
    v19 = *((_QWORD *)this + 19);
    *((_QWORD *)this + 19) = *((_QWORD *)a2 + 19);
    *((_QWORD *)a2 + 19) = v19;
    v20 = *((_QWORD *)this + 20);
    *((_QWORD *)this + 20) = *((_QWORD *)a2 + 20);
    *((_QWORD *)a2 + 20) = v20;
    v21 = *((_QWORD *)this + 21);
    *((_QWORD *)this + 21) = *((_QWORD *)a2 + 21);
    *((_QWORD *)a2 + 21) = v21;
    v22 = *((_QWORD *)this + 22);
    *((_QWORD *)this + 22) = *((_QWORD *)a2 + 22);
    *((_QWORD *)a2 + 22) = v22;
    v23 = *((_QWORD *)this + 23);
    *((_QWORD *)this + 23) = *((_QWORD *)a2 + 23);
    *((_QWORD *)a2 + 23) = v23;
    LOBYTE(v17) = *((_BYTE *)this + 115);
    *((_BYTE *)this + 115) = *((_BYTE *)a2 + 115);
    *((_BYTE *)a2 + 115) = v17;
    v24 = *((_QWORD *)this + 24);
    *((_QWORD *)this + 24) = *((_QWORD *)a2 + 24);
    *((_QWORD *)a2 + 24) = v24;
    v25 = *((_QWORD *)this + 25);
    *((_QWORD *)this + 25) = *((_QWORD *)a2 + 25);
    *((_QWORD *)a2 + 25) = v25;
    LOBYTE(v17) = *((_BYTE *)this + 276);
    *((_BYTE *)this + 276) = *((_BYTE *)a2 + 276);
    *((_BYTE *)a2 + 276) = v17;
    v26 = *((_QWORD *)this + 26);
    *((_QWORD *)this + 26) = *((_QWORD *)a2 + 26);
    *((_QWORD *)a2 + 26) = v26;
    v27 = *((_QWORD *)this + 27);
    *((_QWORD *)this + 27) = *((_QWORD *)a2 + 27);
    *((_QWORD *)a2 + 27) = v27;
    LODWORD(v26) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v26;
    v28 = *((_QWORD *)this + 28);
    *((_QWORD *)this + 28) = *((_QWORD *)a2 + 28);
    *((_QWORD *)a2 + 28) = v28;
    v29 = *((_QWORD *)this + 29);
    *((_QWORD *)this + 29) = *((_QWORD *)a2 + 29);
    *((_QWORD *)a2 + 29) = v29;
    v30 = *((_QWORD *)this + 30);
    *((_QWORD *)this + 30) = *((_QWORD *)a2 + 30);
    *((_QWORD *)a2 + 30) = v30;
    v31 = *((_QWORD *)this + 31);
    *((_QWORD *)this + 31) = *((_QWORD *)a2 + 31);
    *((_QWORD *)a2 + 31) = v31;
    v32 = *((_QWORD *)this + 32);
    *((_QWORD *)this + 32) = *((_QWORD *)a2 + 32);
    *((_QWORD *)a2 + 32) = v32;
    LOBYTE(v26) = *((_BYTE *)this + 277);
    *((_BYTE *)this + 277) = *((_BYTE *)a2 + 277);
    *((_BYTE *)a2 + 277) = v26;
    v33 = *((_QWORD *)this + 33);
    *((_QWORD *)this + 33) = *((_QWORD *)a2 + 33);
    *((_QWORD *)a2 + 33) = v33;
    v34 = *((_QWORD *)this + 35);
    *((_QWORD *)this + 35) = *((_QWORD *)a2 + 35);
    *((_QWORD *)a2 + 35) = v34;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v35 = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v35;
    v36 = *((_QWORD *)this + 40);
    *((_QWORD *)this + 40) = *((_QWORD *)a2 + 40);
    *((_QWORD *)a2 + 40) = v36;
    LODWORD(v36) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v36;
    v37 = *((_QWORD *)this + 41);
    *((_QWORD *)this + 41) = *((_QWORD *)a2 + 41);
    *((_QWORD *)a2 + 41) = v37;
    result = *((double *)this + 42);
    *((_QWORD *)this + 42) = *((_QWORD *)a2 + 42);
    *((double *)a2 + 42) = result;
    LODWORD(v36) = *((_DWORD *)this + 86);
    *((_DWORD *)this + 86) = *((_DWORD *)a2 + 86);
    *((_DWORD *)a2 + 86) = v36;
    LOBYTE(v36) = *((_BYTE *)this + 278);
    *((_BYTE *)this + 278) = *((_BYTE *)a2 + 278);
    *((_BYTE *)a2 + 278) = v36;
    LODWORD(v36) = *((_DWORD *)this + 87);
    *((_DWORD *)this + 87) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v36;
    LODWORD(v36) = *((_DWORD *)this + 88);
    *((_DWORD *)this + 88) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v36;
    LOBYTE(v36) = *((_BYTE *)this + 279);
    *((_BYTE *)this + 279) = *((_BYTE *)a2 + 279);
    *((_BYTE *)a2 + 279) = v36;
    LODWORD(v36) = *((_DWORD *)this + 90);
    *((_DWORD *)this + 90) = *((_DWORD *)a2 + 90);
    *((_DWORD *)a2 + 90) = v36;
    LODWORD(v36) = *((_DWORD *)this + 91);
    *((_DWORD *)this + 91) = *((_DWORD *)a2 + 91);
    *((_DWORD *)a2 + 91) = v36;
    LODWORD(v36) = *((_DWORD *)this + 89);
    *((_DWORD *)this + 89) = *((_DWORD *)a2 + 89);
    *((_DWORD *)a2 + 89) = v36;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DaemonLocationPrivate");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 8) = 0;
  *(_BYTE *)(this + 12) = 0;
  *(_QWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::TechnologyStatus(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  *(_QWORD *)this = &off_1E25BB2B8;
  *((_DWORD *)this + 2) = 0;
  *((_BYTE *)this + 12) = 0;
  *((_QWORD *)this + 2) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(this, a2);
  return this;
}

void sub_18D0F526C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  int v4;
  unsigned int v5;
  char v6;
  _BYTE v7[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 20);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 20) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xE)
        __assert_rtn("set_location_type", "CoreNavigationCLPPrivateDataShared.pb.h", 16628, "::CoreNavigation::CLP::LogEntry::PrivateData::LocationType_IsValid(value)");
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_BYTE *)a2 + 12);
      *((_DWORD *)this + 5) |= 2u;
      *((_BYTE *)this + 12) = v6;
    }
  }
}

void sub_18D0F5350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::~TechnologyStatus(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  *(_QWORD *)this = &off_1E25BB2B8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::~TechnologyStatus(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::New(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)result = &off_1E25BB2B8;
  *(_DWORD *)(result + 8) = 0;
  *(_BYTE *)(result + 12) = 0;
  *(_QWORD *)(result + 16) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 20))
  {
    *(_DWORD *)(this + 8) = 0;
    *(_BYTE *)(this + 12) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  unint64_t v7;
  char *v8;
  char *v9;
  unsigned int v10;
  _BYTE *v11;
  unsigned int v12;
  unsigned __int8 *v13;
  uint64_t result;
  unsigned int v15;
  unsigned int v16;

  while (1)
  {
    while (1)
    {
      v4 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v4 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 != 1)
        break;
      v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
        goto LABEL_15;
      v15 = 0;
      v9 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
      {
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!(_DWORD)result)
          return result;
        v10 = v15;
      }
      else
      {
        v10 = *v9;
        *((_QWORD *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 0xD)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      v11 = (_BYTE *)*((_QWORD *)a2 + 1);
      v7 = *((_QWORD *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        v8 = v11 + 1;
        *((_QWORD *)a2 + 1) = v8;
LABEL_25:
        v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!(_DWORD)result)
            return result;
          v12 = v16;
          v13 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v7 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v12 = *v8;
          v13 = (unsigned __int8 *)(v8 + 1);
          *((_QWORD *)a2 + 1) = v13;
        }
        *((_BYTE *)this + 12) = v12 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        v8 = (char *)*((_QWORD *)a2 + 1);
        v7 = *((_QWORD *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 20);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  int v2;
  unsigned int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;

  LOBYTE(v2) = *((_BYTE *)this + 20);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 20) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 5);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      result = v3 + 2;
    else
      result = v3;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  int v2;
  int v3;
  int v4;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 12);
    *(_BYTE *)(this + 12) = *((_BYTE *)a2 + 12);
    *((_BYTE *)a2 + 12) = v2;
    v3 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TechnologyStatus");
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  double result;

  *((_QWORD *)this + 5) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::VehicleSpeed(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  *(_QWORD *)this = &off_1E25BA430;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_QWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(this, a2);
  return this;
}

void sub_18D0F5848(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 44);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 44) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_12;
      }
    }
    else if ((*((_BYTE *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        return result;
      goto LABEL_8;
    }
LABEL_12:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0)
      return result;
LABEL_8:
    result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18D0F594C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::~VehicleSpeed(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  *(_QWORD *)this = &off_1E25BA430;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::~VehicleSpeed(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::New(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BA430;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_QWORD *)(v1 + 40) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  while (2)
  {
    v4 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v4 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 11) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 >= *((_QWORD *)a2 + 2) || *v7 != 17)
          continue;
        *((_QWORD *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_29;
LABEL_14:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 2) = v11;
        *((_DWORD *)this + 11) |= 2u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 >= *((_QWORD *)a2 + 2) || *v8 != 25)
          continue;
        *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_19:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 3) = v11;
        *((_DWORD *)this + 11) |= 4u;
        v9 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 != 33)
          continue;
        *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_24:
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 4) = v11;
        *((_DWORD *)this + 11) |= 8u;
        if (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        break;
      case 3u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_19;
        goto LABEL_29;
      case 4u:
        v6 = TagFallback & 7;
        if (v6 == 1)
          goto LABEL_24;
        goto LABEL_29;
      default:
        v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 44);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  }
LABEL_8:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 8) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 44);
  if (*((_BYTE *)this + 44))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v2 += 9;
    if ((v1 & 8) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 10) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::Swap(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  int v6;
  int v7;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    result = *((double *)this + 4);
    *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
    *((double *)a2 + 4) = result;
    v6 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.VehicleSpeed");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::SharedCtor(_QWORD *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::VehicleHeading(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  *(_QWORD *)this = &off_1E25BABB0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(this, a2);
  return this;
}

void sub_18D0F5ED8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18D0F5F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::~VehicleHeading(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  *(_QWORD *)this = &off_1E25BABB0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::~VehicleHeading(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::New(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BABB0;
  result[1] = 0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  int v6;
  _BYTE *v7;
  uint64_t result;
  unint64_t v9;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v6 = TagFallback & 7;
        if (v6 != 1)
          goto LABEL_21;
        v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        v7 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v7 < *((_QWORD *)a2 + 2) && *v7 == 17)
        {
          *((_QWORD *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        v6 = TagFallback & 7;
        goto LABEL_21;
      }
      v6 = TagFallback & 7;
      if (v6 == 1)
        break;
LABEL_21:
      if (v6 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_15:
    v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0)
      return 0;
    *((_QWORD *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 28);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::Swap(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  uint64_t v2;
  double result;
  int v4;
  int v5;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    result = *((double *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((double *)a2 + 2) = result;
    v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.VehicleHeading");
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SharedCtor(_QWORD *this)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DE8338];
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::XtraFileAvailable(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  *(_QWORD *)this = &off_1E25BBA38;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
  *((_QWORD *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(this, a2);
  return this;
}

void sub_18D0F63E0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  int v4;
  uint64_t v5;
  const std::string *v6;
  std::string *v7;
  _BYTE v8[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v5 = *((_QWORD *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((_QWORD *)this + 1) = v5;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      v6 = (const std::string *)*((_QWORD *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      v7 = (std::string *)*((_QWORD *)this + 2);
      if (v7 == (std::string *)MEMORY[0x1E0DE8338])
      {
        v7 = (std::string *)operator new();
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        *((_QWORD *)this + 2) = v7;
      }
      std::string::operator=(v7, v6);
    }
  }
}

void sub_18D0F64D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::~XtraFileAvailable(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  *(_QWORD *)this = &off_1E25BBA38;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::~XtraFileAvailable(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 2);
  if (v1 != MEMORY[0x1E0DE8338] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0)
      operator delete(*(void **)v1);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)MEMORY[0x18D78B5D4](v1, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::New(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  _QWORD *result;

  result = (_QWORD *)operator new();
  *result = &off_1E25BBA38;
  result[1] = 0;
  result[2] = MEMORY[0x1E0DE8338];
  result[3] = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::Clear(uint64_t this)
{
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(this + 28);
  if (v1)
  {
    *(_QWORD *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      v2 = *(_QWORD *)(this + 16);
      if (v2 != MEMORY[0x1E0DE8338])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(_BYTE **)v2 = 0;
          *(_QWORD *)(v2 + 8) = 0;
        }
        else
        {
          *(_BYTE *)v2 = 0;
          *(_BYTE *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  int v8;
  _BYTE *v9;
  _QWORD *v10;
  uint64_t result;
  unint64_t v12;

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    while (1)
    {
      v5 = (char *)*((_QWORD *)a2 + 1);
      if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
      {
        TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      else
      {
        TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((_QWORD *)a2 + 1) = v5 + 1;
        if (!(_DWORD)TagFallback)
          return 1;
      }
      if (TagFallback >> 3 == 1)
        break;
      if (TagFallback >> 3 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 == 2)
        {
          v8 = *((_DWORD *)this + 7);
          goto LABEL_16;
        }
      }
      else
      {
        v7 = TagFallback & 7;
      }
LABEL_24:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
    v7 = TagFallback & 7;
    if (v7 != 1)
      goto LABEL_24;
    v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0)
      return 0;
    *((_QWORD *)this + 1) = v12;
    v8 = *((_DWORD *)this + 7) | 1;
    *((_DWORD *)this + 7) = v8;
    v9 = (_BYTE *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 18)
    {
      *((_QWORD *)a2 + 1) = v9 + 1;
LABEL_16:
      *((_DWORD *)this + 7) = v8 | 2;
      if (*((_QWORD *)this + 2) == v4)
      {
        v10 = (_QWORD *)operator new();
        v10[1] = 0;
        v10[2] = 0;
        *v10 = 0;
        *((_QWORD *)this + 2) = v10;
      }
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!(_DWORD)result)
        return result;
      if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v3;
  int v4;

  v3 = this;
  v4 = *(_DWORD *)(this + 28);
  if ((v4 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v4 = *(_DWORD *)(v3 + 28);
  }
  if ((v4 & 2) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  int v9;

  v2 = *((unsigned __int8 *)this + 28);
  if (*((_BYTE *)this + 28))
  {
    v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      v4 = *((_QWORD *)this + 2);
      v5 = *(unsigned __int8 *)(v4 + 23);
      v6 = v5;
      v7 = *(_QWORD *)(v4 + 8);
      if ((v5 & 0x80u) == 0)
        v8 = *(unsigned __int8 *)(v4 + 23);
      else
        v8 = v7;
      if (v8 >= 0x80)
      {
        v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
        v5 = *(unsigned __int8 *)(v4 + 23);
        v7 = *(_QWORD *)(v4 + 8);
        v6 = *(_BYTE *)(v4 + 23);
      }
      else
      {
        v9 = 1;
      }
      if (v6 < 0)
        v5 = v7;
      v3 = (v3 + v9 + v5 + 1);
    }
  }
  else
  {
    v3 = 0;
  }
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::Swap(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  double result;
  uint64_t v3;

  if (a2 != this)
  {
    result = *((double *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((double *)a2 + 1) = result;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.XtraFileAvailable");
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::LocationDerivedSpeed(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  *(_QWORD *)this = &off_1E25BC230;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(this, a2);
  return this;
}

void sub_18D0F6A58(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  double result;
  int v5;
  _BYTE v6[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((_BYTE *)a2 + 36);
  if ((_BYTE)v5)
  {
    if ((*((_BYTE *)a2 + 36) & 1) != 0)
    {
      result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          return result;
        goto LABEL_7;
      }
    }
    else if ((*((_BYTE *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0)
      return result;
LABEL_7:
    result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18D0F6B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::~LocationDerivedSpeed(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  *(_QWORD *)this = &off_1E25BC230;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::~LocationDerivedSpeed(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::New(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BC230;
  result = 0.0;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 36))
  {
    *(_QWORD *)(this + 8) = 0;
    *(_QWORD *)(this + 16) = 0;
    *(_QWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  char *v4;
  uint64_t TagFallback;
  unsigned int v6;
  int v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t result;
  unint64_t v11;

  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v4 >= *((_QWORD *)a2 + 2) || *v4 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v4 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1)
          break;
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
          return 0;
        *((_QWORD *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && *v8 == 17)
        {
          *((_QWORD *)a2 + 1) = v8 + 1;
LABEL_17:
          v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
            return 0;
          *((_QWORD *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v9 < *((_QWORD *)a2 + 2) && *v9 == 25)
          {
            *((_QWORD *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        v7 = TagFallback & 7;
        if (v7 != 1)
          goto LABEL_27;
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        v7 = TagFallback & 7;
        goto LABEL_27;
      }
      v7 = TagFallback & 7;
      if (v7 == 1)
        break;
LABEL_27:
      if (v7 == 4)
        return 1;
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
    }
LABEL_21:
    v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0)
      return 0;
    *((_QWORD *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((_QWORD *)a2 + 1) != *((_QWORD *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  result = 1;
  *((_BYTE *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4;
  int v5;

  v4 = this;
  v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    v5 = *(_DWORD *)(v4 + 36);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0)
        return this;
      return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  if ((*(_DWORD *)(v4 + 36) & 4) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  uint64_t v1;
  unsigned int v2;

  v1 = *((unsigned __int8 *)this + 36);
  if (*((_BYTE *)this + 36))
  {
    v2 = ((int)((_DWORD)v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0)
      v2 += 9;
    if ((v1 & 4) != 0)
      v1 = v2 + 9;
    else
      v1 = v2;
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::Swap(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;
  int v5;
  int v6;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    result = *((double *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((double *)a2 + 3) = result;
    v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.LocationDerivedSpeed");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::Location_SignalQualityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::Location_MotionDetectedType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  double result;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *(_QWORD *)((char *)this + 29) = 0;
  *((_QWORD *)this + 3) = 0;
  result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::Location *CoreNavigation::CLP::LogEntry::PrivateData::Location::Location(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  *(_QWORD *)this = &off_1E25BD928;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0;
  *(_QWORD *)((char *)this + 29) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(this, a2);
  return this;
}

void sub_18D0F7078(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Location *v3;
  double result;
  int v5;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v6;
  const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *v7;
  int v8;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *v9;
  const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *v10;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *v11;
  const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *v12;
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *v13;
  const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *v14;
  char v15;
  unsigned int v16;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *v17;
  const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *v18;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *v19;
  const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *v20;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *v21;
  const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *v22;
  unsigned int v23;
  CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *v24;
  const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *v25;
  _BYTE v26[48];

  v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  v5 = *((_DWORD *)a2 + 25);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) != 0)
    {
      *((_DWORD *)v3 + 25) |= 1u;
      v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)v3 + 1);
      if (!v6)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
        v6 = this;
        *(_QWORD *)this = &off_1E25BDBF8;
        *(_OWORD *)((char *)this + 8) = 0u;
        *(_OWORD *)((char *)this + 24) = 0u;
        *((_QWORD *)v3 + 1) = this;
      }
      v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((_QWORD *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                             + 8);
      }
      result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      v5 = *((_DWORD *)a2 + 25);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
          goto LABEL_7;
        goto LABEL_19;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v8 = *((_DWORD *)a2 + 8);
    *((_DWORD *)v3 + 25) |= 2u;
    *((_DWORD *)v3 + 8) = v8;
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0)
        goto LABEL_8;
      goto LABEL_24;
    }
LABEL_19:
    *((_DWORD *)v3 + 25) |= 4u;
    v9 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)*((_QWORD *)v3 + 2);
    if (!v9)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
      v9 = this;
      *(_QWORD *)this = &off_1E25BA700;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 56) = 0u;
      *(_OWORD *)((char *)this + 72) = 0u;
      *(_OWORD *)((char *)this + 88) = 0u;
      *(_OWORD *)((char *)this + 104) = 0u;
      *(_OWORD *)((char *)this + 120) = xmmword_18D30F410;
      *((_QWORD *)this + 17) = 0;
      *((_BYTE *)this + 144) = 0;
      *((_DWORD *)this + 37) = 0;
      *((_DWORD *)this + 38) = 0;
      *((_QWORD *)v3 + 2) = this;
    }
    v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)*((_QWORD *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                 + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(v9, v10);
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
        goto LABEL_9;
      goto LABEL_29;
    }
LABEL_24:
    *((_DWORD *)v3 + 25) |= 8u;
    v11 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)*((_QWORD *)v3 + 3);
    if (!v11)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
      v11 = this;
      *(_QWORD *)this = &off_1E25BC410;
      *((_QWORD *)this + 36) = 0;
      *((_QWORD *)this + 37) = 0;
      *((_DWORD *)this + 76) = 0;
      *((_DWORD *)this + 89) = 0;
      *((_WORD *)this + 56) = 0;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *(_OWORD *)((char *)this + 40) = 0u;
      *(_OWORD *)((char *)this + 56) = 0u;
      *(_OWORD *)((char *)this + 72) = 0u;
      *((_QWORD *)this + 11) = 0;
      *((_QWORD *)this + 12) = 0xFFFFFFFFLL;
      *((_QWORD *)this + 13) = 0;
      *((_QWORD *)this + 45) = 0;
      *(_OWORD *)((char *)this + 130) = 0u;
      *(_OWORD *)((char *)this + 146) = 0u;
      *(_OWORD *)((char *)this + 162) = 0u;
      *(_OWORD *)((char *)this + 178) = 0u;
      *(_OWORD *)((char *)this + 194) = 0u;
      *(_OWORD *)((char *)this + 210) = 0u;
      *(_OWORD *)((char *)this + 226) = 0u;
      *(_OWORD *)((char *)this + 242) = 0u;
      *(_OWORD *)((char *)this + 114) = 0u;
      *((_OWORD *)this + 17) = 0u;
      *(_OWORD *)((char *)this + 258) = 0u;
      *(_OWORD *)((char *)this + 340) = 0u;
      *(_OWORD *)((char *)this + 312) = 0u;
      *(_OWORD *)((char *)this + 328) = 0u;
      *((_QWORD *)v3 + 3) = this;
    }
    v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)*((_QWORD *)a2 + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                        + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(v11, v12);
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0)
        goto LABEL_10;
      goto LABEL_34;
    }
LABEL_29:
    *((_DWORD *)v3 + 25) |= 0x10u;
    v13 = (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)*((_QWORD *)v3 + 5);
    if (!v13)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
      v13 = this;
      *(_QWORD *)this = &off_1E25BB2B8;
      *((_DWORD *)this + 2) = 0;
      *((_BYTE *)this + 12) = 0;
      *((_QWORD *)this + 2) = 0;
      *((_QWORD *)v3 + 5) = this;
    }
    v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)*((_QWORD *)a2 + 5);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                   + 40);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(v13, v14);
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
        goto LABEL_11;
      goto LABEL_35;
    }
LABEL_34:
    v15 = *((_BYTE *)a2 + 36);
    *((_DWORD *)v3 + 25) |= 0x20u;
    *((_BYTE *)v3 + 36) = v15;
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
        goto LABEL_38;
      goto LABEL_36;
    }
LABEL_35:
    result = *((double *)a2 + 6);
    *((_DWORD *)v3 + 25) |= 0x40u;
    *((double *)v3 + 6) = result;
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x80) == 0)
      goto LABEL_38;
LABEL_36:
    v16 = *((_DWORD *)a2 + 18);
    if (v16 >= 3)
      __assert_rtn("set_signal_quality", "CoreNavigationCLPPrivateDataShared.pb.h", 17217, "::CoreNavigation::CLP::LogEntry::PrivateData::Location_SignalQualityType_IsValid(value)");
    *((_DWORD *)v3 + 25) |= 0x80u;
    *((_DWORD *)v3 + 18) = v16;
    v5 = *((_DWORD *)a2 + 25);
  }
LABEL_38:
  if ((v5 & 0xFF00) == 0)
    return result;
  if ((v5 & 0x100) != 0)
  {
    *((_DWORD *)v3 + 25) |= 0x100u;
    v17 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *)*((_QWORD *)v3 + 7);
    if (!v17)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
      v17 = this;
      *(_QWORD *)this = &off_1E25BA430;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)this + 5) = 0;
      *((_QWORD *)v3 + 7) = this;
    }
    v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *)*((_QWORD *)a2 + 7);
    if (!v18)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                               + 56);
    }
    result = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(v17, v18);
    v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x200) == 0)
    {
LABEL_41:
      if ((v5 & 0x400) == 0)
        goto LABEL_42;
      goto LABEL_55;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_41;
  }
  *((_DWORD *)v3 + 25) |= 0x200u;
  v19 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)*((_QWORD *)v3 + 8);
  if (!v19)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
    v19 = this;
    *(_QWORD *)this = &off_1E25BABB0;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = 0;
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 8) = this;
  }
  v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)*((_QWORD *)a2 + 8);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                               + 64);
  }
  result = CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(v19, v20);
  v5 = *((_DWORD *)a2 + 25);
  if ((v5 & 0x400) == 0)
  {
LABEL_42:
    if ((v5 & 0x800) == 0)
      goto LABEL_43;
    goto LABEL_60;
  }
LABEL_55:
  *((_DWORD *)v3 + 25) |= 0x400u;
  v21 = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)*((_QWORD *)v3 + 10);
  if (!v21)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
    v21 = this;
    *(_QWORD *)this = &off_1E25BBA38;
    *((_QWORD *)this + 1) = 0;
    *((_QWORD *)this + 2) = MEMORY[0x1E0DE8338];
    *((_QWORD *)this + 3) = 0;
    *((_QWORD *)v3 + 10) = this;
  }
  v22 = (const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)*((_QWORD *)a2 + 10);
  if (!v22)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    v22 = *(const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                  + 80);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(v21, v22);
  v5 = *((_DWORD *)a2 + 25);
  if ((v5 & 0x800) == 0)
  {
LABEL_43:
    if ((v5 & 0x1000) == 0)
      return result;
    goto LABEL_62;
  }
LABEL_60:
  v23 = *((_DWORD *)a2 + 19);
  if (v23 >= 3)
    __assert_rtn("set_motion_detected", "CoreNavigationCLPPrivateDataShared.pb.h", 17366, "::CoreNavigation::CLP::LogEntry::PrivateData::Location_MotionDetectedType_IsValid(value)");
  *((_DWORD *)v3 + 25) |= 0x800u;
  *((_DWORD *)v3 + 19) = v23;
  if ((*((_DWORD *)a2 + 25) & 0x1000) != 0)
  {
LABEL_62:
    *((_DWORD *)v3 + 25) |= 0x1000u;
    v24 = (CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *)*((_QWORD *)v3 + 11);
    if (!v24)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)operator new();
      v24 = this;
      *(_QWORD *)this = &off_1E25BC230;
      *(_OWORD *)((char *)this + 8) = 0u;
      *(_OWORD *)((char *)this + 24) = 0u;
      *((_QWORD *)v3 + 11) = this;
    }
    v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *)*((_QWORD *)a2 + 11);
    if (!v25)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                       + 88);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(v24, v25);
  }
  return result;
}

void sub_18D0F7650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Location::~Location(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  *(_QWORD *)this = &off_1E25BD928;
  CoreNavigation::CLP::LogEntry::PrivateData::Location::SharedDtor(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::Location::~Location(this);
  JUMPOUT(0x18D78B5D4);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Location::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Location *)CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ != this)
  {
    v2 = *((_QWORD *)this + 1);
    if (v2)
      (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
    v3 = *((_QWORD *)this + 2);
    if (v3)
      (*(void (**)(uint64_t))(*(_QWORD *)v3 + 8))(v3);
    v4 = *((_QWORD *)this + 3);
    if (v4)
      (*(void (**)(uint64_t))(*(_QWORD *)v4 + 8))(v4);
    v5 = *((_QWORD *)this + 5);
    if (v5)
      (*(void (**)(uint64_t))(*(_QWORD *)v5 + 8))(v5);
    v6 = *((_QWORD *)this + 7);
    if (v6)
      (*(void (**)(uint64_t))(*(_QWORD *)v6 + 8))(v6);
    v7 = *((_QWORD *)this + 8);
    if (v7)
      (*(void (**)(uint64_t))(*(_QWORD *)v7 + 8))(v7);
    v8 = *((_QWORD *)this + 10);
    if (v8)
      (*(void (**)(uint64_t))(*(_QWORD *)v8 + 8))(v8);
    v9 = *((_QWORD *)this + 11);
    if (v9)
      (*(void (**)(uint64_t))(*(_QWORD *)v9 + 8))(v9);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 96) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::New(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BD928;
  *(_QWORD *)(v1 + 8) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 29) = 0;
  result = 0.0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::Clear(uint64_t this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = this;
  v2 = *(_DWORD *)(this + 100);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) != 0)
    {
      v3 = *(_QWORD *)(this + 8);
      if (v3)
      {
        if (*(_BYTE *)(v3 + 36))
        {
          *(_QWORD *)(v3 + 8) = 0;
          *(_QWORD *)(v3 + 16) = 0;
          *(_QWORD *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        v2 = *(_DWORD *)(this + 100);
      }
    }
    *(_DWORD *)(this + 32) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(_QWORD *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::Clear(this);
        v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(_QWORD *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::Clear(this);
        v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      v4 = *(_QWORD *)(v1 + 40);
      if (v4)
      {
        if (*(_BYTE *)(v4 + 20))
        {
          *(_DWORD *)(v4 + 8) = 0;
          *(_BYTE *)(v4 + 12) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
        v2 = *(_DWORD *)(v1 + 100);
      }
    }
    *(_BYTE *)(v1 + 36) = 0;
    *(_QWORD *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      v5 = *(_QWORD *)(v1 + 56);
      if (v5)
      {
        if (*(_BYTE *)(v5 + 44))
        {
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 44) = 0;
        v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      v6 = *(_QWORD *)(v1 + 64);
      if (v6)
      {
        if (*(_BYTE *)(v6 + 28))
        {
          *(_QWORD *)(v6 + 8) = 0;
          *(_QWORD *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 28) = 0;
        v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(_QWORD *)(v1 + 80);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::Clear(this);
        v2 = *(_DWORD *)(v1 + 100);
      }
    }
    *(_DWORD *)(v1 + 76) = 0;
    if ((v2 & 0x1000) != 0)
    {
      v7 = *(_QWORD *)(v1 + 88);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 36))
        {
          *(_QWORD *)(v7 + 8) = 0;
          *(_QWORD *)(v7 + 16) = 0;
          *(_QWORD *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 100) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  int v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  char *v18;
  int v19;
  int v20;
  int v21;
  BOOL v22;
  int v23;
  _BYTE *v24;
  unsigned int v25;
  _BYTE *v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t v35;
  char *v36;
  int v37;
  int v38;
  int v39;
  int v40;
  _BYTE *v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  int v46;
  int v47;
  _BYTE *v48;
  unsigned int v49;
  _BYTE *v50;
  _BYTE *v51;
  unsigned int v52;
  _BYTE *v53;
  uint64_t v54;
  char *v55;
  int v56;
  int v57;
  int v58;
  int v59;
  _BYTE *v60;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *v61;
  char *v62;
  int v63;
  int v64;
  int v65;
  int v66;
  _BYTE *v67;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *v68;
  char *v69;
  int v70;
  int v71;
  int v72;
  int v73;
  _BYTE *v74;
  unsigned int v75;
  _BYTE *v76;
  uint64_t v77;
  char *v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83[2];

  v4 = MEMORY[0x1E0DE8338];
  while (1)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 < *((_QWORD *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
      goto LABEL_7;
    }
    TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!(_DWORD)TagFallback)
      return 1;
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_38;
        *((_DWORD *)this + 25) |= 1u;
        v8 = *((_QWORD *)this + 1);
        if (!v8)
        {
          v8 = operator new();
          *(_QWORD *)v8 = &off_1E25BDBF8;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *((_QWORD *)this + 1) = v8;
        }
        v83[0] = 0;
        v9 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v9 >= *((_QWORD *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v9;
          *((_QWORD *)a2 + 1) = v9 + 1;
        }
        v19 = *((_DWORD *)a2 + 14);
        v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)v8, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v21 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v21, 1);
        v23 = v21 - 1;
        if (v23 < 0 == v22)
          *((_DWORD *)a2 + 14) = v23;
        v24 = (_BYTE *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v24 >= v10 || *v24 != 16)
          continue;
        v11 = v24 + 1;
        *((_QWORD *)a2 + 1) = v11;
        goto LABEL_50;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_50:
        v83[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83);
          if (!(_DWORD)result)
            return result;
          v25 = v83[0];
          v26 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v25 = *v11;
          v26 = v11 + 1;
          *((_QWORD *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 8) = v25;
        v12 = *((_DWORD *)this + 25) | 2;
        *((_DWORD *)this + 25) = v12;
        if ((unint64_t)v26 >= v10 || *v26 != 26)
          continue;
        *((_QWORD *)a2 + 1) = v26 + 1;
LABEL_58:
        *((_DWORD *)this + 25) = v12 | 4;
        v28 = *((_QWORD *)this + 2);
        if (!v28)
        {
          v28 = operator new();
          *(_QWORD *)v28 = &off_1E25BA700;
          *(_OWORD *)(v28 + 8) = 0u;
          *(_OWORD *)(v28 + 24) = 0u;
          *(_OWORD *)(v28 + 40) = 0u;
          *(_OWORD *)(v28 + 56) = 0u;
          *(_OWORD *)(v28 + 72) = 0u;
          *(_OWORD *)(v28 + 88) = 0u;
          *(_OWORD *)(v28 + 104) = 0u;
          *(_OWORD *)(v28 + 120) = xmmword_18D30F410;
          *(_QWORD *)(v28 + 136) = 0;
          *(_BYTE *)(v28 + 144) = 0;
          *(_DWORD *)(v28 + 148) = 0;
          *(_DWORD *)(v28 + 152) = 0;
          *((_QWORD *)this + 2) = v28;
        }
        v83[0] = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)v28, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v22)
          *((_DWORD *)a2 + 14) = v33;
        v34 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v34 >= *((_QWORD *)a2 + 2) || *v34 != 34)
          continue;
        *((_QWORD *)a2 + 1) = v34 + 1;
LABEL_72:
        *((_DWORD *)this + 25) |= 8u;
        v35 = *((_QWORD *)this + 3);
        if (!v35)
        {
          v35 = operator new();
          *(_QWORD *)v35 = &off_1E25BC410;
          *(_QWORD *)(v35 + 288) = 0;
          *(_QWORD *)(v35 + 296) = 0;
          *(_DWORD *)(v35 + 304) = 0;
          *(_DWORD *)(v35 + 356) = 0;
          *(_WORD *)(v35 + 112) = 0;
          *(_OWORD *)(v35 + 8) = 0u;
          *(_OWORD *)(v35 + 24) = 0u;
          *(_OWORD *)(v35 + 40) = 0u;
          *(_OWORD *)(v35 + 56) = 0u;
          *(_OWORD *)(v35 + 72) = 0u;
          *(_QWORD *)(v35 + 88) = 0;
          *(_QWORD *)(v35 + 96) = 0xFFFFFFFFLL;
          *(_QWORD *)(v35 + 104) = 0;
          *(_QWORD *)(v35 + 360) = 0;
          *(_OWORD *)(v35 + 130) = 0u;
          *(_OWORD *)(v35 + 146) = 0u;
          *(_OWORD *)(v35 + 162) = 0u;
          *(_OWORD *)(v35 + 178) = 0u;
          *(_OWORD *)(v35 + 194) = 0u;
          *(_OWORD *)(v35 + 210) = 0u;
          *(_OWORD *)(v35 + 226) = 0u;
          *(_OWORD *)(v35 + 242) = 0u;
          *(_OWORD *)(v35 + 114) = 0u;
          *(_OWORD *)(v35 + 272) = 0u;
          *(_OWORD *)(v35 + 258) = 0u;
          *(_OWORD *)(v35 + 340) = 0u;
          *(_OWORD *)(v35 + 312) = 0u;
          *(_OWORD *)(v35 + 328) = 0u;
          *((_QWORD *)this + 3) = v35;
        }
        v83[0] = 0;
        v36 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v36 >= *((_QWORD *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v36;
          *((_QWORD *)a2 + 1) = v36 + 1;
        }
        v37 = *((_DWORD *)a2 + 14);
        v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)v35, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v39 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v39, 1);
        v40 = v39 - 1;
        if (v40 < 0 == v22)
          *((_DWORD *)a2 + 14) = v40;
        v41 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v41 >= *((_QWORD *)a2 + 2) || *v41 != 42)
          continue;
        *((_QWORD *)a2 + 1) = v41 + 1;
LABEL_86:
        *((_DWORD *)this + 25) |= 0x10u;
        v42 = *((_QWORD *)this + 5);
        if (!v42)
        {
          v42 = operator new();
          *(_QWORD *)v42 = &off_1E25BB2B8;
          *(_DWORD *)(v42 + 8) = 0;
          *(_BYTE *)(v42 + 12) = 0;
          *(_QWORD *)(v42 + 16) = 0;
          *((_QWORD *)this + 5) = v42;
        }
        v83[0] = 0;
        v43 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v43 >= *((_QWORD *)a2 + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v43;
          *((_QWORD *)a2 + 1) = v43 + 1;
        }
        v44 = *((_DWORD *)a2 + 14);
        v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)v42, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v46 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v46, 1);
        v47 = v46 - 1;
        if (v47 < 0 == v22)
          *((_DWORD *)a2 + 14) = v47;
        v48 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v48 >= v13 || *v48 != 48)
          continue;
        v14 = v48 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_100:
        v83[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83);
          if (!(_DWORD)result)
            return result;
          v49 = v83[0];
          v50 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v49 = *v14;
          v50 = v14 + 1;
          *((_QWORD *)a2 + 1) = v50;
        }
        *((_BYTE *)this + 36) = v49 != 0;
        *((_DWORD *)this + 25) |= 0x20u;
        if ((unint64_t)v50 >= v13 || *v50 != 57)
          continue;
        *((_QWORD *)a2 + 1) = v50 + 1;
LABEL_108:
        *(_QWORD *)v83 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v83) & 1) == 0)return 0;
        *((_QWORD *)this + 6) = *(_QWORD *)v83;
        *((_DWORD *)this + 25) |= 0x40u;
        v51 = (_BYTE *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v51 >= v15 || *v51 != 64)
          continue;
        v16 = v51 + 1;
        *((_QWORD *)a2 + 1) = v16;
LABEL_112:
        v83[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83);
          if (!(_DWORD)result)
            return result;
          v52 = v83[0];
        }
        else
        {
          v52 = *v16;
          *((_QWORD *)a2 + 1) = v16 + 1;
        }
        if (v52 <= 2)
        {
          *((_DWORD *)this + 25) |= 0x80u;
          *((_DWORD *)this + 18) = v52;
        }
        v53 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v53 >= *((_QWORD *)a2 + 2) || *v53 != 74)
          continue;
        *((_QWORD *)a2 + 1) = v53 + 1;
LABEL_122:
        *((_DWORD *)this + 25) |= 0x100u;
        v54 = *((_QWORD *)this + 7);
        if (!v54)
        {
          v54 = operator new();
          *(_QWORD *)v54 = &off_1E25BA430;
          *(_OWORD *)(v54 + 8) = 0u;
          *(_OWORD *)(v54 + 24) = 0u;
          *(_QWORD *)(v54 + 40) = 0;
          *((_QWORD *)this + 7) = v54;
        }
        v83[0] = 0;
        v55 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v55 >= *((_QWORD *)a2 + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v55;
          *((_QWORD *)a2 + 1) = v55 + 1;
        }
        v56 = *((_DWORD *)a2 + 14);
        v57 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v56 + 1;
        if (v56 >= v57)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *)v54, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v58 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v58, 1);
        v59 = v58 - 1;
        if (v59 < 0 == v22)
          *((_DWORD *)a2 + 14) = v59;
        v60 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v60 >= *((_QWORD *)a2 + 2) || *v60 != 82)
          continue;
        *((_QWORD *)a2 + 1) = v60 + 1;
LABEL_136:
        *((_DWORD *)this + 25) |= 0x200u;
        v61 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)*((_QWORD *)this + 8);
        if (!v61)
        {
          v61 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)operator new();
          *(_QWORD *)v61 = &off_1E25BABB0;
          *((_QWORD *)v61 + 1) = 0;
          *((_QWORD *)v61 + 2) = 0;
          *((_QWORD *)v61 + 3) = 0;
          *((_QWORD *)this + 8) = v61;
        }
        v83[0] = 0;
        v62 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v62 >= *((_QWORD *)a2 + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v62;
          *((_QWORD *)a2 + 1) = v62 + 1;
        }
        v63 = *((_DWORD *)a2 + 14);
        v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergePartialFromCodedStream(v61, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v65 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v65, 1);
        v66 = v65 - 1;
        if (v66 < 0 == v22)
          *((_DWORD *)a2 + 14) = v66;
        v67 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v67 >= *((_QWORD *)a2 + 2) || *v67 != 90)
          continue;
        *((_QWORD *)a2 + 1) = v67 + 1;
LABEL_150:
        *((_DWORD *)this + 25) |= 0x400u;
        v68 = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)*((_QWORD *)this + 10);
        if (!v68)
        {
          v68 = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)operator new();
          *(_QWORD *)v68 = &off_1E25BBA38;
          *((_QWORD *)v68 + 1) = 0;
          *((_QWORD *)v68 + 2) = v4;
          *((_QWORD *)v68 + 3) = 0;
          *((_QWORD *)this + 10) = v68;
        }
        v83[0] = 0;
        v69 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v69 >= *((_QWORD *)a2 + 2) || *v69 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v69;
          *((_QWORD *)a2 + 1) = v69 + 1;
        }
        v70 = *((_DWORD *)a2 + 14);
        v71 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v70 + 1;
        if (v70 >= v71)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergePartialFromCodedStream(v68, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v72 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v72, 1);
        v73 = v72 - 1;
        if (v73 < 0 == v22)
          *((_DWORD *)a2 + 14) = v73;
        v74 = (_BYTE *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v74 >= v17 || *v74 != 96)
          continue;
        v18 = v74 + 1;
        *((_QWORD *)a2 + 1) = v18;
LABEL_164:
        v83[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83);
          if (!(_DWORD)result)
            return result;
          v75 = v83[0];
        }
        else
        {
          v75 = *v18;
          *((_QWORD *)a2 + 1) = v18 + 1;
        }
        if (v75 <= 2)
        {
          *((_DWORD *)this + 25) |= 0x800u;
          *((_DWORD *)this + 19) = v75;
        }
        v76 = (_BYTE *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v76 >= *((_QWORD *)a2 + 2) || *v76 != 106)
          continue;
        *((_QWORD *)a2 + 1) = v76 + 1;
LABEL_174:
        *((_DWORD *)this + 25) |= 0x1000u;
        v77 = *((_QWORD *)this + 11);
        if (!v77)
        {
          v77 = operator new();
          *(_QWORD *)v77 = &off_1E25BC230;
          *(_OWORD *)(v77 + 8) = 0u;
          *(_OWORD *)(v77 + 24) = 0u;
          *((_QWORD *)this + 11) = v77;
        }
        v83[0] = 0;
        v78 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v78 >= *((_QWORD *)a2 + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v83))return 0;
        }
        else
        {
          v83[0] = *v78;
          *((_QWORD *)a2 + 1) = v78 + 1;
        }
        v79 = *((_DWORD *)a2 + 14);
        v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *)v77, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v81 = *((_DWORD *)a2 + 14);
        v22 = __OFSUB__(v81, 1);
        v82 = v81 - 1;
        if (v82 < 0 == v22)
          *((_DWORD *)a2 + 14) = v82;
        if (*((_QWORD *)a2 + 1) == *((_QWORD *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          result = 1;
          *((_BYTE *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_38;
        v12 = *((_DWORD *)this + 25);
        goto LABEL_58;
      case 4u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_72;
        goto LABEL_38;
      case 5u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_86;
        goto LABEL_38;
      case 6u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_100;
      case 7u:
        v7 = TagFallback & 7;
        if (v7 == 1)
          goto LABEL_108;
        goto LABEL_38;
      case 8u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v16 = (char *)*((_QWORD *)a2 + 1);
        v15 = *((_QWORD *)a2 + 2);
        goto LABEL_112;
      case 9u:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_122;
        goto LABEL_38;
      case 0xAu:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_136;
        goto LABEL_38;
      case 0xBu:
        v7 = TagFallback & 7;
        if (v7 == 2)
          goto LABEL_150;
        goto LABEL_38;
      case 0xCu:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_38;
        v18 = (char *)*((_QWORD *)a2 + 1);
        v17 = *((_QWORD *)a2 + 2);
        goto LABEL_164;
      case 0xDu:
        v7 = TagFallback & 7;
        if (v7 != 2)
          goto LABEL_38;
        goto LABEL_174;
      default:
        v7 = TagFallback & 7;
LABEL_38:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
        continue;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = this;
  v6 = *(_DWORD *)(this + 100);
  if ((v6 & 1) != 0)
  {
    v7 = *(_QWORD *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      v7 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    v6 = *(_DWORD *)(v5 + 100);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_22;
  }
LABEL_19:
  v8 = *(_QWORD *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v8 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      goto LABEL_6;
    goto LABEL_25;
  }
LABEL_22:
  v9 = *(_QWORD *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0)
      goto LABEL_7;
    goto LABEL_28;
  }
LABEL_25:
  v10 = *(_QWORD *)(v5 + 40);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v10 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0)
      goto LABEL_8;
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0)
      goto LABEL_9;
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0)
      goto LABEL_10;
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0)
      goto LABEL_11;
    goto LABEL_34;
  }
LABEL_31:
  v11 = *(_QWORD *)(v5 + 56);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v11 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v11, a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0)
      goto LABEL_12;
    goto LABEL_37;
  }
LABEL_34:
  v12 = *(_QWORD *)(v5 + 64);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0)
      goto LABEL_13;
LABEL_40:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 100) & 0x1000) == 0)
      return this;
    goto LABEL_41;
  }
LABEL_37:
  v13 = *(_QWORD *)(v5 + 80);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v13 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v13, a2, a4);
  v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x800) != 0)
    goto LABEL_40;
LABEL_13:
  if ((v6 & 0x1000) == 0)
    return this;
LABEL_41:
  v14 = *(_QWORD *)(v5 + 88);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v14 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 88);
  }
  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v14, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::ByteSize(uint64_t this)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  uint64_t v12;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v13;
  int v14;
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *v15;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v16;
  int v17;
  unsigned int v18;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v19;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *v25;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int v31;

  v1 = this;
  v2 = *(_DWORD *)(this + 100);
  if (!(_BYTE)v2)
  {
    v4 = 0;
    goto LABEL_55;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0)
      goto LABEL_21;
    goto LABEL_15;
  }
  v5 = *(_QWORD *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v5 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 8);
  }
  v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(_BYTE *)(v5 + 36))
  {
    v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0)
      v7 += 9;
    if ((v6 & 4) != 0)
      v6 = v7 + 9;
    else
      v6 = v7;
  }
  *(_DWORD *)(v5 + 32) = v6;
  v3 = v6 + 2;
  v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v8 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      v2 = *(_DWORD *)(v1 + 100);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0)
      goto LABEL_23;
LABEL_31:
    v12 = *(_QWORD *)(v1 + 24);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v12 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 24);
    }
    v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::ByteSize(v12);
    v14 = (int)v13;
    if (v13 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    else
      this = 1;
    v3 += v14 + this + 1;
    v2 = *(_DWORD *)(v1 + 100);
    if ((v2 & 0x10) == 0)
      goto LABEL_43;
    goto LABEL_37;
  }
  v9 = *(_QWORD *)(v1 + 16);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    v9 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 16);
  }
  v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::ByteSize(v9);
  v11 = (int)v10;
  if (v10 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  else
    this = 1;
  v3 += v11 + this + 1;
  v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 8) != 0)
    goto LABEL_31;
LABEL_23:
  if ((v2 & 0x10) != 0)
  {
LABEL_37:
    v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus **)(v1 + 40);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                             + 40);
    }
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::ByteSize(v15);
    v17 = (int)v16;
    if (v16 >= 0x80)
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    else
      this = 1;
    v3 += v17 + this + 1;
    v2 = *(_DWORD *)(v1 + 100);
  }
LABEL_43:
  v18 = v3 + 2;
  if ((v2 & 0x20) == 0)
    v18 = v3;
  if ((v2 & 0x40) != 0)
    v4 = v18 + 9;
  else
    v4 = v18;
  if ((v2 & 0x80) != 0)
  {
    v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 72);
    if ((v19 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v19 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      v2 = *(_DWORD *)(v1 + 100);
    }
    else
    {
      this = 1;
    }
    v4 = (v4 + this + 1);
  }
LABEL_55:
  if ((v2 & 0xFF00) == 0)
    goto LABEL_94;
  if ((v2 & 0x100) != 0)
  {
    v20 = *(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed **)(v1 + 56);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      v20 = *(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                         + 56);
    }
    this = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::ByteSize(v20);
    v4 = (v4 + this + 2);
    v2 = *(_DWORD *)(v1 + 100);
    if ((v2 & 0x200) == 0)
    {
LABEL_58:
      if ((v2 & 0x400) == 0)
        goto LABEL_59;
      goto LABEL_73;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_58;
  }
  v21 = *(_QWORD *)(v1 + 64);
  if (!v21)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v21 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 64);
  }
  v22 = *(unsigned __int8 *)(v21 + 28);
  v23 = (v22 << 31 >> 31) & 9;
  if ((v22 & 2) != 0)
    v23 += 9;
  if (*(_BYTE *)(v21 + 28))
    v24 = v23;
  else
    v24 = 0;
  *(_DWORD *)(v21 + 24) = v24;
  v4 = (v4 + v24 + 2);
  v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_59:
    if ((v2 & 0x800) == 0)
      goto LABEL_60;
LABEL_79:
    this = *(unsigned int *)(v1 + 76);
    if ((this & 0x80000000) != 0)
    {
      v28 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      v28 = this + 1;
      v2 = *(_DWORD *)(v1 + 100);
    }
    else
    {
      v28 = 2;
    }
    v4 = (v28 + v4);
    if ((v2 & 0x1000) == 0)
      goto LABEL_94;
    goto LABEL_85;
  }
LABEL_73:
  v25 = *(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable **)(v1 + 80);
  if (!v25)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    v25 = *(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                            + 80);
  }
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::ByteSize(v25);
  v27 = (int)v26;
  if (v26 >= 0x80)
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
  else
    this = 1;
  v4 = (v4 + v27 + this + 1);
  v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 0x800) != 0)
    goto LABEL_79;
LABEL_60:
  if ((v2 & 0x1000) == 0)
    goto LABEL_94;
LABEL_85:
  v29 = *(_QWORD *)(v1 + 88);
  if (!v29)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    v29 = *(_QWORD *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 88);
  }
  v30 = *(unsigned __int8 *)(v29 + 36);
  if (*(_BYTE *)(v29 + 36))
  {
    v31 = (v30 << 31 >> 31) & 9;
    if ((v30 & 2) != 0)
      v31 += 9;
    if ((v30 & 4) != 0)
      v30 = v31 + 9;
    else
      v30 = v31;
  }
  *(_DWORD *)(v29 + 32) = v30;
  v4 = (v4 + v30 + 2);
LABEL_94:
  *(_DWORD *)(v1 + 96) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  double result;

  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Location *))(*(_QWORD *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a2 != this)
  {
    v2 = *((_QWORD *)this + 1);
    *((_QWORD *)this + 1) = *((_QWORD *)a2 + 1);
    *((_QWORD *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    v3 = *((_QWORD *)this + 2);
    *((_QWORD *)this + 2) = *((_QWORD *)a2 + 2);
    *((_QWORD *)a2 + 2) = v3;
    v4 = *((_QWORD *)this + 3);
    *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
    *((_QWORD *)a2 + 3) = v4;
    v5 = *((_QWORD *)this + 5);
    *((_QWORD *)this + 5) = *((_QWORD *)a2 + 5);
    *((_QWORD *)a2 + 5) = v5;
    LOBYTE(v5) = *((_BYTE *)this + 36);
    *((_BYTE *)this + 36) = *((_BYTE *)a2 + 36);
    *((_BYTE *)a2 + 36) = v5;
    result = *((double *)this + 6);
    *((_QWORD *)this + 6) = *((_QWORD *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v5) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v5;
    v7 = *((_QWORD *)this + 7);
    *((_QWORD *)this + 7) = *((_QWORD *)a2 + 7);
    *((_QWORD *)a2 + 7) = v7;
    v8 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = *((_QWORD *)a2 + 8);
    *((_QWORD *)a2 + 8) = v8;
    v9 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = *((_QWORD *)a2 + 10);
    *((_QWORD *)a2 + 10) = v9;
    LODWORD(v9) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v9;
    v10 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = *((_QWORD *)a2 + 11);
    *((_QWORD *)a2 + 11) = v10;
    LODWORD(v10) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v10;
    LODWORD(v10) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v10;
  }
  return result;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::Location::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Location");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::SharedCtor(uint64_t this)
{
  *(_QWORD *)(this + 56) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::BatchedLocations(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  *(_QWORD *)this = &off_1E25BB150;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_QWORD *)this + 4) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_QWORD *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(this, a2);
  return this;
}

void sub_18D0F8D88(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;

  v4 = v3;
  sub_18D09ECA4(v4);
  sub_18D09ECA4(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  uint64_t v4;
  const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation **)(*((_QWORD *)a2 + 1) + 8 * v4);
      v6 = *((_DWORD *)this + 5);
      v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 8));
          v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        v9 = operator new();
        *(_QWORD *)v9 = &off_1E25BA700;
        *(_OWORD *)(v9 + 8) = 0u;
        *(_OWORD *)(v9 + 24) = 0u;
        *(_OWORD *)(v9 + 40) = 0u;
        *(_OWORD *)(v9 + 56) = 0u;
        *(_OWORD *)(v9 + 72) = 0u;
        *(_OWORD *)(v9 + 88) = 0u;
        *(_OWORD *)(v9 + 104) = 0u;
        *(_OWORD *)(v9 + 120) = xmmword_18D30F410;
        *(_QWORD *)(v9 + 136) = 0;
        *(_BYTE *)(v9 + 144) = 0;
        *(_DWORD *)(v9 + 148) = 0;
        *(_DWORD *)(v9 + 152) = 0;
        v10 = *((_QWORD *)this + 1);
        v11 = *((int *)this + 4);
        *((_DWORD *)this + 4) = v11 + 1;
        *(_QWORD *)(v10 + 8 * v11) = v9;
      }
      else
      {
        v8 = *((_QWORD *)this + 1);
        *((_DWORD *)this + 4) = v7 + 1;
        v9 = *(_QWORD *)(v8 + 8 * v7);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)v9, v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    v12 = 0;
    do
    {
      v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate **)(*((_QWORD *)a2 + 4) + 8 * v12);
      v14 = *((_DWORD *)this + 11);
      v15 = *((int *)this + 10);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 32));
          v14 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v14 + 1;
        v17 = operator new();
        *(_QWORD *)v17 = &off_1E25BC410;
        *(_QWORD *)(v17 + 288) = 0;
        *(_QWORD *)(v17 + 296) = 0;
        *(_DWORD *)(v17 + 304) = 0;
        *(_DWORD *)(v17 + 356) = 0;
        *(_WORD *)(v17 + 112) = 0;
        *(_OWORD *)(v17 + 8) = 0u;
        *(_OWORD *)(v17 + 24) = 0u;
        *(_OWORD *)(v17 + 40) = 0u;
        *(_OWORD *)(v17 + 56) = 0u;
        *(_OWORD *)(v17 + 72) = 0u;
        *(_QWORD *)(v17 + 88) = 0;
        *(_QWORD *)(v17 + 96) = 0xFFFFFFFFLL;
        *(_QWORD *)(v17 + 104) = 0;
        *(_QWORD *)(v17 + 360) = 0;
        *(_OWORD *)(v17 + 130) = 0u;
        *(_OWORD *)(v17 + 146) = 0u;
        *(_OWORD *)(v17 + 162) = 0u;
        *(_OWORD *)(v17 + 178) = 0u;
        *(_OWORD *)(v17 + 194) = 0u;
        *(_OWORD *)(v17 + 210) = 0u;
        *(_OWORD *)(v17 + 226) = 0u;
        *(_OWORD *)(v17 + 242) = 0u;
        *(_OWORD *)(v17 + 272) = 0u;
        *(_OWORD *)(v17 + 114) = 0u;
        *(_OWORD *)(v17 + 258) = 0u;
        *(_OWORD *)(v17 + 340) = 0u;
        *(_OWORD *)(v17 + 312) = 0u;
        *(_OWORD *)(v17 + 328) = 0u;
        v18 = *((_QWORD *)this + 4);
        v19 = *((int *)this + 10);
        *((_DWORD *)this + 10) = v19 + 1;
        *(_QWORD *)(v18 + 8 * v19) = v17;
      }
      else
      {
        v16 = *((_QWORD *)this + 4);
        *((_DWORD *)this + 10) = v15 + 1;
        v17 = *(_QWORD *)(v16 + 8 * v15);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)v17, v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 10));
  }
}

void sub_18D0F9080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::~BatchedLocations(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  *(_QWORD *)this = &off_1E25BB150;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18D09ECA4((uint64_t *)this + 4);
  sub_18D09ECA4((uint64_t *)this + 1);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::~BatchedLocations(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::New(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  uint64_t result;

  result = operator new();
  *(_QWORD *)(result + 8) = 0;
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)result = &off_1E25BB150;
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 32) = 0;
  *(_QWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_QWORD *)(result + 56) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::Clear(uint64_t this)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v2 = 0;
    do
    {
      v3 = *(_QWORD *)(*(_QWORD *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    v4 = 0;
    do
    {
      v5 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v4;
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *v5;
  char *v6;
  uint64_t TagFallback;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  int v18;
  BOOL v19;
  int v20;
  _BYTE *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  int v33;
  _BYTE *v34;
  uint64_t result;
  unsigned int v36;
  unsigned int v37;

  v4 = (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 8);
  v5 = (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 32);
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        v6 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v6 >= *((_QWORD *)a2 + 2) || *v6 < 0)
        {
          TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        else
        {
          TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((_QWORD *)a2 + 1) = v6 + 1;
          if (!(_DWORD)TagFallback)
            return 1;
        }
        if (TagFallback >> 3 != 1)
          break;
        v8 = TagFallback & 7;
        if (v8 != 2)
          goto LABEL_30;
        while (1)
        {
          v9 = *((_DWORD *)this + 5);
          v10 = *((int *)this + 4);
          if ((int)v10 >= v9)
          {
            if (v9 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              v9 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v9 + 1;
            v12 = operator new();
            *(_QWORD *)v12 = &off_1E25BA700;
            *(_OWORD *)(v12 + 8) = 0u;
            *(_OWORD *)(v12 + 24) = 0u;
            *(_OWORD *)(v12 + 40) = 0u;
            *(_OWORD *)(v12 + 56) = 0u;
            *(_OWORD *)(v12 + 72) = 0u;
            *(_OWORD *)(v12 + 88) = 0u;
            *(_OWORD *)(v12 + 104) = 0u;
            *(_OWORD *)(v12 + 120) = xmmword_18D30F410;
            *(_QWORD *)(v12 + 136) = 0;
            *(_BYTE *)(v12 + 144) = 0;
            *(_DWORD *)(v12 + 148) = 0;
            *(_DWORD *)(v12 + 152) = 0;
            v13 = *((_QWORD *)this + 1);
            v14 = *((int *)this + 4);
            *((_DWORD *)this + 4) = v14 + 1;
            *(_QWORD *)(v13 + 8 * v14) = v12;
          }
          else
          {
            v11 = *((_QWORD *)this + 1);
            *((_DWORD *)this + 4) = v10 + 1;
            v12 = *(_QWORD *)(v11 + 8 * v10);
          }
          v36 = 0;
          v15 = (char *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v15 >= *((_QWORD *)a2 + 2) || *v15 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0;
          }
          else
          {
            v36 = *v15;
            *((_QWORD *)a2 + 1) = v15 + 1;
          }
          v16 = *((_DWORD *)a2 + 14);
          v17 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v16 + 1;
          if (v16 >= v17)
            return 0;
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)v12, a2)|| !*((_BYTE *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          v18 = *((_DWORD *)a2 + 14);
          v19 = __OFSUB__(v18, 1);
          v20 = v18 - 1;
          if (v20 < 0 == v19)
            *((_DWORD *)a2 + 14) = v20;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          if ((unint64_t)v21 >= *((_QWORD *)a2 + 2))
            break;
          v22 = *v21;
          if (v22 != 10)
          {
            if (v22 != 18)
              goto LABEL_2;
            goto LABEL_34;
          }
          *((_QWORD *)a2 + 1) = v21 + 1;
        }
      }
      if (TagFallback >> 3 != 2)
        break;
      v8 = TagFallback & 7;
      if (v8 != 2)
        goto LABEL_30;
      while (1)
      {
        v23 = *((_DWORD *)this + 11);
        v24 = *((int *)this + 10);
        if ((int)v24 >= v23)
        {
          if (v23 == *((_DWORD *)this + 12))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            v23 = *((_DWORD *)this + 11);
          }
          *((_DWORD *)this + 11) = v23 + 1;
          v26 = operator new();
          *(_QWORD *)v26 = &off_1E25BC410;
          *(_QWORD *)(v26 + 288) = 0;
          *(_QWORD *)(v26 + 296) = 0;
          *(_DWORD *)(v26 + 304) = 0;
          *(_DWORD *)(v26 + 356) = 0;
          *(_WORD *)(v26 + 112) = 0;
          *(_OWORD *)(v26 + 8) = 0u;
          *(_OWORD *)(v26 + 24) = 0u;
          *(_OWORD *)(v26 + 40) = 0u;
          *(_OWORD *)(v26 + 56) = 0u;
          *(_OWORD *)(v26 + 72) = 0u;
          *(_QWORD *)(v26 + 88) = 0;
          *(_QWORD *)(v26 + 96) = 0xFFFFFFFFLL;
          *(_QWORD *)(v26 + 104) = 0;
          *(_QWORD *)(v26 + 360) = 0;
          *(_OWORD *)(v26 + 130) = 0u;
          *(_OWORD *)(v26 + 146) = 0u;
          *(_OWORD *)(v26 + 162) = 0u;
          *(_OWORD *)(v26 + 178) = 0u;
          *(_OWORD *)(v26 + 194) = 0u;
          *(_OWORD *)(v26 + 210) = 0u;
          *(_OWORD *)(v26 + 226) = 0u;
          *(_OWORD *)(v26 + 242) = 0u;
          *(_OWORD *)(v26 + 272) = 0u;
          *(_OWORD *)(v26 + 114) = 0u;
          *(_OWORD *)(v26 + 258) = 0u;
          *(_OWORD *)(v26 + 340) = 0u;
          *(_OWORD *)(v26 + 312) = 0u;
          *(_OWORD *)(v26 + 328) = 0u;
          v27 = *((_QWORD *)this + 4);
          v28 = *((int *)this + 10);
          *((_DWORD *)this + 10) = v28 + 1;
          *(_QWORD *)(v27 + 8 * v28) = v26;
        }
        else
        {
          v25 = *((_QWORD *)this + 4);
          *((_DWORD *)this + 10) = v24 + 1;
          v26 = *(_QWORD *)(v25 + 8 * v24);
        }
        v37 = 0;
        v29 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v29 >= *((_QWORD *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0;
        }
        else
        {
          v37 = *v29;
          *((_QWORD *)a2 + 1) = v29 + 1;
        }
        v30 = *((_DWORD *)a2 + 14);
        v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31)
          return 0;
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergePartialFromCodedStream((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)v26, a2)|| !*((_BYTE *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        v32 = *((_DWORD *)a2 + 14);
        v19 = __OFSUB__(v32, 1);
        v33 = v32 - 1;
        if (v33 < 0 == v19)
          *((_DWORD *)a2 + 14) = v33;
        v21 = (_BYTE *)*((_QWORD *)a2 + 1);
        v34 = (_BYTE *)*((_QWORD *)a2 + 2);
        if (v21 >= v34 || *v21 != 18)
          break;
LABEL_34:
        *((_QWORD *)a2 + 1) = v21 + 1;
      }
      if (v21 == v34 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      }
    }
    v8 = TagFallback & 7;
LABEL_30:
    if (v8 == 4)
      return 1;
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_QWORD *)(*(_QWORD *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  int v2;
  uint64_t v3;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v10;
  int v11;
  int v12;

  v2 = *((_DWORD *)this + 4);
  if (v2 >= 1)
  {
    v3 = 0;
    do
    {
      v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::ByteSize(*(_QWORD *)(*((_QWORD *)this + 1) + 8 * v3));
      v5 = (int)v4;
      if (v4 >= 0x80)
        v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      else
        v6 = 1;
      v2 += v5 + v6;
      ++v3;
    }
    while (v3 < *((int *)this + 4));
  }
  v7 = *((_DWORD *)this + 10);
  v8 = (v7 + v2);
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::ByteSize(*(_QWORD *)(*((_QWORD *)this + 4) + 8 * v9));
      v11 = (int)v10;
      if (v10 >= 0x80)
        v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      else
        v12 = 1;
      v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 10));
  }
  *((_DWORD *)this + 14) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::Swap(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *v3;
  int v4;
  int v5;

  if (a2 != this)
  {
    v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    v4 = *((_DWORD *)v3 + 15);
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v4;
    v5 = *((_DWORD *)v3 + 14);
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BatchedLocations");
}

double CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  double result;

  *((_WORD *)this + 8) = 0;
  *(_QWORD *)&result = 0x100000000;
  *((_QWORD *)this + 1) = 0x100000000;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::RhythmicGnssStatusUpdate(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  *(_QWORD *)this = &off_1E25BCAA0;
  *((_WORD *)this + 8) = 0;
  *((_QWORD *)this + 1) = 0x100000000;
  *((_QWORD *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(this, a2);
  return this;
}

void sub_18D0F9964(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  int v4;
  unsigned int v5;
  char v6;
  unsigned int v7;
  int v8;
  char v9;
  _BYTE v10[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((_BYTE *)a2 + 28);
  if ((_BYTE)v4)
  {
    if ((*((_BYTE *)a2 + 28) & 1) != 0)
    {
      v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 3)
        __assert_rtn("set_gnss_mode_of_operation", "CoreNavigationCLPPrivateDataShared.pb.h", 17489, "::CoreNavigation::CLP::LogEntry::PrivateData::GnssModeOfOperation_IsValid(value)");
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v5;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      v6 = *((_BYTE *)a2 + 16);
      *((_DWORD *)this + 7) |= 2u;
      *((_BYTE *)this + 16) = v6;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 4) != 0)
    {
      v7 = *((_DWORD *)a2 + 3);
      if (v7 >= 5)
        __assert_rtn("set_rhythmic_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 17534, "::CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssWakeMode_IsValid(value)");
      *((_DWORD *)this + 7) |= 4u;
      *((_DWORD *)this + 3) = v7;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 8) != 0)
    {
      v8 = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 7) |= 8u;
      *((_DWORD *)this + 5) = v8;
      v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 0x10) != 0)
    {
      v9 = *((_BYTE *)a2 + 17);
      *((_DWORD *)this + 7) |= 0x10u;
      *((_BYTE *)this + 17) = v9;
    }
  }
}

void sub_18D0F9AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::~RhythmicGnssStatusUpdate(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  *(_QWORD *)this = &off_1E25BCAA0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::~RhythmicGnssStatusUpdate(this);
  JUMPOUT(0x18D78B5D4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  return CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::New(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  uint64_t v1;
  double result;

  v1 = operator new();
  *(_QWORD *)v1 = &off_1E25BCAA0;
  *(_WORD *)(v1 + 16) = 0;
  *(_QWORD *)&result = 0x100000000;
  *(_QWORD *)(v1 + 8) = 0x100000000;
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 20) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::Clear(uint64_t this)
{
  if (*(_BYTE *)(this + 28))
  {
    *(_WORD *)(this + 16) = 0;
    *(_QWORD *)(this + 8) = 0x100000000;
    *(_DWORD *)(this + 20) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  unsigned int *v4;
  char *v5;
  uint64_t TagFallback;
  int v7;
  char *v8;
  unsigned int v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  char *v14;
  char *v15;
  _BYTE *v16;
  unsigned int v17;
  _BYTE *v18;
  unsigned int v19;
  _BYTE *v20;
  _BYTE *v21;
  unsigned int v22;
  unsigned __int8 *v23;
  uint64_t result;
  unsigned int v25;

  v4 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    v5 = (char *)*((_QWORD *)a2 + 1);
    if ((unint64_t)v5 >= *((_QWORD *)a2 + 2) || *v5 < 0)
    {
      TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    else
    {
      TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((_QWORD *)a2 + 1) = v5 + 1;
      if (!(_DWORD)TagFallback)
        return 1;
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v25 = 0;
        v8 = (char *)*((_QWORD *)a2 + 1);
        if ((unint64_t)v8 < *((_QWORD *)a2 + 2) && (*v8 & 0x80000000) == 0)
        {
          v9 = *v8;
          *((_QWORD *)a2 + 1) = v8 + 1;
          goto LABEL_26;
        }
        result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
        if ((_DWORD)result)
        {
          v9 = v25;
LABEL_26:
          if (v9 <= 2)
          {
            *((_DWORD *)this + 7) |= 1u;
            *((_DWORD *)this + 2) = v9;
          }
          v16 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
          if ((unint64_t)v16 < v10 && *v16 == 16)
          {
            v11 = v16 + 1;
            *((_QWORD *)a2 + 1) = v11;
            goto LABEL_31;
          }
          continue;
        }
        break;
      case 2u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v11 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
LABEL_31:
        v25 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!(_DWORD)result)
            return result;
          v17 = v25;
          v18 = (_BYTE *)*((_QWORD *)a2 + 1);
          v10 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v17 = *v11;
          v18 = v11 + 1;
          *((_QWORD *)a2 + 1) = v18;
        }
        *((_BYTE *)this + 16) = v17 != 0;
        *((_DWORD *)this + 7) |= 2u;
        if ((unint64_t)v18 >= v10 || *v18 != 24)
          continue;
        v12 = v18 + 1;
        *((_QWORD *)a2 + 1) = v12;
LABEL_39:
        v25 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!(_DWORD)result)
            return result;
          v19 = v25;
        }
        else
        {
          v19 = *v12;
          *((_QWORD *)a2 + 1) = v12 + 1;
        }
        if (v19 <= 4)
        {
          *((_DWORD *)this + 7) |= 4u;
          *((_DWORD *)this + 3) = v19;
        }
        v20 = (_BYTE *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        if ((unint64_t)v20 >= v13 || *v20 != 32)
          continue;
        v14 = v20 + 1;
        *((_QWORD *)a2 + 1) = v14;
LABEL_49:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!(_DWORD)result)
            return result;
          v21 = (_BYTE *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          *v4 = *v14;
          v21 = v14 + 1;
          *((_QWORD *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 7) |= 8u;
        if ((unint64_t)v21 >= v13 || *v21 != 40)
          continue;
        v15 = v21 + 1;
        *((_QWORD *)a2 + 1) = v15;
LABEL_57:
        v25 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!(_DWORD)result)
            return result;
          v22 = v25;
          v23 = (unsigned __int8 *)*((_QWORD *)a2 + 1);
          v13 = *((_QWORD *)a2 + 2);
        }
        else
        {
          v22 = *v15;
          v23 = (unsigned __int8 *)(v15 + 1);
          *((_QWORD *)a2 + 1) = v23;
        }
        *((_BYTE *)this + 17) = v22 != 0;
        *((_DWORD *)this + 7) |= 0x10u;
        if (v23 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
          continue;
        *((_DWORD *)a2 + 8) = 0;
        result = 1;
        *((_BYTE *)a2 + 36) = 1;
        return result;
      case 3u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v12 = (char *)*((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        goto LABEL_39;
      case 4u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v14 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_49;
      case 5u:
        v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
          goto LABEL_20;
        v15 = (char *)*((_QWORD *)a2 + 1);
        v13 = *((_QWORD *)a2 + 2);
        goto LABEL_57;
      default:
        v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4)
          return 1;
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0)continue;
        return 0;
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5;
  int v6;

  v5 = this;
  v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0)
      return this;
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 0x10) != 0)
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  int v2;
  int v3;
  uint64_t result;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v5;
  unsigned int v6;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v7;
  int v8;
  wireless_diagnostics::google::protobuf::io::CodedOutputStream *v9;
  int v10;

  LOBYTE(v2) = *((_BYTE *)this + 28);
  if ((_BYTE)v2)
  {
    if ((*((_BYTE *)this + 28) & 1) != 0)
    {
      v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        v2 = *((_DWORD *)this + 7);
      }
      else
      {
        v3 = 2;
      }
    }
    else
    {
      v3 = 0;
    }
    if ((v2 & 2) != 0)
      v6 = v3 + 2;
    else
      v6 = v3;
    if ((v2 & 4) != 0)
    {
      v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
      if ((v7 & 0x80000000) != 0)
      {
        v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        v2 = *((_DWORD *)this + 7);
      }
      else
      {
        v8 = 2;
      }
      v6 += v8;
    }
    if ((v2 & 8) != 0)
    {
      v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if (v9 >= 0x80)
      {
        v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
        v2 = *((_DWORD *)this + 7);
      }
      else
      {
        v10 = 2;
      }
      v6 += v10;
    }
    if ((v2 & 0x10) != 0)
      result = v6 + 2;
    else
      result = v6;
  }
  else
  {
    result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *))(*(_QWORD *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *)this)
  {
    v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    LOBYTE(v2) = *(_BYTE *)(this + 16);
    *(_BYTE *)(this + 16) = *((_BYTE *)a2 + 16);
    *((_BYTE *)a2 + 16) = v2;
    v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    v4 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    LOBYTE(v4) = *(_BYTE *)(this + 17);
    *(_BYTE *)(this + 17) = *((_BYTE *)a2 + 17);
    *((_BYTE *)a2 + 17) = v4;
    v5 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    v6 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
  }
  return this;
}

_QWORD *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::GetTypeName@<X0>(_QWORD *a1@<X8>)
{
  return sub_18D0778AC(a1, "CoreNavigation.CLP.LogEntry.PrivateData.RhythmicGnssStatusUpdate");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::SharedCtor(uint64_t this)
{
  *(_BYTE *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::RhythmicStreamingControl(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  *(_QWORD *)this = &off_1E25BCB18;
  *((_BYTE *)this + 8) = 0;
  *((_DWORD *)this + 3) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(this, a2);
  return this;
}

void sub_18D0FA240(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite *v1;

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  char v4;
  _BYTE v5[48];

  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if ((*((_BYTE *)a2 + 16) & 1) != 0)
  {
    v4 = *((_BYTE *)a2 + 8);
    *((_DWORD *)this + 4) |= 1u;
    *((_BYTE *)this + 8) = v4;
  }
}

void sub_18D0FA2DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

