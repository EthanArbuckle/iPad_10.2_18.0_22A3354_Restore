uint64_t sub_21E044E90(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x24BDAC470];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_21E0450E8(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x24BDAC470];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_21E045274(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x24BDAC470];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_21E045460(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_21E0455D8(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v5;

  if (*(_QWORD *)(a1 + 32))
    v2 = *(_QWORD *)(a1 + 24) == 0x2AC602A0DF9ECD38;
  else
    v2 = 1;
  v5 = !v2 && *(_QWORD *)(a1 + 8) != 0x3FAB4C42AB622E63 && *(_QWORD *)(a1 + 16) != 0x2A752CF9B62C38AELL;
  v1 = *(_DWORD *)(a1 + 40) ^ (1438293641 * ((a1 - 149414616 - 2 * (a1 & 0xF7181D28)) ^ 0x4FDF4857));
  __asm { BR              X14 }
}

uint64_t sub_21E0456A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v1 - 0x3FAB4C42AB622E63) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((4008 * (*(unsigned __int8 *)(v3 - 0x2A752CF9B62C389DLL) == 196)) ^ v2))
                            - 8))();
}

uint64_t sub_21E0456FC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((3535 * (*(unsigned __int8 *)(v1 - 0x2AC602A0DF9ECD32) != 0xC5)) ^ v2))
                            - 8))();
}

uint64_t sub_21E045740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                        + 8
                                                                        * ((((((*(unsigned __int8 *)(v2 - 0x2AC602A0DF9ECD31) ^ v4) == ((v3 ^ 0xF1) + 48)) ^ ((v3 ^ 0xF1) - 109)) & 1)
                                                                          * (v3 ^ 0x3E5)) ^ ((v3 ^ 0x6F1) + 259)))
                                                            - 4))(a1, 63, 1580275388);
}

uint64_t sub_21E045800(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((a4 ^ 0x6F1) - 78) ^ 0x522) * (a3 + 1 == v5)) ^ a4)) - 8))();
}

uint64_t sub_21E045834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  unsigned __int8 v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v6 == v7) ^ (a5 - 112)) & 1) * ((a5 - 259) ^ 0x514)) ^ a5))
                            - 4))();
}

uint64_t sub_21E045868@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v11 = a4 ^ 0x7B0u;
  v12 = (_QWORD *)(v10 + (((v11 ^ 0x1FFFFFFA1CEEA97) + a3) << 7) + 1176);
  *v12 = a5 + ((*v9 * (a2 - 63) % v8) << (v11 ^ 0xD9));
  *v6 += 1024;
  v12[1] = a5 + ((*v9 * (a2 - 62) % v8) << 10);
  *v6 += 1024;
  v12[2] = a5 + ((*v9 * (a2 - 61) % v8) << 10);
  *v6 += 1024;
  v12[3] = a5 + ((*v9 * (a2 - 60) % v8) << 10);
  *v6 += 1024;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5 + 8 * (int)((1968 * (v7 != 1)) ^ v11)) - 4))(a1, (a2 + 4));
}

_DWORD *sub_21E04598C(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

void sub_21E0459A0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1734664879 * ((-2 - ((a1 | 0xBFDEA4E0) + (~(_DWORD)a1 | 0x40215B1F))) ^ 0x6FFA7305));
  __asm { BR              X15 }
}

uint64_t sub_21E045AFC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  _BOOL4 v19;

  v16 = v14 - 176175259;
  v17 = 4 * (v11 + a1 + ((v12 - 857) | 0x293));
  *(_DWORD *)(a11 + v17 - 0x2CF4A33C3453BA2BLL) = *(_DWORD *)(*(_QWORD *)(v13 - 0x1D17695A8381D35ELL)
                                                            + v17
                                                            - 0x2CF4A33C3453BA2BLL);
  v19 = v11 - 1003146416 < 1971308389 && v11 - 1003146416 >= v16;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((91 * v19) ^ (v12 - 87))) - 12))(3291820880, 1971308389);
}

uint64_t sub_21E045BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;
  _BOOL4 v17;

  v17 = v13 - 1648171632 > v14 + 1326282510 || v13 - 1648171632 < a13 - 821200474;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((58 * v17) ^ v14)) - 8))();
}

uint64_t sub_21E045C0C@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  _BOOL4 v21;

  *(_DWORD *)(a12 + 4 * (a2 + v12 + 663) - 0x2CF4A33C3453BA2BLL) = a1;
  v19 = v12 + 1 + v14;
  v21 = v19 > v15 + 1570 || v19 < v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((v21 * v17) ^ v13)) - (v13 ^ 0x4B5u) + 1562))();
}

uint64_t sub_21E045C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (v6 ^ ((32 * (v5 != 0)) | ((v5 != 0) << 11))))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_21E045C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  _BOOL4 v27;

  v23 = 5 * (v19 ^ 0x715);
  v24 = (*(_DWORD *)(*(_QWORD *)(a11 + 32) - 0x6075B478BABD28D3) - 263598254)
      * (*(_DWORD *)(a19 - 0x2CF4A33C3453BA2BLL) ^ 0x92AF9571);
  v25 = 225134719 * ((((v22 - 128) | 0xE8AA4C4C) - ((v22 - 128) & 0xE8AA4C4C)) ^ 0xFE5A0966);
  *(_DWORD *)(v22 - 104) = v25 + v23 + 73;
  *(_QWORD *)(v22 - 128) = a14;
  *(_QWORD *)(v22 - 120) = a15;
  *(_DWORD *)(v22 - 112) = 60 * (v23 ^ 0x606) - v25 + (v24 ^ 0xBE75FF8C) + ((2 * v24) & 0x7CEBFF18) + 1106960908;
  *(_DWORD *)(v22 - 108) = v25 ^ 0xC05EC11;
  v26 = ((uint64_t (*)(uint64_t))*(&off_24E21C7C0 + v23 - 1439))(v22 - 128);
  v27 = (int)((v21 ^ 0x45DD07C1) + a13) > 1172112174;
  if (a13 > (v23 ^ 0x3A22FAC1u))
    v27 = 1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((49 * !v27) ^ v23)) - 8))(v26);
}

void sub_21E045E54()
{
  JUMPOUT(0x21E045D18);
}

uint64_t sub_21E045E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, int a12, int a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;

  v17 = 1292559617 * ((((2 * (v16 - 128)) | 0x5E32F8CE) - (v16 - 128) - 790199399) ^ 0x884A140E);
  *(_QWORD *)(v16 - 120) = a14;
  *(_DWORD *)(v16 - 128) = (v15 + 1006) ^ v17;
  *(_DWORD *)(v16 - 124) = v17
                         + ((a13 << 6) & 0x62EDFDC0)
                         + 1592477632
                         + ((57 * (v15 ^ 0x4CB)) ^ (32 * a13) ^ 0xB176F656);
  sub_21E0DCC70((_DWORD *)(v16 - 128));
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((844 * ((*a10 - 201714706) < 0x7FFFFFFF)) ^ v15))
                            - 12))();
}

uint64_t sub_21E045F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_DWORD *)(v17 - 128) = v15
                         - 1734664879 * ((2 * ((v17 - 128) & 0x304B2F98) - (v17 - 128) + 1337249891) ^ 0x606FF879)
                         - 522;
  *(_QWORD *)(v17 - 120) = a14;
  *(_QWORD *)(v17 - 112) = &STACK[0x1D17695A8381D396];
  sub_21E069E70(v17 - 128);
  *(_DWORD *)(v17 - 112) = v15 + 1866394843 * ((v17 - 128) ^ 0xEA1737F4) - 231;
  *(_QWORD *)(v17 - 120) = a14;
  *(_QWORD *)(v17 - 104) = v16;
  v18 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v15 ^ 0x48C)) - 12))(v17 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14
                                                      + 8
                                                      * ((416
                                                        * ((*(_DWORD *)(v17 - 128) - 502438888) < 0xFCE8FCFA)) ^ v15))
                                          - ((v15 + 2151) ^ (v15 + 1873352131) & 0x9056EDFF ^ 0x5F0)))(v18);
}

uint64_t sub_21E04604C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;

  v20 = a18 - 201714705;
  if (a18 - 201714705 < 0)
    v20 = 201714705 - a18;
  v21 = (int)((v20 ^ 0x4DBFFE37)
            + ((v20 << (((v18 + 52) & 0xDF) + 62)) & 0x9B7FFC6E)
            - 1102713382
            + ((123 * ((v18 - 240442316) & 0xE54DFDF ^ 0xCC4)) ^ 0xF3FA10B3)) >= 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * (((v21 << 6) | (v21 << 8)) ^ (v18 - 240442316) & 0xE54DFDF)) - 8))();
}

uint64_t sub_21E046120(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((*(_DWORD *)(v3 + 4 * v5) == a3) ^ (v4 + 20)) & 1)
                                          * ((v4 - 1362) ^ 0x731)) ^ v4))
                            - 8))();
}

uint64_t sub_21E046158()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = v0 - 1 + ((123 * (v2 ^ 0xCC4)) ^ v1) >= 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v4 << 6) | (v4 << 8)) ^ v2)) - 8))();
}

uint64_t sub_21E0461A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 24);
  *(_DWORD *)(v2 - 128) = v0 - 1734664879 * ((v2 - 1031286940 - 2 * ((v2 - 128) & 0xC287CFE4)) ^ 0xED5CE7FE) - 123;
  *(_QWORD *)(v2 - 120) = v1;
  *(_QWORD *)(v2 - 112) = v3;
  return sub_21E069E70(v2 - 128);
}

void sub_21E04657C(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 40) != 0x3AF2004723E7A171 && *(_QWORD *)(a1 + 16) != 0 && *(_QWORD *)(a1 + 8) != 0;
  v1 = *(_DWORD *)a1 ^ (1866394843 * ((((2 * a1) | 0x78D0C56E) - a1 + 1134009673) ^ 0x567F5543));
  __asm { BR              X12 }
}

uint64_t sub_21E04666C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  v4 = v1 + 1003;
  if (*(_QWORD *)(v2 + 32))
    v5 = *(_DWORD *)(v2 + 4) - v0 == (v4 ^ 0x47C5222C);
  else
    v5 = 1;
  v6 = !v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3758 * v6) ^ v4)) - 12))();
}

uint64_t sub_21E0466B0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_BYTE *)(v0 - 0x3AF2004723E7A170) == 39) * (67 * (v1 ^ 0x528) + 1585)) ^ v1 ^ 0x46D))
                            - 4))();
}

uint64_t sub_21E046700()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((3525 * (*(_BYTE *)(v2 + 5) == 2)) ^ v0))
                            - (((v0 - 1259) | 0x100u) ^ 0x15DLL)))();
}

uint64_t sub_21E04673C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((*(unsigned __int8 *)(v2 + 12) < 2u) * (v0 + 2458)) ^ v0)) - 12))();
}

uint64_t sub_21E046768()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((62 * (*(_BYTE *)(v2 + 6) == 1)) ^ ((v0 - 1020) | 0x11))) - 4))();
}

uint64_t sub_21E0467A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, int a19, uint64_t a20,int a21)
{
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  int v34;
  int v35;

  v35 = (v21 - 29) | 0x408;
  v26 = bswap32(*(_DWORD *)(v23 + 32));
  v27 = (uint64_t)&v24[56 * *v24 + 0x498DA1AEF22D93BFLL];
  v28 = v21;
  v29 = v26 & 0xFFFFFFF0 ^ 0xBF7F6EEE;
  v30 = (2 * v26) & 0x7EFEDDC0;
  v31 = 1988622253 * ((&a15 - 1278950078 - 2 * ((unint64_t)&a15 & 0xB3C4C542)) ^ 0x45DC85E2);
  a19 = v30 - v31 + v29 + 2062023584;
  v34 = v28;
  a21 = v31 + v28 + 269;
  a15 = v23 + 56;
  a16 = v23 + 16;
  a18 = v23 + 56;
  a20 = v27;
  v32 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v25 + 8 * (v28 ^ 0x1FF)) - 4))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((953 * (a17 == v35 + 938999887)) ^ v34)) - 4))(v32);
}

uint64_t sub_21E0468D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, int a20,int a21,uint64_t a22,int a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  int v31;
  uint64_t v32;
  int v34;

  v34 = (v24 - 693495134) & 0x2955EA7F;
  v30 = ((2 * (&a17 & 0x311FD480) - &a17 + 1323314043) ^ 0xA4F71C8F) * v25;
  a23 = ((a14 ^ 0x3FCFDEEA) - 805308064 + ((((v24 - 1067) | 0x40) + 2141174915) & a11)) ^ v30;
  a22 = v27 + 36;
  a19 = ((2 * (&a17 & 0x80) - &a17 + 123) ^ 0x8F) * v25 - 101;
  a24 = v27;
  a21 = v30 + v24 + 1709;
  a17 = v28;
  a18 = a12;
  v31 = v24;
  v32 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v29 + 8 * (v24 ^ 0x54D)) - 12))(&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * ((2061 * (a20 == v34 + 938998573)) ^ v31)) - 12))(v32);
}

uint64_t sub_21E0469E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v18 = (*(uint64_t (**)(_QWORD, uint64_t))(v17 + 8 * (v15 - 2223)))(a13 - *(unsigned __int8 *)(v14 + 14), 2403785118);
  *v16 = v18;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13
                                                                                          + 8
                                                                                          * (((v18 == 0)
                                                                                            * (((v15 ^ 0xE71) - 734) ^ 0x167)) ^ v15))
                                                                              - 8))(v18, v19, v20, v21, v22);
}

uint64_t sub_21E046A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  int v11;
  uint64_t v12;
  _DWORD *v13;
  int v14;

  *v13 = v11;
  v14 = v11 - ((2 * v11) & 0xC1E85D8) - 2045820648 + ((a11 + 167701830) & 0x76010FDB) + 131;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((124
                                          * (((2 * v14) & 0xF0B37FDC ^ 0x1205D8) + (v14 ^ 0xFE56FD02) - 1880111116 == 139036642)) ^ a11))
                            - 8))();
}

uint64_t sub_21E046B04()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((v3 + v0) < 2) * ((v1 ^ 0xD25) - 3140)) ^ (v1 + 1530)))
                            - 12))();
}

uint64_t sub_21E046E90(char a1, char a2)
{
  uint64_t v2;
  char v3;
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;

  v8 = v4 - 1074;
  v9 = v5 + a1 + a2;
  *(_BYTE *)(v2 + v7 - 1) = ((v9 - 93) ^ 0xBA) * (v9 - 76);
  *(_BYTE *)(v2 + v7 - 2) = ((v3 + ((v8 + 21) & 0xF9 ^ 0xF5)) ^ 0xBA) * (v9 - 75);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1260 * ((v2 & 0xFFFFFFFE) == 2)) ^ v8)) - 12))();
}

void sub_21E046F34()
{
  JUMPOUT(0x21E046EECLL);
}

uint64_t sub_21E046F40(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1047 * (((a1 ^ 0xD25 ^ (v2 == v1)) & 1) == 0)) ^ a1)) - 4))();
}

uint64_t sub_21E046F7C()
{
  uint64_t v0;
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v0 - 1;
  *(_BYTE *)(v4 + v5) = ((v1 - 93) ^ 0xBA) * (v1 - 76);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v5 != 0) * ((((v2 - 2132) | 0x11C) - 1003) ^ 0x819)) ^ ((v2 - 2132) | 0x11C)))
                            - 12))();
}

void sub_21E046FC8()
{
  JUMPOUT(0x21E046F98);
}

void sub_21E046FD0(int a1@<W8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 24) = a1;
}

void sub_21E047010(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;

  v1 = *a1 + 225134719 * ((2 * (a1 & 0x58D3AC36) - (_DWORD)a1 - 1490267191) ^ 0xB1DC16E3);
  v2 = *(_QWORD *)((char *)*(&off_24E21C7C0 + (int)(v1 ^ 0x159))
                 + 8
                 * (int)((170
                        * (((uint64_t (*)(uint64_t, uint64_t))*(&off_24E21C7C0 + (int)(v1 + 126)))(32, 0x101004023FF3BD5) != 0)) ^ v1)- 12)- 12;
  __asm { BR              X8 }
}

uint64_t sub_21E0470B8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x162DFDF7162DFDF7;
  *(_QWORD *)(result + 16) = 0x4E70AE035A34FA2BLL;
  *(_DWORD *)(result + 24) = 939001227;
  *(_QWORD *)(v2 - 0xCDF15AEA900D051) = result + 0x6898E7DB637CE96BLL;
  *(_DWORD *)(v1 + 16) = 939001227;
  return result;
}

void sub_21E047138(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 4) - 1988622253 * ((934503921 - (a1 | 0x37B365F1) + (a1 | 0xC84C9A0E)) ^ 0x3E54DAAE);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1D17695A8381D362);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = v1 + 1734664879 * ((&v3 & 0x8A19A5D4 | ~(&v3 | 0x8A19A5D4)) ^ 0x5A3D7231) + 85;
  sub_21E069D0C((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_21E047274@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v1 ^ (78 * (((v3 ^ v2) & 0x1F) == 0x17)))) - 8))();
}

uint64_t sub_21E0472EC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((3560
                                          * (((701 * (v3 ^ 0x4C0) + 1222682949) & 0xB71F53FF ^ 0xB87F1021)
                                           + (v1 & 0xAFCFDAC6)
                                           - 275185666
                                           + (v4 ^ 0x57E7EF2D ^ v2) < 0x7FFFFFFF)) ^ v3))
                            - 8))();
}

uint64_t sub_21E04737C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(*(_QWORD *)(v6 - 0x1D17695A8381D35ELL) + 4 * (v1 + (v5 ^ 0x1B8) + v2 + 950999014) - 0x2CF4A33C3453BA2BLL) = *(_DWORD *)(*(_QWORD *)(v6 - 0x1D17695A8381D35ELL) + 4 * (v4 + v2 + 637) - 0x2CF4A33C3453BA2BLL);
  return ((uint64_t (*)(unint64_t, uint64_t))(*(_QWORD *)(a1
                                                                        + 8
                                                                        * ((440 * (v4 + v2 + 636 < v3)) ^ v5 ^ 0x1B8))
                                                            - ((37 * (v5 ^ 0x569u)) ^ 0x2B7)))(0xD30B5CC3CBAC45D5, 950999014);
}

void sub_21E047410()
{
  JUMPOUT(0x21E0473C8);
}

uint64_t sub_21E047418@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((35 * (v2 ^ 0x245) - 118)
                                          * ((int)((v3 ^ 0xF63CD7EC) + 2147221500 + (v1 & 0xEC79AFD8) - 1983436777) >= 0)) ^ v2))
                            - 4))();
}

uint64_t sub_21E0474C8@<X0>(int a1@<W3>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  char v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;

  v10 = a1 - 1;
  v11 = *(_DWORD *)(*(_QWORD *)(v9 - 0x1D17695A8381D35ELL) + 4 * (a1 + v7) - 0x2CF4A33C3453BA2BLL) ^ v5;
  *(_DWORD *)(*(_QWORD *)(v9 - 0x1D17695A8381D35ELL) + 4 * (v4 + v3 + 1) - 0x2CF4A33C3453BA2BLL) = ((v11 >> (32 - v6)) | a2 ^ v5) + ((13 * (v8 ^ 0x1C6)) ^ (v5 + 377)) - ((2 * ((v11 >> (32 - v6)) | a2 ^ v5)) & 0x255F2AE2);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (int)((975 * ((v10 + v7) >> 31)) ^ v8)) - 4))();
}

void sub_21E047590()
{
  JUMPOUT(0x21E047514);
}

uint64_t sub_21E047598@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unsigned int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (110 * (v1 - 2144335351 < v2))))
                            - ((v3 - 953698024) & 0x38D84DBA)
                            + 2446))();
}

uint64_t sub_21E0475F0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_DWORD *)(*(_QWORD *)(v4 - 0x1D17695A8381D35ELL) + 4 * (v1 + v2 + 1) - 0x2CF4A33C3453BA2BLL) = -1833986703;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a1
                                                      + 8
                                                      * ((866 * ((v1 + v2) > 0x7FFFFFFE)) ^ (v3 - 1973)))
                                          - 4))(2147483646);
}

void sub_21E047668()
{
  JUMPOUT(0x21E047638);
}

uint64_t sub_21E047670@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x1D17695A8381D35ELL) + 4 * (v2 + v4 + v3 + 171 - 1093) - 0x2CF4A33C3453BA2BLL) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((42 * (v4 + v2 >= 0)) ^ v3)) - 8))();
}

uint64_t sub_21E0476D4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(*v3 + 4 * (v5 + v1) + v6) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * (((v5 - 1 + v1 >= 0) * ((v4 - 843922773) & 0x324D3DFF ^ 0x46C)) ^ v4))
                            - 8))();
}

void sub_21E047728()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  _DWORD *v7;
  _BOOL4 v8;

  v8 = *(_DWORD *)(*v4 + 4 * (v2 + v0 + (v6 ^ 0xDD4) - 2449) + v5) == v3;
  *v7 = (v2 + v0 - v8 + 2) * v1 - 1477048150 * (v0 - v8) - 696394687;
}

uint64_t sub_21E0477F0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 1292559617 * (((a1 | 0xA2B58977) - a1 + (a1 & 0x5D4A7688)) ^ 0x5E6E11E);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  v3 = *(_DWORD *)(a1 + 12) ^ v1;
  v5 = v3 - 1292548152;
  v4 = v3 - 1292548152 < 0;
  LODWORD(v6) = 1292548152 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + (v2 ^ 0xB45))
                                        + 8 * ((1930 * (v6 != ((2 * (_DWORD)v6) & 0x7750FE58))) ^ v2)
                                        - 12)
                            - 4))();
}

void sub_21E0478A4(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  *(_DWORD *)(*(_QWORD *)(v1 - 0x1D17695A8381D35ELL) - 0x2CF4A33C3453BA2BLL) = (v2 - 1146585300) ^ 0x2907EA5D;
  *(_DWORD *)(v1 - 0x1D17695A8381D362) = a1 + 1;
}

void sub_21E04790C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1292559617 * ((2 * (a1 & 0x5560BB64) - a1 - 1432402789) ^ 0xDCC2CF2));
  __asm { BR              X15 }
}

uint64_t sub_21E047A64(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3
                                                               + 8
                                                               * ((4014
                                                                 * ((v2 ^ 0xB38D9970) != ((v1 - 1450) | 0x440) - 1093)) ^ v1))
                                                   - 12))(a1, 966543138);
}

uint64_t sub_21E047AB4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BOOL4 v16;

  v13 = a2 - 966544231 + ((v4 + 56349102) & 0xFCA42CE7);
  *(_BYTE *)(v12 + v13) = *(_BYTE *)(v7 + (v13 & 0xF)) ^ *(_BYTE *)(v3 + v13) ^ *(_BYTE *)(v5 + (v13 & 0xF) + 1) ^ *(_BYTE *)(v6 + (v13 & 0xF) + 1) ^ (13 * (v13 & 0xF));
  LODWORD(v13) = a2 + 549439212;
  v14 = (a2 + 1);
  v15 = (v9 > 0xA5A3F1F2) ^ (v13 < v8);
  v16 = v13 < v10;
  if (v15)
    v16 = v9 > 0xA5A3F1F2;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((v16 * a3) ^ v4)) - 12))(a1, v14);
}

uint64_t sub_21E047B60(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((((2 * v3) & 0x3F5FFB6E ^ 0x271B3260) + (v3 ^ 0x2C2264C7) + 2071954738 == 456098537) ^ a3 ^ 0xAF) & 1)
                                          * ((a3 - 1994) ^ 0x4CC)) ^ a3))
                            - 4))();
}

uint64_t sub_21E047BD8@<X0>(int a1@<W1>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((3075 * (a1 + a3 + 1615856201 >= 115 * (a2 ^ 0x537u) - 2637)) ^ a2))
                            - 12))();
}

uint64_t sub_21E047C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                                          + 8
                                                                                          * ((27
                                                                                            * ((int)a3 + a6 - 16 >= ((529 * (a8 ^ 0x525)) ^ 0xFFFFF5A5))) ^ a8))
                                                                              - 12))(a1, a2, a3, a4, a4);
}

uint64_t sub_21E047C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W7>, int a6@<W8>)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL4 v19;

  v12 = v10 - 0x38BEDCB65C0FCDB3 + a3 + a5 - 410 + (_DWORD)a2 + a6 - 902;
  v13 = ((_BYTE)a3 + (_BYTE)a5 + 102 + (_BYTE)a2 + (_BYTE)a6 + 122) & 0xF;
  v14 = v13 + v8 - v12;
  v15 = 1 - v12;
  v19 = (unint64_t)(v9 - (v10 - 0x38BEDCB65C0FCDB3) - 0x199CF05987F0152ELL) > 0xF
     && v14 > 0xF
     && v15 + (v13 | v6) >= (a5 ^ 0x530uLL)
     && v15 + (v13 | v7) > 0xF;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11
                                                                                          + 8
                                                                                          * (int)((3130 * v19) ^ a5))
                                                                              - 12))(a1, a2, a3, a4, a4);
}

uint64_t sub_21E047D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (((((a6 + 976) | 0x80) ^ 0x79D) * (v6 < 0x10)) ^ a6)))();
}

uint64_t sub_21E047D40@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16x4_t v30;
  int8x16x4_t v31;

  *(_DWORD *)(v24 - 120) = a3 + 4;
  v30.val[1].i64[0] = ((_BYTE)a3 + 10) & 0xF;
  v30.val[1].i64[1] = ((_BYTE)a3 + 9) & 0xF;
  v30.val[2].i64[0] = ((_BYTE)a3 + 8) & 0xF;
  v30.val[2].i64[1] = ((_BYTE)a3 + 7) & 0xF;
  v30.val[3].i64[0] = ((_BYTE)a3 + 6) & 0xF;
  v30.val[3].i64[1] = ((_BYTE)a3 + 5) & 0xF;
  v25 = a1 + a5 + a2;
  v26.i64[0] = 0xD0D0D0D0D0D0D0DLL;
  v26.i64[1] = 0xD0D0D0D0D0D0D0DLL;
  v30.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a5 + (_BYTE)a2) & 0xF;
  v30.val[0].i64[1] = ((_BYTE)a3 + 11) & 0xF;
  v27.i64[0] = vqtbl4q_s8(v30, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v31.val[0].i64[1] = ((_BYTE)a3 + 3) & 0xF;
  v31.val[1].i64[1] = ((_BYTE)a3 + 1) & 0xF;
  v31.val[2].i64[1] = ((_BYTE)a3 - 1) & 0xF;
  v31.val[3].i64[1] = ((_BYTE)a3 + 13) & 0xF;
  v31.val[0].i64[0] = *(_DWORD *)(v24 - 120) & 0xF;
  v31.val[1].i64[0] = ((_BYTE)a3 + 2) & 0xF;
  v31.val[2].i64[0] = a3 & 0xF;
  v31.val[3].i64[0] = (a3 + 14) & 0xF;
  v27.i64[1] = vqtbl4q_s8(v31, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v28 = vrev64q_s8(vmulq_s8(v27, v26));
  *(int8x16_t *)(a16 - 15 + v25) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + (v25 & 0xF) - 15), *(int8x16_t *)(v19 - 15 + v25)), veorq_s8(*(int8x16_t *)(v20 + (v25 & 0xF) + 1 - 15), *(int8x16_t *)(v21 + (v25 & 0xF) + 1 - 15))), vextq_s8(v28, v28, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a19
                                        + 8
                                        * ((((v23 & 0xFFFFFFF0) == 16) * (((a4 + 1764) ^ 0xB0B) + 1397)) ^ (a4 + 1764)))
                            - 8))();
}

void sub_21E047EAC()
{
  JUMPOUT(0x21E047E30);
}

uint64_t sub_21E047EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10
                              + 8 * (((((v8 == v9) ^ (a8 + 108)) & 1) * ((a8 ^ 0x524) - 855)) ^ a8)))();
}

uint64_t sub_21E047EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v7
                                                                               + 8
                                                                               * ((((((v6 + 1672) ^ 0xA5D) & v4) == 0)
                                                                                 * (v6 + 153)) ^ v6)))(a1, a2, a3, a4, (a4 - v5));
}

uint64_t sub_21E047F20@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  int v30;
  char v31;
  uint64_t v32;
  int8x16x4_t v34;

  *(_DWORD *)(v26 - 136) = v24;
  v27 = (((16 * a3) ^ 0x7AB0) - 2008) & v24;
  *(_QWORD *)(v26 - 128) = v25 - 7;
  *(_QWORD *)(v26 - 120) = v18 - 7;
  v28 = -v23;
  *(_DWORD *)(v26 - 144) = v27;
  v29 = a1 + a4;
  v30 = (16 * a3) ^ 0x7AB0;
  v31 = v29 + v19;
  *(_DWORD *)(v26 - 152) = (v30 - 2145572896) & 0x7FE2D56F;
  v32 = (v28 + v29 + a2);
  v34.val[0].i64[0] = ((_BYTE)v28 + (_BYTE)v29 + (_BYTE)a2) & 0xF;
  v34.val[0].i64[1] = ((_BYTE)v28 + v31 + 37) & 0xF;
  v34.val[1].i64[0] = ((_BYTE)v28 + v31 + 36) & 0xF;
  v34.val[1].i64[1] = ((_BYTE)v28 + v31 + 35) & 0xF;
  v34.val[2].i64[0] = ((_BYTE)v28 + v31 + 34) & 0xF;
  v34.val[2].i64[1] = ((_BYTE)v28 + v31 + 33) & 0xF;
  v34.val[3].i64[0] = ((_BYTE)v28 + v31 + (_BYTE)v30 - 32) & 0xF;
  v34.val[3].i64[1] = ((_BYTE)v28 + v31 + 31) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v26 - 128) + v32) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v22 + (v32 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v26 - 120) + v32)), veor_s8(*(int8x8_t *)(v20 + (v32 & 0xF) + 1 - 7), *(int8x8_t *)(v21 + (v32 & 0xF) + 1 - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v34, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xD0D0D0D0D0D0D0DLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a18
                                                     + 8 * (((2 * (v28 != 8 - v27)) | (4 * (v28 != 8 - v27))) ^ v30))
                                         - 4))((__n128)xmmword_21E17F900);
}

void sub_21E048080()
{
  JUMPOUT(0x21E047FA4);
}

uint64_t sub_21E0480A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * (*(_DWORD *)(v12 - 152) | (143
                                                                                 * (*(_DWORD *)(v12 - 136) == *(_DWORD *)(v12 - 144)))))
                                          - ((23 * (*(_DWORD *)(v12 - 152) ^ 0x553u)) ^ 0xA59)))(a11);
}

uint64_t sub_21E048100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = (a5 - 456099844);
  *(_BYTE *)(v13 + v14) = *(_BYTE *)(v10 + (v14 & (a7 ^ 0xA5ALL))) ^ *(_BYTE *)(v7 + v14) ^ *(_BYTE *)(v8 + (v14 & (a7 ^ 0xA5ALL)) + 1) ^ *(_BYTE *)(v9 + (v14 & (a7 ^ 0xA5ALL)) + 1) ^ (13 * (v14 & (a7 ^ 0x5A)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (int)((2433 * (a5 - 1 != v11)) ^ (a7 - 1190))) - 12))();
}

uint64_t sub_21E048178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int8x16_t v18;
  _BOOL4 v20;

  v18.i64[0] = 0x9F9F9F9F9F9F9F9FLL;
  v18.i64[1] = 0x9F9F9F9F9F9F9F9FLL;
  *(int8x16_t *)(v17 - 112) = veorq_s8(vaddq_s8(*(int8x16_t *)*(_QWORD *)(a1 + 24), v18), (int8x16_t)xmmword_21E17F910);
  v20 = v14 != 0x38BEDCB65C0FCDB3 && v16 != 0;
  LODWORD(a12) = 2 * v13;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * (int)(a6 ^ (3110 * v20))) - (((_DWORD)a6 + 963) | 0x400u) + 3072))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_21E0481EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  int v15;
  _BOOL4 v17;

  v15 = (a12 & 0xFDFFDCFA) + (v13 ^ 0xFEFFEE7D);
  v17 = v15 == (((_DWORD)a6 - 1093) | 0xC08) - 16784779
     || (((_BYTE)v15 + 3) & 0xF) != (((_DWORD)a6 - 1093) ^ 0x21E) - 542;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * ((116 * v17) ^ ((int)a6 + 1868))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_21E048268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  uint64_t v22;
  unsigned int v23;

  v23 = a11 - (a13 & 0x828CE2D0) + ((a22 - 435) ^ 0x8BD332BE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8
                                        * ((245
                                          * (((v23 << ((a22 - 36) ^ 0xE5)) & 0xBD7F3CDE ^ 0x800C20D0)
                                           + (v23 ^ 0x1FF9EF07)
                                           + 2079260090 != 1521392681)) ^ a22))
                            - 8))();
}

uint64_t sub_21E048344(int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (v3 | (2
                                               * (((a3 + a1 + 557867409 < (v3 - 2268)) ^ (v3 + 103)) & 1))))
                            - 8))();
}

uint64_t sub_21E0483C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v8
                                                                               + 8
                                                                               * (int)((11
                                                                                      * (((a6 >> 4 == 233568743) ^ (23 * (v7 & 0xF7 ^ 0x40))) & 1)) ^ v7 & 0x9DAECFF7)))(a1, a2, a3, v6, (1047 * (v7 & 0x9DAECFF7 ^ 0x340)) ^ 0x610);
}

uint64_t sub_21E048418(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v26;
  int v29;

  v15 = (a3 + a1 + a2);
  v16 = v15 + a9 - 0x38BEDCB65C0FCDB3 + 1;
  v17 = (a3 + a1) & 0xF;
  v18 = v17 - v15;
  v19 = v11 + v18;
  v20 = v17 + v11 + 1;
  v21 = v18 + v10 + 2;
  v22 = v17 + v10 + 3;
  v23 = v18 + v9 + 4;
  v24 = v9 + v17 + ((5 * (v12 ^ 0xE54) - 1989028534) & 0x768E27F7 ^ 0x792);
  v26 = v14 < v20 && v19 < v16;
  if (v14 < v22 && v21 < v16)
    v26 = 1;
  v29 = v23 < v16 && v14 < v24 || v26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (v12 | (8 * (v29 ^ 1)))) - 4))();
}

uint64_t sub_21E0484DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  unsigned int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((4 * (((a6 + 116) ^ (v6 < (a6 ^ 0x787))) & 1)) & 0xBF | ((((a6 + 116) ^ (v6 < (a6 ^ 0x787))) & 1) << 6)) ^ a6)))();
}

uint64_t sub_21E048510(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  unsigned int v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16x4_t v32;
  int8x16x4_t v33;

  v32.val[1].i64[0] = ((_BYTE)v25 + 4) & 0xF;
  v32.val[1].i64[1] = ((_BYTE)v25 + 3) & 0xF;
  v32.val[2].i64[0] = ((_BYTE)v25 + 2) & 0xF;
  v32.val[2].i64[1] = ((_BYTE)v25 + 1) & 0xF;
  v32.val[3].i64[0] = v25 & 0xF;
  v32.val[3].i64[1] = ((_BYTE)v25 - 1) & 0xF;
  v27 = a3 + a1 + a2;
  v28.i64[0] = 0x8181818181818181;
  v28.i64[1] = 0x8181818181818181;
  v32.val[0].i64[0] = v27 & 0xF;
  v32.val[0].i64[1] = ((_BYTE)v25 + 5) & 0xF;
  v29.i64[0] = vqtbl4q_s8(v32, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v33.val[0].i64[1] = ((_BYTE)v25 + 13) & 0xF;
  v33.val[1].i64[1] = ((_BYTE)v25 + 11) & 0xF;
  v33.val[2].i64[1] = (v25 + 9) & 0xF;
  v33.val[3].i64[1] = ((_BYTE)v25 + 7) & 0xF;
  v33.val[0].i64[0] = ((_BYTE)v25 + 14) & 0xF;
  v33.val[1].i64[0] = ((_BYTE)v25 + 12) & 0xF;
  v33.val[2].i64[0] = ((_BYTE)v25 + 10) & 0xF;
  v33.val[3].i64[0] = ((_BYTE)v25 + 8) & 0xF;
  v29.i64[1] = vqtbl4q_s8(v33, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v30 = vrev64q_s8(vmulq_s8(v29, v28));
  *(int8x16_t *)(a19 - 15 + v27) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v24 + v32.val[0].i64[0] - 15), *(int8x16_t *)(a19 - 15 + v27)), *(int8x16_t *)(v32.val[0].i64[0] + v23 - 13)), *(int8x16_t *)(2 * (a6 ^ 0x64Du) + v32.val[0].i64[0] + v22 - 959)), vextq_s8(v30, v30, 8uLL));
  return (*(uint64_t (**)(void))(a22 + 8 * ((802 * ((v26 & 0xFFFFFFF0) == 16)) | a6 ^ 0xF0Fu)))();
}

void sub_21E048678()
{
  JUMPOUT(0x21E048600);
}

uint64_t sub_21E048684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, _BYTE *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  int v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  int v29;
  char *v30;
  int v31;
  int v32;
  char *v33;
  char *v34;
  unsigned int v35;
  unsigned int v36;
  char v37;
  unsigned int v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  unint64_t v46;
  char v47;
  unsigned int v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  unsigned __int8 v64;
  int v65;
  uint64_t v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char *v74;
  int v75;
  char *v76;
  int v77;
  unsigned int v78;
  char *v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  unint64_t v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  char *v153;
  int v154;
  int v155;
  int v156;
  char *v157;
  uint64_t v158;
  int v159;
  int v160;
  int v161;
  int v162;
  unsigned __int8 v163;
  int v164;
  int v165;
  unsigned int v166;
  char *v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  BOOL v172;
  unsigned int v173;
  int v174;
  int v175;
  uint64_t v176;
  char *v177;
  int v178;
  int v179;
  uint64_t v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  char v199;
  char v200;
  char v201;
  int v202;
  unsigned __int8 v203;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  int v213;
  uint64_t v214;
  int v215;
  char v216;
  uint64_t v217;

  v27 = (v24 + 1866566073) & 0x90BE7E7D;
  v28 = *(unsigned __int8 *)(v26 - 108);
  v29 = ((v27 ^ 0xFFFFFFED) + (v28 ^ 0xFFFFFF8D)) ^ v28 ^ 0xFFFFFFC5;
  v30 = (char *)*(&off_24E21C7C0 + v24 - 15) - 4;
  v31 = ((-(v28 ^ 0xC5) >> 3) - 32 * (v28 ^ 0xFFFFFFC5)) ^ ((32 * v29) | (v29 >> 3)) ^ 0xFFFFFFC3;
  LODWORD(v28) = v30[v28 ^ 0xF0]
               - (v28 ^ 0xFFFFFF8D)
               + (((v31 >> 5) | (8 * v31)) ^ 0xE1)
               - 89;
  v32 = (351162296 - (*(_BYTE *)(v26 - 99) & 0x10)) ^ *(_BYTE *)(v26 - 99) & 0xEF;
  v33 = (char *)*(&off_24E21C7C0 + v24 - 89) - 4;
  v34 = (char *)*(&off_24E21C7C0 + v24 - 482) - 4;
  v35 = v34[(*(unsigned __int8 *)(v26 - 97) - ((2 * *(unsigned __int8 *)(v26 - 97)) & 0x12Au) + 149) ^ 0xC9] ^ 0xFFFFFFF7;
  v36 = v35 - ((2 * v35 + 38) & 0x66);
  v37 = v36 - 122;
  v38 = (((121 - v36) >> 7) & 1 | 0x16) ^ (((v36 - 122) & 0xF8) >> 3);
  v39 = ((v33[v32 ^ 0x14EE4F96] ^ v32 ^ 0x4A ^ ((v32 ^ 0x4A) - ((2 * (v32 ^ 0x4A) + 8) & 0x22) + 53) ^ 0xB8) << 16) | (((v30[*(unsigned __int8 *)(v26 - 100) ^ 0xD1] - 90) ^ 4) << 24) | ((v38 - ((2 * v38) & 0xE7) - 77) ^ v37);
  v40 = *(unsigned __int8 *)(v26 - 110);
  v41 = (char *)*(&off_24E21C7C0 + v24 - 474) - 4;
  v42 = *(unsigned __int8 *)(v26 - 98);
  LODWORD(v42) = v39 | ((v41[v42 ^ 0x42] ^ ((v42 ^ 0x4E)
                                                                            + (v42 ^ 0x17)
                                                                            - ((2 * ((v42 ^ 0x4E) + (v42 ^ 0x17))) & 0xA4)
                                                                            + 82) ^ 0x4C) << 8);
  v43 = v41[v40 ^ 0x6A] ^ ((v40 ^ 0x3F)
                                                           + (v40 ^ 0x66)
                                                           - ((2 * ((v40 ^ 0x3F) + (v40 ^ 0x66))) & 0xA4)
                                                           + 82) ^ 0xC8;
  LOBYTE(v40) = v34[*(unsigned __int8 *)(v26 - 105) ^ 0x88] ^ 0xF7;
  LOBYTE(v40) = v40 + (~(2 * v40 + 38) | 0x85) + 17;
  v44 = *(unsigned __int8 *)(v26 - 106);
  v45 = (v40 >> 3) ^ (v40 >> 7);
  LODWORD(v28) = (((v45 ^ 7) + ((2 * ((v45 ^ 7 | 0x7D) ^ v45)) ^ 0xB) + 62) ^ v40) | ((v28 ^ 0xFFFFFFEF) << 24) | ((v41[v44 ^ 0x23] ^ ((v44 ^ 0x2F) + (v44 ^ 0x76) - ((2 * ((v44 ^ 0x2F) + (v44 ^ 0x76))) & 0xA4) + 82) ^ 0x40) << 8);
  LODWORD(v46) = __ROR4__(*(unsigned __int8 *)(v26 - 101), 6) ^ 0xC9B3417A;
  HIDWORD(v46) = v46;
  v47 = v34[(v46 >> 26) ^ 0x6CD05ECCLL] ^ 0xF7;
  LODWORD(v40) = (((v30[*(unsigned __int8 *)(v26 - 104) ^ 0x10] + 94) ^ 0xFFFFFFE3) << 24) | (((*(_BYTE *)(v26 - 103) ^ ((*(_BYTE *)(v26 - 103) ^ 0x36) - ((2 * (*(_BYTE *)(v26 - 103) ^ 0x36) + 8) & 0x22) + 53)) ^ 0x9A ^ v33[*(unsigned __int8 *)(v26 - 103) ^ 0xEALL]) << 16) | ((v47 + ((2 * v47 - 90) & 0x80) - 109) ^ (((v47 + ((2 * v47 - 90) & 0x80) - 109) & 0xF8) >> 3) ^ (((108 - (v47 + ((2 * v47 - 90) & 0x80))) & 0x80) >> 7)) ^ 0xD8;
  v208 = v34;
  v48 = (v34[*(unsigned __int8 *)(v26 - 109) ^ 0xD7] ^ 0xFFFFFFF7)
      - ((2 * (v34[*(unsigned __int8 *)(v26 - 109) ^ 0xD7] ^ 0xF7) + 38) & 0x20);
  v49 = v48 + 99;
  v50 = (((-100 - v48) >> 7) & 1 | 0x12) ^ (((v48 + 99) & 0xF8) >> 3);
  v51 = *(unsigned __int8 *)(v26 - 102);
  v207 = v41;
  v210 = v30;
  v209 = v33;
  v215 = (v42 - 1207959552) ^ 0xF68EE1F1;
  v213 = (v28 & 0xFF00FFFF | ((v33[*(unsigned __int8 *)(v26 - 107) ^ 0xC2] ^ *(_BYTE *)(v26 - 107) ^ 0x1E ^ ((*(_BYTE *)(v26 - 107) ^ 0x1E) - ((2 * (*(_BYTE *)(v26 - 107) ^ 0x1E) + 8) & 0x22) + 53) ^ 0x5C) << 16)) ^ 0xA90D0FC;
  LODWORD(v34) = (v40 | ((v41[v51 ^ 0x88] ^ ((v51 ^ 0xDD)
                                                                             + (v51 ^ 0x84)
                                                                             - ((2 * ((v51 ^ 0xDD) + (v51 ^ 0x84))) & 0xA4)
                                                                             + 82) ^ 0xC3) << 8)) ^ 0x98B16BBC;
  HIDWORD(v206) = v23 + 16781699;
  v52 = ((((v50 - ((2 * v50) & 0x20) - 112) ^ v49) | (v43 << 8)) & 0xFF00FFFF | (((v30[*(unsigned __int8 *)(v26 - 112) ^ 0xDCLL]
                                                                                                  + 94) ^ 0xCE) << 24) | ((v33[*(unsigned __int8 *)(v26 - 111) ^ 0xFCLL] ^ *(_BYTE *)(v26 - 111) ^ 0x20 ^ ((*(_BYTE *)(v26 - 111) ^ 0x20) - ((2 * *(_BYTE *)(v26 - 111) + 8) & 0x22) + 53) ^ 0x41) << 16)) ^ 0x88BD221F;
  LODWORD(v206) = v27 ^ 0x877;
  HIDWORD(v205) = v27 ^ 0xAF4;
  LODWORD(v205) = v27 ^ 0xA51;
  *(_DWORD *)(v26 - 120) = v27;
  HIDWORD(a12) = v27 ^ 0xB60;
  HIDWORD(a20) = 0;
  LODWORD(v33) = *(_DWORD *)(v26 - 120);
  *(_QWORD *)(v26 - 136) = 14;
  v53 = v25[14];
  v211 = ((_DWORD)v33 - 2637) | 0xC00u;
  v54 = (v211 ^ 0xFFFFF3FA) & 0x99F414D5 ^ 0x99F414DD;
  *(_QWORD *)(v26 - 144) = v54;
  v55 = (v41[v53 ^ 0xE0] ^ 0x3D ^ ((v53 ^ 0xB5)
                                                                   + (v53 ^ 0xEC)
                                                                   - ((2 * ((v53 ^ 0xB5) + (v53 ^ 0xEC))) & 0xA4)
                                                                   + 82)) << 8;
  LOBYTE(v53) = v25[v54] ^ ((v25[v54] ^ 0x52) + 36) ^ 0xB0 ^ v209[v25[v54] ^ 0x8ELL];
  v56 = *v25;
  v57 = v55 & 0xFF00FFFF | (v53 << 16);
  *(_QWORD *)(v26 - 168) = 5;
  v58 = v25[5];
  *(_QWORD *)(v26 - 152) = 2;
  v59 = v25[2];
  LODWORD(v42) = ((v58 ^ v209[v58 ^ 0x42] ^ ((v58 ^ 0x9E)
                                                            - 2 * (((v58 ^ 0x9E) + 4) & 0x13 ^ (v58 ^ 0x9E) & 2)
                                                            + 53)) ^ 0x85) << 16;
  LODWORD(v58) = (v30[v56 ^ 0xBA] + 94) ^ 0x71;
  LODWORD(v56) = v41[v59 ^ 0xE6] ^ 0xC9 ^ ((v59 ^ 0xB3)
                                                                           + (v59 ^ 0xEA)
                                                                           - ((2 * ((v59 ^ 0xB3) + (v59 ^ 0xEA))) & 0xA4)
                                                                           + 82);
  *(_QWORD *)(v26 - 128) = 1;
  v60 = ((_DWORD)v58 << 24) | ((_DWORD)v56 << 8);
  v61 = v25[1];
  LOBYTE(v56) = v61 ^ 0xC2;
  LOBYTE(v61) = v209[v61 ^ 0x1E];
  *(_QWORD *)(v26 - 176) = 11;
  v62 = v60 & 0xFF00FFFF | ((v61 ^ v56 ^ (v56 - ((2 * v56 + 8) & 0x22) + 53) ^ 0x5A) << 16);
  LOBYTE(v61) = v208[v25[11] ^ 0x5DLL];
  LOBYTE(v61) = (v61 ^ 0xF7) - ((2 * (v61 ^ 0xF7) - 90) & 0xB4);
  LOBYTE(v56) = v61 - 83;
  v63 = v25[6];
  LODWORD(v61) = ((v61 - 83) >> 3) ^ (((82 - v61) & 0x80) >> 7);
  *(_QWORD *)(v26 - 160) = 8;
  v64 = ((v61 ^ 0x1B) + ((2 * ((v61 ^ 0x1B | 0x7A) ^ v61)) ^ 0x3D) - 37) ^ v56;
  v65 = ((v30[v25[8] ^ 3] + 94) ^ 0x6B) << 24;
  LODWORD(v56) = v42 | ((v41[v63 ^ 0xF6] ^ 0x2C ^ ((v63 ^ 0xFA)
                                                                                   + (v63 ^ 0xA3)
                                                                                   - ((2 * ((v63 ^ 0xFA) + (v63 ^ 0xA3))) & 0xA4)
                                                                                   + 82)) << 8);
  LOBYTE(v42) = v208[v25[15] ^ 0xC3] ^ 0xF7;
  LOBYTE(v42) = v42 - ((2 * v42 - 90) & 0x96);
  LOBYTE(v63) = v42 - 98;
  LOBYTE(v42) = ((v42 - 98) >> 3) ^ (((97 - v42) & 0x80) >> 7) ^ 0x19;
  v66 = v25[9];
  v67 = v57 & 0xFFFFFF00 | ((v42 - 2 * (v42 & 0xF ^ (v63 >> 3) & 4) - 53) ^ v63);
  *(_QWORD *)(v26 - 184) = 4;
  v68 = v65 & 0xFF00FFFF | (((v209[v66 ^ 0x9A] ^ v66 ^ 0x46 ^ ((v66 ^ 0x46)
                                                                              + (~(2 * (v66 ^ 0x46) + 8) | 0xDD)
                                                                              + 54)) ^ 0x78) << 16);
  LODWORD(v42) = v30[v25[4] ^ 0xB1];
  *(_QWORD *)(v26 - 192) = 7;
  LODWORD(v42) = v42 - ((2 * v42 - 68) & 0xFFFFFFD2) - 57;
  LODWORD(v56) = v56 | ((((((_DWORD)v42 - ((2 * (_DWORD)v42) & 0x1A) + 13) ^ 0xD1)
                        + (((_DWORD)v42 - ((2 * (_DWORD)v42) & 0x1A) + 13) & 0xDC ^ 0x2F)
                        + 1) | ((_DWORD)v42 - ((2 * (_DWORD)v42) & 0x1A) + 13) ^ 0xD) << 24);
  v216 = v208[v25[7] ^ 0x7CLL];
  LOBYTE(v42) = (~(2 * v216) & 0xA6) + (v216 ^ 0x24);
  LOBYTE(v42) = (v42 ^ 0x80) - ((2 * v42) & 0xF3) - 7;
  LODWORD(v63) = (v42 >> 3) ^ (v42 >> 7);
  LODWORD(v56) = v56 & 0xFFFFFF00 | (((v63 ^ 0xF) + ((2 * ((v63 ^ 0xF | 0x79) ^ v63)) ^ 0x13) + 122) ^ v42);
  v69 = v25[12];
  LODWORD(v63) = ((v69 ^ 0x62) - ((2 * (v69 ^ 0x62) - 110) & 0xFFFFFF87) + 12) ^ v69 ^ 0x16;
  LODWORD(v63) = v63 + (v69 ^ 0x2A) + 1 - 2 * (v63 & ((v69 ^ 0x2A) + 1));
  v70 = v67 | (((v30[v69 ^ 0xE0]
               - (((_DWORD)v63 - 2 * (((_DWORD)v63 + 72) & 0x47 ^ v63 & 4) + 11) ^ v69 ^ 0x16)
               - 90) ^ 0xFA) << 24);
  v71 = v25[10];
  LOBYTE(v28) = v208[v25[3] ^ 0x11];
  LOBYTE(v28) = (~(2 * v28) & 0xA6) + (v28 ^ 0x24);
  LODWORD(v71) = v68 & 0xFFFFFF00 | ((v41[v71 ^ 0x6C] ^ ((v71 ^ 0x39)
                                                                                         + (v71 ^ 0x60)
                                                                                         - ((2
                                                                                           * ((v71 ^ 0x39) + (v71 ^ 0x60))) & 0xA4)
                                                                                         + 82) ^ 0x3C) << 8) | v64;
  LOBYTE(v59) = v28 - 2 * (v28 & 0x3F) + 63;
  LODWORD(v28) = (v71 - 1733203113 - 2 * (v71 & 0x18B16B5F ^ v64 & 8)) ^ v34;
  LODWORD(v63) = (v62 - 2000870881 - ((2 * v62) & 0x117A4400) + 21) ^ v52;
  LODWORD(v71) = ((63 - ((v59 >> 3) ^ (v59 >> 7) ^ 7)) ^ v59) ^ v63;
  LODWORD(v56) = v56 ^ v213;
  v72 = v70 ^ v215;
  v73 = (uint64_t)*(&off_24E21C7C0 + (int)v33 - 2394);
  v74 = (char *)*(&off_24E21C7C0 + (int)v206) - 12;
  v75 = *(_DWORD *)&v74[4 * (BYTE2(v56) ^ 0x97)] - 898890286;
  v76 = (char *)*(&off_24E21C7C0 + (int)v33 - 2412) - 4;
  v77 = *(_DWORD *)&v76[4 * (BYTE1(v28) ^ 0x23)] ^ 0x4C9EA5D5;
  v78 = v72 ^ 0xBF197D5C;
  v79 = (char *)*(&off_24E21C7C0 + SHIDWORD(v205)) - 8;
  LODWORD(v51) = (422954520 * v75) ^ v75 ^ v77 ^ (*(_DWORD *)&v79[4 * (v72 ^ 2)] - 460667085) ^ ((16 * v77) | 0x16F16D20) ^ (*(_DWORD *)(v73 + 4 * (((v71 ^ 0xB4F6BEED) >> 24) ^ 0x7B)) + (((v71 ^ 0xB4F6BEED) >> 24) ^ 0x30ACA89E) - 548089369);
  v80 = *(_DWORD *)&v74[4 * (BYTE2(v28) ^ 0x4C)] - 898890286;
  v81 = *(_DWORD *)&v76[4 * (BYTE1(v72) ^ 0xBA)] ^ 0x4C9EA5D5;
  v82 = (422954520 * v80) ^ v80 ^ v81 ^ ((16 * v81) | 0x16F16D20) ^ (*(_DWORD *)&v79[4
                                                                                   * (((63 - ((v59 >> 3) ^ (v59 >> 7) ^ 7)) ^ v59 ^ v63) ^ 0xB3)]
                                                                   - 460667085) ^ (*(_DWORD *)(v73
                                                                                             + 4 * (BYTE3(v56) ^ 0x2A))
                                                                                 + (BYTE3(v56) ^ 0x30ACA8CF)
                                                                                 - 548089369);
  v83 = *(_DWORD *)&v74[4 * (BYTE2(v72) ^ 0x5F)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v71) ^ 0xBE)] ^ 0x4C9EA5D5;
  v84 = v83 ^ (*(_DWORD *)(v73 + 4 * (BYTE3(v28) ^ 0x9F)) + (BYTE3(v28) ^ 0x30ACA87A) - 548089369) ^ (422954520 * v83) ^ v59 ^ (*(_DWORD *)&v79[4 * (v56 ^ 0x96)] - 460667085) ^ ((16 * v59) | 0x16F16D20);
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v63) ^ 0xB0)] - 898890286;
  LODWORD(v56) = *(_DWORD *)&v76[4 * (BYTE1(v56) ^ 0x63)];
  LODWORD(v56) = (422954520 * v63) ^ v63 ^ v56 ^ (*(_DWORD *)(v73 + 4 * (HIBYTE(v78) ^ 0x7B))
                                                + (HIBYTE(v78) ^ 0x30ACA89E)
                                                - 548089369) ^ (16 * v56) & 0xE90E92D0 ^ (*(_DWORD *)&v79[4 * (v28 ^ 0x56)]
                                                                                        - 460667085);
  LODWORD(v28) = *(_DWORD *)&v79[4 * (v56 ^ 0x10)];
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v82) ^ 0xD3)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v84) ^ 0xF9)];
  LODWORD(v71) = (422954520 * v63) ^ v63 ^ (16 * v59) & 0xE90E92D0 ^ (*(_DWORD *)(v73 + 4 * (BYTE3(v51) ^ 0xF))
                                                                    + (BYTE3(v51) ^ 0x30ACA8EA)
                                                                    - 548089369) ^ (((2 * v28 + 1271741180) & 0x7D48536A)
                                                                                  + ((v28 - 1511613058) ^ 0x3EA429B5));
  LODWORD(v28) = ((v71 ^ 0xE10C9250) + 789958629 - 2 * ((v71 ^ 0xE10C9250) & 0x2F15CFE7 ^ v71 & 2)) ^ v59;
  LODWORD(v63) = *(_DWORD *)&v79[4 * (v51 ^ 0x8D)];
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v84) ^ 8)] - 898890286;
  v85 = *(_DWORD *)&v76[4 * (BYTE1(v56) ^ 0x37)] ^ 0x4C9EA5D5;
  v86 = (422954520 * v59) ^ v59 ^ ((HIBYTE(v82) ^ 0x30ACA8AA) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v82) ^ 0x4F))) ^ v85 ^ ((16 * v85) | 0x16F16D20) ^ (((2 * v63 + 1271741180) & 0x7D48536A) + ((v63 - 1511613058) ^ 0x3EA429B5));
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v56) ^ 0xA)] - 898890286;
  LODWORD(v63) = (422954520 * v59) ^ v59 ^ ((((v84 ^ 0xEF4E3EDE) >> 24) ^ 0x30ACA89E)
                                          - 548089369
                                          + *(_DWORD *)(v73 + 4 * (((v84 ^ 0xEF4E3EDE) >> 24) ^ 0x7B)));
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v51) ^ 0xB7)] ^ 0x4C9EA5D5;
  v87 = v63 ^ v59 ^ (*(_DWORD *)&v79[4 * (v82 ^ 0xBB)] - 460667085) ^ ((16 * v59) | 0x16F16D20);
  LODWORD(v63) = *(_DWORD *)&v76[4 * (BYTE1(v82) ^ 0xFB)];
  HIDWORD(v46) = v63 ^ 0x55555555;
  LODWORD(v46) = v63 ^ 0x4C9EA5C0;
  LODWORD(v59) = (v46 >> 5) ^ 0x21D60E59 ^ ((v63 >> 1) & 0x7487496 | (~(_DWORD)v63 << 31));
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v51) ^ 0x2E)] - 898890286;
  LODWORD(v56) = (422954520 * v63) ^ v63 ^ ((BYTE3(v56) ^ 0x30ACA8FC)
                                          - 548089369
                                          + *(_DWORD *)(v73 + 4 * (BYTE3(v56) ^ 0x19))) ^ (*(_DWORD *)&v79[4 * (v84 ^ 0x80)]
                                                                                           - 460667085) ^ (32 * v59);
  LODWORD(v71) = v56 ^ (v59 >> 27);
  BYTE1(v59) = BYTE1(v71) ^ 0xF;
  v88 = ((v71 ^ 0x67B90FCB) >> 24) + 292752943 - (((v71 ^ 0x67B90FCB) >> 23) & 0x5E);
  LOBYTE(v82) = ((unsigned __int16)(v87 ^ 0xC6C1) >> 8) - (((v87 ^ 0x5E05C6C1u) >> 7) & 0x8E) - 57;
  v89 = *(_DWORD *)&v74[4 * (BYTE2(v86) ^ 0xA2)] - 898890286;
  v90 = *(_DWORD *)&v76[4 * ((((v82 ^ 0xC9) + (v82 & 0xE ^ 0xF7) + 1) | v82 & 0xE ^ 6) ^ 0xC7)] ^ 0x4C9EA5D5;
  v91 = (422954520 * v89) ^ v89 ^ (*(_DWORD *)(v73 + 4 * (BYTE3(v28) ^ 0xA3)) + (BYTE3(v28) ^ 0x30ACA846) - 548089369) ^ v90 ^ (*(_DWORD *)&v79[4 * (v71 ^ 0x95)] - 460667085) ^ ((16 * v90) | 0x16F16D20);
  LODWORD(v71) = *(_DWORD *)&v74[4 * (BYTE2(v87) ^ 0x43)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v59) ^ 0xC7)] ^ 0x4C9EA5D5;
  v92 = v71 ^ ((HIBYTE(v86) ^ 0x30ACA802) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v86) ^ 0xE7))) ^ (422954520 * v71) ^ v59 ^ (*(_DWORD *)&v79[4 * (v28 ^ 0xB4)] - 460667085) ^ ((16 * v59) | 0x16F16D20);
  LODWORD(v56) = *(_DWORD *)&v74[4 * ~WORD1(v56)] - 898890286;
  LODWORD(v63) = *(_DWORD *)&v76[4 * (BYTE1(v28) ^ 0x86)];
  LODWORD(v71) = v56 ^ ((((v87 ^ 0x5E05C6C1u) >> 24) ^ 0x30ACA89E)
                      - 548089369
                      + *(_DWORD *)(v73 + 4 * (((v87 ^ 0x5E05C6C1u) >> 24) ^ 0x7B))) ^ v63 ^ (422954520 * v56);
  LODWORD(v56) = ((16 * v63) & 0xE90E92D0 ^ 0xDFFB7D70)
               - ((2 * ((16 * v63) & 0xE90E92D0 ^ 0xDFFB7D70)) & 0x901D00A0)
               - 953272268;
  LODWORD(v63) = v71 ^ 0x7B8F925E ^ v56;
  LODWORD(v71) = v71 ^ 0x4C9EA5D5;
  LODWORD(v63) = (v71 + v63 + 1) ^ ((v56 ^ 0x3711378B) + 1);
  LODWORD(v56) = (((v63 - ((2 * v63) & 0x91DD90E8) - 923875212) ^ v56) + v71) ^ (*(_DWORD *)&v79[4
                                                                                               * (v86 ^ 0xE4)]
                                                                               - 460667085);
  LODWORD(v28) = *(_DWORD *)&v74[4 * ((BYTE2(v28) ^ 0xA2) - ((2 * (WORD1(v28) ^ 0xD8A2)) & 0x8C)) + 280] - 898890286;
  LODWORD(v63) = *(_DWORD *)&v76[4 * (BYTE1(v86) ^ 0x68)] ^ 0x4C9EA5D5;
  v93 = v28 ^ (*(_DWORD *)(v73 + 4 * (v88 ^ 0x11730E54)) + (v88 ^ 0x21DFA6B1) - 548089369) ^ v63 ^ (*(_DWORD *)&v79[4 * (v87 ^ 0x9F)] - 460667085) ^ ((16 * v63) | 0x16F16D20) ^ (422954520 * v28);
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v92) ^ 0xF)] - 898890286;
  LODWORD(v71) = v63 ^ ((HIBYTE(v91) ^ 0x30ACA87C) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v91) ^ 0x99))) ^ (422954520 * v63);
  LODWORD(v63) = *(_DWORD *)&v76[4 * (BYTE1(v56) ^ 0x51)] ^ 0x4C9EA5D5;
  HIDWORD(v46) = v71 ^ v63 ^ ((16 * v63) | 0x16F16D20);
  LODWORD(v46) = HIDWORD(v46);
  LODWORD(v46) = (v46 >> 3) ^ __ROR4__(*(_DWORD *)&v79[4 * (v93 ^ 0x89)] - 460667085, 3);
  HIDWORD(v46) = v46;
  LODWORD(v71) = *(_DWORD *)(v73 + 4 * (HIBYTE(v92) ^ 0x28)) + 444669195;
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v56) ^ 0xA5)] - 898890286;
  v94 = *(_DWORD *)&v76[4 * (BYTE1(v93) ^ 0xBF)] ^ 0x4C9EA5D5;
  v95 = (422954520 * v59) ^ v59 ^ v94 ^ (*(_DWORD *)&v79[4 * (v91 ^ 0xD8)] - 460667085) ^ ((v71 ^ ((HIBYTE(v92) ^ 0x30ACA8CD) - 992758564)) + 2 * (v71 & ((HIBYTE(v92) ^ 0x30ACA8CD) - 992758564))) ^ ((16 * v94) | 0x16F16D20);
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v91) ^ 0x38)];
  v96 = *(_DWORD *)&v74[4 * (BYTE2(v93) ^ 0x89)] - 898890286;
  v97 = (16 * v59) & 0xE90E92D0 ^ v59 ^ v96 ^ (*(_DWORD *)&v79[4 * (v92 ^ 0xC7)] - 460667085) ^ (422954520 * v96) ^ (*(_DWORD *)(v73 + 4 * (BYTE3(v56) ^ 0x5B)) + (BYTE3(v56) ^ 0x30ACA8BE) - 548089369);
  LODWORD(v56) = ((2 * (v56 ^ 0xC4)) & 0x172) - (v56 ^ 0xC4) + 2374;
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v91) ^ 0x44)] - 898890286;
  v98 = *(_DWORD *)&v76[4 * (BYTE1(v92) ^ 0xC0)] ^ 0x4C9EA5D5;
  LODWORD(v71) = (422954520 * v59) ^ v59 ^ ((HIBYTE(v93) ^ 0x30ACA811)
                                          - 548089369
                                          + *(_DWORD *)(v73 + 4 * (HIBYTE(v93) ^ 0xF4))) ^ v98 ^ ((16 * v98) | 0x16F16D20) ^ (*(_DWORD *)&v79[4 * (((v56 ^ 0xFFFFF6DE) + (v56 ^ 0x97F) + 1) ^ 0xFFFFFFFC) + 4 * (v56 ^ 0x97F)] - 460667085);
  LODWORD(v56) = (v46 >> 29) - ((2 * (v46 >> 29)) & 0x7AFD01CC) + 1031700710;
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v95) ^ 0xFA)] - 898890286;
  v99 = *(_DWORD *)&v76[4 * (BYTE1(v97) ^ 0x9A)] ^ 0x4C9EA5D5;
  v100 = (422954520 * v59) ^ v59 ^ v99 ^ (*(_DWORD *)&v79[4 * (v71 ^ 0x8F)] - 460667085) ^ ((16 * v99) | 0x16F16D20) ^ ((BYTE3(v56) ^ 0x30ACA81B) - 548089369 + *(_DWORD *)(v73 + 4 * (BYTE3(v56) ^ 0xFE)));
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v97) ^ 0xD3)] - 898890286;
  LODWORD(v63) = v59 ^ ((HIBYTE(v95) ^ 0x30ACA858) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v95) ^ 0xBD))) ^ (422954520 * v59);
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v71) ^ 0x6D)] ^ 0x4C9EA5D5;
  v101 = v63 ^ v59 ^ ((16 * v59) | 0x16F16D20) ^ (*(_DWORD *)&v79[4
                                                                * (((v46 >> 29)
                                                                                   - ((2 * (v46 >> 29)) & 0xCC)
                                                                                   - 26) ^ 0x7F)]
                                                - 460667085);
  LODWORD(v71) = v71 ^ 0x69D6AAD1;
  LODWORD(v59) = *(_DWORD *)&v74[4 * BYTE2(v71)] - 898890286;
  v102 = *(_DWORD *)&v76[4 * (BYTE1(v56) ^ 0x53)];
  v103 = v59 ^ ((HIBYTE(v97) ^ 0x30ACA8C6) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v97) ^ 0x23))) ^ v102 ^ (422954520 * v59) ^ (16 * v102) & 0xE90E92D0 ^ (*(_DWORD *)&v79[4 * (v95 ^ 0xA5)] - 460667085);
  LODWORD(v56) = *(_DWORD *)&v74[4 * (BYTE2(v56) ^ 0x62)] - 898890286;
  LODWORD(v63) = *(_DWORD *)&v76[4 * (BYTE1(v95) ^ 0x83)] ^ 0x4C9EA5D5;
  LODWORD(v56) = v56 ^ ((BYTE3(v71) ^ 0x30ACA89E) - 548089369 + *(_DWORD *)(v73 + 4 * (BYTE3(v71) ^ 0x7B))) ^ v63 ^ (*(_DWORD *)&v79[4 * (v97 ^ 0x58)] - 460667085) ^ ((16 * v63) | 0x16F16D20) ^ (422954520 * v56);
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v101) ^ 0x46)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v103) ^ 0xED)];
  LODWORD(v71) = ((HIBYTE(v100) ^ 0x30ACA82E) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v100) ^ 0xCB))) ^ v63 ^ v59 ^ (16 * v59) & 0xE90E92D0 ^ (422954520 * v63);
  LODWORD(v63) = *(_DWORD *)&v79[4 * (v56 ^ 0x80)] - 460667085;
  LODWORD(v59) = (v63 + (v71 ^ 0x6C9A275A ^ v63) + 1) ^ ((v71 ^ 0x6C9A275A) + 1);
  v104 = (v71 ^ 0x878E8E98 ^ (v59 - ((2 * v59) & 0x29D6AC7A) + 350967357)) + v63;
  LODWORD(v63) = *(_DWORD *)&v74[4 * ((v103 ^ 0x2E7C2A0Fu) >> 16)] - 898890286;
  v105 = *(_DWORD *)&v76[4 * (BYTE1(v56) ^ 0xC8)] ^ 0x4C9EA5D5;
  v106 = (422954520 * v63) ^ v63 ^ v105 ^ ((HIBYTE(v101) ^ 0x30ACA8C5)
                                         - 548089369
                                         + *(_DWORD *)(v73 + 4 * (HIBYTE(v101) ^ 0x20))) ^ (*(_DWORD *)&v79[4 * (v100 ^ 0xAC)]
                                                                                            - 460667085) ^ ((16 * v105) | 0x16F16D20);
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v56) ^ 0x26)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v100) ^ 0xF4)] ^ 0x4C9EA5D5;
  v107 = (422954520 * v63) ^ v63 ^ ((((v103 ^ 0x2E7C2A0Fu) >> 24) ^ 0x30ACA89E)
                                  - 548089369
                                  + *(_DWORD *)(v73 + 4 * (((v103 ^ 0x2E7C2A0Fu) >> 24) ^ 0x7B))) ^ v59 ^ (*(_DWORD *)&v79[4 * (v101 ^ 0xF2)] - 460667085) ^ ((16 * v59) | 0x16F16D20);
  LODWORD(v71) = (BYTE3(v56) ^ 0x30ACA867) - 548089369 + *(_DWORD *)(v73 + 4 * (BYTE3(v56) ^ 0x82));
  LODWORD(v56) = *(_DWORD *)&v74[4 * (BYTE2(v100) ^ 0x55)] - 898890286;
  LODWORD(v63) = *(_DWORD *)&v76[4 * (BYTE1(v101) ^ 0xE7)];
  LODWORD(v63) = v56 ^ v63 ^ v71 ^ (422954520 * v56) ^ (16 * v63) & 0xE90E92D0 ^ (*(_DWORD *)&v79[4
                                                                                                * (v103 ^ 0x51)]
                                                                                - 460667085);
  LODWORD(v56) = *(_DWORD *)&v74[4 * (BYTE2(v106) ^ 0x79)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v107) ^ 0x4C)];
  v108 = (422954520 * v56) ^ v56 ^ v59 ^ (16 * v59) & 0xE90E92D0 ^ (*(_DWORD *)&v79[4 * (v63 ^ 0x7E)]
                                                                  - 460667085) ^ (*(_DWORD *)(v73
                                                                                            + 4
                                                                                            * (HIBYTE(v104) ^ 0xBA))
                                                                                + (HIBYTE(v104) ^ 0x30ACA85F)
                                                                                - 548089369);
  LODWORD(v56) = *(_DWORD *)&v74[4 * (BYTE2(v107) ^ 0x89)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v63) ^ 0xCC)] ^ 0x4C9EA5D5;
  v109 = v56 ^ ((HIBYTE(v106) ^ 0x30ACA829) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v106) ^ 0xCC))) ^ v59 ^ (422954520 * v56) ^ ((16 * v59) | 0x16F16D20) ^ (*(_DWORD *)&v79[4 * (v104 ^ 0xA6)] - 460667085);
  LODWORD(v56) = *(_DWORD *)&v76[4 * (BYTE1(v104) ^ 0x9E)];
  LODWORD(v56) = (16 * v56) & 0xE90E92D0 ^ v56;
  LODWORD(v59) = *(_DWORD *)&v74[4 * (BYTE2(v63) ^ 0x23)] - 898890286;
  LODWORD(v71) = ((HIBYTE(v107) ^ 0x30ACA8B9) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v107) ^ 0x5C))) ^ v59 ^ (422954520 * v59);
  v110 = ((v71 ^ 0x243006E4 ^ ((((v71 ^ 0x6C9A275A ^ v56) + (v56 ^ 0x9365D8A5) + 1) ^ -(int)v71)
                             + 607127268
                             - ((2 * (((v71 ^ 0x6C9A275A ^ v56) + (v56 ^ 0x9365D8A5) + 1) ^ -(int)v71)) & 0x48600DC8)))
        + (v56 ^ 0x9365D8A5)) ^ (*(_DWORD *)&v79[4 * (v106 ^ 0xAF)] - 460667085);
  LODWORD(v71) = (BYTE3(v63) ^ 0x30ACA8FE) - 548089369 + *(_DWORD *)(v73 + 4 * (BYTE3(v63) ^ 0x1B));
  LODWORD(v63) = *(_DWORD *)&v74[4 * (BYTE2(v104) ^ 0xD6)] - 898890286;
  LODWORD(v59) = *(_DWORD *)&v76[4 * (BYTE1(v106) ^ 0xE9)] ^ 0x4C9EA5D5;
  LODWORD(v59) = v63 ^ v71 ^ v59 ^ (*(_DWORD *)&v79[4 * (v107 ^ 0xA0)] - 460667085) ^ ((16 * v59) | 0x16F16D20) ^ (422954520 * v63);
  v111 = v108 ^ 0xF172A4AB;
  v112 = *(_DWORD *)&v74[4 * (BYTE2(v109) ^ 0xC1)];
  v113 = ((2 * v112 - 943406244) & 0xCD134848) + ((v112 - 471703122) ^ 0xE689A424);
  v114 = *(_DWORD *)&v76[4 * (BYTE1(v110) ^ 0xD9)];
  v115 = v114 ^ ((HIBYTE(v111) ^ 0x30ACA89E) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v111) ^ 0x7B))) ^ (*(_DWORD *)&v79[4 * (v59 ^ 0x7F)] - 460667085) ^ (16 * v114) & 0xE90E92D0 ^ v113 ^ (422954520 * v113);
  LODWORD(v71) = *(_DWORD *)&v74[4 * (BYTE2(v110) ^ 0xA1)] - 898890286;
  HIDWORD(v46) = (HIBYTE(v109) ^ 0x30ACA866) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v109) ^ 0x83));
  LODWORD(v46) = HIDWORD(v46);
  v116 = *(_DWORD *)&v76[4 * (BYTE1(v59) ^ 0x5D)];
  v117 = (*(_DWORD *)&v79[4 * (v108 ^ 0xF5)] - 460667085) ^ v116 ^ (16 * v116) & 0xE90E92D0 ^ __ROR4__((v46 >> 11) ^ __ROR4__((422954520 * v71) ^ v71, 11) ^ 0x95B687C0, 21);
  v118 = BYTE3(v59) ^ 0x178D140F;
  v119 = *(_DWORD *)&v74[4 * (BYTE2(v59) ^ 0xE)];
  if (v216 ^ 0xDB | v216 ^ 0x24)
    v120 = v118;
  else
    v120 = HIBYTE(v93) ^ 0x178D14AC;
  v121 = *(_DWORD *)&v76[4 * BYTE1(v111)] ^ 0x4C9EA5D5;
  v122 = (422954520 * (v119 - 898890286)) ^ (v119 - 898890286) ^ v121 ^ ((16 * v121) | 0x16F16D20) ^ (*(_DWORD *)(v73 + 4 * (HIBYTE(v110) ^ 0x89)) + (HIBYTE(v110) ^ 0x30ACA86C) - 548089369) ^ (*(_DWORD *)&v79[4 * (v109 ^ 4)] - 460667085);
  v123 = (v120 ^ 0x2721BCBD) - 548089369 + *(_DWORD *)(v73 + 4 * (v120 ^ 0x178D1458u));
  v124 = *(_DWORD *)&v74[4 * (BYTE2(v108) ^ 0x34)] - 898890286;
  v125 = *(_DWORD *)&v76[4 * (BYTE1(v109) ^ 5)] ^ 0x4C9EA5D5;
  HIDWORD(v126) = *(_DWORD *)&v79[4 * (v110 ^ 0x5F)] - 460667085;
  LODWORD(v126) = HIDWORD(v126);
  LODWORD(v126) = (v126 >> 25) ^ __ROR4__(v124 ^ (422954520 * v124) ^ v125 ^ v123 ^ ((16 * v125) | 0x16F16D20), 25) ^ 0x2635979E;
  HIDWORD(v126) = v126;
  v127 = *(_DWORD *)&v74[4 * (BYTE2(v117) ^ 0x59)];
  v128 = 422954520 * v127 - ((845909040 * v127 + 2050355040) & 0xA11016A0) - 1918696700;
  v127 -= 898890286;
  v129 = (v127 + (v127 ^ 0xAF77F4AB ^ v128) + 1) ^ ((v128 ^ 0xAF77F4AB) + 1);
  v130 = (v129 - ((2 * v129) & 0xA11016A8) + 1351093076) ^ v128;
  v131 = *(_DWORD *)&v76[4 * (BYTE1(v122) ^ 0x64)];
  v132 = (v126 >> 7) - ((2 * (v126 >> 7)) & 0x42D203F2) - 1586953735;
  v133 = (16 * v131) & 0xE90E92D0 ^ v131 ^ ((HIBYTE(v115) ^ 0x30ACA8F6)
                                          - 548089369
                                          + *(_DWORD *)(v73 + 4 * (HIBYTE(v115) ^ 0x13))) ^ (*(_DWORD *)&v79[4 * (((v126 >> 7) - ((2 * (v126 >> 7)) & 0xF2) - 7) ^ 0x6E)]
                                                                                             - 460667085) ^ (v130 + v127);
  v134 = ((v117 ^ 0x91F36CE) >> (v88 & 0x18 ^ 8) >> (v88 & 0x18 ^ 0x10));
  v135 = *(_DWORD *)&v74[4 * (BYTE2(v122) ^ 0x4A)] - 898890286;
  v136 = *(_DWORD *)&v76[4 * (BYTE1(v132) ^ 0xC3)] ^ 0x4C9EA5D5;
  v137 = ((v134 ^ 0x30ACA89E) - 548089369 + *(_DWORD *)(v73 + 4 * (v134 ^ 0x7Bu))) ^ v135 ^ (422954520 * v135) ^ v136 ^ (*(_DWORD *)&v79[4 * (v115 ^ 0xC2)] - 460667085) ^ ((16 * v136) | 0x16F16D20);
  v138 = *(_DWORD *)&v74[4 * (BYTE2(v132) ^ 0x88)] - 898890286;
  v139 = *(_DWORD *)&v76[4 * (BYTE1(v115) ^ 0x60)];
  v140 = v138 ^ ((HIBYTE(v122) ^ 0x30ACA86F) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v122) ^ 0x8A))) ^ v139 ^ (16 * v139) & 0xE90E92D0 ^ (*(_DWORD *)&v79[4 * (v117 ^ 0x90)] - 460667085);
  v141 = *(_DWORD *)&v74[4 * (BYTE2(v115) ^ 0x4F)];
  v142 = v140 ^ (422954520 * v138);
  v143 = v141 - 898890286;
  v144 = *(_DWORD *)&v76[4 * (BYTE1(v117) ^ 0xF1)] ^ 0x4C9EA5D5;
  v145 = ((HIBYTE(v132) ^ 0x30ACA8F3) - 548089369 + *(_DWORD *)(v73 + 4 * (HIBYTE(v132) ^ 0x16))) ^ v143 ^ (422954520 * v143) ^ v144 ^ ((16 * v144) | 0x16F16D20);
  v146 = *(_DWORD *)&v79[4 * (v122 ^ 0x3C)];
  LODWORD(v217) = (v145 & 0x40 ^ 0x7EFFEDCE) + 2 * (v145 & 0x40);
  HIDWORD(v217) = v146;
  v147 = v217 - 43518144;
  v148 = v145 & 0xFFFFFFBF;
  if ((((_DWORD)v217 - 2130701774) & (v146 - 460667085)) != 0)
    v147 = -77081892 - v217;
  v149 = (v146 + 1747116581 + v147) ^ v148;
  v150 = HIBYTE(v149) ^ 0x22A4BE43;
  v151 = v150 & 0x2801E62 ^ HIBYTE(v149) & 0x62;
  v152 = *(_DWORD *)(v26 - 120);
  v153 = (char *)*(&off_24E21C7C0 + v152 - 2073) - 12;
  v154 = *(_DWORD *)&v153[4 * (HIBYTE(v133) ^ 0x1C)];
  v155 = *(_DWORD *)&v153[4 * (HIBYTE(v137) ^ 0x8C)];
  HIDWORD(v212) = *(_DWORD *)&v153[4 * (HIBYTE(v142) ^ 0xC3)];
  v156 = (v150 & 0x2024A09D ^ HIBYTE(v149) & 0x9D | v151) ^ 0x81;
  LODWORD(v153) = (v156 + 855073529 - 2 * (v156 & 0x22A422FB ^ v151 & 2)) ^ *(_DWORD *)&v153[4 * (HIBYTE(v149) ^ 0x8D)];
  HIDWORD(v214) = HIWORD(v137) ^ 0x8C72;
  v157 = (char *)*(&off_24E21C7C0 + (int)v205) - 8;
  v158 = BYTE2(v137) ^ 0x72u;
  v159 = *(_DWORD *)&v157[4 * (BYTE2(v137) ^ 0x8D)];
  v160 = ((v142 ^ 0xCFB47A7F) >> 16);
  v161 = *(_DWORD *)&v157[4 * (v160 ^ 0xFF)];
  v162 = BYTE2(v149);
  LODWORD(v212) = *(_DWORD *)&v157[4 * (BYTE2(v149) ^ 0x6A)];
  v163 = v133 ^ 0xDB;
  v164 = ((v133 ^ 0x10FC33DB) >> 16);
  v165 = *(_DWORD *)&v157[4 * (v164 ^ 0xFF)];
  v166 = (_DWORD)v153 - 1793406649 + (~(2 * (_DWORD)v153) | 0xD5CA6D73);
  v167 = (char *)*(&off_24E21C7C0 + SHIDWORD(a12)) - 12;
  v168 = *(_DWORD *)&v167[4 * (BYTE1(v142) ^ 0x98)];
  v169 = *(_DWORD *)&v167[4 * (BYTE1(v149) ^ 0x79)];
  v170 = *(_DWORD *)&v167[4 * (BYTE1(v133) ^ 0xD1)];
  LODWORD(v167) = *(_DWORD *)&v167[4 * (BYTE1(v137) ^ 0xB4)];
  LODWORD(v153) = (2 * ((unsigned __int16)v167 & 0x1000)) ^ 0x2000 | (unsigned __int16)v167 & 0x1000;
  v171 = v167 ^ 0x401BBEA2;
  v172 = (((_DWORD)v153 - 4096) & (v171 >> 1)) == 0;
  v173 = v153 | 0x5896C4E6;
  v174 = 1486284006 - (_DWORD)v153;
  if (!v172)
    v173 = v174;
  v175 = v149;
  v176 = *(unsigned int *)(v26 - 120);
  v177 = (char *)*(&off_24E21C7C0 + v152 - 2061) - 8;
  v178 = *(_DWORD *)&v177[4 * (v175 ^ 0x14)];
  v179 = *(_DWORD *)&v177[4 * (v133 ^ 0x56)];
  HIDWORD(a23) = *(_DWORD *)&v177[4 * (v137 ^ 0x90)];
  LODWORD(v214) = ((v142 ^ 0x7F) + 722801704 - ((2 * (v142 ^ 0xCFB47A7F)) & 0x50)) ^ (v164 + 568772531) ^ *(_DWORD *)&v177[4 * (v142 ^ 0xF2)] ^ v171 & 0xFFFFEFFF ^ (((v171 >> 1) & 0x1F59B51D) - 1486279910 + v173) ^ v165 ^ v166;
  v180 = (uint64_t)*(&off_24E21C7C0 + (int)v176 - 2342);
  a19[15] = (*(_BYTE *)(v180 + ((v214 ^ v164) ^ 0x87)) + 52) ^ 0xB;
  v181 = (v158 - 1224634118 + ((2 * v158 + 3942) & 0x128C ^ 0xFDFA7FFF)) ^ v159;
  v182 = v178 ^ (v181 + 855073529 - ((2 * v181) & 0x65EEC5F2)) ^ v168 ^ 0x401BBEA2 ^ ((v168 ^ 0x401BBEA2u) >> 1) & 0x1F59B51D ^ ((v175 ^ 0x99) + 722801704 - ((2 * (v175 ^ 0x99)) & 0x50)) ^ v154;
  v183 = v160 ^ (v160 + 568772531) ^ v155 ^ v161 ^ 0xA7E43EAE ^ (v169 >> 1) & 0x1F59B51D;
  v184 = v169 ^ v163 ^ v179 ^ (v183 + 722801705 + (~(2 * v183) | 0xA9D5D7AF));
  v185 = (char *)*(&off_24E21C7C0 + (int)v176 - 2524) - 12;
  *a19 = (v185[HIBYTE(v182) ^ 0x68] + 1) ^ 0x2E;
  v186 = (uint64_t)*(&off_24E21C7C0 + (int)v176 - 2635);
  v187 = v186 - 8;
  a19[6] = ((BYTE1(v184) ^ 0x31)
          + (BYTE1(v184) ^ ((BYTE1(v184) ^ 0xCE) + 1) ^ 0x7A ^ ((BYTE1(v184) ^ 0x7C)
                                                              - ((2 * (BYTE1(v184) ^ 0x7C) + 102) & 0x68)
                                                              + 103))
          + *(_BYTE *)(v186 - 8 + (BYTE1(v184) ^ 0xC9))
          - 11) ^ 7;
  v188 = (uint64_t)*(&off_24E21C7C0 + (int)v176 - 2552);
  v189 = v188 - 8;
  a19[*(_QWORD *)(v26 - 168)] = ((BYTE2(v184) ^ 0xE1) - ((2 * (BYTE2(v184) ^ 0xE1) + 24) & 0xEF) - 125) ^ 0xDE ^ *(_BYTE *)(v188 - 8 + (BYTE2(v184) ^ 0xC9));
  v190 = v162 ^ 0x95;
  v191 = ((v162 ^ 0x95) - 1224634118 + ((2 * (v162 ^ 0x95) + 3942) & 0x128C ^ 0xFDFA7FFF)) ^ v212;
  v192 = v137 & 0xFE ^ ((v137 | 0xFFFFFFFE) - 1899875814) ^ 0x1C;
  v193 = HIDWORD(v212) ^ (v192 + 722801705 + ((2 * v192) & 0x50 ^ 0xEBFFDFFF)) ^ HIDWORD(a23) ^ v170 ^ (v191 + 855073529 - ((2 * v191) & 0x65EEC5F2)) ^ (v170 >> 1) & 0x1F59B51D;
  LOBYTE(v192) = BYTE4(v212) ^ (v192 + 41 + ~((2 * v192) & 0x50)) ^ BYTE4(a23) ^ v170 ^ (v191 - 7 - ((2 * v191) & 0xF2)) ^ (v170 >> 1) & 0x1D ^ v190;
  v194 = v193 ^ v190 ^ 0x46759799;
  LOBYTE(v190) = *(_BYTE *)(v188 - 8 + (BYTE2(v194) ^ 0xCDLL)) ^ 0x2A;
  a19[9] = v190 + (BYTE2(v194) ^ 0xE5) + 12 - 2 * (v190 & ((BYTE2(v194) ^ 0xE5) + 12));
  a19[*(_QWORD *)(v26 - 176)] = (*(_BYTE *)(v180 + (v192 ^ 0x7DLL)) + 52) ^ 0xD9;
  a19[*(_QWORD *)(v26 - 152)] = ((BYTE1(v182) ^ 0xD)
                               + (BYTE1(v182) ^ 0x40)
                               + *(_BYTE *)(v186 - 8 + (BYTE1(v182) ^ 0xB8))
                               - 89) ^ 0x8E;
  LOBYTE(v193) = v185[HIBYTE(v193) ^ 0x53];
  v195 = v214 ^ v164 ^ 0x7C691753;
  a19[*(_QWORD *)(v26 - 160)] = ((v193 + 1) ^ v193 ^ (((v193 + 1) ^ 0xBF) + 64)) - 65;
  v196 = BYTE2(v195) ^ 0xAA;
  v197 = ~HIWORD(v195) & 0x28;
  v198 = (BYTE2(v195) | v197) ^ 0x82;
  if (HIDWORD(v217) - (_DWORD)v217 == -1670034689)
    v198 = 40;
  v199 = *(_BYTE *)(v189 + ((v198 | v196) ^ v197));
  v200 = (v196 - ((2 * v196 + 24) & 0xC6) + 111) ^ 0x63;
  v201 = (v200 - ((v200 - ((2 * v200) & 0xEF) + 119) ^ v199)) ^ ((v199 ^ 0x88) + 1);
  a19[*(_QWORD *)(v26 - 144)] = (((v201 - ((2 * v201) & 0xEF) + 119) ^ v199) + v200) ^ 0x24;
  a19[12] = (v185[BYTE3(v214) ^ 0x7ALL] + 1) ^ 0x19;
  a19[*(_QWORD *)(v26 - 184)] = (v185[HIBYTE(v184) ^ 0x28] + 1) ^ 0x1D;
  a19[*(_QWORD *)(v26 - 136)] = (((BYTE1(v195) - ((v195 >> 7) & 0xFC) + 126) ^ 0x15)
                               + ((BYTE1(v195) - ((v195 >> 7) & 0xFC) + 126) ^ 0x58)
                               + *(_BYTE *)(v187 + ((BYTE1(v195) - ((v195 >> 7) & 0xFC) + 126) ^ 0xA0))
                               - 89) ^ 0xD4;
  if ((v184 & 4) != 0)
    v202 = 4;
  else
    v202 = -4;
  a19[*(_QWORD *)(v26 - 192)] = (*(_BYTE *)(v180 + ((v202 + (v184 ^ 0xC7u)) ^ 0xD2)) - 76) ^ 0x46;
  a19[3] = (*(_BYTE *)(v180 + ((v182 ^ (v158 - ((2 * BYTE4(v214)) & 0x2C) - 106)) ^ 0xC1)) + 52) ^ 0x65;
  v203 = (~(v194 >> 7) | 0x73) + BYTE1(v194) + 71;
  a19[10] = ((v203 ^ 0x74) + (v203 ^ 0x39) + *(_BYTE *)(v187 + (v203 ^ 0xC1)) - 89) ^ 0xB;
  a19[*(_QWORD *)(v26 - 128)] = ((BYTE2(v182) ^ 0x86) - ((2 * (BYTE2(v182) ^ 0x86) + 24) & 0xEF) - 125) ^ 0x89 ^ *(_BYTE *)(v189 + (BYTE2(v182) ^ 0xAELL));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a22 + 8 * (((4 * (HIDWORD(v206) > 0x10)) | (8 * (HIDWORD(v206) > 0x10))) ^ ((int)v176 - 1552))) - 8))(40, 130, v188, v176, v158, v180, v185, v186, a9, a10, a11, a12, v205, v206, v207, v208, v209, v210, a19,
           a20,
           v211,
           a22,
           a23,
           v212,
           v214,
           v217);
}

void sub_21E04B004()
{
  JUMPOUT(0x21E048BCCLL);
}

uint64_t sub_21E04B040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * ((((a7 - 108) ^ 0x979 ^ (529 * (a7 ^ 0x3B1))) * (v7 == v8)) ^ a7)))();
}

uint64_t sub_21E04B078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  char v7;
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                      + 8
                                                                      * ((((v7 & 8) != ((a6 - 684480363) & 0x28CC5E77)
                                                                                     - 2645)
                                                                        * (((a6 - 839) | 0x40A) ^ 0xD4)) ^ a6)))(a1, a2, a3, (v6 - v8));
}

uint64_t sub_21E04B0C8(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  int v32;
  char v33;
  uint64_t v34;
  int8x16x4_t v36;

  v31 = ((a7 - 2) ^ 0xFFFFFBF1) & v26;
  v32 = -v28;
  *(_DWORD *)(v30 - 120) = v31;
  v33 = v27 + a3 + a1;
  v34 = (v32 + a3 + a1 + a2);
  v36.val[0].i64[0] = ((_BYTE)v32 + (_BYTE)a3 + (_BYTE)a1 + (_BYTE)a2) & 0xF;
  v36.val[0].i64[1] = ((_BYTE)v32 + v25 + ((a7 - 71) ^ 1)) & 0xF;
  v36.val[1].i64[0] = ((_BYTE)v32 + v33 + 4) & 0xF;
  v36.val[1].i64[1] = ((_BYTE)v32 + v33 + 3) & 0xF;
  v36.val[2].i64[0] = ((_BYTE)v32 + v33 + 2) & 0xF;
  v36.val[2].i64[1] = ((_BYTE)v32 + v33 + 1) & 0xF;
  v36.val[3].i64[0] = ((_BYTE)v32 + v25) & 0xF;
  v36.val[3].i64[1] = ((_BYTE)v32 + v33 + 15) & 0xF;
  *(int8x8_t *)(v29 - 7 + v34) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v24 + (v34 & 0xF) - 7), *(int8x8_t *)(v29 - 7 + v34)), veor_s8(*(int8x8_t *)((v34 & 0xF) + v23 - 5), *(int8x8_t *)((v34 & 0xF) + v22 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v36, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x8181818181818181)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a22 + 8 * ((a7 - 2) ^ (2 * (v32 != 8 - v31)))) - 4))((__n128)xmmword_21E17F900);
}

void sub_21E04B1E8()
{
  JUMPOUT(0x21E04B11CLL);
}

uint64_t sub_21E04B20C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 | 0x20) ^ (1260 * (v0 == *(_DWORD *)(v3 - 120)))))
                            - (((v1 | 0x20) + 1233364753) & 0xB67C5A5F ^ 0xA5DLL)))();
}

uint64_t sub_21E04B258(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a4 - 1521392682);
  *(_BYTE *)(v10 + v11) ^= *(_BYTE *)(v8 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v7 + 2) ^ *(_BYTE *)((v11 & 0xF) + v6 + 4) ^ (-127 * (v11 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((443 * (a4 - 1 == v5)) ^ (a5 - 430))) - 4))();
}

void sub_21E04B2C0()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1612806728)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 20) = v1;
}

void sub_21E04B324(uint64_t a1)
{
  int v1;

  v1 = 731811679 * (((a1 | 0x285D75D9) - a1 + (a1 & 0xD7A28A26)) ^ 0x61ABD39D);
  __asm { BR              X9 }
}

uint64_t sub_21E04B3F0@<X0>(uint64_t result@<X0>, unsigned __int8 a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  void (*v13)(uint64_t);
  int v14;
  int v15;
  int v16;
  unsigned int v17;
  unsigned __int8 *v18;
  char v19;
  char v20;
  _BYTE v21[416];

  v7 = (uint64_t *)(v6 - 128);
  v8 = *(unsigned __int8 **)(result + 24);
  if (a2 == 215)
  {
LABEL_4:
    v9 = (uint64_t)&v8[56 * *v8 + 24];
    v10 = v6 - 128;
    v11 = 1948972247 * ((((v6 - 128) | 0x6398F600) - (v6 - 128) + ((v6 - 128) & 0x9C6709F8)) ^ 0xD60603EE);
    *(_WORD *)(v6 - 116) = 29944 - -2857 * ((((v6 - 128) | 0xF600) - (v6 - 128) + ((v6 - 128) & 0x9F8)) ^ 0x3EE);
    *v7 = v9;
    *(_DWORD *)(v6 - 112) = -1843668060 - v11;
    *(_DWORD *)(v6 - 120) = v11 + v2 - 2758;
    *(_QWORD *)(v6 - 104) = &STACK[0xCE528DE2F096CE4];
    (*(void (**)(uint64_t))(v5 + 8 * (v2 ^ 0x931)))(v6 - 128);
    v12 = 1734664879 * (((v10 | 0xA8FE30F3) - v10 + (v10 & 0x5701CF08)) ^ 0x872518E9);
    *(_QWORD *)(v6 - 104) = &v19;
    *(_DWORD *)(v6 - 112) = v12 + 868664071;
    *(_DWORD *)v7 = v2 - 1298 + v12;
    *(_QWORD *)(v6 - 120) = &STACK[0xCE528DE2F096CE4];
    v13 = *(void (**)(uint64_t))(v5 + 8 * (v2 - 2789));
    v13(v6 - 128);
    v14 = 1734664879 * ((2 * (v10 & 0x15C54538) - v10 + 1782233792) ^ 0x45E192DA);
    *(_DWORD *)v7 = v2 - 1298 + v14;
    *(_QWORD *)(v6 - 104) = &v20;
    *(_QWORD *)(v6 - 120) = &STACK[0xCE528DE2F096CE4];
    *(_DWORD *)(v6 - 112) = v14 + 868664071;
    v13(v6 - 128);
    *(_DWORD *)(v6 - 112) = v2 + ((v6 - 128) ^ 0x49F6A644) * v4 - 2707;
    *v7 = v3;
    *(_QWORD *)(v6 - 120) = &STACK[0xCE528DE2F096CE4];
    return ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + v2 - 2286) - 8))(v6 - 128);
  }
  if (a2 != 118)
  {
    if (a2 != 117)
      return result;
    goto LABEL_4;
  }
  v15 = v6 - 128;
  *v7 = (uint64_t)&STACK[0x195CA6660D0345B4];
  *(_DWORD *)(v6 - 120) = v2
                        - 1438293641
                        * (((((v6 - 128) | 0x5673B5D4) ^ 0xFFFFFFFE) - (~(v6 - 128) | 0xA98C4A2B)) ^ 0x114B1F54)
                        + 1118656549;
  sub_21E0DD3DC(v6 - 128);
  v16 = 1990461019 * ((((2 * v15) | 0x4018542A) - v15 - 537668117) ^ 0xFE8889C);
  *v7 = (uint64_t)&STACK[0x195CA6660D0345B4];
  *(_QWORD *)(v6 - 120) = &v19;
  *(_DWORD *)(v6 - 112) = v2 + 1298779385 + v16;
  *(_DWORD *)(v6 - 108) = 1268886125 - v16;
  sub_21E0DD2A8(v6 - 128);
  v17 = 1990461019 * (((v15 | 0xBD5207D3) - v15 + (v15 & 0x42ADF828)) ^ 0x92B6A55A);
  *(_DWORD *)(v6 - 112) = v2 + 1298779385 + v17;
  *(_DWORD *)(v6 - 108) = 1268886125 - v17;
  *v7 = (uint64_t)&STACK[0x195CA6660D0345B4];
  *(_QWORD *)(v6 - 120) = &v20;
  sub_21E0DD2A8(v6 - 128);
  v18 = &v8[56 * *v8];
  v21[19] = v18[43] ^ 0x32;
  v21[18] = v18[42] ^ 0x32;
  v21[17] = v18[41] ^ 0x32;
  v21[16] = v18[40] ^ 0x32;
  v21[15] = v18[39] ^ 0x32;
  v21[14] = v18[38] ^ 0x32;
  v21[13] = v18[37] ^ 0x32;
  v21[12] = v18[36] ^ 0x32;
  v21[11] = v18[35] ^ 0x32;
  v21[10] = v18[34] ^ 0x32;
  v21[9] = v18[33] ^ 0x32;
  v21[8] = v18[32] ^ 0x32;
  v21[7] = v18[31] ^ 0x32;
  v21[6] = v18[30] ^ 0x32;
  v21[5] = v18[29] ^ 0x32;
  v21[4] = v18[28] ^ 0x32;
  v21[3] = v18[27] ^ 0x32;
  v21[2] = v18[26] ^ 0x32;
  v21[1] = v18[25] ^ 0x32;
  v21[0] = v18[24] ^ 0x32;
  *(_DWORD *)(v6 - 112) = v2
                        + 1734664879 * ((((v6 - 128) | 0xFF8B0761) - ((v6 - 128) & 0xFF8B0761)) ^ 0xD0502F7B)
                        - 2299;
  *v7 = (uint64_t)&STACK[0x195CA6660D0345B4];
  *(_QWORD *)(v6 - 120) = v21;
  *(_QWORD *)(v6 - 104) = v3;
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 - 2684)))(v6 - 128);
}

void sub_21E04B86C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4)
     - 1866394843 * (((a1 ^ 0x27A67F50) & 0x15387F8A | ~(a1 ^ 0x27A67F50 | 0x15387F8A)) ^ 0x2776C8D1);
  __asm { BR              X9 }
}

uint64_t sub_21E04B960@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7, unint64_t *a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1948972247
      * ((((&a4 | 0x33EC5244) ^ 0xFFFFFFFE) - (~&a4 | 0xCC13ADBB)) ^ 0x798D5855);
  a8 = &STACK[0x47DF44ECCB2F1625];
  a7 = 1995704140 - v12;
  a4 = (v11 - 82) ^ v12;
  a5 = &STACK[0x70E23F743AC84B9F];
  a6 = v10;
  v13 = ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v11 ^ 0x18C)) - 12))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * ((3141
                                                        * (*(_DWORD *)(v10 - 0x6898E7DB637CE953) == v11 + 2567 + v9)) ^ v11))
                                          - (v11 + 2046)
                                          + 2364))(v13);
}

uint64_t sub_21E04BA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;

  return (*(uint64_t (**)(void))(v10 + 8 * ((51 * ((a10 ^ 0x37F80CCB ^ ((v11 - 2633) | 0x840u)) > 0x14)) ^ v11)))();
}

void sub_21E04BA8C(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;

  *a1 = v2 + 108;
  *v1 = *a1;
}

void sub_21E04BEAC(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1
     + 1292559617 * ((-1339336946 - (a1 | 0xB02B570E) + (a1 | 0x4FD4A8F1)) ^ 0xE887C098);
  __asm { BR              X10 }
}

uint64_t sub_21E04BF9C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, int a7, unint64_t *a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v12 = 1948972247 * ((&a4 + 423195588 - 2 * ((unint64_t)&a4 & 0x193973C4)) ^ 0xACA7862A);
  a4 = (v10 - 389) ^ v12;
  a8 = &STACK[0x47DF44ECCB2F162D];
  a7 = 2003183968 - v12;
  a5 = &STACK[0x70E23F743AC84B97];
  a6 = v11;
  v13 = ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v10 - 423)) - 12))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((1706
                                                        * (*(_DWORD *)(v11 - 0x6898E7DB637CE953) == (((v10 - 109) | 0x66) ^ (v8 + 602)))) ^ v10))
                                          - ((v10 + 1963) | 0xAu)
                                          + 2590))(v13);
}

uint64_t sub_21E04C098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * (((a11 != ((37 * (v13 ^ 0xA3B)) ^ (v11 + 623))) * ((v13 - 1973) ^ 0x217)) ^ v13))
                            - 12))();
}

void sub_21E04C0DC(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -939041090;
}

void sub_21E04C1A0(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 32))
    v2 = *(_QWORD *)(a1 + 8) == 0x6E4E8E6F3FAA68CLL;
  else
    v2 = 1;
  v4 = !v2 && *(_QWORD *)(a1 + 24) != 0x2A752CF9B62C38AELL;
  v1 = *(_DWORD *)a1
     + 1990461019 * (((a1 ^ 0x2802D01F | 0xC43B402) - (a1 ^ 0x2802D01F) + ((a1 ^ 0x2802D01F) & 0xF3BC4BFD)) ^ 0xBA5C694);
  __asm { BR              X11 }
}

uint64_t sub_21E04C28C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  _DWORD *v4;
  int v5;

  v4 = (_DWORD *)(v1 - 0x6E4E8E6F3FAA68CLL);
  *v4 = 205086581;
  v5 = *v3;
  *v4 = 205086582;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3819 * (v5 == 68)) ^ a1)) - 12))();
}

uint64_t sub_21E04C2E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;

  v5 = *(unsigned __int8 *)(v3 + 1);
  *v4 = v2 + 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2378 * (v5 == 72)) ^ a1)) - 12))();
}

uint64_t sub_21E04C318@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;

  v5 = *(unsigned __int8 *)(v3 + 2);
  *v4 = v2 + 3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((3792 * (v5 == 70)) ^ a1)) - 12))();
}

uint64_t sub_21E04C34C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _DWORD *v4;
  int v5;

  v5 = *(unsigned __int8 *)(v3 + 3);
  *v4 = v2 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2356 * (v5 == 87)) ^ a1)) - 12))();
}

uint64_t sub_21E04C380@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  int v7;
  uint64_t result;
  int v9;
  int v10;
  unsigned int v11;
  int v12;
  uint64_t v13;

  v7 = a1 - 1119052011;
  v11 = a1
      - 1119052011
      + 1866394843 * ((1738792742 - (&v11 | 0x67A3DF26) + (&v11 | 0x985C20D9)) ^ 0x724B172D);
  v13 = v1;
  sub_21E0DD8C0((uint64_t)&v11);
  *(_DWORD *)(v5 - 0x2A752CF9B62C38AELL) = v12;
  *v6 += 4;
  v13 = v4 + 8;
  v11 = v7 + 1866394843 * (((&v11 | 0xDA0C0EB1) + (~&v11 | 0x25F3F14E)) ^ 0x301B3944);
  result = sub_21E0DD8C0((uint64_t)&v11);
  v9 = v12;
  *v6 += 4;
  if (v9 == 55680613)
    v10 = 939001227;
  else
    v10 = v3 + 3;
  *(_DWORD *)(v2 + 16) = v10;
  return result;
}

void Mib5yocT()
{
  _DWORD v0[18];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * ((v0 & 0x1403FAE3 | ~(v0 | 0x1403FAE3)) ^ 0x4CAF6D75)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X9 }
}

uint64_t sub_21E04C588()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2 * (v1 == 0)) | (4 * (v1 == 0)) | 0x801u)) - 8))();
}

uint64_t sub_21E04C5CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  int v9;

  v5 = *(_QWORD *)((v1 ^ 0x6E0FF46CEF4CB33FLL) - 0x6E0FF46CEF4CB327);
  if (v3)
    v6 = v5 == 0x3AF2004723E7A171;
  else
    v6 = 1;
  v9 = v6 || v4 == 0 || v2 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2044 * v9) ^ 0x3EFu)) - 12))();
}

uint64_t sub_21E04C650()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((((v0 + 1854) ^ (v2 == 0)) & 1) == 0)
                                          * (((v0 - 2066501859) & 0x45119) - 254)) ^ v0))
                            - 12))();
}

uint64_t sub_21E04C6A0@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1354 * (*(_BYTE *)(v3 + 5) == 1)) ^ a2))
                            - ((a2 - 183) ^ (unint64_t)(a1 - 347) ^ (a2 - 44141219) & 0x6D3FFEEA)))();
}

uint64_t sub_21E04C6F4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * (((*(_BYTE *)(v2 + 7) == 0) * (((v0 ^ 0x37A) + 1740) ^ 0xA10)) ^ v0))
                            - 4))();
}

uint64_t sub_21E04C728()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((*(_BYTE *)(v2 + 4) & 0xFE) == 2) * (((v1 - 2780) | 0x410) ^ 0x437)) ^ v1))
                            - 4))();
}

uint64_t sub_21E04C760()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  *(_BYTE *)(v3 - 168) = (*(_BYTE *)(v2 + 6)
                        - ((*(unsigned __int8 *)(v2 + 6) << (((v1 ^ 0xCC) + 85) ^ 0x69)) & 0x82)
                        + 65) ^ (((v3 + 88) | 0x5A) - ((v3 + 88) & 0x5A)) ^ 0x33;
  *(_DWORD *)(v3 - 160) = v1
                        - 1292559617 * ((((v3 - 168) | 0x28BAC15A) - ((v3 - 168) & 0x28BAC15A)) ^ 0x8FE9A933)
                        + 1408030318;
  *(_QWORD *)(v3 - 152) = v2;
  v6 = v0;
  v4 = sub_21E090C20(v3 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * ((1544 * (*(_DWORD *)(v3 - 164) == 416665468)) ^ v1))
                                          - 4))(v4);
}

uint64_t sub_21E04C84C()
{
  int v0;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t result;
  int v16;
  int v17;
  int v18;

  switch(*(_BYTE *)(v7 + 6))
  {
    case 1:
      v13 = 1328090399 * ((((v12 - 168) | 0xDE5C53D) - (v12 - 168) + ((v12 - 168) & 0xF21A3AC0)) ^ 0xF236A107);
      *(_QWORD *)(v12 - 168) = v9;
      *(_QWORD *)(v12 - 160) = v11;
      *(_QWORD *)(v12 - 144) = v7;
      *(_QWORD *)(v12 - 136) = v3;
      *(_DWORD *)(v12 - 152) = v5 + v0 + v13 - 745;
      *(_QWORD *)(v12 - 120) = v10;
      *(_QWORD *)(v12 - 112) = v8;
      *(_DWORD *)(v12 - 128) = v13 ^ (v18 - ((2 * v18) & 0x22D8AAAC) - 1855171242);
      (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ (v0 - 100))))(v12 - 168);
      v14 = *(_DWORD *)(v12 - 124);
      break;
    case 2:
      __asm { BR              X10 }
      return result;
    case 3:
      v16 = 1292559617 * ((((2 * (v12 - 168)) | 0xA885D62) - (v12 - 168) + 2059129167) ^ 0x221746D8);
      *(_DWORD *)(v12 - 168) = (v5 + v0 + 829) ^ v16;
      *(_QWORD *)(v12 - 144) = v8;
      *(_QWORD *)(v12 - 136) = v7;
      *(_QWORD *)(v12 - 160) = v3;
      *(_DWORD *)(v12 - 152) = v16 ^ (v18 - ((2 * v18) & 0x91939438) - 926299620);
      *(_QWORD *)(v12 - 120) = v10;
      *(_QWORD *)(v12 - 112) = v9;
      *(_QWORD *)(v12 - 104) = v11;
      ((void (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ (v0 + 498))) - 12))(v12 - 168);
      v14 = *(_DWORD *)(v12 - 128);
      break;
    case 4:
      v17 = 1328090399 * (((~(v12 - 168) & 0x30F5DFD4) - (~(v12 - 168) | 0x30F5DFD5)) ^ 0xCF26BBEF);
      *(_QWORD *)(v12 - 160) = v10;
      *(_DWORD *)(v12 - 168) = v17 ^ (v18 - ((2 * v18) & 0x5A2AC176) - 1391107909);
      *(_QWORD *)(v12 - 120) = v9;
      *(_QWORD *)(v12 - 112) = v11;
      *(_DWORD *)(v12 - 152) = v5 + v0 + v17 - 360;
      *(_QWORD *)(v12 - 144) = v8;
      *(_QWORD *)(v12 - 128) = v3;
      *(_QWORD *)(v12 - 104) = v7;
      ((void (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v5 + v0 - 738)) - 12))(v12 - 168);
      v14 = *(_DWORD *)(v12 - 136);
      break;
    default:
      *v9 = -1;
      v14 = v4 - 10;
      break;
  }
  return v14 ^ v6;
}

uint64_t sub_21E04D468()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  v3 = v0;
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (int)(v2 ^ 0x537)))(164, 1043326649) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((56 * v4) ^ v2)) - (v2 - 880 + (v2 ^ 0xFFFFFFFFFFFFFA44))))();
}

uint64_t sub_21E04D4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  *(_DWORD *)a1 = 1498173510;
  *(_BYTE *)(a1 + 4) = a35;
  *(_WORD *)(a1 + 5) = 769;
  *(_BYTE *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = -1744830464;
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v36 + 13);
  *(_WORD *)(a1 + 13) = 6799;
  *(_BYTE *)(a1 + 15) = -100;
  *(_DWORD *)(v39 - 152) = v35
                         - 2009815553 * ((2 * ((v39 - 168) & 0x7B86CF0) - (v39 - 168) + 2017956617) ^ 0x894CBD4C)
                         + 190;
  *(_WORD *)(v39 - 148) = 23041 * ((2 * ((v39 - 168) & 0x6CF0) - (v39 - 168) - 27895) ^ 0xBD4C) + 21377;
  *(_QWORD *)(v39 - 160) = a1 + 0x2B0E86FE4BE00E19;
  v41 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v37 + 8 * (v35 ^ 0xFC)) - 12))(v39 - 168);
  *(_WORD *)(a1 + 16) = 256;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * ((882
                                                        * (((((a1 - (_QWORD)&STACK[0x240]) & 0xFFFFFFFFFFFFFFE0) == 224) ^ (v35 + 17)) & 1)) ^ v35))
                                          - 8))(v41);
}

uint64_t sub_21E04D5F8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;

  v6 = v2 + 127 - v0;
  v7 = vrev64q_s8(*(int8x16_t *)(v6 - 15));
  v8 = vextq_s8(v7, v7, 8uLL);
  v9 = vrev64q_s8(*(int8x16_t *)(v6 - 31));
  v10 = vextq_s8(v9, v9, 8uLL);
  v11 = v3 + 127 - v0;
  v12.i64[0] = 0x6464646464646464;
  v12.i64[1] = 0x6464646464646464;
  v13.i64[0] = 0x3232323232323232;
  v13.i64[1] = 0x3232323232323232;
  v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v12)), v13));
  *(int8x16_t *)(v11 - 15) = vextq_s8(v14, v14, 8uLL);
  v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v12)), v13));
  *(int8x16_t *)(v11 - 31) = vextq_s8(v15, v15, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((867 * (v0 != 96)) ^ v4)) - ((v4 - 274825675) & 0x7D7FFCF9 ^ v1)))();
}

uint64_t sub_21E04D6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v3 + v0 - 204788869) = *(_BYTE *)(v2 + v0 - 204788869)
                                  - (((v4 + 64) ^ 0xC) & (2 * *(_BYTE *)(v2 + v0 - 204788869)))
                                  + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v0 - 1 == v1) | (16 * (v0 - 1 == v1))) ^ v4)) - 8))();
}

uint64_t sub_21E04D6FC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(uint64_t),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;

  v67 = STACK[0x210];
  v68 = 1734664879
      * ((-1425132540 - ((v66 - 168) ^ 0x4BC4F268 | 0xAB0E3404) + ((v66 - 168) ^ 0x4BC4F268 | 0x54F1CBFB)) ^ 0x30EE1189);
  *(_QWORD *)(v66 - 168) = a28;
  *(_QWORD *)(v66 - 160) = a57;
  *(_QWORD *)(v66 - 152) = v64;
  *(_DWORD *)(v66 - 144) = a1 - 1830713429 + v68 - 927;
  *(_DWORD *)(v66 - 140) = v68 ^ ((v67 ^ 0xDA47BEFB) + 1845492701 + ((2 * v67) & 0xB48F7DF6));
  v69 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + (a1 ^ 0x6D1E7E64)) - 4))(v66 - 168);
  if (v67 == 3)
  {
    a26(a24);
    v70 = ((uint64_t (*)(uint64_t, unint64_t *, uint64_t))a26)(a25, &STACK[0xE58], 16);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a64 + 8 * ((3263 * (v65 != -16)) ^ 0xBF)) - 4))(v70);
  }
  if (v67 != 2)
  {
    v74 = -939041250;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a64 + 8 * ((110 * (v74 == 939001227)) ^ 0x625)) - 8))(v69);
  }
  v72 = *(unsigned __int8 *)(a29 + 13);
  if (v72 == 2)
  {
    v75 = 1734664879 * ((2 * ((v66 - 168) & 0x6A91C8A0) - (v66 - 168) + 359544671) ^ 0x3AB51F45);
    *(_DWORD *)(v66 - 168) = v75 + 677615993;
    *(_DWORD *)(v66 - 152) = 2964 - v75;
    *(_QWORD *)(v66 - 144) = v65 + 0x2F36DA607BEC4C26;
    *(_QWORD *)(v66 - 136) = v65 + 0x61B4415FE1FE4C96;
    *(_QWORD *)(v66 - 160) = a3;
    v69 = ((uint64_t (*)(uint64_t))sub_21E08D758)(v66 - 168);
LABEL_12:
    v74 = *(_DWORD *)(v66 - 148);
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a64 + 8 * ((110 * (v74 == 939001227)) ^ 0x625)) - 8))(v69);
  }
  if (v72 == 1)
  {
    v76 = 1948972247 * ((((v66 - 168) | 0x757992EA) - (v66 - 168) + ((v66 - 168) & 0x8A866D10)) ^ 0xC0E76704);
    *(_DWORD *)(v66 - 168) = v76 + 544020104;
    *(_DWORD *)(v66 - 164) = 3204 - v76;
    *(_QWORD *)(v66 - 136) = v65 + 0x4B675195D5CFAF6ALL;
    *(_QWORD *)(v66 - 144) = a2;
    *(_QWORD *)(v66 - 160) = v65 + 0x2C4F5E3A6E84969ELL;
    v69 = sub_21E05375C(v66 - 168);
    v74 = *(_DWORD *)(v66 - 152);
    return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a64 + 8 * ((110 * (v74 == 939001227)) ^ 0x625)) - 8))(v69);
  }
  if (*(_BYTE *)(a29 + 13))
  {
    v77 = 1292559617 * ((((v66 - 168) | 0x8FD2CF69) - (v66 - 168) + ((v66 - 168) & 0x702D3090)) ^ 0x2881A700);
    *(_DWORD *)(v66 - 152) = v77 ^ 0xA55;
    *(_QWORD *)(v66 - 144) = a4;
    *(_DWORD *)(v66 - 136) = 896743677 - v77;
    *(_QWORD *)(v66 - 168) = v65 + 0x199CF05987F0153ELL;
    *(_QWORD *)(v66 - 160) = v65 + 0x38BEDCB65C0FCDC3;
    v69 = ((uint64_t (*)(uint64_t))sub_21E04790C)(v66 - 168);
    goto LABEL_12;
  }
  v73 = 1438293641 * ((v66 + 1281363580 - 2 * ((v66 - 168) & 0x4C600F24)) ^ 0xF4A75A5B);
  *(_DWORD *)(v66 - 152) = v73 + 1870537624;
  *(_DWORD *)(v66 - 128) = v73 + 1125;
  *(_QWORD *)(v66 - 144) = v65 + 0x55B7A4F61A7BE49ELL;
  *(_QWORD *)(v66 - 136) = a5;
  *(_QWORD *)(v66 - 160) = v65 + 0x46F5648AE782334DLL;
  v69 = sub_21E0A5BF4(v66 - 168);
  v74 = *(_DWORD *)(v66 - 168);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(a64 + 8 * ((110 * (v74 == 939001227)) ^ 0x625)) - 8))(v69);
}

void sub_21E04D8A0()
{
  JUMPOUT(0x21E04D930);
}

uint64_t sub_21E04D99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;

  v77 = v75 ^ (v71 + 235);
  v78 = 1990461019 * ((2 * ((v76 - 168) & 0x38CD4FB8) - (v76 - 168) - 952979385) ^ 0xE8D612CE);
  *(_DWORD *)(v76 - 128) = 6623648 - v78;
  *(_DWORD *)(v76 - 168) = v75 - v78 + 898;
  *(_QWORD *)(v76 - 144) = v72;
  *(_QWORD *)(v76 - 136) = v74;
  *(_QWORD *)(v76 - 160) = a24;
  v79 = (*(uint64_t (**)(uint64_t))(v73 + 8 * (v75 + 273)))(v76 - 168);
  return ((uint64_t (*)(uint64_t))(1830714464
                                          - v77
                                          + *(_QWORD *)(a71
                                                      + 8
                                                      * (((*(_DWORD *)(v76 - 152) != 939001227) * (v75 - 205)) ^ v75))
                                          + 4))(v79);
}

uint64_t sub_21E04DA78(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * (int)(((LODWORD(STACK[0x224]) == 205086593)
                                                                              * ((v5 + 2103344834) & 0xEFBFFC6A ^ (v3 - 1387))) ^ (v5 + 26)))
                                                           - 4))(a1, a2, (v2 - 56));
}

uint64_t sub_21E04DACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;

  LODWORD(STACK[0x208]) = v74 + 1830713429;
  *(_DWORD *)(v75 - 156) = v74
                         + 1328090399 * ((((v75 - 168) | 0x10CBAE71) + (~(v75 - 168) | 0xEF34518E)) ^ 0xEF18CA4A)
                         + 309;
  *(_QWORD *)(v75 - 168) = a14;
  *(_QWORD *)(v75 - 152) = v71;
  *(_QWORD *)(v75 - 144) = v73 + 12;
  v76 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v72 + 8 * (v74 - 176)) - 8))(v75 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a71
                                                      + 8
                                                      * ((2093
                                                        * (*(_DWORD *)(v75 - 160) == ((v74 + 1830714131) ^ 0x5AE679E3))) ^ v74))
                                          - 4))(v76);
}

uint64_t sub_21E04DB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v77 = v73 + (LODWORD(STACK[0x230]) - 849310553);
  *(_DWORD *)(v76 - 144) = (v74 + 244) ^ (225134719
                                        * ((((v76 - 168) | 0x5D76C0C3) + (~(v76 - 168) | 0xA2893F3C)) ^ 0x4B8685E8));
  *(_QWORD *)(v76 - 136) = v71;
  *(_QWORD *)(v76 - 160) = v77;
  *(_QWORD *)(v76 - 152) = &STACK[0x2AC602A0DF9ED0F4];
  *(_QWORD *)(v76 - 168) = a13;
  v78 = (*(uint64_t (**)(uint64_t))(v72 + 8 * (v74 + 46)))(v76 - 168);
  return ((uint64_t (*)(uint64_t))(1830714464
                                          - v75
                                          + *(_QWORD *)(a71
                                                      + 8 * ((2424 * (*(_DWORD *)(v76 - 128) == 939001227)) ^ v74))
                                          + 4))(v78);
}

uint64_t sub_21E04DC80(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  int v5;
  unsigned int v6;
  uint64_t v7;

  v5 = LODWORD(STACK[0x208]) + 702;
  v6 = v2 - 40;
  if (LODWORD(STACK[0x230]) + LODWORD(STACK[0x224]) + LODWORD(STACK[0x234]) == LODWORD(STACK[0x208]) + 691209250)
    v7 = 939001227;
  else
    v7 = v6;
  STACK[0x208] = *(_QWORD *)(v3 + 8 * (LODWORD(STACK[0x208]) - 1830713418)) - 8;
  STACK[0x200] = *(_QWORD *)(v3 + 8 * (v5 - 1830714177));
  return v4(a1, a2, v7);
}

uint64_t sub_21E04DCE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38
                                                      + 8
                                                      * (((v37 ^ (v37 + 728) ^ 0xFC5) * (a3 == 939001227)) ^ (v39 + v37 - 895)))
                                          - 8))(a37);
}

uint64_t sub_21E04DD30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t (*v77)(uint64_t);
  int v78;
  uint64_t v79;

  *(_DWORD *)(v73 - 160) = (v72 + 1935319592) ^ (1328090399
                                               * ((-384762778 - ((v73 - 168) | 0xE910FC66) + ((v73 - 168) | 0x16EF0399)) ^ 0xE93C67A3));
  *(_QWORD *)(v73 - 168) = a21;
  v74 = v71;
  sub_21E0DD598((uint64_t *)(v73 - 168));
  v75 = 1503746353 * ((((v73 - 168) | 0x8B5346AF) - (v73 - 168) + ((v73 - 168) & 0x74ACB950)) ^ 0xAD328419);
  v76 = *(_QWORD *)(v74 + 8 * (v72 - 408));
  *(_DWORD *)(v73 - 144) = v72 + 78 - v75;
  *(_DWORD *)(v73 - 168) = v75 + 386513842;
  *(_QWORD *)(v73 - 160) = v76 - 8;
  *(_QWORD *)(v73 - 152) = a21;
  v77 = (uint64_t (*)(uint64_t))STACK[0x208];
  ((void (*)(uint64_t))STACK[0x208])(v73 - 168);
  v78 = 1503746353 * ((v73 - 361181392 - 2 * ((v73 - 168) & 0xEA78CFD8)) ^ 0xCC190D6E);
  *(_DWORD *)(v73 - 168) = v78 + 386513827;
  *(_DWORD *)(v73 - 144) = v72 + 78 - v78;
  *(_QWORD *)(v73 - 160) = a22;
  *(_QWORD *)(v73 - 152) = a21;
  v79 = v77(v73 - 168);
  *(_DWORD *)(a58 - 0x195CA6660D034740) = *(_DWORD *)(a21 - 0x195CA6660D034740);
  *(_DWORD *)(a58 - 0x195CA6660D03473CLL) = *(_DWORD *)(a21 - 0x195CA6660D03473CLL);
  *(_DWORD *)(a58 - 0x195CA6660D034738) = *(_DWORD *)(a21 - 0x195CA6660D034738);
  *(_DWORD *)(a58 - 0x195CA6660D034734) = *(_DWORD *)(a21 - 0x195CA6660D034734);
  *(_DWORD *)(a58 - 0x195CA6660D034730) = *(_DWORD *)(a21 - 0x195CA6660D034730);
  *(_DWORD *)(a58 - 0x195CA6660D03472CLL) = *(_DWORD *)(a21 - 0x195CA6660D03472CLL);
  return (*(uint64_t (**)(uint64_t))(a71
                                            + 8
                                            * ((((40 * (v72 ^ 0x309)) ^ 0x814)
                                              * (a58 - a21 < (unint64_t)(40 * (v72 ^ 0x309u)) - 1304)) ^ (40 * (v72 ^ 0x309)))))(v79);
}

uint64_t sub_21E04DFE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(v6 + v1 + v8 + 24) = *(_BYTE *)(v5 + v1 + v8 + 24);
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + 1 != v2 + 64) * (((v0 - 1196) | v7) ^ v4)) ^ v0)))();
}

uint64_t sub_21E04E020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_OWORD *)(v3 + a1 + 24) = *(_OWORD *)(v2 + a1 + 24);
  return (*(uint64_t (**)(void))(v1 + 8 * ((28 * (a1 + (v4 - 654) == 714)) ^ v4)))();
}

uint64_t sub_21E04E058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_BYTE *a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;

  *a38 = v71 - 27;
  v76 = 1503746353 * ((v75 - 168) ^ 0x2661C2B6);
  *(_QWORD *)(v75 - 160) = a38;
  *(_QWORD *)(v75 - 152) = v74;
  *(_DWORD *)(v75 - 144) = v72 - v76 + 220;
  *(_DWORD *)(v75 - 168) = v76 + 386513794;
  ((void (*)(uint64_t))STACK[0x208])(v75 - 168);
  *(_DWORD *)(v75 - 152) = (v72 + 2388) ^ (731811679 * ((v75 - 168) ^ 0x49F6A644));
  *(_QWORD *)(v75 - 168) = v74;
  *(_QWORD *)(v75 - 160) = v73 + 16 * (int)v71 + 1413512784;
  v77 = ((uint64_t (*)(uint64_t))STACK[0x200])(v75 - 168);
  return (*(uint64_t (**)(uint64_t))(a71
                                            + 8
                                            * ((434 * (v71 + 1 != ((v72 - 444832743) & 0x1A839F4D ^ 0x7ABBFE25))) ^ v72)))(v77);
}

void sub_21E04E140()
{
  JUMPOUT(0x21E04DF58);
}

uint64_t sub_21E04E148()
{
  uint64_t v0;
  int v1;
  __n128 v2;
  __n128 v3;

  v2.n128_u64[0] = 0x6464646464646464;
  v2.n128_u64[1] = 0x6464646464646464;
  v3.n128_u64[0] = 0x3232323232323232;
  v3.n128_u64[1] = 0x3232323232323232;
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128, __n128))(v0
                                                                     + 8
                                                                     * ((((v1 - 1364) | 0x102) + 2484) ^ 0xB6F ^ (v1 + 1026))))(2464253867, 1266802403, v2, v3);
}

uint64_t sub_21E04E3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v60
                                                               + 8
                                                               * (v59 ^ (26
                                                                       * ((unint64_t)(a39 - a59 - 112) < 0x10))))
                                                   - 8))(a1, -402761365);
}

uint64_t sub_21E04E420@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(a2 + v6 + a1) = *(_BYTE *)(a5 + v6 + a1) - (v8 & (2 * *(_BYTE *)(a5 + v6 + a1))) + 50;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v6 + 1 != ((v7 + v5 - 1251) ^ a3)) * a4) ^ v5)))();
}

#error "21E04EB64: call analysis failed (funcsize=377)"

void sub_21E04EB68()
{
  --STACK[0x208];
  JUMPOUT(0x21E04E640);
}

uint64_t sub_21E04EB90(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_QWORD *a40,_QWORD *a41,_QWORD *a42,_QWORD *a43,_QWORD *a44,_QWORD *a45,_QWORD *a46,_QWORD *a47,_QWORD *a48,_QWORD *a49,_QWORD *a50,_QWORD *a51,_QWORD *a52,_QWORD *a53,_QWORD *a54,_QWORD *a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t (*a63)(void))
{
  unsigned __int8 v63;
  unsigned __int8 v64;
  unsigned __int8 v65;
  unsigned __int8 v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  char v78;
  char v79;

  v67 = *(_BYTE *)(*a55 + (*(unsigned __int8 *)(a4 - 16) ^ a5));
  *(_BYTE *)(a4 - 16) = v67 - ((2 * v67) & 0x64) + 50;
  *(_BYTE *)(a4 - 12) = *(_BYTE *)(*a54 + v63) - ((2 * *(_BYTE *)(*a54 + v63)) & 0x64) + 50;
  *(_BYTE *)(a4 - 8) = *(_BYTE *)(*a53 + a1) + (~(2 * *(_BYTE *)(*a53 + a1)) | 0x9B) + 51;
  *(_BYTE *)(a4 - 4) = *(_BYTE *)(*a52 + v66) - ((2 * *(_BYTE *)(*a52 + v66)) & 0x64) + 50;
  v68 = *(_BYTE *)(*a51 + (v65 ^ a5));
  *(_BYTE *)(a4 - 3) = v68 - ((2 * v68) & 0x64) + 50;
  v69 = *(_BYTE *)(*a50 + (*(unsigned __int8 *)(a4 - 11) ^ a5));
  *(_BYTE *)(a4 - 7) = v69 - ((2 * v69) & 0x64) + 50;
  v70 = *(_BYTE *)(*a49 + (*(unsigned __int8 *)(a4 - 15) ^ a5));
  *(_BYTE *)(a4 - 11) = v70 - ((2 * v70) & 0x64) + 50;
  v71 = *(_BYTE *)(*a48 + (v64 ^ a5));
  *(_BYTE *)(a4 - 15) = v71 - ((2 * v71) & 0x64) + 50;
  v72 = *(unsigned __int8 *)(a4 - 14);
  v73 = *(_BYTE *)(*a47 + (a8 ^ a5));
  *(_BYTE *)(a4 - 14) = v73 - ((2 * v73) & 0x64) + 50;
  *(_BYTE *)(a4 - 6) = *(_BYTE *)(*a46 + (v72 ^ a5)) - ((2 * *(_BYTE *)(*a46 + (v72 ^ a5))) & 0x64) + 50;
  v74 = *(unsigned __int8 *)(a4 - 10);
  v75 = *(_BYTE *)(*a45 + (*(unsigned __int8 *)(a4 - 2) ^ a5));
  *(_BYTE *)(a4 - 10) = v75 - ((2 * v75) & 0x64) + 50;
  *(_BYTE *)(a4 - 2) = *(_BYTE *)(*a44 + (v74 ^ a5)) - ((2 * *(_BYTE *)(*a44 + (v74 ^ a5))) & 0x64) + 50;
  v76 = *(unsigned __int8 *)(a4 - 13);
  v77 = *(_BYTE *)(*a43 + (*(unsigned __int8 *)(a4 - 9) ^ a5));
  *(_BYTE *)(a4 - 13) = v77 - ((2 * v77) & 0x64) + 50;
  v78 = *(_BYTE *)(*a42 + (*(unsigned __int8 *)(a4 - 5) ^ a5));
  *(_BYTE *)(a4 - 9) = v78 - ((2 * v78) & 0x64) + 50;
  v79 = *(_BYTE *)(*a41 + (*(unsigned __int8 *)(a4 - 1) ^ a5));
  *(_BYTE *)(a4 - 5) = v79 - ((2 * v79) & 0x64) + 50;
  *(_BYTE *)(a4 - 1) = *(_BYTE *)(*a40 + (v76 ^ a5)) + (~(2 * *(_BYTE *)(*a40 + (v76 ^ a5))) | 0x9B) + 51;
  return a63();
}

uint64_t sub_21E04EDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;

  return (*(uint64_t (**)(void))(a71 + 12416))();
}

uint64_t sub_21E04EE5C@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W6>, int a7@<W7>, unsigned int a8@<W8>)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)(a4 + v12 + v8) ^= *(_BYTE *)(a2 + v12 + v8);
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((((a1 + ((v9 + a6) & a7) + a3) & a5) + 910)
                                * (((v9 + a6) & a7 ^ (v10 + 1)) + v8 < a8)) ^ (a1 + ((v9 + a6) & a7) + 487))))();
}

void sub_21E04EEB4()
{
  JUMPOUT(0x21E04E38CLL);
}

uint64_t sub_21E04EEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a71 + 22912) - 8))(a37, a62, 939001227);
}

uint64_t sub_21E04EF78(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;

  *(_BYTE *)(a2 + v2 - 1093971362) ^= *(_BYTE *)(a1 + v2 - 1093971362) ^ 0x4C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((v4 - v8 + 992) ^ (v5 + 1)) + v2 < v4 + v7) * v3) ^ (v4 + 87)))
                            - 8))();
}

uint64_t sub_21E04F0D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  int v50;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 + 8 * ((((15 * (v48 ^ (v48 - 21))) ^ 0x8FF) * ((_DWORD)a3 == 939001227)) ^ (v50 + v48 - 852))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_21E04F120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  uint64_t a68;
  uint64_t a70;
  uint64_t a71;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  int v76;
  uint64_t (*v77)(uint64_t);
  unsigned int v78;
  uint64_t v79;

  v73 = (2 * v71) ^ 0x268u;
  v74 = v72 - 168;
  *(_QWORD *)(v72 - 168) = a67;
  *(_DWORD *)(v72 - 160) = (v71 + 1935319515) ^ (1328090399
                                               * ((((v72 - 168) | 0x60AA1B44) - ((v72 - 168) & 0x60AA1B44)) ^ 0x9F797F7E));
  sub_21E0DD598((uint64_t *)(v72 - 168));
  v75 = v71 + 1;
  v76 = 1503746353 * (((v74 | 0x2BBB2F9D) - (v74 & 0x2BBB2F9D)) ^ 0xDDAED2B);
  *(_DWORD *)(v72 - 144) = v71 + 1 - v76;
  *(_DWORD *)(v72 - 168) = v76 + 386513842;
  *(_QWORD *)(v72 - 160) = (char *)*(&off_24E21C7C0 + (int)(v71 & 0xC0ABB2BF)) - 12;
  *(_QWORD *)(v72 - 152) = a67;
  v77 = (uint64_t (*)(uint64_t))STACK[0x208];
  ((void (*)(uint64_t))STACK[0x208])(v72 - 168);
  v78 = 1503746353 * (((v74 | 0x43277D6E) - v74 + (v74 & 0xBCD88290)) ^ 0x6546BFD8);
  *(_QWORD *)(v72 - 160) = a68;
  *(_QWORD *)(v72 - 152) = a67;
  *(_DWORD *)(v72 - 144) = v75 - v78;
  *(_DWORD *)(v72 - 168) = v78 + 386513827;
  v79 = v77(v72 - 168);
  STACK[0x210] = a67 - 0x195CA6660D03473CLL;
  *(_DWORD *)(a70 - 0x195CA6660D034740) = *(_DWORD *)(a67 - 0x195CA6660D034740);
  *(_DWORD *)(a70 - 0x195CA6660D03473CLL) = *(_DWORD *)STACK[0x210];
  *(_DWORD *)(a70 - 0x195CA6660D034738) = *(_DWORD *)(a67 - 0x195CA6660D034738);
  *(_DWORD *)(a70 - 0x195CA6660D034734) = *(_DWORD *)(a67 - 0x195CA6660D034734);
  *(_DWORD *)(a70 - 0x195CA6660D034730) = *(_DWORD *)(a67 - 0x195CA6660D034730);
  *(_DWORD *)(a70 - 0x195CA6660D03472CLL) = *(_DWORD *)(a67 - 0x195CA6660D03472CLL);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a71
                                                      + 8
                                                      * (int)((((v73 + 18) ^ 0x482) * (a70 - a67 < (v73 ^ 0x492uLL))) ^ v73))
                                          - 12))(v79);
}

uint64_t sub_21E04F3CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v8 + v1 + v4 + 24) = *(_BYTE *)(v7 + v1 + v4 + 24);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v1 + (v0 ^ v3) - 884 == v2 + 64) * v5) ^ v0)) - 12))();
}

uint64_t sub_21E04F40C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;

  *(_OWORD *)(v5 + a1 + 24) = *(_OWORD *)(v3 + a1 + 24);
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((v4 ^ v6 ^ v7) + a1 == 64) * v2) ^ v4)) - 12))();
}

uint64_t sub_21E04F444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  _BYTE *a72;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;

  *a72 = v73 + 87;
  v76 = 1503746353 * ((((2 * (v75 - 168)) | 0xB6D669F4) - (v75 - 168) - 1533752570) ^ 0x7D0AF64C);
  *(_DWORD *)(v75 - 168) = v76 + 386513794;
  *(_DWORD *)(v75 - 144) = v72 - v76 + 1;
  *(_QWORD *)(v75 - 160) = a72;
  *(_QWORD *)(v75 - 152) = v74;
  ((void (*)(uint64_t))STACK[0x208])(v75 - 168);
  *(_DWORD *)(v75 - 152) = (v72 + 2169) ^ (731811679
                                         * ((~((v75 - 168) ^ 0xEE7257E5 | 0x47963E3A)
                                           + (((v75 - 168) ^ 0xEE7257E5) & 0x47963E3A)) ^ 0x1FED3064));
  *(_QWORD *)(v75 - 168) = v74;
  *(_QWORD *)(v75 - 160) = a50 + 16 * (int)v73 - 491264656;
  v77 = ((uint64_t (*)(uint64_t))STACK[0x200])(v75 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a71
                                                      + 8
                                                      * ((228
                                                        * (v73 + 1 == ((v72 - 1160045440) & 0x4524E4FF ^ 0x11D48547))) ^ v72))
                                          - (v72 + 269)
                                          + 1146))(v77);
}

uint64_t sub_21E04F588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  int v71;
  uint64_t v72;
  unint64_t v73;

  v72 = (v71 - 66) | 0x12u;
  v73 = ((v72 - 0x20D41254506442DLL) ^ (unint64_t)&STACK[0x218])
      + ((2 * (_QWORD)&STACK[0x218]) & 0xFBE57DB575F37FD0)
      + 0x4A7D5DBFFD2F477CLL;
  LOBYTE(STACK[0x32F]) = ((v73 - 105) ^ 0xBA) * (v73 - 88);
  LOBYTE(STACK[0x32E]) = ((v73 - 104) ^ 0xBA) * (v73 + ((((v71 - 66) | 0x12) + 4) ^ 0xB7));
  return (*(uint64_t (**)(void))(a71 + 8 * (int)(v72 ^ 0x50)))();
}

uint64_t sub_21E04F5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;
  uint64_t v69;
  unsigned int v70;
  _BOOL4 v72;

  v72 = (unint64_t)(a40 - 0x68885D0AAD04D159 - a41) > 0xF
     && a40 - 0x68885D0AAD04D159 - a69 >= (v70 ^ 0x4E5uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * ((584 * v72) ^ v70)) - (v70 - 8) + 1249))();
}

uint64_t sub_21E04F620@<X0>(int8x16_t *a1@<X0>, int8x16_t *a2@<X1>, int8x16_t *a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,_BYTE *a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  int8x16_t v66;
  int8x16_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  unsigned int v100;
  unsigned int v101;
  unsigned __int8 v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int v107;
  _BOOL8 v108;
  _BYTE *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  signed int v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  unsigned __int8 *v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;

  v66.i64[0] = 0x9898989898989898;
  v66.i64[1] = 0x9898989898989898;
  v67.i64[0] = 0x4C4C4C4C4C4C4C4CLL;
  v67.i64[1] = 0x4C4C4C4C4C4C4C4CLL;
  *a3 = veorq_s8(vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), v66)), v67), *a2);
  v104 = a51 - 0x2A752CF9B62C38AELL;
  v115 = (v65 + 1794466446) & 0x950A9A97;
  v68 = *(unsigned __int8 *)(a51 - 0x2A752CF9B62C389BLL);
  v108 = v68 != 196;
  v107 = *(unsigned __int8 *)(a51 - 0x2A752CF9B62C389CLL) ^ 0xC5;
  v116 = (_BYTE *)(a35 - 0x68885D0AAD04D159);
  v117 = (_BYTE *)(a35 - 0x68885D0AAD04D155);
  v69 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D159);
  v70 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D155);
  v118 = (_BYTE *)(a35 - 0x68885D0AAD04D151);
  v119 = (unsigned __int8 *)(a35 - 0x68885D0AAD04D14DLL);
  v71 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D151);
  v72 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D14DLL);
  v120 = (_BYTE *)(a35 - 0x68885D0AAD04D158);
  v121 = (_BYTE *)(a35 - 0x68885D0AAD04D154);
  v73 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D158);
  v74 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D154);
  STACK[0x200] = a35 - 0x68885D0AAD04D150;
  v75 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D150);
  STACK[0x208] = a35 - 0x68885D0AAD04D14CLL;
  v76 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D14CLL);
  v105 = 3 % (v68 ^ 0xC5u);
  v106 = 2 % (v68 ^ 0xC5u);
  v122 = (_BYTE *)(a35 - 0x68885D0AAD04D157);
  v77 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D157);
  v123 = (_BYTE *)(a35 - 0x68885D0AAD04D14FLL);
  v124 = (_BYTE *)(a35 - 0x68885D0AAD04D153);
  v78 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D14FLL);
  v79 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D153);
  STACK[0x210] = a35 - 0x68885D0AAD04D14BLL;
  v80 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D14BLL);
  v125 = (_BYTE *)(a35 - 0x68885D0AAD04D14ALL);
  v126 = (_BYTE *)(a35 - 0x68885D0AAD04D152);
  v109 = (_BYTE *)(a35 - 0x68885D0AAD04D14ELL);
  v110 = (_BYTE *)(a35 - 0x68885D0AAD04D156);
  v81 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D14ELL);
  v111 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D14ALL);
  v112 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D152);
  v82 = *(unsigned __int8 *)(a35 - 0x68885D0AAD04D156);
  v83 = (_QWORD *)(a51 - 0x2A752CF9B62C3896);
  v84 = *(unsigned __int8 *)(*(_QWORD *)(a51 - 0x2A752CF9B62C3896) + v69);
  *v116 = v84;
  v85 = *(unsigned __int8 *)(*(_QWORD *)(a51 - 0x2A752CF9B62C3876) + v70);
  *v117 = v85;
  v86 = *(unsigned __int8 *)(*(_QWORD *)(a51 - 0x2A752CF9B62C3856) + v71);
  *v118 = v86;
  v114 = *(unsigned __int8 *)(*(_QWORD *)(a51 - 0x2A752CF9B62C3836) + v72);
  *v119 = v114;
  v87 = *(unsigned __int8 *)(v83[5] + v74);
  *v120 = v87;
  v88 = *(unsigned __int8 *)(v83[9] + v75);
  *v121 = v88;
  v89 = *(unsigned __int8 *)(v83[13] + v76);
  *(_BYTE *)STACK[0x200] = v89;
  v113 = *(unsigned __int8 *)(v83[1] + v73);
  *(_BYTE *)STACK[0x208] = v113;
  v90 = *(unsigned __int8 *)(v83[10] + v78);
  *v122 = v90;
  v91 = *(unsigned __int8 *)(v83[2] + v77);
  *v123 = v91;
  v92 = *(unsigned __int8 *)(v83[14] + v80);
  *v124 = v92;
  v93 = *(unsigned __int8 *)(v83[6] + v79);
  *(_BYTE *)STACK[0x210] = v93;
  v94 = *(unsigned __int8 *)(v83[11] + v81);
  *v125 = v94;
  v95 = *(unsigned __int8 *)(v83[7] + v112);
  *v109 = v95;
  v96 = *(unsigned __int8 *)(v83[3] + v82);
  *v126 = v96;
  v97 = *(unsigned __int8 *)(v83[15] + v111);
  *v110 = v97;
  v98 = (_QWORD *)(v104 + ((unint64_t)(0 % v107) << 7));
  v99 = v98 + 147;
  LODWORD(v76) = *(_DWORD *)(v98[148] + 4 * v87) ^ *(_DWORD *)(v98[147] + 4 * v84) ^ *(_DWORD *)(v98[149] + 4 * v90) ^ *(_DWORD *)(v98[150] + 4 * v97);
  *v110 = BYTE3(v76);
  LODWORD(v90) = v76 >> (v115 - 3);
  *v122 = v90;
  *v120 = BYTE1(v76);
  *v116 = v76;
  LODWORD(v87) = *(_DWORD *)(v99[4 * v108 + 1] + 4 * v88) ^ *(_DWORD *)(v99[4 * v108] + 4 * v85) ^ *(_DWORD *)(v99[4 * v108 + 2] + 4 * v92) ^ *(_DWORD *)(v99[4 * v108 + 3] + 4 * v96);
  *v126 = BYTE3(v87);
  *v124 = BYTE2(v87);
  *v121 = BYTE1(v87);
  *v117 = v87;
  v100 = *(_DWORD *)(v99[4 * v106 + 1] + 4 * v89) ^ *(_DWORD *)(v99[4 * v106] + 4 * v86) ^ *(_DWORD *)(v99[4 * v106 + 2] + 4 * v91) ^ *(_DWORD *)(v99[4 * v106 + 3] + 4 * v95);
  LODWORD(v112) = HIBYTE(v100);
  *v109 = HIBYTE(v100);
  LODWORD(v86) = HIWORD(v100);
  *v123 = BYTE2(v100);
  v101 = v100 >> 8;
  *(_BYTE *)STACK[0x200] = BYTE1(v100);
  *v118 = v100;
  LODWORD(v85) = *(_DWORD *)(v99[4 * v105 + 1] + 4 * v113) ^ *(_DWORD *)(v99[4 * v105] + 4 * v114) ^ *(_DWORD *)(v99[4 * v105 + 2] + 4 * v93) ^ *(_DWORD *)(v99[4 * v105 + 3] + 4 * v94);
  *v125 = BYTE3(v85);
  *(_BYTE *)STACK[0x210] = BYTE2(v85);
  *(_BYTE *)STACK[0x208] = BYTE1(v85);
  *v119 = v85;
  LOBYTE(v111) = *a45 ^ v76;
  *v116 = v111;
  *v120 = a45[1] ^ BYTE1(v76);
  *v122 = a45[2] ^ v90;
  *v110 = a45[3] ^ BYTE3(v76);
  LOBYTE(v90) = a45[4] ^ v87;
  *v117 = v90;
  *v121 = a45[5] ^ BYTE1(v87);
  *v124 = a45[6] ^ BYTE2(v87);
  *v126 = a45[7] ^ BYTE3(v87);
  LOBYTE(v100) = a45[8] ^ v100;
  *v118 = v100;
  *(_BYTE *)STACK[0x200] = a45[9] ^ v101;
  LOBYTE(v93) = a45[10] ^ v86;
  *v123 = v93;
  *v109 = a45[11] ^ v112;
  v102 = a45[12] ^ v85;
  *v119 = v102;
  *(_BYTE *)STACK[0x208] = a45[13] ^ BYTE1(v85);
  *(_BYTE *)STACK[0x210] = a45[14] ^ BYTE2(v85);
  *v125 = a45[15] ^ BYTE3(v85);
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(a65 + 8 * v115) - 4))(v102, v100, v90, v111, v93);
}

void sub_21E050304()
{
  JUMPOUT(0x21E04FE94);
}

uint64_t sub_21E050328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11, _QWORD *a12, _QWORD *a13, _QWORD *a14, _QWORD *a15, _QWORD *a16, _QWORD *a17, _QWORD *a18, _QWORD *a19, _QWORD *a20,_QWORD *a21,_QWORD *a22,_QWORD *a23,_QWORD *a24,uint64_t a25,_QWORD *a26,_QWORD *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t (*a38)(void),uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,_BYTE *a48,_BYTE *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,_BYTE *a58,_BYTE *a59,_BYTE *a60,_BYTE *a61,_BYTE *a62,_BYTE *a63)
{
  _BYTE *a65;
  _BYTE *a67;
  _BYTE *a68;
  _BYTE *a69;
  _BYTE *a70;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  *a58 = *(_BYTE *)(*a27 + a4);
  *a59 = *(_BYTE *)(*a26 + a3);
  *a60 = *(_BYTE *)(*a24 + a2);
  *a61 = *(_BYTE *)(*a23 + a1);
  *a62 = *(_BYTE *)(*a22 + v74);
  *a63 = *(_BYTE *)(*a21 + v73);
  *(_BYTE *)STACK[0x200] = *(_BYTE *)(*a20 + v79);
  *(_BYTE *)STACK[0x208] = *(_BYTE *)(*a19 + v76);
  *a65 = *(_BYTE *)(*a18 + a5);
  *a67 = *(_BYTE *)(*a17 + v78);
  *a68 = *(_BYTE *)(*a16 + v71);
  *(_BYTE *)STACK[0x210] = *(_BYTE *)(*a15 + v77);
  *a69 = *(_BYTE *)(*a14 + v80);
  *a48 = *(_BYTE *)(*a13 + v70);
  *a70 = *(_BYTE *)(*a12 + v75);
  *a49 = *(_BYTE *)(*a11 + v72);
  return a38();
}

uint64_t sub_21E050470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a71 + 22456) - 12))(a1, a2, 939001227);
}

uint64_t sub_21E0507A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,_BYTE *a25,uint64_t a26,uint64_t a27,_DWORD *a28,_QWORD *a29,_BYTE *a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  uint64_t a72;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _BYTE *v77;

  *(_DWORD *)(v74 - 136) = v72
                         - 731811679 * ((((v74 - 168) | 0x2C544278) - ((v74 - 168) & 0x2C544278)) ^ 0x65A2E43C)
                         - 156;
  *(_QWORD *)(v74 - 160) = a40 + 132;
  *(_QWORD *)(v74 - 144) = a65;
  *(_BYTE *)(v74 - 168) = 95 * ((((v74 + 88) | 0x78) - ((v74 + 88) & 0x78)) ^ 0x3C) + 34;
  *(_BYTE *)(v74 - 152) = (29 * a35 + 7) ^ (95 * ((((v74 + 88) | 0x78) - ((v74 + 88) & 0x78)) ^ 0x3C));
  ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v72 ^ 0xBD4)) - 12))(v74 - 168);
  *a29 = v73;
  *a28 = a43;
  *a30 = 1;
  *a25 = 38;
  v75 = bswap32(*(_DWORD *)(a37 + 8));
  v76 = ((unint64_t)&STACK[0x228] ^ 0x7FA3BF807FBFF1FFLL)
      - 0x108182804810450CLL
      + ((2 * (_QWORD)&STACK[0x228]) & 0xFF477F00FF7FE3F0);
  v77 = (_BYTE *)(v75 + a37 + 11);
  *v77 = ((v76 + 13) ^ 0xBA) * (v76 + 30);
  *(v77 - 1) = ((v76 + ((v72 + 82) | 0xC)) ^ 0xBA) * (v76 + 31);
  return ((uint64_t (*)(void))(*(_QWORD *)(a72 + 8 * ((2008 * (((v75 + 12) & 0x1FFFFFFFELL) == 2)) ^ v72)) - 8))();
}

void sub_21E050944()
{
  JUMPOUT(0x21E0508F4);
}

uint64_t sub_21E050950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unsigned int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  unsigned int v71;
  uint64_t v72;

  STACK[0x238] = a42;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a71
                                                      + 8
                                                      * (((a42 == ((2 * (v71 ^ 0x269)) ^ 0x766)) * (v71 + 545)) ^ v71))
                                          - 8))(v72);
}

uint64_t sub_21E0509A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a71;
  int v71;
  int v72;
  uint64_t v73;
  unint64_t v74;

  v72 = 2 * (v71 ^ 0x685);
  ((void (*)(void))*(&off_24E21C7C0 + (v71 ^ 0x5A1)))();
  v73 = (v72 - 66) | 0x12u;
  v74 = ((v73 - 0x20D41254506442DLL) ^ (unint64_t)&STACK[0x218])
      + ((2 * (_QWORD)&STACK[0x218]) & 0xFBE57DB575F37FD0)
      + 0x4A7D5DBFFD2F477CLL;
  LOBYTE(STACK[0x32F]) = ((v74 - 105) ^ 0xBA) * (v74 - 88);
  LOBYTE(STACK[0x32E]) = ((v74 - 104) ^ 0xBA) * (v74 + ((((v72 - 66) | 0x12) + 4) ^ 0xB7));
  return (*(uint64_t (**)(void))(a71 + 8 * (int)(v73 ^ 0x50)))();
}

uint64_t sub_21E0509C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ ((8 * (v0 == v1)) | (16 * (v0 == v1)))))
                            - (v2 ^ 0x1AEu)
                            + 1172))();
}

uint64_t sub_21E0509F8@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = a1 - 1;
  *(_BYTE *)(v3 + v5) = ((((4 * v2) ^ 0x98) + 26) ^ (v1 + 123)) * (v1 - 116);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((8 * (v5 == 0)) | (16 * (v5 == 0))) ^ v2)) - 12))();
}

void sub_21E050A3C()
{
  STACK[0x228] = 0;
  JUMPOUT(0x21E050A50);
}

void sub_21E050B18()
{
  JUMPOUT(0x21E050AC8);
}

uint64_t sub_21E050B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v6;
  uint64_t v7;

  STACK[0x218] = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6
                                                                        + 8
                                                                        * (int)((3646
                                                                               * ((_DWORD)v7 == ((v6 + 1830712906) ^ 0x5AE679E3))) ^ v6))
                                                            - (v6 ^ 0x61ALL)))(a1, a2, v7);
}

void sub_21E050B94(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  int v12;

  v9 = v4[4];
  v10 = v4[5];
  v11 = v3 + 85 + v4[6] - 103;
  v12 = 1503746353 * ((((v8 - 168) | 0x82DEBCCC) - ((v8 - 168) | 0x7D214333) + 2099331891) ^ 0xA4BF7E7A);
  *(_DWORD *)(v8 - 168) = (a3 ^ 0x14DA90D) - v12;
  *(_DWORD *)(v8 - 144) = v12 + v3 + 174;
  *(_BYTE *)(v8 - 164) = (v11 ^ 0xDD)
                       - 49 * ((((v8 + 88) | 0xCC) - ((v8 + 88) | 0x33) + 51) ^ 0x7A)
                       + ((2 * v11) & 0xBB)
                       + 116;
  *(_QWORD *)(v8 - 160) = v6;
  *(_QWORD *)(v8 - 152) = v7;
  *(_BYTE *)(v8 - 139) = v9 - 49 * ((((v8 + 88) | 0xCC) - ((v8 + 88) | 0x33) + 51) ^ 0x7A) - ((2 * v9) & 0xD6) + 107;
  *(_BYTE *)(v8 - 140) = -49 * ((((v8 + 88) | 0xCC) - ((v8 + 88) | 0x33) + 51) ^ 0x7A) + 55 * v10 + 122;
  sub_21E07237C(v8 - 168);
  *v5 = -1;
  JUMPOUT(0x21E04CA2CLL);
}

uint64_t sub_21E050C80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = 5 * (v2 ^ 0x70Bu);
  v5 = ((2 * (_QWORD)&STACK[0x238]) & 0xD21BAFFAF727FA50)
     + ((unint64_t)&STACK[0x238] ^ 0xE90DD7FD7B93FD2DLL)
     + (v4 ^ 0x37F3BDFFFFEC3CFELL);
  v6 = a2 - 1;
  STACK[0x238] = v6;
  *(_BYTE *)(a1 + v6) = ((v5 - 12) ^ 0xBA) * (v5 + 5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((STACK[0x238] != 0) * (v4 + 806)) ^ v4)) - 8))();
}

void sub_21E050D1C()
{
  JUMPOUT(0x21E050CD8);
}

void sub_21E050D24(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_21E050DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  uint64_t v27;
  int v28;

  v28 = *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL);
  HIDWORD(a18) = 1810943893;
  a27 = 1989523337;
  HIDWORD(a16) = v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, unint64_t *, unint64_t *, unint64_t *, unint64_t *, uint64_t, int *, uint64_t))(v27 + 19912))(a1, a2, a3, a4, a5, a6, a7, a8, a9, &STACK[0x593A0D77ED4401AB], a11, &STACK[0x34AD7F4684A2272B], &STACK[0xA3B51BBC90DC053], &STACK[0x3C7D72D8717BE494], &STACK[0x1E37347F5E5694DB], a16, &a27, a18);
}

uint64_t sub_21E050F30()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v0 + 67155419) | 0x80962420) - v3 - 50) * (v1 != 1187501125)) ^ v0)))();
}

uint64_t sub_21E050F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  BOOL v25;

  v24 = v20 + v21 + 2814 + v23 + 571759178;
  v25 = a20 + 493929568 < v24;
  if ((a20 + 493929568) < 0x8E05369D != v24 < 0x8E05369D)
    v25 = v24 < 0x8E05369D;
  return ((uint64_t (*)(void))(*(_QWORD *)(v22
                                        + 8
                                        * ((21 * (((v20 + v21 + 1) ^ v25) & 1)) ^ (v20 + v21 + 3021)))
                            - 8))();
}

uint64_t sub_21E051204()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((126
                                          * (*(_DWORD *)(v3
                                                       + 48
                                                       * (int)(((v0 - 2814) ^ 0x3DAECD58 ^ (v0 - 694686995) & 0xADFEEF76)
                                                             + v1)
                                                       + 36) != v1)) ^ v0))
                            - 12))();
}

uint64_t sub_21E051268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15)
{
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  v20 = 2009815553 * ((v19 + 631667348 - 2 * ((v19 - 168) & 0x25A67B3C)) ^ 0xD4AD5579);
  STACK[0x2C8] = a12;
  STACK[0x2B8] = v15;
  STACK[0x298] = a13;
  *(_DWORD *)(v19 - 144) = v16 - v20 + 2538;
  *(_DWORD *)(v19 - 112) = v18 - v20 - 485331748;
  STACK[0x2C0] = a14;
  STACK[0x2A8] = a15;
  v21 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(a8 + 8 * (v16 - 24)) - 4))(v19 - 168);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v19 - 160) == ((v16 - 2080209822) | 0x946100) - 1285480855)
                                              * (v16 + 2669)) | v16)))(v21);
}

uint64_t sub_21E051360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * (int)(((*(_DWORD *)(v11 + 48 * (v8 + v13)) != ((v9 + 1047045672) & 0xC19759D7) + 1327836724) * (((v9 + 76554592) | 0x8006C402) ^ (v12 + 77))) ^ (v9 + 2247))) - 4))(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_21E0513DC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v1 + 76858432) | 0x80022122) ^ 0x8496EB30)
                                     * ((v0 ^ 0x9CE8C559) == v2 - 1344614388)) ^ v1)))();
}

uint64_t sub_21E051438@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v5;
  int v6;
  int v8;
  uint64_t v9;
  int v10;
  int v11;

  if ((v2 + 1662466747) <= 0x10 && ((1 << (v2 - 69)) & 0x10125) != 0)
  {
    v8 = v6 + 64;
    v9 = a2 & 0xFFFFFFFFFFFFFFFLL;
    if (v9)
    {
      if (v9 == 3)
      {
        v10 = v8 + v3;
        v11 = (*(uint64_t (**)())(v5 + 48 * a2 + 8))();
        __asm { BR              X8 }
      }
      __asm { BR              X2 }
    }
    __asm { BR              X11 }
  }
  return a1 ^ 0xC8075E55;
}

void sub_21E0519F8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1503746353 * (a1 ^ 0x2661C2B6);
  __asm { BR              X14 }
}

void sub_21E051AF4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
}

void OowSGu()
{
  _DWORD v0[12];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * (((v0 | 0xC6444001) - (v0 & 0xC6444001)) ^ 0x61172868)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X11 }
}

uint64_t sub_21E052B48()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v0 + 8 * ((122 * (v1 == 0)) ^ 0x23Eu)))();
}

uint64_t sub_21E052B70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)((v5 ^ 0x6E0FF46CEF4CB33FLL) - 0x6E0FF46CEF4CB327);
  v8 = 1866394843 * ((v10 & 0x8F063A7C | ~(v10 | 0x8F063A7C)) ^ 0x9AEEF277);
  v11 = v1;
  v12 = v3;
  v14 = v2;
  v15 = v7;
  v10[0] = v8 ^ 0x151;
  v10[1] = ((2 * v4) & 0xFFDB7E2E) + (v4 ^ 0x7FEDBF17) - 942184455 + v8;
  ((void (*)(_DWORD *))(*(_QWORD *)(a1 + 4080) - 12))(v10);
  return v13 ^ v6;
}

uint64_t sub_21E052C6C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)(a1 + 8) == 0x1D6B5E1B077DD04ALL;
  else
    v2 = 1;
  v4 = !v2 && *(_QWORD *)a1 != 0x2A752CF9B62C38AELL;
  v1 = *(_DWORD *)(a1 + 28) - 1734664879 * ((2 * (a1 & 0x7C799403) - a1 + 59141116) ^ 0x2C5D43E6);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + v1 - 1853) + 8 * (((4 * v4) | (8 * v4)) ^ v1) - 12)
                            - 8))();
}

uint64_t sub_21E052D0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) = 1022332075;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F96) = v2;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F86) = v2 + 256;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F76) = v2 + 512;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F66) = v2 + 768;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F56) = v2 + 1024;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F46) = v2 + 1280;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F36) = v2 + 1536;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F26) = v2 + 1792;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F16) = v2 + 2048;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2F06) = v2 + 2304;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2EF6) = v2 + 2560;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2EE6) = v2 + 2816;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2ED6) = v2 + 3072;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2EC6) = v2 + 3328;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2EB6) = v2 + 3584;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_QWORD *)(v3 - 0x2A752CF9B62C2EA6) = v2 + 3840;
  *(_DWORD *)(a2 - 0x1D6B5E1B077DD04ALL) += 256;
  *(_DWORD *)(result + 24) = 939001227;
  return result;
}

uint64_t sub_21E052F74(uint64_t result)
{
  *(_DWORD *)(result + 24) = -939041305;
  return result;
}

void sub_21E052F84(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v1 = 1948972247 * ((-2 - ((a1 | 0x89C340FF) + (~(_DWORD)a1 | 0x763CBF00))) ^ 0xC3A24AEE);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x6898E7DB637CE95FLL) + 240218939;
  v3 = *(_DWORD *)(a1 + 16) + v1 - 1027747785;
  v4 = (v3 < 0x247F7132) ^ (v2 < 0x247F7132);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0x247F7132;
  __asm { BR              X11 }
}

uint64_t sub_21E0530A0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((*(_BYTE *)(v1 - 0x6898E7DB637CE957) & 1) == 0)
                                          * (((v0 ^ 0xD36) - 741) ^ 0x73F)) ^ v0))
                            - 12))();
}

void sub_21E0530E4()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x6898E7DB637CE953) = -939041185;
}

void sub_21E05375C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) + 1948972247 * ((a1 + 1757108041 - 2 * (a1 & 0x68BB5749)) ^ 0xDD25A2A7);
  __asm { BR              X14 }
}

uint64_t sub_21E0538A4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((2 * v1) & 0xF7BFDBF8 ^ 0xB6871B98)
                                           + (v1 ^ 0xA49C7232)
                                           + (((v0 - 2681) | 0x2E2) ^ 0x3FBCFD07) == 1000139996)
                                          * ((v0 - 1476) ^ 0x559)) ^ v0))
                            - 12))();
}

uint64_t sub_21E053918(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (3456 * ((a1 + v7 + 69210628) > 7))))
                            - (a7 ^ 0x93Eu)
                            + 3196))();
}

uint64_t sub_21E053964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1018 * (a8 > 0xFFFFFFEF)) ^ a7)) - 8))();
}

uint64_t sub_21E0539A0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v24;

  v13 = a7 + 891;
  v14 = (a5 + a1 + v10 + 16);
  v15 = v11 - 0x2C4F5E3A6E84968ELL + v14;
  v16 = a4 - (v11 - 0x2C4F5E3A6E84968ELL) - 0x4B675195D5CFAF5ALL;
  v17 = v14 & 0xF;
  v18 = v17 + v9 - v15;
  v19 = v17 + v8 - v15;
  v20 = (v17 | v7) - v15;
  v24 = v18 < 0x10 || v16 < (unint64_t)((v13 - 296414128) & 0x11AAEEFE) - 3188 || v19 < 0x10 || v20 < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((113 * v24) ^ v13)) - 4))();
}

uint64_t sub_21E053A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * (((v7 < 719 * ((a7 + 578) ^ 0xB74u)
                                                                                        - 2141)
                                                                                  * ((2 * (a7 + 578)) ^ 0x1632)) ^ (a7 + 578)))
                                                                    - 8))(a1, a2, a3, 0);
}

uint64_t sub_21E053A90@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  int8x16_t v31;
  uint64_t v32;
  int8x16_t v33;
  int8x16_t v34;
  int8x16x4_t v36;
  int8x16x4_t v37;

  v30 = (v23 ^ 0x1436) - 1;
  *(_DWORD *)(v29 - 116) = a3 + 8;
  v36.val[1].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v36.val[1].i64[1] = a3 & 0xF;
  v36.val[2].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v36.val[2].i64[1] = ((_BYTE)a3 + 14) & 0xF;
  v36.val[3].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v36.val[3].i64[1] = ((_BYTE)a3 + 12) & 0xF;
  v31.i64[0] = 0xF0F0F0F0F0F0F0FLL;
  v31.i64[1] = 0xF0F0F0F0F0F0F0FLL;
  v32 = v26 + v28 + a2 + a1 - 388 + ((v30 - 129338185) & 0x7B589F5u);
  v36.val[0].i64[0] = ((_BYTE)v26 + (_BYTE)v28 + (_BYTE)a2 + (_BYTE)a1 + 124 + (((_BYTE)v30 - 73) & 0xF5)) & 0xF;
  v36.val[0].i64[1] = ((_BYTE)a3 + 2) & 0xF;
  v33.i64[0] = vqtbl4q_s8(v36, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v37.val[0].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v37.val[1].i64[1] = *(_DWORD *)(v29 - 116) & 0xF;
  v37.val[2].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v37.val[3].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  v37.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)v30 + 52) & 0xF;
  v37.val[1].i64[0] = ((_BYTE)a3 + 9) & 0xF;
  v37.val[2].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v37.val[3].i64[0] = (a3 + 5) & 0xF;
  v33.i64[1] = vqtbl4q_s8(v37, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v34 = vrev64q_s8(vmulq_s8(v33, v31));
  *(int8x16_t *)(a4 - 15 + v32) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v25 + (v32 & 0xF) - 15), *(int8x16_t *)(v21 - 15 + v32)), veorq_s8(*(int8x16_t *)(v24 + (v32 & 0xF) - 15), *(int8x16_t *)(v22 + (v32 & 0xF) - 15))), vextq_s8(v34, v34, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a21 + 8 * ((15 * ((v27 & 0xFFFFFFF0) != 16)) ^ v30)) - 4))();
}

void sub_21E053C14()
{
  JUMPOUT(0x21E053B9CLL);
}

uint64_t sub_21E053C20()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 - 132) * (v0 == 0x5F439FCE)) ^ v1))
                            - ((v1 - 214) | 0x347u)
                            + 995))();
}

uint64_t sub_21E053C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;

  v11 = v7 > 0x65E026DD;
  v12 = (v9 - 62803631);
  *(_BYTE *)(a1 + v12) = *(_BYTE *)(v5 + (v12 & ((v6 ^ 0x602u) - 984))) ^ *(_BYTE *)(v1 + v12) ^ *(_BYTE *)(v4 + (v12 & ((v6 ^ 0x602u) - 984))) ^ *(_BYTE *)(v2 + (v12 & ((v6 ^ 0x602u) - 984))) ^ (15 * (v12 & ((v6 ^ 2) + 40)));
  if (v11 == v9 - 1771992460 < v3)
    v11 = v9 - 1771992460 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((975 * v11) ^ v6)) - 8))();
}

uint64_t sub_21E053D10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (3030 * (v7 != a4))))
                            - (((a7 - 254) | 0x361u) ^ 0x3E3)))();
}

uint64_t sub_21E053D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((((v7 & 8) != (((a7 + 1788) | 0x404) ^ 0xC84))
                                          * ((a7 - 392791941) & 0x17698E6D ^ 0x67C)) ^ (a7 + 1078)))
                            - 8))();
}

uint64_t sub_21E053DA8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  unsigned int v31;
  int8x16x4_t v33;

  *(_DWORD *)(v29 - 116) = v27 & 0xFFFFFFF8;
  v30 = a2 + a1 + v28;
  v31 = v30 + v26 - a3;
  v33.val[0].i32[0] = v31 & (((a4 - 741) | 0x32) - 1451);
  v33.val[0].i64[0] = v33.val[0].u32[0];
  v33.val[0].i64[1] = ((_BYTE)v30 - (_BYTE)a3 + 2) & 0xF;
  v33.val[1].i64[0] = ((_BYTE)v30 - (_BYTE)a3 + 1) & 0xF;
  v33.val[1].i64[1] = ((_BYTE)v30 - (_BYTE)a3) & 0xF;
  v33.val[2].i64[0] = ((_BYTE)v30 - (_BYTE)a3 - 1) & 0xF;
  v33.val[2].i64[1] = ((_BYTE)v30 - (_BYTE)a3 + 14) & 0xF;
  v33.val[3].i64[0] = ((_BYTE)v30 - (_BYTE)a3 + 13) & 0xF;
  v33.val[3].i64[1] = ((_BYTE)v30 - (_BYTE)a3 + 12) & 0xF;
  *(int8x8_t *)(a5 - 7 + v31) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v25 + v33.val[0].i64[0] - 7), *(int8x8_t *)(v22 - 7 + v31)), veor_s8(*(int8x8_t *)(v24 + v33.val[0].i64[0] - 7), *(int8x8_t *)(v23 + v33.val[0].i64[0] - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v33, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xF0F0F0F0F0F0F0FLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a22 + 8 * ((1320 * (a3 - (v27 & 0xFFFFFFF8) == -8)) ^ a4))
                                         - 12))((__n128)xmmword_21E17F900);
}

void sub_21E053EC4()
{
  JUMPOUT(0x21E053DFCLL);
}

uint64_t sub_21E053ECC()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((((v1 - 757) | 0x122) - 904) * (v0 == *(_DWORD *)(v3 - 116))) ^ v1))
                            - 8))();
}

uint64_t sub_21E053F08@<X0>(unsigned int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a2 + (v4 + v8)) = *(_BYTE *)(v6 + ((v4 + v8) & 0xFLL)) ^ *(_BYTE *)(v2
                                                                                             + (v4 + v8)) ^ *(_BYTE *)(v5 + (((_BYTE)v4 + (_BYTE)v8) & 0xF)) ^ *(_BYTE *)(v3 + (((_BYTE)v4 + (_BYTE)v8) & 0xF)) ^ (15 * ((v4 + v8) & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)((898 * (v4 - 1 != v7)) ^ (a1 - 2816))) - (a1 ^ 0xC80)))();
}

uint64_t sub_21E053F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  _BOOL4 v29;

  v22 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(v18 + 24));
  v23 = vextq_s8(v22, v22, 8uLL);
  v24.i64[0] = 0x2B2B2B2B2B2B2B2BLL;
  v24.i64[1] = 0x2B2B2B2B2B2B2B2BLL;
  v25.i64[0] = 0xD4D4D4D4D4D4D4D4;
  v25.i64[1] = 0xD4D4D4D4D4D4D4D4;
  v26 = vaddq_s8(vorrq_s8(v23, v24), vorrq_s8(v23, v25));
  v24.i64[0] = 0xF4F4F4F4F4F4F4F4;
  v24.i64[1] = 0xF4F4F4F4F4F4F4F4;
  v27 = vrev64q_s8(veorq_s8(vaddq_s8(v26, v24), (int8x16_t)xmmword_21E17F920));
  *(int8x16_t *)(v21 - 112) = vextq_s8(v27, v27, 8uLL);
  v29 = v19 == 0x2C4F5E3A6E84968ELL || a9 == 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * (int)(a5 ^ (1900 * v29))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_21E054008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  int v26;
  uint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  _BOOL4 v32;

  v28 = v26 + 1148;
  v29 = HIDWORD(a13) - (((HIDWORD(a13) << (a26 - 37)) - 1088039952) & 0xF7B3BDDE) + 1533855975;
  v30 = ((v29 << (v28 ^ 0x8A)) & 0xBFEFF77E ^ 0xB7A3B55E) + (v29 ^ 0xA42E2550);
  v32 = ((v28 ^ 0x2FF ^ (21 * (v28 ^ 0x4C4))) & (v30 + 1)) == 0 && v30 != -537396289;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((312 * v32) ^ v28)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_21E0540D8@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  int v24;
  char v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  char *v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  uint64_t v34;
  int v35;
  char v36;
  unsigned __int8 v37;
  char v38;
  int v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  char v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  char *v53;
  char *v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  char *v59;
  unsigned int v60;
  int v61;
  uint64_t v62;
  unsigned int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unsigned int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unint64_t v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  char v115;
  unsigned __int8 v116;
  unsigned int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  unint64_t v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unint64_t v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  char *v184;
  uint64_t v185;
  int v186;
  char *v187;
  unsigned int v188;
  char *v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  char *v197;
  char *v198;
  uint64_t v199;
  unsigned int v200;
  char *v201;
  int v202;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  unsigned int v213;

  v21 = (char *)*(&off_24E21C7C0 + v19 - 1246) - 8;
  v22 = (char *)*(&off_24E21C7C0 + (v19 ^ 0x711)) - 12;
  v23 = (char *)*(&off_24E21C7C0 + (v19 ^ 0x6B8)) - 8;
  v24 = *(unsigned __int8 *)(v20 - 110) - 2109068901 - ((2 * *(unsigned __int8 *)(v20 - 110)) & 0x136);
  v25 = ~(_BYTE)v24 & 0x18;
  v26 = ((v24 ^ 0x7DB5D688) + 237) ^ ((v24 ^ 0x7DB5D664) + 1);
  v27 = ((v26 - ((2 * v26) & 0x4945336) - 2109068901) ^ v24) + 236;
  LOBYTE(v26) = (v21[v27 ^ 0xED] + (v27 ^ 0x83) - 78) ^ 0xD0;
  LODWORD(v27) = v22[*(unsigned __int8 *)(v20 - 97) ^ 0xABLL] ^ ((v23[*(unsigned __int8 *)(v20 - 100) ^ 0x9CLL] ^ 0x77) << v25 << (v25 ^ 0x18));
  v28 = (v22[(*(unsigned __int8 *)(v20 - 109) - ((2 * *(unsigned __int8 *)(v20 - 109)) & 0x58u) + 44) ^ 0x61] ^ 0x19) & 0xFFFF00FF | (v26 << 8);
  v29 = (char *)*(&off_24E21C7C0 + (v19 ^ 0x7C4)) - 4;
  LOBYTE(v26) = v29[*(unsigned __int8 *)(v20 - 107) ^ 0x7ALL];
  v30 = v28 | ((v23[*(unsigned __int8 *)(v20 - 112) ^ 0xD6] ^ 3) << 24);
  LOBYTE(v28) = (-23 * v26 - 58) ^ (-98 * v26 + 20) ^ 0x17;
  LOBYTE(v26) = v29[*(unsigned __int8 *)(v20 - 103) ^ 0xC7];
  v211 = v21;
  v209 = v23;
  v210 = v22;
  v31 = (v22[((v19 + 52) ^ *(_BYTE *)(v20 - 105))] ^ 0x19) & 0xFF0000FF | (v28 << 16) | ((((*(_BYTE *)(v20 - 106) ^ 0xA7) + v21[*(unsigned __int8 *)(v20 - 106) ^ 0xC9] - 78) ^ 0xB8) << 8);
  v208 = v29;
  LOBYTE(v28) = v29[*(unsigned __int8 *)(v20 - 99) ^ 0xDDLL];
  v213 = (v22[*(unsigned __int8 *)(v20 - 101) ^ 0xB5] ^ 0x19 | ((((*(_BYTE *)(v20 - 102) ^ 0xD5) + v21[*(unsigned __int8 *)(v20 - 102) ^ 0xBBLL] - 78) ^ 0x5B) << 8) | ((((-23 * v26 - 58) ^ (-98 * v26 + 20)) ^ 0x4C) << 16) | ((v23[*(unsigned __int8 *)(v20 - 104) ^ 8] ^ 0xFFFFFF81) << 24)) ^ 0x4FBBF059;
  v32 = (v30 & 0xFF00FFFF | ((((-23 * v29[*(unsigned __int8 *)(v20 - 111) ^ 0xF4] - 58) ^ (-98 * v29[*(unsigned __int8 *)(v20 - 111) ^ 0xF4] + 20)) ^ 0x76) << 16)) ^ 0x8162A07;
  LODWORD(v23) = (v31 | ((v23[*(unsigned __int8 *)(v20 - 108) ^ 0x39] ^ 0xBA) << 24)) ^ 0x6E7EC66C;
  v33 = v27 ^ ((((*(_BYTE *)(v20 - 98) ^ 0xEC) + v21[*(unsigned __int8 *)(v20 - 98) ^ 0x82] - 78) ^ 0x42) << 8) ^ ((((-23 * v28 - 58) ^ (-98 * v28 + 20)) ^ 0x12) << 16) ^ 0x38304EA3;
  HIDWORD(v206) = (v19 + 1545) ^ 0xCDC;
  LODWORD(v206) = (v19 + 1545) ^ 0xC09;
  HIDWORD(v205) = (v19 + 1545) ^ 0xD89;
  LODWORD(v205) = (v19 + 1545) ^ 0xDF6;
  HIDWORD(v204) = (v19 + 1545) ^ 0xC5C;
  *(_DWORD *)(v20 - 116) = v19 + 1545;
  LODWORD(v204) = (v19 + 1545) ^ 0xC7B;
  HIDWORD(a17) = 0;
  *(_QWORD *)(v20 - 160) = 7;
  v34 = (v19 - 988139157) & 0x3AE5CF3F ^ 0x728u;
  *(_QWORD *)(v20 - 152) = v34;
  v35 = v22[a1[7] ^ 0x80];
  v36 = (a1[v34] ^ 0x2C) + v21[a1[v34] ^ 0x42] - 78;
  *(_QWORD *)(v20 - 128) = 1;
  LOBYTE(v26) = v29[a1[9] ^ 0x6ELL];
  v37 = v36 ^ 0xE0;
  v38 = v29[a1[1] ^ 0x1DLL];
  LOBYTE(v29) = (20 - 98 * v38) ^ (-58 - 23 * v38) ^ 0xE;
  v39 = v209[a1[4] ^ 0x54];
  *(_QWORD *)(v20 - 144) = 3;
  *(_QWORD *)(v20 - 136) = 11;
  v40 = a1[3];
  v41 = v35 ^ 0x19 | ((v39 ^ 0x50) << 24);
  v42 = (v22[a1[11] ^ 0xCCLL] ^ 0x19) & 0xFF00FFFF | ((((20 - 98 * v26) ^ (-58 - 23 * v26)) ^ 0x78) << 16);
  *(_QWORD *)(v20 - 192) = 2;
  LODWORD(v40) = (v22[v40 ^ 0x8F] ^ 0x19) & 0xFF00FFFF | (v29 << 16);
  LOBYTE(v22) = ((a1[2] ^ 0xCC) + v21[a1[2] ^ 0xA2] - 78) ^ 0x76;
  *(_QWORD *)(v20 - 168) = 10;
  v43 = v208[a1[5] ^ 0x19];
  LODWORD(v29) = v40 & 0xFFFF00FF | (v22 << 8) | ((v209[*a1 ^ 0x32] ^ 0x6F) << 24);
  v44 = a1[6];
  v45 = v42 & 0xFFFF00FF | (((v21[a1[10] ^ 0xDDLL] + (a1[10] ^ 0xB3) - 78) ^ 0x60) << 8) | ((v209[a1[8] ^ 0xD3] ^ 9) << 24);
  *(_QWORD *)(v20 - 176) = 15;
  LOBYTE(v28) = v21[v44 ^ 0xA5];
  *(_QWORD *)(v20 - 184) = 13;
  v46 = v41 & 0xFF0000FF | ((((20 - 98 * v43) ^ (-58 - 23 * v43)) ^ 0x82) << 16) | (((v28 + (v44 ^ 0xCB) - 78) ^ 0x8A) << 8);
  LOBYTE(v28) = v208[a1[13] ^ 0x18];
  v47 = v209[a1[12] ^ 0x5ALL];
  v48 = ((v210[a1[15] ^ 0xDCLL] ^ 0x19) & 0xFF0000FF | (unsigned __int16)(v37 << 8) | ((((-58 - 23 * v28) ^ (20 - 98 * v28)) ^ 0x35) << 16) | ((v47 ^ 0xFFFFFFB5 ^ -(v47 ^ 0xFFFFFFB5) ^ ((v47 ^ 0x70) + 59)) << 24))
      + 973078528;
  v49 = v45 ^ v213;
  v50 = v29 ^ v32;
  v51 = v48 ^ v33;
  BYTE1(v34) = BYTE1(v46) ^ BYTE1(v23);
  v52 = v46 ^ v23 ^ 0x582A17B3;
  v53 = (char *)*(&off_24E21C7C0 + *(_DWORD *)(v20 - 116) - 3161) - 8;
  v54 = (char *)*(&off_24E21C7C0 + SHIDWORD(v206)) - 12;
  v55 = *(_DWORD *)&v54[4 * (((v46 ^ v23) >> 16) ^ 0xD2)];
  v56 = (v55 ^ 0x7BD85DF0) - 1221024071 + ((2 * v55) & 0x6E714D70 ^ 0x99CFF69F);
  v57 = (v56 ^ 0x74DFDFF3) - 1960828915 + ((2 * v56) & 0xE9BFBFE6);
  v58 = *(_DWORD *)&v53[4 * (HIBYTE(v50) ^ 0x55)] ^ ((HIBYTE(v50) ^ 8) + 122136465 - ((v50 >> 23) & 0x122)) ^ 0xA2E3EC45;
  v59 = (char *)*(&off_24E21C7C0 + (int)v206) - 8;
  v60 = (v58 ^ -v58 ^ ((v58 ^ v57) + v57 - 2 * (v58 ^ v57))) + v57;
  v61 = (v60 + 811328393 - ((2 * v60) & 0x60B7C712)) ^ *(_DWORD *)&v59[4 * (BYTE1(v49) ^ 0x3E)];
  v62 = (uint64_t)*(&off_24E21C7C0 + *(_DWORD *)(v20 - 116) - 2792);
  v63 = (v61 + 671676296 - ((2 * v61) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v51 ^ 0x3Bu));
  v64 = HIBYTE(v52) ^ *(_DWORD *)&v53[4 * (HIBYTE(v52) ^ 0x27)] ^ *(_DWORD *)&v54[4 * (BYTE2(v49) ^ 0xB5)] ^ 0x6944B0E6;
  v65 = *(_DWORD *)&v59[4 * (BYTE1(v51) ^ 0xDD)] ^ 0xCFC2A5BC;
  v66 = (v64 + v65 - 2 * (v64 & v65) + 671676296 - ((2 * (v64 + v65 - 2 * (v64 & v65))) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v50 ^ 0x2Du));
  LODWORD(v29) = *(_DWORD *)&v54[4 * (BYTE2(v51) ^ 0xC8)];
  v67 = *(_DWORD *)&v53[4 * (HIBYTE(v49) ^ 0x14)] ^ ((HIBYTE(v49) ^ 0x4F)
                                                   + 122136465
                                                   - ((2 * (HIBYTE(v49) ^ 0x4F)) & 0x122));
  v68 = (v29 ^ 0xCCE0FB48 ^ -(v29 ^ 0xCCE0FB48) ^ ((v29 ^ 0x91FCE8F4 ^ v67)
                                                                             + (v67 ^ 0xA2E3EC43)
                                                                             + 1))
      + (v67 ^ 0xA2E3EC43);
  v51 >>= 24;
  LODWORD(v22) = (v51 ^ 0x3D) - ((2 * (v51 ^ 0x3D)) & 0x68);
  v69 = *(_DWORD *)(v62 + 4 * (v52 ^ 0x4Bu)) ^ *(_DWORD *)&v59[4 * (BYTE1(v50) ^ 0xDE)] ^ (v68 + 811328393 - ((2 * v68) & 0x60B7C712));
  v70 = ((_DWORD)v22 + 1657147077 + ((2 * ((_DWORD)v22 + 1535010612)) & 0x4F22 ^ 0xF973FFFF) + 1) ^ *(_DWORD *)&v53[4 * (v51 ^ 0x1A)];
  v71 = (v70 + 2077777392 - ((2 * v70) & 0xF7B0BBE0)) ^ *(_DWORD *)&v54[4 * (BYTE2(v50) ^ 0x21)];
  v72 = *(_DWORD *)(v62 + 4 * (v49 ^ 0x9Cu)) ^ *(_DWORD *)&v59[4 * (BYTE1(v34) ^ 0x7F)] ^ (v71 + 811328393 - ((2 * v71) & 0x60B7C712));
  v73 = *(_DWORD *)&v54[4 * (BYTE2(v66) ^ 0x89)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v63) ^ 0x90)];
  v74 = ((v73 ^ 0x7C9FFA61) + 811328393 - 2 * ((v73 ^ 0x7C9FFA61) & 0x305BE39D ^ v73 & 0x14)) ^ *(_DWORD *)&v59[4 * (BYTE1(v69) ^ 0xE6)];
  LODWORD(v22) = v72 ^ 0x24557795;
  LODWORD(v34) = HIBYTE(v63) ^ *(_DWORD *)(v62 + 4 * (v72 ^ 0xDEu)) ^ (v74
                                                                                        + 671676296
                                                                                        - ((2 * v74) & 0x5011EF10));
  v75 = *(_DWORD *)&v54[4 * (BYTE2(v69) ^ 0xDC)] ^ *(_DWORD *)&v59[4
                                                                 * (((unsigned __int16)(v72 ^ 0x7795) >> 8) ^ 0x68)];
  v76 = ((v75 ^ 0x4B83BE79) + 122136465 - 2 * ((v75 ^ 0x4B83BE79) & 0x747A795 ^ v75 & 4)) ^ *(_DWORD *)&v53[4 * (HIBYTE(v66) ^ 0xD6)];
  v77 = (v76 + 671676296 - ((2 * v76) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v63 ^ 0xC1u));
  v78 = *(_DWORD *)&v54[4 * (BYTE2(v72) ^ 0xAD)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v69) ^ 0x62)];
  v79 = ((v78 ^ 0x7C9FFA61) + 811328393 - 2 * ((v78 ^ 0x7C9FFA61) & 0x305BE39F ^ v78 & 0x16)) ^ *(_DWORD *)&v59[4 * (BYTE1(v63) ^ 0x59)];
  LODWORD(v29) = v22 >> 24;
  v80 = (v79 + 671676296 - ((2 * v79) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v66 ^ 0x68u));
  v81 = *(_DWORD *)&v54[4 * (BYTE2(v63) ^ 0x18)] ^ *(_DWORD *)&v53[4 * ((v22 >> 24) ^ 0x27)];
  HIDWORD(v212) = 811328415;
  LODWORD(v22) = *(_DWORD *)(v62 + 4 * (v69 ^ 0xE7u)) ^ *(_DWORD *)&v59[4 * (BYTE1(v66) ^ 0x61)] ^ ((v81 ^ 0x7C9FFA61) + 811328393 - 2 * ((v81 ^ 0x7C9FFA61) & 0x305BE39F ^ v81 & 0x16));
  v82 = BYTE3(v34);
  v83 = *(_DWORD *)&v54[4 * (BYTE2(v77) ^ 0x34)] ^ *(_DWORD *)&v53[4 * (BYTE3(v34) ^ 0x8C)];
  v84 = v80 ^ HIBYTE(v69);
  LODWORD(v44) = (v83 ^ 0x7C9FFA61) + 811328393 - 2 * ((v83 ^ 0x7C9FFA61) & 0x305BE38B ^ v83 & 2);
  v85 = HIBYTE(v77);
  v86 = *(_DWORD *)(v62 + 4 * (v29 ^ 0x1B ^ v22)) ^ *(_DWORD *)&v59[4 * ((((unsigned __int16)(v84 ^ 0xFD20) >> 8) + (((unsigned __int16)(v84 ^ 0xFD20) >> 8) ^ 0xFFFFFF97) + 1) ^ 0xFFFFFFF0) + 4 * ((unsigned __int16)(v84 ^ 0xFD20) >> 8)] ^ v44;
  LODWORD(v29) = *(_DWORD *)&v54[4 * (BYTE2(v80) ^ 0xAA)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v77) ^ 0x84)];
  LODWORD(v44) = *(_DWORD *)(v62 + 4 * ((v34 ^ 0xE0) + ((2 * (_DWORD)v34) & 0x96 ^ 0xFFFFFF7F) + 76)) ^ *(_DWORD *)&v59[4 * (BYTE1(v22) ^ 0x76)] ^ ((v29 ^ 0x7C9FFA61) + 811328393 - 2 * ((v29 ^ 0x7C9FFA61) & 0x305BE39D ^ v29 & 0x14));
  LODWORD(v29) = (v84 ^ 0xC852FD20) >> 24;
  v87 = *(_DWORD *)&v54[4 * (BYTE2(v22) ^ 0xE8)] ^ *(_DWORD *)&v53[4 * (v29 ^ 0x27)];
  v88 = ((v87 ^ 0x7C9FFA61) + 811328393 - 2 * ((v87 ^ 0x7C9FFA61) & 0x305BE39D ^ v87 & 0x14)) ^ *(_DWORD *)&v59[4 * (BYTE1(v34) ^ 0xA3)];
  v89 = (v88 + 671676296 - ((2 * v88) & 0x5011EF10)) ^ *(_DWORD *)(v62
                                                                 + 4 * (HIBYTE(v66) ^ 0xE8 ^ v77));
  v90 = v22 >> 24;
  LODWORD(v22) = *(_DWORD *)&v53[4 * ((v22 >> 24) ^ 0x83)];
  v91 = v90 ^ 0x5A5BB4F5 ^ v22;
  LODWORD(v22) = v22 ^ 0x747A791;
  v92 = (v91 + (_DWORD)v22 + 1) ^ ((v90 ^ 0x5D1C1364) + 1);
  v93 = (v90 ^ 0xDE7C382D ^ (v92 - ((2 * v92) & 0xF93FA96C) + 2090849462)) + (_DWORD)v22;
  LODWORD(v34) = (v93 + 2077777392 - ((2 * v93) & 0xF7B0BBE0)) ^ *(_DWORD *)&v54[4 * (BYTE2(v34) ^ 0x6E)];
  v94 = *(_DWORD *)(v62 + 4 * (v84 ^ 0x6Bu)) ^ *(_DWORD *)&v59[4 * (BYTE1(v77) ^ 0x55)] ^ (v34 + 811328393 - ((2 * v34) & 0x60B7C712));
  LODWORD(v34) = *(_DWORD *)&v53[4 * (HIBYTE(v86) ^ 0x1A)];
  LODWORD(v34) = (v34 ^ 0x747A791) + (HIBYTE(v86) ^ 0xA2E3EC02) - 2 * ((v34 ^ 0x243A491) & (HIBYTE(v86) ^ 0xA2E3EC02));
  LOBYTE(v93) = v89 ^ v29;
  LODWORD(v22) = v89 ^ v29 ^ 0x7ED2C8B5;
  HIDWORD(v95) = v22 >> 8;
  LODWORD(v95) = BYTE1(v22);
  LODWORD(v95) = (v95 >> 2) ^ __ROR4__(BYTE1(v22) ^ 0xFF994635, 2) ^ 0x9CDE7CBE;
  HIDWORD(v95) = v95;
  v96 = *(_DWORD *)&v59[4 * (BYTE1(v22) ^ 0x68)] ^ *(_DWORD *)&v54[4 * (BYTE2(v44) ^ 0x19)] ^ *(_DWORD *)(v62 + 4 * (v94 ^ 5u)) ^ (v34 + 2077777392 - ((2 * v34) & 0xF7B0BBE0)) ^ ((v95 >> 30) + 811328393 - ((2 * (v95 >> 30)) & 0x60B7C712));
  LODWORD(v34) = *(_DWORD *)&v53[4 * (BYTE3(v44) ^ 0xAA)] ^ *(_DWORD *)&v54[4 * (BYTE2(v89) ^ 0x2A)];
  v97 = ((v34 ^ 0x7C9FFA61) + 811328393 - 2 * ((v34 ^ 0x7C9FFA61) & 0x305BE38D ^ v34 & 4)) ^ *(_DWORD *)&v59[4 * (BYTE1(v94) ^ 0xA1)];
  LODWORD(v22) = v22 >> 24;
  v98 = (v97 + 671676296 - ((2 * v97) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v82 ^ 0xEA ^ v86));
  v99 = *(_DWORD *)&v54[4 * (BYTE2(v94) ^ 0xB0)] ^ *(_DWORD *)&v53[4 * (v22 ^ 0x27)];
  v100 = ((v99 ^ 0x7C9FFA61) + 811328393 - 2 * ((v99 ^ 0x7C9FFA61) & 0x305BE399 ^ v99 & 0x10)) ^ *(_DWORD *)&v59[4 * (BYTE1(v86) ^ 0x97)];
  v94 >>= 24;
  v101 = (v100 + 671676296 - ((2 * v100) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v85 ^ 0x24 ^ v44));
  v102 = *(_DWORD *)&v53[4 * (v94 ^ 0x4C)] ^ *(_DWORD *)&v54[4 * (BYTE2(v86) ^ 0xBC)];
  v103 = *(_DWORD *)(v62 + 4 * (v93 ^ 0xFEu)) ^ *(_DWORD *)&v59[4 * (BYTE1(v44) ^ 0x59)] ^ ((v102 ^ 0x7C9FFA61) + 811328393 - 2 * ((v102 ^ 0x7C9FFA61) & 0x305BE38D ^ v102 & 4));
  v104 = v98 ^ BYTE3(v44);
  v105 = (v96 ^ 0x9FB1280E) >> 24;
  v106 = *(_DWORD *)&v54[4 * (BYTE2(v98) ^ 0xC2)] ^ *(_DWORD *)&v53[4 * (v105 ^ 0x27)];
  LODWORD(v29) = v101 ^ v22;
  v107 = ((v106 ^ 0x7C9FFA61) + 811328393 - 2 * ((v106 ^ 0x7C9FFA61) & 0x305BE399 ^ v106 & 0x10)) ^ *(_DWORD *)&v59[4 * (BYTE1(v101) ^ 0xE1)];
  BYTE1(v98) = BYTE1(v104) ^ 0xB2;
  v108 = (v104 ^ 0x2F3AB22B) >> 24;
  v109 = (v107 + 671676296 - ((2 * v107) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v94 ^ 0x42 ^ v103));
  LODWORD(v22) = *(_DWORD *)&v54[4 * (((v29 ^ 0x42818987) >> 16) ^ 0xF8)] ^ *(_DWORD *)&v53[4 * (v108 ^ 0x27)];
  LODWORD(v21) = (v22 ^ 0x7C9FFA61)
               + 811328393
               - 2 * ((v22 ^ 0x7C9FFA61) & 0x305BE39B ^ v22 & 0x12);
  v110 = (v29 ^ 0x42818987) >> 24;
  LODWORD(v27) = *(_DWORD *)&v53[4 * (v110 ^ 0x27)] ^ *(_DWORD *)&v54[4 * (BYTE2(v103) ^ 0xBB)];
  v111 = *(_DWORD *)(v62 + 4 * (v96 ^ 0x45u)) ^ *(_DWORD *)&v59[4 * (BYTE1(v103) ^ 0x37)] ^ v21;
  LODWORD(v27) = ((v27 ^ 0x7C9FFA61) + 811328393 - 2 * ((v27 ^ 0x7C9FFA61) & 0x305BE38B ^ v27 & 2)) ^ *(_DWORD *)&v59[4 * (BYTE1(v96) ^ 0x40)];
  v112 = (v27 + 671676296 - ((2 * v27) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v104 ^ 0x60u));
  v103 >>= 24;
  LODWORD(v27) = *(_DWORD *)&v53[4 * (v103 ^ 0xBF)] ^ *(_DWORD *)&v54[4 * (BYTE2(v96) ^ 0x49)] ^ 0x7C9FFA61;
  LODWORD(v27) = (v27 + 811328393 - ((2 * v27) & 0x60B7C712)) ^ *(_DWORD *)&v59[4 * (BYTE1(v98) ^ 0x68)];
  v113 = *(_DWORD *)(v62 + 4 * (v29 ^ 0xCCu)) ^ v103 ^ (v27 + 671676296 - ((2 * v27) & 0x5011EF10));
  v114 = (v113 ^ 0xD7E6AF5C) - ((2 * (v113 ^ 0xD7E6AF5C) + 1933278688) & 0x7A62D944) + 1993288594;
  if ((v113 ^ 0xD7E6AF50) < 0xC6624110)
    v114 = v113 ^ 0xEAD7C3FE;
  if ((v113 ^ 0xD7E6AF50) <= 0xC662410F)
    v115 = -94;
  else
    v115 = -78;
  if (v114 == 1026649250)
    v116 = v115;
  else
    v116 = v113 ^ 0xFE;
  v117 = HIBYTE(v109);
  v118 = *(_DWORD *)&v54[4 * (BYTE2(v111) ^ 0xDC)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v109) ^ 0x3E)];
  v119 = ((v118 ^ 0x7C9FFA61) + 811328393 - 2 * ((v118 ^ 0x7C9FFA61) & 0x305BE39F ^ v118 & 0x16)) ^ *(_DWORD *)&v59[4 * (BYTE1(v112) ^ 0x9C)];
  v120 = (v119 + 671676296 - ((2 * v119) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v116 ^ 0xE9u));
  v121 = HIBYTE(v111);
  v122 = *(_DWORD *)&v53[4 * (HIBYTE(v111) ^ 0x2A)] ^ 0x7C9FFA61 ^ *(_DWORD *)&v54[4 * (BYTE2(v112) ^ 0x3C)];
  v123 = *(_DWORD *)&v59[4 * (BYTE1(v113) ^ 0xC7)] ^ *(_DWORD *)(v62 + 4 * (v105 ^ 0xD0 ^ v109)) ^ (v122 + 811328393 - ((2 * v122) & 0x60B7C712));
  v124 = ((HIBYTE(v112) ^ 0x74) + 122136465 - ((2 * (HIBYTE(v112) ^ 0x74)) & 0x122)) ^ *(_DWORD *)&v54[4 * (BYTE2(v113) ^ 0x1E)] ^ 0x6E031777 ^ *(_DWORD *)&v53[4 * (HIBYTE(v112) ^ 0x53)];
  v125 = (v124 + 811328393 - ((2 * v124) & 0x60B7C712)) ^ *(_DWORD *)&v59[4 * (BYTE1(v109) ^ 0xA7)];
  v126 = (v125 + 671676296 - ((2 * v125) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v108 ^ 0x6A ^ v111));
  v127 = *(_DWORD *)&v54[4 * (BYTE2(v109) ^ 0x87)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v113) ^ 0xF0)];
  v128 = *(_DWORD *)(v62 + 4 * (v110 ^ 0xF1 ^ v112)) ^ *(_DWORD *)&v59[4 * (BYTE1(v111) ^ 0x11)] ^ ((v127 ^ 0x7C9FFA61) + 811328393 - 2 * ((v127 ^ 0x7C9FFA61) & 0x305BE39D ^ v127 & 0x14));
  v129 = *(_DWORD *)&v54[4 * (BYTE2(v123) ^ 0x73)] ^ 0x4B83BE79 ^ *(_DWORD *)&v59[4 * (BYTE1(v126) ^ 0x7C)];
  v130 = (v129 + 671676296 - ((2 * v129) & 0x5011EF10)) ^ *(_DWORD *)(v62
                                                                    + 4
                                                                    * (HIBYTE(v113) ^ 0xB4 ^ v128));
  v131 = *(_DWORD *)&v53[4 * (HIBYTE(v120) ^ 4)] ^ HIBYTE(v120) ^ (v130 + 122136465 - ((2 * v130) & 0xE8F4F22));
  v132 = *(_DWORD *)&v54[4 * (BYTE2(v126) ^ 0xF5 ^ -(BYTE2(v126) ^ 0xF5) ^ ((BYTE2(v126) ^ 0xFFFFFFF2) + 249)) + 992];
  HIDWORD(v133) = v132 ^ 0x1F0;
  LODWORD(v133) = v132 ^ 0x7BD85C00;
  HIDWORD(v133) = (v133 >> 9) ^ 0xD0E93DFB;
  LODWORD(v133) = HIDWORD(v133);
  v134 = *(_DWORD *)&v53[4 * (HIBYTE(v123) ^ 0x1A)] ^ ((HIBYTE(v123) ^ 0x28) + 122136465 - ((v123 >> 23) & 0x122));
  v135 = (v133 >> 23) + 2045563382 - ((2 * (v133 >> 23)) & 0xF3D9A3EC);
  v136 = (v134 + 2045563382 - ((2 * v134) & 0xF3D9A3EC)) ^ 0x5D1C13D5 ^ v135;
  v135 ^= 0x79ECD1F6u;
  v137 = v134 ^ 0xA2E3EC2A ^ -(v134 ^ 0xA2E3EC2A) ^ (v136 + v135 + 1);
  v138 = *(_DWORD *)&v59[4 * (BYTE1(v128) ^ 0x9D)] ^ *(_DWORD *)(v62 + 4 * (v117 ^ 0xB1 ^ v120)) ^ (v137 + v135 + 811328393 - ((2 * (v137 + v135)) & 0x60B7C712));
  v139 = *(_DWORD *)&v53[4 * (HIBYTE(v126) ^ 0x40)] ^ *(_DWORD *)&v54[4 * (BYTE2(v128) ^ 0x51)];
  v128 >>= 24;
  v140 = *(_DWORD *)(v62 + 4 * (v121 ^ v123 ^ 0x10)) ^ *(_DWORD *)&v59[4 * (BYTE1(v120) ^ 0x4C)] ^ ((v139 ^ 0x7C9FFA61) + 811328393 - 2 * ((v139 ^ 0x7C9FFA61) & 0x305BE399 ^ v139 & 0x10));
  v141 = *(_DWORD *)&v54[4 * (BYTE2(v120) ^ 0x3E)] ^ *(_DWORD *)&v53[4 * (v128 ^ 0xB9)];
  v142 = *(_DWORD *)&v59[4 * (BYTE1(v123) ^ 0xC6)] ^ __ROR4__(__ROR4__(*(_DWORD *)(v62 + 4 * (v126 ^ 0x3Cu)) ^ 0x734ADE96, 21) ^ 0x998669FD, 11) ^ ((v141 ^ 0x7C9FFA61)+ 811328393- 2 * ((v141 ^ 0x7C9FFA61) & 0x305BE38B ^ v141 & 2));
  v143 = ((v131 >> 23) & 0x7E ^ 0xFFFFFFAF) + (HIBYTE(v131) ^ 0xA8);
  v144 = (v143 - ((2 * v143 + 96983168) & 0xE8F4F22) - 1439984687) ^ *(_DWORD *)&v53[4 * (HIBYTE(v131) ^ 0x8F)];
  v145 = (v144 + 2077777392 - ((2 * v144) & 0xF7B0BBE0)) ^ *(_DWORD *)&v54[4 * (BYTE2(v138) ^ 0x71)];
  v146 = *(_DWORD *)(v62 + 4 * (v128 ^ 0x6D ^ v142)) ^ *(_DWORD *)&v59[4 * (BYTE1(v140) ^ 0xB5)] ^ (v145 + 811328393 - ((2 * v145) & 0x60B7C712));
  LODWORD(v133) = __ROR4__(*(_DWORD *)&v54[4 * (BYTE2(v140) ^ 0xAE)] ^ 0x1474FA0C, 24) ^ 0x940144D8;
  HIDWORD(v133) = v133;
  v147 = HIBYTE(v138);
  v148 = ((v133 >> 8) + 122136465 - ((2 * (v133 >> 8)) & 0xE8F4F22)) ^ *(_DWORD *)&v53[4 * (HIBYTE(v138) ^ 0xD1)];
  v149 = (v148 + 811328393 - ((2 * v148) & 0x60B7C712)) ^ *(_DWORD *)&v59[4
                                                                        * (BYTE1(v142) ^ 0x30F274A ^ -(BYTE1(v142) ^ 0x30F274A) ^ ((BYTE1(v142) ^ 0xFFFFFF55) + 51324897))
                                                                        + 205299584];
  v150 = *(_DWORD *)&v53[4 * (HIBYTE(v140) ^ 0xC0)];
  v151 = (v150 ^ 0x747A791) + (HIBYTE(v140) ^ 0xA2E3ECD8) - 2 * ((v150 ^ 0x243A491) & (HIBYTE(v140) ^ 0xA2E3ECD8));
  v152 = (v149 + 671676296 - ((2 * v149) & 0x5011EF10)) ^ *(_DWORD *)(v62 + 4 * (v131 ^ 0x19u));
  v153 = *(_DWORD *)&v54[4 * (BYTE2(v142) ^ 0x9F)];
  v154 = v153 & 0x10 | 0x73BD45C5;
  if ((v151 & v153 & 0x10) != 0)
    v154 = -411399286 - v154;
  v155 = v153 & 0xFFFFFFEF ^ 0xCCE0FB48 ^ (v151 - 1941784005 + v154);
  v156 = *(_DWORD *)&v59[4 * (BYTE1(v131) ^ 0x45)] ^ 0xCFC2A5BC;
  v157 = v155 + v156 - 2 * (v155 & v156);
  v158 = *(_DWORD *)&v53[4 * (HIBYTE(v142) ^ 0x29)] ^ ((HIBYTE(v142) ^ 0xE) + 122136465 - ((v142 >> 23) & 0x122));
  v159 = *(_DWORD *)&v54[4 * (BYTE2(v131) ^ 0xB)];
  v160 = v158 ^ 0x26C44E30 ^ v159;
  v159 ^= 0x7BD85DF0u;
  v161 = (v159 + v160 + 1) ^ ((v158 ^ 0x5D1C13C0) + 1);
  v162 = (v158 ^ 0xAECD2C6E ^ (v161 - ((2 * v161) & 0x185D80A2) + 204390481)) + v159;
  v163 = (v162 + 811328393 - ((2 * v162) & 0x60B7C712)) ^ *(_DWORD *)&v59[4 * (BYTE1(v138) ^ 3)];
  LODWORD(v164) = __ROR4__(*(_DWORD *)(v62 + 4 * (HIBYTE(v126) ^ 0xFB ^ v140)) ^ 0x2C50F95E ^ (v163 + 671676296 - ((2 * v163) & 0x5011EF10)), 27) ^ 0x66EE9575;
  HIDWORD(v164) = v164;
  v165 = HIBYTE(v146);
  v166 = v157 ^ *(_DWORD *)(v62 + 4 * (v138 ^ 0x66u));
  v167 = (v164 >> 5) - ((2 * (v164 >> 5)) & 0xE36C7C58) + 1907768876;
  v168 = *(_DWORD *)&v54[4 * (BYTE2(v152) ^ 0x38)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v146) ^ 0xF1)] ^ *(_DWORD *)&v59[4 * (BYTE1(v166) ^ 0x94)] ^ *(_DWORD *)(v62 + 4 * (((v164 >> 5) - ((2 * (v164 >> 5)) & 0x58) + 44) ^ 0x17u));
  v169 = *(_DWORD *)&v54[4 * ((v166 ^ 0xFF7DFC7F) >> 16)] ^ *(_DWORD *)&v53[4 * (HIBYTE(v152) ^ 0x71)];
  v170 = ((v169 ^ 0x7C9FFA61) + 811328393 - 2 * ((v169 ^ 0x7C9FFA61) & 0x305BE39F ^ v169 & 0x16)) ^ *(_DWORD *)&v59[4 * (BYTE1(v167) ^ 0x18)];
  v171 = v170 + 671676296 - ((2 * v170) & 0x5011EF10);
  v172 = (v166 ^ 0xFF7DFC7F) >> 24;
  v173 = v171 ^ *(_DWORD *)(v62 + 4 * (v146 ^ 0xDDu));
  v174 = *(_DWORD *)&v54[4 * (BYTE2(v167) ^ 0xFA)] ^ *(_DWORD *)&v53[4 * (v172 ^ 0x27)];
  v167 >>= 24;
  v175 = *(_DWORD *)&v54[4 * (BYTE2(v146) ^ 0x9B)];
  v176 = *(_DWORD *)(v62 + 4 * (v147 ^ 0x8B ^ v152)) ^ *(_DWORD *)&v59[4 * (BYTE1(v146) ^ 0xD9)];
  v177 = *(_DWORD *)(v62 + 4 * (v166 ^ 0x34u));
  v178 = v176 ^ ((v174 ^ 0x7C9FFA61) + 811328393 - 2 * ((v174 ^ 0x7C9FFA61) & 0x305BE38D ^ v174 & 4));
  v179 = *(_DWORD *)&v59[4 * (BYTE1(v152) ^ 0x10)];
  v180 = v173 ^ HIBYTE(v152);
  v181 = v175 ^ *(_DWORD *)&v53[4 * (v167 ^ 0x37)];
  v182 = (v179 ^ v167 ^ 0x39CCAC75 ^ ((v181 ^ 0x7C9FFA61) + 811328393 - 2
                                                                      * ((v181 ^ 0x7C9FFA61) & 0x305BE38D ^ v181 & 4)))
       + (v177 ^ 0x4CF9EE5B)
       - 2
       * ((v179 ^ v167 ^ 0x39CCAC75 ^ ((v181 ^ 0x7C9FFA61)
                                     + 811328393
                                     - 2 * ((v181 ^ 0x7C9FFA61) & 0x305BE38D ^ v181 & 4))) & (v177 ^ 0x4CF9EE5B));
  v183 = *(_DWORD *)(v20 - 116);
  v184 = (char *)*(&off_24E21C7C0 + v183 - 2827) - 12;
  v185 = (uint64_t)*(&off_24E21C7C0 + SHIDWORD(v205));
  v186 = *(_DWORD *)&v184[4 * ((v180 ^ 0x36239D1Fu) >> 16)] ^ *(_DWORD *)(v185
                                                                                         + 4 * (HIBYTE(v168) ^ 0xA0)) ^ 0x4CF2F95C;
  v187 = (char *)*(&off_24E21C7C0 + (int)v205) - 8;
  v188 = v182 - ((2 * v182) & 0x4DF8155A) - 1493431635;
  v189 = (char *)*(&off_24E21C7C0 + v183 - 3149) - 4;
  v190 = (v186 - 1414237658 - ((2 * v186) & 0x5768E44C)) ^ *(_DWORD *)&v187[4 * (BYTE1(v178) ^ 0xF8)] ^ *(_DWORD *)&v189[4 * ((v182 - ((2 * v182) & 0x5A) - 83) ^ 0xB1)];
  v191 = *(_DWORD *)(v185 + 4 * ((v180 ^ 0x36239D1Fu) >> 24)) ^ *(_DWORD *)&v184[4 * (BYTE2(v178) ^ 0x8D)] ^ 0x4CF2F95C;
  v192 = *(_DWORD *)&v187[4 * (BYTE1(v188) ^ 0x6C)] ^ *(_DWORD *)&v189[4 * (v165 ^ 0xF9 ^ v168)] ^ (v191 - 1414237658 - ((2 * v191) & 0x5768E44C));
  v193 = *(_DWORD *)&v184[4 * (BYTE2(v188) ^ 0x1D)] ^ *(_DWORD *)(v185 + 4 * (HIBYTE(v178) ^ 0x30)) ^ 0xC10111B6;
  v194 = v193 & 0xB70FB378 ^ *(_DWORD *)&v187[4 * (BYTE1(v168) ^ 0x38)] ^ *(_DWORD *)&v189[4
                                                                                         * (v180 ^ 3)] ^ ((v193 & 0x48F04C87) - 1414237658 - ((2 * v193) & 0x1160800C));
  v195 = *(_DWORD *)&v184[4 * (BYTE2(v168) ^ 0x7E)] ^ 0x4CF2F95C ^ *(_DWORD *)(v185 + 4 * (HIBYTE(v188) ^ 0xB4));
  v196 = *(_DWORD *)&v189[4 * (v172 ^ v178 ^ 0xC)] ^ *(_DWORD *)&v187[4 * (BYTE1(v173) ^ 0xFB)] ^ (v195 - 1414237658 - ((2 * v195) & 0x5768E44C));
  v197 = (char *)*(&off_24E21C7C0 + SHIDWORD(v204)) - 12;
  a1[9] = v197[BYTE2(v194) ^ 0x47] ^ 0x33;
  v198 = (char *)*(&off_24E21C7C0 + (int)v204) - 8;
  a1[6] = BYTE1(v192) ^ 0x65 ^ ((BYTE1(v192) ^ 0x65) - ((2 * (BYTE1(v192) ^ 0x65) + 84) & 0x50) - 110) ^ 0x39 ^ v198[BYTE1(v192) ^ 0xE3];
  v199 = (uint64_t)*(&off_24E21C7C0 + v183 - 2851);
  LOBYTE(v185) = (*(_BYTE *)(v199 + (HIBYTE(v192) ^ 0xE3)) >> 1) & 0x4F ^ 0x47;
  a1[4] = *(_BYTE *)(v199 + (HIBYTE(v192) ^ 0xE3)) ^ 0x93 ^ (v185 - 2 * (v185 & 0xF) - 113);
  a1[12] = *(_BYTE *)(v199 + (HIBYTE(v196) ^ 0x78)) ^ 0xD1 ^ (*(_BYTE *)(v199 + (HIBYTE(v196) ^ 0x78)) >> 1) & 0x4F;
  a1[8] = *(_BYTE *)(v199 + (HIBYTE(v194) ^ 5)) ^ (*(_BYTE *)(v199 + (HIBYTE(v194) ^ 5)) >> 1) & 0x4F ^ 0x81;
  v200 = ((v190 ^ 0x2BD0E33F) >> 8) ^ 8;
  a1[*(_QWORD *)(v20 - 192)] = v200 ^ (v200 - ((2 * v200 + 84) & 0x50) - 110) ^ 0xEB ^ v198[((unsigned __int16)(v190 ^ 0xE33F) >> 8) ^ 0x8ELL];
  *a1 = *(_BYTE *)(v199 + (HIBYTE(v190) ^ 0x26)) ^ (*(_BYTE *)(v199 + (HIBYTE(v190) ^ 0x26)) >> 1) & 0x4F ^ 0x30;
  a1[5] = v197[BYTE2(v192) ^ 0x17] ^ 0xD6;
  v201 = (char *)*(&off_24E21C7C0 + v183 - 3064) - 12;
  LOBYTE(v195) = v201[v192 ^ 0xELL] + 66;
  a1[*(_QWORD *)(v20 - 160)] = v195 ^ (8 * v195) ^ 0xB2;
  a1[*(_QWORD *)(v20 - 152)] = BYTE1(v196) ^ 0xE5 ^ ((BYTE1(v196) ^ 0xE5)
                                                   - ((2 * (BYTE1(v196) ^ 0xE5) + 84) & 0x50)
                                                   - 110) ^ 0xB6 ^ v198[BYTE1(v196) ^ 0x63];
  a1[*(_QWORD *)(v20 - 184)] = v197[BYTE2(v196) ^ 0x18] ^ 0xE3;
  LOBYTE(v195) = v201[v196 ^ 0xEFLL] + 66;
  a1[*(_QWORD *)(v20 - 176)] = v195 ^ (8 * v195) ^ 0x85;
  v202 = v198[BYTE1(v194) ^ 0x29];
  HIDWORD(v164) = v202 ^ 0x28;
  LODWORD(v164) = ~v202 << 24;
  LODWORD(v198) = (v194 >> 8) ^ 0xFFFFFFAF;
  a1[*(_QWORD *)(v20 - 168)] = v198 ^ ((_BYTE)v198 - 22) ^ ((v164 >> 31) << 7) ^ (((v164 >> 31) & 0xFE) >> 1) ^ 0x2D;
  LOBYTE(v202) = v201[v190 ^ 0xF2] + 66;
  a1[*(_QWORD *)(v20 - 144)] = v202 ^ (8 * v202) ^ 0xD;
  LOBYTE(v202) = v201[v194 ^ 0x79] + 66;
  a1[*(_QWORD *)(v20 - 136)] = v202 ^ (8 * v202) ^ 0x71;
  a1[*(_QWORD *)(v20 - 128)] = v197[(((v190 ^ 0x2BD0E33F) >> 16)
                                   - (((v190 ^ 0x2BD0E33F) >> 15) & 0x1C4)
                                   + 226) ^ 0xCELL] ^ 0x62;
  LODWORD(v207) = v19 - 988139157;
  HIDWORD(v207) = v18 + 537396289;
  LODWORD(v212) = (v19 - 988139157) & 0x3AE5CF3F;
  return ((uint64_t (*)(uint64_t, char *, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a18 + 8 * ((2262 * ((v18 + 537396289) > 0x10)) ^ (v183 - 2041))) - 8))(4116364472, v201, ((_DWORD)v198 - 22), v200 - ((2 * v200 + 84) & 0x50) - 110, 41, 80, 5, v189, a2, a3, a4, a5, a6, a1, v204, v205, v206, v207, 0xFFFFFFC600000014,
           v208,
           v209,
           v210,
           v211,
           a17,
           a18,
           v212);
}

void sub_21E05626C()
{
  JUMPOUT(0x21E054478);
}

uint64_t sub_21E0562A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  uint64_t v28;
  int v29;
  _BOOL4 v30;

  v29 = a15 - ((a28 ^ 0x74A615C2) & (2 * a12)) - 1712983190;
  v30 = ((2 * v29) & 0x7FF1DFEE ^ 0x74A012E4) + (v29 ^ 0x5ABE685) + 2088742672 != 1014537991;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * (((2 * v30) | (8 * v30)) ^ a28)) - 8))();
}

uint64_t sub_21E056360()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = v2 + v1 + (((((v0 ^ 0x2B7) + 1267795556) & 0xB46EFDEB) + 1074205356) ^ ((v0 ^ 0x2B7) + 959580772) & 0xC6CDFC8E) < 8;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (32 * v4)) ^ v0 ^ 0x2B7)))();
}

uint64_t sub_21E056400(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((1002 * (a1 + ((a6 - 112242148) & 0x6B0AFFBu) + a7 - 3081 > 0xFFFFFFEF)) ^ a6))
                            - (((a6 - 353) | 0x404u) ^ 0xC8CLL)))();
}

uint64_t sub_21E056464@<X0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BOOL4 v24;
  int v26;

  v11 = (v9 + v8 + a1);
  v12 = v11 + a5 - 0x2C4F5E3A6E84968ELL + 1;
  v13 = ((_BYTE)v9 + (_BYTE)v8 + (_BYTE)a1) & 0xF;
  v14 = v13 - v11;
  v15 = v6 + v13 - v11;
  v16 = v13 + 1;
  v17 = v6 + v13 + 1;
  v18 = v13 + v5;
  v19 = v18 - v11 + 3;
  v20 = v18 + 4;
  v21 = v7 + v14;
  v22 = v7 + v16;
  v24 = a3 < v17 && v15 < v12;
  v26 = a3 < v20 && v19 < v12 || v24;
  if (a3 < v22 && v21 < v12)
    v26 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v26 ^ 1) * ((1702 * (a2 ^ 0xBFB)) ^ 0xA83)) ^ a2)) - 4))();
}

uint64_t sub_21E056528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * ((27 * (v7 > 0xF)) ^ a7)) - 12))(a1, a2, 0);
}

uint64_t sub_21E056570@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  int8x16_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16x4_t v33;
  int8x16x4_t v34;

  *(_DWORD *)(v27 - 128) = a2 - 1;
  v33.val[1].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v33.val[1].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v33.val[2].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v33.val[2].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v33.val[3].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v33.val[3].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v28 = v26 + v25 + a1;
  v29.i64[0] = 0xAFAFAFAFAFAFAFAFLL;
  v29.i64[1] = 0xAFAFAFAFAFAFAFAFLL;
  v33.val[0].i64[0] = v28 & 0xF;
  v33.val[0].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v30.i64[0] = vqtbl4q_s8(v33, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v34.val[0].i64[1] = *(_DWORD *)(v27 - 128) & 0xF;
  v34.val[1].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v34.val[2].i64[1] = (a2 + 11) & 0xF;
  v34.val[3].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v34.val[0].i64[0] = a2 & 0xF;
  v34.val[1].i64[0] = ((_BYTE)a2 + 14) & 0xF;
  v34.val[2].i64[0] = (a2 + 12) & 0xF;
  v34.val[3].i64[0] = (a2 + 10) & 0xF;
  v30.i64[1] = vqtbl4q_s8(v34, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v31 = vrev64q_s8(vmulq_s8(v30, v29));
  *(int8x16_t *)(a4 - 15 + v28) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + v33.val[0].i64[0] - 15), *(int8x16_t *)(a4 - 15 + v28)), veorq_s8(*(int8x16_t *)(v33.val[0].i64[0] + v21 - 12), *(int8x16_t *)(v23 + v33.val[0].i64[0] - 15))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(a21
                              + 8
                              * (((8 * (a3 - (v24 & 0xFFFFFFF0) == 2810)) | ((a3 - (v24 & 0xFFFFFFF0) == 2810) << 6)) ^ a3)))();
}

void sub_21E0566D0()
{
  JUMPOUT(0x21E05665CLL);
}

uint64_t sub_21E0566D8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((a4 - 996) ^ 0x296) + 178 * ((a4 - 996) ^ 0x734) - 1486) * (v4 != a3)) ^ (a4 - 996)))
                            - 8))();
}

uint64_t sub_21E056718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((4025
                                * ((((v7 & 8) == 0) ^ (61 * (((a7 + 84) | 0x80) ^ 0x80) + 1)) & 1)) ^ a7)))();
}

uint64_t sub_21E056760@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  char v32;
  unsigned int v33;
  int8x16x4_t v35;

  *(_DWORD *)(v29 - 116) = v28;
  *(_DWORD *)(v29 - 128) = v24;
  *(_DWORD *)(v29 - 136) = v24 & 0xFFFFFFF8;
  v30 = a2 - (v24 & 0xFFFFFFF8) + 8;
  v31 = v25 + v27 + v26 - a2;
  v32 = v27 + v26 + a3 + v25 - a2;
  v33 = v27 + v26 + a1 - a2;
  v35.val[0].i64[0] = v33 & 0xF;
  v35.val[0].i64[1] = (v31 - 9) & 0xF;
  v35.val[1].i64[0] = (v31 - 10) & 0xF;
  v35.val[1].i64[1] = (v31 - 11) & 0xF;
  v35.val[2].i64[0] = v32 & 0xF;
  v35.val[2].i64[1] = (v31 - 13) & 0xF;
  v35.val[3].i64[0] = (v31 - 14) & 0xF;
  v35.val[3].i64[1] = (v31 - 15) & 0xF;
  *(int8x8_t *)(a4 - 7 + v33) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v22 + v35.val[0].i64[0] - 7), *(int8x8_t *)(a4 - 7 + v33)), veor_s8(*(int8x8_t *)(v35.val[0].i64[0] + v21 - 4), *(int8x8_t *)(v23 + v35.val[0].i64[0] - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v35, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xAFAFAFAFAFAFAFAFLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a21 + 8 * ((379 * (v30 == 0)) ^ a3)) - 8))((__n128)xmmword_21E17F900);
}

void sub_21E056894()
{
  JUMPOUT(0x21E0567CCLL);
}

uint64_t sub_21E05689C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * ((3783
                                                                                  * (((*(_DWORD *)(v7 - 128) == *(_DWORD *)(v7 - 136)) ^ (a6 + 49)) & 1)) ^ (a6 + 562)))
                                                                    - 8))(a1, a2, a3, (a6 + 1936));
}

uint64_t sub_21E0568DC@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a2 - 1014539256);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v5 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v4 + 3) ^ *(_BYTE *)(v6 + (v8 & 0xF)) ^ (-81 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((3961 * (a2 - 1 == v3)) ^ (a1 - 1722))))();
}

void sub_21E056940()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 971430241)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 16) = v1;
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X8 }
}

uint64_t sub_21E056A1C(uint64_t a1, int a2)
{
  uint64_t v2;
  BOOL v3;
  int v4;

  if (a1)
    v3 = a2 == 0;
  else
    v3 = 0;
  v4 = !v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3577 * v4) ^ 0x577u)) - 4))();
}

uint64_t sub_21E056A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  a12 = (1292559617 * (((&a12 | 0x3A59FE58) - (&a12 & 0x3A59FE58)) ^ 0x9D0A9631)) ^ 0x9B42BBAD;
  v16 = sub_21E0E193C(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((3977 * (a13 == v13)) ^ v15)) - 4))(v16);
}

uint64_t sub_21E056AD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, unint64_t *a13, int a14)
{
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  a13 = &STACK[0xCDF15AEA900D061];
  a12 = 305
      - 225134719 * ((-1466994328 - (&a12 | 0xA88F7168) + (&a12 | 0x57708E97)) ^ 0x4180CBBD);
  sub_21E047010(&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15
                                                                                          + 8
                                                                                          * (((a14 != v14)
                                                                                            * ((v16 + 705) ^ 0x5B6040BB)) ^ 0x55B))
                                                                              - 4))(v17, v18, v19, v20, v21);
}

uint64_t sub_21E056B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1990461019
      * ((-1174221813 - (&a12 | 0xBA02CC0B) + (&a12 | 0x45FD33F4)) ^ 0x6A19917D);
  a12 = v16;
  a13 = a11;
  a14 = v22 ^ ((v17 ^ 0x6EFFDFFB) - 8105 + ((2 * v17) & 0xDDFFBFF6));
  a16 = (v21 - 46) ^ v22;
  v23 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v19 + 8 * (int)(v21 & 0xAB093911)) - 8))(&a12);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a15 == v18) * (((v21 - 725) | 0x472) + 1003)) ^ v21)))(v23);
}

uint64_t sub_21E056C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14, int a15, unint64_t *a16, uint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1328090399 * ((2126990158 - (&a12 | 0x7EC74B4E) + (&a12 | 0x8138B4B1)) ^ 0x7EEBD08B);
  a15 = v20 ^ 0x6B80F4A2;
  a16 = &STACK[0x7398388C82CD2C7];
  a17 = a11;
  a12 = (v19 - 1653801839) ^ v20;
  a13 = 1755526142 - v20;
  v21 = sub_21E0DDA14((uint64_t)&a12);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a14 == v17) * ((v19 ^ 0x578) + v19 + 413 - 1443)) ^ v19)))(v21);
}

uint64_t sub_21E056D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, unsigned int a13, unint64_t *a14, uint64_t a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  a13 = v15
      - (((&a13 | 0x73E71310) - &a13 + (&a13 & 0x8C18ECE8)) ^ 0xD4B47B79)
      * v19
      - 1076;
  a14 = &STACK[0x3DECEE387AEF03D5];
  a15 = a9;
  v20 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v17 + 8 * (v15 - 1553)) - 4))(&a13);
  return ((uint64_t (*)(uint64_t))(1533035333
                                          - (v15 + 1533033643)
                                          + *(_QWORD *)(v18 + 8 * (((a11 == v16) * (v15 + 1340)) ^ v15))))(v20);
}

uint64_t sub_21E056DDC()
{
  uint64_t v0;
  void (*v1)(_DWORD *);
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v12 = v7;
  v13 = v0;
  v11 = 0x405DE5811392E880;
  v10[1] = v5
         + v3
         + 1866394843 * ((v10 & 0x61DCC48C | ~(v10 | 0x61DCC48C)) ^ 0x74340C87)
         + 670;
  (*(void (**)(_DWORD *))(v4 + 8 * (v5 + v3 - 1422)))(v10);
  LODWORD(v12) = -1533033643
               - 1734664879
               * (((v10 | 0xD988DBFD) - v10 + (v10 & 0x26772400)) ^ 0xF653F3E7)
               + v3
               - 1351;
  v11 = v7;
  sub_21E092C98((uint64_t)v10);
  v11 = v7;
  v10[0] = (v5 + v3 + 701) ^ (225134719
                            * ((v10 & 0x77BD3227 | ~(v10 | 0x77BD3227)) ^ 0x9EB288F2));
  v1(v10);
  v10[0] = (v5 + v3 + 701) ^ (225134719
                            * ((((2 * v10) | 0x303A7E3E) - v10 - 404569887) ^ 0xEED7A35));
  v11 = v9;
  v1(v10);
  return v8 ^ v2;
}

uint64_t sub_21E056FA0(uint64_t result)
{
  int v1;
  int v2;

  v1 = -939041262;
  v2 = (*(_BYTE *)(result + 4) - -41 * ((((2 * result) | 0x96) - result - 75) ^ 0xA5));
  if (v2 == 117 || v2 == 110)
  {
    if ((*(_BYTE *)(result + 12) - -41 * ((((2 * result) | 0x96) - result - 75) ^ 0xA5)) == 12)
      v1 = 939001227;
    else
      v1 = -939041262;
  }
  *(_DWORD *)result = v1;
  return result;
}

void sub_21E057034(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 1948972247 * ((a1 - 2 * (a1 & 0x22E7C121) + 585613601) ^ 0x977934CF);
  __asm { BR              X8 }
}

uint64_t sub_21E0570F8(uint64_t a1)
{
  __int16 v1;
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (unsigned __int16)(*(_WORD *)(a1 + 12) + v1) == ((((v2 - 1222) | 0x215) ^ 0x7DA8) & 0xFDEE);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((2 * v4) | (16 * v4)) ^ v2)) - (v2 - 3520) + 66))();
}

uint64_t sub_21E057154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8 * ((1655 * ((unsigned __int16)((((v6 - 2805) | 2) ^ 0x8AB1) + v5) < 0xFFBFu)) ^ v6))
                                                                                       - (v6 + 117)
                                                                                       + 3022))(514405610, 72267807, 678730848, a4, a5, 3949997839);
}

uint64_t sub_21E057244@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v19;

  v19 = (a4 | (v7 << 16)) + 366378820;
  v16 = 1948972247 * ((v15 - 887411786 - 2 * ((v15 - 128) & 0xCB1B2C36)) ^ 0x7E85D9D8);
  *(_QWORD *)(v15 - 120) = v9;
  *(_DWORD *)(v15 - 128) = (v13 + a1) ^ v16;
  *(_DWORD *)(v15 - 108) = a2 - v16 + v12 * a3 - ((v8 + v12 * (v10 + 1364)) & v11) + v13 + 1642;
  v17 = sub_21E09FC10(v15 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((v19
                                               - 28175975
                                               + ((2 * (*(_DWORD *)(a7 - 0x1464535CD0E6669) & 0x3F)) ^ 0x78)
                                               + (*(_DWORD *)(a7 - 0x1464535CD0E6669) & 0x3F ^ 0xEBD6F9C3) < 0xFFFFFFC0)
                                              * (((v13 + 1642) ^ 0x327) + 1673)) ^ (v13 + 1642))))(v17);
}

uint64_t sub_21E058554()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v5 = v0 + 1570;
  v6 = v3 + 338232834;
  if (v6 <= 0x40)
    v6 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((56 * (((-v1 - 338232834 - v2 + v6 < 0xF) ^ (v5 + 40)) & 1)) ^ v5))
                            - ((v5 - 1866) ^ 0x4C7)))();
}

uint64_t sub_21E0585EC()
{
  int v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  int v6;
  unsigned int v7;

  v6 = v1 + v0;
  v7 = (v2 ^ 0x142904F4 ^ v2 ^ 0x2F6) + v1 + v0;
  if (v7 <= 0x40)
    v7 = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v2 | (2 * (-338232834 - v6 < v4 + v7)))) - 4))();
}

uint64_t sub_21E058650(uint64_t a1, int a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)(a3 + (v5 + a2)) = *a5;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((154 * ((v6 ^ 0xD2ELL) == ((v7 + 1) & 0x1FFFFFFF0))) ^ v6)))();
}

uint64_t sub_21E0586B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (44 * (a1 == v1)))) - (((v2 ^ 0x5CAu) + 1222) ^ 0x4C3)))();
}

void sub_21E0586F0()
{
  JUMPOUT(0x21E058704);
}

uint64_t sub_21E058884(int8x16_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8x16_t v26;
  int8x16x4_t v34;

  v34 = vld4q_s8(a4);
  v26 = (uint8x16_t)veorq_s8(v34.val[2], a1);
  _Q25 = vmovl_high_u8(v26);
  _Q24 = vmovl_u8(*(uint8x8_t *)v26.i8);
  __asm
  {
    SHLL2           V24.4S, V24.8H, #0x10
    SHLL2           V25.4S, V25.8H, #0x10
  }
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * (((v24 == 75208433) * a7) | (a23 + 2034))) - 4))(v23);
}

uint64_t sub_21E058B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((((v7 + 1) & 0x7FFFFFE0) == v8) * a7) ^ v9)) - 4))();
}

uint64_t sub_21E058C30()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((236 * ((((v0 ^ 0xC87) - 498) ^ 0xFB846C0B) + v1 > 0x2F)) ^ v0))
                            - 8))();
}

uint64_t sub_21E058C70(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2801 * ((v1 & 0x7FFFFFC0) == a1 + 75206659)) ^ a1))
                            - 39 * (a1 ^ 0x6FFu)
                            + 70))();
}

uint64_t sub_21E058D28@<X0>(uint64_t a1@<X0>, const char *a2@<X2>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, int8x16_t a7@<Q0>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint8x16_t v32;
  _DWORD *v41;
  int v42;
  int v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  int8x16x4_t v48;

  v48 = vld4q_s8(a2);
  v32 = (uint8x16_t)veorq_s8(v48.val[1], a7);
  _Q21 = vmovl_u8(*(uint8x8_t *)v32.i8);
  _Q20 = vmovl_high_u8(v32);
  __asm
  {
    SHLL2           V22.4S, V20.8H, #0x10
    SHLL2           V23.4S, V21.8H, #0x10
  }
  v41 = (_DWORD *)(v27 + 4 * (v28 + 16 + v31));
  v42 = *(v41 - 8) ^ *(v41 - 3);
  v43 = *(v41 - 16) ^ *(v41 - 14) ^ (v29 + v42 - ((v42 << (a13 & 0x5E ^ 0x4F)) & a6));
  HIDWORD(v45) = v43 ^ v29;
  LODWORD(v45) = v43;
  v44 = v45 >> 31;
  v46 = a6 & (2 * v44);
  *v41 = v44 + v29 - v46;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((((v28 + 17 == v28 + 80) << 8) | ((v28 + 17 == v28 + 80) << 10)) ^ ((a13 & 0x881F845E) + 2141))) - 8))(a1, v28 + 17, ((v28 + 17 == v28 + 80) << 8) | ((v28 + 17 == v28 + 80) << 10), 75208448, v46, a3, a4, a5, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_21E058F40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  int v22;

  HIDWORD(v21) = a1 ^ v17;
  LODWORD(v21) = a1 ^ 0x55555555;
  v22 = (v21 >> 27)
      + (v10 ^ v18)
      + ((a8 ^ v20) & (v9 ^ v18) | (v11 ^ 0xD18 ^ (v18 + 1182) ^ a8) & (v12 ^ v18))
      + (*(_DWORD *)(v8 + 4 * (a4 + v19)) ^ v14);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v15
                                                     + 8 * ((a4 + 1 != v13 + 20) | ((a4 + 1 != v13 + 20) << 7) | v11))
                                         - 12))(v22 - ((2 * v22 - 1257966798) & v16) - 1420196736);
}

uint64_t sub_21E05900C(int a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  int v17;

  HIDWORD(v16) = a1 ^ v13;
  LODWORD(v16) = a1 ^ 0x55555555;
  v17 = (v16 >> 27)
      + (a3 ^ v14)
      + (((v5 ^ v7) + v14 - (v12 & (2 * (v5 ^ v7)))) ^ v10)
      + (*(_DWORD *)(v6 + 4 * (a5 + v15)) ^ v9);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v11 + 8 * ((7 * (a5 + 1 != v8 + 40)) ^ a2)) - 8))(v17 - ((2 * v17 - 575416510) & v12) - 1078921592);
}

uint64_t sub_21E0590C0(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  int v17;

  HIDWORD(v16) = a1 ^ v12;
  LODWORD(v16) = a1 ^ 0x55555555;
  v17 = (v16 >> 27)
      + (a4 ^ v13)
      + ((v6 ^ v13) & (v7 ^ v13 | v15 ^ v13) | (v7 ^ v13) & (v15 ^ v13))
      + (*(_DWORD *)(v4 + 4 * (((a2 + 350) ^ (unint64_t)(v14 + 1728)) + v5)) ^ v9);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v10 + 8 * ((930 * (v5 + 1 == v8 + 60)) ^ a2)) - 8))(v17 - ((2 * v17 + 506952120) & v11) - 537737277);
}

uint64_t sub_21E059188(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  int v20;

  HIDWORD(v19) = a1 ^ v16;
  LODWORD(v19) = a1 ^ 0x55555555;
  v20 = (v19 >> 27)
      + (v10 ^ v17)
      + ((v17 + a3 + 61 + (a8 ^ v11) - (v15 & (2 * (a8 ^ v11))) - 1789) ^ v8)
      + (*(_DWORD *)(v9 + 4 * (a5 + v18)) ^ v13);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v14 + 8 * ((3063 * (a5 + 1 == v12 + 80)) ^ a3)) - 8))(v20 - ((2 * v20 - 1798995028) & v15) + 456772797);
}

void sub_21E059240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _DWORD *a16)
{
  int v16;
  int v17;
  int v18;
  int v19;

  *a16 = (*a16 ^ v19) + (v16 ^ v19) + ((v17 - 1711) ^ (v19 - 62)) - (v18 & (2 * ((*a16 ^ v19) + (v16 ^ v19))));
  JUMPOUT(0x21E059270);
}

uint64_t sub_21E059278(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a4 ^ 0xE8B | (2 * (((a4 ^ 0xFFFFFAF4) & v4) + 1 + v5 > 0x2F))))
                            - 4))();
}

uint64_t sub_21E059354()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v4 = v0 - 725;
  if (v1 <= 0x30)
    v5 = 48;
  else
    v5 = v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((3131 * ((((v4 ^ ((_DWORD)v2 - 1283)) + v5 + 1) & 0x7FFFFFC0) == v2)) ^ v4))
                            - 8))();
}

uint64_t sub_21E0594E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unsigned int a21)
{
  int v21;
  uint64_t v22;
  _BOOL4 v23;

  if (a21 < 0x15D6F428 != (a15 + 354442362) < 0x704DD0B0)
    v23 = (a15 + 354442362) < 0x704DD0B0;
  else
    v23 = a15 + 354442362 > a20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((27 * v23) ^ (v21 + 1665))))(a1, a2, a3, a4, a5, a6, a7, a21, a9, a10, a11, a12, a13, a14);
}

void sub_21E05957C()
{
  JUMPOUT(0x21E0587A0);
}

uint64_t sub_21E0595A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, unsigned int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a2 + ((a4 ^ 0xFFFFFB34) & (v5 + a1))) = *(_BYTE *)(v4 + a3 - 1529705590);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((296 * ((a1 + v5 + 1) > 0x3F)) ^ a4)) - 8))();
}

uint64_t sub_21E05960C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v9 - 451423001 < a8 + 711873845;
  if (a8 < 0x15D6F428 != v9 - 451423001 < ((2 * v8) ^ 0xBA8u) + 1078282511)
    v11 = a8 < 0x15D6F428;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8 * ((1001 * v11) ^ v8)))(a1, 3563671425);
}

uint64_t sub_21E059688(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  *(_BYTE *)(a6 - 0x1464535CD0E66ADLL + (v10 + a2)) = *(_BYTE *)(a5 + (v11 - 1529705590));
  v13 = v11 + 1 + a3;
  v14 = (a8 < 0x15D6F428) ^ (v13 < a4 + 78);
  v15 = v13 < v8;
  if (v14)
    v15 = a8 < 0x15D6F428;
  return (*(uint64_t (**)(void))(v12 + 8 * ((619 * v15) ^ ((v9 ^ 0xC7E) - 421))))();
}

void sub_21E059724()
{
  JUMPOUT(0x21E0596C4);
}

uint64_t sub_21E059730@<X0>(uint64_t a1@<X5>, int a2@<W7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v8;
  int v9;
  uint64_t v10;

  v9 = 1948972247 * ((((v8 - 128) | 0x24680B37) - (v8 - 128) + ((v8 - 128) & 0xDB97F4C8)) ^ 0x91F6FED9);
  *(_QWORD *)(v8 - 120) = a1;
  *(_DWORD *)(v8 - 112) = a3 - v9 + 2365;
  *(_DWORD *)(v8 - 128) = v9 + a2 + 497875390;
  v10 = sub_21E0A4DD0(v8 - 128);
  return a8(v10);
}

void sub_21E0598F8(uint64_t a1)
{
  int v1;

  v1 = 1948972247 * ((1411797685 - (a1 | 0x542652B5) + (a1 | 0xABD9AD4A)) ^ 0x1E4758A4);
  __asm { BR              X13 }
}

uint64_t sub_21E0599C0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  _DWORD v8[2];
  uint64_t v9;

  v5 = v3 - ((v1 - 2057353568) & (v4 + 657392138)) + 1447504380;
  v6 = 1988622253 * ((((2 * v8) | 0x86C89A0C) - v8 + 1016836858) ^ 0x357C0DA6);
  v9 = v2;
  v8[0] = v5 ^ v6;
  v8[1] = v6 + v1 - 444;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v1 - 2836)) - 12))(v8);
}

void tbttItCTp3MZ(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_21E059B58(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (*(uint64_t (**)(_QWORD, uint64_t))(v2 + 3448))(a2, 1252601147) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3362 * (((v4 ^ 0x42640C80) & 1) == 0)) ^ 0x412u)) - 4))();
}

uint64_t sub_21E059BAC(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return 0;
}

void sub_21E059BC8(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_21E059C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  int v11;
  void (*v12)(void);
  uint64_t v13;
  unint64_t v14;

  v12();
  v14 = ((unint64_t)&a10 ^ 0x27AE47FDF43FDC39)
      - 0x18A00C404227F39
      + ((2 * (_QWORD)&a10) & 0x4F5C8FFBE87FB870);
  *(_BYTE *)(v10 + ((v11 + 727) ^ 0x8AELL)) = (v14 ^ 0xBA) * (v14 + 17);
  *(_BYTE *)(v10 + 262) = ((v14 | 1) ^ 0xBA) * (v14 + 18);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * v11) - 12))();
}

void sub_21E059D00()
{
  JUMPOUT(0x21E059CB4);
}

uint64_t sub_21E059D0C()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

void sub_21E059D2C(uint64_t a1)
{
  void (*v2)(char *, void (*)());
  char v3;

  qword_2553B61D0 = 1056581677 * ((qword_2553B61D0 - (_QWORD)&v3 + qword_2553B61C8) ^ 0x3F506021E86BC7B2);
  v2 = (void (*)(char *, void (*)()))*(&off_24E21C7C0 + (unk_21E1B1216 ^ 0x4Au) + 231);
  qword_2553B61C8 = qword_2553B61D0;
  v2((char *)*(&off_24E21C7C0 + (unk_21E1B1134 ^ 0x4Au) + 221) - 4, sub_21E0E1814);
  __asm { BR              X9 }
}

uint64_t sub_21E059E08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * ((882 * (*(_QWORD *)(*(_QWORD *)(v1 + 2248) - 4) != 0)) ^ 0x11Au))
                            - 12))();
}

uint64_t sub_21E059E34()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(v1 + 1976))(v0);
}

void sub_21E059E5C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 40) ^ (1866394843 * ((~(_DWORD)a1 & 0xE38564E5 | a1 & 0x1C7A9B1A) ^ 0x9925311));
  __asm { BR              X10 }
}

uint64_t sub_21E059FA4()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v5;

  v5 = (*(_DWORD *)(v2 + 48) ^ v0) == 0x60E0870A || (*(_QWORD *)v2 | *(_QWORD *)(v2 + 24)) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1889 * (((v1 + 121) ^ v5) & 1)) ^ v1)) - 8))();
}

uint64_t sub_21E059FF8()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[1] == 0x5D5DA5DB707DB87 || (v1[7] | v1[4]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((505 * v4) ^ v0)) - ((((v0 - 2441) | 0x10u) + 2918) ^ 0xCD2)))();
}

uint64_t sub_21E05A058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * ((((v3 - 2601) ^ 0x283) * (v2 != 0)) ^ v3))
                                                            - 12))(a1, a2, 1988622253);
}

uint64_t sub_21E05A15C@<X0>(int a1@<W1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  void (*v34)(uint64_t);
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v32 = 20 * (v23 ^ 0x2F2);
  v33 = ((2 * ((v31 - 144) & 0x195923E0) - (v31 - 144) + 1722211359) ^ 0x8CB1EBEB) * a1;
  *(_DWORD *)(v31 - 120) = v33 + v23 - 434;
  *(_QWORD *)(v31 - 136) = v26;
  *(_QWORD *)(v31 - 128) = v21;
  *(_DWORD *)(v31 - 144) = (v24 + 315874380 + v32) ^ v33;
  v50 = a2 + v22;
  ((void (*)(uint64_t))(*(_QWORD *)(v25 + 8 * (v23 - 662)) - 4))(v31 - 144);
  LODWORD(v49) = v32 + 73;
  HIDWORD(v49) = (v32 - 1308) | 0x108;
  *(_DWORD *)(v31 - 136) = (v32 + 73) ^ (1438293641
                                       * ((((v31 - 144) | 0xFD60077) - ((v31 - 144) & 0xFD60077)) ^ 0xB7115508));
  *(_QWORD *)(v31 - 144) = v28;
  *(_QWORD *)(v31 - 128) = a18;
  v48 = (void (*)(uint64_t))(*(_QWORD *)(v25 + 8 * (v32 - 907)) - 4);
  v48(v31 - 144);
  HIDWORD(a7) = v32 - 559;
  *(_DWORD *)(v31 - 128) = (v32 - 559) ^ (1734664879
                                        * ((65622035 - ((v31 - 144) | 0x3E95013) + ((v31 - 144) | 0xFC16AFEC)) ^ 0xD3CD87F6));
  *(_QWORD *)(v31 - 144) = v28;
  *(_QWORD *)(v31 - 136) = v26;
  *(_QWORD *)(v31 - 120) = a19;
  *(_QWORD *)(v31 - 112) = a18;
  v46 = *(void (**)(uint64_t))(v25 + 8 * (v32 ^ 0x4A6));
  v47 = v26;
  v46(v31 - 144);
  HIDWORD(v45) = v32 + 2070;
  *(_QWORD *)(v31 - 104) = v29;
  *(_QWORD *)(v31 - 128) = v28;
  *(_QWORD *)(v31 - 120) = a18;
  *(_DWORD *)(v31 - 112) = v32
                         + 2070
                         - 1948972247 * (((v31 - 144) & 0xDABC3D08 | ~((v31 - 144) | 0xDABC3D08)) ^ 0x90DD3719);
  *(_QWORD *)(v31 - 144) = a19;
  *(_QWORD *)(v31 - 136) = a19;
  v34 = *(void (**)(uint64_t))(v25 + 8 * (v32 ^ 0x527));
  v34(v31 - 144);
  LODWORD(v45) = v32 - 488;
  *(_DWORD *)(v31 - 144) = v32
                         - 488
                         - 1988622253 * ((((v31 - 144) | 0xA9940594) - ((v31 - 144) & 0xA9940594)) ^ 0x5F8C4534);
  v51 = v28;
  *(_QWORD *)(v31 - 136) = a18;
  *(_QWORD *)(v31 - 128) = v28;
  *(_QWORD *)(v31 - 112) = a10;
  *(_QWORD *)(v31 - 104) = a19;
  *(_QWORD *)(v31 - 120) = a19;
  v35 = (void (*)(uint64_t))(*(_QWORD *)(v25 + 8 * (v32 ^ 0x7AB)) - 8);
  v35(v31 - 144);
  *(_DWORD *)(v31 - 136) = (v32 + 73) ^ (1438293641
                                       * ((917575902 - ((v31 - 144) | 0x36B118DE) + ((v31 - 144) | 0xC94EE721)) ^ 0x7189B25E));
  *(_QWORD *)(v31 - 128) = a18;
  *(_QWORD *)(v31 - 144) = a13;
  v48(v31 - 144);
  *(_QWORD *)(v31 - 120) = v30;
  *(_QWORD *)(v31 - 112) = a18;
  *(_DWORD *)(v31 - 128) = (v32 - 559) ^ (1734664879
                                        * ((((v31 - 144) | 0xC54E32D3) + (~(v31 - 144) | 0x3AB1CD2C)) ^ 0xEA951AC8));
  *(_QWORD *)(v31 - 144) = a13;
  *(_QWORD *)(v31 - 136) = v47;
  v46(v31 - 144);
  *(_QWORD *)(v31 - 104) = v29;
  *(_QWORD *)(v31 - 144) = v30;
  *(_QWORD *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 112) = v32
                         + 2070
                         - 1948972247 * ((2 * ((v31 - 144) & 0x37DFC0F8) - (v31 - 144) - 937410810) ^ 0x7DBECAE8);
  *(_QWORD *)(v31 - 128) = a13;
  *(_QWORD *)(v31 - 120) = a18;
  v34(v31 - 144);
  *(_QWORD *)(v31 - 136) = a18;
  *(_QWORD *)(v31 - 128) = a13;
  *(_QWORD *)(v31 - 112) = a11;
  *(_QWORD *)(v31 - 104) = v30;
  *(_QWORD *)(v31 - 120) = v30;
  *(_DWORD *)(v31 - 144) = v32
                         - 488
                         - 1988622253
                         * ((((v31 - 144) | 0xB3BC2705) - (v31 - 144) + ((v31 - 144) & 0x4C43D8F8)) ^ 0x45A467A5);
  v35(v31 - 144);
  *(_QWORD *)(v31 - 144) = a19;
  *(_QWORD *)(v31 - 136) = v30;
  *(_DWORD *)(v31 - 128) = v32
                         + 1866394843 * ((((v31 - 144) | 0xBAF5A313) - ((v31 - 144) & 0xBAF5A313)) ^ 0x50E294E7)
                         + 346;
  ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + v32 - 1368) - 12))(v31 - 144);
  *(_DWORD *)(v31 - 144) = v32 + 1734664879 * ((v31 - 509109125 - 2 * ((v31 - 144) & 0xE1A79D0B)) ^ 0xCE7CB511) + 1115;
  *(_QWORD *)(v31 - 136) = v30;
  sub_21E069D0C(v31 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, uint64_t, void (*)(uint64_t), uint64_t, void (*)(uint64_t), _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((((*(_DWORD *)(v31 - 140) - 1432884345) > 0x2A1E2DC) * (HIDWORD(v49) ^ 0x16C)) ^ v32)))(v36, v37, v38, v39, v40, v41, v42, v43, a3, v45, v46, v47, a7, v48, v49, v34, *(&off_24E21C7C0 + v32 - 1209), v50, a13,
           v51,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21);
}

uint64_t sub_21E05A688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t), void (*a17)(uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  *(_DWORD *)(v39 - 112) = v35 + 2070 - 1948972247 * ((v39 - 144) ^ 0xB59EF5EE);
  *(_QWORD *)(v39 - 104) = a35;
  *(_QWORD *)(v39 - 128) = v37;
  *(_QWORD *)(v39 - 120) = a24;
  *(_QWORD *)(v39 - 144) = v38;
  *(_QWORD *)(v39 - 136) = v38;
  a16(v39 - 144);
  *(_QWORD *)(v39 - 128) = v37;
  *(_QWORD *)(v39 - 120) = a24;
  *(_DWORD *)(v39 - 112) = v35
                         + 2070
                         - 1948972247 * (((v39 - 144) & 0xD1B00757 | ~((v39 - 144) | 0xD1B00757)) ^ 0x9BD10D46);
  *(_QWORD *)(v39 - 144) = a18;
  *(_QWORD *)(v39 - 136) = v38;
  *(_QWORD *)(v39 - 104) = v38;
  a16(v39 - 144);
  *(_DWORD *)(v39 - 128) = v35
                         - 1044
                         + 1503746353 * ((((2 * (v39 - 144)) | 0x7FC19792) - (v39 - 144) + 1075786807) ^ 0x9981097F)
                         - 268461852;
  *(_QWORD *)(v39 - 144) = a20;
  *(_QWORD *)(v39 - 136) = v38;
  sub_21E0E1D20(v39 - 144);
  *(_QWORD *)(v39 - 136) = a25;
  *(_QWORD *)(v39 - 128) = v38;
  *(_DWORD *)(v39 - 144) = v35
                         - 1044
                         - 1948972247 * (((v39 - 144) & 0x705E6266 | ~((v39 - 144) | 0x705E6266)) ^ 0x3A3F6877)
                         + 498;
  a17(v39 - 144);
  *(_DWORD *)(v39 - 144) = v35
                         - 1044
                         - 1734664879 * ((((v39 - 144) | 0x906F34C) - ((v39 - 144) & 0x906F34C)) ^ 0x26DDDB56)
                         + 362;
  *(_QWORD *)(v39 - 136) = v38;
  *(_QWORD *)(v39 - 128) = a25;
  v40 = sub_21E069E70(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8
                                            * ((226 * (((a23 == 0) ^ (v35 - 37)) & 1)) ^ (v35 + 1255))))(v40);
}

uint64_t sub_21E05A89C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t result;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v5 = ((v4 - 144) ^ 0xB59EF5EE) * v0;
  *(_QWORD *)(v4 - 120) = v9;
  *(_QWORD *)(v4 - 144) = v3;
  *(_DWORD *)(v4 - 132) = v8 - v5 + ((v2 - 1775) ^ 0xCD536909);
  *(_DWORD *)(v4 - 128) = v5 + v2 - 1599;
  result = ((uint64_t (*)(uint64_t))*(&off_24E21C7C0 + (v2 ^ 0x82C)))(v4 - 144);
  *(_DWORD *)(v7 - 0x5D5DA5DB707DB87) = v8;
  *(_DWORD *)(v1 + 44) = 939001227;
  return result;
}

void U4HBs()
{
  _DWORD v0[14];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617
         * ((((v0 | 0x851AEA1E) ^ 0xFFFFFFFE) - (~v0 | 0x7AE515E1)) ^ 0xDDB67D88)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X8 }
}

uint64_t sub_21E05AAC8()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1692 * (v0 != 0)) ^ 0xA0Au)) - 8))();
}

uint64_t sub_21E05AB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  int v7;

  if (v2)
    v5 = *(_QWORD *)((v3 ^ 0x6E0FF46CEF4CB33FLL) - 0x6E0FF46CEF4CB327) == 0x3AF2004723E7A171;
  else
    v5 = 1;
  v7 = v5 || v1 == 0;
  return ((uint64_t (*)(void))(v0 - 2570 + *(_QWORD *)(v4 + 8 * (((2 * v7) | (16 * v7)) ^ 0x346u)) - 1176991117))();
}

uint64_t sub_21E05ABA4()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  BOOL v4;
  char v5;

  if (v1)
    v4 = v2 == 0;
  else
    v4 = 1;
  v5 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((1763 * ((v5 ^ (v0 + 49)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_21E05ABEC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((3620
                                          * (*(_BYTE *)(a1 - 0x3AF2004723E7A170) == ((v1 + 857337731) & 0x76 ^ 0x11))) ^ (v1 + 792)))
                            - ((v1 + 792) ^ (v2 + 2208) ^ (unint64_t)(v3 + 12))))();
}

uint64_t sub_21E05AC54()
{
  int v0;
  uint64_t v1;
  uint64_t *v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = v0 & 0xCCE61D76;
  if (v3 <= (v0 & 0xCCE61D76 ^ 0xD39))
    v6 = 16 - v3;
  else
    v6 = 0;
  v7 = (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 8 * (int)(v5 ^ 0xC99)))(v3 + v6 + (((v0 & 0xCCE61D76) - 1526) ^ 0x778), 1606880405);
  *v2 = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * (int)((124 * (v7 != 0)) ^ v5)))(v7, v8, v9, v10);
}

uint64_t sub_21E05ACE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, int a12, unsigned int a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, unsigned int a19, __int16 a20)
{
  _BYTE *v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t *v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  *v22 = v25;
  v28 = *v23;
  *(_DWORD *)(v28 + 3) = 16908633;
  *(_BYTE *)(v28 + 2) = 76;
  *(_WORD *)v28 = 20550;
  *(_BYTE *)(v28 + 7) = 0;
  *(_DWORD *)(v28 + 8) = bswap32(v24 + ((a12 - 1684) | 0x150) - 464);
  *(_BYTE *)(v28 + 12) = *v20;
  *(_BYTE *)(v28 + 13) = 0;
  *(_BYTE *)(v28 + 14) = a11;
  *(_BYTE *)(v28 + 15) = 0;
  a19 = (a12 - 1362) ^ ((&a17 ^ 0xA7536869) * v27);
  a18 = v28 + 16;
  a20 = ((unsigned __int16)&a17 ^ 0x6869) * v27 + 27465;
  v29 = ((uint64_t (*)(char *))(*(_QWORD *)(v21 + 8 * (a12 - 1509)) - 4))(&a17);
  *(_DWORD *)(v28 + 32) = bswap32(a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * (a12 ^ (27
                                                              * (((((a12 - 1684) ^ 0xCEA) - 17173588) & (2 * (v24 - ((2 * v24) & 0x964278F0) - 887014280)) ^ 0x964078F0)
                                                               + ((v24 - ((2 * v24) & 0x964278F0) - 887014280) ^ 0x345DC381)
                                                               + 2080357576 == 2071772353))))
                                          - 8))(v29);
}

uint64_t sub_21E05AE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((5 * (v7 ^ 0xC31)) ^ 0x46277DC8) + a5)
                                          * ((v6 + v5 + 8585223) < 8)) ^ v7))
                            - 12))();
}

uint64_t sub_21E05AE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * ((42 * (v6 - v8 - ((v5 + 162) ^ 0x2CDuLL) > 0x1F)) ^ v5))
                            + 1176993683
                            - (v5 - a5 - 535)))();
}

uint64_t sub_21E05AED4()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v0 < 0x20) ^ (v1 + 105) ^ 0xC5) & 1 | (8 * (((v0 < 0x20) ^ (v1 + 105) ^ 0xC5) & 1))) ^ v1))
                            - ((v1 - 1163220375) & 0x455557EF ^ 0x546)))();
}

uint64_t sub_21E05AF28@<X0>(int a1@<W4>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = (v3 + a2);
  v9 = *(_OWORD *)(v6 + v8 - 15);
  v10 = *(_OWORD *)(v6 + v8 - 31);
  v11 = v2 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((2428 * (553 * (v5 ^ 0x46277F9D) - 3286 == (v4 & 0xFFFFFFE0))) ^ (a1 + v5 + 359)))
                            - 12))();
}

uint64_t sub_21E05AF9C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (503 * (v0 == v1))))
                            - 2 * (((v2 - 2725) | 2) ^ 0x2ADu)
                            + 504))();
}

uint64_t sub_21E05AFD4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((194 * (v1 ^ 0x254)) ^ 0x556) & v0) != 0)
                                          * ((v1 + 1176993096) ^ 0x46277F3D)) ^ v1))
                            - 8))();
}

uint64_t sub_21E05B024@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v1 - 7 + (v2 + a1 - v4)) = *(_QWORD *)(v6 - 7 + (v2 + a1 - v4));
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((106
                                * (v4 + 119 * (((v5 - 1326) | 0x504) ^ 0x521) - 587 != ((((v5 - 1326) | 0x504) - 1324) & v3))) ^ ((v5 - 1326) | 0x504))))();
}

uint64_t sub_21E05B094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v6 ^ (1288 * (v4 == v5)))) + a4 - ((v6 + 67317823) | 0x42244D09u)))();
}

uint64_t sub_21E05B0D8@<X0>(int a1@<W4>, int a2@<W7>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 + (v5 + a3)) = *(_BYTE *)(v6 + (v5 + a3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((83 * (v5 - 1 == a2)) ^ (a1 + v4 + 2646)))
                            - (a1 + v4 + 448)
                            + 496))();
}

uint64_t sub_21E05B118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, unsigned __int8 *a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, unsigned __int8 *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  int v32;

  v32 = a6 << ((v26 - 33) ^ 0xDA);
  v27 = 1438293641 * ((((2 * &a16) | 0x65F7AF54) - &a16 + 1292118102) ^ 0xA3C82D5);
  LODWORD(a22) = (a6 ^ 0xFF6FEBFE) - v27 + (v32 & 0xFEDFD7FC) + 1876786556;
  a21 = v25 + 56;
  LOBYTE(a20) = (-119 * ((((2 * &a16) | 0x54) - &a16 + 86) ^ 0xD5)) ^ 0x44;
  a23 = v25;
  a16 = v27 + v26 + 126;
  a18 = v25 + 36;
  a19 = a13;
  ((void (*)(int *))((char *)*(&off_24E21C7C0 + (v26 ^ 0xF6)) - 12))(&a16);
  v28 = (uint64_t)&a13[56 * *a13 + 0x711E505EE86A62EFLL];
  v29 = 2009815553
      * (((&a16 | 0xDF21D8B0) - &a16 + (&a16 & 0x20DE2748)) ^ 0x2E2AF6F5);
  a16 = v29 + v26 + 200;
  a18 = v25 + 0x17C1CEC768E2A275;
  LODWORD(a19) = (a12 & 0xFFFFFFF0 ^ 0x7FEDAFFF) - v29 + (v32 & 0xFFDB5FE0) - 1437082176;
  a21 = v28;
  a22 = v25 + 0xB73EF3BB41960F7;
  a20 = v25 + 0x123E11F758B2DF04;
  v30 = ((uint64_t (*)(int *))((char *)*(&off_24E21C7C0 + (v26 ^ 0x1AF)) - 8))(&a16);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((1004 * (a17 == v23)) ^ v26)))(v30);
}

uint64_t sub_21E05B314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  unsigned int v11;
  uint64_t v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (a11 ^ 0x2A2 ^ (4 * (v11 > 1)))) - 8))();
}

uint64_t sub_21E05B3A8@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v2;
  int v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v8 = v4 + v5 + a1;
  *(_BYTE *)(a2 + v6 - 1) = ((v8 - 108) ^ 0xBA) * (v8 - 91);
  *(_BYTE *)(a2 + v6 - 2) = ((v2 + ((v3 - 124) & 0x7B ^ 0xEC)) ^ 0xBA) * (v8 - 90);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((229 * ((a2 & 0xFFFFFFFE) == 2)) ^ (v3 - 253))) - 8))();
}

void sub_21E05B44C()
{
  JUMPOUT(0x21E05B404);
}

uint64_t sub_21E05B458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  _QWORD *v11;
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v13
                                                     + 8
                                                     * ((2971 * (((v12 == 0) ^ (a11 + 40)) & 1)) ^ a11))
                                         - 4))(*v11);
}

uint64_t sub_21E05B498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v16 = (v13 + 621) | 0x224u;
  v17 = ((unint64_t)&a13 ^ 0x7BD72C1FBBDB3FDFLL) + ((v16 ^ 0xF7AE583F77B674D0) & (2 * (_QWORD)&a13));
  a13 = v14 - 1;
  *(_BYTE *)(a1 + a13) = ((v17 + ((v13 + 109) | 0x24) - 75) ^ 0xBA) * (v17 + 50);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15
                                                                                          + 8
                                                                                          * (int)((239 * (a13 != 0)) ^ v16))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

void sub_21E05B560()
{
  JUMPOUT(0x21E05B52CLL);
}

uint64_t sub_21E05B56C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (3699 * (v1 == a1))))
                            - ((((v2 + 33948177) | 0x44217911u) - 1176992822) ^ (v2 - 268))))();
}

uint64_t sub_21E05B5C4@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v6 = a1 - 1;
  *(_BYTE *)(v3 + v6) = (((v2 + 46) ^ (v4 - 85)) + v1) * ((v1 - 108) ^ 0xBA);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((57 * (v6 != 0)) ^ (v2 - 25))) - 4))();
}

void sub_21E05B614()
{
  JUMPOUT(0x21E05B5DCLL);
}

uint64_t sub_21E05B61C@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  _QWORD *v2;
  unsigned int v3;
  int v4;

  ((void (*)(void))*(&off_24E21C7C0 + ((a1 | 0x65B98) ^ 0x46277E9A)))();
  *v2 = 0;
  *v1 = 0;
  return v4 ^ v3;
}

void sub_21E05B698(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v1 = 1503746353 * ((-663178938 - (a1 | 0xD878B146) + (a1 | 0x27874EB9)) ^ 0x1E68C0F);
  v2 = *(_DWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_DWORD *)a1 - v1;
  v5 = *(_DWORD *)(v3 - 0x195CA6660D034730);
  *(_DWORD *)(v3 - 0x195CA6660D034730) = v5 + 8 * v4 + 1202857072;
  v6 = v5 + 8 * v4 - 1456475325;
  v7 = v6 < v5 + 1635634899;
  if ((v5 + 1635634899) < 0x696FC350 != v6 < 0x696FC350)
    v7 = (v5 + 1635634899) < 0x696FC350;
  *(_DWORD *)(v3 - 0x195CA6660D03472CLL) += ((v4 - 386513778) >> 29) + v7;
  __asm { BR              X11 }
}

uint64_t sub_21E05B840@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((((v2 + v3 + 64) < 0xFFFFFFC0)
                                                        * (((a2 - 1445) | 0x18) + 3516)) ^ a2))
                                          - (a2 ^ 0x58u)
                                          + 1938))(a1);
}

uint64_t sub_21E05B884()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = v2 + 324504358 <= ((((v0 - 3267) | 0x229) + 643) ^ 0x2A61422Bu)
    || 711018200 - v1 <= (v2 + 324504358);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((50 * v5) ^ v0)) - 12))();
}

uint64_t sub_21E05B8F0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((unint64_t)(v1 + 412 - v0 + 397243899) - 397245459 > 7)
                                     * (((v1 + 1736829626) & 0x987A13FF) - 540)) ^ v1)))();
}

uint64_t sub_21E05B958()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((194
                                          * (v4 - 0x195CA6660D034E96 - v2 + v0 + 1902 >= ((v1 - 738) ^ ((v1 - 344) | 0x6Du) ^ 0x613uLL))) ^ v1))
                            - 12))();
}

uint64_t sub_21E05B9B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD *v3;
  uint64_t v4;

  *a1 = *v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((3778
                                          * (((v2 + 1125762895) & 0xBCE637FF ^ 0x4B4) == (v1 & 0xFFFFFFFFFFFFFFF8))) ^ v2))
                            - 12))();
}

uint64_t sub_21E05BA10()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (((v0 + 1) ^ (v1 == 386513778)) & 1) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (4 * v3)) ^ v0)))();
}

uint64_t sub_21E05BA54@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL4 v7;

  *(_BYTE *)(a1 + (v1 + v4 - 1717891399)) = *(_BYTE *)(v5 + (v1 + v4 - 1717891399));
  v7 = v4 - 1005216133 < v3;
  if (v3 < v2 != v4 - 1005216133 < v2)
    v7 = v3 < v2;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (4 * v7)) ^ v1)))();
}

uint64_t sub_21E05BAB0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 - 684) | 0x18C) - 147) ^ (v2 + 635788098) & 0xDA1AA377) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_21E05BAFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v2 + v1) = *(_BYTE *)(v5 + v2 + v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((70 * (((v2 + 1 == v3) ^ (v4 - 1)) & 1)) ^ (v4 + 1201)))
                            - 12))();
}

uint64_t sub_21E05BB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(int *), void (*a14)(int *), uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  unsigned int v27;
  uint64_t v28;

  v27 = 1503746353
      * (((&a19 | 0x14260DD0) - &a19 + (&a19 & 0xEBD9F228)) ^ 0x3247CF66);
  LODWORD(a21) = v27 + 1879245641;
  a20 = v25;
  a19 = v27 + v22 + 2661;
  a14(&a19);
  a19 = v22
      + 225134719 * ((&a19 & 0x5BC73178 | ~(&a19 | 0x5BC73178)) ^ 0xB2C88BAD)
      - 157116428;
  a20 = v23 + 0xAAE376B1B19CB24;
  a21 = v25;
  v28 = a13(&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((((v24 - v26 - 386513842) < 0xFFFFFFC0)
                                                        * (((((v22 - 902470581) & 0x35CA9FDE) - 1445) | 0x18) + 3516)) ^ (v22 - 902470581) & 0x35CA9FDE))
                                          - ((v22 - 902470581) & 0x35CA9FDE ^ 0x58u)
                                          + 1938))(v28);
}

uint64_t sub_21E05BC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned int a9@<W8>, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v11 + 8 * (int)((1295 * (a10 - v10 + (a9 ^ 0xE6A35999F2FCBF46) >= (a9 ^ 0x78EuLL))) ^ a9 ^ 0xE2C)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a10 - v10 + (a9 ^ 0xE6A35999F2FCBF46));
}

uint64_t sub_21E05BD60@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_OWORD *)(v5 + v1 + 24) = *(_OWORD *)(v2 + v1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 != 48) * v4) ^ a1)) - 12))();
}

uint64_t sub_21E05BD98@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  _BOOL4 v8;

  *(_BYTE *)(v5 + v1 + v6 + 24) = *(_BYTE *)(v3 + v1 + v6);
  v8 = v1 + 1 != (a1 ^ v7 ^ (unint64_t)(v2 + 1978));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v8 | (16 * v8)) ^ a1)) - 12))();
}

uint64_t sub_21E05BDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(int *), void (*a14)(int *), uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  uint64_t v26;

  v25 = 1503746353 * (((&a20 | 0xEE5D8647) - (&a20 & 0xEE5D8647)) ^ 0xC83C44F1);
  a20 = v25 + v24 + 1635;
  a21 = v23;
  LODWORD(a22) = v25 + 1879245641;
  a14(&a20);
  a20 = 225134719 * ((2 * (&a20 & 0x2CF823C0) - &a20 - 754459589) ^ 0xC5F79911)
      - 157117454
      + v24;
  a21 = a11;
  a22 = v23;
  v26 = a13(&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8
                                                      * (((a19 - 386513906 >= ((v24 - 1381) ^ 0xFFFFFDF9))
                                                        * ((v24 + 532) ^ 0x9EA)) ^ v24))
                                          - 12))(v26);
}

void sub_21E05BEF0()
{
  JUMPOUT(0x21E05BD18);
}

uint64_t sub_21E05BF08()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 != 386513778) * (v0 ^ 0x844)) ^ v0)))();
}

uint64_t sub_21E05BF3C@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  unsigned int v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;

  v6 = 2 * (v3 ^ 0x382) - 317;
  v7 = v2 < a1;
  *(_BYTE *)(a2 - 0x195CA6660D034728) = *v4;
  if (v7 == a1 > 0x7EE99827)
    v7 = v2 > 0x7EE99827;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1363 * v7) ^ v6)))();
}

void sub_21E05BFC8()
{
  JUMPOUT(0x21E05BF80);
}

uint64_t sub_21E05C00C(uint64_t a1)
{
  int v1;

  v1 = 225134719 * ((2 * (a1 & 0x3B70752E) - a1 + 1150257873) ^ 0x527FCFFB);
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + (int)((*(_DWORD *)(a1 + 12) ^ v1) & 0xBAF010E8))
                              + 8
                              * (((((*(_DWORD *)(a1 + 8) + v1) ^ 0x37F8058Bu) - 1 < 0x63)
                                * ((((*(_DWORD *)(a1 + 12) ^ v1) - 3131) | 0x6A5) - 1515)) ^ *(_DWORD *)(a1 + 12) ^ v1)
                              - 12))();
}

_QWORD *sub_21E05C0A4@<X0>(_QWORD *result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*result - 0x571752FA66D0A0B6) = (a2 ^ 0xC807FA74)
                                              - (((355 * (v2 ^ 0x6EC)) ^ 0x6FF0076C) & (2 * (a2 ^ 0xC807FA74)
                                                                                      + 2147398450))
                                              + 938958628;
  return result;
}

void sub_21E05C178(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_DWORD *)a1 - 2009815553 * ((656841615 - (a1 | 0x27269B8F) + (a1 | 0xD8D96470)) ^ 0x29D24A35);
  v2 = *(_QWORD *)(a1 + 8);
  v3 = ((unint64_t)(*(_DWORD *)(v2 - 0x195CA6660D034730) + 387) >> 3) & 0x3F;
  *(_BYTE *)(v2 - 0x195CA6660D034728 + v3) = 0x80;
  __asm { BR              X14 }
}

uint64_t sub_21E05C2D8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4086 * (v0 == ((v1 + 352) ^ 0x95B))) ^ v1))
                            - ((v1 + 774) ^ 0xB05)))();
}

uint64_t sub_21E05C310@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *a1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((342 * (v1 != 1)) ^ (v2 + 1743574356) & 0x9813295D))
                            - (((((v2 + 1743574356) & 0x9813295D) + 244) | 0x200) ^ 0xB05)))();
}

uint64_t sub_21E05C368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v4) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 + 1 != v1) * v5) ^ v2)) - (v3 ^ 0xB05)))();
}

uint64_t sub_21E05C398(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t *), void (*a14)(uint64_t *), uint64_t a15, int a16, int a17, int a18, int a19, uint64_t a20,int *a21,uint64_t a22,int a23,int a24)
{
  uint64_t v24;
  uint64_t v25;
  int v26;
  void (*v27)(uint64_t *);
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;

  v30 = 2009815553 * ((99060204 - (&a20 | 0x5E789EC) + (&a20 | 0xFA187613)) ^ 0xB135856);
  LODWORD(a21) = a1 - v30 + 12;
  HIDWORD(a21) = (v26 - 543) ^ v30;
  a20 = a15;
  v27(&a20);
  LODWORD(a20) = (v26 + 425454937) ^ (225134719
                                    * (((&a20 | 0x3596CFD5)
                                      - &a20
                                      + (&a20 & 0xCA693028)) ^ 0x23668AFF));
  a21 = (int *)(v25 + 0x48E54EA8679E29ECLL);
  a22 = a15;
  a13(&a20);
  v31 = (((&a20 | 0xEB41B06D) + (~&a20 | 0x14BE4F92)) ^ 0xC49A9876) * v28;
  a23 = v26 - v31 - 2164;
  a24 = v31 + v29;
  LODWORD(a20) = 1729118973 - v31;
  a21 = &a16;
  a22 = a15;
  a14(&a20);
  *(_DWORD *)(v25 - 0x195CA6660D034740) += a16;
  *(_DWORD *)(v25 - 0x195CA6660D03473CLL) += a17;
  *(_DWORD *)(v25 - 0x195CA6660D034738) += a18;
  *(_DWORD *)(v25 - 0x195CA6660D034734) += a19;
  *(_QWORD *)(v25 - 0x195CA6660D034728) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((1652 * (((v26 - 1521) | 0x80) == 1472)) ^ v26))
                                          - 12))(304519297);
}

uint64_t sub_21E05C59C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  *(_QWORD *)(a1 + v2 + 24) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 + v1 == 1472) * v3) ^ v5)) - 12))();
}

uint64_t sub_21E05C5D0()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * ((457 * (((v0 - 117) ^ (v1 == (v0 ^ 0xF48) - 1369)) & 1)) ^ v0)))();
}

uint64_t sub_21E05C604()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v1 ^ 0x972) + 2408) ^ 0x94Eu) - v0 > 7) * (79 * (v1 ^ 0x972) - 420)) ^ v1))
                            - 8))();
}

uint64_t sub_21E05C648()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < (v1 ^ 0xC46u) - 2393) * ((v1 + 877) ^ 0x8C1)) ^ v1)))();
}

uint64_t sub_21E05C67C@<X0>(_OWORD *a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *a1 = 0u;
  a1[1] = 0u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((388 * ((v1 & 0xFFFFFFE0) == 32)) | (v2 - 798)))
                            - (v2 + 1020)
                            + 3433))();
}

void sub_21E05C6BC()
{
  JUMPOUT(0x21E05C694);
}

uint64_t sub_21E05C6C8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((14 * ((((89 * (v2 ^ 0xD65)) ^ (v1 == v0)) & 1) == 0)) ^ v2))
                            - ((2 * v2) ^ 0x1FB8u)
                            + 1350))();
}

uint64_t sub_21E05C710()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v1 + 565323676) & 0xDE4DDBBD) - 2196) & v0) == 0)
                                * (((v1 - 1001) | 0x810) + 1301)) ^ v1)))();
}

uint64_t sub_21E05C754@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_QWORD *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((125 * ((v1 & 0xFFFFFFF8) - (unint64_t)(v3 + 183) + 2395 == v2)) ^ v3)))();
}

uint64_t sub_21E05C790@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v1) = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 == v1) * v4) ^ v3)))();
}

uint64_t sub_21E05C7B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((5 * (v2 ^ 0x886)) ^ 0xFFFFF22F) + ((v2 - 1267239312) & 0x4B8885BC))
                                               * (v1 == v0)) ^ v2))
                            - 8))();
}

uint64_t sub_21E05C804@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a1 + v2) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3379 * (v2 + ((v3 - 2297) | 0x510u) - 1423 == v1)) ^ (v3 - 398))))();
}

uint64_t sub_21E05C83C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t *), void (*a14)(uint64_t *), uint64_t a15, int a16, int a17, int a18, int a19, uint64_t a20,int *a21,uint64_t a22,int a23,unsigned int a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  void (*v28)(uint64_t *);
  int v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;

  v30 = *(_QWORD *)(v24 + 16);
  v31 = 2009815553 * ((((2 * &a20) | 0x5532C93E) - &a20 - 714695839) ^ 0xDB924ADA);
  LODWORD(a21) = a1 - v31 + 10;
  HIDWORD(a21) = (v29 + 850) ^ v31;
  a20 = a15;
  v28(&a20);
  v32 = *v27 - ((2 * *v27 - 266594554) & 0xCCD7E6BE) - 562430238;
  v33 = 1328090399
      * ((((&a20 | 0xA794F5C2) ^ 0xFFFFFFFE) - (~&a20 | 0x586B0A3D)) ^ 0xA7B86E07);
  a20 = v26 + 0x2BD29DE94AAFA904;
  LODWORD(a21) = v29 + 230934681 - v33;
  HIDWORD(a21) = v32 ^ v33;
  sub_21E0DD80C((uint64_t)&a20);
  v34 = 1328090399
      * (((&a20 | 0x79AD9D89) - &a20 + (&a20 & 0x86526270)) ^ 0x867EF9B3);
  v35 = (*(_DWORD *)(v26 - 0x195CA6660D03472CLL)
       - ((2 * *(_DWORD *)(v26 - 0x195CA6660D03472CLL) - 266594554) & 0xCCD7E6BE)
       - 562430238) ^ v34;
  LODWORD(a21) = v29 + 230934681 - v34;
  HIDWORD(a21) = v35;
  a20 = v26 + 0x2BD29DE94AAFA908;
  sub_21E0DD80C((uint64_t)&a20);
  LODWORD(a20) = (v29 + 425456330) ^ (225134719
                                    * ((&a20 & 0x8C623CBC | ~(&a20 | 0x8C623CBC)) ^ 0x656D8669));
  a21 = (int *)(v26 + 0x48E54EA8679E29ECLL);
  a22 = a15;
  a13(&a20);
  v36 = 1734664879 * ((((2 * &a20) | 0x7D3242DA) - &a20 + 1097260691) ^ 0x91420977);
  LODWORD(a20) = 1729118973 - v36;
  a23 = v29 - v36 - 771;
  a24 = v36 - 1052724817;
  a21 = &a16;
  a22 = a15;
  a14(&a20);
  *(_DWORD *)(v26 - 0x195CA6660D034740) += a16;
  *(_DWORD *)(v26 - 0x195CA6660D03473CLL) += a17;
  *(_DWORD *)(v26 - 0x195CA6660D034738) += a18;
  *(_DWORD *)(v26 - 0x195CA6660D034734) += a19;
  v37 = 2009815553 * (((&a20 | 0xC9A84498) - (&a20 & 0xC9A84498)) ^ 0x38A36ADD);
  LODWORD(a21) = 304519297 - v37;
  HIDWORD(a21) = (v29 + 850) ^ v37;
  a20 = v26 - 0x195CA6660D034740;
  v38 = ((uint64_t (*)(uint64_t *))v28)(&a20);
  *(_BYTE *)(v30 - 0x434BCA9F0A039FA3) = *(_BYTE *)(v26 - 0x195CA6660D034740)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034740)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039FA2) = *(_BYTE *)(v26 - 0x195CA6660D03473FLL)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D03473FLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039FA1) = *(_BYTE *)(v26 - 0x195CA6660D03473ELL)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D03473ELL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039FA0) = *(_BYTE *)(v26 - 0x195CA6660D03473DLL)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D03473DLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F9FLL) = *(_BYTE *)(v26 - 0x195CA6660D03473CLL)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D03473CLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F9ELL) = *(_BYTE *)(v26 - 0x195CA6660D03473BLL)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D03473BLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F9DLL) = *(_BYTE *)(v26 - 0x195CA6660D03473ALL)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D03473ALL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F9CLL) = *(_BYTE *)(v26 - 0x195CA6660D034739)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034739)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F9BLL) = *(_BYTE *)(v26 - 0x195CA6660D034738)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034738)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F9ALL) = *(_BYTE *)(v26 - 0x195CA6660D034737)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034737)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F99) = *(_BYTE *)(v26 - 0x195CA6660D034736)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034736)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F98) = *(_BYTE *)(v26 - 0x195CA6660D034735)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034735)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F97) = *(_BYTE *)(v26 - 0x195CA6660D034734)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034734)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F96) = *(_BYTE *)(v26 - 0x195CA6660D034733)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034733)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F95) = *(_BYTE *)(v26 - 0x195CA6660D034732)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034732)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x434BCA9F0A039F94) = *(_BYTE *)(v26 - 0x195CA6660D034731)
                                         - ((2 * *(_BYTE *)(v26 - 0x195CA6660D034731)) & 0x64)
                                         + 50;
  *(_OWORD *)(v26 - 0x195CA6660D034740) = 0u;
  *v27 = 133297277;
  *(_DWORD *)(v26 - 0x195CA6660D03472CLL) = 133297277;
  *(_OWORD *)(v26 - 0x195CA6660D034728) = 0u;
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((53 * (((97 * (v29 ^ 0x589u)) ^ 0x939) == 16)) ^ v29)))(v38);
}

uint64_t sub_21E05CF1C@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  *(__n128 *)(v2 + a1) = a2;
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 + 16 == (v3 ^ 0x939)) * v4) ^ v6)))();
}

uint64_t sub_21E05CF80(uint64_t a1)
{
  int v1;

  v1 = 731811679 * (((a1 | 0xC9CD0826) - (a1 & 0xC9CD0826)) ^ 0x803BAE62);
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + *(_DWORD *)a1 + v1 - 1610)
                              + 8
                              * ((2915 * ((v1 + *(_BYTE *)(a1 + 8) - 95) < 4u)) ^ (*(_DWORD *)a1 + v1))
                              - 12))();
}

uint64_t sub_21E05CFFC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  char v2;
  uint64_t v3;

  *(_DWORD *)(result + 4) = *(_DWORD *)(*(_QWORD *)(v3 + 8 * (a2 - 1693)) + 4 * v2 - 4);
  return result;
}

uint64_t sub_21E05D014(uint64_t result)
{
  *(_DWORD *)(result + 4) = -939041308;
  return result;
}

void sub_21E05D024(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x1D17695A8381D362);
  v4 = v2 - 201714705;
  v3 = v2 - 201714705 < 0;
  v5 = 201714705 - v2;
  if (!v3)
    v5 = v4;
  v1 = *(_DWORD *)(a1 + 8) - 1948972247 * (((a1 | 0xBA379AD4) - (a1 & 0xBA379AD4)) ^ 0xFA96F3A) - 2528;
  __asm { BR              X10 }
}

uint64_t sub_21E05D190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int a7, uint64_t a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  int v12;
  unsigned int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((*(_DWORD *)(*v9 + 4 * v13 + a8) == (((v12 - 2643) | a7) ^ (v8 + 24)))
                                          * v11) ^ v12))
                            - ((v12 + a5) & a6)
                            + 372))();
}

void sub_21E05D1D4()
{
  JUMPOUT(0x21E05D14CLL);
}

uint64_t sub_21E05D1DC(uint64_t result)
{
  *(_DWORD *)(result + 12) = 1007309965;
  return result;
}

void cp2g1b9ro()
{
  _DWORD v0[8];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * (((v0 | 0x920AEA7F) - (v0 & 0x920AEA7F)) ^ 0x35598216)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X9 }
}

uint64_t sub_21E05D35C@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2900 * (v1 != 0)) ^ a1)) - (v2 ^ 0x93DF35C5)))();
}

uint64_t sub_21E05D394()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL4 v2;

  v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 3448))(40, 2217100586) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((239 * v2) ^ 0x761)) - 8))();
}

uint64_t sub_21E05D3E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  int v13;

  v6 = a1 + 0x6E0FF46CEF4CB33FLL;
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0x3AF2004723E7A171;
  *(_QWORD *)(a1 + 32) = 0;
  v12 = v2;
  v10 = a1 + 0x7CC7733BDE305947;
  v11 = v5 - 1990461019 * ((((2 * &v10) | 0x5C2E8EC6) - &v10 - 773277539) ^ 0x1F3E5EA) + 997;
  ((void (*)(uint64_t *))(*(_QWORD *)(v4 + 8 * (v5 - 1525)) - 4))(&v10);
  v7 = v13;
  if (v13 == ((v5 - 1744850889) & 0xFBDF7DFF ^ 0xA427304E))
    v8 = v6 ^ 0x6E0FF46CEF4CB33FLL;
  else
    v8 = 0;
  *v1 = v8;
  return v7 ^ v3;
}

void sub_21E05D4FC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 1990461019 * (((a1 | 0xD525A764) - a1 + (a1 & 0x2ADA589B)) ^ 0xFAC105ED);
  __asm { BR              X17 }
}

uint64_t sub_21E05D61C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((((v0 - 673) | 0x192) - 2062988604) ^ v1)
                                           + ((2 * v1) & 0xF7BE7EBC ^ 0xF5AC5E88) != -69255330)
                                          * (((v0 - 1925103382) & 0x72BEB8FD) + 3786)) ^ v0))
                            - 4))();
}

uint64_t sub_21E05D6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((646 * (a6 ^ 0xEF) - 452393382) & 0x1AF6FDFA ^ 0x89B)
                                          * ((v6 + 69255330) > 7)) ^ a6))
                            - 8))();
}

uint64_t sub_21E05D710(uint64_t a1, int a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((a2 + a3 + (((v4 + 172) | 4) ^ (a4 + 1164)) < 0xFFFFFFF0)
                                          * (((v4 - 1292) | 0x962) - 2345)) ^ v4))
                            - 4))();
}

uint64_t sub_21E05D758@<X0>(int a1@<W3>, unsigned int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v15;
  unint64_t v16;
  int v18;

  v9 = (v7 + a1) + a3;
  v10 = ((_BYTE)v7 + (_BYTE)a1) & 0xF;
  v11 = v10 + v6 - v9;
  v12 = (v10 | v5) - v9;
  v13 = (v10 | v4) - v9;
  v15 = (unint64_t)(v3 - a3) > 0xF
     && v11 >= (unint64_t)((a2 - 1146) | 0x820) - 2386
     && v12 + (a2 ^ 0x5BDuLL) > 0xF;
  v16 = v13 + 2;
  v18 = v15 && v16 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (int)((100 * v18) ^ a2)) - 12))();
}

uint64_t sub_21E05D7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                                  + 8 * (((v6 < ((v5 + 2083) ^ 0x9BDu)) * ((48 * (v5 ^ 0x194)) ^ 0x58F)) ^ v5))
                                                                                      - 8))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_21E05D824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16x4_t v63;
  int8x16x4_t v64;

  *(_DWORD *)(v56 - 244) = a5 + 1;
  *(_DWORD *)(v56 - 256) = a5 - 1;
  v63.val[1].i64[0] = ((_BYTE)a5 + 9) & 0xF;
  v63.val[1].i64[1] = ((_BYTE)a5 + 8) & 0xF;
  v63.val[2].i64[0] = ((_BYTE)a5 + 7) & 0xF;
  v63.val[2].i64[1] = ((_BYTE)a5 + 6) & 0xF;
  v63.val[3].i64[0] = ((_BYTE)a5 + 5) & 0xF;
  v63.val[3].i64[1] = ((_BYTE)a5 + 4) & 0xF;
  v64.val[0].i64[0] = ((_BYTE)a5 + 3) & 0xF;
  v64.val[0].i64[1] = ((_BYTE)a5 + 2) & 0xF;
  v64.val[1].i64[0] = *(_DWORD *)(v56 - 244) & 0xF;
  v64.val[1].i64[1] = a5 & 0xF;
  v64.val[2].i64[0] = *(_DWORD *)(v56 - 256) & 0xF;
  v64.val[2].i64[1] = ((_BYTE)a5 + 14) & 0xF;
  v64.val[3].i64[0] = ((_DWORD)a5 + 13) & 0xF;
  v64.val[3].i64[1] = ((_BYTE)a5 + 12) & 0xF;
  v57.i64[0] = 0xA3A3A3A3A3A3A3A3;
  v57.i64[1] = 0xA3A3A3A3A3A3A3A3;
  v58.i64[0] = 0x3232323232323232;
  v58.i64[1] = 0x3232323232323232;
  v63.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)v54) & 0xF;
  v63.val[0].i64[1] = ((_BYTE)a5 + 10) & 0xF;
  v59.i64[0] = vqtbl4q_s8(v63, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v59.i64[1] = vqtbl4q_s8(v64, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v60 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v50 - 15 + (a5 + v54)), *(int8x16_t *)(v53 + v63.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v63.val[0].i64[0] + v52 - 14), *(int8x16_t *)(v63.val[0].i64[0] + v51 - 13))));
  v61 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v60, v60, 8uLL), v58), vmulq_s8(v59, v57)));
  *(int8x16_t *)(a7 - 15 + (a5 + v54)) = vextq_s8(v61, v61, 8uLL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a43 + 8 * (int)((1529 * (((1367 * (a6 ^ 0x9AF)) ^ 0xABE) == (v55 & 0xFFFFFFF0))) ^ a6)) - 12))(a1, a2, a3, a4, a5, v55 & 0xFFFFFFF0, a6, (1367 * (a6 ^ 0x9AF)) ^ 0xABE, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_21E05D9B8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((v1 + 486) ^ (42 * (v2 == 0x7ED66FE4)))))(a1, 777175748);
}

uint64_t sub_21E05DA10@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _BOOL4 v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  _BOOL4 v19;

  v13 = 109 * (v9 ^ 0xAA0);
  v14 = (a2 - 777175748);
  *(_BYTE *)(a3 + v14) = *(_BYTE *)(v5 + v14) ^ *(_BYTE *)(v8 + ((v13 ^ 0x5F9) & v14)) ^ *(_BYTE *)(((v13 ^ 0x5F9) & v14) + v7 + 1) ^ *(_BYTE *)(((v13 ^ 0x5F9) & v14) + v6 + 2) ^ (-93 * ((v13 ^ 0xF9) & v14)) ^ 0x32;
  v15 = v10 > v4;
  v16 = a2 + 1077842266;
  v17 = (a2 + 1);
  v18 = v15 ^ (v16 < v3);
  v19 = v16 < v11;
  if (!v18)
    v15 = v19;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((1888 * v15) ^ v9)) - 12))(a1, v17);
}

uint64_t sub_21E05DAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (int)((109 * (((v6 == a6) ^ (v7 - 1)) & 1)) ^ v7))
                            - (v7 ^ 0xAA2)))();
}

uint64_t sub_21E05DB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v8 + 8 * ((328 * ((((v6 + 1203) ^ (((v6 - 229) & v7) == 0)) & 1) == 0)) ^ v6)) - 8))(a1, a2, a3, a4, a5, a6, (a5 - a6), (v6 + 2165));
}

uint64_t sub_21E05DB4C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  int v49;
  char v50;
  uint64_t v51;
  int8x16x4_t v53;

  v49 = -a4;
  v50 = a2 + a1 + v41;
  *(_DWORD *)(v48 - 256) = v46 - 30;
  *(_DWORD *)(v48 - 244) = (v46 - 1167) | 0x424;
  v51 = (v49 + a2 + a1 + a3);
  v53.val[0].i64[0] = ((_BYTE)v49 + (_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v53.val[0].i64[1] = ((_BYTE)v49 + v50 + *(_DWORD *)(v48 - 244)) & 0xF;
  v53.val[1].i64[0] = ((_BYTE)v49 + v50 + 52) & 0xF;
  v53.val[1].i64[1] = ((_BYTE)v49 + v50 + 51) & 0xF;
  v53.val[2].i64[0] = ((_BYTE)v49 + v50 + 50) & 0xF;
  v53.val[2].i64[1] = ((_BYTE)v49 + v50 + 49) & 0xF;
  v53.val[3].i64[0] = ((_BYTE)v49 + v50 + 48) & 0xF;
  v53.val[3].i64[1] = ((_BYTE)v49 + v50 + 47) & 0xF;
  *(int8x8_t *)(a5 - 7 + v51) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v42 - 7 + v51), *(int8x8_t *)(v45 + (v51 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v51 & 0xF) + v44 - 6), *(int8x8_t *)((v51 & 0xF) + v43 - 5)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v53, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xA3A3A3A3A3A3A3A3)));
  LODWORD(v51) = v49 != 8 - ((v46 - 1448) & v47);
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a41
                                                     + 8 * (int)(((2 * v51) | (32 * v51)) ^ *(_DWORD *)(v48 - 256)))
                                         - 12))((__n128)xmmword_21E17F900);
}

void sub_21E05DCB0()
{
  JUMPOUT(0x21E05DBCCLL);
}

uint64_t sub_21E05DCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58)
{
  uint64_t v58;
  uint64_t v59;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v58
                                                      + 8
                                                      * (((*(_DWORD *)(v59 - 244) - 773) * (a58 == a56)) ^ *(_DWORD *)(v59 - 244)))
                                          - ((*(_DWORD *)(v59 - 244) - 1825086407) & 0x6CC89FF3 ^ 0x966)))(a11);
}

uint64_t sub_21E05DD30@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v10 = (a1 + v8);
  *(_BYTE *)(a3 + v10) = a2 ^ 0x94 ^ *(_BYTE *)(v3 + v10) ^ *(_BYTE *)(v6 + (v10 & 0xF)) ^ *(_BYTE *)((v10 & 0xF) + v5 + 1) ^ *(_BYTE *)((v10 & 0xF) + v4 + 2) ^ (-93 * (v10 & 0xF)) ^ 0xC4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((71 * (a1 - 1 != v7)) ^ (a2 - 605))) - 4))();
}

uint64_t sub_21E05DDA8(int8x16_t **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  *(int8x16_t *)(v38 - 240) = veorq_s8(**a1, (int8x16_t)xmmword_21E17F930);
  HIDWORD(a10) = 2 * v36;
  return ((uint64_t (*)(int8x16_t **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (v35 ^ (3963 * (v38 != 240)))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_21E05DDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * (((((v2 - 391464590) & 0x17554DDF) - 3142) * (v1 == a1)) | (v2 + 670)))
                            - 12))();
}

uint64_t sub_21E05DE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _BYTE *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  int v41;

  *(_BYTE *)(v38 - 176) = *a9;
  *(_BYTE *)(v38 - 175) = a9[1];
  *(_BYTE *)(v38 - 174) = a9[2];
  *(_BYTE *)(v38 - 173) = a9[3];
  *(_BYTE *)(v38 - 172) = a9[4];
  *(_BYTE *)(v38 - 171) = a9[5];
  *(_BYTE *)(v38 - 170) = a9[6];
  *(_BYTE *)(v38 - 169) = a9[7];
  *(_BYTE *)(v38 - 168) = a9[8];
  *(_BYTE *)(v38 - 167) = a9[9];
  *(_BYTE *)(v38 - 166) = a9[10];
  *(_BYTE *)(v38 - 165) = a9[11];
  *(_BYTE *)(v38 - 164) = a9[12];
  *(_BYTE *)(v38 - 163) = a9[13];
  *(_BYTE *)(v38 - 162) = a9[14];
  *(_BYTE *)(v38 - 161) = a9[15];
  if (a9)
    v39 = v38 == 176;
  else
    v39 = 1;
  v41 = !v39 && *(_QWORD *)(a12 + 32) != 0x6C1F48F5F9B676A8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (int)((156 * v41) ^ v36 ^ 0x5DC)) - (v36 ^ 0x89CLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_21E05DF2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned int v41;
  _BOOL4 v43;

  v40 = v35 ^ v37;
  v41 = ((v35 ^ v37 ^ 0x1FFFCE6A) & HIDWORD(a10)) + (v38 ^ 0x8FFFE5BF);
  v43 = ((((v40 ^ 0x6A) & BYTE4(a10)) + (v38 ^ 0xBF) + 1) & 0xF) == 0
     && v41 != ((2 * v36) ^ 0x8FFFF2AE ^ (v36 - 2040635237) & 0x79A19F9D);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * ((44 * v43) ^ v36)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_21E05DFB4@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unint64_t v61;
  char *v62;
  char *v63;
  int v64;
  int v65;
  char *v66;
  char *v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  unsigned __int8 *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  uint64_t v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  char *v119;
  char *v120;
  char *v121;
  int v122;
  int v123;
  uint64_t v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  int v181;
  int v182;
  int v183;
  int v184;
  unsigned int v185;
  unsigned int v186;
  int v187;
  int v188;
  int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  uint64_t v205;
  char *v206;
  int v207;
  int v208;
  uint64_t v209;
  int v210;
  unsigned int v211;
  int v212;
  int v213;
  char *v214;
  int v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  __int128 v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;

  v43 = *(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A6);
  *(_DWORD *)(v42 - 244) = v40;
  v44 = (char *)*(&off_24E21C7C0 + v39 - 1664) - 4;
  LODWORD(v43) = v44[v43 ^ 0xDB];
  HIDWORD(v45) = v43 ^ 0x34;
  LODWORD(v45) = (v43 ^ 0x40) << 24;
  LODWORD(v43) = ((v45 >> 30) ^ 0x93) << (v39 + 108);
  v46 = v44[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B6769ELL) ^ 0x43];
  HIDWORD(v45) = v46 ^ 0x34;
  LODWORD(v45) = (v46 ^ 0x40) << 24;
  v47 = *(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A8);
  *(_QWORD *)(v42 - 256) = v41;
  v48 = v47 ^ 0xBB;
  v49 = (char *)*(&off_24E21C7C0 + (v39 ^ 0x715)) - 4;
  v50 = v43 | ((v49[v48] ^ 0x1F) << 24);
  v51 = (uint64_t)*(&off_24E21C7C0 + v39 - 1458);
  v52 = (char *)*(&off_24E21C7C0 + v39 - 1510) - 4;
  LOBYTE(v46) = 105 - v52[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B67699) ^ 0xALL];
  v53 = v49[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B6769CLL) ^ 0xE8] ^ 0x62;
  LODWORD(v43) = (v52[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B6769DLL) ^ 0x82] - 106) ^ 0x1E | (((v45 >> 30) ^ 0x61) << 8) | ((*(unsigned __int8 *)(v51 + (*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B6769FLL) ^ 0x94)) ^ 0x35) << 16);
  v54 = *(unsigned __int8 *)(v51 + (*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B6769BLL) ^ 0x24)) ^ 0xDBLL;
  v55 = v44[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A2) ^ 0xC0];
  HIDWORD(v45) = v55 ^ 0x34;
  LODWORD(v45) = (v55 ^ 0x40) << 24;
  v56 = v50 | ((*(unsigned __int8 *)(v51 + (*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A7) ^ 0x3FLL)) ^ 0xBF) << 16);
  v57 = ((*(unsigned __int8 *)(v51 + (*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A3) ^ 0xC6)) ^ 0xF0) << 16) | ((v49[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A4) ^ 0x9FLL] ^ 0x58) << 24) | (((v45 >> 30) ^ 0x8F) << 8) | (v52[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A1) ^ 0x74] - 106) ^ 0xF0;
  v58 = v43 | ((v49[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A0) ^ 0x1FLL] ^ 0xA3) << 24);
  LOBYTE(v43) = v52[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B676A5) ^ 0xF1];
  v59 = v44[*(unsigned __int8 *)(v38 - 0x6C1F48F5F9B6769ALL) ^ 0xA4];
  v60 = v56 | (v43 - 106) ^ 0x25;
  HIDWORD(v45) = v59 ^ 0x34;
  LODWORD(v45) = (v59 ^ 0x40) << 24;
  v61 = (v53 << 24) | (((v45 >> 30) ^ 0x21) << 8) | (v54 << 16);
  v62 = (char *)*(&off_24E21C7C0 + (v39 ^ 0x5A1)) - 8;
  LODWORD(v44) = v54 ^ 0xB7;
  v63 = (char *)*(&off_24E21C7C0 + (v39 ^ 0x788)) - 4;
  v64 = (((v45 >> 30) ^ 0x62) - 2 * (((v61 >> 8) ^ 0xB31943) & 0xDF ^ (v61 >> 8) & 0x18) - 1334109753) ^ *(_DWORD *)&v62[4 * ((v45 >> 30) ^ 0x80)];
  v65 = (v64 - ((2 * v64) & 0x6D1060F6) - 1232588677) ^ *(_DWORD *)&v63[4 * v44];
  v66 = (char *)*(&off_24E21C7C0 + v39 - 1445) - 4;
  v67 = (char *)*(&off_24E21C7C0 + (v39 ^ 0x6E2)) - 8;
  HIDWORD(v249) = v60;
  v250 = __PAIR64__(v57, v58);
  v68 = v60 ^ v53 ^ *(_DWORD *)&v66[4 * (v53 ^ 0x6A)] ^ (2040089223
                                                                     * *(_DWORD *)&v67[4 * (v46 ^ 0x90)]
                                                                     - 2047761814) ^ (v65
                                                                                    - 1393604540
                                                                                    + (~(2 * v65) | 0xA6216F77)
                                                                                    + 1);
  LODWORD(v52) = v68 ^ 0x2349DE02;
  v69 = v68 ^ v57;
  v70 = v69 ^ v58;
  LODWORD(v249) = v61 & 0xFFFFFF00 | v46;
  LODWORD(v44) = *(_DWORD *)&v67[4 * ~(v70 ^ v46)];
  HIDWORD(v248) = (_DWORD)v52;
  LODWORD(v44) = (2040089223 * (_DWORD)v44 - ((1932694798 * (_DWORD)v44 + 199443668) & 0x5F744126) + 900449021) ^ *(_DWORD *)&v62[4 * (((unsigned __int16)(v70 ^ v249) >> 8) ^ 0xDE)] ^ v52 ^ ((((unsigned __int16)(v70 ^ v249) >> 8) ^ 0x3C) - ((2 * (((v70 ^ v249) >> 8) ^ 0xE5343C)) & 0x18E) - 1334109753);
  LODWORD(v44) = ((_DWORD)v44 - ((2 * (_DWORD)v44) & 0x6D1060F6) - 1232588677) ^ *(_DWORD *)&v63[4
                                                                                               * (((v70 ^ v249) >> 16) ^ 0x9A)];
  HIDWORD(v246) = ((v70 ^ v249) >> 24) ^ *(_DWORD *)&v66[4 * (((v70 ^ v249) >> 24) ^ 0x3C)] ^ ((_DWORD)v44 - ((2 * (_DWORD)v44) & 0x59DE9088) - 1393604540);
  LODWORD(v247) = v70 ^ v249 ^ 0xA8038C87;
  HIDWORD(v247) = v70;
  LODWORD(v248) = v69 ^ 0x9178793;
  LODWORD(v52) = ((HIDWORD(v246) ^ 0x8CF3FEC7) - ((2 * (HIDWORD(v246) ^ 0x8CF3FEC7)) & 0xBC8F204) - 2048624382) ^ v69 ^ 0x9178793;
  v71 = v52 ^ 0x25DD508A ^ v70;
  HIDWORD(v245) = v71 ^ 0xF482F531;
  v72 = v71 ^ 0xF482F531 ^ v247;
  LODWORD(v61) = (2040089223 * *(_DWORD *)&v67[4 * (v71 ^ 0x31 ^ v247 ^ 0x9C)]
                - 2047761814) ^ *(_DWORD *)&v62[4 * (BYTE1(v72) ^ 0x58)] ^ HIDWORD(v246) ^ 0x8CF3FEC7 ^ ((BYTE1(v72) ^ 0xBA) - ((2 * ((v72 >> 8) ^ 0xFA92BA)) & 0x18E) - 1334109753);
  LODWORD(v61) = (v61 - ((2 * v61) & 0x6D1060F6) - 1232588677) ^ *(_DWORD *)&v63[4 * (BYTE2(v72) ^ 0x3C)];
  v73 = *(_DWORD *)&v66[4 * (HIBYTE(v72) ^ 0x23)] ^ HIBYTE(v72) ^ 0xD5AE1B54 ^ (v61
                                                                              - ((2 * v61) & 0x59DE9088)
                                                                              - 1393604540);
  LODWORD(v246) = (_DWORD)v52;
  HIDWORD(v244) = v73 ^ ((v52 ^ 0x25DD508A)
                       - 2 * ((v52 ^ 0x25DD508A) & 0x55AE1BBF ^ v52 & 0x11)
                       - 710009938);
  LODWORD(v44) = HIDWORD(v244) ^ 0x30810FBC ^ v71;
  v251 = v44 ^ 0x62F40C9;
  LODWORD(v52) = v44 ^ 0x62F40C9 ^ v72;
  v74 = *(_DWORD *)&v67[4 * (v52 ^ 0xDE)];
  v75 = (2040089223 * v74 - ((1932694798 * v74 + 199443668) & 0x59DE9088) + 853600942) ^ *(_DWORD *)&v66[4 * ((v52 >> 24) ^ 0xC3)];
  LODWORD(v244) = (_DWORD)v52;
  v76 = *(_DWORD *)&v62[4 * (BYTE1(v52) ^ 0x66)] ^ *(_DWORD *)&v63[4
                                                                 * (((v52 ^ 0x2B4AF8C8) >> 16) ^ 0xAB)] ^ ((BYTE1(v52) ^ 0x84) - ((2 * ((v52 >> 8) ^ 0x1A4F84)) & 0x18E) - 1334109753) ^ (v75 - ((2 * v75) & 0x6D1060F6) - 1232588677);
  LODWORD(v245) = v73;
  HIDWORD(v243) = (v52 >> 24) ^ v73 ^ (v76 - ((2 * v76) & 0xAB5C375C) - 710009938);
  LODWORD(v243) = HIDWORD(v243) ^ 0xFEA770DA ^ HIDWORD(v244) ^ 0x30810FBC;
  v77 = 2 * (v243 ^ 0xF20A80BA);
  v256 = (v243 ^ 0xF20A80BA) - (v77 & 0x15B97CB0) - 1965244840;
  v78 = *(_DWORD *)&v67[4 * ((((v243 ^ 0xBA) - (v77 & 0xB0) + 88) ^ v72) ^ 0x5A)];
  v79 = (2040089223 * v78 - ((1932694798 * v78 + 199443668) & 0x6D1060F6) + 1014616805) ^ *(_DWORD *)&v63[4 * (((v256 ^ v72 ^ 0xE49EF98C) >> 16) ^ 0xC)];
  v80 = *(_DWORD *)&v62[4 * (((unsigned __int16)(v256 ^ v72) >> 8) ^ 0x17)] ^ *(_DWORD *)&v66[4 * (((v256 ^ v72) >> 24) ^ 0xDD)] ^ HIDWORD(v243) ^ 0xFEA770DA ^ ((v256 ^ v72) >> 24) ^ ((((unsigned __int16)(v256 ^ v72) >> 8) ^ 0xF5) - ((2 * (((v256 ^ v72) >> 8) ^ 0x43CF5)) & 0x18E) - 1334109753) ^ (v79 - ((2 * v79) & 0x59DE9088) - 1393604540);
  v81 = v80 ^ 0x812F44E5;
  HIDWORD(v241) = v80 ^ v44;
  v253 = v39;
  v82 = v80 ^ v44 ^ 0xD8100789 ^ v256 ^ v72;
  v254 = v80 ^ v44 ^ 0xD8100789;
  v83 = *(_DWORD *)&v67[4
                      * ((v62[4 * (((unsigned __int16)(v256 ^ v72) >> 8) ^ 0x17)] ^ v66[4 * (((v256 ^ v72) >> 24) ^ 0xDD)] ^ BYTE4(v243) ^ 0xDA ^ ((v256 ^ v72) >> 24) ^ ((((unsigned __int16)(v256 ^ v72) >> 8) ^ 0xF5) - ((2 * (((unsigned __int16)(v256 ^ v72) >> 8) ^ 0xF5)) & 0x8E) - 57) ^ (v79 - ((2 * v79) & 0x88) + 68) ^ v44) ^ 0x89 ^ (((v243 ^ 0xBA) - (v77 & 0xB0) + 88) ^ v72) ^ 0xC4)];
  v84 = *(_DWORD *)&v62[4 * (BYTE1(v82) ^ 0x10)] ^ *(_DWORD *)&v66[4 * (HIBYTE(v82) ^ 0xD8)] ^ ((BYTE1(v82) ^ 0xF2)
                                                                                              - ((2
                                                                                                * ((v82 >> 8) ^ 0x127F2)) & 0x18E)
                                                                                              - 1334109753) ^ (2040089223 * v83 - ((1932694798 * v83 + 199443668) & 0x59DE9088) + 853600942);
  LODWORD(v241) = HIDWORD(v241) ^ 0xD8100789 ^ v256 ^ v72;
  v85 = (v84 - ((2 * v84) & 0x6D1060F6) - 1232588677) ^ *(_DWORD *)&v63[4 * (BYTE2(v82) ^ 0x89)];
  LODWORD(v242) = v81;
  LODWORD(v240) = v81 ^ ((v243 ^ 0xF20A80BA) - (v77 & 0x25E89C2) - 2127608607);
  HIDWORD(v240) = HIBYTE(v82) ^ v81 ^ (v85 - ((2 * v85) & 0x25E89C2) - 2127608607);
  HIDWORD(v239) = HIDWORD(v240) ^ 0xD5DA9EB6 ^ v240;
  v86 = 2 * (HIDWORD(v239) ^ 0x888E1055);
  v255 = (HIDWORD(v239) ^ 0x888E1055) - (v86 & 0x683CF69A) + 874412877;
  HIDWORD(v242) = v256 ^ v72;
  v87 = v255 ^ v256 ^ v72;
  LODWORD(v52) = *(_DWORD *)&v67[4 * ((v255 ^ ((v243 ^ 0xBA) - (v77 & 0xB0) + 88) ^ v72) ^ 0x89)];
  LODWORD(v52) = (2040089223 * (_DWORD)v52 - ((1932694798 * (_DWORD)v52 + 199443668) & 0x59DE9088) + 853600942) ^ *(_DWORD *)&v66[4 * (HIBYTE(v87) ^ 0x12)];
  v88 = *(_DWORD *)&v63[4 * (BYTE2(v87) ^ 0xFE)] ^ 0x908512AB ^ *(_DWORD *)&v62[4 * (BYTE1(v87) ^ 0x9D)] ^ HIDWORD(v240) ^ 0xD5DA9EB6 ^ HIBYTE(v87) ^ ((BYTE1(v87) ^ 0x7F) - ((2 * ((v87 >> 8) ^ 0xCB507F)) & 0x18E) - 1334109753) ^ ((_DWORD)v52 - ((2 * (_DWORD)v52) & 0x6D1060F6) - 1232588677);
  v89 = v88 ^ HIDWORD(v241) ^ 0xD8100789;
  LODWORD(v239) = v87;
  v90 = ((v87 ^ 0x374E7D32) + (v87 ^ 0xC5127562 ^ v89) + 1) ^ ((v89 ^ 0xF25C0850) + 1);
  v91 = ((v90 - ((2 * v90) & 0xE4AE434A) - 229170779) ^ v89 ^ 0xFFF4D60A) + (v87 ^ 0x374E7D32);
  v92 = v91 - ((2 * v91) & 0x400BB852) - 1610228695;
  v93 = *(_DWORD *)&v67[4 * ((v91 - ((2 * v91) & 0x52) + 41) ^ 0xEC)];
  v94 = (2040089223 * v93 - ((1932694798 * v93 + 199443668) & 0x6D1060F6) + 1014616805) ^ *(_DWORD *)&v63[4 * (BYTE2(v92) ^ 0xAB)];
  v95 = *(_DWORD *)&v66[4 * (HIBYTE(v92) ^ 0x79)] ^ *(_DWORD *)&v62[4 * (BYTE1(v92) ^ 0x3E)] ^ ((HIBYTE(v92) ^ 0xA0)
                                                                                              - ((v92 >> 23) & 0x88888888)
                                                                                              - 1393604540) ^ (v94 - ((2 * v94) & 0x60F6338E) - 1334109753);
  HIDWORD(v236) = v88 ^ ((HIDWORD(v239) ^ 0x888E1055) - 1870327200 + (~v86 | 0xDEF5DB3F) + 1);
  LODWORD(v237) = BYTE1(v92) ^ v88 ^ (v95 - ((2 * v95) & 0x210A24C0) - 1870327200);
  LODWORD(v236) = v237 ^ 0xC7059F8F ^ HIDWORD(v236);
  v96 = 2 * (v236 ^ 0x58548EE2);
  HIDWORD(v237) = v92;
  HIDWORD(v235) = ((v236 ^ 0x58548EE2) - (v96 & 0xE4AE434A) - 229170779) ^ v89 ^ 0xFFF4D60A;
  v97 = HIDWORD(v235) ^ v92;
  LODWORD(v52) = *(_DWORD *)&v67[4 * (v97 ^ 0x5F)];
  v98 = (2040089223 * (_DWORD)v52 - ((1932694798 * (_DWORD)v52 + 199443668) & 0x59DE9088) + 853600942) ^ *(_DWORD *)&v66[4 * (HIBYTE(v97) ^ 0x3B)] ^ v237 ^ 0xC7059F8F ^ HIBYTE(v97);
  LODWORD(v52) = ((BYTE1(v97) ^ 0xB0) - ((2 * (BYTE1(v97) ^ 0xB0)) & 0xFFFFFF8F) - 1334109753) ^ *(_DWORD *)&v62[4 * (BYTE1(v97) ^ 0x52)];
  v99 = (v98 ^ 0x6423E0C9 ^ -(v98 ^ 0x6423E0C9) ^ ((v52 ^ 0x62D01E09)
                                                 + (((v98 ^ 0xE2) - ((2 * (v98 ^ 0xE2)) & 0xCCCCB562) + 1717983921) ^ v52 ^ 0x9F6A5B6C)
                                                 + 1))
      + (v52 ^ 0x62D01E09);
  v100 = (v99 - ((2 * v99) & 0x6D1060F6) - 1232588677) ^ *(_DWORD *)&v63[4
                                                                       * (((v97 ^ 0x111E4104) >> 16) ^ 0xDC)];
  v238 = __PAIR64__(v88, v89);
  LODWORD(v52) = ((v100 ^ v89 ^ 0xA87676F1) - ((2 * (v100 ^ v89 ^ 0xA87676F1)) & 0x3489A37E) + 440717759) ^ v97;
  v101 = (((v100 ^ v89 ^ 0xF1) - ((2 * (v100 ^ v89 ^ 0xF1)) & 0x7E) - 65) ^ v97);
  v102 = (2040089223 * *(_DWORD *)&v67[4 * (v101 ^ 0x9E)]
        - ((1932694798 * *(_DWORD *)&v67[4 * (v101 ^ 0x9E)] + 199443668) & 0x59DE9088)
        + 853600942) ^ *(_DWORD *)&v66[4 * (((v52 ^ 0x87946F48) >> 24) ^ 0xD9)];
  LODWORD(v63) = (v102 - ((2 * v102) & 0x6D1060F6) - 1232588677) ^ *(_DWORD *)&v63[4
                                                                                 * (((v52 ^ 0x87946F48) >> 16) ^ 0xC)] ^ ((v52 ^ 0x87946F48) >> 24);
  *(_QWORD *)((char *)&v235 + 4) = __PAIR64__(v97, v100);
  LODWORD(v234) = v100 ^ 0xD58CB7C3 ^ ((BYTE1(v52) ^ 0x63)
                                     - 2
                                     * (((v52 >> 8) ^ 0x873663) & 0xDF ^ (v52 >> 8) & 0x18)
                                     - 1334109753) ^ *(_DWORD *)&v62[4 * (BYTE1(v52) ^ 0x81)] ^ ((_DWORD)v63
                                                                                               - ((2 * (_DWORD)v63) & 0xE0B26D3A)
                                                                                               + 1884894877);
  HIDWORD(v234) = ((v236 ^ 0x58548EE2) - (v96 & 0xE0B26D3A) + 1884894877) ^ 0x6A00E380 ^ v100 ^ 0xD58CB7C3;
  HIDWORD(v233) = v100 ^ v89 ^ 0xDF1A8511;
  HIDWORD(v232) = v234 ^ HIDWORD(v234);
  LODWORD(v232) = v234 ^ HIDWORD(v234) ^ HIDWORD(v233);
  v103 = *(unsigned __int8 **)(v42 - 256);
  v104 = (char *)*(&off_24E21C7C0 + v253 - 1610) - 8;
  v105 = (uint64_t)*(&off_24E21C7C0 + v253 - 1362);
  v106 = (uint64_t)*(&off_24E21C7C0 + v253 - 1530);
  v107 = (char *)*(&off_24E21C7C0 + v253 - 1532) - 12;
  LODWORD(v233) = v72 ^ 0x3D705651;
  v230 = v105;
  v228 = v107;
  v229 = v106;
  v108 = (v103[11] - ((2 * v103[11]) & 0x18) + 12) ^ v104[v103[11] ^ 0x7BLL] | ((v107[v103[10] ^ 0xE0] ^ 0x38) << 8) | ((*(unsigned __int8 *)(v105 + (v103[9] ^ 0xBBLL)) ^ 0xCD) << 16) | (((*(unsigned __int8 *)(v106 + (v103[8] ^ 0x31)) + 97) ^ 0xA5) << 24);
  v231 = v104;
  v109 = ((v103[7] - ((2 * v103[7]) & 0x18) + 12) ^ v104[v103[7] ^ 0x37] | ((*(unsigned __int8 *)(v105 + (v103[(v72 ^ 0x3D705651) % 5 + 5 - (v72 ^ 0x3D705651) % 5] ^ 0x78)) ^ 0xD) << 16) | ((v107[v103[6] ^ 0x3ALL] ^ 0x83) << 8) | (((*(unsigned __int8 *)(v106 + (v103[4] ^ 0x59)) + 97) ^ 0x53) << 24)) ^ 0x8FC9ED59;
  v110 = (v104[v103[15] ^ 0x42] ^ (v103[15] - ((2 * v103[15]) & 0x18) + 12) ^ 0xE2 | ((*(unsigned __int8 *)(v105 + (v103[13] ^ 0x6BLL)) ^ 0x57) << 16) | (((*(unsigned __int8 *)(v106 + (v103[12] ^ 0x14)) + 97) ^ 0xB1) << 24) | ((v107[v103[14] ^ 0xF6] ^ 0x4A) << 8)) ^ 0x933C9ED9;
  LODWORD(v106) = (v104[v103[3] ^ 0x6BLL] ^ (v103[3] - ((2 * v103[3]) & 0x18) + 12) ^ 0x65 | (((*(unsigned __int8 *)(v106 + (*v103 ^ 0x30)) + 97) ^ 0xF6) << 24) | ((*(unsigned __int8 *)(v105 + (v103[1] ^ 0x3CLL)) ^ 0x99) << 16) | ((v107[v103[2] ^ 0x44] ^ 0x9C) << 8)) ^ 0x841C80E;
  v111 = v108 ^ 0x849B1ECC;
  HIDWORD(v227) = *(_DWORD *)(v42 - 244) + 1879054913;
  LODWORD(v227) = v255 ^ v254;
  HIDWORD(v226) = (v253 + 454) ^ 0x86C;
  LODWORD(v226) = v256 ^ v44 ^ 0x62F40C9;
  HIDWORD(v225) = (v253 + 454) ^ 0xB51;
  LODWORD(v235) = v52 ^ 0xBC754F99;
  HIDWORD(v224) = ((v232 ^ 0x29267F7C) - ((2 * (v232 ^ 0x29267F7C)) & 0x76865984) + 994258114) ^ v52 ^ 0xBC754F99;
  LODWORD(v225) = (v253 + 454) ^ 0x834;
  LODWORD(v224) = (v253 + 454) ^ 0x844;
  *(_DWORD *)(v42 - 244) = v253 + 454;
  HIDWORD(a6) = (v253 + 454) ^ 0x95F;
  LODWORD(v61) = *(_DWORD *)(v42 - 244);
  LODWORD(v63) = v61;
  v252 = (v61 + 1055);
  v112 = ((_DWORD)v61 - 1118732131) ^ 0xBD5189F9;
  *(_QWORD *)(v42 - 256) = 13;
  LODWORD(v103) = v231[a1[15] ^ 0xC1] ^ (a1[15] - ((2 * a1[15]) & 0x18) + 12) ^ 0x18;
  LODWORD(v61) = (((*(unsigned __int8 *)(v229 + (*a1 ^ 0xA0)) + 97) ^ 0x34) << 24) | ((*(unsigned __int8 *)(v105 + (a1[1] ^ 0xFELL)) ^ 0x54) << 16);
  LODWORD(v67) = v107[a1[2] ^ 0xF1] ^ 6;
  v113 = v231[a1[3] ^ 0xE5] ^ (a1[3] + (~(2 * a1[3]) | 0xE7) + 13) ^ 0xA6;
  v114 = v231[a1[11] ^ 0xCDLL] ^ (a1[11] - ((2 * a1[11]) & 0x18) + 12) ^ 0x85;
  v115 = v231[a1[7] ^ 0x88] ^ (a1[7] - ((2 * a1[7]) & 0x18) + 12) ^ 0x93;
  LODWORD(v105) = (((*(unsigned __int8 *)(v229 + (a1[12] ^ 0xCLL)) + 97) ^ 0xF4) << 24) | ((v107[a1[14] ^ 0x30] ^ 0xA1) << 8) | v103 | ((*(unsigned __int8 *)(v105 + (a1[13] ^ 0x6CLL)) ^ 0x83) << 16);
  v116 = ((v107[a1[v112] ^ 0x95] ^ 0xA8) << 8) | (((*(unsigned __int8 *)(v229 + (a1[4] ^ 0x98)) + 97) ^ 0x82) << 24) | ((*(unsigned __int8 *)(v230 + (a1[5] ^ 0xE2)) ^ 0xE4) << 16);
  LODWORD(v61) = (v113 | v61 | ((_DWORD)v67 << 8))
               - 2 * ((v113 | v61 | ((_DWORD)v67 << 8)) & 0x62AB22FE ^ v113 & 0x1A)
               - 492100892;
  v117 = ((*(unsigned __int8 *)(v230 + (a1[9] ^ 0x64)) ^ 0xBD) << 16) | ((v107[a1[10] ^ 0x3BLL] ^ 0x2E) << 8) | v114 | (((*(unsigned __int8 *)(v229 + (a1[8] ^ 0xF3)) + 97) ^ 0x49) << 24);
  LODWORD(v105) = (v105 + 2044097587 - 2 * (v105 & 0x79D67437 ^ v103 & 4)) ^ v110;
  v118 = v111 ^ v250 ^ (v117 + 1852961830 - 2 * (v117 & 0x6E71F436 ^ v114 & 0x10));
  LODWORD(v103) = v109 ^ HIDWORD(v250) ^ ((v116 | v115) + 1696794547 - 2 * ((v116 | v115) & 0x652307BB ^ v115 & 8));
  LODWORD(v62) = (v105 - ((2 * v105) & 0x96CCAC6E) + 1264997943) ^ v249;
  v119 = (char *)*(&off_24E21C7C0 + (int)v63 - 2176) - 4;
  LODWORD(v52) = *(_DWORD *)&v119[4 * (((v105 - ((2 * v105) & 0x6E) + 55) ^ v249) ^ 0xB4)];
  v120 = (char *)*(&off_24E21C7C0 + SHIDWORD(v226)) - 8;
  v121 = (char *)*(&off_24E21C7C0 + (int)v63 - 2396) - 8;
  HIDWORD(v45) = v52 ^ 0xAAAAAAAA;
  LODWORD(v45) = v52 ^ 0xBF4554A0;
  v122 = *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0xD6)];
  LODWORD(v61) = v106 ^ HIDWORD(v249) ^ v61;
  v123 = (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0xC4)] + 215326433) ^ (v45 >> 5);
  v124 = (uint64_t)*(&off_24E21C7C0 + (int)v63 - 1927);
  v125 = *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0x93)];
  LODWORD(v52) = (134253175 * v122 - 826837695 - ((268506350 * v122 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v61) ^ 0xD1u));
  v126 = (v123 - 1042164128 - ((2 * v123) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v118) ^ 0x4Bu));
  v127 = (134253175 * v125 - 826837695 - ((268506350 * v125 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v103) ^ 0x85u));
  LODWORD(v105) = *(_DWORD *)&v120[4 * ((v103 >> 24) ^ 0xB1)] ^ 0x8BCDF1D2 ^ (134253175
                                                                                          * *(_DWORD *)&v121[4 * (BYTE2(v118) ^ 0x1E)]
                                                                                          + 215326433);
  v128 = *(_DWORD *)&v119[4 * (v118 ^ 0xA6)];
  HIDWORD(v45) = v128 ^ 0xAAAAAAAA;
  LODWORD(v45) = v128 ^ 0xBF4554A0;
  v129 = (v127 - 1125821501 - ((2 * v127) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0x41)] ^ (v45 >> 5);
  v130 = *(_DWORD *)&v120[4 * (BYTE3(v61) ^ 0xAB)] ^ (v126 - 1125821501 - ((2 * v126) & 0x79CAA786));
  LODWORD(v61) = *(_DWORD *)&v119[4 * (v61 ^ 0xE0)];
  HIDWORD(v45) = v61 ^ 0xAAAAAAAA;
  LODWORD(v45) = v61 ^ 0xBF4554A0;
  LODWORD(v61) = *(_DWORD *)(v124 + 4 * (BYTE1(v62) ^ 0x6Bu)) ^ (v45 >> 5);
  LODWORD(v62) = *(_DWORD *)&v119[4 * (v103 ^ 0x37)];
  HIDWORD(v45) = v62 ^ 0xAAAAAAAA;
  LODWORD(v45) = v62 ^ 0xBF4554A0;
  LODWORD(v61) = (v105 - 1042164128 - ((2 * v105) & 0x83C3ACC0)) ^ v61;
  LODWORD(v105) = ((_DWORD)v52 - 1125821501 - ((2 * (_DWORD)v52) & 0x79CAA786)) ^ *(_DWORD *)&v120[4
                                                                                                 * (HIBYTE(v118) ^ 0x75)] ^ (v45 >> 5);
  LODWORD(v103) = (v130 - ((2 * v130) & 0x5F744126) - 1346756461) ^ HIDWORD(v248);
  v131 = (v61 - 2048624382 - ((2 * v61) & 0xBC8F204)) ^ v248;
  v132 = (v129 - ((2 * v129) & 0x9A6F617A) + 1295495357) ^ v247;
  LODWORD(v61) = *(_DWORD *)&v119[4 * (((v129 - ((2 * v129) & 0x7A) - 67) ^ v247) ^ 0xDB)];
  HIDWORD(v45) = v61 ^ 0xAAAAAAAA;
  LODWORD(v45) = v61 ^ 0xBF4554A0;
  LODWORD(v61) = (v105 - ((2 * v105) & 0x5A4F75BA) - 1389905187) ^ HIDWORD(v247);
  LODWORD(v62) = (v45 >> 5) - 1042164128 - ((2 * (v45 >> 5)) & 0x83C3ACC0);
  v133 = *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0x35)];
  LODWORD(v52) = *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0x92)];
  LODWORD(v105) = (134253175 * (_DWORD)v52 - 826837695 - ((268506350 * (_DWORD)v52 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v131) ^ 0xC7u));
  LODWORD(v52) = *(_DWORD *)&v119[4 * (v103 ^ 0xF0)];
  HIDWORD(v45) = v52 ^ 0xAAAAAAAA;
  LODWORD(v45) = v52 ^ 0xBF4554A0;
  LODWORD(v52) = *(_DWORD *)(v124
                           + 4
                           * (((unsigned __int16)((v129 - ((2 * v129) & 0x617A) - 20291) ^ v247) >> 8) ^ 9u)) ^ (v45 >> 5);
  v134 = *(_DWORD *)&v119[4 * (v131 ^ 0x11)];
  HIDWORD(v45) = v134 ^ 0xAAAAAAAA;
  LODWORD(v45) = v134 ^ 0xBF4554A0;
  v135 = (134253175 * v133 - 826837695 - ((268506350 * v133 + 430652866) & 0x83C3ACC0)) ^ v52;
  LODWORD(v52) = ((v45 >> 5) - 1042164128 - ((2 * (v45 >> 5)) & 0x83C3ACC0)) ^ *(_DWORD *)(v124
                                                                                         + 4 * (BYTE1(v103) ^ 0xC5u));
  LODWORD(v62) = v62 ^ *(_DWORD *)(v124 + 4 * (BYTE1(v61) ^ 0xF0u)) ^ (134253175
                                                                                     * *(_DWORD *)&v121[4 * (BYTE2(v131) ^ 0xCA)]
                                                                                     + 215326433);
  v136 = *(_DWORD *)&v119[4 * (v61 ^ 0x38)];
  HIDWORD(v45) = v136 ^ 0xAAAAAAAA;
  LODWORD(v45) = v136 ^ 0xBF4554A0;
  HIDWORD(a38) = -1125821500;
  LODWORD(v61) = ((_DWORD)v52 - 1125821501 - ((2 * (_DWORD)v52) & 0x79CAA786)) ^ *(_DWORD *)&v120[4
                                                                                                * (BYTE3(v61) ^ 0x5F)] ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v132) ^ 0xA6)] + 215326433);
  LODWORD(v61) = (v61 - ((2 * v61) & 0xF0E21740) + 2020674464) ^ HIDWORD(v245);
  LODWORD(v62) = *(_DWORD *)&v120[4 * ((v103 >> 24) ^ 0x72)] ^ HIDWORD(v246) ^ ((_DWORD)v62
                                                                                            - 1125821501
                                                                                            - ((2 * (_DWORD)v62) & 0x79CAA786));
  LODWORD(v103) = (v135 - 1125821500 + ~((2 * v135) & 0x79CAA786)) ^ v246 ^ *(_DWORD *)&v120[4 * (HIBYTE(v131) ^ 0xB6)];
  v137 = *(_DWORD *)&v120[4 * (HIBYTE(v132) ^ 0x2A)] ^ v72 ^ 0x3D705651 ^ (v45 >> 5) ^ (v105
                                                                                      - 1125821501
                                                                                      - ((2 * v105) & 0x79CAA786));
  LODWORD(v105) = *(_DWORD *)&v119[4 * (v62 ^ 0xF7)];
  v138 = *(_DWORD *)&v121[4 * (BYTE2(v137) ^ 0x44)];
  HIDWORD(v45) = v105 ^ 0xAAAAAAAA;
  LODWORD(v45) = v105 ^ 0xBF4554A0;
  v139 = (134253175 * v138 - 910495068 - ((268506350 * v138 + 430652866) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (BYTE3(v61) ^ 0x6B)];
  LODWORD(v105) = v139 - 1042164128 - ((2 * v139) & 0x83C3ACC0);
  v140 = *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0xE8)];
  v141 = *(_DWORD *)&v120[4 * ((v103 >> 24) ^ 0x94)] ^ ((v45 >> 5)
                                                                    - 1125821501
                                                                    - ((2 * (v45 >> 5)) & 0x79CAA786));
  v142 = *(_DWORD *)&v119[4 * (v61 ^ 0xCE)];
  HIDWORD(v45) = v142 ^ 0xAAAAAAAA;
  LODWORD(v45) = v142 ^ 0xBF4554A0;
  v143 = (v45 >> 5) ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0xC6)] + 215326433);
  v144 = (v143 - 1042164128 - ((2 * v143) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v103) ^ 0xE5u));
  v145 = v141 ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0xEB)] + 215326433);
  LODWORD(v67) = *(_DWORD *)&v119[4 * (v137 ^ 0xD3)];
  HIDWORD(v45) = v67 ^ 0xAAAAAAAA;
  LODWORD(v45) = v67 ^ 0xBF4554A0;
  LODWORD(v61) = (134253175 * v140 - 826837695 - ((268506350 * v140 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v61) ^ 0x34u)) ^ (v45 >> 5);
  LODWORD(v61) = (v61 - 1125821501 - ((2 * v61) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0x3D)];
  LODWORD(v67) = *(_DWORD *)(v124 + 4 * (BYTE1(v62) ^ 0x4Bu));
  v146 = (v144 - 1125821501 - ((2 * v144) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (HIBYTE(v137) ^ 0xED)];
  LODWORD(v103) = *(_DWORD *)&v119[4 * (v103 ^ 0xBA)];
  LODWORD(v62) = (v61 - 710009938 - ((2 * v61) & 0xAB5C375C)) ^ v245;
  HIDWORD(v45) = v103 ^ 0xAAAAAAAA;
  LODWORD(v45) = v103 ^ 0xBF4554A0;
  LODWORD(v61) = (v105 ^ v67 ^ (v45 >> 5))
               - 1965244840
               - ((2 * (v105 ^ v67 ^ (v45 >> 5))) & 0x15B97CB0);
  LODWORD(v103) = *(_DWORD *)(v124 + 4 * (BYTE1(v137) ^ 0xE5u)) ^ HIDWORD(v244) ^ (v145
                                                                                   - 1042164128
                                                                                   - ((2 * v145) & 0x83C3ACC0));
  v147 = (v146 - 1195308833 + (~(2 * v146) | 0x8E7DEE43)) ^ v244;
  v148 = *(_DWORD *)&v119[4 * (((v146 - 33 + (~(2 * v146) | 0x43)) ^ v244) ^ 0x1E)];
  HIDWORD(v45) = v148 ^ 0xAAAAAAAA;
  LODWORD(v45) = v148 ^ 0xBF4554A0;
  v149 = v45 >> 5;
  LODWORD(v105) = *(_DWORD *)&v119[4 * (v103 ^ 0x68)];
  HIDWORD(v45) = v105 ^ 0xAAAAAAAA;
  LODWORD(v45) = v105 ^ 0xBF4554A0;
  LODWORD(v105) = ((v45 >> 5) - 1042164128 - ((2 * (v45 >> 5)) & 0x83C3ACC0)) ^ *(_DWORD *)(v124
                                                                                          + 4 * (BYTE1(v62) ^ 0x3Bu));
  v150 = (v149 - 1125821501 - ((2 * v149) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0x24)] ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0x6B)] + 215326433);
  v151 = *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0x61)];
  LODWORD(v61) = v61 ^ v44 ^ 0x62F40C9;
  v152 = (134253175 * v151 - 826837695 - ((268506350 * v151 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * ((unsigned __int16)((unsigned __int16)v103 ^ 0xBB68) >> 8));
  v153 = *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0x3E)];
  LODWORD(v62) = *(_DWORD *)&v119[4 * (v62 ^ 0xD2)];
  HIDWORD(v45) = v62 ^ 0xAAAAAAAA;
  LODWORD(v45) = v62 ^ 0xBF4554A0;
  v154 = *(_DWORD *)&v119[4 * (v61 ^ 0x90)];
  v155 = *(_DWORD *)&v120[4 * (HIBYTE(v147) ^ 0x88)] ^ (v152 - 1125821501 - ((2 * v152) & 0x79CAA786)) ^ (v154 >> 5) ^ (v154 << 27);
  LODWORD(v62) = (134253175 * v153 - 826837695 - ((268506350 * v153 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v147) ^ 0x85u)) ^ (v45 >> 5);
  v156 = *(_DWORD *)&v120[4 * (BYTE3(v61) ^ 0xCE)];
  LODWORD(v67) = 134253175 * *(_DWORD *)&v121[4 * (BYTE2(v147) ^ 0x28)] + 215326433;
  v157 = *(_DWORD *)&v120[4 * ((v103 >> 24) ^ 0x31)];
  LODWORD(v103) = (v150 - 1042164128 - ((2 * v150) & 0x83C3ACC0)) ^ HIDWORD(v243) ^ *(_DWORD *)(v124
                                                                                              + 4
                                                                                              * (BYTE1(v61) ^ 0xB5u));
  LODWORD(v61) = (_DWORD)v62 - 1125821501 - ((2 * (_DWORD)v62) & 0x79CAA786);
  LODWORD(v62) = ((v155 ^ 0x55FA2AA5) - ((2 * (v155 ^ 0x55FA2AA5)) & 0x94C8BD20) + 1248091792) ^ v256 ^ v72;
  v158 = v157 ^ v243 ^ v61;
  v159 = v226 ^ v156 ^ (v105 - 1125821501 - ((2 * v105) & 0x79CAA786)) ^ v67;
  v160 = *(_DWORD *)&v119[4 * (v158 ^ 0xAE)];
  HIDWORD(v45) = v160 ^ 0xAAAAAAAA;
  LODWORD(v45) = v160 ^ 0xBF4554A0;
  v161 = (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0xFE)] + 215326433) ^ (v45 >> 5);
  LODWORD(v61) = (v161 - 1125821501 - ((2 * v161) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (HIBYTE(v159) ^ 0xBA)];
  v162 = *(_DWORD *)&v119[4
                        * ((v226 ^ v156 ^ (v105 - 61 - ((2 * v105) & 0x86)) ^ v67) ^ 0xE)];
  HIDWORD(v45) = v162 ^ 0xAAAAAAAA;
  LODWORD(v45) = v162 ^ 0xBF4554A0;
  v163 = ((v45 >> 5) - 1125821501 - ((2 * (v45 >> 5)) & 0x79CAA786)) ^ (134253175
                                                                      * *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0x35)]
                                                                      + 215326433) ^ *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0x64)];
  v164 = *(_DWORD *)&v119[4 * (v103 ^ 0x2A)];
  HIDWORD(v45) = v164 ^ 0xAAAAAAAA;
  LODWORD(v45) = v164 ^ 0xBF4554A0;
  v165 = v45 >> 5;
  v166 = (v163 - 1042164128 - ((2 * v163) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v158) ^ 0x44u));
  v167 = *(_DWORD *)&v119[4 * (v62 ^ 0xD4)];
  HIDWORD(v45) = v167 ^ 0xAAAAAAAA;
  LODWORD(v45) = v167 ^ 0xBF4554A0;
  LODWORD(v105) = *(_DWORD *)(v124 + 4 * (BYTE1(v159) ^ 0x44u)) ^ *(_DWORD *)&v120[4
                                                                                   * ((v103 >> 24) ^ 0x79)] ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v158) ^ 0x47)] + 215326433) ^ (v45 >> 5);
  v168 = *(_DWORD *)&v120[4 * (HIBYTE(v158) ^ 0x22)];
  v169 = *(_DWORD *)(v124 + 4 * (BYTE1(v103) ^ 0xB5u));
  v170 = (v166 - ((2 * v166) & 0x11F57694) + 150649674) ^ v241;
  LODWORD(v103) = ((v105 ^ 0x7D0485A3) - 2127608607 - 2 * ((v105 ^ 0x7D0485A3) & 0x12F44F9 ^ v105 & 0x18)) ^ v242;
  v171 = *(_DWORD *)(v124 + 4 * (BYTE1(v62) ^ 0xA2u)) ^ v240 ^ v168 ^ (134253175
                                                                       * *(_DWORD *)&v121[4 * (BYTE2(v159) ^ 0x4C)]
                                                                       + 215326433) ^ v165;
  LODWORD(v62) = v169 ^ HIDWORD(v241) ^ (v61 - 1042164128 - ((2 * v61) & 0x83C3ACC0));
  LODWORD(v61) = *(_DWORD *)&v119[4 * ((v169 ^ BYTE4(v241) ^ (v61 + 96 - ((2 * v61) & 0xC0))) ^ 0x9D)];
  HIDWORD(v45) = v61 ^ 0xAAAAAAAA;
  LODWORD(v45) = v61 ^ 0xBF4554A0;
  LODWORD(v61) = (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0xC6)] + 215326433) ^ (v45 >> 5);
  v172 = *(_DWORD *)&v119[4 * (v171 ^ 0x2F)];
  HIDWORD(v45) = v172 ^ 0xAAAAAAAA;
  LODWORD(v45) = v172 ^ 0xBF4554A0;
  v173 = ((v45 >> 5) - 1042164128 - ((2 * (v45 >> 5)) & 0x83C3ACC0)) ^ *(_DWORD *)(v124
                                                                                 + 4
                                                                                 * (((unsigned __int16)(((v105 ^ 0x85A3) + 17633 - 2 * ((v105 ^ 0x85A3) & 0x44F9 ^ v105 & 0x18)) ^ v242) >> 8) ^ 0x4Bu));
  LODWORD(v105) = *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0x34)];
  v174 = *(_DWORD *)&v119[4 * (v170 ^ 0x90)];
  HIDWORD(v45) = v174 ^ 0xAAAAAAAA;
  LODWORD(v45) = v174 ^ 0xBF4554A0;
  v175 = (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v171) ^ 0xB0)] + 215326433) ^ *(_DWORD *)(v124
                                                                                          + 4 * (BYTE1(v62) ^ 0x35u)) ^ ((v45 >> 5) - 1042164128 - ((2 * (v45 >> 5)) & 0x83C3ACC0));
  v176 = *(_DWORD *)&v119[4 * (v103 ^ 0x12)];
  HIDWORD(v45) = v176 ^ 0xAAAAAAAA;
  LODWORD(v45) = v176 ^ 0xBF4554A0;
  LODWORD(v105) = (134253175 * v105 - 826837695 - ((268506350 * v105 + 430652866) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v170) ^ 0x40u)) ^ (v45 >> 5);
  LODWORD(v61) = *(_DWORD *)(v124 + 4 * (BYTE1(v171) ^ 0x3Fu)) ^ (v61 - 1042164128 - ((2 * v61) & 0x83C3ACC0));
  LODWORD(v61) = (v61 - 1125821501 - ((2 * v61) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (HIBYTE(v170) ^ 0x23)];
  v177 = HIBYTE(v171) ^ 0x96;
  v178 = *(_DWORD *)&v120[4 * ((v103 >> 24) ^ 0x9F)];
  LODWORD(v61) = (v61 - ((2 * v61) & 0x549BBED4) - 1437737110) ^ v239;
  LODWORD(v103) = v255 ^ v254 ^ *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0x79)] ^ (134253175
                                                                                          * *(_DWORD *)&v121[4 * (BYTE2(v170) ^ 0x7B)]
                                                                                          + 215326433) ^ (v173 - 1125821501 - ((2 * v173) & 0x79CAA786));
  LODWORD(v62) = v178 ^ HIDWORD(v240) ^ (v175 - 1125821501 - ((2 * v175) & 0x79CAA786));
  v179 = *(_DWORD *)&v120[4 * v177] ^ HIDWORD(v239) ^ (v105 - 1125821501 - ((2 * v105) & 0x79CAA786));
  v180 = *(_DWORD *)&v119[4 * (v61 ^ 0xFD)];
  HIDWORD(v45) = v180 ^ 0xAAAAAAAA;
  LODWORD(v45) = v180 ^ 0xBF4554A0;
  v181 = (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v179) ^ 0xC3)] + 215326433) ^ (v45 >> 5);
  v182 = *(_DWORD *)&v119[4
                        * ((v120[4 * v177] ^ BYTE4(v239) ^ (v105 - 61 - ((2 * v105) & 0x86))) ^ 0x41)];
  HIDWORD(v45) = v182 ^ 0xAAAAAAAA;
  LODWORD(v45) = v182 ^ 0xBF4554A0;
  LODWORD(v105) = (v181 - 1125821500 + ~((2 * v181) & 0x79CAA786)) ^ *(_DWORD *)&v120[4
                                                                                    * ((v62 >> 24) ^ 0x4D)];
  LODWORD(v52) = ((v45 >> 5) - 1125821501 - ((2 * (v45 >> 5)) & 0x79CAA786)) ^ *(_DWORD *)&v120[4
                                                                                              * ((v103 >> 24) ^ 0x6E)];
  LODWORD(v105) = (v105 - 1042164128 - ((2 * v105) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v103) ^ 0xB8u));
  v183 = *(_DWORD *)&v119[4 * (v62 ^ 0xF1)];
  HIDWORD(v45) = v183 ^ 0xAAAAAAAA;
  LODWORD(v45) = v183 ^ 0xBF4554A0;
  LODWORD(v67) = *(_DWORD *)&v120[4 * (BYTE3(v61) ^ 0x4B)];
  v184 = ((v45 >> 5) - 1125821501 - ((2 * (v45 >> 5)) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (HIBYTE(v179) ^ 0xD7)];
  v185 = v52 ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0xBB)] + 215326433);
  LODWORD(v61) = *(_DWORD *)(v124 + 4 * (BYTE1(v61) ^ 0xA9u)) ^ HIDWORD(v236) ^ (134253175
                                                                                 * *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0x48)]
                                                                                 + 215326433);
  LODWORD(v103) = *(_DWORD *)&v119[4 * (v103 ^ 0xC7)];
  LODWORD(v52) = v61 ^ (v184 - 1042164128 - ((2 * v184) & 0x83C3ACC0));
  HIDWORD(v45) = v103 ^ 0xAAAAAAAA;
  LODWORD(v45) = v103 ^ 0xBF4554A0;
  LODWORD(v61) = v67 ^ *(_DWORD *)(v124 + 4 * (BYTE1(v179) ^ 0xD4u)) ^ 0x7D0485A3 ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0x92)] + 215326433) ^ (v45 >> 5);
  v186 = (v185 - 1042164128 - ((2 * v185) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v62) ^ 0xC5u));
  LODWORD(v103) = (v61 - 1610228695 - ((2 * v61) & 0x400BB852)) ^ HIDWORD(v237);
  LODWORD(v62) = (v105 - 1870327200 - ((2 * v105) & 0x210A24C0)) ^ HIDWORD(v238);
  LODWORD(v61) = (v186 - ((2 * v186) & 0x4936D25A) - 1533318867) ^ v238;
  LODWORD(v105) = *(_DWORD *)&v119[4 * (((v186 - ((2 * v186) & 0x5A) + 45) ^ v238) ^ 0x76)];
  HIDWORD(v45) = v105 ^ 0xAAAAAAAA;
  LODWORD(v45) = v105 ^ 0xBF4554A0;
  v187 = (v45 >> 5) ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0x1C)] + 215326433);
  LODWORD(v105) = *(_DWORD *)&v119[4 * (v62 ^ 0xA5)];
  HIDWORD(v45) = v105 ^ 0xAAAAAAAA;
  LODWORD(v45) = v105 ^ 0xBF4554A0;
  LODWORD(v105) = v45 >> 5;
  v188 = *(_DWORD *)&v119[4 * (v103 ^ 0xDB)];
  HIDWORD(v45) = v188 ^ 0xAAAAAAAA;
  LODWORD(v45) = v188 ^ 0xBF4554A0;
  v189 = v45 >> 5;
  v190 = *(_DWORD *)&v119[4 * (v52 ^ 0x3B)];
  HIDWORD(v45) = v190 ^ 0xAAAAAAAA;
  LODWORD(v45) = v190 ^ 0xBF4554A0;
  v191 = (v45 >> 5) ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v103) ^ 0xA6)] + 215326433);
  v192 = *(_DWORD *)(v124 + 4 * (BYTE1(v52) ^ 0x24u)) ^ (v187 - 1042164128 - ((2 * v187) & 0x83C3ACC0));
  LODWORD(v105) = (v105 - 1125821501 - ((2 * v105) & 0x79CAA786)) ^ *(_DWORD *)&v120[4
                                                                                   * ((v52 >> 24) ^ 0x3B)] ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0x19)] + 215326433);
  v193 = (v191 - 1125821501 - ((2 * v191) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (BYTE3(v61) ^ 0xF1)];
  LODWORD(v67) = v193 - 1042164128 - ((2 * v193) & 0x83C3ACC0);
  v194 = (v192 - 1125821501 - ((2 * v192) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * ((v103 >> 24) ^ 0x2A)];
  LODWORD(v61) = *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0xC0)] ^ v237 ^ *(_DWORD *)(v124
                                                                                             + 4
                                                                                             * (BYTE1(v61) ^ 0xA9u)) ^ v189 ^ (134253175 * *(_DWORD *)&v121[4 * (BYTE2(v52) ^ 0x6E)] + 215326433);
  v195 = (v194 - ((2 * v194) & 0x950C47F8) + 1250305020) ^ DWORD2(v235);
  LODWORD(v62) = *(_DWORD *)(v124 + 4 * (BYTE1(v62) ^ 0xD5u)) ^ HIDWORD(v235) ^ v67;
  LODWORD(v52) = *(_DWORD *)(v124 + 4 * (BYTE1(v103) ^ 9u)) ^ v236 ^ (v105 - 1042164128 - ((2 * v105) & 0x83C3ACC0));
  v196 = *(_DWORD *)&v121[4 * (BYTE2(v61) ^ 0x4C)];
  LODWORD(v105) = *(_DWORD *)&v121[4 * (BYTE2(v62) ^ 0x56)];
  v197 = *(_DWORD *)&v121[4 * (BYTE2(v52) ^ 0x1C)];
  LODWORD(v67) = *(_DWORD *)&v121[4 * (BYTE2(v195) ^ 0x4C)];
  LODWORD(v105) = (134253175 * v105 - 910495068 - ((268506350 * v105 + 430652866) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * ((v52 >> 24) ^ 0x42)];
  v198 = *(_DWORD *)&v119[4 * (v195 ^ 0xBD)];
  HIDWORD(v45) = v198 ^ 0xAAAAAAAA;
  LODWORD(v45) = v198 ^ 0xBF4554A0;
  v199 = (134253175 * v197 - 910495068 - ((268506350 * v197 + 430652866) & 0x79CAA786)) ^ *(_DWORD *)&v120[4 * (BYTE3(v61) ^ 0x67)] ^ (v45 >> 5);
  LODWORD(v103) = *(_DWORD *)&v119[4 * (v61 ^ 0x38)];
  HIDWORD(v45) = v103 ^ 0xAAAAAAAA;
  LODWORD(v45) = v103 ^ 0xBF4554A0;
  LODWORD(v103) = v45 >> 5;
  v200 = *(_DWORD *)(v124 + 4 * (BYTE1(v195) ^ 0x9Au));
  v201 = *(_DWORD *)&v119[4 * (v62 ^ 0x39)];
  HIDWORD(v45) = v201 ^ 0xAAAAAAAA;
  LODWORD(v45) = v201 ^ 0xBF4554A0;
  v202 = (134253175 * v196 - 910495068 - ((268506350 * v196 + 430652866) & 0x79CAA786)) ^ (v45 >> 5) ^ *(_DWORD *)&v120[4 * (HIBYTE(v195) ^ 0x82)];
  v203 = (v202 - 1042164128 - ((2 * v202) & 0x83C3ACC0)) ^ *(_DWORD *)(v124 + 4 * (BYTE1(v52) ^ 0xD5u));
  LODWORD(v52) = *(_DWORD *)&v119[4 * (v52 ^ 0xA5)];
  HIDWORD(v45) = v52 ^ 0xAAAAAAAA;
  LODWORD(v45) = v52 ^ 0xBF4554A0;
  LODWORD(v61) = *(_DWORD *)(v124 + 4 * (BYTE1(v61) ^ 0xDEu)) ^ (v45 >> 5) ^ (134253175 * (_DWORD)v67
                                                                              - 826837695
                                                                              - ((268506350 * (_DWORD)v67 + 430652866) & 0x83C3ACC0));
  LODWORD(v52) = *(_DWORD *)(v124 + 4 * (BYTE1(v62) ^ 0x59u)) ^ DWORD1(v235) ^ (v199
                                                                                - 1042164128
                                                                                - ((2 * v199) & 0x83C3ACC0));
  LODWORD(v124) = *(_DWORD *)&v120[4 * ((v62 >> 24) ^ 0xE6)] ^ HIDWORD(v233) ^ (v61
                                                                                            - 1125821501
                                                                                            - ((2 * v61) & 0x79CAA786));
  LODWORD(v61) = v200 ^ HIDWORD(v234) ^ (v105 - 1042164128 - ((2 * v105) & 0x83C3ACC0)) ^ v103;
  v204 = (v61 ^ 0x472BD5B4 ^ -(v61 ^ 0x472BD5B4) ^ ((v61 ^ 0xF2FAEC9B) + 1244579537)) + 1244579536;
  LODWORD(v121) = (v203 + 994258114 - ((2 * v203) & 0x76865984)) ^ v235;
  LODWORD(v44) = *(_DWORD *)(v42 - 244);
  v205 = (uint64_t)*(&off_24E21C7C0 + (int)v44 - 2299);
  LODWORD(v103) = *(_DWORD *)(v205 + 4 * (BYTE2(v121) ^ 0xAFu));
  LODWORD(v119) = *(_DWORD *)(v205 + 4 * (BYTE2(v52) ^ 0xE3u));
  LODWORD(v120) = *(_DWORD *)(v205 + 4 * (BYTE2(v124) ^ 0x44u));
  v206 = (char *)*(&off_24E21C7C0 + (int)v225) - 8;
  v207 = *(_DWORD *)&v206[4 * (v121 ^ 0x5A)];
  v208 = v207 + 436508603 - ((2 * v207 + 1003469270) & 0x783975A0);
  v209 = (uint64_t)*(&off_24E21C7C0 + SHIDWORD(v225));
  v210 = v208 ^ *(_DWORD *)(v205 + 4 * (BYTE2(v204) ^ 0x44u));
  LODWORD(v205) = *(_DWORD *)&v206[4 * (v124 ^ 0x95)];
  v211 = (v210 + 1447897660 - ((2 * v210) & 0xAC9A5478)) ^ *(_DWORD *)(v209
                                                                     + 4 * ((v52 ^ 0xA1A71F55) >> 24));
  v212 = *(_DWORD *)&v206[4 * (((v61 ^ 0xB4 ^ -(v61 ^ 0xB4) ^ ((v61 ^ 0x9B) - 47)) - 48) ^ 0x22)];
  v213 = *(_DWORD *)&v206[4 * (v52 ^ 0x55)];
  LODWORD(v206) = *(_DWORD *)(v209 + 4 * (BYTE3(v124) ^ 0x8F));
  LODWORD(v62) = *(_DWORD *)(v209 + 4 * ((v121 >> 24) ^ 9));
  LODWORD(v61) = *(_DWORD *)(v209 + 4 * (HIBYTE(v204) ^ 0xDD));
  LODWORD(v209) = BYTE1(v204) ^ 0x7F;
  v214 = (char *)*(&off_24E21C7C0 + (int)v44 - 1931) - 8;
  v215 = *(_DWORD *)&v214[4 * v209];
  LODWORD(v107) = *(_DWORD *)&v214[4 * (BYTE1(v52) ^ 0x60)];
  LODWORD(v121) = *(_DWORD *)&v214[4 * (BYTE1(v121) ^ 0xDD)];
  LODWORD(v52) = *(_DWORD *)&v214[4 * (BYTE1(v124) ^ 0x10)] ^ v234 ^ (v211 - 1486024302 - ((2 * v211) & 0x4EDA2324));
  v216 = (char *)*(&off_24E21C7C0 + (int)v224) - 4;
  a1[1] = v216[BYTE2(v52) ^ 0xD4] ^ 0x6E;
  v217 = (char *)*(&off_24E21C7C0 + SHIDWORD(a6)) - 12;
  a1[2] = (-87 - 55 * v217[BYTE1(v52) ^ 0xF8]) ^ 0xDE;
  HIDWORD(v45) = v103 ^ 0xC7CEA40A;
  LODWORD(v45) = v103 ^ 0xC7CEA40A;
  LODWORD(v205) = (v205 + 436508603 - ((2 * v205 + 1003469270) & 0x783975A0)) ^ v119;
  LODWORD(v205) = (v205 - 1486024302 - ((2 * v205) & 0x4EDA2324)) ^ v215;
  LODWORD(v45) = __ROR4__((v45 >> 13) ^ __ROR4__(v206 ^ 0xBD21E7A6, 13) ^ 0x800D72AA, 19);
  LODWORD(v206) = v107 ^ v232 ^ (((v212 - 572007189) ^ v45)
                                             - 1486024302
                                             - ((2 * ((v212 - 572007189) ^ v45)) & 0x4EDA2324));
  v218 = HIDWORD(v224) ^ v62 ^ ((_DWORD)v205 + 1447897660 - ((2 * (_DWORD)v205) & 0xAC9A5478));
  a1[9] = v216[BYTE2(v206) ^ 0x19] ^ 0x5D;
  v219 = (uint64_t)*(&off_24E21C7C0 + (int)v44 - 1842);
  a1[15] = *(_BYTE *)(v219 + (v218 ^ 0x3FLL)) ^ 0xC6;
  a1[3] = *(_BYTE *)(v219 + (v52 ^ 0x2CLL)) ^ 0x32;
  v220 = (char *)*(&off_24E21C7C0 + (int)v44 - 1935) - 12;
  a1[8] = (v220[(v206 >> 24) ^ 0x1DLL] - 91) ^ 0x5F;
  LODWORD(v120) = (v213 + 436508603 - ((2 * v213 + 1003469270) & 0x783975A0)) ^ v120;
  v221 = (2 * (_DWORD)v120) & 0xAC9A5478;
  v222 = v121 ^ v234 ^ HIDWORD(v234) ^ ((((_DWORD)v120 + 1447897660 - (_DWORD)v221) ^ v61)
                                                                  - 1486024302
                                                                  - ((2
                                                                    * (((_DWORD)v120 + 1447897660 - (_DWORD)v221) ^ v61)) & 0x4EDA2324));
  *a1 = (v220[(v52 >> 24) ^ 0x67] - 91) ^ 0xAC;
  a1[7] = *(_BYTE *)(v219
                   + ((v121 ^ v234 ^ BYTE4(v234) ^ ((((_BYTE)v120
                                                                                      + 60
                                                                                      - ((2 * (_BYTE)v120) & 0x78)) ^ v61)
                                                                                    - 110
                                                                                    - ((2
                                                                                      * (((_BYTE)v120
                                                                                        + 60
                                                                                        - ((2 * (_BYTE)v120) & 0x78)) ^ v61)) & 0x24))) ^ 0x3DLL)) ^ 0x4B;
  a1[10] = (-87 - 55 * v217[BYTE1(v206) ^ 0x93]) ^ 0x87;
  a1[14] = (-87 - 55 * v217[BYTE1(v218) ^ 0x22]) ^ 0x47;
  a1[5] = v216[BYTE2(v222) ^ 0xF1] ^ 0xD4;
  a1[v112] = (-87
            - 55
            * v217[((unsigned __int16)((unsigned __int16)v121 ^ v234 ^ WORD2(v234) ^ ((((_WORD)v120 + 10812 - ((2 * (_WORD)v120) & 0x5478)) ^ v61) + 4498 - ((2 * (((_WORD)v120 + 10812 - ((2 * (_WORD)v120) & 0x5478)) ^ v61)) & 0x2324))) >> 8) ^ 0xA1]) ^ 0x6C;
  a1[*(_QWORD *)(v42 - 256)] = v216[BYTE2(v218) ^ 0xEFLL] ^ 0x6C;
  a1[4] = (v220[BYTE3(v222) ^ 0xF1] - 91) ^ 0xE5;
  a1[12] = ((v220[BYTE3(v218) ^ 0x97] - 37) ^ 1) - 54;
  a1[11] = *(_BYTE *)(v219 + (v206 ^ 0xBELL)) ^ 0x6B;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a37 + 8 * ((23 * (HIDWORD(v227) <= 0x10)) ^ ((int)v44 - 897))) - 12))(v218, 2808942994, 2895795320, 2017031584, v221, &off_24E21C7C0, v217, v222, a2, a3, a4, a1, a6, v224, v225, v226, v227, v228, v229,
           v230,
           v231,
           v232,
           v233,
           v234,
           v235,
           *((_QWORD *)&v235 + 1),
           v236,
           v237,
           v238,
           v239,
           v240,
           v241,
           v242,
           v243,
           v244,
           v245,
           v246,
           v247,
           v248,
           v249,
           v250,
           v251,
           v252,
           a37,
           a38,
           9,
           10,
           5,
           1,
           2,
           14,
           7);
}

void sub_21E060D60()
{
  JUMPOUT(0x21E05F160);
}

uint64_t sub_21E060D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  uint64_t v44;
  int v45;

  v45 = a10 + (a11 & 0x5791B43C ^ a44 ^ 0x4E3 ^ (((a44 - 2059419011) & 0x7AC03991) - 4851)) - 661104959;
  return ((uint64_t (*)(void))(*(_QWORD *)(v44
                                        + 8
                                        * ((54
                                          * (((2 * v45) & 0x9F7FFB88 ^ 0x1711B008) + (v45 ^ 0xE47727DA) + 1071886080 != 262384836)) | a44))
                            - 4))();
}

uint64_t sub_21E060E74(int a1, int a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((581 * (a2 + a1 + ((a4 - 302) | 0x100) + 809501243 - 2401 > 7)) ^ a4)))();
}

uint64_t sub_21E060EDC(uint64_t a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8 * ((58 * (a3 + a4 - 46 + a7 - 2418 >= (((a4 - 2384) | 0xC94) ^ 0xFFFFF324))) ^ a4)))();
}

uint64_t sub_21E060F20@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unint64_t a4@<X8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;
  int v23;
  int v25;

  v9 = (a2 + a1 + a3);
  v10 = a4 + (((v4 - 2964) | 0x822u) ^ 0x963) + v9;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v12 = v11 - v9;
  v13 = v5 + v12;
  v14 = v11 + 1;
  v15 = v5 + v11 + 1;
  v16 = v7 + ((v4 + 1808201573) & 0x9438FFEF ^ 0x42BLL) + v12;
  v17 = v11 + v7 + 3;
  v18 = v6 + v12;
  v19 = v6 + v14;
  v21 = v15 > a4 && v13 < v10;
  v23 = v17 > a4 && v16 < v10 || v21;
  if (v19 <= a4 || v18 >= v10)
    v25 = v23;
  else
    v25 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((13 * (v25 ^ 1)) ^ v4)) - 8))();
}

uint64_t sub_21E060FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 < (a7 ^ 0xD4Bu) - 2386) * ((a7 + 2104) ^ 0xC7C)) ^ a7)))();
}

uint64_t sub_21E061008@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16x4_t v54;
  int8x16x4_t v55;

  v47 = (a4 + 997995102) & 0xC483CD7B;
  *(_DWORD *)(v46 - 256) = v45 & 0xFFFFFFF0;
  v54.val[1].i64[0] = ((v47 ^ 2) + v44) & 0xF;
  v54.val[1].i64[1] = (v44 + 8) & 0xF;
  v54.val[2].i64[0] = (v44 + 7) & 0xF;
  v54.val[2].i64[1] = (v44 + 6) & 0xF;
  v54.val[3].i64[0] = (v44 + 5) & 0xF;
  v54.val[3].i64[1] = (v44 + 4) & 0xF;
  v48 = a2 + a1 + a3;
  v49 = *(_DWORD *)(v46 - 256) - 16;
  v50.i64[0] = 0x3535353535353535;
  v50.i64[1] = 0x3535353535353535;
  v54.val[0].i64[0] = v48 & 0xF;
  v54.val[0].i64[1] = (v44 + 10) & 0xF;
  v51.i64[0] = vqtbl4q_s8(v54, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v55.val[0].i64[1] = (v44 + 2) & 0xF;
  v55.val[1].i64[1] = v44 & 0xF;
  v55.val[2].i64[1] = (v44 + 14) & 0xF;
  v55.val[3].i64[1] = (v44 + 12) & 0xF;
  v55.val[0].i64[0] = (v44 + 3) & 0xF;
  v55.val[1].i64[0] = (v44 + 1) & 0xF;
  v55.val[2].i64[0] = (v44 - 1) & 0xF;
  v55.val[3].i64[0] = (v44 + 13) & 0xF;
  v51.i64[1] = vqtbl4q_s8(v55, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v52 = vrev64q_s8(vmulq_s8(v51, v50));
  *(int8x16_t *)(a5 - 15 + v48) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v41 + v54.val[0].i64[0] - 15), *(int8x16_t *)(a5 - 15 + v48)), veorq_s8(*(int8x16_t *)(v54.val[0].i64[0] + v43 - 13), *(int8x16_t *)(v42 + v54.val[0].i64[0] - 15))), vextq_s8(v52, v52, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a41 + 8 * (int)(((v49 != 0) * (v47 - 3041)) ^ v47)) - 12))();
}

void sub_21E06117C()
{
  JUMPOUT(0x21E061108);
}

uint64_t sub_21E061188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (((((a5 - 3095) | 0x410) - 906) * (v6 == v5)) ^ (a5 - 2782))))();
}

uint64_t sub_21E0611B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((((a7 - 1583393349) & 0x5E60AF72) + 1090) * ((v7 & 8) == 0)) ^ a7)))();
}

uint64_t sub_21E0611F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  char v47;
  int v48;
  uint64_t v49;
  int v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  int v58;
  unsigned __int8 v59;
  int v60;
  uint64_t v61;
  int8x16x4_t v63;

  *(_DWORD *)(v49 - 244) = v48;
  *(_DWORD *)(v49 - 256) = v46;
  v50 = a2 + a1;
  v51 = v47 + a2 + a1;
  v52 = v51 + 4;
  v53 = v51 + 5;
  v54 = v51 + 6;
  v55 = v51 + 7;
  v56 = v51 + 8;
  v57 = v51 + 10;
  v58 = v50 + a3;
  v59 = (v40 - 99) & 0xF7;
  v60 = v40 - 1132;
  v61 = (v58 - v41);
  v63.val[0].i64[0] = ((_BYTE)v58 - (_BYTE)v41) & 0xF;
  v63.val[0].i64[1] = (v57 - (_BYTE)v41) & 0xF;
  v63.val[1].i64[0] = (v45 - (_BYTE)v41 + (v59 ^ 0xE)) & 0xF;
  v63.val[1].i64[1] = (v56 - (_BYTE)v41) & 0xF;
  v63.val[2].i64[0] = (v55 - (_BYTE)v41) & 0xF;
  v63.val[2].i64[1] = (v54 - (_BYTE)v41) & 0xF;
  v63.val[3].i64[0] = (v53 - (_BYTE)v41) & 0xF;
  v63.val[3].i64[1] = (v52 - (_BYTE)v41) & 0xF;
  *(int8x8_t *)(a4 - 7 + v61) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v42 + (v61 & 0xF) - 7), *(int8x8_t *)(a4 - 7 + v61)), veor_s8(*(int8x8_t *)((v61 & 0xF) + v44 - 5), *(int8x8_t *)(v43 + (v61 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v63, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x3535353535353535)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a40 + 8 * ((3256 * (-(v46 & 0xFFFFFFF8) == -8 - v41)) ^ v60))
                                         - 8))((__n128)xmmword_21E17F900);
}

void sub_21E061354()
{
  JUMPOUT(0x21E061260);
}

uint64_t sub_21E06135C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v61
                                                                                        + 8
                                                                                        * ((2151
                                                                                          * (((*(_DWORD *)(v62 - 256) == a60) ^ (v60 + 10)) & 1)) ^ v60)))(a1, a2, a3, a4, a5, (v60 - 247) | 0x862);
}

uint64_t sub_21E06139C@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 - 262384837);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v4 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v6 + 2) ^ *(_BYTE *)(v5 + (v8 & 0xF)) ^ (53 * (v8 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1722 * (a1 - 1 == v3)) ^ (a2 + 473))) - 4))();
}

void sub_21E061404()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1457837152)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_21E061468()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x24BDAC7A8]();
  v1 = *(_DWORD *)v0 + 1988622253 * ((v0 + 2032286215 - 2 * (v0 & 0x79223A07)) ^ 0x8F3A7AA7);
  __asm { BR              X13 }
}

uint64_t sub_21E061608@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v41 = &a31 + v37;
  v63 = &a25 + v37;
  v62 = &a23 + v37;
  v61 = &a21 + v37;
  v60 = &a29 + v37;
  v59 = &a35 + v37;
  v57 = v38;
  v58 = &a37 + v37;
  v42 = &a27 + v37;
  v65 = a1[4];
  v44 = a1[1];
  v43 = a1[2];
  v45 = *(_QWORD *)(v44 - 0x6075B478BABD28DBLL);
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247 * ((((2 * (v40 - 144)) | 0x9F2A0DD0) - (v40 - 144) - 1335166696) ^ 0xFA0BF306);
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  *(_QWORD *)(v40 - 144) = a3;
  *(_QWORD *)(v40 - 136) = &a31 + v37;
  v64 = &a31 + v37;
  *(_QWORD *)(v40 - 104) = v45;
  v46 = *(void (**)(uint64_t))(a2 + 8 * (v39 + 5));
  v46(v40 - 144);
  *(_DWORD *)(v40 - 128) = v39 + 1503746353 * ((v40 - 144) ^ 0x2661C2B6) + 1413;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v44;
  *(_QWORD *)(v40 - 120) = v41;
  *(_QWORD *)(v40 - 112) = v43;
  ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v39 ^ 0x8E)) - 12))(v40 - 144);
  *(_DWORD *)(v40 - 112) = v39 + 3324 - 1948972247 * ((v40 + 1105834094 - 2 * ((v40 - 144) & 0x41E9B0FE)) ^ 0xF4774510);
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v63;
  *(_QWORD *)(v40 - 104) = v64;
  v46(v40 - 144);
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247 * (((v40 - 144) & 0x35931DE2 | ~((v40 - 144) | 0x35931DE2)) ^ 0x7FF217F3);
  *(_QWORD *)(v40 - 104) = v63;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v62;
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  v46(v40 - 144);
  *(_QWORD *)(v40 - 104) = v62;
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v61;
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247 * ((((v40 - 144) | 0xED0EFBB0) - ((v40 - 144) & 0xED0EFBB0)) ^ 0x58900E5E);
  v46(v40 - 144);
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247
                         * ((-476959252 - ((v40 - 144) | 0xE3922DEC) + ((v40 - 144) | 0x1C6DD213)) ^ 0xA9F327FD);
  *(_QWORD *)(v40 - 104) = v61;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v60;
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  v46(v40 - 144);
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247
                         * ((((v40 - 144) ^ 0x3CF0DBA6 | 0xA108DB79) - (((v40 - 144) ^ 0x3CF0DBA6) & 0xA108DB79)) ^ 0x2866F531);
  *(_QWORD *)(v40 - 104) = v60;
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v59;
  v46(v40 - 144);
  *(_QWORD *)(v40 - 104) = v59;
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v58;
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247 * (((v40 - 144) & 0x691349D0 | ~((v40 - 144) | 0x691349D0)) ^ 0x237243C1);
  v46(v40 - 144);
  *(_QWORD *)(v40 - 104) = v58;
  *(_DWORD *)(v40 - 112) = v39
                         + 3324
                         - 1948972247
                         * (((((v40 - 144) | 0xAFC77F40) ^ 0xFFFFFFFE) - (~(v40 - 144) | 0x503880BF)) ^ 0xE5A67551);
  *(_QWORD *)(v40 - 144) = v42;
  *(_QWORD *)(v40 - 136) = v42;
  *(_QWORD *)(v40 - 128) = v43;
  *(_QWORD *)(v40 - 120) = v44;
  v46(v40 - 144);
  v47 = *(_QWORD *)(v44 - 0x6075B478BABD28E3);
  *(_DWORD *)(v40 - 144) = v39 - 1734664879 * ((v40 - 274154949 - 2 * ((v40 - 144) & 0xEFA8BACB)) ^ 0xC07392D1) + 572;
  *(_QWORD *)(v40 - 136) = v47;
  *(_QWORD *)(v40 - 128) = a19;
  sub_21E069E70(v40 - 144);
  *(_DWORD *)(v40 - 136) = v39
                         + 1948972247 * (((v40 - 144) & 0x7FF8E4C9 | ~((v40 - 144) | 0x7FF8E4C9)) ^ 0x3599EED8)
                         + 2746;
  *(_QWORD *)(v40 - 144) = v65;
  sub_21E05D024(v40 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, char *, char *))(*(_QWORD *)(a20 + 8 * ((423 * (*(_DWORD *)(v40 - 132) - 1007309966 >= ((v39 - 715694780) & 0x2AA8A6B7 ^ 0x7FFFFB5Du))) ^ v39)) - 12))(v48, v49, v50, v51, v52, v53, v54, v55, a4, v42, v57, v58, v59, v60, v61);
}

uint64_t sub_21E061AC8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = 1292559617 * ((v2 + 515913877 - 2 * ((v2 - 144) & 0x1EC03925)) ^ 0xB993514C);
  *(_DWORD *)(v2 - 136) = (v0 + 1675) ^ v3;
  *(_DWORD *)(v2 - 132) = v3 ^ 0x4D0AB839;
  *(_QWORD *)(v2 - 144) = v6;
  sub_21E0477F0(v2 - 144);
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v8;
  *(_QWORD *)(v2 - 104) = v9;
  *(_DWORD *)(v2 - 112) = v0
                        - 1948972247 * ((2 * ((v2 - 144) & 0x6B0F60E8) - (v2 - 144) + 351313685) ^ 0xA16E6AFB)
                        + 2304;
  *(_QWORD *)(v2 - 144) = v6;
  *(_QWORD *)(v2 - 136) = v9;
  v7(v2 - 144);
  *(_DWORD *)(v2 - 144) = v0
                        - 254
                        - 1734664879 * ((((v2 - 144) | 0xCF94B6D9) - ((v2 - 144) & 0xCF94B6D9)) ^ 0xE04F9EC3)
                        - 194;
  *(_QWORD *)(v2 - 136) = v9;
  *(_QWORD *)(v2 - 128) = v5;
  return sub_21E069E70(v2 - 144);
}

void sub_21E0628BC(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1948972247 * ((-2 - ((a1 | 0xDE6059F) + (~(_DWORD)a1 | 0xF219FA60))) ^ 0x47870F8E);
  __asm { BR              X15 }
}

uint64_t sub_21E062980(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((*(_DWORD *)(*(_QWORD *)(a1 + 16) + v4) != v2)
                                               * ((((v1 & 0xE79EEA77) + 1600459627) & 0xA09AEFFB) - 3027)) ^ v1 & 0xE79EEA77))
                            - 4))();
}

uint64_t sub_21E0629CC()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v3 ^ ((v2 - 201715579 + v3 - 2158) * (v0 - 201714705) >= 0)))
                            - (v3 - 2158)
                            + 862))();
}

uint64_t sub_21E062A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v8 = v3 - 2009815553 * (((&v5 | 0x508070B7) + (~&v5 | 0xAF7F8F48)) ^ 0xA18B5EF3) - 390;
  v6 = v2;
  v7 = v2;
  v5 = a1;
  return ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v1 + 8 * (v3 ^ 0x369)) - 8))(&v5);
}

void sub_21E062B48(uint64_t a1)
{
  int v1;
  _BYTE v2[35];
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 24) + 1734664879 * (((a1 | 0x3A8B58B8) - (a1 & 0x3A8B58B8)) ^ 0x155070A2);
  ((void (*)(char *, _BYTE *, uint64_t))((char *)*(&off_24E21C7C0 + v1 - 422) - 8))((char *)*(&off_24E21C7C0 + (v1 ^ 0x2AD)) - 8, v2, 35);
  v3 = 0x62B63C8229BC25ECLL;
  v4 = 0x5896AD4282C8C4A5;
  v5 = -178607239;
  __asm { BR              X16 }
}

uint64_t sub_21E062CE4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  unint64_t v31;
  int v32;
  int v33;

  v27 = (unsigned __int16)(v26 - 7595) % 0xD2u;
  v28 = *(&a23 + (v26 + v24 + 142) % 0xD2u);
  v29 = *(&a23 + (v26 + v24 + 98) % 0xD2u);
  HIDWORD(v31) = v28 ^ 0x1A;
  LODWORD(v31) = (((v23 - 494) | 0x945) ^ v28 ^ 0x20) << 24;
  v30 = v31 >> 29;
  HIDWORD(v31) = v29 ^ 2;
  LODWORD(v31) = (v29 ^ 0x78) << 24;
  v32 = v31 >> 27;
  HIDWORD(v31) = *(&a23 + (v26 + v24) % 0xD2u);
  LODWORD(v31) = (HIDWORD(v31) ^ 0x7A) << 24;
  v33 = ((v30 - ((2 * v30) & 0xFFFFFFF4) + 122) ^ *(&a23 + v27)) + v32 - (v31 >> 25);
  *(&a23 + v27) = v33 + (~(2 * v33) | 0xB) + 123;
  return (*(uint64_t (**)(void))(a1 + 8 * ((3206 * (v26 + 1 == v25 + 840)) ^ v23)))();
}

uint64_t sub_21E062DF8@<X0>(int a1@<W4>, char a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,unsigned __int8 a41,int a42,char a43,char a44,char a45,unsigned __int8 a46,char a47,char a48,unsigned __int8 a49,__int16 a50,char a51,__int16 a52,char a53,char a54,__int16 a55,char a56,char a57,__int16 a58,char a59,char a60,__int16 a61,char a62,char a63)
{
  unsigned __int8 a65;
  char a66;
  char a67;
  char a68;
  char a69;
  char a70;
  unsigned __int8 a71;
  char a72;
  char a73;
  char a74;
  unsigned __int8 a75;
  char a76;
  char a77;
  char a78;
  char a79;
  int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  _DWORD *v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  unsigned int v93;
  char v94;
  unsigned __int8 v95;
  unsigned int v96;
  unsigned int v97;
  int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  uint64_t v106;
  unsigned int v107;
  char v108;
  char v109;
  unsigned int v110;
  char v111;
  int v112;
  int v113;
  int v114;
  unsigned int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  int v122;
  uint64_t v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned __int8 v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  uint64_t v161;
  char v162;
  char v163;
  char v164;
  char v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  char v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  uint64_t v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t (*v206)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unsigned int v218;
  _DWORD *v219;
  uint64_t v220;
  int v221;
  uint64_t v222;
  unsigned __int8 v223;

  v209 = (v79 - 3383) | 0x181u;
  v85 = BYTE2(a35) ^ v80;
  v86 = *(_QWORD *)(v81 + 8 * (v79 ^ 0xC2C)) - 4;
  v87 = *(unsigned __int8 *)(v86
                           + ((a77 ^ v80)
                                             - 21
                                             * ((((unsigned __int16)(135 * (a77 ^ v80)) >> 8)
                                                                + ((((a77 ^ v80)
                                                                                    - ((unsigned __int16)(135 * (a77 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80;
  v88 = ((((171 * v85) >> 9) & 0x23 | HIBYTE(a30) & 0x5C) ^ (v209 - 65)) & (*(unsigned __int8 *)(v86 + (unsigned __int16)(((v87 >> 4) | (16 * v87)) - 21 * ((3121 * ((v87 >> 4) | (16 * v87))) >> 16))) ^ v80);
  *(_BYTE *)(v84 - 139) = v88 + (~(2 * v88 + 40) | 0x39) - 8;
  v89 = ((205 * v85) >> 10) * ((205 * v85) >> 10);
  BYTE3(a23) = 2 * v89 - ((4 * v89) & 0xF7) + 122;
  *(_BYTE *)(v84 - 117) = 91;
  v90 = ((*(unsigned __int8 *)(v86
                             + ((a76 ^ v80)
                                               - 21
                                               * ((((unsigned __int16)(135
                                                                                      * (a76 ^ v80)) >> 8)
                                                                  + ((((a76 ^ v80)
                                                                                      - ((unsigned __int16)(135 * (a76 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) >> 1) & 0x10)
      + (*(unsigned __int8 *)(v84 - 113) ^ v80)
      - 80;
  v91 = v90 - (a1 & (2 * v90)) + 122;
  *(_BYTE *)(v84 - 113) = v91;
  LOBYTE(v90) = (*(_BYTE *)(v84 - 100) ^ v80)
              - 2 * (((*(_BYTE *)(v84 - 100) ^ v80) + 16) & 0x7E ^ *(_BYTE *)(v84 - 100) & 4)
              + 10;
  *(_BYTE *)(v84 - 100) = v90;
  *(_BYTE *)(v84 - 103) = (*(_BYTE *)(v84 - 103) ^ v80) + (v82 | ~(2 * (*(_BYTE *)(v84 - 103) ^ v80) + 22)) + 6;
  v92 = *(unsigned __int8 *)(v84 - 125);
  v93 = (a27 ^ v80)
      - ((*(unsigned __int8 *)(v84 - 127) ^ 0xFFFFFFE3) & ((171 * (v92 ^ 0xE3)) >> 9) & ((BYTE2(a24) ^ v80) & (*(unsigned __int8 *)(v84 - 101) ^ 5) | ~*(unsigned __int8 *)(v84 - 101) & 0x38) | (*(unsigned __int8 *)(v86 + ((BYTE3(a27) ^ v80) - 21 * ((((unsigned __int16)(135 * (BYTE3(a27) ^ v80)) >> 8) + ((((BYTE3(a27) ^ v80) - ((unsigned __int16)(135 * (BYTE3(a27) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) & (*(unsigned __int8 *)(v84 - 127) ^ 0x1C));
  LOBYTE(a27) = v93 - ((2 * v93) & 0xF4) + 122;
  v221 = *(unsigned __int8 *)(v84
                            - 151
                            + ((BYTE2(a31) ^ v80)
                                              - 35 * ((235 * (BYTE2(a31) ^ v80)) >> 13)));
  v94 = *(_BYTE *)(v84 - 104);
  v95 = (*(_BYTE *)(v84 - 129) ^ 0xE3) & (v90 ^ v80) | v90 & 0x36 ^ 4;
  *(_BYTE *)(v84 - 139) = v95 / 5u - (((205 * v95) >> 9) & 0x46) - 29;
  v96 = (((v92 >> 1) & 0x5E ^ 0x70) - 2 * (((v92 >> 1) & 0x5E ^ 0x70) & 0x58 ^ (v92 >> 1) & 8) - 47) ^ 0xFFFFFFD1;
  v97 = (*(unsigned __int8 *)(v84
                            - 151
                            + ((BYTE6(a24) ^ v80)
                                              - 35 * ((235 * (BYTE6(a24) ^ v80)) >> 13))) ^ 0xFFFFFFE3)
      + v96 * v96 * v96;
  LOBYTE(v92) = (*(_BYTE *)(v84 - 123) ^ 0xE3) & (v94 ^ v80 | 0x50) | (v94 ^ v80) & 0x50;
  BYTE1(a23) = (BYTE1(a23) ^ v80) - v92 * v92 - ((2 * ((BYTE1(a23) ^ v80) - v92 * v92)) & 0xF4) + 122;
  v98 = *(unsigned __int8 *)(v84
                           - 151
                           + ((HIBYTE(a26) ^ v80)
                                             - 35 * ((235 * (HIBYTE(a26) ^ v80)) >> 13))) ^ 0x1C;
  v99 = v98 - ((2 * v98 - 70) & 0xFFFFFFC4);
  HIDWORD(a20) = v97 - 90;
  v100 = ((v97 - 90) ^ 0xD7F7BAFF) + 2 * (v97 - 90) + 671630593;
  v101 = *(unsigned __int8 *)(v84 - 116 + (a68 ^ v80) % 0x14u);
  v102 = *(unsigned __int8 *)(v86
                            + ((BYTE1(a30) ^ v80)
                                              - 21
                                              * ((((unsigned __int16)(135
                                                                                     * (BYTE1(a30) ^ v80)) >> 8)
                                                                 + ((((BYTE1(a30) ^ v80)
                                                                                     - ((unsigned __int16)(135 * (BYTE1(a30) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(_BYTE *)(v84 - 97) = v102;
  v103 = (BYTE1(a27) ^ v80) + ((205 * (*(unsigned __int8 *)(v86 + v100 % 0x15) ^ v80)) >> 10);
  BYTE1(a27) = v103 - ((2 * v103) & 0xF4) + 122;
  v104 = (v99 + 63) ^ 0xE2;
  HIDWORD(v222) = v99 + 63;
  LOBYTE(a22) = (v99 + 63) ^ 0xE2;
  v105 = v99 + 63;
  v106 = v100 % 0x14;
  v107 = ((((*(unsigned __int8 *)(v84 - 146) ^ 0x18) & (*(unsigned __int8 *)(v84 - 133) ^ 1) & (v99 + 63) | (*(unsigned __int8 *)(v84 - 104) ^ 0x18) & (*(unsigned __int8 *)(v84 - 146) ^ 1)) & 0x19 | (*(unsigned __int8 *)(v84 - 116 + v106) >> 1) & 0x66) ^ 0xFFFFFFC2)
       + (v102 ^ v80);
  *(_BYTE *)(v84 - 97) = v107 - ((2 * v107) & 0xF4) + 122;
  LOBYTE(v102) = *(_BYTE *)(v84
                          - 151
                          + ((a68 ^ v80)
                                            - 35 * ((235 * (a68 ^ v80)) >> 13))) ^ 0xE3;
  v108 = *(_BYTE *)(v86
                  + ((a72 ^ v80)
                                    - 21
                                    * ((((unsigned __int16)(135 * (a72 ^ v80)) >> 8)
                                                       + ((((a72 ^ v80)
                                                                           - ((unsigned __int16)(135
                                                                                               * (a72 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4)));
  v109 = *(_BYTE *)(v86
                  + ((BYTE5(a38) ^ v80)
                                    - 21
                                    * ((((unsigned __int16)(135 * (BYTE5(a38) ^ v80)) >> 8)
                                                       + ((((BYTE5(a38) ^ v80)
                                                                           - ((unsigned __int16)(135
                                                                                               * (BYTE5(a38) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(_BYTE *)(v84 - 101) ^= v102 * v102 * (_BYTE)v102;
  v110 = v104 - ((2 * v105) & 8) - 1083105788;
  LOWORD(v107) = (v104 - ((2 * v105) & 8) + 7684) ^ 0x1E04;
  v111 = 92 - (*(_BYTE *)(v84 - 116 + (unsigned __int16)v107 % 0x14u) ^ v80);
  LOBYTE(v97) = (v111 | a36 ^ 0x85) & (*(_BYTE *)(v84 - 114) ^ v80) | v111 & (a36 ^ 0x85);
  LOBYTE(v97) = (v97 - ((2 * v97) & 0x28) + 20) ^ 0x14;
  LOBYTE(v97) = (*(_BYTE *)(v84 - 150) ^ 0xE3) + v97 * v97 * v97;
  v218 = (((v101 & 0xFFFFFFB3 ^ 0x76) << (((v94 ^ 2) + 2) & 7)) ^ ((v101 & 0xB3 ^ 0x76) >> (((v94 ^ 0xFD) - 1) & 7))) & (v91 ^ v80) | (v221 ^ 0xFFFFFFE3) & (v91 ^ 0xFFFFFF85);
  BYTE6(a24) ^= 3
              * ((((HIBYTE(a31) ^ v80) << (((v108 ^ 0xFD) + 1) & 7)) ^ ((HIBYTE(a31) ^ v80) >> (v108 & 7 ^ 2)))
               - 3 * (v109 ^ v80));
  *(_BYTE *)(v84 - 147) ^= (171 * (a75 ^ v80)) >> 9;
  *(_BYTE *)(v84 - 150) = v97 - ((2 * v97) & 0xC7) - 29;
  *(_BYTE *)(v84 - 97) ^= (43691
                         * (*(_BYTE *)(v86
                                     + ((BYTE3(a34) ^ v80)
                                                       - 21
                                                       * ((((unsigned __int16)(135
                                                                                              * (BYTE3(a34) ^ v80)) >> 8)
                                                                          + ((((BYTE3(a34) ^ v80)
                                                                                              - ((unsigned __int16)(135 * (BYTE3(a34) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x1B ^ 0xFA)
                         * (*(unsigned __int8 *)(v84
                                               - 151
                                               + ((a28 ^ v80)
                                                                 - 35
                                                                 * ((235 * (a28 ^ v80)) >> 13))) ^ 0xE3u)) >> 17;
  LOBYTE(v97) = *(_BYTE *)(v84
                         - 151
                         + ((BYTE3(a24) ^ v80)
                                           - 35 * ((235 * (BYTE3(a24) ^ v80)) >> 13))) ^ BYTE3(a23) ^ 0x66;
  LOBYTE(v97) = ((v97 | a69 ^ v80) & 0xC0 | v97 & (a69 ^ v80)) + (*(_BYTE *)(v84 - 139) ^ 0xE3);
  *(_BYTE *)(v84 - 139) = v97 - ((2 * v97) & 0xC7) - 29;
  BYTE3(a27) = (BYTE3(a27) ^ v80) + (v82 | ~(2 * (BYTE3(a27) ^ v80) - 6)) - 8;
  v112 = (*(unsigned __int8 *)(v84 - 129) ^ 0xE3 | a41 ^ v80) & (*(unsigned __int8 *)(v84 - 101) ^ v80) | (*(unsigned __int8 *)(v84 - 129) ^ 0xE3) & (a41 ^ v80);
  v113 = *(unsigned __int8 *)(v84 - 116 + (BYTE2(a28) ^ v80) % 0x14u) ^ v80;
  v114 = *(unsigned __int8 *)(v84 - 115);
  v115 = (v112 | v113) & (v114 ^ v80) | v112 & v113;
  LOBYTE(v113) = 2
               * ~*(_BYTE *)(v84
                           - 151
                           + ((a72 ^ v80)
                                             - 35 * ((235 * (a72 ^ v80)) >> 13)));
  v116 = (v115 << (-(v113 & (*(_BYTE *)(v84 - 116) ^ 0xFD) | *(_BYTE *)(v84 - 116) & 4) & 6)) ^ (v115 >> (v113 & (*(_BYTE *)(v84 - 116) & 6 ^ 4) | *(_BYTE *)(v84 - 116) & 4));
  BYTE3(a38) = v116 - ((2 * v116) & 0xF4) + 122;
  v117 = (2
        * *(unsigned __int8 *)(v86
                             + ((BYTE3(a31) ^ v80)
                                               - 21
                                               * ((((unsigned __int16)(135
                                                                                      * (BYTE3(a31) ^ v80)) >> 8)
                                                                  + ((((BYTE3(a31) ^ v80)
                                                                                      - ((unsigned __int16)(135 * (BYTE3(a31) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4)))) ^ 0x44;
  v118 = *(unsigned __int8 *)(v84 - 116 + v106);
  v119 = (v118 ^ 0xFFFFFFFB) & (v114 & 0x4C ^ 0x48) | ~v114 & 4;
  v120 = ((*(unsigned __int8 *)(v86
                              + ((BYTE6(a32) ^ v80)
                                                - 21
                                                * ((((unsigned __int16)(135
                                                                                       * (BYTE6(a32) ^ v80)) >> 8)
                                                                   + ((((BYTE6(a32) ^ v80)
                                                                                       - ((unsigned __int16)(135 * (BYTE6(a32) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80)
        + (a65 ^ v80)) >> 1;
  v121 = (v120 | ((39324 * (a46 ^ v80)) >> 16)) & (*(unsigned __int8 *)(v84 - 150) ^ 0xE3) | v120 & ((39324 * (a46 ^ v80)) >> 16);
  v122 = (unsigned __int16)v107;
  v123 = (unsigned __int16)v107 % 0x23u;
  v124 = ((a27 ^ v80) >> (-(*(_BYTE *)(v84 - 129) & 7 ^ 3) & 7)) ^ ((a27 ^ v80) << (*(_BYTE *)(v84 - 129) & 7 ^ 3));
  LOBYTE(v106) = (*(_BYTE *)(v84 - 110) & 0xA5 | *(_BYTE *)(v84 - 104) & 0x5A) ^ v80;
  LOBYTE(v118) = (*(_BYTE *)(v84 - 151 + v123) & 0x97 ^ 0x8B | v118 ^ 0x72)
               - ((v124 | v106) & 0xE3 | v124 & v106)
               + (*(_BYTE *)(v84 - 135) ^ 0xE3);
  *(_BYTE *)(v84 - 135) = v118 - ((2 * v118) & 0xC7) - 29;
  LODWORD(v106) = (-34 - v121);
  *(_BYTE *)(v84 - 102) ^= *(_BYTE *)(v84 - 151 + (-34 - v121 - 35 * ((235 * v106) >> 13))) ^ 0xE3;
  LOBYTE(v118) = *(_BYTE *)(v84 - 116 + (a74 ^ v80) % 0x14u) ^ v80;
  v125 = *(unsigned __int8 *)(v86
                            + (v118
                                              - 21
                                              * ((((unsigned __int16)(135 * v118) >> 8)
                                                                 + (((v118
                                                                                     - ((unsigned __int16)(135 * v118) >> 8)) & 0xFE) >> 1)) >> 4)));
  v126 = v119 & v117;
  v127 = ((v125 ^ v80) << ((2
                          * (*(_BYTE *)(v84
                                      - 151
                                      + ((HIBYTE(a36) ^ v80)
                                                        - 35
                                                        * ((235 * (HIBYTE(a36) ^ v80)) >> 13))) ^ 0xE3)) & 6)) ^ ((v125 ^ v80) >> ((-2 * (*(_BYTE *)(v84 - 151 + ((HIBYTE(a36) ^ v80) - 35 * ((235 * (HIBYTE(a36) ^ v80)) >> 13))) ^ 0xE3)) & 6));
  v128 = (205
        * ((*(_BYTE *)(v84 - 116 + (a78 ^ v80) % 0x14u) & 0x83 | *(_BYTE *)(v84
                                                                                           - 116
                                                                                           + (a57 ^ v80)
                                                                                           % 0x14u) & 0x7C) ^ v80)) >> 10;
  LOBYTE(v127) = ((v128 | v127) & 0x25 | v128 & v127) + (BYTE2(a25) ^ v80);
  BYTE2(a25) = v127 + (v82 | ~(2 * v127)) + 123;
  LOBYTE(v127) = (*(_BYTE *)(v86
                           + ((BYTE4(a28) ^ v80)
                                             - 21
                                             * ((((unsigned __int16)(135
                                                                                    * (BYTE4(a28) ^ v80)) >> 8)
                                                                + ((((BYTE4(a28) ^ v80)
                                                                                    - ((unsigned __int16)(135 * (BYTE4(a28) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80)
               + 92;
  *(_BYTE *)(v84 - 143) = BYTE4(v222) ^ (0x8Cu >> ((v127 * v127) & 7)) ^ (140 << (-(char)(v127 * v127) & 7)) ^ 1;
  BYTE4(a29) = ((205
               * (*(unsigned __int8 *)(v84 - 110) ^ v80 | *(unsigned __int8 *)(v84
                                                                             - 116
                                                                             + (BYTE2(a33) ^ v80)
                                                                             % 0x14u) ^ v80)) >> 10) ^ 0x85;
  LOBYTE(v127) = (*(_BYTE *)(v84 - 103) ^ v80) + (*(_BYTE *)(v84 - 116 + (a28 ^ v80) % 0x14u) ^ v80);
  *(_BYTE *)(v84 - 103) = v127 - ((2 * v127) & 0xF4) + 122;
  v129 = BYTE1(a23) ^ v80;
  v130 = *(unsigned __int8 *)(v84 - 151 + v123) ^ 0xE3;
  v131 = 137 * ((v130 | v129) & (222 - v121) | v130 & v129);
  *(_BYTE *)(v84 - 106) = ((unsigned __int16)v131 >> 11) - ((v131 >> 10) & 0x34) + 122;
  v223 = *(_BYTE *)(v84 - 104);
  v132 = (*(unsigned __int8 *)(v86
                             + (v129
                                               - 21
                                               * ((((unsigned __int16)(135 * v129) >> 8)
                                                                  + (((v129
                                                                                      - ((unsigned __int16)(135 * v129) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) & (*(unsigned __int8 *)(v84 - 124) ^ 0xE3) | (*(unsigned __int8 *)(v84 - 124) ^ 0x1C) & (v223 ^ v80);
  HIDWORD(a14) = v126 ^ 0x4C;
  v133 = *(unsigned __int8 *)(v84 - 151 + ((v126 ^ 0x4C) - 35 * ((59 * (v126 ^ 0x4Cu)) >> 11))) ^ 0xE3;
  v134 = ((v132 | v133) & 0x2A | v132 & v133) * ((v132 | v133) & 0x2A | v132 & v133);
  LODWORD(v220) = ((2 * v134) & 0x1EACE) + (v134 ^ 0x7F5FF567);
  v135 = 1903853009 - v220 - ((-20976762 - 2 * v220) & 0xE435101C);
  LOWORD(v134) = *(unsigned __int8 *)(v86
                                    + (unsigned __int16)(v107
                                                       - 21
                                                       * ((unsigned __int16)(((34329 * v122) >> 16)
                                                                           + ((unsigned __int16)((v107
                                                                                                - ((34329 * v122) >> 16)) & 0xFFFE) >> 1)) >> 4)));
  LOWORD(v133) = v134 ^ v80;
  *(_BYTE *)(v84 - 138) ^= v134 ^ v80;
  LOBYTE(v126) = (*(_BYTE *)(v84
                           - 151
                           + ((a67 ^ v80)
                                             - 35 * ((235 * (a67 ^ v80)) >> 13))) ^ 0xE3)
               - 38;
  LOBYTE(v106) = (v126 | (-34 - v121)) & (*(_BYTE *)(v84 - 132) ^ 0xE3) | v106 & v126;
  v212 = v106 * v106 + 92;
  LOBYTE(v134) = v134 ^ 0x85;
  v136 = v134 & 0x79;
  LOBYTE(v134) = ((v135 ^ 0xE) + ((*(_BYTE *)(v84 - 129) ^ 0xE3) & a22)) & (v134 | 0x79);
  v137 = v134 | v136;
  BYTE6(a28) ^= (((v134 | v136) ^ 0xA6) & (v110 ^ 4) | ((3 - a22) | ~(_BYTE)v134) & 4)
              + (*(_BYTE *)(v84
                          - 151
                          + ((a34 ^ v80)
                                            - 35 * ((235 * (a34 ^ v80)) >> 13))) ^ 0xE3);
  BYTE2(a38) ^= 0xDDu;
  LOWORD(v107) = v133 - ((2 * v133) & 0x12) - 23031;
  v138 = v100 % 0x23;
  v139 = (*(unsigned __int8 *)(v84 - 141) ^ 0xE3) & (v110 | 0x5C) | v110 & 0x5C ^ 4;
  v140 = (a49 ^ v80) - ((2 * (a49 ^ v80)) & 0xF6) - 1363017861;
  v219 = v83;
  v141 = *(unsigned __int8 *)(v84 - 151 + v138) ^ 0xE3;
  v142 = ((unsigned __int16)v107 ^ 0xA609u) / 3
       - v141
       - ((v139 | v140 ^ 0x7B) & (*(unsigned __int8 *)(v84 - 134) ^ 0xE3) | v139 & (v140 ^ 0xAEC1FF7B));
  v143 = v142 - ((2 * v142) & 0x91C6DAFA) - 924619395;
  v144 = v137 ^ (-1943259251 - (v110 & 0x88) + ((v110 >> 1) & 0x65) + 57);
  LOBYTE(v137) = *(_BYTE *)(v84 - 132) ^ 0xE3;
  LODWORD(a22) = v143 ^ 0x7D;
  LOBYTE(v143) = (v143 ^ 0x7D | ((a49 ^ v80) - ((2 * (a49 ^ v80)) & 0xF6) + 123) ^ 0x7B) & v137 | (v143 ^ 0x7D) & (((a49 ^ v80) - ((2 * (a49 ^ v80)) & 0xF6) + 123) ^ 0x7B);
  *(_BYTE *)(v84 - 118) ^= BYTE1(a26) ^ v80;
  HIDWORD(v220) = v135;
  BYTE1(a36) ^= (v135 ^ 0x71) + ((2 * v135) & 0xF4 ^ 0x14) + 6;
  LODWORD(v217) = ((v137 & 0xE4 | (v107 & 0xFC ^ 8) & 0xE4) & v143 | v141 & 0x1B | v143 & 0xC4 | v137 & 0xC4 | (v107 & 0xFC ^ 8) & 0xC4)
                + HIDWORD(a20);
  *(_BYTE *)(v84 - 121) = *(_BYTE *)(v84 - 116 + (BYTE1(a38) ^ v80) % 0x14u) ^ ((BYTE4(v222) & 0xE4 ^ 0xD)
                                                                                               + (((v137 & 0xE4 | (v107 & 0xFC ^ 8) & 0xE4) & v143 | v141 & 0x1B | v143 & 0xC4 | v137 & 0xC4 | (v107 & 0xFC ^ 8) & 0xC4) + BYTE4(a20))
                                                                                               / 3u) ^ 0x99;
  LOBYTE(v143) = *(_BYTE *)(v84
                          - 151
                          + ((BYTE1(a34) ^ v80)
                                            - 35 * ((235 * (BYTE1(a34) ^ v80)) >> 13))) & 0x1B ^ 0x47;
  BYTE5(a25) = v143 - ((2 * v143) & 0xB4) + 122;
  HIDWORD(a20) = v218 - 15;
  v145 = (v218 - 15);
  v146 = (((*(_BYTE *)(v84 - 151 + ((unsigned __int16)v144 ^ 0x378Du) % 0x23) ^ 0xE3) & (*(_BYTE *)(v84 - 117) ^ 0x1C) | (*(_BYTE *)(v86 + (v218 - 15 - 21 * ((((unsigned __int16)(135 * v145) >> 8) + (((v218 - 15 - ((unsigned __int16)(135 * v145) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) & (*(_BYTE *)(v84 - 117) ^ 0xE3)) ^ 0x7F163FAF)
       + ((2
         * ((*(unsigned __int8 *)(v84 - 151 + ((unsigned __int16)v144 ^ 0x378Du) % 0x23) ^ 0xE3) & (*(unsigned __int8 *)(v84 - 117) ^ 0x1C) | (*(unsigned __int8 *)(v86 + (v218 - 15 - 21 * ((((unsigned __int16)(135 * v145) >> 8) + (((v218 - 15 - ((unsigned __int16)(135 * v145) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) & (*(unsigned __int8 *)(v84 - 117) ^ 0xE3))) & 0x15E)
       + 81;
  v147 = (*(unsigned __int8 *)(v84 - 133) ^ 0xFFFFFFE3) + ((v146 * v146 * v146) >> 1);
  LOBYTE(v102) = v147 - ((2 * v147) & 0xC7) - 29;
  *(_BYTE *)(v84 - 133) = v102;
  LOBYTE(v147) = (*(_BYTE *)(v86
                           + ((BYTE3(a34) ^ v80)
                                             - 21
                                             * ((((unsigned __int16)(135
                                                                                    * (BYTE3(a34) ^ v80)) >> 8)
                                                                + ((((BYTE3(a34) ^ v80)
                                                                                    - ((unsigned __int16)(135 * (BYTE3(a34) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ 0x85)
               + (*(_BYTE *)(v84 - 146) ^ 0xE3)
               + 1;
  *(_BYTE *)(v84 - 146) = v147 - ((2 * v147) & 0xC7) - 29;
  v148 = ((-47 - v220 - ((-122 - 2 * v220) & 0x1C)) ^ 0xFA57BFE9)
       + 94912537
       + ((2 * v135) & 0x1CE ^ 0xC);
  v214 = v148 % 0x23;
  *(_BYTE *)(v84 - 133) = (((a25 ^ v80) & (v144 ^ 0x72) | (*(_BYTE *)(v84
                                                                    - 116
                                                                    + (BYTE2(a30) ^ v80) % 0x14u) ^ v80) & (v144 ^ 0x8D))
                         * (((a28 ^ v80) & (*(_BYTE *)(v84 - 109) ^ 0x85) | (*(_BYTE *)(v84
                                                                                      - 151
                                                                                      + ((a70 ^ v80) - 35 * ((235 * (a70 ^ v80)) >> 13))) ^ 0xE3) & (*(_BYTE *)(v84 - 109) ^ v80)) & (v220 + 60) | (*(_BYTE *)(v84 - 151 + v214) ^ 0xE3) & (v135 ^ 0xE))) ^ v102;
  LOBYTE(v144) = ((*(_BYTE *)(v84 - 116 + (BYTE4(a34) ^ v80) % 0x14u) ^ v80) & (*(_BYTE *)(v84 - 102) ^ 0x85) | (*(_BYTE *)(v84 - 102) ^ 0x33) & 0x96) & (*(_BYTE *)(v84 - 140) ^ 0x1C) | (BYTE6(a23) ^ v80) & (*(_BYTE *)(v84 - 140) ^ 0xE3);
  LOBYTE(v106) = *(_BYTE *)(v84
                          - 151
                          + ((BYTE3(a26) ^ v80)
                                            - 35 * ((235 * (BYTE3(a26) ^ v80)) >> 13))) & 7 ^ 3;
  LODWORD(v106) = ((BYTE2(a24) ^ v80) << (-(char)v106 & 7)) ^ ((BYTE2(a24) ^ v80) >> v106);
  v149 = *(unsigned __int8 *)(v84 - 151 + v123) ^ 0xE3;
  LODWORD(v106) = (v149 << (v106 & 7)) ^ (v149 >> (-(char)v106 & 7));
  LOBYTE(v144) = ((v106 | v144) & (*(_BYTE *)(v84 - 118) ^ 0xE3) | v106 & v144) + (*(_BYTE *)(v84 - 129) ^ 0xE3);
  *(_BYTE *)(v84 - 129) = v144 - ((2 * v144) & 0xC7) - 29;
  LOBYTE(v144) = *(_BYTE *)(v84 - 116 + (BYTE6(a27) ^ v80) % 0x14u) ^ 0xA3;
  LOBYTE(v144) = v144
               - 21
               * ((((unsigned __int16)(135 * v144) >> 8)
                                  + (((v144 - ((unsigned __int16)(135 * v144) >> 8)) & 0xFE) >> 1)) >> 4);
  HIDWORD(a12) = v135 ^ 0xE;
  LOBYTE(v106) = (*(_BYTE *)(v84 - 145) ^ 0xE3) & (v135 ^ 0xE | v110 ^ 4) | (v135 ^ 0xE) & (v110 ^ 4);
  LOBYTE(v144) = (*(_BYTE *)(v84 - 101) ^ v80)
               - ((v106 | *(_BYTE *)(v86 + v144) ^ v80) & v212 | v106 & (*(_BYTE *)(v86 + v144) ^ v80));
  *(_BYTE *)(v84 - 101) = v144 - ((2 * v144) & 0xF4) + 122;
  LODWORD(v216) = v217 - ((2 * v217) & 0x10) - 448702456;
  LOWORD(v135) = (v217 - ((2 * v217) & 0x10) + 22536) ^ 0x5808;
  LOBYTE(v141) = *(_BYTE *)(v84 - 116 + (unsigned __int16)v135 % 0x14u) ^ v80;
  LOBYTE(v149) = *(_BYTE *)(v84
                          - 151
                          + ((a30 ^ v80)
                                            - 35 * ((235 * (a30 ^ v80)) >> 13))) ^ 0xE3;
  LOBYTE(v149) = (v149 | v141) & (*(_BYTE *)(v84 - 115) ^ v80) | v149 & v141;
  v150 = (((43691 * v122) >> 17) - (BYTE5(a25) ^ v80 | v217)) ^ v212 ^ ((v149 | v216 & 0x2D ^ 0x5A) & (*(_BYTE *)(v84 - 120) ^ 0xE3) | v149 & (v216 & 0x2D ^ 0x5A));
  v151 = *(unsigned __int8 *)(v84 - 116 + (a49 ^ v80) % 0x14u) ^ v80 | *(unsigned __int8 *)(v86 + ((a75 ^ v80) - 21 * ((((unsigned __int16)(135 * (a75 ^ v80)) >> 8) + ((((a75 ^ v80) - ((unsigned __int16)(135 * (a75 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80;
  LOBYTE(v136) = *(_BYTE *)(v84 - 116 + (BYTE1(a29) ^ v80) % 0x14u) & 7 ^ 2;
  v152 = (v151 >> (-(char)v136 & 7)) ^ (v151 << v136);
  LODWORD(v106) = (unint64_t)(13108
                                   * (((*(_BYTE *)(v86
                                                 + ((BYTE6(a27) ^ v80)
                                                                   - 21
                                                                   * ((((unsigned __int16)(135 * (BYTE6(a27) ^ v80)) >> 8)
                                                                                      + ((((BYTE6(a27) ^ v80) - ((unsigned __int16)(135 * (BYTE6(a27) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xEE | a27 & 0x11) ^ v80)
                                    + ((*(_BYTE *)(v84
                                                 - 151
                                                 + ((a41 ^ v80)
                                                                   - 35
                                                                   * ((235 * (a41 ^ v80)) >> 13))) ^ 0xE3) & (*(_BYTE *)(v84 - 135) ^ 0x1C) | (*(_BYTE *)(v84 - 116 + v150 % 0x14u) ^ v80) & (*(_BYTE *)(v84 - 135) ^ 0xE3)))) >> 16;
  v153 = *(unsigned __int8 *)(v84 - 116 + (BYTE3(a23) ^ v80) % 0x14u) ^ v80;
  v154 = ((v153 | v106) & (*(unsigned __int8 *)(v84 - 100) ^ v80) | v153 & v106) + v152 + HIDWORD(a14);
  LODWORD(v106) = *(unsigned __int8 *)(v84 - 116 + (BYTE2(a35) ^ v80) % 0x14u) ^ v80;
  v211 = (unsigned __int16)v135 % 0x23u;
  v155 = (v106 * v106 * v106 * v106) | *(unsigned __int8 *)(v84 - 151 + v211) ^ 0xFFFFFFE3;
  LOBYTE(v106) = *(_BYTE *)(v84 - 151 + (v218 - 15 - 35 * ((235 * v145) >> 13))) ^ 0xE3;
  LODWORD(v106) = (2
                 * *(unsigned __int8 *)(v86
                                      + (v106
                                                        - 21
                                                        * ((((unsigned __int16)(135
                                                                                               * v106) >> 8)
                                                                           + (((v106
                                                                                               - ((unsigned __int16)(135 * v106) >> 8)) & 0xFE) >> 1)) >> 4)))) & 0xFFB8;
  v156 = *(unsigned __int8 *)(v84 - 116 + (a79 ^ v80) % 0x14u);
  LODWORD(v222) = v155;
  HIDWORD(a7) = v155;
  v157 = *(unsigned __int8 *)(v84
                            - 151
                            + (v155 - 35 * ((235 * v155) >> 13)));
  v158 = *(unsigned __int8 *)(v84 - 106);
  v159 = (((*(unsigned __int8 *)(v86
                               + ((BYTE6(a38) ^ v80)
                                                 - 21
                                                 * ((((unsigned __int16)(135
                                                                                        * (BYTE6(a38) ^ v80)) >> 8)
                                                                    + ((((BYTE6(a38) ^ v80)
                                                                                        - ((unsigned __int16)(135 * (BYTE6(a38) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) << (v157 & 7 ^ 3)) ^ ((*(_BYTE *)(v86 + ((BYTE6(a38) ^ v80) - 21 * ((((unsigned __int16)(135 * (BYTE6(a38) ^ v80)) >> 8) + ((((BYTE6(a38) ^ v80) - ((unsigned __int16)(135 * (BYTE6(a38) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) >> (((v157 ^ 4) + 1) & 7))) & (v158 ^ 5) | ((v157 ^ 0xFFFFFFE3 | v156 ^ v80) & (*(unsigned __int8 *)(v84 - 109) ^ 0x42) | (v157 ^ 0x43) & (v156 ^ 0x42)) & (v158 ^ 0x42);
  v160 = ((v159 & 0x47 | v106) ^ 0xFFFFFFB0) + ~(2 * (((v159 & 0x47 | v106) ^ 0xFFFFFFB0) & 0x7C ^ v159 & 4)) + 121;
  HIDWORD(v217) = v160 ^ 0x78;
  v215 = (unsigned __int16)(v135
                          - 21
                          * ((unsigned __int16)(((34329 * (unsigned __int16)v135) >> 16)
                                              + ((unsigned __int16)((v135
                                                                   - ((34329 * (unsigned __int16)v135) >> 16)) & 0xFFFE) >> 1)) >> 4));
  v161 = v148 % 0x14;
  v213 = v161;
  v162 = (((*(_BYTE *)(v86
                     + ((v223 ^ v80)
                                       - 21
                                       * ((((unsigned __int16)(135 * (v223 ^ v80)) >> 8)
                                                          + ((((v223 ^ v80)
                                                                              - ((unsigned __int16)(135
                                                                                                  * (v223 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x60 | (2 * *(_BYTE *)(v84 - 116 + v161)) & 0x9F) ^ a1) & (((*(_BYTE *)(v84 - 116 + (a26 ^ v80) % 0x14u) & 0x91 | *(_BYTE *)(v86 + v215) & 0x6E) ^ v80) & (*(_BYTE *)(v84 - 116) ^ 0x85) | (a26 ^ v80) & (*(_BYTE *)(v84 - 116) ^ v80)))
       + (*(_BYTE *)(v84 - 149) ^ 0xE3);
  LOBYTE(v158) = *(_BYTE *)(v84
                          - 151
                          + ((BYTE5(a24) ^ v80)
                                            - 35 * ((235 * (BYTE5(a24) ^ v80)) >> 13)));
  *(_BYTE *)(v84 - 149) = v162 - ((2 * v162) & 0xC7) - 29;
  v163 = (*(_BYTE *)(v84 - 137) ^ 0xE3)
       + ((((*(_BYTE *)(v84
                      - 151
                      + ((BYTE3(a35) ^ v80)
                                        - 35 * ((235 * (BYTE3(a35) ^ v80)) >> 13))) ^ v160) & 0xDD ^ 0x99) & (*(_BYTE *)(v84 - 151 + v214) ^ 0xC1) | a35 & 0x22) ^ 0xDD)
       + 1;
  *(_BYTE *)(v84 - 137) = v163 - ((2 * v163) & 0xC7) - 29;
  LOBYTE(v159) = *(_BYTE *)(v84 - 116 + (a43 ^ v80) % 0x14u);
  *(_BYTE *)(v84 - 99) = (*(_BYTE *)(v84 - 99) ^ v80)
                       - 2 * (((*(_BYTE *)(v84 - 99) ^ v80) + 34) & 0xFB ^ *(_BYTE *)(v84 - 99) & 1)
                       + 28;
  HIDWORD(a4) = (v160 ^ 0x78) - ((2 * (v160 ^ 0x78)) & 0x190) + 1414674376;
  v164 = *(_BYTE *)(v86
                  + ((a25 ^ v80)
                                    - 21
                                    * ((((unsigned __int16)(135 * (a25 ^ v80)) >> 8)
                                                       + ((((a25 ^ v80)
                                                                           - ((unsigned __int16)(135
                                                                                               * (a25 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80;
  v165 = (v164 | *(_BYTE *)(v84 - 116 + v161) ^ v80) & (((v160 ^ 0x78) - ((2 * (v160 ^ 0x78)) & 0x90) - 56) ^ 0xC8) | v164 & (*(_BYTE *)(v84 - 116 + v161) ^ v80);
  BYTE6(a25) ^= 2
              * ((v165 | ((171 * (BYTE1(a29) ^ v80)) >> 9)) & (*(_BYTE *)(v84 - 141) ^ 0xE3) | v165 & ((171 * (BYTE1(a29) ^ v80)) >> 9));
  v166 = a22;
  HIDWORD(a14) = a22;
  v210 = a22 % 0x14u;
  v167 = ~(BYTE1(a24) & *(_BYTE *)(v84 - 116 + v210)) & 0x50 | (BYTE1(a24) & 0xD0 ^ 0x50) & (*(unsigned __int8 *)(v84 - 116 + v210) ^ 0x50) | (2 * *(unsigned __int8 *)(v84 - 116 + (BYTE6(a27) ^ v80) % 0x14u)) & 0x2E;
  *(_BYTE *)(v84 - 103) = ((v167 >> 1) ^ 0x12) - 2 * (((v167 >> 1) ^ 0x12) & 0xFB ^ ((v167 & 2) != 0)) + 122;
  LOBYTE(v167) = (a37 & 9 ^ 0xF7) + (*(_BYTE *)(v84 - 118) ^ 0xE3) + 1;
  *(_BYTE *)(v84 - 118) = v167 - ((2 * v167) & 0xC7) - 29;
  v168 = (*(unsigned __int8 *)(v84 - 123) ^ 0xFFFFFFE3)
       - (((BYTE5(a36) >> 1) & 0x6E ^ 0x2D) & (*(unsigned __int8 *)(v84 - 108) ^ 0xFFFFFF85) | (*(unsigned __int8 *)(v84 - 108) ^ v80) & HIDWORD(a12));
  *(_BYTE *)(v84 - 123) = v168 - ((2 * v168) & 0xC7) - 29;
  v169 = (v154 ^ 0x4FDFF7F5) + ((2 * v154) & 0x1EA) - 1340078069;
  v170 = *(unsigned __int8 *)(v86 + v169 % 0x15) ^ v80;
  v171 = (v170 | v166) & (*(unsigned __int8 *)(v84 - 128) ^ 0xE3) | v170 & v166;
  v172 = (v171 - 2 * (v171 & 0x7F) - 1943063937) ^ 0x7F;
  v208 = v148 % 0x15;
  v173 = (*(unsigned __int8 *)(v86 + v208) ^ v80) + 208;
  v174 = (v172 * v172 * v172) & ((v173 | a71 ^ 0xFFFFFF85) & 0xBD | v173 & (a71 ^ 0xFFFFFF85));
  v175 = v174 + (v82 | ~(2 * v174));
  v176 = (*(_BYTE *)(v84 - 129) ^ 0xE3) + (a70 ^ v80);
  *(_BYTE *)(v84 - 129) = v176 - ((2 * v176) & 0xC7) - 29;
  LOBYTE(v167) = (a66 ^ v80)
               - 21
               * ((((unsigned __int16)(135 * (a66 ^ v80)) >> 8)
                                  + ((((a66 ^ v80)
                                                      - ((unsigned __int16)(135 * (a66 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4);
  v175 += 123;
  *(_BYTE *)(v84 - 101) = v175;
  v177 = *(unsigned __int8 *)(v84 - 151 + v169 % 0x23);
  v178 = HIDWORD(a20)
       + 99
       * (*(unsigned __int8 *)(v84 - 116 + (BYTE4(a24) ^ v80) % 0x14u) ^ v80)
       * ((*(unsigned __int8 *)(v86 + v167) ^ 0x70 | v177 ^ 0xFFFFFFC1) & 0xFFFFFFD1 | (*(unsigned __int8 *)(v86 + v167) ^ v80) & (v177 ^ 0xFFFFFFE3))
       * (*(_BYTE *)(v86
                   + ((BYTE1(a26) ^ v80)
                                     - 21
                                     * ((((unsigned __int16)(135 * (BYTE1(a26) ^ v80)) >> 8)
                                                        + ((((BYTE1(a26) ^ v80)
                                                                            - ((unsigned __int16)(135
                                                                                                * (BYTE1(a26) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0xFE ^ v80);
  LOBYTE(v158) = 43
               - ((((v158 ^ 0xE3) * (v158 ^ 0xE3)) & (*(_BYTE *)(v84 - 114) ^ v80))
                + v121)
               - ((v159 ^ v160 ^ 2) & (*(_BYTE *)(v84 - 114) ^ 0x85));
  v179 = *(_BYTE *)(v84 - 151 + v211) & 0xF5 | *(_BYTE *)(v84 - 151 + v214) & 0xA;
  v180 = *(_BYTE *)(v84 - 116 + v155 % 0x14u) & 0xAE ^ 0x7B;
  v181 = (v180 - 2 * (v180 & 3) - 125) ^ 0xFFFFFF83;
  v182 = (*(unsigned __int8 *)(v84 - 133) ^ 0xFFFFFFE3)
       - ((v181 * v181 * v181) & (v175 ^ 0xFFFFFF85) | (v175 ^ v80) & (v178 / 0xFu));
  HIDWORD(a12) = *(unsigned __int8 *)(v86
                                    + ((a23 ^ v80)
                                                      - 21
                                                      * ((((unsigned __int16)(135
                                                                                             * (a23 ^ v80)) >> 8)
                                                                         + ((((a23 ^ v80)
                                                                                             - ((unsigned __int16)(135 * (a23 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4)));
  *(_BYTE *)(v84 - 133) = v182 - ((2 * v182) & 0xC7) - 29;
  LOBYTE(v169) = *(_BYTE *)(v84 - 116 + v169 % 0x14) ^ v80;
  v183 = v154
       + (*(unsigned __int8 *)(v84 - 116 + (a54 ^ v80) % 0x14u) ^ 0xFFFFFF85)
       + ((171
         * (*(unsigned __int8 *)(v86
                               + (v169
                                                 - 21
                                                 * ((((unsigned __int16)(135 * v169) >> 8)
                                                                    + (((v169
                                                                                        - ((unsigned __int16)(135 * v169) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80)) >> 9);
  LOBYTE(v169) = *(_BYTE *)(v86
                          + ((BYTE4(a31) ^ v80)
                                            - 21
                                            * ((((unsigned __int16)(135
                                                                                   * (BYTE4(a31) ^ v80)) >> 8)
                                                               + ((((BYTE4(a31) ^ v80)
                                                                                   - ((unsigned __int16)(135 * (BYTE4(a31) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80;
  LOBYTE(v169) = ((v169 | a63 ^ v80) & v158 | v169 & (a63 ^ v80)) & 0xFA | 1;
  LOBYTE(v169) = (*(_BYTE *)(v84 - 100) ^ v80)
               - ((v169 | BYTE4(a4) ^ 0xC8) & (*(_BYTE *)(v84 - 114) ^ v80) | v169 & (BYTE4(a4) ^ 0xC8));
  *(_BYTE *)(v84 - 100) = v169 - ((2 * v169) & 0xF4) + 122;
  v184 = *(unsigned __int8 *)(v86
                            + ((a51 ^ v80)
                                              - 21
                                              * ((((unsigned __int16)(135 * (a51 ^ v80)) >> 8)
                                                                 + ((((a51 ^ v80)
                                                                                     - ((unsigned __int16)(135 * (a51 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80;
  v185 = (v184 | a36 ^ v80) & 0x8D | v184 & (a36 ^ v80);
  LOBYTE(v106) = *(_BYTE *)(v84 - 116 + (BYTE4(a26) ^ v80) % 0x14u) ^ v80;
  LOBYTE(v153) = *(_BYTE *)(v86
                          + ((a60 ^ v80)
                                            - 21
                                            * ((((unsigned __int16)(135 * (a60 ^ v80)) >> 8)
                                                               + ((((a60 ^ v80)
                                                                                   - ((unsigned __int16)(135 * (a60 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80;
  LOBYTE(v106) = (v153 | v106) & 6 | v106 & v153 & 7;
  v186 = (v185 >> (-(char)v106 & 7)) ^ (v185 << v106);
  LOBYTE(v186) = (*(_BYTE *)(v86
                           + (unsigned __int16)(v186
                                              - 21
                                              * ((unsigned __int16)(((34329 * v186) >> 16)
                                                                  + ((unsigned __int16)((v186
                                                                                       - ((34329 * v186) >> 16)) & 0xFFFE) >> 1)) >> 4))) ^ 0x85)
               + (*(_BYTE *)(v84 - 113) ^ v80)
               + 1;
  HIDWORD(a20) = v179 ^ 0xE3;
  v187 = (v179 ^ 0x3E967A5C) - 1050049215 + ((2 * (v179 ^ 0xE3)) & 0xFFFFFF7F);
  LODWORD(v106) = *(unsigned __int8 *)(v84 - 151 + v187 % 0x23);
  *(_BYTE *)(v84 - 113) = v186 - ((2 * v186) & 0xF4) + 122;
  v188 = v106 ^ 0xFFFFFF1C;
  LODWORD(v106) = 205 * (*(unsigned __int8 *)(v84 - 116 + (BYTE4(a30) ^ v80) % 0x14u) ^ v80);
  v189 = ((*(unsigned __int8 *)(v84 - 104) ^ v80) >> ((v106 >> 10) & 7)) ^ ((*(unsigned __int8 *)(v84 - 104) ^ v80) << (-(char)(v106 >> 10) & 7)) ^ (v188 / 5);
  BYTE4(a23) = v189 - ((2 * v189) & 0xF4) + 122;
  v190 = (0x8Bu >> (((v178 ^ 0x7C) + 4) & 7)) ^ (139 << ((4 - (v178 ^ 0x7C)) & 7));
  LODWORD(v106) = *(unsigned __int8 *)(v84 - 116 + v161) ^ v80;
  LOBYTE(v179) = v106 | v190;
  v191 = v106 & v190;
  LODWORD(v106) = (*(unsigned __int8 *)(v86 + v215) ^ 0x9F3FC261)
                + ((2 * (*(unsigned __int8 *)(v86 + v215) ^ 0xFFFFFFFE)) & 0x36)
                + 229;
  HIDWORD(v216) = v179 & 0xC | v191 | (*(unsigned __int8 *)(v84 - 116 + v210) ^ v80) & (*(unsigned __int8 *)(v84 - 115) ^ 0xFFFFFF85) | (v106 * v106 * v106) & (*(unsigned __int8 *)(v84 - 115) ^ v80);
  *(_BYTE *)(v84 - 139) = (BYTE4(v216) & (BYTE6(a35) & 0xE3 ^ 0x72 | 0x2C) | (BYTE6(a35) & 0xE3 ^ 0x72) & 0x30u) / 3
                        + (*(_BYTE *)(v84 - 139) ^ 0xE3)
                        - ((2
                          * ((BYTE4(v216) & (BYTE6(a35) & 0xE3 ^ 0x72 | 0x2C) | (BYTE6(a35) & 0xE3 ^ 0x72) & 0x30u) / 3
                           + (*(_BYTE *)(v84 - 139) ^ 0xE3))) & 0xC7)
                        - 29;
  *(_BYTE *)(v84 - 122) = 65;
  v192 = (v183 + 1);
  v193 = (v183
                         + 1
                         - 21
                         * ((((unsigned __int16)(135 * v192) >> 8)
                                            + (((v183 + 1 - ((unsigned __int16)(135 * v192) >> 8)) & 0xFE) >> 1)) >> 4));
  LOBYTE(v106) = *(_BYTE *)(v84
                          - 151
                          + ((a47 ^ v80)
                                            - 35 * ((235 * (a47 ^ v80)) >> 13))) ^ ((BYTE2(a28) ^ v80) * (BYTE2(a28) ^ v80)) ^ 0xE3;
  v194 = ((*(_BYTE *)(v86 + v193) & 0xA0 | *(_BYTE *)(v84 - 116 + (BYTE4(a38) ^ v80) % 0x14u) & 0x5Eu) >> 1) ^ 0x3D;
  LOBYTE(v194) = ((v106 | v194) & (*(_BYTE *)(v84 - 99) ^ v80) | v106 & v194) + (*(_BYTE *)(v84 - 101) ^ v80);
  *(_BYTE *)(v84 - 101) = v194 - ((2 * v194) & 0xF4) + 122;
  BYTE6(a34) = *(_BYTE *)(v86 + v208);
  v195 = *(unsigned __int8 *)(v84
                            - 151
                            + ((v178 ^ 0x77FDFF7C) + ((2 * v178) & 0xF8) - 2013134716) % 0x23) ^ 0xE3;
  LOBYTE(v106) = (*(_BYTE *)(v84
                           - 151
                           + ((a25 ^ v80)
                                             - 35 * ((235 * (a25 ^ v80)) >> 13))) ^ 0x2F)
               + 52;
  v196 = (v195 >> ((v106 * v106 * v106) & 7)) ^ (v195 << (-(char)(v106 * v106 * v106) & 7));
  LOBYTE(v196) = (*(_BYTE *)(v84 - 109) ^ v80) - v196 * v196;
  LOBYTE(v106) = (a75 ^ v80)
               - 21
               * ((((unsigned __int16)(135 * (a75 ^ v80)) >> 8)
                                  + ((((a75 ^ v80)
                                                      - ((unsigned __int16)(135 * (a75 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4);
  LOBYTE(v178) = (a71 ^ 0x85) + (*(_BYTE *)(v84 - 143) ^ 0xE3);
  LOBYTE(v158) = v196 - (a1 & (2 * v196)) + 122;
  v197 = *(unsigned __int8 *)(v84 - 116 + v210);
  *(_BYTE *)(v84 - 109) = v158;
  LOBYTE(v178) = v178
               + (*(_BYTE *)(v86 + v106) ^ v80)
               * (*(_BYTE *)(v86 + v106) ^ v80)
               * (*(_BYTE *)(v86 + v106) ^ v80);
  LODWORD(v106) = *v219 + a19;
  LOBYTE(v196) = (3 * (BYTE4(a12) ^ v80) + (~(6 * (BYTE4(a12) ^ v80)) | 0x3B) - 29) ^ BYTE4(v222);
  *(_BYTE *)(v84 - 143) = v178 + 1 - ((2 * (v178 + 1)) & 0xC7) - 29;
  LOBYTE(v178) = 2
               * *(_BYTE *)(v84
                          - 151
                          + ((BYTE5(a35) ^ v80)
                                            - 35 * ((235 * (BYTE5(a35) ^ v80)) >> 13)));
  LOBYTE(v178) = v178 & 0x72 ^ 0x45 ^ (((v178 & 0xF7 ^ a2) & 0x66) - (v178 & 0xF7 ^ a2 | 0x6F));
  *(_BYTE *)(v84 - 100) = (((2 * v178) | 0x2C) - v178 + 106) ^ 0xAE;
  v198 = v155 ^ (*(unsigned __int8 *)(v86
                                    + (v166
                                                      - 21
                                                      * ((((unsigned __int16)(135 * WORD2(a14)) >> 8)
                                                                         + (((v166
                                                                                             - ((unsigned __int16)(135 * WORD2(a14)) >> 8)) & 0xFE) >> 1)) >> 4))) >> 1);
  LOBYTE(v178) = (*(_BYTE *)(v84 - 116 + (a73 ^ v80) % 0x14u) ^ 0x85)
               + (v158 ^ v80)
               + ((a1 ^ (2
                       * *(_BYTE *)(v86
                                  + ((HIBYTE(a32) ^ v80)
                                                    - 21
                                                    * ((((unsigned __int16)(135
                                                                                           * (HIBYTE(a32) ^ v80)) >> 8)
                                                                       + ((((HIBYTE(a32) ^ v80)
                                                                                           - ((unsigned __int16)(135 * (HIBYTE(a32) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))))) & (*(_BYTE *)(v84 - 132) ^ 0x1C) | (*(_BYTE *)(v86 + ((*(_BYTE *)(v86 + v193) ^ v80) - 21 * ((((unsigned __int16)(135 * (*(_BYTE *)(v86 + v193) ^ v80)) >> 8) + ((((*(_BYTE *)(v86 + v193) ^ v80) - ((unsigned __int16)(135 * (*(_BYTE *)(v86 + v193) ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80) & (*(_BYTE *)(v84 - 132) ^ 0xE3))
               + 1;
  *(_BYTE *)(v84 - 109) = v178 - ((2 * v178) & 0xF4) + 122;
  *(_BYTE *)(v84 - 110) = *(_BYTE *)(v84 - 116 + (BYTE6(a37) ^ v80) % 0x14u);
  v199 = *(unsigned __int8 *)(v84 - 151 + (v183 + 1 - 35 * ((235 * v192) >> 13)));
  v200 = v217 + (v197 ^ 0xFFFFFF85) + 1;
  LODWORD(v193) = 205
                * ((v199 & 0x56 ^ 0x42) & (HIBYTE(a26) ^ 0x52) | (-25
                                                                * (*(unsigned __int8 *)(v86
                                                                                      + ((a30 ^ v80) - 21 * ((((unsigned __int16)(135 * (a30 ^ v80)) >> 8) + ((((a30 ^ v80) - ((unsigned __int16)(135 * (a30 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) ^ v80)) & 0xA9 | (HIBYTE(a26) ^ 0xFFFFFFF3 | v199 ^ 2) & 0x16);
  LOBYTE(v153) = (*(_BYTE *)(v86
                           + ((v223 ^ v80)
                                             - 21
                                             * ((((unsigned __int16)(135 * (v223 ^ v80)) >> 8)
                                                                + ((((v223 ^ v80)
                                                                                    - ((unsigned __int16)(135 * (v223 ^ v80)) >> 8)) & 0xFE) >> 1)) >> 4))) & 0x2E | BYTE5(a37) & 0xD1) ^ v80;
  v201 = v200 % 0x14u;
  LOBYTE(v178) = (*(_BYTE *)(v84 - 116 + v187 % 0x14) ^ ((*(_BYTE *)(v84
                                                                   - 151
                                                                   + ((BYTE6(a31) ^ v80)
                                                                                     - 35
                                                                                     * ((235
                                                                                       * (BYTE6(a31) ^ v80)) >> 13))) ^ 0xE3)
                                                       + (*(_BYTE *)(v84
                                                                   - 151
                                                                   + ((BYTE6(a24) ^ v80)
                                                                                     - 35
                                                                                     * ((235
                                                                                       * (BYTE6(a24) ^ v80)) >> 13))) ^ 0xE3)) ^ v80) & ((((*(_BYTE *)(v84 - 116 + v201) ^ v80) * (*(_BYTE *)(v84 - 116 + v201) ^ v80)) | v153) & 0x1B | ((*(_BYTE *)(v84 - 116 + v201) ^ v80) * (*(_BYTE *)(v84 - 116 + v201) ^ v80)) & v153);
  *(_BYTE *)(v84 - 104) = v178 - ((2 * v178) & 0xF4) + 122;
  v202 = *(unsigned __int8 *)(v86
                            + ((v198 ^ 0x3D)
                                              - 21
                                              * ((((unsigned __int16)(135
                                                                                     * (v198 ^ 0x3D)) >> 8)
                                                                 + ((((v198 ^ 0x3D)
                                                                                     - ((unsigned __int16)(135 * (v198 ^ 0x3D)) >> 8)) & 0xFE) >> 1)) >> 4)));
  v203 = ((2 * (v202 ^ 0x78)) & 0x19A) + (v202 ^ 0xEBEEE6B7);
  v204 = *(unsigned __int8 *)(v84 - 107) ^ 0xFFFFFF85;
  v205 = (5 - (_BYTE)v203) & 7;
  *(_BYTE *)(v84 - 126) ^= 2 * (*(_BYTE *)(v84 - 116 + v201) ^ v80) * (BYTE4(a23) ^ v80)
                         - (((v196 << ((v203 + 3) & 7)) ^ (v196 >> v205)) & (49 - v220));
  v206 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 + 8 * (((v106 == 0x671042ED) | (32 * (v106 == 0x671042ED))) ^ v79)) - 12);
  return v206(v200, v206, v205, v203, v198 ^ 0x3Du, v204, 49, v193 >> 10, a4, v208, v209, a7, v210, v211, v213, v214, a12, v215, a14,
           v216,
           v217,
           v219,
           v220,
           a19,
           a20,
           v222,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_21E065BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;

  return (*(uint64_t (**)(uint64_t, _QWORD))(a2
                                                    + 8
                                                    * (((v3 < ((v2 - 988) ^ 0x94Cu) - 55)
                                                      * ((43 * ((v2 - 988) ^ 0x94C)) ^ 0xA7E)) ^ (v2 - 988))))(a1, 0);
}

uint64_t sub_21E065C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;

  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(a2
                                                                      + 8
                                                                      * (int)(((((v3 < 0x20) ^ v2) & 1)
                                                                             * (((v2 + 1707994472) & 0x9A320A8F) - 580)) ^ v2))
                                                          - 4))(a1, 0, v2 ^ 0x790u);
}

uint64_t sub_21E065C80@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  _OWORD *v2;
  int v3;
  __int128 v4;

  *(_QWORD *)&v4 = 0xE1E1E1E1E1E1E1E1;
  *((_QWORD *)&v4 + 1) = 0xE1E1E1E1E1E1E1E1;
  *v2 = v4;
  v2[1] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((2994 * ((v1 ^ 0x2ADLL) == (v3 & 0xFFFFFFE0))) ^ (v1 + 334)))
                            - 12))();
}

uint64_t sub_21E065CD0@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return (*(uint64_t (**)(void))(a3 + 8 * ((((a2 - 1123227032) & 0x42F30FBF ^ (a2 - 1549)) * (a1 == v3)) ^ a2)))();
}

uint64_t sub_21E065D08@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  char v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((a1 - 1054) | (4 * ((v2 & 0x18) != 0))))
                            - ((a1 - 1252) ^ 0x285)))();
}

uint64_t sub_21E065D38@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unsigned int v4;

  *(_QWORD *)(v3 + a1) = 0xE1E1E1E1E1E1E1E1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * (((((547 * (a2 ^ 0xD03) - 3290) & v4) - 8 != a1)
                                          * (22 * ((547 * (a2 ^ 0xD03)) ^ 0xCF4) - 365)) ^ (547 * (a2 ^ 0xD03))))
                            - 12))();
}

uint64_t sub_21E065D90@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X5>, uint64_t a4@<X8>, double a5@<D0>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v7 + a3) = a5;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a4 + 8 * (((v6 != a3) * a2) ^ v5)) - 12))(a1);
}

uint64_t sub_21E065DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a4 + 8 * (((a3 - 813) * (a2 != v4)) ^ a3))
                                                   - (a3 ^ 0x2DDu)
                                                   + 401))(a1, a2);
}

uint64_t sub_21E065DE8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 + a1) = -31;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((a1 + 1 != v4) * ((v2 - 244) ^ 0x4FC)) ^ (v2 + 183))) - 8))();
}

uint64_t sub_21E065E20@<X0>(char a1@<W0>, char a2@<W4>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, int a17, char a18, uint64_t a19, int a20,char a21,uint64_t a22,int a23,char a24,uint64_t a25,char a26)
{
  char v26;
  int v27;
  _BYTE *v28;
  _BYTE *v29;
  unsigned int v30;
  char v31;
  int v32;
  int v33;
  unsigned int v34;
  char v35;
  _BYTE *v36;

  *v29 += a18;
  if (v32 == v33)
    v36 = v29;
  else
    v36 = v29 + 1;
  *v36 += v35;
  v29[2 % v30] += a16;
  v29[3 % v30] += 92;
  v29[4 % v30] += ((v27 ^ 0xE0) - 107) ^ a21;
  v29[v34 % v30] += v26;
  v29[6 % v30] += v31;
  v29[7 % v30] += a2;
  v29[8 % v30] += a26;
  v29[9 % v30] += a24;
  v29[0xA % v30] += a1;
  v29[0 % v30] = (v29[0 % v30] + (~(2 * v29[0 % v30]) | 0xB) + 123) ^ *v28;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8 * v27))(1284254932, 465344522, 1284254932, 82883140, 11);
}

uint64_t sub_21E065FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v3 + ((int)a1 - 1284254932) % v4) = (*(_BYTE *)(v3 + ((int)a1 - 1284254932) % v4)
                                                - ((2 * *(_BYTE *)(v3 + ((int)a1 - 1284254932) % v4)) & 0xC7)
                                                - 29) ^ *(_BYTE *)(a1 + v6 - 151 - 1284254932);
  return (*(uint64_t (**)(void))(a3 + 8 * ((3273 * (a1 + (v5 ^ 0xBC7u) - 2749 == a2 + 35)) ^ v5)))();
}

uint64_t sub_21E066058@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;
  unsigned int v25;
  int v26;
  uint64_t v27;

  *(_BYTE *)(v24 + ((int)v27 - 465344522) % v25) = (*(_BYTE *)(v24 + ((int)v27 - 465344522) % v25)
                                                  - ((*(_BYTE *)(v24 + ((int)v27 - 465344522) % v25) << ((v26 - 10) ^ 0xB5)) & 0xF4)
                                                  + 122) ^ *(&a24 + v27 - 465344522);
  return (*(uint64_t (**)(void))(a2 + 8 * ((1806 * (v27 + 1 != a1 + 210)) ^ v26)))();
}

uint64_t sub_21E0660D0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;

  v7 = (v3 + v2 + 177) % v6;
  v8 = *(unsigned __int8 *)(v5 + (v3 + v2 + 170) % v6);
  v9 = ((v8 >> 7) | (2 * v8)) ^ *(unsigned __int8 *)(v5 + v7);
  v10 = *(unsigned __int8 *)(v5 + (v3 + v2 + 140) % v6);
  v11 = *(unsigned __int8 *)(v5 + (v3 + v2) % v6);
  *(_BYTE *)(v5 + v7) = v9 ^ ((v10 >> 2) | ((_BYTE)v10 << 6)) ^ ((v11 >> 3) | (32 * v11));
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((2 * (((v3 + 1 == v1 + 256) ^ (v4 + 1)) & 1)) & 0xF7 | (8 * (((v3 + 1 == v1 + 256) ^ (v4 + 1)) & 1))) ^ v4)))();
}

uint64_t sub_21E0661A4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 731811679 * ((a1 + 2060842934 - 2 * (a1 & 0x7AD5F7B6)) ^ 0x332351F2);
  v2 = *(_DWORD *)(a1 + 4) ^ v1;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1D17695A8381D362);
  v4 = *(_DWORD *)(a1 + 24) ^ v1;
  v6 = v3 - 201714705;
  v5 = v3 - 201714705 < 0;
  v7 = 201714705 - v3;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + v2 - 1404)
                              + 8
                              * ((((v4 - 1593420789) < 4 * (unint64_t)v8) * ((v2 + 1646) ^ 0xC5D)) ^ v2)
                              - 12))();
}

uint64_t sub_21E06626C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v3 ^ (4 * (v2 == 1593420789))))
                                                   - (((v3 - 1616) | 0x35u) ^ 0x63FLL)))(a1, 303517573);
}

_DWORD *sub_21E0662A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

uint64_t sub_21E0662B0()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * ((((v1 - 246) | 0xAA) + 2473) ^ (v1 + 119))))();
}

uint64_t sub_21E066328@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, unsigned int a6@<W8>)
{
  uint64_t v6;
  int v7;
  unsigned int v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 16) + (((a2 - 1479) | 0x5C0) ^ a6) + a5) = (a4 ^ v8) >> (((a2 + 20) & 0xAE) + a3 - 14);
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 ^ (988 * (a5 - 1 != v7)))))();
}

uint64_t sub_21E06639C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v3 + 8 * (((a3 + 8 == v4 + 32) * (((v5 - 365) | 0xAA) + 2473)) ^ v5)))();
}

uint64_t sub_21E0663D0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 - 2039792460 > (((v3 - 430) | 0xEB) ^ 0x5C5426C2) || v2 - 2039792460 < v1;
  return (*(uint64_t (**)(void))(v0 + 8 * ((477 * v5) ^ v3)))();
}

uint64_t sub_21E066428@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_21E066328(a1, 3 * (v5 ^ 0x757u), 96, *(_DWORD *)(*v3 + 4 * (v4 - 1441326710) - 0x2CF4A33C3453BA2BLL), v2, a2);
}

void sub_21E066478(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1866394843 * ((-2 - ((a1 | 0x5737EA95) + (~(_DWORD)a1 | 0xA8C8156A))) ^ 0x42DF229E);
  __asm { BR              X10 }
}

uint64_t sub_21E066538(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v4) == (v3 ^ v5) + v2)
                                * ((11 * (v3 ^ 0xD43)) ^ 0xA8B)) ^ v3)))();
}

uint64_t sub_21E06657C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _DWORD *v3;
  uint64_t result;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v6 = a1;
  v7 = v1;
  v5 = v2 - 1734664879 * ((((2 * &v5) | 0xD31CFFE6) - &v5 + 376537101) ^ 0xC65557E9) - 1028;
  result = sub_21E069E70((uint64_t)&v5);
  *v3 = 403429410 - *v3;
  return result;
}

void sub_21E06671C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X8 }
}

uint64_t sub_21E0667B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1469 * (**(_BYTE **)(a2 - 0x593A0D77ED43FF8BLL) == 0)) ^ 0x259u))
                            - 8))();
}

uint64_t sub_21E0667F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  *(_QWORD *)(*(_QWORD *)(a18 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E651) = v19 + 1;
  *(_DWORD *)(*(_QWORD *)(a18 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E659) = a19 - 1;
  v22 = 1948972247 * ((((2 * (v21 - 160)) | 0xDC09852E) - (v21 - 160) + 301677929) ^ 0x5B9A3779);
  *(_DWORD *)(v21 - 160) = v22 ^ 0x1EA93554;
  *(_DWORD *)(v21 - 140) = 1426307471 - v22;
  *(_QWORD *)(v21 - 152) = &STACK[0x1464535CD0E6959];
  v23 = sub_21E09FC10(v21 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * ((98
                                                        * (a19
                                                         + 606723375
                                                         + ((2 * LODWORD(STACK[0x2F0])) & 0x76 ^ 0x70)
                                                         + (STACK[0x2F0] & 0x3F ^ 0x6FE552C7u) > 0xFFFFFFBF)) ^ 0x9ACu))
                                          - 8))(v23);
}

uint64_t sub_21E066A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  int v20;
  uint64_t v21;
  _BOOL4 v22;

  v22 = v19 + 982515055 < (a19 - 83410695);
  if ((a19 - 83410695) < 0x66F8108F != v19 + 982515055 < ((v20 - 3026) | 0x12u) + 1727533116)
    v22 = (a19 - 83410695) < 0x66F8108F;
  return (*(uint64_t (**)(void))(v21 + 8 * ((4 * v22) | (8 * v22) | v20)))();
}

uint64_t sub_21E066A90(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;

  v21 = (a1 - 87033257) & 0xAD7925F7;
  v22 = 94 * (a1 ^ 0x76);
  v23 = 1948972247 * ((~((v20 - 160) | 0xC918322) + ((v20 - 160) & 0xC918322)) ^ 0x46F08933);
  *(_DWORD *)(v20 - 160) = v23 + a19 - 946659760;
  *(_QWORD *)(v20 - 152) = a17;
  *(_DWORD *)(v20 - 144) = a1 - v23 + 2360;
  v24 = sub_21E0A4DD0(v20 - 160);
  v25 = v21 ^ 0xA849209E ^ STACK[0x2F0] & 0x3F;
  *((_BYTE *)&STACK[0x2AC] + v25) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((276 * (v25 > v22 - 3423)) ^ a1)) - 12))(v24);
}

uint64_t sub_21E066BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                          + 8
                                                                                          * (((((v6 - 2946) | 0x1E9) ^ ((v6 - 3459) | 0x40) ^ 0x3EB)
                                                                                            * (v4 == 63)) ^ v6))
                                                                              - 12))(a1, a2, a3, a4, 1878002454);
}

uint64_t sub_21E066C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((1295 * ((v6 ^ 3u) >= a6 + ((v7 + 134740997) | 0xA04120A0) - 431)) ^ v7))
                            + 2823364766
                            - (v7 ^ 0xA849235F)))();
}

uint64_t sub_21E066C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  char v7;
  int v8;
  uint64_t v9;

  *(unint64_t *)((char *)&STACK[0x2AC] + v6 + 1) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((46 * ((v7 & 0x38) == 8)) ^ (a6 + v8 + 1556)))
                            - (((a6 + v8 + 513) | 0x45u) ^ 0x3F5)))();
}

void sub_21E066CBC()
{
  JUMPOUT(0x21E066C8CLL);
}

uint64_t sub_21E066CC4@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  *((_BYTE *)&STACK[0x2AC] + (a1 - 593498209)) = *(_BYTE *)(v8 + (v5 + v2))
                                                             + (~(2 * *(_BYTE *)(v8 + (v5 + v2))) | 0x9B)
                                                             + 51;
  v9 = v5 + 1 + v4;
  v10 = (v1 < v3) ^ (v9 < v3);
  v11 = v9 < v1;
  if (v10)
    v11 = v1 < v3;
  return (*(uint64_t (**)(void))(v7 + 8 * ((4 * v11) | (8 * v11) | v6)))();
}

uint64_t sub_21E066D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (v8 ^ (1931 * (v7 == v6))))
                            - ((a6 + ((v8 + 588805) | 0xA84020A0) - 356) ^ 0x57)))();
}

uint64_t sub_21E066D8C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(__n128, __n128, __n128, __n128, __n128),uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int32x4_t a35,int32x4_t a36,int32x4_t a37,int32x4_t a38)
{
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(__n128, __n128, __n128, __n128, __n128);
  __n128 v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  __n128 v51;
  __n128 v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  int v58;
  int v59;
  uint64_t v60;
  uint8x16_t v61;
  uint16x8_t v62;
  int8x16_t v63;
  int8x16_t v64;
  uint16x8_t v65;
  int8x16_t v66;
  int8x16_t v67;
  uint8x16_t v68;
  uint16x8_t v69;
  uint16x8_t v70;
  uint8x16_t v71;
  int8x16_t v74;
  int8x16_t v79;
  int32x4_t v80;
  int32x4_t v81;
  int32x4_t v82;
  int32x4_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v88;
  uint8x16_t v89;
  uint16x8_t v90;
  uint16x8_t v91;
  uint8x16_t v92;
  uint8x16_t v97;
  uint16x8_t v98;
  uint16x8_t v99;
  int32x4_t v100;
  int32x4_t v101;
  int32x4_t v102;
  _DWORD *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  int8x16x4_t v111;
  int8x16x4_t v112;

  v45 = (v38 + 537476260) & 0xDFF6CF99;
  v46 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v44 + 8 * v38) + v45 - 3229);
  LODWORD(v110) = a19 - 1279242451;
  HIDWORD(v109) = (v45 - a6 - 2778) ^ 0xB7F83E61;
  v47.n128_u64[0] = 0x3232323232323232;
  v47.n128_u64[1] = 0x3232323232323232;
  v48 = (__n128)vdupq_n_s32(0x6FF00B16u);
  v49 = (__n128)vdupq_n_s32(0x37F8058Bu);
  HIDWORD(a19) = a4 ^ 0xA8492458;
  v50 = (a4 ^ 0xA8492458) - 1014;
  v51.n128_u64[0] = 0x6464646464646464;
  v51.n128_u64[1] = 0x6464646464646464;
  v52 = (__n128)vdupq_n_s32(0x37F8059Bu);
  v53 = STACK[0x2F4];
  v54 = STACK[0x2F8];
  v55 = STACK[0x2F4];
  v56 = LODWORD(STACK[0x2F8]);
  v57 = STACK[0x2FC];
  v58 = STACK[0x300];
  LODWORD(a29) = STACK[0x2FC];
  v59 = LOBYTE(STACK[0x30C]) ^ 0xF1;
  LODWORD(v109) = LOBYTE(STACK[0x30C]) ^ 0xFFFFFFF1;
  if (v59 == 2)
  {
    HIDWORD(v110) = v53;
    LODWORD(a26) = v54;
    LODWORD(a27) = v58;
    a28 = v46;
    v88 = LODWORD(STACK[0x304]);
    v112 = vld4q_s8((const char *)&STACK[0x2AC]);
    HIDWORD(a22) = STACK[0x304];
    v89 = (uint8x16_t)veorq_s8(v112.val[0], (int8x16_t)v47);
    v90 = vmovl_u8(*(uint8x8_t *)v89.i8);
    v91 = vmovl_high_u8(v89);
    v92 = (uint8x16_t)veorq_s8(v112.val[1], (int8x16_t)v47);
    _Q22 = vmovl_u8(*(uint8x8_t *)v92.i8);
    _Q21 = vmovl_high_u8(v92);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v97 = (uint8x16_t)veorq_s8(v112.val[2], (int8x16_t)v47);
    v98 = vmovl_high_u8(v97);
    v99 = vmovl_u8(*(uint8x8_t *)v97.i8);
    v112.val[0] = veorq_s8(v112.val[3], (int8x16_t)v47);
    v112.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v112.val[0]);
    v112.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v112.val[0].i8);
    v100 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v99.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v90.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v112.val[0].i8));
    v101 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v99, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v90), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v112.val[0]));
    v112.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v98.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v91.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v112.val[1].i8));
    v102 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v98, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v91), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v112.val[1]));
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v112.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v112.val[0], (int32x4_t)v112.val[0]), (int8x16_t)v48)), (int32x4_t)v49);
    a38 = vaddq_s32(vsubq_s32(v102, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v102, v102), (int8x16_t)v48)), (int32x4_t)v49);
    a35 = vaddq_s32(vsubq_s32(v100, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v100, v100), (int8x16_t)v48)), (int32x4_t)v49);
    a36 = vaddq_s32(vsubq_s32(v101, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v101, v101), (int8x16_t)v48)), (int32x4_t)v49);
    v103 = (_DWORD *)&a35 + v42 + 1629044468;
    v104 = *(v103 - 8) ^ *(v103 - 3);
    v105 = *(v103 - 14);
    v106 = a5 & (2 * v104);
    HIDWORD(v107) = *((_DWORD *)&a35 + v42 + v50 + 1629044192) ^ v105 ^ (v104 + v41 - v106) ^ v41;
    LODWORD(v107) = *((_DWORD *)&a35 + v42 + v50 + 1629044192) ^ v105 ^ (v104 + v41 - v106);
    *v103 = (v107 >> 31) + v41 - (a5 & (2 * (v107 >> 31)));
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * ((7 * (v40 != 1629044405)) ^ HIDWORD(a19))) - 8))(v105, v56, v106, v88, a5, HIDWORD(a19), v40 - 16, 3037000498, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             v40 - 16,
             v109,
             v110,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
  else if (v59 == 1)
  {
    HIDWORD(v110) = v53;
    LODWORD(a26) = v54;
    LODWORD(a27) = v58;
    a28 = v46;
    v111 = vld4q_s8((const char *)&STACK[0x2AC]);
    v60 = a4 ^ 0xA8492ABB;
    v61 = (uint8x16_t)veorq_s8(v111.val[0], (int8x16_t)v47);
    v62 = vmovl_u8(*(uint8x8_t *)v61.i8);
    v63 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v62.i8);
    v64 = (int8x16_t)vmovl_high_u16(v62);
    v65 = vmovl_high_u8(v61);
    v66 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v65.i8);
    v67 = (int8x16_t)vmovl_high_u16(v65);
    v68 = (uint8x16_t)veorq_s8(v111.val[1], (int8x16_t)v47);
    v69 = vmovl_high_u8(v68);
    v70 = vmovl_u8(*(uint8x8_t *)v68.i8);
    v71 = (uint8x16_t)veorq_s8(v111.val[2], (int8x16_t)v47);
    _Q26 = (int8x16_t)vmovl_high_u8(v71);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v71.i8);
    v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v79 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v111.val[0] = veorq_s8(v111.val[3], (int8x16_t)v47);
    v111.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v111.val[0]);
    v111.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v111.val[1]);
    v111.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v111.val[0].i8);
    v111.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v111.val[0]);
    v111.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v111.val[0].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v70.i8, 8uLL), v63));
    v111.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v111.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v70, 8uLL), v64));
    v111.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v111.val[1].i8), 0x18uLL), v79), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v69.i8, 8uLL), v66));
    v111.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v111.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v69, 8uLL), v67));
    v80 = (int32x4_t)veorq_s8(vandq_s8(v111.val[0], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v63 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    v81 = (int32x4_t)veorq_s8(vandq_s8(v111.val[3], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    v82 = (int32x4_t)veorq_s8(vandq_s8(v111.val[1], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v66 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    v83 = (int32x4_t)veorq_s8(vandq_s8(v111.val[2], (int8x16_t)v52), (int8x16_t)(*(_OWORD *)&v67 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v111.val[1], vaddq_s32(v82, v82)), (int32x4_t)v49);
    a38 = vaddq_s32(vsubq_s32((int32x4_t)v111.val[2], vaddq_s32(v83, v83)), (int32x4_t)v49);
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v111.val[0], vaddq_s32(v80, v80)), (int32x4_t)v49);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v111.val[3], vaddq_s32(v81, v81)), (int32x4_t)v49);
    v84 = (char *)*(&off_24E21C7C0 + (int)(a4 ^ 0xA8492168)) - 12;
    v85 = (char *)*(&off_24E21C7C0 + (int)(a4 ^ 0xA84922E6)) - 12;
    v86 = (char *)*(&off_24E21C7C0 + (int)v60 - 2577) - 8;
    return ((uint64_t (*)(_QWORD, uint64_t, char *, char *, char *, uint64_t, _QWORD, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 + 8 * (int)v60) - 8))(-(v86[v40 - 16 + v42] - 51), v56, v84, v85, v86, v60, *(unsigned int *)&v85[4 * v40 - 64 + 4 * v42], &off_24E21C7C0, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             v40 - 16,
             v109,
             v110,
             a26,
             a27,
             v46,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
  else
  {
    v108 = a29;
    LODWORD(STACK[0x2F4]) = (v55 ^ v39) + (v53 ^ v39) + v39 - (v43 & (2 * ((v55 ^ v39) + (v53 ^ v39))));
    LODWORD(STACK[0x2F8]) = (v56 ^ v39) + (v54 ^ v39) + v39 - (v43 & (2 * ((v56 ^ v39) + (v54 ^ v39))));
    LODWORD(STACK[0x2FC]) = (v57 ^ v39) + (v108 ^ v39) + v39 - (v43 & (2 * ((v57 ^ v39) + (v108 ^ v39))));
    LODWORD(STACK[0x300]) = 2 * (v58 ^ v39) + v39 - (v43 & (4 * (v58 ^ v39)));
    a30 = 0;
    return v46(v47, v48, v49, v51, v52);
  }
}

uint64_t sub_21E067C70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23,int a24,unsigned int a25,unsigned int a26)
{
  uint64_t v26;
  _BOOL4 v27;

  if (a26 < a25 != (a21 - 213316637) < 0x1FB11EC3)
    v27 = (a21 - 213316637) < 0x1FB11EC3;
  else
    v27 = a21 - 213316637 > a26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26 + 8 * ((!v27 * (493 * (a4 ^ (a4 + 5)) - 1330)) ^ (a6 + a4 + 2071))) - 8))();
}

uint64_t sub_21E067D0C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1392 * (((a4 + v4 - 2465) ^ 0x7BDECDBDu) + v5 >= v5 - 745018144)) ^ v4))
                            - 4))();
}

uint64_t sub_21E067D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * (v20 ^ (103 * ((unint64_t)(~a20 + v21 - v22) > 0xF))))
                            + 2823364766
                            - (v20 - a6 - 2026)))();
}

uint64_t sub_21E067D9C@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W5>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q3>)
{
  int8x16_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int8x16_t v10;

  v10 = *(int8x16_t *)(v9 + (a1 + v7 + a4 - a2));
  *v6 = vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), a6)), a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a3 + a4 + 1074)) - 8))();
}

uint64_t sub_21E067E00@<X0>(int a1@<W1>, int a2@<W5>, int a3@<W6>, int a4@<W7>, int a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v6 + v5) = *(_BYTE *)(v10 + (v8 + a1))
                      - (v7 & (2 * *(_BYTE *)(v10 + (v8 + a1))))
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v5 == 63) * (((a5 + a3) & a4) + 20)) ^ (a2 + a5 + 1297))) - 8))();
}

uint64_t sub_21E067E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W5>, int a6@<W8>)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * ((2589
                                                                                            * (a6
                                                                                             + ((v6 + 2013343325) & 0xDFB5BDFB ^ 0xC0B41B92) < 0x38)) ^ (a5 + v6 + 1392)))
                                                                              - 12))(a1, a2, a3, a4, 1878002454);
}

uint64_t sub_21E067EAC@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1;
  v4 = a1 - 1061939351;
  if ((unint64_t)(v4 + 1) > 0x38)
    v5 = v4 + 1;
  else
    v5 = 56;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((464
                                * (v5 - v3 + (unint64_t)(v1 ^ 0xA8492C59) - 1761425419 < (unint64_t)(7 * (v1 ^ 0xC94u))
                                                                                              - 769)) ^ v1)))();
}

uint64_t sub_21E067F24()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(unint64_t *)((char *)&STACK[0x2AC] + v2 - 1061939351) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * (6 * (v0 ^ 0x298) - 2206)) ^ v0))
                            - 4))();
}

uint64_t sub_21E067F7C(double a1)
{
  int v1;
  double *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v2 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ v1)) - 4))();
}

uint64_t sub_21E067FA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (v6 ^ ((2 * (v4 != v5)) | (8 * (v4 != v5)))))
                            - (v6 ^ 0xA84929C4)
                            - (a4 + v6 - 2406)
                            + 0x15092413CLL))();
}

void sub_21E067FEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  int v6;
  char v7;
  unint64_t v8;
  char v9;
  char v10;
  unsigned int v11;
  char v12;
  char v13;
  unsigned int v14;
  unsigned int v15;
  unint64_t v16;

  v6 = LOBYTE(STACK[0x30C]) ^ 0xF1;
  if (v6 == 1)
  {
    v7 = a4 ^ 0x43;
    v14 = STACK[0x2F0];
    v15 = STACK[0x2EC];
    LOBYTE(STACK[0x2E4]) = ((8 * LOBYTE(STACK[0x2F0])) ^ 0xE0) - ((2 * ((8 * LOBYTE(STACK[0x2F0])) ^ 0xE0)) & 0x60) + 50;
    v12 = 100;
    LOBYTE(STACK[0x2E5]) = ((v14 >> 5) ^ 0xE9) - ((((v14 >> 5) ^ 0xFFFFFFE9) << ((a4 ^ 0x43) + 32)) & 0x64) + 50;
    LOBYTE(STACK[0x2E6]) = ((v14 >> 13) ^ 0xB) - ((2 * ((v14 >> 13) ^ 0xB)) & 0x64) + 50;
    HIDWORD(v16) = v15 ^ 0x17;
    LODWORD(v16) = v14 ^ 0x60000000;
    LOBYTE(STACK[0x2E7]) = ((v14 >> 21) ^ 0xD5) - ((2 * ((v14 >> 21) ^ 0xD5)) & 0x64) + 50;
    LOBYTE(STACK[0x2E8]) = (v16 >> 29) - ((2 * (v16 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x2E9]) = ((v15 >> 5) ^ 0x9E) - 2 * (((v15 >> 5) ^ 0x9E) & 0x33 ^ ((v15 & 0x20) != 0)) + 50;
    LOBYTE(STACK[0x2EA]) = ((v15 >> 13) ^ 0x4B) + (~(2 * ((v15 >> 13) ^ 0x4B)) | 0x9B) + 51;
    v11 = v15 >> 21;
    v13 = (v15 >> 21) ^ 0x85;
  }
  else
  {
    if (v6 != 2)
      goto LABEL_6;
    v7 = a4 ^ 0x43;
    v11 = STACK[0x2F0];
    HIDWORD(v8) = LODWORD(STACK[0x2EC]) ^ 0x17;
    LODWORD(v8) = LODWORD(STACK[0x2F0]) ^ 0x60000000;
    v9 = ((LODWORD(STACK[0x2EC]) >> 13) ^ 0x4B) - ((2 * ((LODWORD(STACK[0x2EC]) >> 13) ^ 0x4B)) & 0x64);
    v10 = ((LODWORD(STACK[0x2EC]) >> 5) ^ 0x9E) - ((2 * ((LODWORD(STACK[0x2EC]) >> 5) ^ 0x9E)) & 0x64);
    LOBYTE(STACK[0x2E4]) = (a4 ^ 0x43 ^ (LODWORD(STACK[0x2EC]) >> 21) ^ 0x64)
                         - ((LODWORD(STACK[0x2EC]) >> 20) & 0x64)
                         + 50;
    LOBYTE(STACK[0x2E5]) = v9 + 50;
    LOBYTE(STACK[0x2E6]) = v10 + 50;
    LOBYTE(STACK[0x2E7]) = (v8 >> 29) - ((2 * (v8 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x2E8]) = ((v11 >> 21) ^ 0xD5) - 2 * (((v11 >> 21) ^ 0xD5) & 0x3A ^ (v11 >> 21) & 8) + 50;
    LOBYTE(STACK[0x2E9]) = ((v11 >> 13) ^ 0xB) - 2 * (((v11 >> 13) ^ 0xB) & 0x36 ^ (v11 >> 13) & 4) + 50;
    LOBYTE(STACK[0x2EA]) = ((v11 >> 5) ^ 0xE9) - ((2 * ((v11 >> 5) ^ 0xE9)) & 0x64) + 50;
    LOBYTE(v11) = (8 * v11) ^ 0xE0;
    v12 = 96;
    v13 = v11;
  }
  LOBYTE(STACK[0x2EB]) = v7 - a6 - 42 + v13 - (v12 & (2 * v11)) - 112;
LABEL_6:
  JUMPOUT(0x21E0670C8);
}

uint64_t sub_21E06848C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  _BOOL4 v15;
  _BOOL4 v16;

  v11 = v9 - 569702276 + ((v8 - 293913869) & 0xB9CDE3F7);
  v12 = *(_DWORD *)((char *)&STACK[0x2AC] + (v11 & 0xFFFFFFFC) + 72);
  v13 = v9 + v6;
  *(_BYTE *)(a6 + v13) = (BYTE2(v12) ^ 0xD7) - ((2 * (BYTE2(v12) ^ 0xD7)) & 0x64) + 50;
  *(_BYTE *)(a6 + v11) = (HIBYTE(v12) ^ 0x50) - 2 * ((HIBYTE(v12) ^ 0x50) & 0x36 ^ HIBYTE(v12) & 4) + 50;
  *(_BYTE *)(a6 + v13 + 1) = (BYTE1(v12) ^ 0xA) + ~(2 * ((BYTE1(v12) ^ 0xA) & 0x37 ^ BYTE1(v12) & 5)) + 51;
  *(_BYTE *)(a6 + v13 + 2) = v12 ^ 0xD5;
  v14 = LODWORD(STACK[0x308]) + 231415144;
  v15 = v14 < v7;
  v16 = v9 - 721396125 < v14;
  if (v9 - 721396125 < v7 != v15)
    v16 = v15;
  return (*(uint64_t (**)(void))(v10 + 8 * ((124 * v16) ^ v8)))();
}

void sub_21E06866C()
{
  JUMPOUT(0x21E068644);
}

uint64_t sub_21E068678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v35;
  uint64_t v36;
  int v37;
  _BOOL4 v39;

  v37 = (v35 - 1065) | 0x249;
  *(_DWORD *)(&a35 + a30) = 1543433291;
  v39 = ((v37 - 93592683) & 0xADDD3AB3 ^ 0x8F37B107) != 0x277E91A6 || *(_DWORD *)(&a35 + a30) != 1543433291;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *))(*(_QWORD *)(v36 + 8 * ((2557 * v39) ^ v37)) - (v37 + 343) + 936))(1543433291, 4201374613, a3, a4, 2916956851, 2557, 3942246643, 3176084478, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           &a35 + a30 + 0x593A0D77ED44011BLL);
}

uint64_t sub_21E06875C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((120 * (v10 == ((v8 + a7) & a8 ^ (v8 + 1755 + v9)))) ^ v8)) - 12))();
}

uint64_t sub_21E0687A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  uint64_t v20;
  _BOOL4 v21;

  v21 = ((a3 - 1810943890) & 0xFFFFFFFC) - a19 != -1810943894;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * (v19 | (4 * v21) | (32 * v21))) - (v19 ^ 0x8C0u) + 579))();
}

uint64_t sub_21E0687EC@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  int v27;
  uint64_t v28;
  _BOOL4 v30;

  v30 = v27 == a1 + ((a3 + 461) | 0x20) - 1080 || a27 - a2 != ((a3 - 1471668651) | 0x10002) + 1549435398;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28 + 8 * (((2 * v30) | (16 * v30)) ^ a3)) - 8))();
}

uint64_t sub_21E068854(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  int v32;
  uint64_t v33;
  unsigned int v34;
  int v35;
  _BOOL4 v36;

  v34 = ((v32 - a4 + 2752) ^ 0x3CA6FFC2) + a32;
  v35 = (v34 < 0xAD3B673F) ^ (a3 + 1095407530 < ((v32 + 1471603127) ^ 0xAD3B6566));
  v36 = v34 < a3 + 1095407530;
  if (v35)
    v36 = a3 + 1095407530 < ((v32 + 1471603127) ^ 0xAD3B6566);
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * ((112 * !v36) ^ (v32 + 1471604496))) - 8))();
}

uint64_t sub_21E0689E0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v3
                              + 8 * ((63 * (*(_DWORD *)(v4 + 48 * (v1 + v2 + v0 - 2151 - 601) + 36) != v2)) ^ v0)))();
}

uint64_t sub_21E068A2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;

  v20 = v14 + (v16 ^ 0xA84922FB) + 2404;
  v21 = 2009815553 * ((((2 * (v19 - 160)) | 0x71C42556) - (v19 - 160) + 1193143637) ^ 0x49E93CEE);
  *(_DWORD *)(v19 - 136) = v16 - v21 + 2385;
  *(_DWORD *)(v19 - 104) = a3 - v21 - 485331748;
  *(_QWORD *)(v19 - 160) = a12;
  *(_QWORD *)(v19 - 144) = a14;
  *(_QWORD *)(v19 - 128) = v18;
  *(_QWORD *)(v19 - 120) = a13;
  *(_QWORD *)(v19 - 112) = a11;
  ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v16 ^ 0x3F1)) - 4))(v19 - 160);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v17
                                                               + 8
                                                               * ((2971 * (*(_DWORD *)(v19 - 152) == v15 + v20 - 2843)) ^ v16))
                                                   - 8))(1543433291, 4201374613);
}

uint64_t sub_21E068B58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8
                                                                        + 8
                                                                        * (int)(((*(_DWORD *)(v10
                                                                                            + (v7 + v5) * (uint64_t)v4) != ((v9 - 1291) | 0x10A) + 164154239)
                                                                               * ((v9 - 1199885668) & 0xEFCDE2EA ^ (a4 + 71))) ^ v9))
                                                            - 12))(a1, a2, v6);
}

uint64_t sub_21E068BC8@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((a1 + v2 - 1818) ^ 0xA84929A9) * ((a2 ^ 0x9CE8C559) == v3 - 180933273)) ^ v2))
                            + 2823364766
                            - (a1 + v2 - 1818)
                            - 8))();
}

uint64_t sub_21E068C2C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2024 * ((((v1 & 0xFFFFFFFFFFFFFFFLL) == 0) ^ (v0 + 61)) & 1)) ^ (v0 + 1471603478))))();
}

uint64_t sub_21E068C78@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;

  if ((a2 + 1662466747) <= 0x10 && ((1 << (a2 - 69)) & 0x10125) != 0)
    __asm { BR              X9 }
  return v2 ^ 0xC8075E55;
}

void JRiKWV(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v8;

  if (a1)
    v6 = a5 == 0;
  else
    v6 = 1;
  v8 = !v6 && a6 != 0;
  __asm { BR              X8 }
}

uint64_t sub_21E0690D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,int a23)
{
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;

  *a5 = 0;
  *a6 = 0;
  a22 = (1292559617 * ((842773906 - (&a22 | 0x323BB592) + (&a22 | 0xCDC44A6D)) ^ 0x6A972204)) ^ 0x9B42BBAD;
  v25 = sub_21E0E193C(&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((1063 * (a23 == 939001227)) ^ v24)) - 12))(v25);
}

uint64_t sub_21E069180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,unint64_t *a23,int a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  a22 = 305
      - 225134719
      * (((&a22 | 0x6930C194) - &a22 + (&a22 & 0x96CF3E68)) ^ 0x7FC084BE);
  a23 = &STACK[0xCDF15AEA900D0A1];
  sub_21E047010(&a22);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * ((3784 * (a24 == 939001227)) ^ 0x3A0u)) - 12))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_21E069234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unsigned int a24,int a25,int a26)
{
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  uint64_t v34;

  v32 = 1990461019 * ((&a22 & 0xAB0DBE78 | ~(&a22 | 0xAB0DBE78)) ^ 0x7B16E30E);
  a24 = ((v28 ^ 0x7FFFDBFB) - 285219753 + ((v28 << (v31 - 14)) & 0xFFFFB7F6)) ^ v32;
  a26 = (v31 - 867) ^ v32;
  a22 = v27;
  a23 = a19;
  ((void (*)(uint64_t *))(*(_QWORD *)(v29 + 8 * (v31 ^ 0x61F)) - 8))(&a22);
  v33 = 1292559617 * ((&a22 & 0xDD04EB1B | ~(&a22 | 0xDD04EB1B)) ^ 0x85A87C8D);
  a25 = v31 - v33 - 181;
  a23 = a19;
  LODWORD(a22) = v33 + 576055179 * v26 + 1580388100;
  v34 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v29 + 8 * (v31 ^ 0x75E)) - 4))(&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30 + 8 * ((3325 * (a24 == 939001227)) ^ v31)) - 12))(v34);
}

uint64_t sub_21E069388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23,int a24,int a25,unint64_t *a26,uint64_t a27)
{
  uint64_t v27;
  int v28;
  unsigned int v29;
  uint64_t v30;

  v29 = 1328090399 * ((((2 * &a22) | 0x5E4AD426) - &a22 - 790981139) ^ 0xD0F60E29);
  a22 = (v28 - 1653802660) ^ v29;
  a23 = -1408593300 - v29;
  a26 = &STACK[0x7398388C82CD30F];
  a27 = a19;
  a25 = v29 ^ 0x6B80F4A2;
  v30 = sub_21E0DDA14((uint64_t)&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * (((a24 == ((v28 + 1380318361) & 0xADB9FFF7 ^ 0x37F8062B))
                                                        * (((v28 - 773) | 0x240) ^ 0x656)) ^ v28))
                                          - 12))(v30);
}

uint64_t sub_21E069484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,unint64_t *a23,unint64_t *a24,int a25,unsigned int a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(unint64_t **);
  uint64_t v30;

  a26 = (v26 + 1540) ^ (1990461019
                      * ((((&a22 | 0xCEC76740) ^ 0xFFFFFFFE) - (~&a22 | 0x313898BF)) ^ 0x1EDC3A36));
  a22 = &STACK[0xD254D6213B3B431];
  a23 = &STACK[0x10AB37095071AF76];
  a24 = a18;
  v29 = (void (*)(unint64_t **))(*(_QWORD *)(v27 + 8 * (v26 ^ 0x736)) - 8);
  v29(&a22);
  a24 = a18;
  a22 = &STACK[0xD254D6213B3B441];
  a23 = &STACK[0x10AB37095071AF96];
  a26 = (v26 + 1540) ^ (1990461019
                      * ((((&a22 | 0xFE1D528A) ^ 0xFFFFFFFE) - (~&a22 | 0x1E2AD75)) ^ 0x2E060FFC));
  v29(&a22);
  LODWORD(a22) = v26
               - 1292559617 * ((&a22 - 1950881514 - 2 * (&a22 & 0x8BB7E916)) ^ 0x2CE4817F)
               - 988;
  a24 = a18;
  a23 = &STACK[0x3DECEE387AEF042D];
  ((void (*)(unint64_t **))(*(_QWORD *)(v27 + 8 * (v26 - 1465)) - 4))(&a22);
  a23 = a18;
  LODWORD(a24) = v26
               - 1734664879
               * (((&a22 | 0xEE329001) - &a22 + (&a22 & 0x11CD6FF8)) ^ 0xC1E9B81B)
               - 1263;
  v30 = sub_21E092C98((uint64_t)&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8
                                                      * (((2 * ((_DWORD)a22 != 939001227)) | (4
                                                                                            * ((_DWORD)a22 != 939001227))) ^ v26))
                                          - 4))(v30);
}

uint64_t sub_21E0696BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v22;
  uint64_t v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * (((((a10 - 492) | 0x810) - 2987) * (a22 == v22)) ^ a10)) - 4))();
}

uint64_t sub_21E0696F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  uint64_t v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((358 * ((unint64_t)(a16 - v17) < 0x20)) ^ v16))
                            - (((v16 - 3072) | 0xC03u) ^ 0xC7BLL)))();
}

uint64_t sub_21E069740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + v3 - 139036643) = *(_BYTE *)(a1 + v3 - 139036643);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v3 - 1 != v1) * (((2 * v2) ^ 0x1EAA) - 1255)) ^ v2)) - 8))();
}

uint64_t sub_21E069780@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;

  v5 = a1 + 127 - v2;
  v6 = *(_OWORD *)(v5 - 31);
  v7 = v3 + 127 - v2;
  *(_OWORD *)(v7 - 15) = *(_OWORD *)(v5 - 15);
  *(_OWORD *)(v7 - 31) = v6;
  LODWORD(v7) = v2 + (v1 ^ 0xA3Cu) == 1708;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(v7 | (2 * v7) | v1)) - 8))();
}

uint64_t sub_21E0697CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * (((a18 != v18) * ((v19 + 195) ^ 0xB1F)) ^ v19)) - 4))();
}

uint64_t sub_21E069800@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD, uint64_t))(v3 + 8 * (v2 - 1181)))(a1 ^ (v1 + 2334) ^ ((v2 + 726) | 0x200u), 2917507175) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v5 * (((v2 + 191) | 4) ^ 0xD77)) ^ v2)) - 4))();
}

uint64_t sub_21E069868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;

  v21 = (a18 ^ v19) - ((2 * (a18 ^ v19)) & 0xC1E85D8) - 2045820180;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8
                                        * ((102
                                          * (((2 * v21) & 0xF0B37FDC ^ (((v18 - 399) ^ 0x4F809FEE) + v18 - 1332648903))
                                           + (v21 ^ 0xFE56FD02)
                                           - 1880111116 == 139036642)) ^ v18))
                            - 12))();
}

uint64_t sub_21E069904(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  _DWORD *v5;
  _QWORD *v6;
  int v7;
  int v8;
  void (*v10)(int *);
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  v8 = a4 ^ v7;
  *v6 = a1;
  *v5 = v4;
  v14 = v11;
  v13 = ((a4 ^ v7) + 592) ^ (225134719
                           * ((&v13 - 422577544 - 2 * ((unint64_t)&v13 & 0xE6CFFA78)) ^ 0xF03FBF52));
  v10(&v13);
  v13 = (v8 + 592) ^ (225134719
                    * ((((&v13 | 0x7A774E98) ^ 0xFFFFFFFE) - (~&v13 | 0x8588B167)) ^ 0x9378F44D));
  v14 = v12;
  v10(&v13);
  return 0;
}

void sub_21E069D0C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)a1 - 1734664879 * ((((2 * a1) | 0x7DAA5822) - a1 + 1093325807) ^ 0x910E040B);
  v2 = *(_QWORD *)(a1 + 8);
  v3[1] = v1
        + 1438293641 * ((v3 + 1935299998 - 2 * ((unint64_t)v3 & 0x735A559E)) ^ 0xCB9D00E1)
        - 1276;
  v4 = v2;
  sub_21E075380((uint64_t)v3);
  __asm { BR              X8 }
}

void sub_21E069E04()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0x1D17695A8381D362) - 201714706) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *(_DWORD *)(v0 + 4) = v3;
}

uint64_t sub_21E069E70(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)a1 + 1734664879 * ((1397760100 - (a1 | 0x53502064) + (a1 | 0xACAFDF9B)) ^ 0x8374F781);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + v1 - 634)
                                        + 8 * (v1 ^ (16 * (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a1 + 16))))
                                        - 12)
                            - ((v1 + 2383) ^ 0xC35)))();
}

uint64_t sub_21E069EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0x1D17695A8381D362);
  v5 = ((v3 - 756) ^ 0xF3FA1AD2) + v4;
  if (v5 < 0)
    v5 = -v5;
  *(_DWORD *)(v1 - 0x1D17695A8381D362) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((114
                                          * ((v5 ^ 0x1E043FFD)
                                           - 235146752
                                           + (((v3 - 706136394) & 0x2A16BFFA ^ 0x3C087D18) & (2 * v5)) == 268448253)) ^ v3))
                            - 12))();
}

uint64_t sub_21E069F90@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v2 - 0x1D17695A8381D35ELL) + 4 * (v4 - 268448254) - 0x2CF4A33C3453BA2BLL) = *(_DWORD *)(*(_QWORD *)(v3 - 0x1D17695A8381D35ELL) + 4 * (v4 - 268448254) - 0x2CF4A33C3453BA2BLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)((3039 * (v4 - 1 != v1)) ^ (v5 + 1032783273) & 0xC270F3FB))
                            - 4))();
}

void sub_21E06A020(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1990461019 * (((a1 | 0x21CFDBFC) - (a1 & 0x21CFDBFC)) ^ 0xE2B7975);
  __asm { BR              X9 }
}

uint64_t sub_21E06A0C8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  BOOL v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0xA08)))(200, 2354554103) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((104 * ((v3 ^ v1) & 1)) ^ v1))
                            - ((v1 - 2232) ^ 0x2E7)))();
}

uint64_t sub_21E06A120(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  int v9;
  int v10;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v5 + 8 * (v6 ^ 0xFC)))(a1, 0);
  v9 = ((2 * result) & 0x6DFA7E36) + (result ^ 0x36FD3F1B);
  if (v9 == 922566443)
  {
    --v2;
    goto LABEL_7;
  }
  if (v9 == 922566439)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 - 494)))(a1);
    v10 = v2;
    goto LABEL_8;
  }
  if (v9 != 922566427)
  {
    v2 -= 2;
    goto LABEL_7;
  }
  *v4 = a1;
  v10 = 1174573152;
LABEL_8:
  *(_DWORD *)(v1 + 16) = v10 - 1174573152;
  return result;
}

void sub_21E06A1DC(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  char *v8;
  unsigned int v9;
  char *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;
  char v34;
  char v35;
  int v37;
  unint64_t *v38;
  unsigned int v39;
  uint64_t v40;

  v40 = *MEMORY[0x24BDAC8D0];
  v2 = 1328090399 * (((a1 | 0x117370F6) - (a1 | 0xEE8C8F09) - 292778231) ^ 0xEEA014CC);
  v3 = *(_DWORD *)(a1 + 44);
  v4 = *(_DWORD *)(a1 + 40) + v2;
  v5 = 1948972247 * ((&v37 + 1008448574 - 2 * (&v37 & 0x3C1BB43E)) ^ 0x898541D0);
  v6 = *(_DWORD *)(a1 + 8) ^ v2;
  v20 = 1328090399
      * (((a1 | 0x147055D6117370F6) - (a1 | 0xEB8FAA29EE8C8F09) - 0x147055D6117370F7) ^ 0xCD6FD2EAEEA014CCLL);
  v7 = v3 + v2;
  v39 = 1426307471 - v5;
  v37 = v5 ^ (v4 + 514405597);
  v25 = &STACK[0x1464535CD0E68DD];
  v38 = &STACK[0x1464535CD0E68DD];
  sub_21E09FC10((uint64_t)&v37);
  v8 = (char *)*(&off_24E21C7C0 + (v4 ^ 0x1F)) - 12;
  v27 = *(_QWORD *)&v8[8 * v4] - 4;
  v17 = v7 - 199973504;
  v16 = v4 - 7122427;
  v19 = v7 - 189122263;
  v13 = v7 + 839703936;
  v12 = v7 + 671432938;
  v10 = (char *)&v10 - 207470470;
  v31 = (v4 - 2010124448) & 0x77D018ED;
  v15 = v4 - 1355243706;
  v14 = -7122308;
  v28 = v4 ^ 0x46;
  v29 = v4;
  v11 = v4 + 1346961160;
  v18 = (v4 + 1346961160);
  v30 = v18;
  v23 = vdupq_n_s32(0x37F8058Bu);
  v24 = vdupq_n_s32(0x6FF00B16u);
  v22 = vdupq_n_s32(0x37F8059Bu);
  v21 = a1;
  v26 = *(_QWORD *)a1;
  v9 = v6 - ((2 * v6 + 514966020) & 0x158B6BA0) - 1440835886;
  v32 = (HIBYTE(v9) ^ 0xA) - 2 * ((HIBYTE(v9) ^ 0xA) & (((v4 - 119) | 0x10) + 38) ^ HIBYTE(v9) & 4) + 50;
  v33 = (BYTE2(v9) ^ 0xC5) - ((v9 >> 15) & 0x64) + 50;
  v34 = (BYTE1(v9) ^ 0xB5) + (~(2 * (BYTE1(v9) ^ 0xB5)) | 0x9B) + 51;
  v35 = v9 ^ 0xE2;
  __asm { BR              X13 }
}

uint64_t sub_21E06A608()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v2 - 2147188728;
  if ((v2 - 2147188728) <= 0x40)
    v5 = 64;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((v3 - 736) ^ (3532
                                                                     * ((2147188522 - v0 - v1 + v5 + 206) > 0xE))))
                                          - 12))(909514328);
}

uint64_t sub_21E06A694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;
  int v31;

  v30 = v25 + v24 - 2147188728;
  if (v30 <= 0x40)
    v31 = 64;
  else
    v31 = v30;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * ((3882 * (v27 + 2147188522 + v28 + (v26 ^ 0x59Bu) + v31 <= ((3 * (v26 ^ 0x642) - 2374) ^ (v30 - 1)))) ^ v26)) - 12))(a1, 2147188522, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_21E06A714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _OWORD *a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;

  *(_OWORD *)(a6 + (a9 + a4)) = *a8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((119 * (((26 * ((v27 - 54931219) & 0x3462EFD ^ 0x8Du)) ^ 0x558) != (((v27 - 54931219) & 0x3462EFD ^ 0x1FFFFFF49) & (v26 + v25 - 2372)))) ^ (v27 - 54931219) & 0x3462EFDu)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_21E06A7A4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 + 764) | 0x101) - 2344) * (v0 != v1)) ^ v2))
                            - ((v2 + 1559177623) & 0xA310D16F)
                            + 67))();
}

uint64_t sub_21E06A7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  int v33;
  uint64_t v34;

  *(_BYTE *)(a6 + (a9 + a4)) = *(_BYTE *)(a33 + a8 - 909514328);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * ((((a4 + a9 + 1) < 0x40) * (((((v33 - 22524408) & 0x157ADFA) - 976538329) & 0x234C5DF) + 3006)) ^ (v33 - 22524408) & 0x157ADFAu)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_21E06A870()
{
  JUMPOUT(0x21E06A80CLL);
}

uint64_t sub_21E06A878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int8x16_t v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint8x16_t v53;
  uint64_t v61;
  uint8x16_t v62;
  _DWORD *v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t (*v76)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  int8x16x4_t v77;
  int8x16x4_t v78;

  v76 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(((v36 + 1851) ^ 0xFFFFFFFFFFFFF876) + *(_QWORD *)(v40 + 8 * v36));
  v46 = STACK[0x27C];
  v47 = STACK[0x27C];
  v48 = STACK[0x280];
  v49 = STACK[0x284];
  v50 = LODWORD(STACK[0x280]);
  v51 = LOBYTE(STACK[0x290]) ^ 0xF1;
  if (v51 == 2)
  {
    v61 = LODWORD(STACK[0x288]);
    v78 = vld4q_s8((const char *)&STACK[0x230]);
    v62 = (uint8x16_t)veorq_s8(v78.val[1], v45);
    _Q17 = vmovl_u8(*(uint8x8_t *)v62.i8);
    _Q16 = vmovl_high_u8(v62);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    v67 = (_DWORD *)(v39 + 4 * (v42 + 1043542947));
    v68 = *(v67 - 8) ^ *(_DWORD *)(v39 + 4 * ((v44 ^ (v42 - 1864)) + 1043542947));
    v69 = *(v67 - 16);
    v70 = v69 ^ *(v67 - 14) ^ (v68 + v41 - ((2 * v68) & 0x6FF00B16));
    HIDWORD(v72) = v70 ^ v41;
    LODWORD(v72) = v70;
    v71 = v72 >> 31;
    v73 = (2 * v71) & 0x6FF00B16;
    *v67 = v71 + v41 - v73;
    v74 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * ((1362 * (v38 == 1043542884)) ^ a33)) - 8);
    return v74(v61, 1043542948, v61, v38 - 16, v74, v73, v69, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             v76,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else if (v51 == 1)
  {
    v77 = vld4q_s8((const char *)&STACK[0x230]);
    v52 = (12 * HIDWORD(a29));
    v53 = (uint8x16_t)veorq_s8(v77.val[2], v45);
    _Q21 = vmovl_high_u8(v53);
    _Q20 = vmovl_u8(*(uint8x8_t *)v53.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    return ((uint64_t (*)(uint64_t, char *, char *, char *, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (int)(v52 ^ 0x495)) - 8))(v50, (char *)*(&off_24E21C7C0 + (int)v52 - 130) - 12, (char *)*(&off_24E21C7C0 + (int)v52 - 8) - 12, (char *)*(&off_24E21C7C0 + (int)v52 - 580) - 8, ((_DWORD)v52 - 2144570317) & 0x7FD38BAD, v52, v38 - 15, 1043542947, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             v76,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else
  {
    v75 = LODWORD(STACK[0x284]);
    LODWORD(STACK[0x278]) = 2 * (LODWORD(STACK[0x278]) ^ v43) + v43 - (v37 & (4 * (LODWORD(STACK[0x278]) ^ v43)));
    LODWORD(STACK[0x27C]) = (v47 ^ v43) + (v46 ^ v43) + v43 - (v37 & (2 * ((v47 ^ v43) + (v46 ^ v43))));
    LODWORD(STACK[0x280]) = (v50 ^ v43) + (v48 ^ v43) + v43 - (v37 & (2 * ((v50 ^ v43) + (v48 ^ v43))));
    LODWORD(STACK[0x284]) = (v75 ^ v43) + (v49 ^ v43) + v43 - (v37 & (2 * ((v75 ^ v43) + (v49 ^ v43))));
    return v76(v75, v76, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23);
  }
}

uint64_t sub_21E06B64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  uint64_t v32;
  int v33;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 + 8 * ((((a5 + a32 + 4) < 0xFFFFFFFB) * (((v33 - 111) | 0x41) - 30)) ^ (v33 + 463))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

void sub_21E06B6BC()
{
  JUMPOUT(0x21E06AB80);
}

uint64_t sub_21E06B6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, unsigned int a15, unsigned int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  uint64_t v31;
  int v32;
  _BOOL4 v33;

  if (a16 < a15 != a31 - 311036674 < a13)
    v33 = a31 - 311036674 < a13;
  else
    v33 = a31 - 311036674 > a16;
  return (*(uint64_t (**)(void))(v31 + 8 * ((!v33 * (109 * (a14 & 0x50C768F3 ^ 0x8AD) - 2967)) ^ (v32 + 915))))();
}

uint64_t sub_21E06B774@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a1 + v2 + v1 - 2933 - 56 < (a1 + v2)) * ((4 * v1) ^ 0x2FA2)) ^ v1)))();
}

uint64_t sub_21E06B7C4@<X0>(uint64_t a1@<X5>, char a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v9 = *(_BYTE *)(v7 + a3 + ((v4 - 636) ^ (v6 - 52)));
  *(_BYTE *)(a1 + v3) = v9 - (a2 & (2 * v9)) + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((v3 != 63) * v5) ^ v4)) - 12))();
}

void sub_21E06B810()
{
  JUMPOUT(0x21E06AB74);
}

uint64_t sub_21E06B830@<X0>(int8x16_t *a1@<X5>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;

  *a1 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v5 + (a2 + v4)), vandq_s8(vaddq_s8(*(int8x16_t *)(v5 + (a2 + v4)), *(int8x16_t *)(v5 + (a2 + v4))), v8)), v7);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v6 + 8 * (v2 + 387)) - (v2 ^ v3 ^ 0x40)))((a2 + 64));
}

uint64_t sub_21E06B888()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (v0 & 0xFFFFFFFC) == (((v1 ^ 0x866) + 1945) ^ 0x36361E48);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((4 * v3) | (32 * v3)) ^ v1)) - 8))();
}

uint64_t sub_21E06B8D4@<X0>(uint64_t a1@<X2>, int a2@<W3>, uint64_t a3@<X5>, uint64_t a4@<X7>, int a5@<W8>)
{
  int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  *(_BYTE *)(a3 + (a5 + a2)) = *(_BYTE *)(a4 + v6 - 909514328);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((a1 + ((v5 - 2000) | v8) + 2377) & (v6 + 1)) != v7) | v5))
                            - 8))();
}

uint64_t sub_21E06B92C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t (*a28)(uint64_t))
{
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v30 = 1948972247 * ((1077576451 - ((v29 - 168) | 0x403A8303) + ((v29 - 168) | 0xBFC57CFC)) ^ 0xA5B8912);
  *(_QWORD *)(v29 - 160) = a26;
  *(_DWORD *)(v29 - 152) = v28 - v30 + 2324;
  *(_DWORD *)(v29 - 168) = v30 + 864284138;
  v31 = sub_21E0A4DD0(v29 - 168);
  return a28(v31);
}

uint64_t sub_21E06B9A4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = a5 < 0x3D8B8A7C;
  if (v7 == a1 + 728640702 < ((v5 + 1668512072) & 0x9C8C7E47) + 1032555067)
    v7 = a1 + 728640702 < a5;
  return (*(uint64_t (**)(void))(v6 + 8 * (v5 ^ (4 * !v7))))();
}

uint64_t sub_21E06BA1C@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X5>, char a5@<W6>, int a6@<W8>)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = a2 < v10;
  *(_BYTE *)(a4 + (v7 - 2160 + v8 + v6)) = *(_BYTE *)(a3 + (a6 + v9))
                                                       - (a5 & (2 * *(_BYTE *)(a3 + (a6 + v9))))
                                                       + 50;
  v13 = a6 + 1 + a1;
  v14 = v12 ^ (v13 < v10);
  v15 = v13 < a2;
  if (!v14)
    v12 = v15;
  return (*(uint64_t (**)(void))(v11 + 8 * (v7 ^ (4 * !v12))))();
}

uint64_t sub_21E06BA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v29 = 1948972247 * ((v28 + 370653895 - 2 * ((v28 - 168) & 0x1617BB6F)) ^ 0xA3894E81);
  *(_QWORD *)(v28 - 160) = a26;
  *(_DWORD *)(v28 - 152) = v27 - v29 + 2378;
  *(_DWORD *)(v28 - 168) = a11 + v29;
  v30 = sub_21E0A4DD0(v28 - 168);
  v31 = STACK[0x274] & 0x3F;
  *((_BYTE *)&STACK[0x230] + (v31 ^ 0x3C)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((((v31 ^ 0x3C) > 0x37) * ((v27 ^ 0xDD3) - 380)) ^ v27))
                                          - 12))(v30);
}

uint64_t sub_21E06BB7C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((55 * (a1 != ((169 * (v1 ^ 0xD9F)) ^ 0x8AA))) ^ v1)) - 12))();
}

uint64_t sub_21E06BBCC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((887 * ((v1 ^ 0x8E2 ^ v0 ^ (((v1 - 2129) | 0x33u) - 3)) > 7)) ^ v1)))();
}

uint64_t sub_21E06BC08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(a6 + v7 + v9) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * ((2769 * (((v6 - 1273275384) & 0x4BE4ABFF) - 2167 == (v8 & 0x38))) ^ (v6 + 725)))
                            - 4))();
}

uint64_t sub_21E06BC68()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2876 * (v0 - 207471030 < (v2 ^ 0x4Fu))) ^ (v2 + 414))) - 8))();
}

uint64_t sub_21E06BCAC()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v0;
  v5 = v1 + v0;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((((v3 ^ 0x15A) + 54784722) & 0xFCBC0C77 ^ 0xFFFFF83B)
                                                + (v3 ^ 0x15A)
                                                + 1688)
                                               * ((unint64_t)(v6 - v4 + 207471030) < 8)) ^ v3 ^ 0x15A))
                            - 8))();
}

uint64_t sub_21E06BD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(a9 + v11) = v13;
  return (*(uint64_t (**)(void))(v12 + 8 * ((((v10 & 0xFFFFFFFFFFFFFFF8) == 8) * (79 * (v9 ^ 0x7C1) - 308)) | v9)))();
}

uint64_t sub_21E06BD68()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) | v0)))();
}

uint64_t sub_21E06BD88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 197) ^ 0x35E) * (v0 == v1)) ^ v2))
                            - ((7 * (v2 ^ 0x12Du)) ^ 0x7FLL)))();
}

uint64_t sub_21E06BDC8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + a2 + v4) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((4 * ((unint64_t)(a2 + 1 + v4) < 0x38)) | (((unint64_t)(a2 + 1 + v4) < 0x38) << 7)) ^ (v2 + 414)))
                            - 8))();
}

void sub_21E06BDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, int a10, char a11)
{
  char v11;
  int v12;
  int v13;
  char v14;
  int v15;
  char v16;
  unint64_t v17;
  unsigned int v18;
  char v19;
  char v20;
  unsigned int v21;
  unsigned int v22;
  unint64_t v23;

  v12 = LOBYTE(STACK[0x290]) ^ 0xF1;
  if (v12 == 1)
  {
    v14 = a11 & 0xF9;
    v21 = STACK[0x274];
    v22 = STACK[0x270];
    LOBYTE(STACK[0x268]) = ((8 * LOBYTE(STACK[0x274])) ^ 0xE0) - ((2 * ((8 * LOBYTE(STACK[0x274])) ^ 0xE0)) & 0x60) + 50;
    v19 = 100;
    LOBYTE(STACK[0x269]) = ((v21 >> 5) ^ 0xE9) - ((((v21 >> 5) ^ 0xFFFFFFE9) << ((a11 & 0xF9) - 120)) & 0x64) + 50;
    LOBYTE(STACK[0x26A]) = ((v21 >> 13) ^ 0xB) - 2 * (((v21 >> 13) ^ 0xB) & 0x36 ^ (v21 >> 13) & 4) + 50;
    LOBYTE(STACK[0x26B]) = ((v21 >> 21) ^ 0xD5) - 2 * (((v21 >> 21) ^ 0xD5) & 0x3A ^ (v21 >> 21) & 8) + 50;
    HIDWORD(v23) = v22 ^ 0x17;
    LODWORD(v23) = v21 ^ 0x60000000;
    LOBYTE(STACK[0x26C]) = (v23 >> 29) - ((2 * (v23 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x26D]) = ((v22 >> 5) ^ 0x9E) + (~(2 * ((v22 >> 5) ^ 0x9E)) | 0x9B) + 51;
    LOBYTE(STACK[0x26E]) = ((v22 >> 13) ^ 0x4B) + (~(2 * ((v22 >> 13) ^ 0x4B)) | 0x9B) + 51;
    v18 = v22 >> 21;
    v20 = (v22 >> 21) ^ 0x85;
  }
  else
  {
    if (v12 != 2)
      goto LABEL_6;
    v13 = STACK[0x270];
    v18 = STACK[0x274];
    v14 = v11 ^ 0xE;
    v15 = (LODWORD(STACK[0x270]) >> ((v11 ^ 0xE) - 108)) ^ 0x4B;
    v16 = ((LODWORD(STACK[0x270]) >> 5) ^ 0x9E) - (a7 & (2 * ((LODWORD(STACK[0x270]) >> 5) ^ 0x9E)));
    LOBYTE(STACK[0x268]) = ((LODWORD(STACK[0x270]) >> 21) ^ 0x85) - (a7 & (LODWORD(STACK[0x270]) >> 20)) + 50;
    LOBYTE(STACK[0x269]) = v15 - (a7 & (2 * v15)) + 50;
    HIDWORD(v17) = v13 ^ 0x17;
    LODWORD(v17) = v18 ^ 0x60000000;
    LOBYTE(STACK[0x26A]) = v16 + 50;
    LOBYTE(STACK[0x26B]) = (v17 >> 29) - (a7 & (2 * (v17 >> 29))) + 50;
    LOBYTE(STACK[0x26C]) = ((v18 >> 21) ^ 0xD5) - 2 * (((v18 >> 21) ^ 0xD5) & 0x3A ^ (v18 >> 21) & 8) + 50;
    LOBYTE(STACK[0x26D]) = ((v18 >> 13) ^ 0xB) - 2 * (((v18 >> 13) ^ 0xB) & 0x36 ^ (v18 >> 13) & 4) + 50;
    LOBYTE(STACK[0x26E]) = ((v18 >> 5) ^ 0xE9) - (a7 & (2 * ((v18 >> 5) ^ 0xE9))) + 50;
    LOBYTE(v18) = (8 * v18) ^ 0xE0;
    v19 = 96;
    v20 = v18;
  }
  LOBYTE(STACK[0x26F]) = v20 - (v19 & (2 * v18)) + (((v14 - 25) | 0x17) ^ 0x45);
LABEL_6:
  JUMPOUT(0x21E06AB74);
}

uint64_t sub_21E06C060()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 == v0) ^ v2) & 1) * (((v2 - 2075) | 0x13) ^ 0x9D)) ^ v2)))();
}

uint64_t sub_21E06C0A8@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v2 + v5) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v2 + v5 + 1) < 0x40) * v3) ^ (a2 + 2056))))();
}

void sub_21E06C0DC()
{
  JUMPOUT(0x21E06AB68);
}

void sub_21E06C564(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1990461019 * ((-1519284989 - (a1 | 0xA5718D03) + (a1 | 0x5A8E72FC)) ^ 0x756AD075);
  __asm { BR              X9 }
}

uint64_t sub_21E06C62C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned int v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8 * (int)(v2 - 322)))(264, 4288951842) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2636 * v3) ^ v2))
                            - (((v2 + 373881986) & 0x29B70BFF)
                             - 2027)
                            + 900))();
}

uint64_t sub_21E06C688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  int v11;
  unint64_t v12;

  *(_QWORD *)a1 = 8960;
  strcpy((char *)(a1 + 8), "222222222222222222222222222222222222");
  *(_BYTE *)(a1 + 45) = 0;
  *(_WORD *)(a1 + 46) = 0;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  strcpy((char *)(a1 + 64), "222222222222222222222222222222222222");
  *(_BYTE *)(a1 + 101) = 0;
  *(_WORD *)(a1 + 102) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  v12 = (((v11 ^ 0xCu) - 0x739AD0202003C2) ^ (unint64_t)&a10)
      + ((2 * (_QWORD)&a10) & 0xFF18CA5FBFBFFF80)
      + 0x61F7BFD6F3B9F63ELL;
  *(_QWORD *)(a1 + 112) = 0;
  *(_QWORD *)(a1 + 120) = 0;
  *(_WORD *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 131) = 0;
  *(_BYTE *)(a1 + 259) = (v12 ^ ((v11 ^ 0xC) + 54)) * (v12 + 17);
  *(_BYTE *)(a1 + 258) = ((v12 + 1) ^ 0xBA) * (v12 + 18);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * v11) - 12))();
}

void sub_21E06C774()
{
  JUMPOUT(0x21E06C72CLL);
}

uint64_t sub_21E06C780(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 0x7CC7733BDE30592FLL) = result + 0x3AF2004723E7A171;
  *(_DWORD *)(v1 + 24) = 939001227;
  return result;
}

void sub_21E06C7CC(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 2009815553 * (((a1 | 0x6B3D1094) - (a1 & 0x6B3D1094)) ^ 0x9A363ED1);
  __asm { BR              X16 }
}

uint64_t sub_21E06C930()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((97
                                * ((((v0 ^ 0x40D) + 859814860) & (2 * v1) ^ 0x223900C6)
                                 + (v1 ^ 0xCCE35F9C)
                                 - 8755220
                                 + 2490 == ((v0 + 656646040) & 0xD8DC5F59 ^ 0x191A55B8))) ^ v0)))();
}

uint64_t sub_21E06C9B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v5 + v4 + a4 - 429907700 - 561) < 8)
                                * (((a4 - 1824749134) & 0x6CC376E7) - 684)) ^ a4)))();
}

uint64_t sub_21E06CA0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * ((4084
                                                                         * ((int)a1 + a6 - 16 >= ((a5 - 1568166461) & 0x5D7852CEu)
                                                                                               - 724)) ^ a5)))(a1, a2, a3, a2);
}

uint64_t sub_21E06CA50(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BOOL4 v23;

  v15 = a9 - 0x123E11F758B2DECCLL + (v13 + v12 + a1);
  v16 = ((_BYTE)v13 + (_BYTE)v12 + (_BYTE)a1) & 0xF;
  v17 = v16 + v9 - v15;
  v18 = (v16 | v10) - v15;
  v19 = (v16 | v11) - v15;
  v23 = (unint64_t)(a3 - (a9 - 0x123E11F758B2DECCLL) - 0xB73EF3BB41960BFLL) > 0xF
     && v17 > 0xF
     && v18 + ((a5 + 2810) ^ 0xD28uLL) >= (unint64_t)(a5 ^ 0xF6u) - 692
     && v19 > 0xF;
  return (*(uint64_t (**)(void))(v14 + 8 * ((2915 * v23) ^ a5)))();
}

uint64_t sub_21E06CAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((((a6 - 290) ^ 0xC1F) * (v6 > 0xF)) ^ a6))
                                                           - (a6 ^ 0xB7Cu)
                                                           + 1604))(a1, a2, 0);
}

uint64_t sub_21E06CB2C(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  int v54;
  uint64_t v55;
  unsigned int v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16x4_t v61;
  int8x16x4_t v62;

  *(_DWORD *)(v55 - 144) = a2 + 5;
  v61.val[1].i64[0] = ((_BYTE)a2 + 12) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v56 = v54 + v53 + a1;
  v57.i64[0] = 0x9393939393939393;
  v57.i64[1] = 0x9393939393939393;
  v61.val[0].i64[0] = ((_BYTE)v54 + (_BYTE)v53 + (_BYTE)a1) & 0xF;
  v61.val[0].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v58.i64[0] = vqtbl4q_s8(v61, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v62.val[0].i64[1] = *(_DWORD *)(v55 - 144) & 0xF;
  v62.val[1].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v62.val[2].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v62.val[3].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v62.val[0].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v62.val[1].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v62.val[2].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v62.val[3].i64[0] = a2 & 0xF;
  v58.i64[1] = vqtbl4q_s8(v62, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v59 = vrev64q_s8(vmulq_s8(v58, v57));
  *(int8x16_t *)(*(_QWORD *)(v55 - 136) - 15 + v56) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v49 + (v56 & 0xF) - 15), *(int8x16_t *)(v48 - 15 + v56)), veorq_s8(*(int8x16_t *)((v56 & 0xF) + v50 - 11), *(int8x16_t *)(v51 + (v56 & 0xF) - 15))), vextq_s8(v59, v59, 8uLL));
  return (*(uint64_t (**)(void))(a48 + 8 * ((52 * (a4 - (v52 & 0xFFFFFFF0) == 1600)) ^ a4)))();
}

void sub_21E06CC94()
{
  JUMPOUT(0x21E06CC24);
}

uint64_t sub_21E06CC9C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ (1464 * (v1 != 0xD57C8167))))
                                          - ((v0 + 1656692149) & 0x9D40DD9F)
                                          + 1297))(1444486021);
}

uint64_t sub_21E06CCFC(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  _BOOL4 v16;

  v12 = v7 > 0xD7E988F3;
  *(_BYTE *)(v11 + (a1 - 1444486021)) = *(_BYTE *)(v2 + ((a1 - 1444486021) & 0xFLL)) ^ *(_BYTE *)(v1 + (a1 - 1444486021)) ^ *(_BYTE *)(((a1 - 1444486021) & 0xFLL) + v3 + 4) ^ *(_BYTE *)(v4 + ((a1 - 1444486021) & 0xFLL)) ^ (-109 * ((a1 + 123) & 0xF));
  v13 = a1 - 771925112;
  v14 = (a1 + 1);
  v15 = v12 ^ (v13 < ((v5 - 1195) ^ v6));
  v16 = v13 < v8;
  if (!v15)
    v12 = v16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * ((v12 * v9) ^ v5)) - 8))(v14);
}

uint64_t sub_21E06CD94(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 == a3) ^ (a4 - 49)) & 1) * (a4 - 1578)) ^ (a4 + 884)))
                            - 8))();
}

uint64_t sub_21E06CDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v9
                                                                                        + 8
                                                                                        * ((((v8 & 8) == (((a8 - 2719) | 0x244) ^ 0x2C4))
                                                                                          * ((a8 - 2719) ^ 0xF6)) ^ a8))
                                                                            - 8))(a1, a2, a3, (a2 - a3), (a8 - 2719) ^ 0xC8Au);
}

uint64_t sub_21E06CE14(int a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  unsigned int v59;
  int v60;
  char v61;
  uint64_t v62;
  int8x16x4_t v64;

  v58 = (a5 - 656) | 0x280;
  *(_DWORD *)(v56 - 160) = v52;
  v59 = (v58 ^ 0xFFFFF402) & v52;
  *(_QWORD *)(v56 - 144) = v48 - 7;
  *(_QWORD *)(v56 - 152) = v57 - 7;
  v60 = -a3;
  *(_DWORD *)(v56 - 168) = v59;
  v61 = v55 + v54 + v53;
  *(_DWORD *)(v56 - 176) = (v58 - 2998) | 0x980;
  v62 = (v60 + v55 + v54 + a1);
  v64.val[0].i64[0] = ((_BYTE)v60 + (_BYTE)v55 + (_BYTE)v54 + (_BYTE)a1) & 0xF;
  v64.val[0].i64[1] = ((_BYTE)v60 + v61 - 57) & 0xF;
  v64.val[1].i64[0] = ((_BYTE)v60 + v61 - 58) & 0xF;
  v64.val[1].i64[1] = ((_BYTE)v60 + v61 - 59) & 0xF;
  v64.val[2].i64[0] = ((_BYTE)v60 + v61 + ((a5 + 112) | 0x80) + 74) & 0xF;
  v64.val[2].i64[1] = ((_BYTE)v60 + v61 - 61) & 0xF;
  v64.val[3].i64[0] = ((_BYTE)v60 + v61 - 62) & 0xF;
  v64.val[3].i64[1] = ((_BYTE)v60 + v61 - 63) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v56 - 152) + v62) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v49 + (v62 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v56 - 144) + v62)), veor_s8(*(int8x8_t *)((v62 & 0xF) + v50 - 3), *(int8x8_t *)(v51 + (v62 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v64, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x9393939393939393)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a48 + 8 * ((2032 * (v60 != 8 - v59)) ^ v58)) - 12))((__n128)xmmword_21E17F900);
}

void sub_21E06CF6C()
{
  JUMPOUT(0x21E06CE94);
}

uint64_t sub_21E06CF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                                  + 8 * ((685 * (*(_DWORD *)(v6 - 160) != *(_DWORD *)(v6 - 168))) ^ *(_DWORD *)(v6 - 176)))
                                                                                      - 8))(a1, a2, a3, a4, a5, (118 * (*(_DWORD *)(v6 - 176) ^ 0x9C2) + 1244859611) & 0xB5CCF579);
}

uint64_t sub_21E06CFF0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)(v13 + (a4 - 421154978)) = *(_BYTE *)(v8 + ((a4 - 421154978) & 0xFLL)) ^ *(_BYTE *)(v7 + (a4 - 421154978)) ^ *(_BYTE *)((((_BYTE)a4 + 94) & 0xF) + v9 + 4) ^ *(_BYTE *)(v10 + (((_BYTE)a4 + 94) & 0xF)) ^ (-109 * ((a4 + 94) & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((1794 * (a4 + 15 * (a7 ^ 0x293) - 1306 == v11)) ^ (a7 + 2182)))
                            - 12))();
}

uint64_t sub_21E06D06C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int8x16_t v43;

  v43 = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v39 + 32) - 0x711E505EE86A62E7), (int8x16_t)xmmword_21E17F950);
  *(int8x16_t *)(v41 - 128) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v39 + 8) - 0x17C1CEC768E2A265), (int8x16_t)xmmword_21E17F940);
  *(int8x16_t *)(v41 - 112) = v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (int)(((((v42 == 0) ^ a6) & 1) * (((a6 + 977278166) & 0xC5BFEF99) + 945)) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_21E06D108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  int v42;

  v42 = ((((73 * (v39 ^ 0x9E)) ^ 0xE) + BYTE4(a11)) & 0xF) != 0 || HIDWORD(a11) == 709201343;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 + 8 * (((8 * v42) | (v42 << 6)) ^ v39)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_21E06D164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,int a50)
{
  uint64_t v50;
  int v51;
  _BOOL4 v52;

  v51 = a12 - ((2 * a48) & 0x25738490) + a50 + ((a50 - 801) ^ 0x68743BE7) - 2687;
  v52 = ((2 * v51) & 0x7FF71BDE ^ 0x25730090) + (v51 ^ 0x2D424FA7) + 1824390840 == 750357671;
  return ((uint64_t (*)(void))(*(_QWORD *)(v50 + 8 * (((8 * v52) | (32 * v52)) ^ a50)) - 12))();
}

uint64_t sub_21E06D224(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((a1 + v2 + ((v1 + 1546352082) & 0xA3D482CF ^ 0x400470D5) < 8)
                                          * ((v1 - 1995865127) & 0x76F677C4 ^ 0x584)) | v1))
                            - 4))();
}

uint64_t sub_21E06D2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8
                                   * ((((a7 ^ 0x57) + ((a7 - 1404) | 0x280) + 1049) * (a8 >> 4 == 201308383)) ^ a7)))();
}

uint64_t sub_21E06D304(int a1, int a2, int a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BOOL4 v26;
  int v29;

  v15 = a2 + (a6 ^ 0x449) + a1 + v12 - 478;
  v16 = a9 + (a6 ^ 0xEDC1EE08A74D24A2) + v15;
  v17 = (a1 + v12) & 0xF;
  v18 = v17 - v15;
  v19 = v9 + v18;
  v20 = v9 + v17 + 1;
  v21 = v11 + v18;
  v22 = v11 + v17 + 1;
  v23 = v18 + v10 + 3;
  v24 = v17 + v10 + 4;
  v26 = v14 < v20 && v19 < v16;
  if (v14 < v22 && v21 < v16)
    v26 = 1;
  v29 = v14 < v24 && v23 < v16 || v26;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v29 * a3) ^ a6)))();
}

uint64_t sub_21E06D3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v8
                                                             + 8
                                                             * (((v7 >= ((a7 + 232529438) & 0xF223E15B) - 328)
                                                               * ((a7 + 2754) ^ 0xC80)) | a7)))(a1, a2, 0);
}

uint64_t sub_21E06D3F0(int a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16x4_t v16;
  int8x16x4_t v17;

  v16.val[1].i64[0] = ((_BYTE)v6 + 6) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)v6 + 5) & 0xF;
  v16.val[2].i64[0] = ((_BYTE)v6 + 4) & 0xF;
  v16.val[2].i64[1] = ((_BYTE)v6 + 3) & 0xF;
  v16.val[3].i64[0] = ((_BYTE)v6 + 2) & 0xF;
  v16.val[3].i64[1] = ((_BYTE)v6 + 1) & 0xF;
  v11 = a1 + v8 + a2;
  v12.i64[0] = 0x8181818181818181;
  v12.i64[1] = 0x8181818181818181;
  v16.val[0].i64[0] = v11 & 0xF;
  v16.val[0].i64[1] = ((_BYTE)v6 + 7) & 0xF;
  v13.i64[0] = vqtbl4q_s8(v16, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v17.val[0].i64[1] = ((_BYTE)v6 - 1) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)v6 + 13) & 0xF;
  v17.val[2].i64[1] = (v6 + 11) & 0xF;
  v17.val[3].i64[1] = (v6 + 9) & 0xF;
  v17.val[0].i64[0] = v6 & 0xF;
  v17.val[1].i64[0] = ((_BYTE)v6 + 14) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)v6 + 12) & 0xF;
  v17.val[3].i64[0] = (v6 + 10) & 0xF;
  v13.i64[1] = vqtbl4q_s8(v17, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v14 = vrev64q_s8(vmulq_s8(v13, v12));
  *(int8x16_t *)(v10 - 15 + v11) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v3 + v16.val[0].i64[0] - 15), *(int8x16_t *)(v10 - 15 + v11)), veorq_s8(*(int8x16_t *)(v5 + v16.val[0].i64[0] - 15), *(int8x16_t *)(v16.val[0].i64[0] + v4 - 12))), vextq_s8(v14, v14, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((2739 * ((v7 & 0xFFFFFFF0) == 16)) ^ v2))
                            - ((v2 + 842) | 0x140u)
                            + 1502))();
}

void sub_21E06D548()
{
  JUMPOUT(0x21E06D4C8);
}

uint64_t sub_21E06D554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char v68;
  int v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  unsigned int v74;
  char *v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  char *v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  char v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  unsigned int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  uint64_t v209;
  int v210;
  unsigned int v211;
  char *v212;
  int v213;
  unsigned int v214;
  char *v215;
  unsigned int v216;
  char *v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  unint64_t v236;
  int v237;
  unsigned int v238;
  int v239;
  unsigned __int8 *v240;
  int v241;
  uint64_t v242;
  unsigned int v243;
  unsigned int v244;
  uint64_t v245;
  unsigned int v246;
  uint64_t v247;
  unsigned int v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  int v252;
  uint64_t v253;
  int v254;
  int v255;
  uint64_t v256;
  unsigned int v257;
  int v258;
  uint64_t v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  int v267;
  unsigned int v268;
  char *v269;
  char *v270;
  int v271;
  char *v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  char *v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  int v286;
  unsigned int v287;
  int v288;
  int v289;
  int v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  int v310;
  int v311;
  int v312;
  unsigned int v313;
  int v314;
  unsigned int v315;
  unsigned int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unint64_t v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  int v350;
  unint64_t v351;
  int v352;
  int v353;
  unsigned int v354;
  int v355;
  int v356;
  int v357;
  unsigned int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  int v365;
  int v366;
  unsigned int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  int v372;
  int v373;
  unsigned int v374;
  int v375;
  int v376;
  int v377;
  int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  unsigned int v387;
  int v388;
  int v389;
  int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  int v395;
  int v396;
  unsigned int v397;
  int v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  int v403;
  unsigned int v404;
  int v405;
  int v406;
  int v407;
  unsigned int v408;
  int v409;
  int v410;
  int v411;
  int v412;
  unsigned int v413;
  int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  int v419;
  int v420;
  int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  int v425;
  unsigned int v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  int v430;
  unsigned int v431;
  unsigned int v432;
  int v433;
  int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  char *v439;
  int v440;
  int v441;
  int v442;
  int v443;
  char *v444;
  int v445;
  int v446;
  int v447;
  int v448;
  char *v449;
  unint64_t v450;
  uint64_t v451;
  uint64_t v452;
  int v453;
  _BYTE *v454;
  int v455;
  unsigned int v456;
  unsigned int v457;
  char *v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  int v462;
  int v463;
  uint64_t v464;
  char v465;
  char v466;
  int v467;
  char *v468;
  uint64_t v469;
  char *v470;
  unint64_t v471;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  char *v486;
  char *v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  uint64_t v497;
  unint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  unsigned int v506;
  unsigned int v507;

  *(_DWORD *)(v49 - 144) = v48 ^ 0x44B;
  v50 = (char *)*(&off_24E21C7C0 + v48 - 1088) - 8;
  v51 = v48;
  v52 = v50[*(_BYTE *)(v49 - 112) ^ 0x2B ^ v48 ^ 0x4B];
  v53 = (uint64_t)*(&off_24E21C7C0 + v51 - 1631);
  v54 = (char *)*(&off_24E21C7C0 + v51 - 1445) - 12;
  v55 = v54[*(unsigned __int8 *)(v49 - 111) ^ 0x4DLL];
  v56 = (char *)*(&off_24E21C7C0 + v51 - 1305) - 8;
  v57 = v56[*(unsigned __int8 *)(v49 - 110) ^ 0x51];
  v58 = (uint64_t)*(&off_24E21C7C0 + v51 - 1323);
  v59 = *(_BYTE *)(v58 + (*(unsigned __int8 *)(v49 - 109) ^ 0x4ALL));
  v60 = v50[*(unsigned __int8 *)(v49 - 108) ^ 0xFALL];
  *(_QWORD *)(v49 - 240) = v60;
  *(_QWORD *)(v49 - 224) = v54[*(unsigned __int8 *)(v49 - 107) ^ 0x27];
  v61 = *(unsigned __int8 *)(v49 - 106);
  *(_QWORD *)(v49 - 176) = v56[v61 ^ 0xCE];
  v62 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v49 - 105) ^ 0x84));
  v63 = v50[*(unsigned __int8 *)(v49 - 104) ^ 0x9ELL];
  *(_QWORD *)(v49 - 200) = v63;
  *(_QWORD *)(v49 - 216) = v54[*(unsigned __int8 *)(v49 - 103) ^ 0x83];
  *(_QWORD *)(v49 - 184) = v56[*(unsigned __int8 *)(v49 - 102) ^ 0x3ELL];
  v53 -= 8;
  v64 = v50[*(unsigned __int8 *)(v49 - 100) ^ 7];
  v65 = v54[*(unsigned __int8 *)(v49 - 99) ^ 0x65];
  v66 = v56[*(unsigned __int8 *)(v49 - 98) ^ 0x31];
  v67 = *(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v49 - 101) ^ 8));
  v68 = *(_BYTE *)(v58 + (*(unsigned __int8 *)(v49 - 97) ^ 0x2FLL));
  v69 = *(_DWORD *)(v53 + 4 * (v52 ^ 0xC6));
  *(_DWORD *)(v49 - 232) = *(_DWORD *)(v53 + 4 * (v60 ^ 0x71));
  *(_DWORD *)(v49 - 192) = *(_DWORD *)(v53 + 4 * (v63 ^ 0xDE));
  v70 = *(_DWORD *)(v53 + 4 * (v64 ^ 0xAD));
  *(_DWORD *)(v49 - 248) = v62 ^ 0xA7;
  *(_DWORD *)(v49 - 208) = v67 ^ 0xA7;
  v71 = v65 ^ 0x89;
  v72 = (char *)*(&off_24E21C7C0 + (v51 ^ 0x4A6)) - 12;
  v73 = (char *)*(&off_24E21C7C0 + v51 - 1420) - 4;
  v74 = *(_DWORD *)&v73[4 * (v66 ^ 0x55)];
  v75 = (char *)*(&off_24E21C7C0 + (v51 ^ 0x75F)) - 8;
  v76 = v75[((v68 ^ 0x9F) + 64)];
  LODWORD(v60) = (v76 >> 2) ^ ((~v76 & 0xE0) >> 5);
  v77 = v64 ^ (*(_DWORD *)&v72[4 * v71] + 419941712) ^ v70 ^ v74 ^ ((((*(_DWORD *)&v72[4 * v71] + 419941712) >> 3) & 0x11E7B256)
                                                                  - (((*(_DWORD *)&v72[4 * v71] + 419941712) >> 2) & 0x23032024)
                                                                  + 931257786) ^ (((v74 >> 5) ^ (v74 >> 2) ^ 0x270B587D)
                                                                                - ((2
                                                                                  * ((v74 >> 5) ^ (v74 >> 2) ^ 0x270B587D)) & 0x4CB15CFC)
                                                                                - 1504137602);
  v78 = v77 ^ 0x9E ^ (v76 ^ ((v60 ^ 0x3A) - 2 * ((v60 ^ 0x3A) & 0xEF ^ v60 & 1) - 82)) ^ 0x44;
  v79 = (char *)*(&off_24E21C7C0 + (int)(v51 & 0xD38C7319)) - 4;
  v80 = *(_DWORD *)&v79[4 * (BYTE2(v77) ^ 0x73)];
  v81 = -435650045 * v80 - ((202441734 * v80 + 185820930) & 0x2D2C579E) - 1138761904;
  v82 = *(_DWORD *)&v72[4 * (v55 ^ 0x96)] + 419941712;
  v83 = *(_DWORD *)&v73[4 * (v57 ^ 0xD6)];
  LODWORD(v61) = (v83 ^ 0x8D9EB714) >> (v61 & 3 ^ 1) >> (v61 & 3 ^ 2);
  v84 = (v83 & 0x800 ^ 0x7B7B5E5B) + 2 * (v83 & 0x800);
  v85 = ((((_DWORD)v61 - ((2 * (_DWORD)v61) & 0x57D8A9A8) + 736908500) ^ v83) >> 2) ^ 0x299CB8F0;
  v86 = v84 - 269156353;
  v87 = v84 - 2071682651;
  v88 = -420758347 - v84;
  if ((v85 & v87) == 0)
    v88 = v86;
  v89 = v85 - 1802526298 + v88;
  v90 = v75[((v59 ^ 0xA5) + 64)];
  v91 = (v90 >> 2) ^ ((~v90 & 0xE0) >> 5);
  v92 = v52 ^ v82 ^ v69 ^ v83 & 0xFFFFF7FF ^ (((v82 >> 3) & 0x11E7B256) - ((v82 >> 2) & 0x23032024) + 931257786) ^ v90 ^ 0xDE ^ ((v91 ^ 0x3A) - 2 * ((v91 ^ 0x3A) & 0x35 ^ v91 & 1) + 52) ^ v89;
  *(_DWORD *)(v49 - 168) = v92;
  v93 = BYTE1(v77) ^ 0xCA;
  v94 = (char *)*(&off_24E21C7C0 + v51 - 1678) - 8;
  v95 = *(_DWORD *)&v94[4 * (BYTE1(v77) ^ 0xFE)];
  *(_DWORD *)(v49 - 152) = v51;
  v96 = (uint64_t)*(&off_24E21C7C0 + (v51 & 0x9FB397D));
  v97 = HIBYTE(v77) ^ 0x32;
  v98 = (char *)*(&off_24E21C7C0 + (v51 ^ 0x4C4)) - 4;
  v99 = (v81 >> 7) ^ (v81 >> 4) ^ v95 ^ *(_DWORD *)(v96 + 4 * (v78 ^ 0xE0u)) ^ (v98[v97] + 126) ^ v93 ^ ((v78 ^ 0xC6) - 583605306 + ((2 * (v78 ^ 0xC6) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ (v93 + 966575880 - ((2 * v93 - 1673939408) & 0x943997E0)) ^ 0x1444EEB;
  v100 = v92 ^ v81 ^ (v99 - ((2 * v99) & 0x2D2C579E) + 378940367);
  *(_DWORD *)(v49 - 160) = v100;
  v101 = *(_DWORD *)&v72[4 * (*(_QWORD *)(v49 - 224) ^ 0x43)] + 419941712;
  v102 = *(_DWORD *)&v73[4 * (*(_QWORD *)(v49 - 176) ^ 0x7ALL)];
  v103 = v75[(*(_DWORD *)(v49 - 248) + 64) ^ 0x9BLL];
  v104 = (v103 >> 2) ^ ((~v103 & 0xE0) >> 5);
  v105 = *(_QWORD *)(v49 - 240) ^ v102 ^ v101 ^ *(_DWORD *)(v49 - 232) ^ (((v101 >> 3) & 0x11E7B256)
                                                                        - ((v101 >> 2) & 0x23032024)
                                                                        + 931257786) ^ (((v102 >> 5) ^ (v102 >> 2) ^ 0x270B587D)
                                                                                      - ((2
                                                                                        * ((v102 >> 5) ^ (v102 >> 2) ^ 0x270B587D)) & 0x3715AB3E)
                                                                                      + 462083487) ^ v103 ^ 0x69 ^ ((v104 ^ 0x3A) - 2 * ((v104 ^ 0x3A) & 7 ^ v104 & 4) - 125);
  *(_DWORD *)(v49 - 176) = v105;
  v106 = *(_DWORD *)&v72[4 * (*(_QWORD *)(v49 - 216) ^ 0xALL)];
  v107 = v106 - 38002945 + (~(2 * v106 + 839883424) | 0x36975CA3);
  v108 = ((v107 >> 3) ^ 0x2EE89063) & 0x234F0C8E ^ 0xC7B95895 ^ (((2 * ((v107 >> 3) ^ 0x2EE89063)) & 0x4517830)
                                                               - (((v107 >> 3) ^ 0x2EE89063) & 0x32A8BED8)
                                                               - 175029563);
  v109 = ((2 * v108) & 0x2754DCD8) - v108 - 1403678318;
  v110 = v107 ^ 0x955037C5;
  v107 ^= 0xE4B451AE;
  v111 = (v107 + (v110 ^ v109) + 1) ^ ((v109 ^ 0x71E4666B) + 1);
  v112 = (v109 ^ 0xDAD268EA ^ (v111 - ((2 * v111) & 0xA993E2FC) + 1422520702)) + v107;
  v113 = *(_DWORD *)&v73[4 * (*(_QWORD *)(v49 - 184) ^ 0xD7)];
  v114 = v75[(*(_DWORD *)(v49 - 208) + 64) ^ 0xE0];
  v115 = *(_QWORD *)(v49 - 200) ^ v113 ^ *(_DWORD *)(v49 - 192) ^ (((v113 >> 5) ^ (v113 >> 2) ^ 0x270B587D)
                                                                 - ((2 * ((v113 >> 5) ^ (v113 >> 2) ^ 0x270B587D)) & 0x6C9CD114)
                                                                 + 911108234) ^ v114 ^ 0xB1 ^ (((v114 >> 2) ^ (v114 >> 5) ^ 0x3D) - ((2 * ((v114 >> 2) ^ (v114 >> 5) ^ 0x3D)) & 0x36) + 91) ^ 0x2D ^ (v112 - ((2 * v112) & 0x6F03BB74) + 931257786);
  v116 = v100 ^ 0x1FD24A84;
  v117 = ((v105 ^ 0x96146260) - ((2 * (v105 ^ 0x96146260)) & 0x8352A78A) - 1045867579) ^ v100 ^ 0x1FD24A84;
  *(_DWORD *)(v49 - 216) = v117;
  HIDWORD(v504) = v115;
  LODWORD(v504) = v115 ^ v117 ^ 0xB9085165;
  v118 = v504 ^ 0x215AA92 ^ v78;
  v119 = *(_DWORD *)&v79[4 * (BYTE2(v118) ^ 0xB9)];
  v120 = -435650045 * v119 - ((-871300090 * v119 + 1259562754) & 0xAA95EFDA) - 86725778;
  v121 = (((v120 >> 7) ^ (v120 >> 4) ^ 0x5FE3A91)
        - ((2 * ((v120 >> 7) ^ (v120 >> 4) ^ 0x5FE3A91)) & 0xA95EFDA)
        + 1430976493) ^ v120;
  v122 = v121 - ((2 * v121) & 0x8352A78A) - 1045867579;
  v123 = v504 ^ 0x92 ^ v78;
  v124 = v123 ^ 0xA5;
  v125 = *(_DWORD *)(v96 + 4 * (v123 ^ 0x83u));
  LODWORD(v503) = (v98[HIBYTE(v118) ^ 0x40] + 126) ^ *(_DWORD *)&v94[4 * (BYTE1(v118) ^ 0x54)] ^ v116 ^ BYTE1(v118) ^ (v124 - 1011493969 + (v125 ^ 0x19811016) - 2 * ((v124 - 1011493969) & (v125 ^ 0x1811016))) ^ ((BYTE1(v118) ^ 0x60) + 966575881 + ((2 * (BYTE1(v118) ^ 0x60) + 1584) & 0x7E0 ^ 0x6BC66FFF)) ^ v122;
  v126 = v503 ^ 0xFD616F57 ^ ((v117 ^ 0xB9085165) - 2 * ((v117 ^ 0xB9085165) & 0x7D616F3F ^ v117 & 8) - 43946185);
  HIDWORD(v502) = v126 ^ v504 ^ 0x215AA92;
  HIDWORD(v503) = v118 ^ 0x3BF39F6;
  v127 = HIDWORD(v502) ^ 0xD70FA887 ^ (HIDWORD(v503) - ((2 * HIDWORD(v503)) & 0x31C0B978) + 417356988);
  v128 = *(_DWORD *)&v79[4 * (BYTE2(v127) ^ 0xCC)];
  v129 = -435650045 * v128 - ((1259562754 - 871300090 * v128) & 0xBD314A84) - 2078123837;
  v130 = BYTE4(v502) ^ 0x87 ^ (BYTE4(v503) - ((2 * BYTE4(v503)) & 0x78) - 68);
  v131 = *(_DWORD *)&v94[4 * (BYTE1(v127) ^ 0xC7)] ^ *(_DWORD *)(v96 + 4 * (v130 ^ 0x16u)) ^ (v129 >> 4) ^ (v129 >> 7) ^ (v98[HIBYTE(v127) ^ 0x31] + 126) ^ BYTE1(v127) ^ 0xF3 ^ ((v130 ^ 0x30) - 583605306 + ((2 * (v130 ^ 0x30) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ ((BYTE1(v127) ^ 0xF3) + 966575880 - ((2 * (BYTE1(v127) ^ 0xF3) - 1673939408) & 0x943997E0)) ^ 0xC54BB1E;
  v132 = (v131 - ((2 * v131) & 0xBD314A84) - 560421566) ^ v129;
  v133 = (v132 - ((2 * v132) & 0xFAC2DE6E) - 43946185) ^ v503 ^ 0xFD616F57;
  *(_DWORD *)(v49 - 224) = v133;
  v134 = ((v133 ^ 0xC3D46688) - ((2 * (v133 ^ 0xC3D46688)) & 0x73F7B1FA) - 1174677251) ^ v126;
  v135 = ((v134 ^ 0xAC142CAC) - ((2 * (v134 ^ 0xAC142CAC)) & 0x31C0B978) + 417356988) ^ HIDWORD(v502) ^ 0xD70FA887;
  LODWORD(v505) = v78;
  LODWORD(v501) = v126 ^ v78;
  v136 = v126 ^ v78 ^ 0xBE9A67AE;
  v137 = *(_DWORD *)&v79[4 * (((v135 ^ v136) >> 16) ^ 0xD2)];
  v138 = -435650045 * v137 - ((-871300090 * v137 + 1259562754) & 0xE0E71616) - 1778565492;
  v139 = ((unsigned __int16)(v135 ^ v136) >> 8);
  HIDWORD(v500) = v135 ^ v136;
  v140 = *(_DWORD *)&v94[4 * (v139 ^ 0xB)] ^ *(_DWORD *)(v96 + 4 * ((v135 ^ v136) ^ 0x99u)) ^ (v138 >> 4) ^ (v138 >> 7) ^ (v98[((v135 ^ v136) >> 24) ^ 0xE7] + 126) ^ 0x6A ^ v139 ^ 0x3F ^ (((v135 ^ v136) ^ 0xBF) - 583605306 + ((2 * ((v135 ^ v136) ^ 0xBF) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ ((v139 ^ 0x3F) + 966575881 + ((2 * (((v139 ^ 0x3F) + 792) & 0x3F5 ^ (v139 ^ 0x3F | 0x7FFFFFFA))) ^ 0x9439900B)) ^ 0xEE7DFA6;
  v141 = v133 ^ 0xC3D46688 ^ v138 ^ (v140 - ((2 * v140) & 0xE0E71616) - 260863221);
  *(_DWORD *)(v49 - 240) = v141;
  v142 = v141 ^ 0x5294ECCF;
  LODWORD(v502) = v134;
  v143 = v141 ^ 0x5294ECCF ^ v134;
  *(_DWORD *)(v49 - 232) = v143;
  v144 = v143 ^ 0xD96A0B7B ^ v136;
  v145 = *(_DWORD *)&v79[4 * (BYTE2(v144) ^ 6)];
  v146 = -435650045 * v145 - ((-871300090 * v145 + 1259562754) & 0xBA5EB1D4) + 45681771;
  v147 = *(_DWORD *)&v94[4 * (BYTE1(v144) ^ 0x6D)] ^ *(_DWORD *)(v96 + 4 * (v144 ^ 0x75u)) ^ (v146 >> 4) ^ (v146 >> 7) ^ (v98[HIBYTE(v144) ^ 0xD6] + 126) ^ BYTE1(v144) ^ 0x59 ^ ((v144 ^ 0x53) - 583605306 + ((2 * (v144 ^ 0x53) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ ((BYTE1(v144) ^ 0x59) + 966575881 + ((2 * (BYTE1(v144) ^ 0x59) + 1584) & 0x7E0 ^ 0x6BC66FFF)) ^ 0x568AB3F;
  v148 = v142 ^ v146 ^ (v147 - ((2 * v147) & 0xBA5EB1D4) + 1563384042);
  v149 = v148 ^ ((v143 ^ 0xD96A0B7B) - ((2 * (v143 ^ 0xD96A0B7B)) & 0x15DB208E) - 1964142521);
  *(_DWORD *)(v49 - 192) = v148;
  HIDWORD(v501) = v135;
  LODWORD(v500) = v144;
  LODWORD(v499) = v143 ^ 0xD96A0B7B ^ v135 ^ 0x952285A3 ^ ((v149 ^ 0x298D7B75)
                                                         + 1793601473
                                                         + ((2 * ((v149 ^ 0x298D7B75) & 0x6AE82FC6 ^ v149 & 6)) ^ 0xFFFFFFF7));
  v150 = v499 ^ v144;
  v151 = *(_DWORD *)&v79[4 * (BYTE2(v150) ^ 0xF2)];
  v152 = -435650045 * v151 - ((1276183558 * v151 + 1259562754) & 0x7115EE38) + 1578412701;
  v153 = *(_DWORD *)&v94[4 * (BYTE1(v150) ^ 0x6A)] ^ *(_DWORD *)(v96 + 4 * (v150 ^ 0x88u)) ^ (v152 >> 4) ^ (v152 >> 7) ^ (v98[HIBYTE(v150) ^ 0x8DLL] + 126) ^ 0x6A ^ BYTE1(v150) ^ 0x5E ^ ((v150 ^ 0xAE) - 583605306 + ((2 * (v150 ^ 0xAE) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ ((BYTE1(v150) ^ 0x5E) + 966575881 + ((2 * (BYTE1(v150) ^ 0x5E) + 1584) & 0x7E0 ^ 0x6BC66FFF)) ^ 0xAF9BA9F;
  v154 = v148 ^ v152 ^ (v153 - ((2 * v153) & 0x7115EE38) - 1198852324);
  v155 = v154 ^ 0x2D554ABD;
  HIDWORD(v499) = v143 ^ 0xD96A0B7B ^ v135;
  v156 = v154 ^ HIDWORD(v499) ^ 0x2300612A;
  v157 = v154 ^ HIDWORD(v499) ^ 0xD190ADC2;
  v158 = v156 ^ v150;
  v159 = *(_DWORD *)&v79[4 * (((v156 ^ v150) >> 16) ^ 0x46)];
  v160 = -435650045 * v159 - ((202441734 * v159 + 185820930) & 0x3C9D2B3A) - 1009235682;
  v161 = ((unsigned __int16)(v156 ^ v150) >> 8);
  v162 = *(_DWORD *)&v94[4 * (v161 ^ 0x86)] ^ (v160 >> 4) ^ (v160 >> 7) ^ v161 ^ 0xB2 ^ ((v161 ^ 0xB2)
                                                                                       + 966575881
                                                                                       + ((2
                                                                                         * (((v161 ^ 0xB2) + 792) & 0x3F2 ^ (v161 ^ 0xB2 | 0x7FFFFFFD))) ^ 0x94399005)) ^ 0x1D87472;
  v163 = (v162 - ((2 * v162) & 0x3C9D2B3A) + 508466589) ^ v160;
  v164 = (v156 ^ v150);
  v165 = (v164 ^ 0x5A) - 583605306 + ((2 * (v164 ^ 0x5A) + 30) & 0x2C ^ 0xFCFDDFFF);
  v166 = *(_DWORD *)(v96 + 4 * (v164 ^ 0x7Cu));
  *(_DWORD *)(v49 - 184) = v155;
  v167 = (v98[((v156 ^ v150) >> 24) ^ 0xF4] + 126) ^ v166 ^ v155 ^ v165 ^ (v163
                                                                                            - ((2 * v163) & 0x1C6B431E)
                                                                                            - 1909087857);
  HIDWORD(v497) = v155 ^ ((v149 ^ 0x298D7B75) - ((2 * (v149 ^ 0x298D7B75)) & 0x1C6B431E) - 1909087857);
  v168 = v167 ^ 0x981ECCE5 ^ HIDWORD(v497);
  v169 = v168 ^ v156;
  HIDWORD(v496) = v169 ^ 0x1CAA207B;
  v170 = ((v169 ^ 0x1CAA207B) - 2 * ((v169 ^ 0x1CAA207B) & 0x31B7280F ^ v169 & 4) - 1313396725) ^ v158;
  v171 = *(_DWORD *)&v79[4 * (((v170 ^ 0xE90F8D) >> 16) ^ 0x18)];
  v172 = -435650045 * v171 - ((1259562754 - 871300090 * v171) & 0x93148AE2) - 283903758;
  v173 = BYTE1(v170) ^ 0x9A;
  v174 = *(_DWORD *)(v96 + 4 * (v170 ^ 0x77u)) ^ *(_DWORD *)&v94[4 * (BYTE1(v170) ^ 0xAE)] ^ (v98[HIBYTE(v170) ^ 0x90] + 126) ^ v172 ^ v167 ^ 0x981ECCE5 ^ v173 ^ ((v170 ^ 0x51) - 583605306 + ((2 * (v170 ^ 0x51) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ (v173 + 966575881 + ((2 * ((v173 + 792) & 0x3F7 ^ (v173 | 0x7FFFFFF8))) ^ 0x9439900F)) ^ (((v172 >> 7) ^ (v172 >> 4) ^ 0x40BB0DD) - ((2 * ((v172 >> 7) ^ (v172 >> 4) ^ 0x40BB0DD)) & 0x13148AE2) + 1233798513);
  v498 = __PAIR64__(v150, v157);
  v175 = v174 ^ 0xC4261115 ^ v157;
  v176 = v175 ^ v170 ^ 0xD3F7C302;
  v177 = *(_DWORD *)&v79[4 * (BYTE2(v176) ^ 0x1A)];
  v178 = -435650045 * v177 - ((1259562754 - 871300090 * v177) & 0x9D59B5A6) + 1949732436;
  v179 = *(_DWORD *)&v94[4 * (BYTE1(v176) ^ 0x90)] ^ (v178 >> 4) ^ (v178 >> 7) ^ BYTE1(v176) ^ 0xA4 ^ ((BYTE1(v176) ^ 0xA4) + 966575881 + ((2 * (BYTE1(v176) ^ 0xA4) + 1584) & 0x7E0 ^ 0x6BC66FFF)) ^ 0xD779418;
  v180 = (v179 - 827532588 + (~(2 * v179) | 0x62A64A59)) ^ v178;
  v495 = __PAIR64__(v174, v176);
  v181 = *(_DWORD *)(v96 + 4 * ((v175 ^ v170 ^ 2) ^ 0x99u)) ^ v174 ^ 0xC4261115 ^ (((v175 ^ v170 ^ 2) ^ 0xBF) - 583605306 + ((2 * ((v175 ^ v170 ^ 2) ^ 0xBF) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ (v98[HIBYTE(v176) ^ 0x6FLL] + 126) ^ 0x27D94378 ^ (v180 - ((2 * v180) & 0xDFA42DD0) - 271444248);
  LODWORD(v497) = v168;
  v182 = v174 ^ v168 ^ 0xD300006A;
  *(_DWORD *)(v49 - 200) = v182;
  LODWORD(v494) = v181 ^ (v182 - 2 * (v182 & 0x27D9437D ^ (v174 ^ v168) & 5) + 668550008);
  *(_DWORD *)(v49 - 208) = v494 ^ 0x2B1ECC8F;
  v183 = (v494 ^ 0x2B1ECC8F) - ((2 * (v494 ^ 0x2B1ECC8F)) & 0x89EC6DE8) - 990497036;
  LODWORD(v496) = v170 ^ 0xD3F7C302;
  v184 = v183 ^ v170 ^ 0xD3F7C302;
  v185 = *(_DWORD *)&v79[4 * (BYTE2(v184) ^ 0xEE)];
  v186 = -435650045 * v185 - ((202441734 * v185 + 185820930) & 0x2175A47E) - 1237023296;
  v187 = BYTE1(v184) ^ 0xA3;
  v188 = (v183 ^ v170 ^ 2);
  HIDWORD(v493) = v184;
  v189 = *(_DWORD *)&v94[4 * (BYTE1(v184) ^ 0x97)] ^ *(_DWORD *)(v96 + 4 * (v188 ^ 0xEu)) ^ (v186 >> 4) ^ (v186 >> 7) ^ (v98[HIBYTE(v184) ^ 0x70] + 126) ^ ((v188 ^ 0x28) - 583605306 + ((2 * (v188 ^ 0x28) + 30) & 0x2C ^ 0xFCFDDFFF)) ^ (v187 + 966575881 + ((2 * (_WORD)v187 + 1584) & 0x7E0 ^ 0x6BC66FFF)) ^ 0x12AD887;
  v190 = (v189 + 280678976 + (~(2 * v189) | 0xDE8A5B81)) ^ v186;
  HIDWORD(v494) = v181;
  LODWORD(a46) = v187 ^ v181 ^ (v190 - ((2 * v190) & 0x4FB286F0) + 668550008);
  HIDWORD(v505) = v175 ^ 0x851ECCE5 ^ v183;
  v191 = *(_DWORD *)(v49 - 216) ^ 0x24A4F6A4;
  v192 = 1676679813 - v191 - ((1397845688 - 2 * v191) & 0x748EC652);
  *(_DWORD *)(v49 - 216) = v191 - ((2 * v191) & 0x748EC652);
  v193 = *(_DWORD *)(v49 - 224) ^ 0xF869528;
  *(_DWORD *)(v49 - 224) = v167 ^ 0x421A670;
  v194 = v193 + (v192 ^ 0xBA476329) - ((2 * (v193 + (v192 ^ 0xBA476329))) & 0x616188E0) - 1330592656;
  LODWORD(v492) = (v194 ^ 0xB0B0C470) + v193 - 2 * ((v194 ^ 0x30B0C470) & v193);
  HIDWORD(v492) = v194;
  v195 = (v194 ^ 0xB0B0C470)
       - (v167 ^ 0x421A670)
       + 1511158001
       - ((2 * ((v194 ^ 0xB0B0C470) - (v167 ^ 0x421A670) + 1511158001)) & 0xE5AF731C)
       + 1926740366;
  HIDWORD(v491) = *(_DWORD *)(v49 - 168) ^ 0xFE83EE1F;
  v196 = (((v195 ^ 0x72D7B98E) - HIDWORD(v491) + 1257698665) ^ 0x7B1B3547)
       - 699401819
       + ((2 * ((v195 ^ 0x72D7B98E) - HIDWORD(v491) + 1257698665)) & 0xF6366A8E);
  LODWORD(v491) = v158 ^ 0x7644F520;
  v197 = (v158 ^ 0x7644F520) - (v126 ^ 0x48A51CB2) + (v196 ^ 0x807F521E) + ((2 * v196) & 0xFEA43C) + 2050441761;
  *(_DWORD *)(v49 - 168) = (v126 ^ 0x48A51CB2) - ((2 * (v126 ^ 0x48A51CB2)) & 0x9000E6F2);
  v198 = v197 - ((2 * v197) & 0x9000E6F2) - 939494535;
  LODWORD(v98) = (v175 ^ 0x93B44A79) - ((2 * (v175 ^ 0x93B44A79)) & 0x13A99034);
  v199 = *(_DWORD *)(v49 - 176);
  LODWORD(v490) = v199 ^ 0xEB;
  v200 = *(_DWORD *)(v49 - 232) ^ 0xB779C6D;
  v201 = (v198 ^ 0xC8007379)
       - 1632641476
       + (v175 ^ 0x93B44A79)
       - ((2 * ((v198 ^ 0xC8007379) - 1632641476 + (v175 ^ 0x93B44A79))) & 0x13A99034)
       - 1982543846;
  v202 = (v199 ^ 0xF63A9450) + v200 + (v201 ^ 0x89D4C81A) + 1;
  *(_DWORD *)(v49 - 176) = v200 - ((2 * v200) & 0x9A1D73C6);
  v203 = v202 - ((2 * v202) & 0x9A1D73C6) + 1292810723;
  HIDWORD(v489) = v149 ^ 0xEF43E85D;
  v204 = (v174 ^ 0x1D22EC90) - (v149 ^ 0xEF43E85D) + (v203 ^ 0x4D0EB9E3);
  v205 = v204 - 1220180128;
  v206 = v204 - 1380431319 - ((2 * (v204 - 1220180128)) & 0x4698D52C);
  HIDWORD(a28) = (*(_DWORD *)(v49 - 240) ^ 0x72061BE4)
               - 2 * ((*(_DWORD *)(v49 - 240) ^ 0x72061BE4) & 0x2F074BFB ^ *(_DWORD *)(v49 - 240) & 1)
               + 789007354;
  v207 = (v204
        - 1380431319
        - (*(_DWORD *)(v49 - 240) ^ 0x72061BE4)
        - ((2 * (v204 - 1380431319 - (*(_DWORD *)(v49 - 240) ^ 0x72061BE4)) + 1083265296) & 0x5E0E97F4)
        - 816843646) ^ 0x2F074BFA;
  LODWORD(v94) = v207 + 1600942734;
  *(_DWORD *)(v49 - 232) = v207 - ((2 * (v207 + 1600942734)) & 0x1C6B431E) - 308145123;
  v208 = *(_DWORD *)(v49 - 152);
  v209 = (uint64_t)*(&off_24E21C7C0 + (v208 ^ 0x6B6));
  v210 = *(_DWORD *)(v209 + 4 * (*(unsigned __int8 *)(v49 - 114) ^ 0x23)) - 801967069;
  v211 = (4 * v210) & 0xFE8CF5B8 ^ v210;
  v212 = (char *)*(&off_24E21C7C0 + (v208 & 0x72F58075)) - 12;
  v213 = *(_DWORD *)(v209 + 4 * (*(unsigned __int8 *)(v49 - 118) ^ 0xBFLL)) - 801967069;
  v214 = v212[*(unsigned __int8 *)(v49 - 117) ^ 0x57] ^ (*(_BYTE *)(v49 - 117)
                                                                                           - ((2 * *(_BYTE *)(v49 - 117)) & 0xC7)
                                                                                           - 29) ^ v213 ^ (4 * v213) & 0xFE8CF5B8;
  v215 = (char *)*(&off_24E21C7C0 + (v208 ^ 0x6C0)) - 4;
  v216 = *(_DWORD *)&v215[4 * (*(unsigned __int8 *)(v49 - 120) ^ 0x2CLL)];
  v217 = (char *)*(&off_24E21C7C0 + v208 - 1252) - 12;
  v218 = *(_DWORD *)&v217[4 * (*(unsigned __int8 *)(v49 - 119) ^ 0x56)];
  v219 = v214 ^ (v218 >> 1) ^ (v218 >> 5) ^ v216 ^ (((v216 >> 7) ^ (v216 >> 4) ^ 0xBEDCAB7)
                                                  - ((2 * ((v216 >> 7) ^ (v216 >> 4) ^ 0xBEDCAB7)) & 0x10BE2342)
                                                  + 1751060897) ^ 0xA5216A51;
  v220 = v219 - ((2 * v219) & 0x486DDA4) - 2109509934;
  v221 = *(_DWORD *)&v217[4 * (*(unsigned __int8 *)(v49 - 123) ^ 0xCFLL)];
  v222 = *(_DWORD *)(v209 + 4 * (*(unsigned __int8 *)(v49 - 122) ^ 0xAFLL)) - 801967069;
  v223 = *(_DWORD *)&v215[4 * (*(unsigned __int8 *)(v49 - 124) ^ 0x31)];
  v224 = (*(_BYTE *)(v49 - 121) - ((2 * *(_BYTE *)(v49 - 121)) & 0xC7) - 29) ^ v212[*(unsigned __int8 *)(v49 - 121) ^ 0xF8] ^ v222 ^ (4 * v222) & 0xFE8CF5B8 ^ (v223 >> 7) ^ (v223 >> 4) ^ 0xFE5007BA ^ (((((v221 >> 5) ^ (v221 >> 1) ^ 0x66D7E3BE) - ((2 * ((v221 >> 5) ^ (v221 >> 1) ^ 0x66D7E3BE)) & 0x68178C22) + 873186833) ^ v221) & 0x7D4D72DA | ((v221 >> 5) ^ (v221 >> 1) ^ 0x66D7E3BE) & 0x2B28D25 ^ v221 & 0x82B28D25);
  v225 = v224 - ((2 * v224) & 0xCDFFA550) - 419442008;
  v226 = *(_DWORD *)&v215[4 * (*(unsigned __int8 *)(v49 - 116) ^ 0x94)];
  v227 = v226 ^ (v226 >> 7) ^ (v226 >> 4);
  v228 = (v211 ^ 0x89DA1782 ^ ((((v211 ^ 0x5FBBAD30 ^ v227) + (v227 ^ 0xA04452CF) + 1) ^ -v211)
                             - ((2 * (((v211 ^ 0x5FBBAD30 ^ v227) + (v227 ^ 0xA04452CF) + 1) ^ -v211)) & 0x13B42F04)
                             - 1982195838))
       + (v227 ^ 0xA04452CF);
  v488 = v209;
  v229 = *(_DWORD *)&v217[4 * (*(unsigned __int8 *)(v49 - 127) ^ 0x94)];
  v485 = v217;
  v230 = *(_DWORD *)&v217[4 * (*(unsigned __int8 *)(v49 - 115) ^ 0x58)];
  v231 = ((v230 >> 5) ^ (v230 >> 1) ^ 0x66D7E3BE)
       - ((2 * ((v230 >> 5) ^ (v230 >> 1) ^ 0x66D7E3BE)) & 0x716DCAC8)
       + 951510372;
  v486 = v215;
  v487 = v212;
  LODWORD(v97) = v212[*(unsigned __int8 *)(v49 - 113) ^ 0x16] ^ (*(_BYTE *)(v49 - 113) - ((2 * *(_BYTE *)(v49 - 113)) & 0xC7) - 29) ^ v230;
  v232 = *(_DWORD *)&v215[4 * (*(unsigned __int8 *)(v49 - 128) ^ 0xFCLL)];
  v233 = v212[*(unsigned __int8 *)(v49 - 125) ^ 0x67] ^ (*(_BYTE *)(v49 - 125)
                                                                                           - ((2 * *(_BYTE *)(v49 - 125)) & 0xC7)
                                                                                           - 29) ^ v232 ^ (v229 >> 5) ^ (v229 >> 1) ^ (*(_DWORD *)(v209 + 4 * (*(unsigned __int8 *)(v49 - 126) ^ 0x22)) - 801967069) ^ (4 * (*(_DWORD *)(v209 + 4 * (*(unsigned __int8 *)(v49 - 126) ^ 0x22)) - 801967069)) & 0xFE8CF5B8 ^ 0x1E4D3237 ^ (((v232 >> 7) ^ (v232 >> 4) ^ 0xBEDCAB7) - ((2 * ((v232 >> 7) ^ (v232 >> 4) ^ 0xBEDCAB7)) & 0x666923E) - 751613665);
  v234 = v233 - ((2 * v233) & 0x77B3AC26) - 1143351789;
  v235 = ((v201 ^ 0x3455EA0C) + 1115610602) ^ ((v201 ^ 0x762B37E5) + 1);
  LODWORD(v209) = v229 ^ 0x90EDAC72 ^ v234;
  HIDWORD(v236) = v195 ^ 0x7B98E;
  LODWORD(v236) = v195 ^ 0x72D00000;
  v506 = v218 ^ 0xE7A0154F ^ v220;
  *(_DWORD *)(v49 - 152) = v223 ^ 0x37D05A65 ^ v225;
  v237 = v97 ^ v231 ^ 0x3927B196 ^ v228;
  v238 = (*(_DWORD *)(v49 - 192) & 0x100 ^ 0xFDF7BB47) + 2 * (*(_DWORD *)(v49 - 192) & 0x100);
  LODWORD(v484) = v238 + 856485628;
  HIDWORD(v483) = v238 + 34096313;
  LODWORD(v483) = 788293002 - v238;
  HIDWORD(v482) = *(_DWORD *)(v49 - 232) ^ *(_DWORD *)(v49 - 184);
  HIDWORD(v236) = (v236 >> 19) ^ 0x8DA56C07;
  LODWORD(v236) = HIDWORD(v236);
  LODWORD(v482) = v195 ^ *(_DWORD *)(v49 - 224) ^ (v236 >> 13);
  v239 = v205 ^ *(_DWORD *)(v49 - 200);
  v240 = *(unsigned __int8 **)(v49 - 136);
  LODWORD(v481) = v201 ^ ((_DWORD)v98 - 1982543846) ^ (((v235 - ((2 * v235) & 0x13A99034) - 1982543846) ^ v201)
                                                     + 1115610601);
  HIDWORD(v481) = v239 ^ (v206 + 752461773);
  HIDWORD(v480) = *(_DWORD *)(v49 - 160) ^ 0xF5;
  HIDWORD(v484) = v94 ^ 0x5F6C728E;
  LODWORD(v479) = (v94 ^ 0x5F6C728E) - 1212423412;
  HIDWORD(v479) = *(_DWORD *)(v49 - 192) & 0xFFFFFEFF;
  v241 = *(_DWORD *)(v49 - 144);
  HIDWORD(v478) = v241 - 1400427869;
  LODWORD(v478) = v241 ^ 0x2D6;
  HIDWORD(v477) = v241 ^ 0x36E;
  LODWORD(v493) = v192;
  LODWORD(v477) = v192 ^ (*(_DWORD *)(v49 - 216) - 1169726679);
  HIDWORD(v490) = v198;
  HIDWORD(v476) = v198 ^ (*(_DWORD *)(v49 - 168) - 939494535);
  LODWORD(v489) = v203;
  LODWORD(v476) = (*(_DWORD *)(v49 - 176) + 1292810723) ^ v203;
  HIDWORD(v475) = v241 ^ 0x2D4;
  LODWORD(v475) = v241 ^ 0x296;
  HIDWORD(v474) = v241 ^ 0x2CB;
  LODWORD(v474) = v241 ^ 0x3CC;
  HIDWORD(v473) = v241 ^ 0x3DE;
  LODWORD(v480) = a46 ^ *(_DWORD *)(v49 - 208);
  LODWORD(v473) = v480 ^ HIDWORD(v505);
  v242 = (v241 - 1400427869) & 0x5378DFDB ^ 0xD43u;
  *(_QWORD *)(v49 - 232) = v242;
  v243 = *(_DWORD *)&v215[4 * (v240[v242] ^ 0xC3)];
  *(_QWORD *)(v49 - 208) = 4;
  LODWORD(v215) = *(_DWORD *)&v215[4 * (v240[4] ^ 0x5FLL)];
  *(_QWORD *)(v49 - 160) = 7;
  *(_QWORD *)(v49 - 256) = 14;
  v244 = v212[v240[7] ^ 0x22] ^ (v240[7] - ((2 * v240[7]) & 0xC7) - 29) ^ 0x8C ^ (v215 >> 7) ^ 0xBEDCAB7 ^ (v215 >> 4);
  *(_QWORD *)(v49 - 168) = 5;
  v245 = v240[5];
  *(_QWORD *)(v49 - 192) = 3;
  v246 = *(_DWORD *)&v485[4 * (v245 ^ 0xE6)];
  v247 = v240[3];
  LODWORD(v215) = v215 ^ (v246 >> 5) ^ (v246 >> 1) ^ (v244 - ((2 * v244) & 0xB6ADD40) - 172659040);
  v248 = v246 ^ 0x567C6157 ^ ((v215 ^ 0x38CB1566)
                            - 2 * ((v215 ^ 0x38CB1566) & 0x17C8EEDB ^ v215 & 8)
                            - 1748439341);
  v249 = v240[8];
  LODWORD(v247) = v212[v247 ^ 0x94] ^ ((((v247 ^ 0x1D) & 8 | 0x27) ^ (v247 ^ 0x1D) & 0xF7)
                                                                       - ((2
                                                                         * (((v247 ^ 0x1D) & 8 | 0x27) ^ (v247 ^ 0x1D) & 0xF7)) & 0xC7)
                                                                       - 29);
  *(_QWORD *)(v49 - 176) = 2;
  v250 = v240[2] ^ 0x23;
  *(_DWORD *)(v49 - 200) = -1849857868;
  v251 = *(_DWORD *)(v488 + 4 * v250) - 801967069;
  v252 = (v243 >> 7) ^ (v243 >> 4) ^ v251;
  LODWORD(v250) = *(_DWORD *)&v486[4 * (v249 ^ 0x51)];
  v251 *= 4;
  *(_QWORD *)(v49 - 216) = 11;
  v253 = v240[11];
  LODWORD(v240) = 2 * (v253 ^ 0xFFFFFFC6);
  *(_QWORD *)(v49 - 224) = 1;
  v254 = (v253 ^ 0xFFFFFFC6) - (v240 & 0xFFFFFFC7);
  LODWORD(v94) = (v253 ^ 0xFFFFFFC6) - (v240 & 6);
  LODWORD(v253) = v212[v253 ^ 0x68];
  v255 = ((v254 - 29) ^ v253) & 0xCC;
  LODWORD(v94) = (((_DWORD)v94 + 35) ^ v253) & 0x33;
  *(_QWORD *)(v49 - 184) = 15;
  v256 = *(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 15);
  v257 = v255 | v94;
  v258 = v247 ^ v251 & 0xFE8CF5B8 ^ v252;
  LODWORD(v247) = v212[v256 ^ 0x44];
  *(_QWORD *)(v49 - 248) = 6;
  LODWORD(v247) = v247 ^ (v256 - ((2 * v256) & 0xC7) - 29);
  LODWORD(v94) = *(_DWORD *)(v488 + 4 * (*(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 6) ^ 0xBBLL)) - 801967069;
  HIDWORD(v236) = v248;
  LODWORD(v236) = v248;
  v259 = *(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 10);
  LODWORD(v212) = (v236 >> 31) ^ __ROR4__((4 * (_DWORD)v94) & 0xFE8CF5B8 ^ v94, 31);
  *(_QWORD *)(v49 - 240) = 13;
  LODWORD(v94) = *(_DWORD *)&v485[4 * (*(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 9) ^ 0xFDLL)];
  v260 = (v250 >> 7) ^ (v250 >> 4) ^ (*(_DWORD *)(v488 + 4 * (v259 ^ 0xF6)) - 801967069) ^ v257 ^ v94 ^ (-1087099024 - 4 * *(_DWORD *)(v488 + 4 * (v259 ^ 0xF6))) & 0xFE8CF5B8 ^ (((v94 >> 5) ^ 0x66D7E3BE ^ (v94 >> 1)) - ((2 * ((v94 >> 5) ^ 0x66D7E3BE ^ (v94 >> 1))) & 0xA15595AA) - 794113323);
  v261 = *(_DWORD *)&v485[4 * (*(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 13) ^ 0xAELL)];
  LODWORD(v256) = *(_DWORD *)(v488 + 4 * (*(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 14) ^ 0x4ALL)) - 801967069;
  v262 = *(_DWORD *)&v486[4 * (*(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 12) ^ 0x11)];
  v263 = v247 ^ v261 ^ (4 * v256) & 0xFE8CF5B8 ^ (v262 >> 4) ^ (v262 >> 7) ^ 0x22DD5B84 ^ (((v261 >> 5) ^ 0x66D7E3BE ^ (v261 >> 1))
                                                                                         - ((2
                                                                                           * ((v261 >> 5) ^ 0x66D7E3BE ^ (v261 >> 1))) & 0xD1083CBA)
                                                                                         - 393994659);
  LODWORD(v247) = *(_DWORD *)&v485[4 * (*(unsigned __int8 *)(*(_QWORD *)(v49 - 136) + 1) ^ 0x99)];
  v264 = ((v258 ^ (v247 >> 1) ^ (v247 >> 5) ^ 0x6D3A29C6)
        - 2
        * ((v258 ^ (v247 >> 1) ^ (v247 >> 5) ^ 0x6D3A29C6) & 0x83E84F3 ^ ((v258 ^ (v247 >> 1) ^ (v247 >> 5)) ^ 0xCF) & 2)
        - 2009168655) ^ v209;
  v265 = v243 ^ 0x48EAEC36 ^ (v264 - ((2 * v264) & 0xC686E89C) - 482118578);
  HIDWORD(v236) = v212 ^ 0xBADAEC51;
  LODWORD(v236) = v212 ^ 0xBADAEC51;
  LODWORD(v247) = v247 ^ HIDWORD(v491) ^ (v265 - ((2 * v265) & 0x9496B950) - 901030744);
  v266 = v256 ^ v237 ^ (v263 - ((2 * v263) & 0x19243B20) + 210902416);
  v267 = ((v260 ^ 0x1AF38FE6) - 2 * ((v260 ^ 0x1AF38FE6) & 0x53C37C19 ^ v260 & 0x10) - 742163447) ^ v506;
  LODWORD(v259) = *(_DWORD *)(v49 - 152) ^ v490 ^ ((v236 >> 1) - ((2 * (v236 >> 1)) & 0x6744FF86) + 866287555);
  LODWORD(v209) = v262 ^ v505 ^ (v266 - ((2 * v266) & 0x6A00285A) - 1258286035);
  v268 = BYTE3(v247);
  LODWORD(v212) = v250 ^ HIDWORD(v504) ^ (v267 - ((2 * v267) & 0x71B07FD0) + 953696232);
  LOBYTE(v250) = (v250 ^ BYTE4(v504) ^ (v267 - ((2 * v267) & 0xD0) - 24)) & 0x18;
  v269 = (char *)*(&off_24E21C7C0 + (int)v478) - 8;
  LODWORD(v242) = *(_DWORD *)(v49 - 144);
  v270 = (char *)*(&off_24E21C7C0 + (int)v242 - 445) - 4;
  v271 = *(_DWORD *)&v270[4 * (BYTE2(v259) ^ 0x3C)];
  LODWORD(v250) = (v209 ^ 0x98E4793F) >> v250 >> (v250 ^ 0x18);
  HIDWORD(v236) = v271 ^ 0x118;
  LODWORD(v236) = v271 ^ 0xD5DB0800;
  v272 = (char *)*(&off_24E21C7C0 + (int)v242 - 314) - 12;
  v273 = *(_DWORD *)&v272[4 * (BYTE1(v212) ^ 0xB6)] - 181430599;
  v274 = v273 ^ (v273 >> 2) & 0x6664085 ^ *(_DWORD *)&v269[4 * (BYTE3(v247) ^ 0xDE)] ^ ((v236 >> 9)
                                                                                      - 1589794068
                                                                                      - ((2 * (v236 >> 9)) & 0x427B55D8));
  v275 = (v262 ^ v505 ^ (v266 - ((2 * v266) & 0x5A) + 45));
  LODWORD(v94) = (v275 ^ 0xAC641609) + (v275 ^ 0x3F) + (~(2 * v209) & 0x6C);
  LODWORD(v240) = v274 + 739040687 - ((2 * v274) & 0x5819BB5E);
  v276 = *(_DWORD *)&v270[4 * (BYTE2(v212) ^ 0x4B)];
  HIDWORD(v236) = v276 ^ 0x118;
  LODWORD(v236) = v276 ^ 0xD5DB0800;
  v277 = *(_DWORD *)&v272[4 * (BYTE1(v209) ^ 0x2E)] - 181430599;
  LODWORD(v256) = (v259 ^ 0x904B1BEC) >> 24;
  v278 = v277 ^ (v277 >> 2) & 0x6664085 ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ *(_DWORD *)&v269[4 * (v256 ^ 0x5E)];
  v279 = (char *)*(&off_24E21C7C0 + SHIDWORD(v477)) - 8;
  v280 = v477 ^ v256 ^ (((2 * v247) ^ 0x106) - 1402726858) ^ *(_DWORD *)&v279[4
                                                                                             * (v247 ^ 0xA9)] ^ (v278 + 739040687 - ((2 * v278) & 0x5819BB5E));
  LODWORD(v256) = *(_DWORD *)&v270[4 * (BYTE2(v209) ^ 0x93)];
  HIDWORD(v236) = v256 ^ 0x118;
  LODWORD(v236) = v256 ^ 0xD5DB0800;
  LODWORD(v256) = (v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8);
  LODWORD(v209) = *(_DWORD *)&v270[4 * (BYTE2(v247) ^ 0x4F)];
  HIDWORD(v236) = v209 ^ 0x118;
  LODWORD(v236) = v209 ^ 0xD5DB0800;
  v281 = *(_DWORD *)&v279[4 * (v275 ^ 0x15)] ^ HIDWORD(v480) ^ v94 ^ v240;
  LODWORD(v209) = *(_DWORD *)&v272[4 * (BYTE1(v259) ^ 0x4C)] - 181430599;
  LODWORD(v250) = *(_DWORD *)&v269[4 * (v250 ^ 0x5E)] ^ HIDWORD(v503) ^ *(_DWORD *)&v279[4 * (v212 ^ 0x6B)] ^ v209 ^ (v236 >> 9) ^ (v209 >> 2) & 0x6664085 ^ (v250 - 1589794067 + (~(2 * v250) | 0xFFFFFE27)) ^ (((2 * v212) ^ 0x82) - 663686170 + ((2 * ((2 * v212) ^ 0x82) + 3180) & 0x1B5C ^ 0xA7F7DFFF));
  LODWORD(v240) = v212 >> 24;
  v282 = *(_DWORD *)&v272[4 * (BYTE1(v247) ^ 0xD6)] - 181430599;
  LODWORD(v247) = *(_DWORD *)&v269[4 * ((v212 >> 24) ^ 0x33)] ^ v504 ^ (2 * (v259 ^ 0xEC)
                                                                                    - 663686171
                                                                                    - ((4
                                                                                      * (v259 ^ 0xEC)
                                                                                      + 1489513580) & 0x58083B5C)) ^ *(_DWORD *)&v279[4 * (v259 ^ 0xC6)] ^ v282 ^ (v282 >> 2) & 0x6664085 ^ v256;
  LODWORD(v212) = (v280 - 1169726679 - ((2 * v280) & 0x748EC652)) ^ v493;
  v283 = *(_DWORD *)&v270[4 * (BYTE2(v212) ^ 0xA9)];
  v284 = (v283 ^ 0xD5DB0918) >> (v251 & 8) >> (v251 & 8 ^ 9);
  v285 = (v284 | (v283 << 23) ^ 0x8C000000)
       - 1589794068
       - 2 * ((v284 | (v283 << 23) ^ 0x8C000000) & 0x213DAAEF ^ v284 & 3);
  v286 = *(_DWORD *)&v270[4 * (BYTE2(v247) ^ 0x15)];
  HIDWORD(v236) = v286 ^ 0x118;
  LODWORD(v236) = v286 ^ 0xD5DB0800;
  LOBYTE(v283) = v281 ^ v268;
  v287 = v281 ^ v268 ^ 0x480CDAAE;
  LODWORD(v256) = *(_DWORD *)&v272[4 * (BYTE1(v250) ^ 0x3E)] - 181430599;
  v288 = *(_DWORD *)&v270[4 * (BYTE2(v250) ^ 0xCA)];
  v289 = HIDWORD(v476) ^ *(_DWORD *)&v269[4 * ((v212 >> 24) ^ 0x7E)] ^ (v212 >> 24) ^ *(_DWORD *)&v279[4 * (v283 ^ 0x84)] ^ v256 ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ (v256 >> 2) & 0x6664085 ^ (2 * v287 - 663686170 + ((4 * v287 + 3180) & 0x1B5C ^ 0xA7F7DFFF));
  HIDWORD(v236) = v288 ^ 0x118;
  LODWORD(v236) = v288 ^ 0xD5DB0800;
  LODWORD(v256) = (v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8);
  v290 = *(_DWORD *)&v270[4 * (BYTE2(v281) ^ 0x7B)];
  HIDWORD(v236) = v290 ^ 0x118;
  LODWORD(v236) = v290 ^ 0xD5DB0800;
  v291 = *(_DWORD *)&v272[4 * (BYTE1(v247) ^ 0x3E)] - 181430599;
  LODWORD(v97) = HIBYTE(v287);
  v292 = *(_DWORD *)&v269[4 * (HIBYTE(v287) ^ 0x5E)] ^ v503 ^ *(_DWORD *)&v279[4 * (v250 ^ 0xDD)] ^ v291 ^ (v291 >> 2) & 0x6664085 ^ (((2 * v250) ^ 0x1EE) - 663686171 - ((2 * ((2 * v250) ^ 0x1EE) + 1489513580) & 0x58083B5C)) ^ v285;
  v293 = *(_DWORD *)&v272[4 * (BYTE1(v281) ^ 0x8D)] - 181430599;
  v294 = BYTE3(v247) ^ HIDWORD(v502) ^ *(_DWORD *)&v269[4 * (BYTE3(v247) ^ 0x6E)] ^ *(_DWORD *)&v279[4 * (v212 ^ 0x52)] ^ v293 ^ v256 ^ (v293 >> 2) & 0x6664085 ^ (((2 * v212) ^ 0xF0) - 663686170 + ((2 * ((2 * v212) ^ 0xF0) + 3180) & 0x1B5C ^ 0xA7F7DFFF));
  LODWORD(v212) = *(_DWORD *)&v272[4 * (BYTE1(v212) ^ 0xC)] - 181430599;
  LODWORD(v212) = (((2 * (v247 ^ v240)) ^ 0xD6)
                 - 663686171
                 - ((2 * ((2 * (v247 ^ v240)) ^ 0xD6) + 1489513580) & 0x58083B5C)) ^ v501 ^ BYTE3(v250) ^ *(_DWORD *)&v269[4 * (BYTE3(v250) ^ 0x1E)] ^ *(_DWORD *)&v279[4 * ((v247 ^ v240) ^ 0x41)] ^ v212 ^ (v212 >> 2) & 0x6664085;
  LODWORD(v250) = ((v289 ^ 0x20) - 939494535 - 2 * ((v289 ^ 0x20) & 0x4800737B ^ v289 & 2)) ^ HIDWORD(v490);
  v295 = v212 ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8));
  LODWORD(v212) = *(_DWORD *)&v270[4 * (BYTE2(v250) ^ 0x80)];
  HIDWORD(v236) = v212 ^ 0x118;
  LODWORD(v236) = v212 ^ 0xD5DB0800;
  LODWORD(v212) = v295 ^ 0xFE270E19;
  v296 = *(_DWORD *)&v272[4 * (BYTE1(v294) ^ 0x60)] - 181430599;
  LOBYTE(v94) = v292 ^ v97;
  LODWORD(v247) = *(_DWORD *)&v269[4 * (((v292 ^ v97 ^ 0x729D08E2) >> 24) ^ 0x5E)] ^ v492 ^ *(_DWORD *)&v279[4 * (v295 ^ 0x33)] ^ v296 ^ (v296 >> 2) & 0x6664085 ^ ((v292 ^ v97 ^ 0x729D08E2) >> 24) ^ (2 * (v295 ^ 0x19) - 663686170 + ((4 * (v295 ^ 0x19) + 3180) & 0x1B5C ^ 0xA7F7DFFF)) ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8));
  v297 = *(_DWORD *)&v270[4 * (BYTE2(v294) ^ 0xEF)];
  HIDWORD(v236) = v297 ^ 0x118;
  LODWORD(v236) = v297 ^ 0xD5DB0800;
  LODWORD(v259) = (v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8);
  v298 = *(_DWORD *)&v270[4 * (BYTE2(v295) ^ 0x50)];
  HIDWORD(v236) = v298 ^ 0x118;
  LODWORD(v236) = v298 ^ 0xD5DB0800;
  v299 = 2 * ((v292 ^ v97) ^ 0xE2)
       - 663686171
       - ((4 * ((v292 ^ v97) ^ 0xE2) + 1489513580) & 0x58083B5C);
  v300 = *(_DWORD *)&v272[4 * (BYTE1(v292) ^ 0x5F)];
  LODWORD(v256) = v300 - ((2 * v300 + 1784622450) & 0x743F6106) - 1353758916;
  v301 = HIBYTE(v294) ^ *(_DWORD *)&v269[4 * (HIBYTE(v294) ^ 0xA3)] ^ *(_DWORD *)&v279[4
                                                                                     * (v250 ^ 0x54)] ^ (((2 * v250) ^ 0xFC) - 663686170 + ((2 * ((2 * v250) ^ 0xFC) + 3180) & 0x1B5C ^ 0xA7F7DFFF)) ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ ((unint64_t)((v256 ^ 0x5C794D6B) + (v256 & 0xE666FDE8 ^ 0xBB9FB297) + 1) >> 2);
  v302 = *(_DWORD *)&v270[4 * (BYTE2(v292) ^ 0xEA)];
  HIDWORD(v236) = v302 ^ 0x118;
  LODWORD(v236) = v302 ^ 0xD5DB0800;
  LODWORD(v209) = BYTE3(v250);
  v303 = *(_DWORD *)&v272[4 * (BYTE1(v295) ^ 0x59)] - 181430599;
  v304 = *(_DWORD *)&v269[4 * (BYTE3(v250) ^ 0x99)] ^ v502 ^ *(_DWORD *)&v279[4 * (v94 ^ 0xC8)] ^ v303 ^ (v303 >> 2) & 0x6664085 ^ v259 ^ v299;
  v305 = v256 ^ HIDWORD(v501) ^ ((v301 ^ 0xFD) - ((2 * (v301 ^ 0xFD)) & 0x743F6106) - 1172328317);
  LODWORD(v250) = *(_DWORD *)&v272[4 * (BYTE1(v250) ^ 0xD6)] - 181430599;
  LODWORD(v250) = (v212 >> 24) ^ HIDWORD(v500) ^ (((2 * v294) ^ 0x13E)
                                                              - 663686171
                                                              - ((2 * ((2 * v294) ^ 0x13E) + 1489513580) & 0x58083B5C)) ^ *(_DWORD *)&v279[4 * (v294 ^ 0xB5)] ^ *(_DWORD *)&v269[4 * ((v212 >> 24) ^ 0x5E)] ^ v250 ^ (v250 >> 2) & 0x6664085;
  LODWORD(v212) = *(_DWORD *)&v270[4
                                 * (((v304 ^ v209 ^ 0x3AB78913) >> (v305 & 0x10 ^ 0x10) >> (v305 & 0x10)) ^ 0x77)];
  LODWORD(v250) = v250 ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8));
  v306 = *(_DWORD *)&v270[4 * (BYTE2(v305) ^ 0x1E)];
  HIDWORD(v236) = v306 ^ 0x118;
  LODWORD(v236) = v306 ^ 0xD5DB0800;
  LODWORD(v259) = (v247 - 1330592656 - ((2 * v247) & 0x616188E0)) ^ HIDWORD(v492);
  LODWORD(v256) = *(_DWORD *)&v272[4 * (BYTE1(v250) ^ 0x58)] - 181430599;
  v307 = v476 ^ HIBYTE(v304) ^ *(_DWORD *)&v269[4 * (HIBYTE(v304) ^ 0x64)] ^ v256 ^ *(_DWORD *)&v279[4 * (v259 ^ 0x98)] ^ (v256 >> 2) & 0x6664085 ^ (((2 * v259) ^ 0x164) - 663686171 - ((2 * ((2 * v259) ^ 0x164) + 1489513580) & 0x58083B5C)) ^ 0x3A ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8));
  v308 = *(_DWORD *)&v270[4 * (BYTE2(v250) ^ 0x1E)];
  HIDWORD(v236) = v308 ^ 0x118;
  LODWORD(v236) = v308 ^ 0xD5DB0800;
  v309 = *(_DWORD *)&v272[4 * (BYTE1(v259) ^ 1)] - 181430599;
  v310 = v309 ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ (v309 >> 2) & 0x6664085 ^ *(_DWORD *)&v269[4 * (HIBYTE(v305) ^ 0xBA)];
  HIDWORD(v236) = *(_DWORD *)&v279[4 * ((v304 ^ v209) ^ 0x39)] ^ 0x79CBF298 ^ HIBYTE(v305) ^ (v310 + 739040687 - ((2 * v310) & 0x5819BB5E));
  LODWORD(v236) = HIDWORD(v236);
  v311 = v236 >> 3;
  LODWORD(v236) = __ROR4__(((2 * (v304 ^ v209)) ^ 0x26) - 1402726858, 3);
  LODWORD(v94) = (v311 ^ v236) - ((2 * (v311 ^ v236)) & 0xB243B760);
  v312 = *(_DWORD *)&v270[4 * (BYTE2(v259) ^ 0x86)];
  HIDWORD(v236) = v312 ^ 0x118;
  LODWORD(v236) = v312 ^ 0xD5DB0800;
  v313 = *(_DWORD *)&v272[4 * (BYTE1(v304) ^ 0xDE)] - 181430599;
  v314 = *(_DWORD *)&v269[4 * (BYTE3(v250) ^ 0xBA)] ^ BYTE3(v250) ^ v313 ^ (v313 >> 2) & 0x6664085 ^ *(_DWORD *)&v279[4 * (v305 ^ 0x31)] ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ (((2 * v305) ^ 0x36) - 663686170 + ((2 * ((2 * v305) ^ 0x36) + 3180) & 0x1B5C ^ 0xA7F7DFFF));
  v315 = *(_DWORD *)&v272[4 * (BYTE1(v305) ^ 0x58)] - 181430599;
  LODWORD(v250) = *(_DWORD *)&v269[4 * (BYTE3(v259) ^ 0xDE)] ^ HIDWORD(a28) ^ ((_DWORD)v212 << 23) ^ *(_DWORD *)&v279[4 * (v250 ^ 0x31)] ^ v315 ^ (v315 >> 2) & 0x6664085 ^ (((2 * v250) ^ 0x36) - 663686171 - ((2 * ((2 * v250) ^ 0x36) + 1489513580) & 0x58083B5C)) ^ (((v212 >> 9) ^ 0x6AED84) - 1589794068 - 2 * (((v212 >> 9) ^ 0x6AED84) & 0x3DAAFC ^ (v212 >> 9) & 0x10));
  v316 = (v307 + 1292810723 - ((2 * v307) & 0x9A1D73C6)) ^ v489;
  v317 = (v314 ^ 0xE4) + 200303477 - 2 * ((v314 ^ 0xE4) & 0xBF0637D ^ v314 & 8);
  v318 = *(_DWORD *)&v270[4 * (BYTE2(v316) ^ 0xD7)];
  HIDWORD(v236) = v318 ^ 0x118;
  LODWORD(v236) = v318 ^ 0xD5DB0800;
  v319 = (_DWORD)v94 - 652092496;
  v320 = v250 ^ BYTE3(v259);
  LODWORD(v94) = (v320 ^ 0xF5483EFE) >> 24;
  v321 = HIDWORD(v499) ^ __ROR4__(v319, 29);
  LODWORD(v247) = *(_DWORD *)&v272[4 * (BYTE1(v321) ^ 0x77)] - 181430599;
  v322 = v247 ^ *(_DWORD *)&v269[4 * (v94 ^ 0x5E)] ^ ((v236 >> 9)
                                                                  - 1589794068
                                                                  - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ (v247 >> 2) & 0x6664085;
  v323 = v317 ^ v500;
  v324 = v322 ^ (((2 * (v317 ^ v500)) ^ 0x104) - 1402726858);
  LODWORD(v256) = (v324 + 739040687 - ((2 * v324) & 0x5819BB5E)) ^ *(_DWORD *)&v279[4 * (v323 ^ 0xA8)];
  v325 = *(_DWORD *)&v270[4 * (BYTE2(v321) ^ 0xDB)];
  HIDWORD(v236) = v325 ^ 0x118;
  LODWORD(v236) = v325 ^ 0xD5DB0800;
  v326 = v236 >> 9;
  v327 = *(_DWORD *)&v270[4 * (BYTE2(v323) ^ 0x3A)];
  HIDWORD(v236) = v327 ^ 0x118;
  LODWORD(v236) = v327 ^ 0xD5DB0800;
  *(_DWORD *)(v49 - 152) = -663686171;
  v328 = (v321 ^ 0xC1AC20E1) >> 24;
  v329 = *(_DWORD *)&v272[4 * (BYTE1(v250) ^ 0x69)] - 181430599;
  v330 = v329 ^ ((v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8)) ^ *(_DWORD *)&v269[4 * (v328 ^ 0x5E)] ^ (v329 >> 2) & 0x6664085;
  LODWORD(v250) = *(_DWORD *)&v270[4 * (BYTE2(v250) ^ 0x3F)];
  v331 = v330 + 739040687 - ((2 * v330) & 0x5819BB5E);
  HIDWORD(v236) = v250 ^ 0x118;
  LODWORD(v236) = v250 ^ 0xD5DB0800;
  v332 = (v236 >> 9) - 1589794068 - ((2 * (v236 >> 9)) & 0x427B55D8);
  v333 = (v94 ^ 0x6AF1245D ^ v256) - 822389315;
  v334 = v484;
  if ((v256 & HIDWORD(v483)) != 0)
    v334 = v483;
  v335 = v333 + v334;
  v336 = *(_DWORD *)&v272[4 * (BYTE1(v323) ^ 0x5D)] - 181430599;
  v337 = *(_DWORD *)&v269[4 * (HIBYTE(v316) ^ 0x59)] ^ HIDWORD(v489) ^ *(_DWORD *)&v279[4
                                                                                      * (v320 ^ 0xD4)] ^ (2 * (v320 ^ 0xFE) - 663686171 - ((4 * (v320 ^ 0xFE) + 1489513580) & 0x58083B5C)) ^ v336 ^ (v336 >> 2) & 0x6664085 ^ ((HIBYTE(v316) ^ 7) - 1589794068 - ((2 * (HIBYTE(v316) ^ 7)) & 0x1D8)) ^ v326;
  v338 = (((2 * v316) ^ 0x1C2) - 1402726858) ^ v499 ^ *(_DWORD *)&v279[4
                                                                                      * (v316 ^ 0xCB)] ^ v331;
  v339 = *(_DWORD *)&v272[4 * (BYTE1(v316) ^ 0xA9)] - 181430599;
  v340 = *(_DWORD *)&v269[4 * (HIBYTE(v323) ^ 0x80)] ^ HIDWORD(v498) ^ v339 ^ (v339 >> 2) & 0x6664085 ^ *(_DWORD *)&v279[4 * (v321 ^ 0xCB)] ^ (2 * (v321 ^ 0xE1) - 663686171 - ((4 * (v321 ^ 0xE1) + 1489513580) & 0x58083B5C)) ^ v332;
  v341 = v337 ^ 0x79CBF27C;
  v342 = *(_DWORD *)&v270[4 * (((v337 ^ 0x79CBF27Cu) >> 16) ^ 0x25)];
  HIDWORD(v343) = v342 ^ 0x118;
  LODWORD(v343) = v342 ^ 0xD5DB0800;
  v344 = ((2 * (v340 ^ HIBYTE(v323))) ^ 0x1A8)
       - 663686170
       + ((2 * ((2 * (v340 ^ HIBYTE(v323))) ^ 0x1A8) + 3180) & 0x1B5C ^ 0xA7F7DFFF);
  v345 = *(_DWORD *)&v272[4 * (BYTE1(v338) ^ 0x39)] - 181430599;
  v346 = *(_DWORD *)&v279[4 * ((v340 ^ HIBYTE(v323)) ^ 0xFE)] ^ v345 ^ (v345 >> 2) & 0x6664085 ^ ((v343 >> 9) - 1589794068 - ((2 * (v343 >> 9)) & 0x427B55D8));
  v347 = v335 ^ HIDWORD(v479);
  v348 = v346 ^ HIBYTE(v347) ^ *(_DWORD *)&v269[4 * (HIBYTE(v347) ^ 0xD7)] ^ v344;
  if ((v348 & 2 & BYTE4(v484)) != 0)
    v349 = -1870120472 - (v348 & 2 | 0x48441CF4);
  else
    v349 = v348 & 2 | 0x48441CF4;
  v350 = *(_DWORD *)&v270[4 * (BYTE2(v338) ^ 0x3E)];
  HIDWORD(v351) = v350 ^ 0x118;
  LODWORD(v351) = v350 ^ 0xD5DB0800;
  v352 = (v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8);
  v353 = *(_DWORD *)&v270[4 * (BYTE2(v340) ^ 0x3E)];
  HIDWORD(v351) = v353 ^ 0x118;
  LODWORD(v351) = v353 ^ 0xD5DB0800;
  v354 = *(_DWORD *)&v272[4 * (BYTE1(v347) ^ 0x3A)] - 181430599;
  v355 = HIBYTE(v338) ^ (((2 * v341) ^ 0x1A2)
                       - 663686170
                       + ((2 * ((2 * v341) ^ 0x1A2) + 3180) & 0x1B5C ^ 0xA7F7DFFF)) ^ *(_DWORD *)&v279[4 * (v341 ^ 0xFB)] ^ *(_DWORD *)&v269[4 * (HIBYTE(v338) ^ 0x45)] ^ v354 ^ ((v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8)) ^ (v354 >> 2) & 0x6664085;
  v356 = *(_DWORD *)&v270[4 * (BYTE2(v347) ^ 0xB1)];
  HIDWORD(v351) = v356 ^ 0x118;
  LODWORD(v351) = v356 ^ 0xD5DB0800;
  v357 = v338 ^ v328;
  v358 = HIBYTE(v340);
  v359 = *(_DWORD *)&v272[4 * (BYTE1(v337) ^ 0x66)] - 181430599;
  v360 = v359 ^ *(_DWORD *)&v269[4 * (HIBYTE(v340) ^ 0xD0)] ^ (v359 >> 2) & 0x6664085 ^ ((v351 >> 9)
                                                                                       - 1589794068
                                                                                       - ((2 * (v351 >> 9)) & 0x427B55D8));
  v361 = HIDWORD(v482) ^ v348 & 0xFFFFFFFD ^ (v479 + v349);
  v362 = (((2 * v357) ^ 0x14) - 1402726858) ^ v491 ^ *(_DWORD *)&v279[4 * (v357 ^ 0x20)] ^ (v360
                                                                                          + 739040687
                                                                                          - ((2 * v360) & 0x5819BB5E));
  v363 = *(_DWORD *)&v272[4 * (BYTE1(v340) ^ 0x39)] - 181430599;
  v364 = HIBYTE(v341) ^ HIDWORD(v497) ^ *(_DWORD *)&v269[4 * (HIBYTE(v341) ^ 0x34)] ^ v363 ^ (v363 >> 2) & 0x6664085 ^ *(_DWORD *)&v279[4 * (v347 ^ 0xC0)] ^ v352 ^ (((2 * v347) ^ 0x1D4) - 663686170 + ((2 * ((2 * v347) ^ 0x1D4) + 3180) & 0x1B5C ^ 0xA7F7DFFF));
  v365 = *(_DWORD *)&v270[4 * (BYTE2(v364) ^ 0x20)];
  HIDWORD(v351) = v365 ^ 0x118;
  LODWORD(v351) = v365 ^ 0xD5DB0800;
  v366 = (v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8);
  v367 = (((2 * (v362 ^ v358)) ^ 0xA0)
        - 663686170
        + ((2 * ((2 * (v362 ^ v358)) ^ 0xA0) + 3180) & 0x1B5C ^ 0xA7F7DFFF)) ^ *(_DWORD *)&v279[4 * ((v362 ^ v358) ^ 0x7A)];
  v368 = ((v355 ^ 0x1B) - ((2 * (v355 ^ 0x1B)) & 0x56484038) + 723787804) ^ v498;
  v369 = *(_DWORD *)&v270[4 * (BYTE2(v368) ^ 0xCA)];
  HIDWORD(v351) = v369 ^ 0x118;
  LODWORD(v351) = v369 ^ 0xD5DB0800;
  v370 = v367 + 1926740366 - ((2 * v367) & 0xE5AF731C);
  v371 = *(_DWORD *)&v272[4 * (BYTE1(v362) ^ 0x20)] - 181430599;
  v372 = v371 ^ *(_DWORD *)&v269[4 * (HIBYTE(v364) ^ 0x43)] ^ (v371 >> 2) & 0x6664085 ^ ((v351 >> 9)
                                                                                       - 1589794068
                                                                                       - ((2 * (v351 >> 9)) & 0x427B55D8));
  v373 = *(_DWORD *)&v279[4 * (BYTE4(v482) ^ v348 & 0xFD ^ (v479 + v349) ^ 0xDA)] ^ HIBYTE(v364) ^ (((2 * (BYTE4(v482) ^ v348 & 0xFD ^ (v479 + v349))) ^ 0x1E0) - 1402726858) ^ 0x1D ^ (v372 + 739040687 - ((2 * v372) & 0x5819BB5E));
  v374 = *(_DWORD *)&v269[4 * (HIBYTE(v368) ^ 0xBE)] ^ ((HIBYTE(v368) ^ 0xE0)
                                                      - 1589794067
                                                      + ((v368 >> 23) & 0x1D8 ^ 0xFFFFFE3F)) ^ 0x79CBF27C;
  v375 = *(_DWORD *)&v270[4 * (BYTE2(v362) ^ 0xCE)];
  HIDWORD(v351) = v375 ^ 0x118;
  LODWORD(v351) = v375 ^ 0xD5DB0800;
  v376 = v374 + (v351 >> 9) - 2 * (v374 & (v351 >> 9));
  v377 = *(_DWORD *)&v270[4 * (BYTE2(v361) ^ 0xA6)];
  HIDWORD(v351) = v377 ^ 0x118;
  LODWORD(v351) = v377 ^ 0xD5DB0800;
  v378 = *(_DWORD *)(v49 - 152);
  v379 = HIBYTE(v361);
  v380 = *(_DWORD *)&v272[4 * (BYTE1(v368) ^ 0x3E)] - 181430599;
  v381 = v482 ^ *(_DWORD *)&v269[4 * (HIBYTE(v361) ^ 0x89)] ^ v380 ^ v366 ^ (v380 >> 2) & 0x6664085 ^ v370;
  v382 = *(_DWORD *)&v272[4 * (BYTE1(v364) ^ 0xF5)] - 181430599;
  v383 = HIBYTE(v362) ^ v496 ^ (((2 * v368) ^ 0x1EE)
                              + v378
                              - ((2 * ((2 * v368) ^ 0x1EE) + 1489513580) & 0x58083B5C)) ^ *(_DWORD *)&v279[4 * (v368 ^ 0xDD)] ^ *(_DWORD *)&v269[4 * (HIBYTE(v362) ^ 0xDF)] ^ v382 ^ (v382 >> 2) & 0x6664085 ^ ((v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8));
  v384 = *(_DWORD *)&v272[4 * (BYTE1(v361) ^ 0x4C)] - 181430599;
  v385 = *(_DWORD *)&v279[4 * (v364 ^ 0xC5)] ^ HIDWORD(v496) ^ v384 ^ (((2 * v364) ^ 0x1DE)
                                                                                      - 663686170
                                                                                      + ((2
                                                                                        * ((2 * v364) ^ 0x1DE)
                                                                                        + 3180) & 0x1B5C ^ 0xA7F7DFFF)) ^ (v384 >> 2) & 0x6664085;
  v386 = (v373 - ((2 * v373) & 0x36BE3D3C) - 1688265058) ^ v497;
  v387 = v385 ^ v376;
  v388 = *(_DWORD *)&v270[4 * (BYTE2(v386) ^ 0x8B)];
  HIDWORD(v351) = v388 ^ 0x118;
  LODWORD(v351) = v388 ^ 0xD5DB0800;
  v389 = (v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8);
  v390 = *(_DWORD *)&v272[4 * (BYTE1(v387) ^ 0xCC)];
  v391 = ((2 * v390 + 111334488) & 0xE3BC591A) + ((v390 - 2091816404) ^ 0x71DE2C8D);
  v392 = *(_DWORD *)&v270[4 * (BYTE2(v387) ^ 1)];
  v393 = HIBYTE(v386);
  v394 = *(_DWORD *)&v272[4 * (BYTE1(v383) ^ 0x3E)] - 181430599;
  v395 = *(_DWORD *)&v269[4 * (HIBYTE(v386) ^ 0x35)] ^ (v392 << 23) ^ v394 ^ (v394 >> 2) & 0x6664085 ^ (((v392 >> 9) ^ 0x6AED84) - 1589794067 + ~(2 * (((v392 >> 9) ^ 0x6AED84) & 0x3DAAFD ^ (v392 >> 9) & 0x11)));
  v396 = *(_DWORD *)&v270[4 * (BYTE2(v383) ^ 0xCA)];
  HIDWORD(v351) = v396 ^ 0x118;
  LODWORD(v351) = v396 ^ 0xD5DB0800;
  v397 = *(_DWORD *)&v272[4 * (BYTE1(v381) ^ 0x3E)] - 181430599;
  v398 = (((2 * ((v373 - ((2 * v373) & 0x3C) - 98) ^ v497)) ^ 0x1CC) - 1402726858) ^ *(_DWORD *)&v269[4 * (HIBYTE(v387) ^ 0xB2)] ^ v397 ^ ((v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8)) ^ (v397 >> 2) & 0x6664085;
  v399 = *(_DWORD *)&v270[4 * (BYTE2(v381) ^ 0x3D)];
  HIDWORD(v351) = v399 ^ 0x118;
  LODWORD(v351) = v399 ^ 0xD5DB0800;
  v400 = HIDWORD(v481) ^ (((2 * (v381 ^ v379)) ^ 0xC6) - 1402726858) ^ *(_DWORD *)&v279[4 * ((v381 ^ v379) ^ 0x49)] ^ ((v395 ^ 0x8C000000) + 739040687 - 2 * ((v395 ^ 0x8C000000) & 0x2C0CDDBF ^ v395 & 0x10));
  v381 >>= 24;
  v401 = *(_DWORD *)&v269[4 * (v381 ^ 0xF)] ^ HIDWORD(v495) ^ *(_DWORD *)&v279[4 * (v383 ^ 0x5C)] ^ v391 ^ (v391 >> 2) & 0x6664085 ^ (((2 * v383) ^ 0xEC) - 663686170 + ((2 * ((2 * v383) ^ 0xEC) + 3180) & 0x1B5C ^ 0xA7F7DFFF)) ^ v389;
  v402 = v481 ^ *(_DWORD *)&v279[4 * (((v373 - ((2 * v373) & 0x3C) - 98) ^ v497) ^ 0xCC)] ^ (v398 + 739040687 - ((2 * v398) & 0x5819BB5E));
  v403 = (HIBYTE(v387) ^ 0xEC) - ((2 * (HIBYTE(v387) ^ 0xEC)) & 0x36);
  v404 = *(_DWORD *)&v272[4
                        * (((unsigned __int16)((v373 - ((2 * v373) & 0x3D3C) + 7838) ^ v497) >> 8) ^ 0xEC)]
       - 181430599;
  v405 = *(_DWORD *)&v270[4 * (BYTE2(v400) ^ 0x86)];
  v406 = HIBYTE(v383) ^ v495 ^ *(_DWORD *)&v269[4 * (HIBYTE(v383) ^ 0x1E)] ^ (((2 * v387) ^ 0x116)
                                                                            + v378
                                                                            - ((2
                                                                              * ((2 * v387) ^ 0x116)
                                                                              + 1489513580) & 0x58083B5C)) ^ *(_DWORD *)&v279[4 * (v387 ^ 0xA1)] ^ v404 ^ ((v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8));
  HIDWORD(v351) = v405 ^ 0x118;
  LODWORD(v351) = v405 ^ 0xD5DB0800;
  v407 = v406 ^ (v404 >> 2) & 0x6664085;
  v408 = *(_DWORD *)&v272[4 * (BYTE1(v402) ^ 0x54)] - 181430599;
  v409 = v408 ^ *(_DWORD *)&v269[4 * (HIBYTE(v401) ^ 0x7D)] ^ (v408 >> 2) & 0x6664085 ^ ((v351 >> 9)
                                                                                       - 1589794068
                                                                                       - ((2 * (v351 >> 9)) & 0x427B55D8));
  v410 = *(_DWORD *)&v279[4 * (v407 ^ 0x71)] ^ HIBYTE(v401) ^ (2 * (v407 ^ 0x5B)
                                                                              - 1402726858) ^ (v409
                                                                                             + 739040687
                                                                                             - ((2 * v409) & 0x5819BB5E));
  v411 = v402 ^ (v403 + 691807003);
  v412 = *(_DWORD *)&v270[4 * (BYTE2(v402) ^ 0x1C)];
  HIDWORD(v351) = v412 ^ 0x118;
  LODWORD(v351) = v412 ^ 0xD5DB0800;
  v413 = *(_DWORD *)&v272[4 * (BYTE1(v407) ^ 0xC3)] - 181430599;
  v507 = HIBYTE(v400);
  v414 = v413 ^ (v413 >> 2) & 0x6664085 ^ ((v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8)) ^ *(_DWORD *)&v269[4 * (HIBYTE(v400) ^ 0x3D)];
  v415 = *(_DWORD *)&v270[4 * (BYTE2(v407) ^ 0xD6)];
  HIDWORD(v351) = v415 ^ 0x118;
  LODWORD(v351) = v415 ^ 0xD5DB0800;
  v416 = v414 + 739040687 - ((2 * v414) & 0x5819BB5E);
  v417 = (v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8);
  LOBYTE(v414) = v400 ^ v393;
  v418 = ((2 * (v400 ^ v393)) ^ 0x14)
       - 663686170
       + ((2 * ((2 * (v400 ^ v393)) ^ 0x14) + 3180) & 0x1B5C ^ 0xA7F7DFFF);
  v419 = *(_DWORD *)&v270[4 * (BYTE2(v401) ^ 0xD4)];
  HIDWORD(v351) = v419 ^ 0x118;
  LODWORD(v351) = v419 ^ 0xD5DB0800;
  LOBYTE(v381) = v401 ^ v381;
  v420 = *(_DWORD *)&v272[4 * (BYTE1(v401) ^ 0xF2)];
  v421 = *(_DWORD *)&v272[4 * (BYTE1(v400) ^ 0x54)];
  v422 = *(_DWORD *)&v269[4 * (((v407 ^ 0x6CA1945Bu) >> 24) ^ 0x5E)] ^ ((v407 ^ 0x6CA1945Bu) >> 24) ^ (2 * (v411 ^ 0x90) + v378 - ((4 * (v411 ^ 0x90) + 1489513580) & 0x58083B5C)) ^ *(_DWORD *)&v279[4 * (v411 ^ 0xBA)] ^ (v421 - 181430599) ^ ((v421 - 181430599) >> 2) & 0x6664085 ^ ((v351 >> 9) - 1589794068 - ((2 * (v351 >> 9)) & 0x427B55D8));
  v423 = ((v410 ^ 0x23) + 668550008 - 2 * ((v410 ^ 0x23) & 0x27D9437C ^ v410 & 4)) ^ HIDWORD(v494);
  v424 = (((2 * v381) ^ 0x86) - 1402726858) ^ v494 ^ *(_DWORD *)&v279[4
                                                                                     * (v381 ^ 0x69)] ^ v416;
  v425 = v422 - ((2 * v422) & 0xC181318A);
  v426 = *(_DWORD *)&v269[4 * (((v411 ^ 0x94572090) >> 24) ^ 0x5E)] ^ HIDWORD(v505) ^ ((v411 ^ 0x94572090) >> 24) ^ (v420 - 181430599) ^ *(_DWORD *)&v279[4 * (v414 ^ 0x20)] ^ ((v420 - 181430599) >> 2) & 0x6664085 ^ v417 ^ v418;
  v427 = (uint64_t)*(&off_24E21C7C0 + *(_DWORD *)(v49 - 144) - 322);
  v428 = *(_DWORD *)(v427 + 4 * (HIBYTE(v423) ^ 0x55));
  HIDWORD(v351) = v428 ^ 0xFE249;
  LODWORD(v351) = v428 ^ 0x3AC00000;
  v429 = (v351 >> 22);
  *(_DWORD *)(v49 - 152) = (BYTE2(v424) ^ 3) + 62616672 + ((2 * (BYTE2(v424) ^ 3) + 950) & 0x508 ^ 0xEFFEFFFF);
  v430 = *(_DWORD *)(v427 + 4 * (HIBYTE(v424) ^ 0x55));
  HIDWORD(v351) = v430 ^ 0xFE249;
  LODWORD(v351) = v430 ^ 0x3AC00000;
  v431 = v351 >> 22;
  v432 = (v425 + 1623234757) ^ HIDWORD(v493);
  v433 = ((unsigned __int16)((v425 - 26427) ^ WORD2(v493)) >> 8) ^ 0xEE;
  v434 = *(_DWORD *)(v427 + 4 * (HIBYTE(v426) ^ 0x13));
  v435 = v433 + 2096949421 + ((2 * ((v432 >> 8) ^ 0xDA2BEE) + 40) & 0x32 ^ 0xFFF627FF);
  HIDWORD(v351) = v434 ^ 0xFE249;
  LODWORD(v351) = v434 ^ 0x3AC00000;
  v436 = v351 >> 22;
  v437 = (BYTE2(v432) ^ 0x2B) + 62616672 + ((2 * (BYTE2(v432) ^ 0x2B) + 950) & 0x508 ^ 0xEFFEFFFF);
  LODWORD(v427) = *(_DWORD *)(v427 + 4 * (HIBYTE(v432) ^ 0xDA));
  v438 = v507 ^ 0x13 ^ v424;
  HIDWORD(v351) = v427 ^ 0xFE249;
  LODWORD(v351) = v427 ^ 0x3AC00000;
  v439 = (char *)*(&off_24E21C7C0 + SHIDWORD(v475)) - 4;
  v440 = *(_DWORD *)&v439[4 * (BYTE2(v424) ^ 0xB8)];
  v441 = *(_DWORD *)&v439[4 * (BYTE2(v426) ^ 0x52)];
  v442 = *(_DWORD *)&v439[4 * (BYTE2(v432) ^ 0x90)];
  v443 = *(_DWORD *)&v439[4 * (BYTE2(v423) ^ 0xB8)] ^ ((~(2 * (BYTE2(v423) ^ 3) + 357663670) | 0xEFFEFAF7)
                                                     + (BYTE2(v423) ^ 3)
                                                     + 62616672) ^ (v351 >> 22) ^ ((v351 >> 22) >> 1) & 0x21041D34;
  v444 = (char *)*(&off_24E21C7C0 + (int)v475) - 8;
  LODWORD(v427) = *(_DWORD *)&v444[4 * (BYTE1(v426) ^ 0xDC)];
  v445 = *(_DWORD *)&v444[4 * (v433 ^ 0x9B)];
  v446 = *(_DWORD *)&v444[4 * (BYTE1(v423) ^ 0x17)];
  v447 = BYTE1(v424);
  v448 = *(_DWORD *)&v444[4 * (v447 ^ 0x17)];
  LODWORD(v444) = v432 ^ 0xCE;
  v449 = (char *)*(&off_24E21C7C0 + SHIDWORD(v474)) - 12;
  LODWORD(v439) = *(_DWORD *)&v449[4 * v438];
  v450 = v473 ^ HIDWORD(v493) ^ ((v447 ^ 0x8C) + 544730260) ^ v448 ^ (*(_DWORD *)&v449[4 * (v426 ^ 2)]
                                                                                  - 925752526) ^ (v443
                                                                                                - ((2 * v443) & 0xB909F832)
                                                                                                + 1552219161);
  v451 = v440 ^ a46 ^ v427 ^ v429 ^ (*(_DWORD *)&v449[4 * v444]
                                                                             - 925752526) ^ (v429 >> 1) & 0x21041D34 ^ *(_DWORD *)(v49 - 152) ^ ((BYTE1(v426) ^ 0x47) + 2096949421 - ((2 * (BYTE1(v426) ^ 0x47) + 1038632) & 0x9D832));
  v452 = v441 ^ v480 ^ v431 ^ v445 ^ ((BYTE2(v426) ^ 0xE9)
                                                  + 62616672
                                                  + ((2 * (BYTE2(v426) ^ 0xE9) + 950) & 0x508 ^ 0xEFFEFFFF)) ^ (v431 >> 1) & 0x21041D34 ^ (v435 + 1) ^ (*(_DWORD *)&v449[4 * (v423 ^ 0x70)] - 925752526);
  v453 = (_DWORD)v439 - 925752526;
  v454 = *(_BYTE **)(v49 - 136);
  v455 = ((BYTE1(v423) ^ 0x8C) + 2096949421 - ((2 * (BYTE1(v423) ^ 0x8C) + 1038632) & 0x9D832)) ^ v473 ^ v442 ^ v446 ^ v436 ^ (v436 >> 1) & 0x21041D34 ^ v453 ^ v437;
  v456 = v455 ^ 0xC0C9B80C ^ -(v455 ^ 0xC0C9B80C) ^ ((v455 ^ 0x2998DF2D) + 380541151);
  v457 = v456 - ((2 * v456 + 761082300) & 0x7D3D17CA) - 716364605;
  v458 = (char *)*(&off_24E21C7C0 + (int)v474) - 12;
  v454[12] = v458[v450 >> 24] ^ 0xB8 ^ ((BYTE3(v450) ^ 0xC3) - ((2 * (BYTE3(v450) ^ 0xC3) + 68) & 0x6E) + 89);
  v459 = *(_QWORD *)(v49 - 232);
  v454[v459] = ((BYTE3(v451) ^ 0xC7) - ((2 * (BYTE3(v451) ^ 0xC7) + 68) & 0x6E) + 89) ^ 0x64 ^ v458[BYTE3(v451) ^ 4];
  v454[8] = v458[HIBYTE(v457) ^ 0x28] ^ ((HIBYTE(v457) ^ 0xEB) - ((2 * (HIBYTE(v457) ^ 0xEB) + 68) & 0x6E) + 89) ^ 0x6B;
  v460 = BYTE3(v452);
  v461 = (char *)*(&off_24E21C7C0 + SHIDWORD(v473)) - 4;
  HIDWORD(v351) = v461[BYTE2(v457) ^ 0x43];
  LODWORD(v351) = (HIDWORD(v351) ^ 0x20) << 24;
  v454[9] = (v351 >> 29) ^ 0x5A;
  LOBYTE(v458) = v458[v460 ^ 0x4E];
  v462 = (2 * (v458 & 2)) ^ 4 | v458 & 2;
  LODWORD(v460) = (v460 ^ 0x8D) - ((2 * (v460 ^ 0x8D) + 68) & 0x6A) - 41;
  LOBYTE(v418) = (v462 - 2) & (v460 ^ 0xB4);
  LODWORD(v460) = v460 ^ 0xFFFFFFB5;
  v463 = v462 - 2 + v460;
  v464 = (2 * v463) & 0xCA;
  v465 = v460 - v462 + 35 - ((2 * (v460 - v462 + 35) - 66) & 0xCA) - 60;
  v466 = v458 & 0xFD ^ 0x35;
  if ((v418 & 0xFE) == 0)
    v465 = v463 - ((2 * v463) & 0xCA) - 27;
  v454[*(_QWORD *)(v49 - 208)] = (v466 - ((2 * v466) & 0xCA) - 27) ^ 0x15 ^ v465;
  v467 = *(_DWORD *)(v49 - 144);
  v468 = (char *)*(&off_24E21C7C0 + v467 - 278) - 8;
  v454[10] = v468[BYTE1(v457) ^ 3] ^ 0x57;
  v469 = v457 ^ 0xE5;
  v470 = (char *)*(&off_24E21C7C0 + v467 - 572) - 8;
  v454[*(_QWORD *)(v49 - 216)] = v470[v469] ^ (((16 * v470[v469]) ^ 0xC0 ^ (v470[v469] << 7))
                                             - ((2 * ((16 * v470[v469]) ^ 0xC0)) & 0xA0)
                                             + 87) ^ 0xE1;
  v454[*(_QWORD *)(v49 - 248)] = v468[BYTE1(v452) ^ 0xA0] ^ 0x36;
  v454[*(_QWORD *)(v49 - 192)] = v470[v451 ^ 0x40] ^ 0xA0 ^ (((16
                                                                                * v470[v451 ^ 0x40]) ^ 0xC0 ^ (v470[v451 ^ 0x40] << 7))
                                                                              - ((2
                                                                                * ((16
                                                                                  * v470[v451 ^ 0x40]) ^ 0xC0)) & 0xA0)
                                                                              - 43);
  HIDWORD(v471) = v461[BYTE2(v452) ^ 0x83];
  LODWORD(v471) = (HIDWORD(v471) ^ 0x20) << 24;
  v454[*(_QWORD *)(v49 - 168)] = (v471 >> 29) ^ 0xF6;
  HIDWORD(v471) = v461[((v450 ^ 0xEACB18) >> 16) ^ 0x98];
  LODWORD(v471) = (HIDWORD(v471) ^ 0x20) << 24;
  v454[*(_QWORD *)(v49 - 240)] = (v471 >> 29) ^ 0xF1;
  v454[*(_QWORD *)(v49 - 256)] = v468[((unsigned __int16)(v450 ^ 0xCB18) >> 8) ^ 0xDBLL] ^ 0xD6;
  v454[*(_QWORD *)(v49 - 176)] = v468[BYTE1(v451) ^ 0xF8] ^ 0xB;
  LODWORD(v469) = v461[BYTE2(v451) ^ 0xDCLL];
  v454[*(_QWORD *)(v49 - 224)] = ((v469 >> 5) ^ 0xE7) & 0x21 ^ (8 * v469) & 0x30 | ((v469 >> 5) ^ 0xE7) & 0xC6 ^ (8 * v469) & 0xCF;
  v454[*(_QWORD *)(v49 - 184)] = v470[v450 ^ 0xBDLL] ^ (((16 * v470[v450 ^ 0xBDLL]) ^ 0xC0 ^ (v470[v450 ^ 0xBDLL] << 7))
                                                                       + ((2
                                                                         * ((16 * v470[v450 ^ 0xBDLL]) ^ 0xC0)) & 0x80)
                                                                       - 64) ^ 0x3E;
  v454[*(_QWORD *)(v49 - 160)] = v470[v452 ^ 0x43] ^ 0xE4 ^ (((16
                                                                                * v470[v452 ^ 0x43]) ^ (v470[v452 ^ 0x43] << 7) ^ 0xC0)
                                                                              - 32
                                                                              * (v470[v452 ^ 0x43] & 3)
                                                                              - 66);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a48 + 8 * ((482 * ((((_DWORD)v459 - 1849857852 - 2 * (((_DWORD)v459 + 16) & 0x11BD68B5 ^ *(_DWORD *)(v49 - 200) & 1)) ^ 0x91BD68B4) >= HIDWORD(a46))) ^ (v467 + 567))))(v452, v451, v459, v464, 67, &off_24E21C7C0, 140, v429, a9, a10, a11, v473, v474, v475, v476, v477, v478, v479, v480,
           v481,
           v482,
           v483,
           v484,
           v485,
           v486,
           v487,
           v488,
           a28,
           v489,
           v490,
           v491,
           v492,
           v493,
           v494,
           v495,
           v496,
           v497,
           v498,
           v499,
           v500,
           v501,
           v502,
           v503,
           v504,
           v505,
           a46);
}

void sub_21E07207C(int a1)
{
  uint64_t v1;

  *(_DWORD *)(v1 - 152) = a1 ^ 0x7C264667;
  JUMPOUT(0x21E06F434);
}

uint64_t sub_21E0720B8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (980 * (v3 != a3)))) - (((v4 - 1104) | 0x4Cu) ^ 0x1DALL)))();
}

uint64_t sub_21E0720F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * ((1054 * (((((a7 - 17603344) & 0x10C9BF5) - 700) & v7) == 0)) ^ a7)))();
}

uint64_t sub_21E072130(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int v52;
  char v53;
  int v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char v59;
  uint64_t v60;
  int8x16x4_t v62;

  *(_DWORD *)(v56 - 144) = v55;
  *(_DWORD *)(v56 - 152) = v52;
  *(_DWORD *)(v56 - 160) = v52 & 0xFFFFFFF8;
  v58 = -8 - a3;
  v59 = v53 + a1 + v54;
  v60 = (a1 + v54 + a2 + v58 + 8);
  v62.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v54 + (_BYTE)a2 + (_BYTE)v58 + 8) & 0xF;
  v62.val[0].i64[1] = (v59 + 7 + (_BYTE)v58 + 8) & 0xF;
  v62.val[1].i64[0] = (v59 + 6 + (_BYTE)v58 + 8) & 0xF;
  v62.val[1].i64[1] = (v59 + 5 + (_BYTE)v58 + 8) & 0xF;
  v62.val[2].i64[0] = (v59 + 4 + (_BYTE)v58 + 8) & 0xF;
  v62.val[2].i64[1] = (v59 + 3 + (_BYTE)v58 + 8) & 0xF;
  v62.val[3].i64[0] = (v59 + 2 + (_BYTE)v58 + 8) & 0xF;
  v62.val[3].i64[1] = (v51 + (_BYTE)v58 + ((a6 + 32) ^ 1) + 8) & 0xF;
  *(int8x8_t *)(v57 - 7 + v60) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v48 + (v60 & 0xF) - 7), *(int8x8_t *)(v57 - 7 + v60)), veor_s8(*(int8x8_t *)(v50 + (v60 & 0xF) - 7), *(int8x8_t *)((v60 & 0xF) + v49 - 4))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v62, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x8181818181818181)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a48 + 8 * ((111 * (-(v52 & 0xFFFFFFF8) == v58)) ^ a6)) - 4))((__n128)xmmword_21E17F900);
}

void sub_21E07227C()
{
  JUMPOUT(0x21E07218CLL);
}

uint64_t sub_21E072284(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2
                              + 8 * ((((a2 - 764) ^ 0xC3A) * (*(_DWORD *)(v3 - 152) == *(_DWORD *)(v3 - 160))) ^ a2)))();
}

uint64_t sub_21E0722B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (v5 - 750357672);
  *(_BYTE *)(v10 + v11) ^= *(_BYTE *)(v6 + (v11 & 0xF)) ^ *(_BYTE *)(v8 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v7 + 3) ^ (-127 * (v11 & 0xF));
  return (*(uint64_t (**)(void))(v9 + 8 * ((345 * (v5 - 1 == a4)) ^ (a5 + 1955))))();
}

void sub_21E072318()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 185602448)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 4) = v1;
}

void sub_21E07237C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 24) - 1503746353 * ((-2 - ((~(_DWORD)a1 | 0x2E1519A) + (a1 | 0xFD1EAE65))) ^ 0x2480932C);
  v2 = *(_QWORD *)((char *)*(&off_24E21C7C0 + (v1 ^ 0x4A9))
                 + 8
                 * ((3387
                   * (((uint64_t (*)(uint64_t, uint64_t))*(&off_24E21C7C0 + (v1 ^ 0x56E)))(12, 205473644) != 0)) ^ v1)
                 - 12)
     - 8;
  __asm { BR              X8 }
}

uint64_t sub_21E072448(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  char v5;
  char v6;
  _DWORD *v7;
  _QWORD *v8;

  v4 = *(_DWORD *)v1 + v2;
  v5 = *(_BYTE *)(v1 + 4);
  v6 = *(_BYTE *)(v1 + 28) + v2;
  v8 = *(_QWORD **)(v1 + 8);
  v7 = *(_DWORD **)(v1 + 16);
  *(_BYTE *)(result + 4) = (*(_BYTE *)(v1 + 29) + v2) ^ 0x6B;
  *(_BYTE *)(result + 5) = -121 * v6 - 86;
  *(_BYTE *)(result + 6) = v2 + v5 - 81;
  *(_BYTE *)(result + 7) = v4 ^ 0x86;
  *(_DWORD *)(result + 8) = 0;
  *v8 = result;
  *v7 = v3;
  return result;
}

uint64_t sub_21E0724BC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 1866394843 * (a1 ^ 0xEA1737F4);
  v2 = *(_DWORD *)a1 + v1;
  v3 = *(_DWORD *)(a1 + 4) - v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1D17695A8381D362);
  v6 = v4 - 201714705;
  v5 = v4 - 201714705 < 0;
  v7 = 201714705 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + v2 - 1091)
                                        + 8 * ((3631 * (v3 >> 5 < v7)) ^ v2)
                                        - 12)
                            - 8))();
}

uint64_t sub_21E072550@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;

  v4 = ((*(_DWORD *)(*(_QWORD *)(v2 - 0x1D17695A8381D35ELL) + 4 * v3 - 0x2CF4A33C3453BA2BLL) ^ 0x92AF9571) >> a2) ^ 0xFCC65FAD;
  *(_DWORD *)(result + 16) = v4 & 0x41FD37EB ^ 0x5FBE2E1B ^ ((v4 & 0x41FD37EA)
                                                           - (v4 & 0x180212A)
                                                           + (v4 & 0x180212A ^ 0x3982A93A));
  return result;
}

uint64_t sub_21E0725E4(uint64_t result)
{
  *(_DWORD *)(result + 16) = 1715242784;
  return result;
}

void sub_21E0725F4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_21E072664()
{
  return 4294925278;
}

uint64_t sub_21E072818(uint64_t a1)
{
  int v1;

  v1 = 2009815553 * ((-2 - ((a1 | 0x2846D9B7) + (~(_DWORD)a1 | 0xD7B92648))) ^ 0x26B2080D);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + (*(_DWORD *)(a1 + 12) ^ v1) - 2170)
                                        + 8
                                        * ((1181 * ((*(_DWORD *)(a1 + 8) + v1 - 304519294) > 6)) ^ *(_DWORD *)(a1 + 12) ^ v1)
                                        - 12)
                            - (((*(_DWORD *)(a1 + 12) ^ v1 ^ 0xC41u) + 1076) ^ 0x8DBLL)))();
}

uint64_t sub_21E0728C0@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (a1 ^ (57 * (v2 > 0x1E))))
                            - (a1 ^ 0x35u)
                            - ((a1 - 1280298712) & 0x4C4FCF36)
                            + 4624))();
}

uint64_t sub_21E072914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  int v3;
  char *v4;
  char *v5;
  int8x16x4_t v7;
  int8x16x4_t v8;
  int8x16x4_t v9;

  v4 = v2 + 64;
  v5 = v2;
  v7 = vld4q_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v9 = vld4q_s8(v4);
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  v7.val[0] = v9.val[3];
  v7.val[1] = v9.val[2];
  v7.val[2] = v9.val[1];
  v7.val[3] = v9.val[0];
  vst4q_s8(v5, v8);
  vst4q_s8(v4, v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((2 * ((((v1 & 0x1FFFFFFE0) == 32) ^ (v3 + 61)) & 1)) & 0xEF | (16 * ((((v1 & 0x1FFFFFFE0) == 32) ^ (v3 + 61)) & 1))) ^ (v3 - 1236)))
                            - 12))();
}

void sub_21E072998()
{
  JUMPOUT(0x21E07293CLL);
}

uint64_t sub_21E0729A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v1 == v2) ^ (73 * (v3 ^ 2))) & 1)
                                          * (1137 * (v3 ^ 0xC1F) - 2214)) ^ v3))
                            - 8))();
}

uint64_t sub_21E0729EC@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (924 * ((v1 & 0x18) == 0)))) - 8))();
}

uint64_t sub_21E072A40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char *v5;
  int8x8x4_t v7;
  int8x8x4_t v8;

  v5 = (char *)(v2 + 4 * v3);
  v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1408 * (v3 + (v4 - 84) - (v1 & 0x1FFFFFFF8) == 2266)) ^ v4))
                            - 8))();
}

uint64_t sub_21E072AA4@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v3;
  int v4;
  int8x8x4_t v6;
  int8x8x4_t v7;

  v6 = vld4_s8(v3);
  v7.val[0] = v6.val[3];
  v7.val[1] = v6.val[2];
  v7.val[2] = v6.val[1];
  v7.val[3] = v6.val[0];
  vst4_s8(v3, v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((a2 == 0) * a1) ^ v4)) - 8))();
}

uint64_t sub_21E072ADC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 | (v1 == v3))) - ((v2 - 1250) | 0xA3u) + 1175))();
}

uint64_t sub_21E072B04@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  int v2;
  int v3;
  char v4;
  char v5;

  v4 = *v1;
  *v1 = v1[3];
  v1[3] = v4;
  v5 = v1[1];
  v1[1] = v1[2];
  v1[2] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((3136 * (v2 - 1 == (((v3 + 925) | 0xA2) ^ 0x1226909F))) ^ v3))
                            - 12))();
}

void sub_21E072B68(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 2009815553 * (((a1 | 0xC818A780) - (a1 & 0xC818A780)) ^ 0x391389C5);
  __asm { BR              X10 }
}

uint64_t sub_21E072C28@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2704 * (*(_QWORD *)(v1 + 16) == 0)) ^ ((a1 + 91) | 0xA)))
                            - (((a1 + 91) | 0xAu)
                             - 1016)
                            + 714))();
}

uint64_t sub_21E072CA0@<X0>(int a1@<W8>)
{
  uint64_t (*v1)(uint64_t *);
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t result;
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;

  v6 = ((70718629 - (&v8 | 0x43714A5) + (&v8 | 0xFBC8EB5A)) ^ 0xB23E4D1E) * v2;
  v11 = v5;
  v12 = v6 + v3 - 292;
  v8 = 0x45D0856C2970AB82;
  v9 = v6 + 1391826208;
  v10 = v6 + a1;
  result = v1(&v8);
  *(_DWORD *)(v4 + 24) = *(_DWORD *)(v5 - 0x6898E7DB637CE953);
  return result;
}

void sub_21E072F60(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void);
  char v5;
  _QWORD v6[2];
  unsigned int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 16) - 1734664879 * ((-1224886196 - (a1 | 0xB6FDB84C) + (a1 | 0x490247B3)) ^ 0x66D96FA9);
  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v7 = (731811679 * (v6 ^ 0x49F6A644)) ^ (v1 + 2517);
  v6[0] = v2;
  v6[1] = &v5;
  ((void (*)(_QWORD *))*(&off_24E21C7C0 + v1 - 242))(v6);
  v4 = (void (*)(void))((char *)*(&off_24E21C7C0 + (v1 ^ 0x2FE)) - 8);
  v4();
  v4();
  __asm { BR              X9 }
}

uint64_t sub_21E07318C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v39;
  int v40;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (((v39 != 0) * (v40 + 2256)) ^ (v40 - 220))) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_21E073FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  unint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v49 = 1990461019 * ((v48 + 1125156024 - 2 * ((v48 - 152) & 0x43108550)) ^ 0x6CF427D9);
  STACK[0xD80] = a22;
  STACK[0xD90] = v47;
  *(_DWORD *)(v48 - 112) = 6623648 - v49;
  *(_DWORD *)(v48 - 152) = v46 - v49 + 896;
  STACK[0xD98] = v45;
  v50 = ((uint64_t (*)(uint64_t))*(&off_24E21C7C0 + (v46 ^ 0x371)))(v48 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a45
                                                      + 8
                                                      * ((1377
                                                        * (*(_DWORD *)(v48 - 136) == ((v46 + 203) | 0x11) + 939000690)) ^ v46))
                                          - 12))(v50);
}

uint64_t sub_21E0740B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((3275 * (a47 == ((v47 + 220) ^ 0xC395D98))) ^ v47)) - 12))();
}

uint64_t sub_21E0740F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  STACK[0xD88] = v47;
  STACK[0xD90] = v45 + 12;
  STACK[0xD78] = a20;
  *(_DWORD *)(v48 - 140) = v46
                         + 1328090399
                         * ((1014288680 - ((v48 - 152) | 0x3C74D128) + ((v48 - 152) | 0xC38B2ED7)) ^ 0x3C584AED)
                         + 333;
  v49 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + v46 - 152) - 8))(v48 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a45
                                                      + 8 * ((3378 * (*(_DWORD *)(v48 - 144) == 939001227)) ^ v46))
                                          - ((v46 - 52) ^ 0x310u)
                                          + 525))(v49);
}

uint64_t sub_21E0741BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  uint64_t v48;
  int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;

  STACK[0xD78] = a19;
  *(_DWORD *)(v51 - 128) = (v49 + 320) ^ (225134719
                                        * ((((v51 - 152) ^ 0xB1D83818) & 0x69FAE35A | ~((v51 - 152) ^ 0xB1D83818 | 0x69FAE35A)) ^ 0x312D6197));
  STACK[0xD88] = v50 + 0x50D5A729729496;
  STACK[0xD80] = v48 + (a48 - 849310553);
  STACK[0xD98] = v50;
  v52 = ((uint64_t (*)(uint64_t))*(&off_24E21C7C0 + v49 + 122))(v51 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a45
                                                      + 8
                                                      * ((((v49 ^ (*(_DWORD *)(v51 - 112) == 939001227)) & 1)
                                                        * (v49 - 213)) | v49))
                                          - 12))(v52);
}

uint64_t sub_21E07429C()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_21E0742F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a8 + 8 * ((3655 * (v8 == v9 + 939000690)) ^ (v9 + 792))) - 8))();
}

uint64_t sub_21E074328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void (*a35)(uint64_t),uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;

  v49 = v48 - 152;
  *(_DWORD *)(v48 - 144) = (v45 + 1935319671) ^ (1328090399
                                               * ((((v48 - 152) | 0x70CE724A) - ((v48 - 152) & 0x70CE724A)) ^ 0x8F1D1670));
  STACK[0xD78] = v47;
  sub_21E0DD598((uint64_t *)(v48 - 152));
  v50 = 1503746353 * ((((2 * v49) | 0x9ED3498A) - v49 + 815160123) ^ 0xE9086673);
  STACK[0xD88] = v47;
  *(_DWORD *)(v48 - 128) = v45 + 157 - v50;
  *(_DWORD *)(v48 - 152) = v50 + 386513842;
  STACK[0xD80] = (unint64_t)*(&off_24E21C7C0 + v45 - 329) - 8;
  a35(v48 - 152);
  v51 = 1503746353 * ((-2119124524 - (v49 | 0x81B0B9D4) + (v49 | 0x7E4F462B)) ^ 0x582E849D);
  *(_DWORD *)(v48 - 128) = v45 + 157 - v51;
  *(_DWORD *)(v48 - 152) = v51 + 386513798;
  STACK[0xD80] = a28;
  STACK[0xD88] = v47;
  v52 = ((uint64_t (*)(uint64_t))a35)(v48 - 152);
  *(_DWORD *)(v46 - 0x195CA6660D034740) = *(_DWORD *)(v47 - 0x195CA6660D034740);
  *(_DWORD *)(v46 - 0x195CA6660D03473CLL) = *(_DWORD *)(v47 - 0x195CA6660D03473CLL);
  *(_DWORD *)(v46 - 0x195CA6660D034738) = *(_DWORD *)(v47 - 0x195CA6660D034738);
  *(_DWORD *)(v46 - 0x195CA6660D034734) = *(_DWORD *)(v47 - 0x195CA6660D034734);
  *(_DWORD *)(v46 - 0x195CA6660D034730) = *(_DWORD *)(v47 - 0x195CA6660D034730);
  *(_DWORD *)(v46 - 0x195CA6660D03472CLL) = *(_DWORD *)(v47 - 0x195CA6660D03472CLL);
  return (*(uint64_t (**)(uint64_t))(a45
                                            + 8
                                            * ((((v45 + 889) ^ 0x659)
                                              * (v46 - v47 >= ((v45 + 889) ^ 0x642uLL))) ^ (v45 + 889))))(v52);
}

uint64_t sub_21E0745DC@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)(v5 + a2 + 24) = *(_OWORD *)(v6 + a2 + 24);
  return (*(uint64_t (**)(void))(a1 + 8 * (((a2 == 48) * ((v2 ^ v3) * v4 + 2036)) ^ v2)))();
}

uint64_t sub_21E074614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  *(_BYTE *)(v12 + v7 + v9 + 24) = *(_BYTE *)(v14 + v7 + v9 + 24);
  return (*(uint64_t (**)(void))(a7 + 8 * (((((v11 - 889) ^ v10) + v7 == v8 + 64) * v13) ^ v11)))();
}

uint64_t sub_21E074650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t),uint64_t a34,void (*a35)(uint64_t),uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,_BYTE *a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;

  *a43 = v46 + 29;
  v50 = 1503746353 * ((~((v49 - 152) | 0x182ACDF5) + ((v49 - 152) & 0x182ACDF5)) ^ 0xC1B4F0BC);
  *(_DWORD *)(v49 - 152) = v50 + 386513794;
  *(_DWORD *)(v49 - 128) = v45 - v50 + 157;
  STACK[0xD88] = v48;
  STACK[0xD80] = (unint64_t)a43;
  a35(v49 - 152);
  STACK[0xD80] = v47 + 16 * (int)v46 + 1462198736;
  STACK[0xD78] = v48;
  *(_DWORD *)(v49 - 136) = (v45 + 2325) ^ (731811679
                                         * ((~((v49 - 152) | 0x1A3B3226) + ((v49 - 152) & 0x1A3B3226)) ^ 0xAC326B9D));
  v51 = a33(v49 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a45
                                                      + 8
                                                      * ((3720 * (((809 * (v45 ^ 0x2DBu)) ^ 0x653) + v46 == 713918956)) ^ v45))
                                          - (v45 + 1361)
                                          + 2082))(v51);
}

void sub_21E07478C()
{
  JUMPOUT(0x21E074554);
}

uint64_t sub_21E0747A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_BYTE *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v34;
  uint64_t v35;

  *a27 = *(_BYTE *)(v35 - 256);
  a27[1] = *(_BYTE *)(v35 - 255);
  a27[2] = *(_BYTE *)(v35 - 254);
  a27[3] = *(_BYTE *)(v35 - 253);
  a27[4] = *(_BYTE *)(v35 - 252);
  a27[5] = *(_BYTE *)(v35 - 251);
  a27[6] = *(_BYTE *)(v35 - 250);
  a27[7] = *(_BYTE *)(v35 - 249);
  a27[8] = *(_BYTE *)(v35 - 248);
  a27[9] = *(_BYTE *)(v35 - 247);
  a27[10] = *(_BYTE *)(v35 - 246);
  a27[11] = *(_BYTE *)(v35 - 245);
  a27[12] = *(_BYTE *)(v35 - 244);
  a27[13] = *(_BYTE *)(v35 - 243);
  a27[14] = *(_BYTE *)(v35 - 242);
  a27[15] = *(_BYTE *)(v35 - 241);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 + 8 * ((((9 * (v34 ^ 0x930) - 2409) | 0x30) + 829) ^ (9 * (v34 ^ 0x930)))) - 4))(a1, a2, a3, a4, a5, a27 + 16, a7, a8, 95 * (a34 ^ 0x20Fu), a10 - 0x2A752CF9B62C3496, a10 - 0x2A752CF9B62C2EA6, a10 - 0x2A752CF9B62C2EE6, a10 - 0x2A752CF9B62C2F26, a10 - 0x2A752CF9B62C2F66, a10 - 0x2A752CF9B62C2EB6, a10 - 0x2A752CF9B62C2F36, a10 - 0x2A752CF9B62C2EF6, a10 - 0x2A752CF9B62C2F76, a10 - 0x2A752CF9B62C2F86,
           a10 - 0x2A752CF9B62C2F46,
           a10 - 0x2A752CF9B62C2F06,
           a10 - 0x2A752CF9B62C2EC6,
           a10 - 0x2A752CF9B62C2ED6,
           a10 - 0x2A752CF9B62C2F16,
           a10 - 0x2A752CF9B62C2F56,
           a26,
           a27,
           a10 - 0x2A752CF9B62C2F96,
           a10 - 0x2A752CF9B62C389BLL,
           a10 - 0x2A752CF9B62C389CLL);
}

uint64_t sub_21E074A9C@<X0>(uint64_t a1@<X5>, int a2@<W8>, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int8 *a23,unsigned __int8 *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  unsigned __int8 v59;
  unsigned __int8 v60;
  unsigned __int8 v61;
  unsigned int v62;
  _QWORD *v63;
  _QWORD *v64;
  _QWORD *v65;
  _QWORD *v66;
  unint64_t v67;
  _QWORD *v68;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  _BOOL8 v73;
  int v74;

  v74 = a2 - 1138;
  v41 = *a23;
  v73 = v41 != 196;
  v72 = *a24 ^ 0xC5;
  v42 = v41 ^ 0xC5;
  v71 = 2 % (v41 ^ 0xC5u);
  v43 = *(unsigned __int8 *)(a1 - 12);
  v44 = *(unsigned __int8 *)(a1 - 8);
  v45 = *(unsigned __int8 *)(a1 - 4);
  v46 = *(unsigned __int8 *)(a1 - 3);
  v47 = *(unsigned __int8 *)(a1 - 7);
  v48 = *(unsigned __int8 *)(a1 - 11);
  v49 = *(unsigned __int8 *)(a1 - 15);
  v70 = 3 % v42;
  v50 = *(unsigned __int8 *)(a1 - 14);
  v51 = *(unsigned __int8 *)(a1 - 6);
  v52 = *(unsigned __int8 *)(a1 - 10);
  v53 = *(unsigned __int8 *)(a1 - 2);
  v54 = *(unsigned __int8 *)(a1 - 13);
  v55 = *(unsigned __int8 *)(a1 - 9);
  v56 = *(unsigned __int8 *)(a1 - 5);
  v57 = *(unsigned __int8 *)(a1 - 1);
  v58 = v39 + 127 - 2 * ((((v74 - 879) | 0x10) ^ (v39 + 508)) & 0xC8000080);
  v59 = *(_BYTE *)(v40 + (int)(v58 ^ (v39 - 1))) ^ *(_BYTE *)(*a4 + *(unsigned __int8 *)(a1 - 16));
  *(_BYTE *)(a1 - 16) = v59;
  v60 = *(_BYTE *)(v40 + (int)(v58 ^ (v39 - 5))) ^ *(_BYTE *)(a4[4] + v43);
  *(_BYTE *)(a1 - 12) = v60;
  v61 = *(_BYTE *)(v40 + (int)(v58 ^ (v39 - 9))) ^ *(_BYTE *)(a4[8] + v44);
  *(_BYTE *)(a1 - 8) = v61;
  LOBYTE(v43) = *(_BYTE *)(v40 + (int)(v58 ^ (v39 - 13))) ^ *(_BYTE *)(a4[12] + v45);
  *(_BYTE *)(a1 - 4) = v43;
  v62 = v58 & 0xFFFFFFF0;
  LOBYTE(v44) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ v39)) ^ *(_BYTE *)(a4[13] + v47);
  *(_BYTE *)(a1 - 3) = v44;
  LOBYTE(v45) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ (v39 - 4))) ^ *(_BYTE *)(a4[9] + v48);
  *(_BYTE *)(a1 - 7) = v45;
  LOBYTE(v48) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ (v39 - 8))) ^ *(_BYTE *)(a4[5] + v49);
  *(_BYTE *)(a1 - 11) = v48;
  LOBYTE(v49) = *(_BYTE *)(v40 + (int)(v58 ^ v39)) ^ *(_BYTE *)(a4[1] + v46);
  *(_BYTE *)(a1 - 15) = v49;
  LOBYTE(v47) = *(_BYTE *)(v40 + (int)(v58 ^ (v39 + 1))) ^ *(_BYTE *)(a4[2] + v51);
  *(_BYTE *)(a1 - 14) = v47;
  LOBYTE(v46) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ (v39 - 3))) ^ *(_BYTE *)(a4[10] + v50);
  *(_BYTE *)(a1 - 6) = v46;
  LOBYTE(v51) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ (v39 - 7))) ^ *(_BYTE *)(a4[6] + v53);
  *(_BYTE *)(a1 - 10) = v51;
  LOBYTE(v50) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ (v39 + 1))) ^ *(_BYTE *)(a4[14] + v52);
  *(_BYTE *)(a1 - 2) = v50;
  LOBYTE(v53) = *(_BYTE *)(v40 + (int)(v58 ^ (v39 + 2))) ^ *(_BYTE *)(a4[3] + v55);
  *(_BYTE *)(a1 - 13) = v53;
  LOBYTE(v58) = *(_BYTE *)(v40 + (int)(v58 & 0xFFFFFFF0 ^ (v39 - 6))) ^ *(_BYTE *)(a4[7] + v56);
  *(_BYTE *)(a1 - 9) = *(_BYTE *)(v40 + (int)(v62 ^ (v39 - 6))) ^ *(_BYTE *)(a4[7] + v56);
  LOBYTE(v56) = *(_BYTE *)(v40 + (int)(v62 ^ (v39 - 2))) ^ *(_BYTE *)(a4[11] + v57);
  *(_BYTE *)(a1 - 5) = v56;
  LOBYTE(v55) = *(_BYTE *)(v40 + (int)(v62 ^ (v39 + 2))) ^ *(_BYTE *)(a4[15] + v54);
  *(_BYTE *)(a1 - 1) = v55;
  v63 = (_QWORD *)(a32 + ((unint64_t)(8 % v72) << 7));
  v64 = v63 + 147;
  *(_DWORD *)(a1 - 16) = *(_DWORD *)(v63[148] + 4 * v49) ^ *(_DWORD *)(v63[147] + 4 * v59) ^ *(_DWORD *)(v63[149] + 4 * v47) ^ *(_DWORD *)(v63[150] + 4 * v53);
  v65 = &v63[4 * v73 + 147];
  *(_DWORD *)(a1 - 12) = *(_DWORD *)(v65[1] + 4 * v48) ^ *(_DWORD *)(*v65 + 4 * v60) ^ *(_DWORD *)(v65[2] + 4 * v51) ^ *(_DWORD *)(v65[3] + 4 * v58);
  v66 = &v64[4 * v71];
  v67 = *(_DWORD *)(v66[1] + 4 * v45) ^ *(_DWORD *)(*v66 + 4 * v61) ^ (*(_DWORD *)(v66[2] + 4 * v46) ^ *(_DWORD *)(v66[3] + 4 * v56));
  *(_DWORD *)(a1 - 8) = v67;
  v68 = &v64[4 * v70];
  *(_DWORD *)(a1 - 4) = *(_DWORD *)(v68[1] + 4 * v44) ^ *(_DWORD *)(*v68 + 4 * v43) ^ *(_DWORD *)(v68[2] + 4 * v50) ^ *(_DWORD *)(v68[3] + 4 * v55);
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(a39 + 8 * v74) - 4))(v67 >> 24);
}

void sub_21E074EBC()
{
  JUMPOUT(0x21E074B78);
}

uint64_t sub_21E074F18@<X0>(uint64_t a1@<X0>, int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, _QWORD *a7, _QWORD *a8, _QWORD *a9, _QWORD *a10, _QWORD *a11, _QWORD *a12, _QWORD *a13, _QWORD *a14, _QWORD *a15, _QWORD *a16, _QWORD *a17, _QWORD *a18, _QWORD *a19, _QWORD *a20,_QWORD *a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(void))
{
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_BYTE *)(a3 - 16) = *(_BYTE *)(*a24 + *(unsigned __int8 *)(a3 - 16));
  *(_BYTE *)(a3 - 12) = *(_BYTE *)(*a21 + v32);
  *(_BYTE *)(a3 - 8) = *(_BYTE *)(*a20 + a2);
  *(_BYTE *)(a3 - 4) = *(_BYTE *)(*a19 + v33);
  *(_BYTE *)(a3 - 3) = *(_BYTE *)(*a18 + BYTE1(a2));
  *(_BYTE *)(a3 - 7) = *(_BYTE *)(*a17 + BYTE1(v32));
  *(_BYTE *)(a3 - 11) = *(_BYTE *)(*a16 + *(unsigned __int8 *)(a3 - 15));
  *(_BYTE *)(a3 - 15) = *(_BYTE *)(*a15 + BYTE1(v33));
  v35 = *(unsigned __int8 *)(a3 - 14);
  *(_BYTE *)(a3 - 14) = *(_BYTE *)(*a14 + BYTE2(a2));
  *(_BYTE *)(a3 - 6) = *(_BYTE *)(*a13 + v35);
  *(_BYTE *)(a3 - 10) = *(_BYTE *)(*a12 + BYTE2(v33));
  *(_BYTE *)(a3 - 2) = *(_BYTE *)(*a11 + BYTE2(v32));
  v36 = *(unsigned __int8 *)(a3 - 13);
  *(_BYTE *)(a3 - 13) = *(_BYTE *)(*a10 + a4);
  *(_BYTE *)(a3 - 9) = *(_BYTE *)(*a9 + a1);
  *(_BYTE *)(a3 - 5) = *(_BYTE *)(*a8 + v34);
  *(_BYTE *)(a3 - 1) = *(_BYTE *)(*a7 + v36);
  return a32();
}

uint64_t sub_21E075054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(a7
                                                               + 8
                                                               * ((a34 + 173) | (8
                                                                               * ((a34 ^ 0x7C8u) + 541183435 > 0x2041D38C))))
                                                   - a9
                                                   + 2078))(527, 95);
}

uint64_t sub_21E0750B4@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v10 + a5 + a7) ^= *(_BYTE *)(v9 + a5 + a7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a6
                                        + 8
                                        * (int)((3 * (v7 ^ a4) + 173) | (8
                                                                       * (a7 + 3 * (v7 ^ a4) - 536 < ((3 * (v7 ^ a4)) ^ a3) + v8))))
                            - ((3 * (v7 ^ a4)) ^ a1) * a2
                            + 2078))();
}

void sub_21E075108()
{
  JUMPOUT(0x21E0749D4);
}

uint64_t sub_21E075144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return (*(uint64_t (**)(void))(a7 + 8 * (a34 + 1279)))();
}

uint64_t sub_21E07518C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_BYTE *)(v11 + v10 - 2046506925) ^= *(_BYTE *)(*(_QWORD *)(v9 + 8 * (v8 + 17)) + v10 - 2046506925 - 4);
  return (*(uint64_t (**)(void))(a7 + 8 * ((v8 + 1656) ^ (32 * (((v8 + 377) ^ 0x218u) + v10 >= v7)))))();
}

uint64_t sub_21E0751E8()
{
  int v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t (*v6)(uint64_t);
  void (*v7)(uint64_t);

  v2 = v1 - 152;
  *(_DWORD *)(v1 - 144) = (v0 + 1935319071) ^ (1328090399
                                             * ((v1 - 1251893630 - 2 * ((v1 - 152) & 0xB5619F1A)) ^ 0x4AB2FB20));
  sub_21E0DD598((uint64_t *)(v1 - 152));
  v3 = 1503746353 * (((v2 | 0x827EF3E5) - v2 + (v2 & 0x7D810C18)) ^ 0xA41F3153);
  *(_DWORD *)(v1 - 152) = v3 + 386513794;
  *(_DWORD *)(v1 - 128) = v0 - 443 - v3;
  v7(v1 - 152);
  v4 = 1503746353 * ((((v2 | 0x415676F0) ^ 0xFFFFFFFE) - (~v2 | 0xBEA9890F)) ^ 0x98C84BB9);
  *(_DWORD *)(v1 - 128) = v0 - 443 - v4;
  *(_DWORD *)(v1 - 152) = v4 + 386513794;
  v7(v1 - 152);
  *(_DWORD *)(v1 - 136) = (v0 + 1725) ^ (731811679 * ((v1 - 152) ^ 0x49F6A644));
  return v6(v1 - 152);
}

void sub_21E075380(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1D17695A8381D362);
  v4 = v2 - 201714705;
  v3 = v2 - 201714705 < 0;
  v5 = 201714705 - v2;
  if (!v3)
    v5 = v4;
  v1 = (*(_DWORD *)(a1 + 4) - 1438293641 * ((a1 & 0x542F6194 | ~(a1 | 0x542F6194)) ^ 0x1317CB14)) ^ 0x399;
  __asm { BR              X22 }
}

uint64_t sub_21E0754E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  _QWORD *v9;
  uint64_t v10;
  int v11;
  unsigned int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((*(_DWORD *)(*v9 + 4 * v12 + a7) != a8) * v8) ^ v11)) - 8))();
}

void sub_21E075514()
{
  JUMPOUT(0x21E0754A0);
}

_DWORD *sub_21E075528(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

void sub_21E075538()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1192];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = (unint64_t)&v2[qword_2553B61C8 ^ qword_2553C1218];
  qword_2553C1218 = 1056581677 * v0 - 0x3F506021E86BC7B2;
  qword_2553B61C8 = 1056581677 * (v0 ^ 0x3F506021E86BC7B2);
  *(_DWORD *)*(&off_24E21C7C0
             + ((45 * ((qword_2553B61C8 + 45 * v0 + 78) ^ 0xB2)) ^ byte_21E18C950[byte_21E1B1220[(45 * ((qword_2553B61C8 + 45 * v0 + 78) ^ 0xB2))] ^ 0x91])
             + 119) = 939001227;
  v1 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_24E21C7C0
                                                  + ((45
                                                                                   * ((qword_2553B61C8 - qword_2553C1218) ^ 0xB2)) ^ byte_21E1B1020[byte_21E1A4EC0[(45 * ((qword_2553B61C8 - qword_2553C1218) ^ 0xB2))] ^ 0x83])
                                                  + 277))(512, 1509315540);
  *(_QWORD *)((char *)*(&off_24E21C7C0
                      + ((45 * ((qword_2553B61C8 + qword_2553C1218) ^ 0xB2)) ^ byte_21E18C950[byte_21E1B1220[(45 * ((qword_2553B61C8 + qword_2553C1218) ^ 0xB2))] ^ 0x8F])
                      + 283)
            - 4) = v1;
  __asm { BR              X8 }
}

void sub_21E0756D8()
{
  int v0;
  _DWORD *v1;

  *v1 = v0 + 43;
}

uint64_t sub_21E07C778(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 1948972247 * ((2 * (a1 & 0x616C65F) - a1 + 2045327776) ^ 0xCC77CC4E);
  v2 = *(_DWORD *)(a1 + 16) - v1;
  v3 = *(_DWORD *)(a1 + 12) + v1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x1D17695A8381D362);
  v6 = v4 - 201714705;
  v5 = v4 - 201714705 < 0;
  v7 = 201714705 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + (v2 ^ 0x240))
                              + 8 * ((1413 * ((v3 - 775155579) >= 4 * (unint64_t)v8)) ^ v2)
                              - 12))();
}

uint64_t sub_21E07C83C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8 * ((((447 * (v3 ^ 0x22B)) ^ 0x53E) * (v2 != 775155579)) ^ v3)))(a1, 1334821553);
}

uint64_t sub_21E07C87C(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v1
                                                              + 8
                                                              * ((((v2 - 162850759) & 0x9B4EAFF) - 1625) ^ (v2 - 162850759) & 0x9B4EAFF))
                                                  - 8))(a1, ((v2 - 162850759) & 0x9B4EAFFu) - 1614);
}

uint64_t sub_21E07C908@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  unsigned int v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 24) + (a5 + a6)) = ((a4 ^ v8) >> (a3 - 78))
                                                             - (((a4 ^ v8) >> (a3 - 78) << ((a2 + 78) ^ 0x77)) & 0x64)
                                                             + 50;
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 ^ (1813 * (a5 - 1 != v7)))))();
}

uint64_t sub_21E07C96C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 8 * (((a3 + 8 == v4 + 32) * (v5 - 1625)) ^ v5))
                                                  - 8))(a1, (v5 - 1614));
}

uint64_t sub_21E07C99C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v4 - 1670752956 > 1153100296 || v4 - 1670752956 < v3;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                         + 8
                                                                                         * (int)(((((v5 + 380756420) & 0xE94E17ED)
                                                                                                 + 665)
                                                                                                * v7) ^ v5))
                                                                             - 8))(a1, (v5 + 380756420) & 0xE94E17ED, 1060749902, 2460980593, v2);
}

uint64_t sub_21E07CA00@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_21E07C908(a1, (v5 + 64041843) & 0xFC2EC63E, 78, *(_DWORD *)(*v3 + 4 * (v4 - 676369605) - 0x2CF4A33C3453BA2BLL), v2, a2);
}

uint64_t sub_21E07CA5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) = a2;
  return result;
}

void sub_21E07CA64(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1948972247 * ((2 * (a1 & 0x16B0D033) - (_DWORD)a1 - 380686388) ^ 0x5CD1DA22));
  __asm { BR              X9 }
}

uint64_t sub_21E07CB0C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((2639 * (*(_DWORD *)(v2 - 0x6898E7DB637CE953) == (v1 ^ 0x15E) + 939000797)) ^ v1))
                            - 12))();
}

uint64_t sub_21E07CB5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x6898E7DB637CE95BLL) - 150340300;
  v4 = *(_DWORD *)(v1 - 0x6898E7DB637CE95FLL) + 990968160;
  v5 = v3 < (((v2 - 430) | 0x1D1) ^ 0x513EF686u);
  v6 = v3 > v4;
  if (v5 != v4 < 0x513EF757)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((8 * !v6) | (16 * !v6)) ^ v2))
                            - ((v2 - 190) ^ 0xF4)))();
}

uint64_t sub_21E07CC08@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;

  v7 = *(_QWORD *)(v5 - 0x6898E7DB637CE96BLL);
  v8 = (((a2 + 892) ^ *(unsigned __int8 *)(v7 + (v4 - 1513421355)) ^ 0x7F) << 24) | ((*(unsigned __int8 *)(v7 + (v4 - 1513421354)) ^ 0x32) << 16) | (((((_BYTE)a2 - 1) & 0x1F | 0xE0) ^ *(unsigned __int8 *)(v7 + (v4 - 1513421353)) ^ 0xC2) << 8) | *(unsigned __int8 *)(v7 + (v4 - 1513421352)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3
                                        + 8
                                        * ((54
                                          * (((v8 + v3 - ((2 * v8) & 0x6FF00B16)) & 0xFFFFFF ^ 0xF8058B)
                                           - (v6
                                            + *(_DWORD *)(a1 + 24)) == -1986727944)) ^ a2))
                            - 8))();
}

uint64_t sub_21E07CCDC@<X0>(int a1@<W1>, int a2@<W4>, uint64_t a3@<X8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((238 * (((((a1 + 978) ^ 0x2D) + 1073739470) & a2) == 0)) ^ a1))
                            - 8))();
}

uint64_t sub_21E07CD8C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v7 = v6 + v4 + ((v2 + ((a1 - 2029) | 0x800) - 2354) ^ v5) + 8;
  v8 = ((2 * v7) & 0xB7FDFFD6) + (v7 ^ 0xDBFEFFEB) + 30 * (a1 ^ 0x917) + 1417516945;
  v9 = v3 + 441358965;
  v10 = (v9 < 0x307C986C) ^ (v8 < 0x307C986C);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x307C986C;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((63 * v11) ^ a1)) - 8))();
}

void sub_21E07CE34()
{
  _DWORD *v0;

  *v0 = -939041090;
}

uint64_t sub_21E07CE74@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  _DWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(*(_QWORD *)(a1 + 8) - 0x70E23F743AC84B97) = v6 + v5 + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((607 * (*v3 == v4)) ^ (a2 - 671019067) & 0x27FEE7F8)) - 12))();
}

uint64_t sub_21E07CEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;
  int v4;

  *(_QWORD *)(*(_QWORD *)(a1 + 8) - 0x70E23F743AC84B97) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((607 * (*v2 == v3)) ^ v4)) - 12))();
}

void sub_21E07CF20(uint64_t a1)
{
  _DWORD *v1;
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 32) - 0x47DF44ECCB2F1621) = v3;
  *v1 = v2;
  JUMPOUT(0x21E07CE6CLL);
}

void sub_21E07CF40(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 40) != 0x6898E7DB637CE96BLL
    && *(_QWORD *)(a1 + 32) != 0xAC35C7385DC943
    && *(_QWORD *)(a1 + 8) != 0x1769FB36A4B64731;
  v1 = *(_DWORD *)(a1 + 20) + 1948972247 * (((a1 | 0x18400906) - a1 + (a1 & 0xE7BFF6F9)) ^ 0xADDEFCE8);
  __asm { BR              X9 }
}

uint64_t sub_21E07D054(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((239 * (*(_DWORD *)(a7 - 0x6898E7DB637CE953) == 482 * (v10 ^ 0x23B) + 938998335)) ^ v10)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_21E07D0B0@<X0>(uint64_t a1@<X6>, int a2@<W8>, __n128 a3@<Q0>, __n128 a4@<Q1>, __n128 a5@<Q2>, __n128 a6@<Q3>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  __n128 v22;
  __n128 v23;
  _BOOL4 v24;
  uint64_t (*v25)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128);
  unsigned int v27;

  v20 = v16 - 1255;
  if ((v20 - a2 + *(_DWORD *)(a16 + 16) - 931232618) >= 0xFFFFFFFE)
    v21 = 1735247753;
  else
    v21 = 1735247765;
  v27 = *(_DWORD *)(a1 - 0x6898E7DB637CE95BLL) - 1732828848;
  *(_QWORD *)(v19 - 144) = 211 * (v18 ^ 0x231u);
  v22.n128_u64[0] = 0x6464646464646464;
  v22.n128_u64[1] = 0x6464646464646464;
  v23.n128_u64[0] = 0x3232323232323232;
  v23.n128_u64[1] = 0x3232323232323232;
  v24 = v27 < 0xF2EC1B7B;
  if (v24 == (v20 ^ 0xF2EC1D1E) > 0xF2EC1B7B)
    v24 = v27 > 0xF2EC1B7B;
  v25 = (uint64_t (*)(uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v17 + 8 * ((14 * v24) ^ v20))
                                                                                        - 12);
  *(_DWORD *)(v19 - 156) = 123472741;
  *(_DWORD *)(v19 - 152) = v21;
  return v25(4073140898, a3, a4, a5, a6, v22, v23);
}

uint64_t sub_21E07D324()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (v0 - 519)) - 4))(((659 * (v0 ^ 0x23E) - 1971) | 0x410u) - 1046);
}

uint64_t sub_21E07E040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;

  *(_BYTE *)(*v17 + (v14 + a8)) = -78;
  v18 = v14 + 674628698 < a14 + 191 * (v15 ^ 0x818) + 1352176013;
  if (a14 > 0xAF676C35 != (v14 + 674628698) < 0x509893CA)
    v18 = a14 > 0xAF676C35;
  return (*(uint64_t (**)(void))(v16 + 8 * (v15 | (v18 << 6))))();
}

uint64_t sub_21E07E0B8@<X0>(unsigned int a1@<W1>, int a2@<W7>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  _QWORD *v9;
  int v10;
  int v11;

  v10 = a1 > v7;
  v11 = v3 + 1;
  *(_BYTE *)(*v9 + (v11 + a2)) = 50;
  if (v10 == v11 + v5 < ((v4 - 1502) ^ (a3 + 106)))
    v10 = v11 + v5 < v6;
  return (*(uint64_t (**)(void))(v8 + 8 * (v4 ^ (v10 << 6))))();
}

void sub_21E07E10C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  unsigned int v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;

  *(_QWORD *)(v10 - 0xAC35C7385DC943) = *v7;
  *(_DWORD *)(v11 - 0x1769FB36A4B64731) = a2;
  *v7 = 0;
  *(_QWORD *)(a7 - 0x6898E7DB637CE963) = 0x162DFDF7162DFDF7;
  *v9 = 1513421355;
  v8 = (*(_DWORD *)(a7 - 0x6898E7DB637CE957) & 0xFFFFFFFE ^ 0xBC25405) - 1;
  *(_DWORD *)(a7 - 0x6898E7DB637CE957) = ((v8 & 0xECF14DB2 ^ 0xA8010893) + (v8 & 0x130EB24C ^ 0x102B201) - 2) ^ 0xA2C1EE96;
  *v13 = *v12;
}

uint64_t sub_21E07E238(uint64_t a1)
{
  int v1;
  _BOOL4 v3;

  v3 = *(_QWORD *)(a1 + 16) != 0x3E523A40C5AD4E05 && *(_QWORD *)a1 != 0x2A752CF9B62C38AELL;
  v1 = *(_DWORD *)(a1 + 12) - 731811679 * (a1 ^ 0x49F6A644);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + (v1 ^ 0x681)) + 8 * ((3784 * v3) ^ v1) - 12)
                            - ((v1 - 50) ^ 0x6BBLL)))();
}

uint64_t sub_21E07E2D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v1 - 0x3E523A40C5AD4E05) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((*(unsigned __int8 *)(v3 - 0x2A752CF9B62C389DLL) == 196) ^ (v2 + 74)) & 1)
                                          * ((v2 - 483278522) & 0x1CCE3EEB ^ 0x6B7)) ^ v2))
                            - 12))();
}

uint64_t sub_21E07E34C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  __int16 v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = ((v3 | 0x156) + 1112369192) & 0xBDB297D6;
  v5 = *(unsigned __int8 *)(v2 - 0x2A752CF9B62C38A6);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = (_QWORD *)(v2 - 0x2A752CF9B62C3896);
  *v7 = v6;
  v7[1] = v6
        + ((unint64_t)(((v4 - 109) ^ 0xE8) * v5
                                             - -112 * ((unsigned __int16)(((v4 + 403) ^ 0x6E8) * v5) / 0x90u)) << 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (int)(v4 | 1)) - 12))();
}

void sub_21E07E42C()
{
  JUMPOUT(0x21E07E3ACLL);
}

uint64_t sub_21E07E438(uint64_t result)
{
  _DWORD *v1;

  *v1 = 36864;
  *(_DWORD *)(result + 8) = 939001227;
  return result;
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_21E07E488@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 2056))();
  return 0;
}

uint64_t sub_21E07E49C()
{
  return 4294925273;
}

uint64_t sub_21E07E4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  unsigned __int8 v4;
  char *v5;
  int v6;
  char v8;

  v2 = qword_2553B61C8 - qword_2553C1408 - (_QWORD)&v8;
  qword_2553C1408 = 1056581677 * v2 - 0x3872BA1B2E0615B6;
  qword_2553B61C8 = 1056581677 * (v2 ^ 0x3F506021E86BC7B2);
  v3 = *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL);
  v4 = 45 * ((qword_2553B61C8 + 45 * v2 + 74) ^ 0xB2);
  v5 = (char *)*(&off_24E21C7C0 + (v4 ^ byte_21E1991B0[byte_21E18C850[v4] ^ 0x12]) + 68)
     - 12;
  if (v3 == 1810943896)
    __asm { BR              X17 }
  if (v3 == 1810943903)
  {
    v6 = **(unsigned __int8 **)(a2 - 0x593A0D77ED43FF8BLL) - 9;
    __asm { BR              X2 }
  }
  return 4294925278;
}

void sub_21E07EBC8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v1 = 1990461019 * (((a1 | 0xCCBA46E4) - (a1 & 0xCCBA46E4)) ^ 0xE35EE46D);
  v2 = *(_DWORD *)(a1 + 24) ^ v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_DWORD *)(a1 + 8) + v1;
  v5 = *(_DWORD *)(v3 - 0x195CA6660D034730);
  *(_DWORD *)(v3 - 0x195CA6660D034730) = v5 + 8 * v4 - 1140652936;
  v6 = v5 + 8 * v4 - 60354066;
  v7 = v6 < v5 + 1080298870;
  if ((v5 + 1080298870) < 0x485601F3 != v6 < 0x485601F3)
    v7 = (v5 + 1080298870) < 0x485601F3;
  *(_DWORD *)(v3 - 0x195CA6660D03472CLL) += ((v4 - 679452529) >> 29) + v7;
  __asm { BR              X8 }
}

uint64_t sub_21E07ED54()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = (v2 - 406236441) <= 0x1048F257 || 273216152 - v1 <= (v2 - 406236441);
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 + 266) ^ 0x45D) * v5) ^ v0)))();
}

uint64_t sub_21E07EDB8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((13
                                          * ((unint64_t)(((166 * (v1 ^ 0x492)) ^ 0x652442E7u) - v0) - 1696878393 > 7)) ^ v1))
                            - 12))();
}

uint64_t sub_21E07EE30()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((v1 + 1399396956) & 0xAC96DBDD) - 922)
                                               * ((unint64_t)(v4 - 0x195CA6660D034947 - v2 + v0 + 543) < 8)) ^ v1))
                            - ((v1 - 2334) | 0x30u)
                            + 1192))();
}

uint64_t sub_21E07EE94@<X0>(int8x8_t *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int8x8_t *v3;
  uint64_t v4;

  *a1 = veor_s8(*v3, (int8x8_t)0x3232323232323232);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((2135
                                                       * ((v1 & 0xFFFFFFFFFFFFFFF8) - (v2 + 2288) == -3480)) ^ v2)))(2135, (v2 + 2288) - 3480);
}

uint64_t sub_21E07EEDC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>, int8x8_t a4@<D0>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(int8x8_t *)(a3 + a2) = veor_s8(*(int8x8_t *)(v6 + a2), a4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 == a2) * a1) ^ v5)))();
}

uint64_t sub_21E07EF04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v0 - 3352) | 0x350) ^ 0x3B8) * (v1 == v2)) ^ v0))
                            - (v0 - 2504)
                            + 976))();
}

uint64_t sub_21E07EF3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v2 + v1) = *(_BYTE *)(v5 + v2 + v1) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((568 * (v2 + 1 == v3)) ^ (v4 + 282))) - 12))();
}

uint64_t sub_21E07EF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t *), void (*a18)(uint64_t *), uint64_t (*a19)(uint64_t *), uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,int a25,int a26,uint64_t a27,int *a28,uint64_t a29,int a30,unsigned int a31)
{
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;

  v37 = 2009815553
      * (((&a27 | 0xD0AB55F2) - &a27 + (&a27 & 0x2F54AA08)) ^ 0x21A07BB7);
  a27 = v36;
  LODWORD(a28) = 304519309 - v37;
  HIDWORD(a28) = (v32 + 1290) ^ v37;
  a18(&a27);
  LODWORD(a27) = (v32 + 425456770) ^ (225134719
                                    * (((&a27 | 0x409754D9) + (~&a27 | 0xBF68AB26)) ^ 0x566711F2));
  a28 = (int *)(v33 + 0x48E54EA8679E29ECLL);
  a29 = v36;
  a17(&a27);
  v38 = 1734664879 * ((&a27 & 0xC46BD3EC | ~(&a27 | 0xC46BD3EC)) ^ 0x144F0409);
  a30 = v32 - v38 - 331;
  a31 = v38 - 1052724817;
  a28 = &a23;
  a29 = v36;
  LODWORD(a27) = 1729118973 - v38;
  v39 = a19(&a27);
  *(_DWORD *)(v33 - 0x195CA6660D034740) += a23;
  *(_DWORD *)(v33 - 0x195CA6660D03473CLL) += a24;
  *(_DWORD *)(v33 - 0x195CA6660D034738) += a25;
  *(_DWORD *)(v33 - 0x195CA6660D034734) += a26;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31
                                                      + 8
                                                      * ((111
                                                        * (v34 - v35 - 679452593 < 668 * ((11 * (v32 ^ 0x37C)) ^ 0x70Eu)
                                                                                 - 1400)) ^ (11 * (v32 ^ 0x37C))))
                                          - ((((11 * (v32 ^ 0x37C)) ^ 0x70Eu) + 1844) ^ 0x732)))(v39);
}

uint64_t sub_21E07F1B8@<X0>(int a1@<W8>, __n128 a2@<Q0>, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v6.n128_u64[0] = 0x3232323232323232;
  v6.n128_u64[1] = 0x3232323232323232;
  return ((uint64_t (*)(__n128, __n128))(*(_QWORD *)(v5
                                                             + 8
                                                             * ((2339
                                                               * (a4
                                                                - 0x195CA6660D034947
                                                                - v4
                                                                + (unint64_t)(a1 ^ 0x727u) < 0x10)) ^ a1 ^ 0x727))
                                                 - 4))(a2, v6);
}

uint64_t sub_21E07F2EC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(v9 + v1 + v4 + 24) = *(_BYTE *)(v6 + v1 + v4) ^ v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v1 + 1 != v2 + 64) * (((v0 - 269) | v3) ^ v8)) ^ v0)) - 4))();
}

uint64_t sub_21E07F330@<X0>(int a1@<W8>, int8x16_t a2@<Q1>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int v8;

  *(int8x16_t *)(v5 + v2 + 24) = veorq_s8(*(int8x16_t *)(v3 + v2), a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 + (a1 ^ v8) * v7 == 1384) * v6) ^ a1)) - 4))();
}

uint64_t sub_21E07F36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _DWORD *a12, _DWORD *a13, _DWORD *a14, int *a15, uint64_t a16, void (*a17)(uint64_t *), void (*a18)(uint64_t *), uint64_t (*a19)(uint64_t *), uint64_t a20,uint64_t a21,int a22,int a23,int a24,int a25,int a26,int a27,uint64_t a28,int *a29,uint64_t a30,int a31,unsigned int a32)
{
  uint64_t v32;
  _DWORD *v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  uint64_t v38;

  v36 = 2009815553 * (((&a28 | 0xAF147DE1) + (~&a28 | 0x50EB821E)) ^ 0x5E1F53A5);
  a28 = v35;
  LODWORD(a29) = 304519309 - v36;
  HIDWORD(a29) = (v34 + 938) ^ v36;
  a18(&a28);
  LODWORD(a28) = (v34 + 425456418) ^ (225134719 * (&a28 ^ 0x16F0452A));
  a29 = a15;
  a30 = v35;
  a17(&a28);
  v37 = 1734664879 * ((&a28 - 1882503545 - 2 * (&a28 & 0x8FCB4687)) ^ 0xA0106E9D);
  a31 = v34 - v37 - 683;
  a32 = v37 - 1052724817;
  LODWORD(a28) = 1729118973 - v37;
  a29 = &a24;
  a30 = v35;
  v38 = a19(&a28);
  *v33 += a24;
  *a14 += a25;
  *a13 += a26;
  *a12 += a27;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v32
                                                      + 8
                                                      * ((((v34 + 510) ^ 0x502)
                                                        * ((a23 - 679452657) > 0xFFFFFFBF)) ^ v34))
                                          - 4))(v38);
}

void sub_21E07F510()
{
  JUMPOUT(0x21E07F2A4);
}

uint64_t sub_21E07F544()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 != 679452529) * (((v0 - 1518) | 0x290) ^ 0x38C)) ^ v0)) - 12))();
}

uint64_t sub_21E07F588@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  _BYTE *v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;

  v7 = (v4 + 802472099) & 0xD02B3BFE;
  v8 = v7 ^ (a1 + 808);
  v9 = v7 + 79;
  *(_BYTE *)(a3 - 0x195CA6660D034728) = *v5 ^ 0x32;
  v10 = v3 > 0x8E48C879;
  if (v3 < v8 != a1 > 0x8E48C879)
    v10 = v3 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((868 * !v10) ^ v9)) - 8))();
}

void sub_21E07F638()
{
  JUMPOUT(0x21E07F5E4);
}

uint64_t sub_21E07F640()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((4056 * (v1 + 1316729133 != ((v0 - 875) ^ 0x76FB5346))) ^ v0))
                            - 8))();
}

uint64_t sub_21E07F694@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v3 < v4;
  *(_BYTE *)(a1 + (v5 - 2102345228)) = *(_BYTE *)(v6 + (v5 - 2102345228)) ^ 0x32;
  if (v8 == v5 - 106163565 < v1)
    v8 = v5 - 106163565 < v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v8 * (328 * (v2 ^ 0x735) + 1943)) ^ v2)) - 12))();
}

uint64_t sub_21E07F748(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t result;
  unsigned int v6;
  _BOOL4 v7;
  _DWORD v8[2];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v2 = 225134719 * ((-2 - ((a1 | 0x4D9738CC) + (~(_DWORD)a1 | 0xB268C733))) ^ 0xA4988219);
  v3 = a1[4] - v2;
  v4 = a1[3] + v2;
  v8[1] = v3 - 1990461019 * ((v8 & 0xD9533BCB | ~(v8 | 0xD9533BCB)) ^ 0x94866BD) - 430125777;
  result = nullsub_1(v8);
  v6 = 0;
  switch(v4)
  {
    case 0x23B9CA07u:
      goto LABEL_9;
    case 0x23B9CA08u:
      v6 = 2;
      goto LABEL_9;
    case 0x23B9CA09u:
      v6 = 1;
      goto LABEL_9;
    case 0x23B9CA0Au:
      v6 = 3;
      goto LABEL_9;
    case 0x23B9CA0Bu:
      goto LABEL_10;
    case 0x23B9CA0Cu:
      v6 = 5;
      goto LABEL_9;
    case 0x23B9CA0Du:
      v6 = 4;
      goto LABEL_9;
    default:
      if (v4 == 884591116)
      {
        v6 = 6;
LABEL_9:
        v7 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_24E21C7C0 + (int)(v3 ^ 0x2B6F80C2)))((*((_DWORD *)*(&off_24E21C7C0 + (int)(v3 - 728727358)) + 6 * v6 + 1) - 1810943893), 3511634213) == 0;
        __asm { BR              X9 }
      }
LABEL_10:
      a1[12] = -939041225;
      return result;
  }
}

void sub_21E07FD94(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _DWORD v3[2];
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 4) - 1328090399 * ((-2 - ((a1 | 0xEE2656C1) + (~(_DWORD)a1 | 0x11D9A93E))) ^ 0xEE0ACD04);
  v2 = *(_QWORD *)(a1 + 8);
  v3[1] = v1 + 1438293641 * (((~v3 & 0x64328604) - (~v3 | 0x64328605)) ^ 0xDCF5D37A) + 293;
  v4 = v2;
  sub_21E075380((uint64_t)v3);
  __asm { BR              X9 }
}

uint64_t sub_21E07FED4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v7;

  v5 = (((v4 ^ v3) >> 4) & 0x7D5B9FE ^ 0x440B882) + (((v4 ^ v3) >> 5) ^ 0xFDCAA0BE) + 2008246878;
  v7 = v5 > ((42 * (v1 ^ 0x229)) ^ 0x739E4596u) && v5 < v2 + 1939751831 + ((v1 + 1753184687) & 0x978087DE);
  return (*(uint64_t (**)(void))(a1 + 8 * ((v7 | (2 * v7)) ^ v1)))();
}

uint64_t sub_21E07FF68@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  _BOOL4 v3;

  v3 = (v1 & 0x1F ^ 1) == ((v2 - 426) | 0x210) - 816;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((v3 | (16 * v3)) ^ v2)) - ((v2 + 248) ^ 0x3CELL)))();
}

uint64_t sub_21E07FFAC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;

  v6 = v1 + 1608510449;
  if (*v4 + 1945768943 < 0)
    v6 = 1471522287 - v1;
  *v4 = *v4 - 1540016368 + v6;
  v7 = v3 + 1227087804 < -851901763;
  *(_DWORD *)(*(_QWORD *)(v5 - 0x1D17695A8381D35ELL) - 0x2CF4A33C3453BA2BLL) = *(_DWORD *)(*(_QWORD *)(v5 - 0x1D17695A8381D35ELL)
                                                                                         + 4 * (v1 + 68494081)
                                                                                         - 0x2CF4A33C3453BA2BLL);
  if (v3 + 1227087804 >= -851901763)
    v7 = v3 + 1227087804 > 1295581886;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((!v7 * ((v2 ^ 4) - 962)) | v2)) - 4))();
}

void sub_21E0800B0()
{
  JUMPOUT(0x21E08004CLL);
}

void sub_21E0800B8()
{
  _DWORD *v0;

  *v0 = 201714705;
}

uint64_t sub_21E080300(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  _BOOL4 v3;

  v1 = 1503746353 * (((a1 | 0xD5B13F5D) - (a1 & 0xD5B13F5D)) ^ 0xF3D0FDEB);
  v2 = *a1 - v1;
  v3 = a1[4] - v1 - 1879245626 < 7;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + (int)(v2 ^ 0xE69))
                                        + 8 * (int)((2 * v3) | (8 * v3) | v2)
                                        - 12)
                            - ((v2 - 2718) ^ 0x422)
                            + 1849))();
}

uint64_t sub_21E0803A4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((2 * (((v1 < (((v2 + 669) | 0x801) ^ 0xE1Eu)) ^ (v2 - 98)) & 1)) & 0xFB | (4 * (((v1 < (((v2 + 669) | 0x801) ^ 0xE1Eu)) ^ (v2 - 98)) & 1))) ^ v2)))();
}

uint64_t sub_21E0803F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  int v3;
  char *v4;
  char *v5;
  int8x16x4_t v7;
  int8x16x4_t v8;
  int8x16x4_t v9;

  v4 = v2;
  v7 = vld4q_s8(v4);
  v5 = &v2[((v3 - 2016) | 0x146) - 1831];
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v9 = vld4q_s8(v5);
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  v7.val[0] = v9.val[3];
  v7.val[1] = v9.val[2];
  v7.val[2] = v9.val[1];
  v7.val[3] = v9.val[0];
  vst4q_s8(v4, v8);
  vst4q_s8(v5, v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((4 * ((v1 & 0x1FFFFFFE0) == 32)) | (8 * ((v1 & 0x1FFFFFFE0) == 32))) ^ (v3 - 2667)))
                            - 4))();
}

void sub_21E08046C()
{
  JUMPOUT(0x21E080410);
}

uint64_t sub_21E080478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v3 ^ (3255 * (v1 != v2))))
                            - ((v3 + 1690) ^ (v3 - 1028) ^ 0xD6ELL)))();
}

uint64_t sub_21E0804AC@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * (((((v2 - 731) | 0x112) + 1286) * ((v1 & 0x18) == 0)) ^ v2)))();
}

uint64_t sub_21E0804EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char *v5;
  int8x8x4_t v7;
  int8x8x4_t v8;

  v5 = (char *)(v2 + 4 * v3);
  v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((2941 * (v3 - (v1 & 0x1FFFFFFF8) == -8)) ^ v4))
                            - ((5 * (v4 ^ 0xBFu)) ^ 0x5B5)))();
}

void sub_21E080550()
{
  JUMPOUT(0x21E080514);
}

uint64_t sub_21E080558@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((((v2 == v3) ^ (a1 - 92)) & 1)
                                     * (((a1 + 983677230) & 0xC55E4F19) - 3463)) ^ a1)))();
}

uint64_t sub_21E0805AC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  char *v2;
  int v3;
  char v4;
  char v5;

  v4 = *v2;
  *v2 = v2[3];
  v2[3] = v4;
  v5 = v2[1];
  v2[1] = v2[2];
  v2[2] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v1 == 1879245626) * ((v3 + 1728) ^ 0xE27)) ^ v3)) - 12))();
}

void sub_21E080608(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 48))
    v2 = *(_QWORD *)(a1 + 8) == 0;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(a1 + 24) - 1866394843 * ((((2 * a1) | 0xB40DB18) - a1 - 94399884) ^ 0xEFB75A78);
  __asm { BR              X11 }
}

uint64_t sub_21E0806FC()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;

  if (*(_QWORD *)(v2 + 32))
    v4 = (*(_DWORD *)(v2 + 40) ^ v1) == ((((v0 - 304142846) & 0x1220DBE9) + 265275121) ^ (v0 + 147));
  else
    v4 = 1;
  v5 = !v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1019 * v5) ^ v0)))();
}

uint64_t sub_21E080754()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  void (*v11)(uint64_t);
  int v12;
  uint64_t v13;

  v8 = 1948972247 * ((((v7 - 128) | 0xEB933F9B) - ((v7 - 128) | 0x146CC064) + 342671460) ^ 0x5E0DCA75);
  *(_QWORD *)(v7 - 128) = *v1 + 56 * *(unsigned __int8 *)*v1 + 24;
  *(_QWORD *)(v7 - 104) = &STACK[0xCE528DE2F096E20];
  *(_WORD *)(v7 - 116) = 29944 - -2857 * ((((v7 - 128) | 0x3F9B) - ((v7 - 128) | 0xC064) - 16284) ^ 0xCA75);
  *(_DWORD *)(v7 - 112) = -1843668060 - v8;
  *(_DWORD *)(v7 - 120) = v8 + v3 - 2626;
  (*(void (**)(uint64_t))(v0 + 8 * (v3 ^ 0x8B5)))(v7 - 128);
  v9 = 2 * (v7 - 128);
  v10 = 1734664879 * (((v9 | 0x427E239A) - (v7 - 128) - 557781453) ^ 0xEE439D7);
  *(_DWORD *)(v7 - 128) = v3 - 1166 + v10;
  *(_QWORD *)(v7 - 104) = v5;
  *(_DWORD *)(v7 - 112) = v10 + 868664106;
  *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096E20];
  v11 = (void (*)(uint64_t))*(&off_24E21C7C0 + (v3 ^ 0xABF));
  v11(v7 - 128);
  v12 = 1734664879 * (((v9 | 0xA9235AF6) - (v7 - 128) + 728650373) ^ 0xFB4A8561);
  *(_QWORD *)(v7 - 104) = v4;
  *(_DWORD *)(v7 - 128) = v3 - 1166 + v12;
  *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096E20];
  *(_DWORD *)(v7 - 112) = v12 + 603384508 + v6;
  v11(v7 - 128);
  *(_QWORD *)(v7 - 112) = v7 - 148;
  *(_DWORD *)(v7 - 120) = (v3 - 2660) ^ (1438293641
                                       * ((((v7 - 128) | 0x25A26965) - ((v7 - 128) & 0x25A26965)) ^ 0x9D653C1A));
  *(_QWORD *)(v7 - 128) = &STACK[0xCE528DE2F096E20];
  v13 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v3 ^ 0xB1B)) - 8))(v7 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * v3) - 8))(v13);
}

void sub_21E0809C0()
{
  JUMPOUT(0x21E080974);
}

void sub_21E0809C8(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;

  v3 = ((a1 & 0xF0) >> 4) ^ 9 | a1 ^ 0xFFFFFF9B;
  v4 = v3 & 1 | ((v3 & 4) != 0) | (((v3 | ((v3 & 0xFC) >> 2)) & 2) != 0);
  *(_DWORD *)(v2 + 20) = ((v1 + 492) ^ 0xFFFF5075) * v4 - ((2147399480 * v4) & 0x6FF00B10) + 939001227;
}

void sub_21E080A68(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  int v5;
  unint64_t *v6;
  unsigned int v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  *(_DWORD *)(*(_QWORD *)(a1 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E849) = *(_DWORD *)(a2 - 0x593A0D77ED43FF83);
  v3 = 1948972247 * ((-1329612419 - (&v5 | 0xB0BFB97D) + (&v5 | 0x4F404682)) ^ 0xFADEB36C);
  v6 = &STACK[0x1464535CD0E6729];
  v7 = 1426307471 - v3;
  v5 = v3 ^ 0x1EA93554;
  sub_21E09FC10((uint64_t)&v5);
  __asm { BR              X10 }
}

uint64_t sub_21E080C60(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;

  v11 = v9 + -289278964 - a7;
  if (v11 <= 0x40)
    v11 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((243 * (a3 - v7 - v8 + v11 > 0xE)) ^ 0x273u)) - 12))();
}

uint64_t sub_21E080CD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;

  v12 = v8 + v7;
  if ((v12 + 3211267) > 0x40)
    v9 = v12 + 3211267;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((42 * (((977814016 - a7) & 0xB448BEFF ^ (a3 - 3315)) - v12 < v10 + v9)) ^ 0x5D7u))
                            - 8))();
}

uint64_t sub_21E080D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;

  return ((uint64_t (*)(void))(*(_QWORD *)(v27
                                        + 8
                                        * ((468
                                          * ((unint64_t)(&a25 + a13 + v25) < ((a5
                                                                                    + (v26 ^ 0xCAEu)
                                                                                    - 89
                                                                                    - 292488609) ^ (unint64_t)(29 * (v26 ^ 0xCAEu))))) ^ v26))
                            - 4))();
}

uint64_t sub_21E080D98@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int8x16_t *v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0x6464646464646464;
  v7.i64[1] = 0x6464646464646464;
  v8.i64[0] = 0x3232323232323232;
  v8.i64[1] = 0x3232323232323232;
  *(int8x16_t *)(v2 + (a1 + v1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1002
                                          * ((((v4 - 2413) ^ ((((v4 - 22) + 0x1FFFFF5F1) & (v3 + 1)) == 16)) & 1) == 0)) ^ (v4 - 22)))
                            - 8))();
}

void sub_21E080E20()
{
  JUMPOUT(0x21E080DE0);
}

uint64_t sub_21E080E28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (a5 ^ (985 * (v5 != v6))))
                                                                              - ((a5 - 422) | 0x30u)
                                                                              + 40))(a1, a2, a3, a4, 292491174);
}

uint64_t sub_21E080E6C@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  *(&a20 + (a3 + v20)) = *(_BYTE *)(v21 + v24 - 1157706279)
                                     - ((2 * *(_BYTE *)(v21 + v24 - 1157706279)) & 0x64)
                                     + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((224 * ((a1 + a3 + 1) > 0x3F)) ^ (a2 + v22 - 613)))
                            - 12))();
}

uint64_t sub_21E080EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int32x4_t a37,int32x4_t a38,int32x4_t a39,int32x4_t a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(__n128, __n128, __n128, __n128, __n128);
  __n128 v50;
  __n128 v51;
  __n128 v52;
  __n128 v53;
  __n128 v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint8x16_t v59;
  uint16x8_t v60;
  int8x16_t v61;
  int8x16_t v62;
  uint16x8_t v63;
  int8x16_t v64;
  int8x16_t v65;
  uint8x16_t v66;
  uint16x8_t v67;
  uint16x8_t v68;
  uint8x16_t v69;
  int8x16_t v72;
  int8x16_t v77;
  int32x4_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int32x4_t v81;
  uint8x16_t v83;
  uint16x8_t v84;
  uint16x8_t v85;
  uint8x16_t v86;
  uint8x16_t v91;
  uint16x8_t v92;
  uint16x8_t v93;
  int32x4_t v94;
  int32x4_t v95;
  int32x4_t v96;
  _DWORD *v97;
  int v98;
  uint64_t v99;
  int v100;
  int v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  int8x16x4_t v109;
  int8x16x4_t v110;

  v48 = (v40 + 2031644059) & 0x86E79736;
  v49 = (uint64_t (*)(__n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v42 + 8 * v40) + v48 - 1298);
  HIDWORD(v105) = ((a5 + v48 - 1286) ^ 0x50C69AE3) + HIDWORD(a12);
  v50 = (__n128)vdupq_n_s32(0x6FF00B16u);
  v51.n128_u64[0] = 0x3232323232323232;
  v51.n128_u64[1] = 0x3232323232323232;
  v52 = (__n128)vdupq_n_s32(0x37F8058Bu);
  v53.n128_u64[0] = 0x6464646464646464;
  v53.n128_u64[1] = 0x6464646464646464;
  v54 = (__n128)vdupq_n_s32(0x37F8059Bu);
  v55 = (a5 + 2126345753) & 0x6FD37EFF;
  v56 = HIDWORD(a33);
  v57 = a35;
  v58 = BYTE4(a36) ^ 0xF1;
  LODWORD(v105) = BYTE4(a36) ^ 0xFFFFFFF1;
  if (v58 == 2)
  {
    v106 = __PAIR64__(a34, HIDWORD(a33));
    v107 = __PAIR64__(a35, HIDWORD(a34));
    v110 = vld4q_s8((const char *)&a24 + 4);
    HIDWORD(a15) = HIDWORD(a35);
    v83 = (uint8x16_t)veorq_s8(v110.val[0], (int8x16_t)v51);
    v84 = vmovl_u8(*(uint8x8_t *)v83.i8);
    v85 = vmovl_high_u8(v83);
    v86 = (uint8x16_t)veorq_s8(v110.val[1], (int8x16_t)v51);
    _Q22 = vmovl_u8(*(uint8x8_t *)v86.i8);
    _Q21 = vmovl_high_u8(v86);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v91 = (uint8x16_t)veorq_s8(v110.val[2], (int8x16_t)v51);
    v92 = vmovl_high_u8(v91);
    v93 = vmovl_u8(*(uint8x8_t *)v91.i8);
    v110.val[0] = veorq_s8(v110.val[3], (int8x16_t)v51);
    v110.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v110.val[0]);
    v110.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v110.val[0].i8);
    v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v93.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v110.val[0].i8));
    v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v93, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v84), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v110.val[0]));
    v110.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v92.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v85.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v110.val[1].i8));
    v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v92, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v85), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v110.val[1]));
    a39 = vaddq_s32(vsubq_s32((int32x4_t)v110.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v110.val[0], (int32x4_t)v110.val[0]), (int8x16_t)v50)), (int32x4_t)v52);
    a40 = vaddq_s32(vsubq_s32(v96, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v96, v96), (int8x16_t)v50)), (int32x4_t)v52);
    a37 = vaddq_s32(vsubq_s32(v94, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v94, v94), (int8x16_t)v50)), (int32x4_t)v52);
    a38 = vaddq_s32(vsubq_s32(v95, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v95, v95), (int8x16_t)v50)), (int32x4_t)v52);
    v97 = (_DWORD *)&a37 + v46 + 489952052;
    v98 = *(v97 - 8) ^ *(v97 - 3);
    v99 = *(v97 - 16);
    v100 = v99 ^ *(v97 - 14) ^ (v98 + v45 - ((2 * v98) & 0x6FF00B16));
    HIDWORD(v102) = v100 ^ v45;
    LODWORD(v102) = v100;
    v101 = v102 >> 31;
    v103 = (2 * v101) & 0x6FF00B16;
    *v97 = v101 + v45 - v103;
    v104 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)(((8 * (v47 != 489951989)) | (32 * (v47 != 489951989))) ^ a5 ^ (a5 - 1524)));
    HIDWORD(a20) = (a5 + 2126345753) & 0x66832208;
    LODWORD(v108) = v55 ^ 0x6FB;
    HIDWORD(v108) = v55 ^ 0x575;
    return v104(v104, v103, v56, v99, a5, v57, a7, (char *)&a24 + 4, a9, a10, a11, a12, a13, v41, a15, v105, v106, v107, v49,
             a20,
             v108,
             v47 - 16,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36);
  }
  else if (v58 == 1)
  {
    v109 = vld4q_s8((const char *)&a24 + 4);
    v59 = (uint8x16_t)veorq_s8(v109.val[0], (int8x16_t)v51);
    v60 = vmovl_u8(*(uint8x8_t *)v59.i8);
    v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    v62 = (int8x16_t)vmovl_high_u16(v60);
    v63 = vmovl_high_u8(v59);
    v64 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v63.i8);
    v65 = (int8x16_t)vmovl_high_u16(v63);
    v66 = (uint8x16_t)veorq_s8(v109.val[1], (int8x16_t)v51);
    v67 = vmovl_high_u8(v66);
    v68 = vmovl_u8(*(uint8x8_t *)v66.i8);
    v69 = (uint8x16_t)veorq_s8(v109.val[2], (int8x16_t)v51);
    _Q26 = (int8x16_t)vmovl_high_u8(v69);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v69.i8);
    v72 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    v77 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v109.val[0] = veorq_s8(v109.val[3], (int8x16_t)v51);
    v109.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v109.val[0]);
    v109.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v109.val[1]);
    v109.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v109.val[0].i8);
    v109.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v109.val[0]);
    v109.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v109.val[0].i8), 0x18uLL), v72), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v68.i8, 8uLL), v61));
    v109.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v109.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v68, 8uLL), v62));
    v109.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v109.val[1].i8), 0x18uLL), v77), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v67.i8, 8uLL), v64));
    v109.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v109.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v67, 8uLL), v65));
    v78 = (int32x4_t)veorq_s8(vandq_s8(v109.val[0], (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    v79 = (int32x4_t)veorq_s8(vandq_s8(v109.val[3], (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    v80 = (int32x4_t)veorq_s8(vandq_s8(v109.val[1], (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v64 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    v81 = (int32x4_t)veorq_s8(vandq_s8(v109.val[2], (int8x16_t)v54), (int8x16_t)(*(_OWORD *)&v65 & __PAIR128__(0xFFFFFF10FFFFFF10, 0xFFFFFF10FFFFFF10)));
    a39 = vaddq_s32(vsubq_s32((int32x4_t)v109.val[1], vaddq_s32(v80, v80)), (int32x4_t)v52);
    a40 = vaddq_s32(vsubq_s32((int32x4_t)v109.val[2], vaddq_s32(v81, v81)), (int32x4_t)v52);
    a37 = vaddq_s32(vsubq_s32((int32x4_t)v109.val[0], vaddq_s32(v78, v78)), (int32x4_t)v52);
    a38 = vaddq_s32(vsubq_s32((int32x4_t)v109.val[3], vaddq_s32(v79, v79)), (int32x4_t)v52);
    return ((uint64_t (*)(__n128))(*(_QWORD *)(v42 + 8 * v55) - 12))(v50);
  }
  else
  {
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v44) + v44 - (v43 & (4 * (HIDWORD(a33) ^ v44)));
    LODWORD(a34) = 2 * (a34 ^ v44) + v44 - (v43 & (4 * (a34 ^ v44)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v44) + v44 - (v43 & (4 * (HIDWORD(a34) ^ v44)));
    LODWORD(a35) = 2 * (a35 ^ v44) + v44 - (v43 & (4 * (a35 ^ v44)));
    return v49(v50, v51, v52, v53, v54);
  }
}

uint64_t sub_21E081A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  uint64_t v17;
  _BOOL4 v18;

  if (a17 < 0x62339390 != (a14 + 489841065) < 0x62339390)
    v18 = (a14 + 489841065) < 0x62339390;
  else
    v18 = a14 + 489841065 > a17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((!v18 * (((a7 + a5 - 923) | 0x1AA) ^ 0x750)) ^ (a7 + a5 + 2060)))
                            - 12))();
}

uint64_t sub_21E081B00()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((95 * (v3 + v0 + 63 < (((v1 + 273024066) | 0x12909A6) ^ 0xAB91C27F) + v0)) ^ v1))
                            - 37 * (v1 ^ 0x1B3u)
                            + 477))();
}

uint64_t sub_21E081B68(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((1277
                                          * (((a13 + a8 - (unint64_t)(v13 + v15) < 0x10) ^ ((a1 ^ (a5 - 95)) + a1 - a7 - 50 + 1)) & 1)) ^ a1))
                            - 4))();
}

uint64_t sub_21E081BC0(double a1, int8x16_t a2, double a3, int8x16_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, int a11, int8x16_t *a12)
{
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int8x16_t v18;

  v18 = *(int8x16_t *)(v16 + v12 + ((v14 - a9 + 95) ^ (v17 - 83)));
  *a12 = vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a4)), a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (v13 ^ (a11 + v14 + 1178))) - 12))();
}

uint64_t sub_21E081C24@<X0>(char a1@<W3>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  *(_BYTE *)(a4 + a5) = *(_BYTE *)(v8 + (v5 + v9))
                      - (a1 & (2 * *(_BYTE *)(v8 + (v5 + v9))))
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((a5 == 63) * (((a3 + v6 - 875) | v10) ^ a2)) ^ (a3 + v6 + 515)))
                            - 12))();
}

uint64_t sub_21E081C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  unsigned int v14;
  uint64_t v15;
  _BOOL4 v16;

  v16 = v13 + 742918129 < (a13 + 1354709965);
  if ((a13 + 1354709965) < 0x71493A18 != v13 + 742918129 < (((v14 + 2045) | 0x100) ^ 0x714937BF))
    v16 = (a13 + 1354709965) < 0x71493A18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((439 * !v16) ^ v14)) - 8))();
}

uint64_t sub_21E081CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  unsigned int v40;

  v38 = 1948972247 * ((v37 - 1846951025 - 2 * ((v37 - 120) & 0x91E9C407)) ^ 0x247731E9);
  *(_QWORD *)(v37 - 112) = a11;
  *(_DWORD *)(v37 - 104) = v36 - v38 - 1052;
  *(_DWORD *)(v37 - 120) = v38 + a13 + 318369691;
  v39 = sub_21E0A4DD0(v37 - 120);
  v40 = (v36 - 33586672) & 0x116F3FEE ^ 0x116F0F9A ^ a35 & 0x3F;
  *(&a26 + v40) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v35
                                                      + 8
                                                      * (v36 | (8 * (v40 <= ((v36 - 1602) ^ 0x752u)))))
                                          - 12))(v39);
}

uint64_t sub_21E081DFC@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1269 * ((a3 - 316462007) < 0x38)) ^ (v4 + a2)))
                            - (v4 - a1 + 993)
                            + 989))();
}

uint64_t sub_21E081E40@<X0>(unsigned int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1;
  v4 = a1 - 316462007;
  if ((unint64_t)(v4 + 1) > 0x38)
    v5 = v4 + 1;
  else
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2428
                                          * (v5 - v3 + 316462007 >= (((v1 + 285998245) | 0x630F20u) ^ 0x116F0FAEuLL))) ^ v1))
                            - 4))();
}

uint64_t sub_21E081EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)(&a25 + v27 - 316462007) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v28
                                        + 8
                                        * ((((v25 & 0xFFFFFFFFFFFFFFF8) == 8) * (((v26 - 562) | 0x200) ^ 0x547)) ^ (v26 + 2071)))
                            - 12))();
}

uint64_t sub_21E081F14(double a1)
{
  int v1;
  double *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v2 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ v1)) - 12))();
}

uint64_t sub_21E081F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (v9 ^ (78 * (v7 != v8))))
                            - ((v9 - a7) ^ v9 ^ (a5 - 925) ^ 4)))();
}

void sub_21E081F6C()
{
  JUMPOUT(0x21E080F10);
}

uint64_t sub_21E082500@<X0>(int a1@<W4>, int a2@<W6>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * (((a2 + a1 + (a3 ^ 0x732) - 87 + 2260) * (v4 != v3)) ^ a3)))();
}

void sub_21E082534()
{
  JUMPOUT(0x21E080F10);
}

uint64_t sub_21E082540@<X0>(int a1@<W6>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  int v19;
  uint64_t v20;

  *(&a19 + a2 - 316462007) = 50;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((1265 * (a2 - 316462006 >= ((v19 + 975570097) & 0xB46AEBFF ^ 0x17uLL))) ^ (a1 + v19 - 27))))();
}

uint64_t sub_21E082608@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  _BOOL4 v39;

  v36 = v34 - 1887803735 + ((v32 + 535787120) & 0x116F8FB6);
  v37 = *(_DWORD *)(&a19 + (v36 & 0xFFFFFFFC) + 72);
  v38 = v34 + v31;
  *(_BYTE *)(a1 + v36) = (HIBYTE(v37) ^ 0x50) - 2 * ((HIBYTE(v37) ^ 0x50) & 0x36 ^ HIBYTE(v37) & 4) + 50;
  *(_BYTE *)(a1 + v38) = (BYTE2(v37) ^ 0xD7) - ((2 * (BYTE2(v37) ^ 0xD7)) & 0x64) + 50;
  *(_BYTE *)(a1 + v38 + 1) = (BYTE1(v37) ^ 0xA) + ~(2 * ((BYTE1(v37) ^ 0xA) & 0x37 ^ BYTE1(v37) & 5)) + 51;
  *(_BYTE *)(a1 + v38 + 2) = v37 ^ 0xD5;
  v39 = v34 + 1138087797 < (a31 + 1644906825);
  if (v34 + 1138087797 < a2 != a31 + 1644906825 < a2)
    v39 = a31 + 1644906825 < a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((v39 * v33) ^ v32)) - 8))();
}

void sub_21E0827C8()
{
  JUMPOUT(0x21E082790);
}

uint64_t sub_21E0827D0()
{
  return 0;
}

void sub_21E082810(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  char v4;

  v1 = 1734664879 * (((a1 | 0x69305C2F) - a1 + (a1 & 0x96CFA3D0)) ^ 0x46EB7435);
  v2 = *(_DWORD *)a1 - v1;
  if (*(_QWORD *)(a1 + 24))
    v3 = *(_DWORD *)(a1 + 16) - v1 == 868664070;
  else
    v3 = 1;
  v4 = v3;
  __asm { BR              X8 }
}

uint64_t sub_21E0828D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  v7 = ((((v6 ^ 0x538) + 1940694197) & 0x8C535FF2) - 1934) & (2 * *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0xCE528DE2F096DD4)) ^ 0x50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                                 + 8
                                                                                 * ((1184
                                                                                   * (v5
                                                                                    + 641941264
                                                                                    + v7
                                                                                    + (*(_DWORD *)(*(_QWORD *)(a1 + 8)
                                                                                                 - 0xCE528DE2F096DD4) & 0x3F ^ 0xA5F5FD96) < 0xFFFFFFC0)) ^ v6 ^ 0x538))
                                                                     - 12))(1184, v7, a3, a4);
}

uint64_t sub_21E0829A0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;

  v16 = a5 + (v15 ^ 0x52B) + 1510604068 + 262;
  if (v16 <= 0x40)
    v16 = 64;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * (((v14 - v13 - a2 + v16 > 0xE) * ((3 * (v15 ^ 0x52B)) ^ 0x4D8)) ^ v15))
                                          - 4))(a12 - 0xCE528DE2F096E18);
}

uint64_t sub_21E082A34(uint64_t a1, int a2, int a3, int a4, unsigned int a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;

  v9 = a2 + v7;
  v10 = a3 + a2 + v7 + 492;
  if (v10 <= 0x40)
    v10 = a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v8 - v9 + a4 + 2977 - 3207 < a6 + v10) * (a4 + 250)) ^ a4)) - 4))();
}

uint64_t sub_21E082A7C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1918
                                          * (v7
                                           - 0xCE528DE2F097A9FLL
                                           - v4
                                           + (a4 + 2977)
                                           + (unint64_t)(v6 + a3 + ((a4 + 32) ^ 0xEDu)) > 0xF)) ^ (a4 + 32)))
                            - 4))();
}

uint64_t sub_21E082AD4@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  int8x16_t *v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;

  v8.i64[0] = 0x6464646464646464;
  v8.i64[1] = 0x6464646464646464;
  v9.i64[0] = 0x3232323232323232;
  v9.i64[1] = 0x3232323232323232;
  *(int8x16_t *)(a1 + (v6 + a3)) = vaddq_s8(vsubq_s8(*v3, vandq_s8(vaddq_s8(*v3, *v3), v8)), v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((v7 + 1) & 0x1FFFFFFF0) == 16) * ((v5 ^ a2) + 2792)) ^ v5))
                            - 8))();
}

void sub_21E082B34()
{
  JUMPOUT(0x21E082AFCLL);
}

uint64_t sub_21E082B40()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 ^ (1434 * (v2 == v3))))
                            - (v1 + 2945)
                            - (v1 ^ 0x10Bu)
                            + 3216))();
}

uint64_t sub_21E082B78(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  __n128 v47;
  __n128 v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  uint8x16_t v54;
  uint8x16_t v62;
  uint16x4_t v63;
  uint16x8_t v64;
  uint8x16_t v65;
  uint8x16_t v70;
  uint16x8_t v71;
  int32x4_t v72;
  int32x4_t v73;
  unint64_t v74;
  int v75;
  uint64_t v76;
  _DWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _DWORD *v80;
  _DWORD *v81;
  uint64_t v82;
  _DWORD *v83;
  int32x4_t v84;
  unsigned __int32 v85;
  int32x4_t v86;
  int8x16x4_t v87;
  int8x16x4_t v88;

  v76 = v40 ^ 0x60Fu;
  v83 = (_DWORD *)(v41 - 0xCE528DE2F096DC4);
  v77 = (_DWORD *)(v41 - 0xCE528DE2F096DC0);
  HIDWORD(v79) = v39 + 584656266;
  LODWORD(v79) = 1453320336;
  v44 = (__n128)vdupq_n_s32(0x6FF00B16u);
  v45 = (__n128)vdupq_n_s32(0x37F8058Bu);
  v46.n128_u64[0] = 0x3232323232323232;
  v46.n128_u64[1] = 0x3232323232323232;
  v47 = (__n128)vdupq_n_s32(0x37F8059Bu);
  HIDWORD(v82) = (v43 + 2092540697) & 0x83465FED;
  LODWORD(v78) = v43;
  v48.n128_u64[0] = 0x6464646464646464;
  v48.n128_u64[1] = 0x6464646464646464;
  v80 = (_DWORD *)(v41 - 0xCE528DE2F096DC8);
  v81 = (_DWORD *)(v41 - 0xCE528DE2F096DCCLL);
  v49 = *(_QWORD *)(v38 + 8 * v40);
  v50 = *(_DWORD *)(v41 - 0xCE528DE2F096DCCLL);
  v51 = *(_DWORD *)(v41 - 0xCE528DE2F096DC8);
  v52 = *(_DWORD *)(v41 - 0xCE528DE2F096DC4);
  v53 = *(unsigned __int8 *)(v41 - 0xCE528DE2F096DB8) ^ 0xF1;
  if (v53 == 2)
  {
    HIDWORD(a20) = *(_DWORD *)(v41 - 0xCE528DE2F096DD0);
    LODWORD(v82) = *v83;
    v88 = vld4q_s8(a1);
    LODWORD(a13) = *v77;
    v62 = (uint8x16_t)veorq_s8(v88.val[0], (int8x16_t)v46);
    v63 = (uint16x4_t)vmovl_u8(*(uint8x8_t *)v62.i8).u64[0];
    v64 = vmovl_high_u8(v62);
    v65 = (uint8x16_t)veorq_s8(v88.val[1], (int8x16_t)v46);
    _Q22 = vmovl_u8(*(uint8x8_t *)v65.i8);
    _Q21 = vmovl_high_u8(v65);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v70 = (uint8x16_t)veorq_s8(v88.val[2], (int8x16_t)v46);
    v71 = vmovl_high_u8(v70);
    v88.val[0] = veorq_s8(v88.val[3], (int8x16_t)v46);
    v88.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v88.val[0]);
    v72 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v70.i8), 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(v63), 0x18uLL)), (int8x16_t)vmovl_u16((uint16x4_t)*(_OWORD *)&vmovl_u8(*(uint8x8_t *)v88.val[0].i8)));
    v88.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v71.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v64.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v88.val[1].i8));
    v73 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v71, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v64), 0x18uLL)), (int8x16_t)vmovl_high_u16((uint16x8_t)v88.val[1]));
    v85 = vaddq_s32(vsubq_s32((int32x4_t)v88.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v88.val[0], (int32x4_t)v88.val[0]), (int8x16_t)v44)), (int32x4_t)v45).u32[0];
    v86 = vaddq_s32(vsubq_s32(v73, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v73, v73), (int8x16_t)v44)), (int32x4_t)v45);
    v84 = vaddq_s32(vsubq_s32(v72, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v72, v72), (int8x16_t)v44)), (int32x4_t)v45);
    HIDWORD(v74) = v84.i32[0] ^ v84.i32[2] ^ ((v85 ^ v86.i32[1]) + 939001227 - ((2 * (v85 ^ v86.i32[1])) & 0x6FF00B16)) ^ 0x37F8058B;
    LODWORD(v74) = v84.i32[0] ^ v84.i32[2] ^ ((v85 ^ v86.i32[1]) + 939001227 - ((2 * (v85 ^ v86.i32[1])) & 0x6FF00B16));
    HIDWORD(v78) = HIDWORD(v82) + 1453318023;
    return (*(uint64_t (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, _DWORD *, _DWORD *, uint64_t, unint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((v43 - 200) ^ 0x7B)))(a1, -2043390470, 2043390486, 2938696984, 2835793956, 2712540622, (2 * (v74 >> 31)) & 0x6FF00B16, 1356270311, a9, v76, v42, a12, a13, v77, v78, v79, v41 - 0xCE528DE2F096DB8, v80, v81,
             a20,
             __PAIR64__(v51, v50),
             v82,
             v41 - 0xCE528DE2F096DD0,
             v83,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38);
  }
  else if (v53 == 1)
  {
    v87 = vld4q_s8(a1);
    v54 = (uint8x16_t)veorq_s8(v87.val[2], (int8x16_t)v46);
    _Q26 = vmovl_high_u8(v54);
    _Q25 = vmovl_u8(*(uint8x8_t *)v54.i8);
    __asm
    {
      SHLL2           V25.4S, V25.8H, #0x10
      SHLL2           V26.4S, V26.8H, #0x10
    }
    return ((uint64_t (*)(__n128))(*(_QWORD *)(v38 + 8 * (v43 + 878)) - 12))(v44);
  }
  else
  {
    v75 = *v83;
    *(_DWORD *)(v41 - 0xCE528DE2F096DD0) = 2 * (*(_DWORD *)(v41 - 0xCE528DE2F096DD0) ^ 0x50D70AE7)
                                           + 1356270311
                                           - ((4 * (*(_DWORD *)(v41 - 0xCE528DE2F096DD0) ^ 0x50D70AE7)) & 0xA1AE15CE);
    *v81 = 2 * (v50 ^ 0x50D70AE7) + 1356270311 - ((4 * (v50 ^ 0x50D70AE7)) & 0xA1AE15CE);
    *v80 = 2 * (v51 ^ 0x50D70AE7) + 1356270311 - ((4 * (v51 ^ 0x50D70AE7)) & 0xA1AE15CE);
    *v83 = (v75 ^ 0x50D70AE7)
         + (v52 ^ 0x50D70AE7)
         + 1356270311
         - ((2 * ((v75 ^ 0x50D70AE7) + (v52 ^ 0x50D70AE7))) & 0xA1AE15CE);
    return ((uint64_t (*)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128))(v49 - 12))(a1, -2043390470, 2043390486, 2938696984, 2835793956, v44, v45, v46, v47, v48);
  }
}

uint64_t sub_21E08376C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, unsigned int a17, unsigned int a18)
{
  uint64_t v18;
  int v19;
  _BOOL4 v20;

  if (a18 < a17 != a11 - 384572818 < a16)
    v20 = a11 - 384572818 < a16;
  else
    v20 = a11 - 384572818 > a18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((v20 | (16 * v20)) ^ (v19 - 727)))
                            - 1009 * (v19 ^ 0x600u)
                            + 2006))();
}

uint64_t sub_21E0837E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  uint64_t v23;
  int v24;
  int v25;

  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8
                                        * ((1216
                                          * ((((a23 - 775) ^ (v24 + v25 + 63 < (v24 + v25))) & 1) == 0)) | a23))
                            - 4))();
}

uint64_t sub_21E083834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;

  return ((uint64_t (*)(void))(*(_QWORD *)(v24
                                        + 8
                                        * ((27
                                          * ((((a23 ^ 0xB) + 1) ^ (a12
                                                                                  - 0xCE528DE2F097A9FLL
                                                                                  - v23
                                                                                  + a10
                                                                                  - (unint64_t)(v26 + v25 + ((2 * a23) ^ 0x1410u) - 1538)
                                                                                  + 1669 < 0x10)) & 1)) ^ a23))
                            - 4))();
}

uint64_t sub_21E0838B4(int8x16_t *a1, double a2, double a3, int8x16_t a4, double a5, int8x16_t a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned __int8 v12;

  *a1 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v6 + (v10 + v11)), vandq_s8(vaddq_s8(*(int8x16_t *)(v6 + (v10 + v11)), *(int8x16_t *)(v6 + (v10 + v11))), a6)), a4);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v8 ^ v12) & 1) * v9) ^ (v8 + 1067))))();
}

uint64_t sub_21E08390C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char v5;
  int v6;
  int v7;
  int v8;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(v1 + (v6 + v7))
                      - (v5 & (2 * *(_BYTE *)(v1 + (v6 + v7))))
                      + 50;
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 == 63) * v8) ^ (v4 - 650))))();
}

uint64_t sub_21E083958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;
  int v12;
  _BOOL4 v13;

  v13 = v12 + 1573983918 < (a10 - 1751754230);
  if ((v12 + 1573983918) < 0xCB5D1D10 != a10 - 1751754230 < ((v11 + 1207713456) & 0xB803BF6F) - 883091698)
    v13 = a10 - 1751754230 < ((v11 + 1207713456) & 0xB803BF6F) - 883091698;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v13 * (((v11 - 1058) | 0x438) + 1679)) ^ v11)) - 12))();
}

uint64_t sub_21E083A04(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  _BOOL4 v15;
  char v16;
  unsigned int v17;
  int v18;
  _BOOL4 v19;

  v14 = a1 - 22;
  v15 = v7 < v11;
  v16 = *(_BYTE *)(v5 + v13 + v12 + ((v14 - 1506) | 0x402u) - 1538);
  *(_BYTE *)(a5 - 0xCE528DE2F096E18 + (v8 - 83133856)) = v16 - ((2 * v16) & 0x64) + 50;
  v17 = v12 + 1 + v10;
  v18 = v15 ^ (v17 < v9);
  v19 = v17 < v7;
  if (!v18)
    v15 = v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((26 * v15) ^ v14)) - 12))();
}

void sub_21E083A9C()
{
  JUMPOUT(0x21E083A34);
}

uint64_t sub_21E083AA8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  v4 = 1948972247 * (((v3 - 120) & 0x9814ADBD | ~((v3 - 120) | 0x9814ADBD)) ^ 0xD275A7AC);
  *(_DWORD *)(v3 - 104) = v1 - v4 + 905;
  *(_QWORD *)(v3 - 112) = a1;
  *(_DWORD *)(v3 - 120) = v2 + v4 - 4379936;
  return sub_21E0A4DD0(v3 - 120);
}

void sub_21E083BC4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 28) ^ (1990461019 * ((a1 & 0x2E0916E9 | ~(a1 | 0x2E0916E9)) ^ 0xFE124B9F));
  __asm { BR              X10 }
}

uint64_t sub_21E083C90@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7, unint64_t *a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1948972247 * (((&a4 | 0xDBD7A19F) + (~&a4 | 0x24285E60)) ^ 0x6E495470);
  a8 = &STACK[0x47DF44ECCB2F1625];
  a7 = 1993003152 - v12;
  a4 = (v10 - 2910) ^ v12;
  a5 = &STACK[0x70E23F743AC84B9F];
  a6 = v11;
  v13 = ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v10 ^ 0xC80)) - 12))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((191
                                                        * (*(_DWORD *)(v11 - 0x6898E7DB637CE953) == ((v10 + 661002777) & 0xD899DFFB ^ (v8 - 419)))) ^ v10))
                                          - 12))(v13);
}

uint64_t sub_21E083D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a10 == v10) * (v12 - 1279)) ^ v12)) - 4))();
}

uint64_t sub_21E083DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;

  *(_BYTE *)(v11 + (v13 + v12)) = *(_BYTE *)(a11 + (v13 + v12)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((v13 + 1 + v12 >= (a10 ^ v14)) * (v16 ^ 0x707)) ^ v16)) - 4))();
}

void sub_21E083E18(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t *v3;
  uint64_t v4;

  v4 = *v3;
  *(_QWORD *)(v3[1] - 0x10AB37095071AF3ELL) = v1;
  *(_DWORD *)(v4 - 0xD254D6213B3B3FDLL) = v2;
  *((_DWORD *)v3 + 6) = *a1;
}

uint64_t sub_21E083E80(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(qword_24E215050[(2490
                                                           * (*(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL) == 1810943906)) ^ 0x403u]
                                          - 4))(4294925278);
}

uint64_t sub_21E083ED8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E689) = *(_BYTE *)(*(_QWORD *)(a1
                                                                                                  - 0x593A0D77ED43FF8BLL)
                                                                                      + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 8016) - 4))(0);
}

uint64_t sub_21E083F64@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;

  *(_BYTE *)(v2 + (v7 + v4)) = *(_BYTE *)(v3 + (v7 + v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v7 - 1 == a1) * v5) ^ v6)) - 4))(0);
}

uint64_t sub_21E083F98(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) ^ (1438293641 * ((2 * (a1 & 0xC77E475F) - a1 + 948025504) ^ 0x8046EDDF));
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + (v1 ^ 0x549))
                                        + 8 * ((23 * (*(_QWORD *)(a1 + 8) != 0x596ED33E7E9805B8)) ^ v1)
                                        - 12)
                            - 12))();
}

_DWORD *sub_21E08403C@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  char v4;

  v3 = *result + v2;
  v4 = (HIBYTE(v3) ^ 0xBF) - ((2 * (HIBYTE(v3) ^ 0xBF)) & 0xE7) - 13;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B8) = ((v3 & 0xF ^ 0x12) - ((2 * (v3 & 0xF ^ 0x12)) & 0xF7) - 101) ^ 0x40;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B7) = (v3 >> 4) | 0xC0;
  LOBYTE(v3) = (BYTE1(v3) ^ 0x35) - ((2 * (BYTE1(v3) ^ 0x35)) & 0xE7) - 13;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B6) = ((v3 & 0xF ^ 0x1D) - ((2 * (v3 & 0xF ^ 0x1D)) & 0xF7) - 101) ^ 0x40;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B5) = ((v3 & 0xF0) >> 4) ^ 0xCA;
  LOBYTE(v3) = ((BYTE2(v3) ^ 0x4D) - ((2 * (BYTE2(v3) ^ 0x4D)) & 0xE7) - 13) & 0xF ^ 0x1D;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B4) = (v3 - ((2 * v3) & 0xF7) - 101) ^ 0x40;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B3) = ((((BYTE2(v3) ^ 0x4D) - ((2 * (BYTE2(v3) ^ 0x4D)) & 0xE7) - 13) & 0xF0) >> 4) ^ 0xCA;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B2) = ((v4 & 0xF ^ 0x1D) - ((2 * (v4 & 0xF ^ 0x1D)) & 0xF7) - 101) ^ 0x40;
  *(_BYTE *)(a2 - 0x596ED33E7E9805B1) = ((v4 & 0xF0) >> 4) ^ 0xCA;
  result[4] = 939001227;
  return result;
}

uint64_t sub_21E0841D8(uint64_t result)
{
  *(_DWORD *)(result + 16) = -939041305;
  return result;
}

void sub_21E0841E8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_21E084280@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _BOOL4 v2;

  v2 = ((a1 - 1810943893) ^ 0x7CF7F6FF7FE77FBFLL)
     + ((2 * (a1 - 1810943893)) & 0xFFCEFF7E)
     - 0x7CF7F6FF20E2509FLL == 1594175264;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * ((v2 | (16 * v2)) ^ 0x825u)) - 8))(0x3E832086D50439F2, 2);
}

uint64_t sub_21E084340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = *(unsigned __int8 *)(v2 + a1 - 0x3E832086D50439F2) - *(unsigned __int8 *)(v1 + a1 - 0x3E832086D50439F2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((507 * ((v5 ^ 0x3FD7BE55) + ((2 * v5) & 0x7FAF7CAA) == 1071103573)) ^ v3))
                            - (((v3 - 2099) | 0x824u)
                             - 160)
                            + 1917))();
}

uint64_t sub_21E0843B8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _BOOL4 v7;
  unint64_t v8;
  int v9;
  _BOOL4 v10;

  v7 = v4 < v5;
  v8 = (((a3 - 2065) | 0x820u) ^ 0xC17CDF798A00FD1BLL) + a1;
  v9 = v7 ^ (v8 < (((a3 - 1061) | 0x385u) ^ (unint64_t)(v3 + 441)));
  v10 = v8 < v4;
  if (!v9)
    v7 = v10;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v6 + 8 * ((!v7 | (16 * !v7)) ^ a3)) - 8))(a1 + 1, 2);
}

uint64_t sub_21E08443C@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = a3 == 1810943902 && a1 + a2 != (((v3 - 69) | 0x11) ^ 0x2A);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((38 * v6) ^ v3)) - 4))(4294925278);
}

uint64_t sub_21E084490()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((*v0 - 42) ^ 0xFF77FFE3) + 2013200384 + ((2 * (*v0 - 42)) & 0xFEEFFFC6) == 2004287459)
                                          * (139 * (v1 ^ 0x346) - 1214)) ^ v1))
                            - 12))();
}

uint64_t sub_21E0844F4@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((3415
                                          * (((*(unsigned __int8 *)(v3 + 1) - 134) ^ v1)
                                           + v5
                                           + (v2 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134))) == ((v4 + 2348) ^ (a1 - 3141)))) ^ v4))
                            - 12))();
}

uint64_t sub_21E084538@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((*(unsigned __int8 *)(v3 + 2) - 72) ^ v1)
                                           + 2013200384
                                           + (v2 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72))) == a1)
                                          * (v4 + 1438)) ^ v4))
                            - 12))();
}

uint64_t sub_21E084574@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((2643
                                          * (((v4 + 2096163118) & 0x830F1FFD)
                                           + ((*(unsigned __int8 *)(v3 + 3) - 134) ^ v1)
                                           + (v2 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                           + 2013197187 == a1)) ^ v4))
                            - 12))();
}

uint64_t sub_21E0845D0@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((*(unsigned __int8 *)(v3 + 4) - 247) ^ v1)
                                           + 2013200384
                                           + (v2 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247))) == a1)
                                          * ((23 * (v4 ^ 0x3DA)) ^ 0x6CC)) ^ v4))
                            - 12))();
}

uint64_t sub_21E084620@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((4062
                                          * (((v5 + 2348) ^ (v2 - 3141) ^ (*(unsigned __int8 *)(v4 + 5) - 13))
                                           + (v3 & (2 * (*(unsigned __int8 *)(v4 + 5) - 13)))
                                           + a1 == a2)) ^ v5))
                            - 12))();
}

uint64_t sub_21E084664@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((179
                                          * (((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1)
                                           + 2013200384
                                           + (((*(unsigned __int8 *)(v3 + 6) - 1) << ((23 * (v4 ^ 0xDA)) ^ 0x7C)) & v2) == a1)) ^ v4))
                            - 12))();
}

uint64_t sub_21E0846BC@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((*(unsigned __int8 *)(v4 + 7) - 1) ^ v2)
                                           + a1
                                           + (v3 & (2 * (*(unsigned __int8 *)(v4 + 7) - 1))) == a2)
                                          * (v5 + 1861)) ^ v5))
                            - 12))();
}

uint64_t sub_21E0846F8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  BOOL v7;
  _BOOL4 v8;

  v7 = (v4 ^ 0xF2C) + v5 + ((*(unsigned __int8 *)(v3 + 8) - 4) ^ v1) + (v2 & (2 * (*(unsigned __int8 *)(v3 + 8) - 4))) == a1;
  v8 = ((v7 ^ ((v4 ^ 0x2C) - 94)) + 2 * v7) == 31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v8 | (2 * v8)) ^ v4 ^ 0xF2C))
                            - (((v4 ^ 0xF2C) - 3125) | 0x410u)
                            + 1100))();
}

uint64_t sub_21E084780()
{
  _DWORD *v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E2B5) = v1;
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((*v0 == ((27 * (v3 ^ 0x451)) ^ (v2 + 2777))) * (39 * (v3 ^ 0x465) - 2143)) ^ v3)))();
}

uint64_t sub_21E0847FC@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned __int8 **v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((3309 * (((**v4 - 42) ^ v2) + 2013200384 + (v3 & (2 * (**v4 - 42))) == a2)) ^ a1))
                            - ((a1 + 2242) ^ 0x9B9)))();
}

uint64_t sub_21E084848@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((3008
                                          * (((*(unsigned __int8 *)(a1 + 1) - 134) ^ v4)
                                           + a3
                                           + (v5 & (2 * (*(unsigned __int8 *)(a1 + 1) - 134))) == a4)) ^ a2))
                            - (v6 ^ 0x9B9)))();
}

uint64_t sub_21E084888@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1079
                                          * (((*(unsigned __int8 *)(a1 + 2) - 72) ^ v3)
                                           + 2013200384
                                           + (((*(unsigned __int8 *)(a1 + 2) - 72) << (((99 * (a2 ^ 0xF4) - 53) | 0x68)
                                                                                     + 25)) & v4) == a3)) ^ a2))
                            - 12))();
}

uint64_t sub_21E0848E8@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((27
                                          * (497 * (a2 ^ 0xED)
                                           + ((*(unsigned __int8 *)(a1 + 3) - 134) ^ v3)
                                           + (v4 & (2 * (*(unsigned __int8 *)(a1 + 3) - 134)))
                                           + 2013197187
                                           + 712 != ((a2 + 11) ^ (a3 - 211)))) ^ a2))
                            - 12))();
}

uint64_t sub_21E08494C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((*(unsigned __int8 *)(a1 + 4) - 247) ^ v3)
                                           + 2013200384
                                           + (v4 & (2 * (*(unsigned __int8 *)(a1 + 4) - 247))) == a3)
                                          * (a2 + 1023)) ^ a2))
                            - 12))();
}

uint64_t sub_21E08498C@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((2214
                                          * (((*(unsigned __int8 *)(a1 + 5) - 13) ^ v4)
                                           + a3
                                           + (v5 & (2 * (*(unsigned __int8 *)(a1 + 5) - 13))) == a4 + v6 - 2485)) ^ a2))
                            - 12))();
}

uint64_t sub_21E0849CC@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((2649
                                          * (a3
                                           + ((*(unsigned __int8 *)(a1 + 6) - 1) ^ v4)
                                           + (v5 & (2 * (*(unsigned __int8 *)(a1 + 6) - 1)))
                                           + 5 * (a2 ^ 0x102)
                                           + 712 == a4)) ^ a2))
                            - 12))();
}

uint64_t sub_21E084A18@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((2612
                                          * (((*(unsigned __int8 *)(a1 + 7) - 1) ^ v3)
                                           + 2013200384
                                           + (v4 & (2 * (*(unsigned __int8 *)(a1 + 7) - 1))) == a3 + a2 + 2242 - 2485)) ^ a2))
                            - 12))();
}

uint64_t sub_21E084A60@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  _BOOL4 v8;

  v7 = 7 * (a2 ^ 0x190);
  v8 = ((*(unsigned __int8 *)(a1 + 8) - 5) ^ v4)
     + a3
     + (((*(unsigned __int8 *)(a1 + 8) - 5) << ((7 * (a2 ^ 0x90)) ^ 0xB4)) & v5) == ((v7 - 1373) ^ (a4 - 1064));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((v8 ^ 0x7F) + 2 * v8 != 127) * ((v7 - 2038) ^ 0x1B6)) ^ v7))
                            - 4))();
}

uint64_t sub_21E084AD8(uint64_t a1, uint64_t a2, int a3)
{
  _DWORD *v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(*(_QWORD *)(v7 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E2B5) = v4 + 4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3427 * (*v3 == a3 - 665 + v5 + 39 * (a3 ^ 0x465))) ^ a3)))();
}

uint64_t sub_21E084B4C@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  unsigned __int8 **v4;
  uint64_t v5;
  int v6;
  int v7;

  v6 = a1 + 2933 + **v4 - 3422;
  v7 = (v6 ^ v2) + 2013200384 + (v3 & (2 * v6)) == a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((4 * v7) | (v7 << 6)) ^ a1)) - 4))();
}

uint64_t sub_21E084B94@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1782
                                          * (((*(unsigned __int8 *)(v4 + 1) - 134) ^ v2)
                                           + v5
                                           + ((((a1 + 597) | 0x920) ^ (v3 - 3284)) & (2
                                                                                    * (*(unsigned __int8 *)(v4 + 1) - 134))) == a2)) ^ a1))
                            - 4))();
}

uint64_t sub_21E084BE0@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((647
                                          * (((*(unsigned __int8 *)(v4 + 2) - 72) ^ v2)
                                           + 2013200384
                                           + (v3 & (2 * (*(unsigned __int8 *)(v4 + 2) - 72))) == a2)) ^ a1))
                            - ((260 * (a1 ^ 0x1B2u)) ^ 0xD30)))();
}

uint64_t sub_21E084C34@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1762
                                          * (((a1 + 2933) ^ (v2 - 3340) ^ (*(unsigned __int8 *)(v4 + 3) - 134))
                                           + (v3 & (2 * (*(unsigned __int8 *)(v4 + 3) - 134)))
                                           + v5 == a2)) ^ a1))
                            - 4))();
}

uint64_t sub_21E084C78@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((((a1 ^ 5 ^ (v2 - 394) ^ (*(unsigned __int8 *)(v4 + 4) - 247))
                                           + (v3 & (2 * (*(unsigned __int8 *)(v4 + 4) - 247)))
                                           + 2013200384 == a2)
                                          * (52 * (a1 ^ 0x1FE) - 441)) ^ a1))
                            - 4))();
}

uint64_t sub_21E084CD0@<X0>(int a1@<W1>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = ((*(unsigned __int8 *)(v4 + 5) - 13) ^ v2)
     + a1
     + (((*(unsigned __int8 *)(v4 + 5) - 13) << ((v5 + 122) ^ 0x35)) & v3) != a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((v7 | (4 * v7)) ^ v5)) - 4))();
}

uint64_t sub_21E084D14@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((2597
                                          * (((*(unsigned __int8 *)(v4 + 6) - 1) ^ v1)
                                           + 2013200384
                                           + ((v2 + v3 - 3380) & (2 * (*(unsigned __int8 *)(v4 + 6) - 1))) == a1)) ^ v3 ^ 0xC8B))
                            - 4))();
}

uint64_t sub_21E084D64@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = ((v5 - 664142274) & 0x27960D36) + *(unsigned __int8 *)(v4 + 7) - 3381;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((949 * ((v7 ^ v2) + a1 + (v3 & (2 * v7)) == a2)) ^ v5)) - 4))();
}

uint64_t sub_21E084DB8@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  v6 = ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v1)
     + 2013200384
     + ((v2 + v4 + 2933 - 3380) & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((82
                                          * (((v6 == a1) | (2 * (v6 == a1))) == (((-117
                                                                                                  * ((v4 - 96) & 0xF8 ^ 0x50)) ^ 0x58) & 0xF8))) ^ (v4 + 2933)))
                            - 8))();
}

uint64_t sub_21E084E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (((v9 == ((v8 ^ (a8 + 28)) ^ 0x16)) * (v8 + 1096)) ^ v8)))(4294925278);
}

void sub_21E08540C()
{
  JUMPOUT(0x21E085440);
}

void sub_21E0856A4()
{
  JUMPOUT(0x21E0855ACLL);
}

uint64_t sub_21E0856B8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((956 * (v1 + 1 == v3 + 16)) ^ v0)) - 12))();
}

uint64_t sub_21E08578C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1559 * (a5 + 1 == v6 + 32)) ^ a4)) - 12))();
}

uint64_t sub_21E085868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1054 * (a6 + 1 != v8 + 48)) ^ v6)) - 12))();
}

void sub_21E085954()
{
  JUMPOUT(0x21E085E8CLL);
}

uint64_t sub_21E085B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((47 * (a5 + 1 != v9 + 4)) ^ a8)) - 8))();
}

uint64_t sub_21E085C0C(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v2 + 1 != v4 + 24) * a2) ^ a1)) - 8))();
}

uint64_t sub_21E085CB8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((1652 * (a6 + 1 == v7 + 44)) ^ a1)) - 8))();
}

uint64_t sub_21E085D80(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((3393 * (v3 + 1 == v5 + 64)) ^ a3)) - 8))();
}

void sub_21E085E3C()
{
  JUMPOUT(0x21E085E88);
}

uint64_t sub_21E085F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  BOOL v19;

  if (a17 < 0xB7C457DF != (a14 + 1335771485) < 0xB7C457DF)
    v19 = (a14 + 1335771485) < 0xB7C457DF;
  else
    v19 = a14 + 1335771485 > a17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8
                                        * ((1297 * (((a5 + v18 + 73) ^ v19) & 1)) ^ (a5 + v18 + 2027)))
                            - 8))();
}

uint64_t sub_21E085FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 | (13 * (v6 + v5 + 63 >= (v6 + v5)))))
                            - (v7 ^ (a5 + 288) ^ 0xD28D9035)))();
}

uint64_t sub_21E085FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * (int)(((v15 + ((v13 - v15 + 538970370) & 0xDFDFF6FD) + 932)
                                               * ((unint64_t)(a13 + a6 - a3) > 0xF)) ^ v13))
                            - 8))();
}

uint64_t sub_21E08603C(int a1, int8x16_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int8x16_t *a10)
{
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;

  *a10 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v13 + (v11 + v10)), vandq_s8(vaddq_s8(*(int8x16_t *)(v13 + (v11 + v10)), *(int8x16_t *)(v13 + (v11 + v10))), a5)), a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((v14 + a1 - 167) ^ (v14 + a1 + 1492))) - 12))();
}

uint64_t sub_21E086098(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  *(_BYTE *)(a6 + v7) = *(_BYTE *)(v12 + (v10 + v8))
                      - ((*(_BYTE *)(v12 + (v10 + v8)) << ((v9 ^ (a5 + 25)) - 106)) & a2)
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v7 == 63) * a7) ^ (v13 + v9 - 123))) - 12))();
}

uint64_t sub_21E0860F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  _BOOL4 v17;

  v16 = a13 + 1857804748;
  if ((a13 + 1857804748) < 0x8F45D817 != v13 + 656392533 < ((v15 + 605085771) & 0xDBEF197B) - 1891248217)
    v17 = v16 < 0x8F45D817;
  else
    v17 = v13 + 656392533 < v16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((26 * v17) ^ v15)) - 8))(2547640638);
}

uint64_t sub_21E086180(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;

  v35 = (a4 + 1108152261) | 0x90808008;
  v36 = 1948972247 * ((2 * ((v34 - 120) & 0x60637EE0) - (v34 - 120) - 1617133282) ^ 0x2A0274F0);
  *(_DWORD *)(v34 - 120) = v36 + a13 + 318369691;
  *(_QWORD *)(v34 - 112) = a10;
  *(_DWORD *)(v34 - 104) = a4 - v36 + 2331;
  v37 = sub_21E0A4DD0(v34 - 120);
  v38 = a33 & 0x3F;
  *(&a24 + (v38 ^ 0x3C)) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v33
                                                      + 8
                                                      * ((644 * ((v38 ^ 0x3C) > (v35 ^ 0xD28D900A))) | a4))
                                          - 4))(v37);
}

uint64_t sub_21E0862B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((232 * (v5 != v6 - 3373)) ^ v6))
                            - ((a5 + v6 - 3436) ^ 0xD28D9039)))();
}

uint64_t sub_21E0862FC@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((3529
                                          * ((((v2 - 57) ^ (a1 - 47)) ^ ((a2 ^ 3u) < (((v2 + 1115751077) | 0x900C802C) ^ (a1 - 8)))) & 1)) ^ (v2 - 3129)))
                            - 12))();
}

uint64_t sub_21E086358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23)
{
  char v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;

  *(_QWORD *)(&a23 + v25 - 1254219478) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v26
                                        + 8
                                        * ((((v23 & 0x38) == 8) * (v24 ^ (a5 + 213) ^ 0x60D)) ^ (v27 + v24 + 466)))
                            - 4))();
}

uint64_t sub_21E0863B4(double a1)
{
  double *v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ v2)) - 4))();
}

uint64_t sub_21E0863D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((((a5 + v7 - 303) ^ (a5 - 28)) * (v6 != v5)) ^ v7))
                            + 3532492853
                            - ((v7 - 1064530223) | 0x1201003Du)
                            - 4))();
}

void sub_21E08642C()
{
  JUMPOUT(0x21E085364);
}

uint64_t sub_21E08643C@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  _BOOL4 v26;
  unsigned int v27;
  int v28;
  _BOOL4 v29;

  v26 = a4 < a2;
  *(&a19 + (v20 + v22)) = (((v24 - 73) | 0x10) ^ 0x42)
                                      + *(_BYTE *)(v25 + (v21 + a1))
                                      - ((2 * *(_BYTE *)(v25 + (v21 + a1))) & 0x64);
  v27 = v21 + 1 + a3;
  v28 = v26 ^ (v27 < a2);
  v29 = v27 < a4;
  if (!v28)
    v26 = v29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v26 * v19) ^ v24)) - 8))();
}

uint64_t sub_21E0864B8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((3145 * ((v3 + v2 + 1739 + v0 - 1254221569) < 0x38)) ^ (v3 + v2 + 52)))
                            - 8))();
}

uint64_t sub_21E0864FC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;
  unint64_t v3;

  v3 = ((v0 - 138548398) & 0xDACF9CBF) + (unint64_t)v1 + (((v0 - 499) | 0x144u) ^ 0xFFFFFFFEE2B09792);
  if (v3 <= 0x38)
    v3 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((100 * (v3 - v1 + 1254219478 < 8)) ^ v0)) - 8))();
}

uint64_t sub_21E08657C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(&a16 + v17 - 1254219478) = 0x3232323232323232;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((((v16 & 0xFFFFFFFFFFFFFFF8) == 8) * (a1 ^ 0xCE4)) ^ a1)) - 12))();
}

uint64_t sub_21E0865D0@<X0>(int a1@<W8>, double a2@<D0>)
{
  double *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v2 = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ a1)) - 12))();
}

uint64_t sub_21E0865F4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2523 * (v0 != v1)) ^ v2))
                            + 3532492853
                            - ((v2 - 207768149) & 0xDEEFD8FD)))();
}

void sub_21E086638()
{
  JUMPOUT(0x21E085364);
}

uint64_t sub_21E086B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  unsigned int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  _BOOL4 v41;

  v40 = *(_DWORD *)(&a23 + ((v38 + v35) & 0xFFFFFFFC) + 72);
  *(_BYTE *)(a3 + (v38 + v35 + 1)) = (BYTE2(v40) ^ 0xD7) - ((2 * (BYTE2(v40) ^ 0xD7)) & 0x64) + 50;
  *(_BYTE *)(a3 + (v38 + v35)) = (((v37 - 83) | 0x1C) ^ 0x6D ^ HIBYTE(v40))
                                             - 2 * ((((v37 - 83) | 0x1C) ^ 0x6D ^ HIBYTE(v40)) & 0x36 ^ HIBYTE(v40) & 4)
                                             + 50;
  *(_BYTE *)(a3 + (v38 + v35 + 2)) = (BYTE1(v40) ^ 0xA)
                                                 + ~(2 * ((BYTE1(v40) ^ 0xA) & 0x37 ^ BYTE1(v40) & 5))
                                                 + 51;
  *(_BYTE *)(a3 + (v38 + v35 + 3)) = v40 ^ 0xD5;
  v41 = v38 + 1504170306 < (a35 + 1393865810);
  if (v38 + 1504170306 < v36 != a35 + 1393865810 < v36)
    v41 = a35 + 1393865810 < v36;
  return ((uint64_t (*)(void))(*(_QWORD *)(v39 + 8 * ((2 * v41) | (8 * v41) | v37)) - 12))();
}

void sub_21E086CD8()
{
  JUMPOUT(0x21E086C9CLL);
}

void sub_21E086CE0(uint64_t a1)
{
  int v1;

  v1 = (*(_DWORD *)(a1 + 8) ^ (1438293641 * ((a1 & 0x30527E63 | ~(a1 | 0x30527E63)) ^ 0x776AD4E3))) - 916;
  __asm { BR              X7 }
}

uint64_t sub_21E086F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8 * ((((((v7 + v8) & v9) + a5) & a6 ^ a7) * (v10 == 31)) ^ (v7 + v8) & v9))
                            - 4))();
}

uint64_t sub_21E086F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;

  v23 = v17 - v16;
  *(_DWORD *)(a10 - 0x6075B478BABD28D3) = 1091477409 - v18;
  v24 = 1292559617 * ((((v22 - 136) | 0x9ED45453) - ((v22 - 136) & 0x9ED45453)) ^ 0x39873C3A);
  *(_QWORD *)(v22 - 136) = a13;
  *(_DWORD *)(v22 - 128) = (v21 + 1230) ^ v24;
  *(_DWORD *)(v22 - 124) = v24 ^ 0x4D0AB839;
  sub_21E0477F0(v22 - 136);
  v25 = 1948972247 * ((v22 + 811593514 - 2 * ((v22 - 136) & 0x305FEFB2)) ^ 0x85C11A5C);
  *(_QWORD *)(v22 - 128) = a13;
  *(_DWORD *)(v22 - 136) = (v21 + 1380) ^ v25;
  *(_DWORD *)(v22 - 132) = (v23 ^ 0x6A51A61D)
                         - v25
                         + 1844051712
                         + ((((61 * (v21 ^ 0x648) - 602) | 0xD0) ^ 0xFCFCFC30) & (2 * v23) ^ 0x285CB3C0);
  sub_21E0598F8(v22 - 136);
  *(_DWORD *)(v22 - 136) = v21
                         - 1734664879
                         * (((((v22 - 136) | 0x22996E12) ^ 0xFFFFFFFE) - (~(v22 - 136) | 0xDD6691ED)) ^ 0xF2BDB9F7)
                         - 893;
  *(_QWORD *)(v22 - 128) = a16;
  *(_QWORD *)(v22 - 120) = &STACK[0x1D17695A8381D3A6];
  sub_21E069E70(v22 - 136);
  *(_QWORD *)(v22 - 128) = a16;
  *(_QWORD *)(v22 - 112) = a13;
  *(_DWORD *)(v22 - 120) = v21
                         + 1866394843 * ((((v22 - 136) | 0x24D6D79A) - ((v22 - 136) & 0x24D6D79A)) ^ 0xCEC1E06E)
                         - 602;
  v26 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (v21 ^ 0x63F)) - 12))(v22 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8 * ((49 * (*(_DWORD *)(v22 - 136) <= 0x1DF29BE7u)) ^ v21))
                                          - 8))(v26);
}

uint64_t sub_21E0871B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v18 - 128) = v17;
  *(_QWORD *)(v18 - 120) = a15;
  *(_DWORD *)(v18 - 136) = v15
                         - 1734664879
                         * ((130231280 - ((v18 - 136) | 0x7C32BF0) + ((v18 - 136) | 0xF83CD40F)) ^ 0xD7E7FC15)
                         - 271;
  v19 = sub_21E069E70(v18 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * (v15 ^ (1330 * ((int)(a12 ^ 0x942FD9E6) < 1))))
                                          - (((v15 + 399) | 0x55u) ^ 0x5D9)))(v19);
}

uint64_t sub_21E087270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;

  *(_DWORD *)(v21 - 136) = v19
                         - 1734664879
                         * ((859061829 - ((v21 - 136) | 0x33343E45) + ((v21 - 136) | 0xCCCBC1BA)) ^ 0xE310E9A0)
                         - 755;
  *(_QWORD *)(v21 - 128) = a16;
  *(_QWORD *)(v21 - 120) = v20;
  sub_21E069E70(v21 - 136);
  v22 = 1948972247 * ((((2 * (v21 - 136)) | 0x46970D8E) - (v21 - 136) - 592152263) ^ 0x96D57329);
  *(_QWORD *)(v21 - 128) = v16;
  *(_DWORD *)(v21 - 136) = (v19 + 1518) ^ v22;
  *(_DWORD *)(v21 - 132) = 1818787580 - v22;
  sub_21E0598F8(v21 - 136);
  *(_QWORD *)(v21 - 112) = v16;
  *(_DWORD *)(v21 - 120) = v19
                         + 1866394843
                         * ((((2 * ((v21 - 136) ^ 0x12F16D3F)) | 0xD96B1A34) - ((v21 - 136) ^ 0x12F16D3F) - 1823837466) ^ 0x9453D7D1)
                         - 464;
  *(_QWORD *)(v21 - 128) = a16;
  v23 = v18(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * ((14
                                                        * ((v19 ^ (*(_DWORD *)(v21 - 136) > 0x1DF29BE7u)) & 1)) ^ (v19 - 978)))
                                          - ((v19 - 1442) | 0x840u)
                                          + 2151))(v23);
}

uint64_t sub_21E087440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12
                                                                                          + 8
                                                                                          * ((492
                                                                                            * ((a12 ^ 0x7F7EF67E)
                                                                                             - 89657408
                                                                                             + ((2 * a12) & 0xFEFDECFC)
                                                                                             - 2049369664 >= v13 + 2147481408 + ((v13 - 229) ^ 0x7D1u))) ^ v13))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_21E088100(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x1D17695A8381D362) - 251949544;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1D17695A8381D362) - 251949544;
  v4 = (v2 < 2097248809) ^ (v3 < 2097248809);
  v5 = v2 > v3;
  if (v4)
    v5 = v2 < 2097248809;
  v1 = *(_DWORD *)(a1 + 16) - 1866394843 * ((-2065391642 - (a1 | 0x84E49FE6) + (a1 | 0x7B1B6019)) ^ 0x910C57ED);
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + v1 - 925) + 8 * ((827 * !v5) ^ v1) - 12))();
}

uint64_t sub_21E0881D8(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v5 = v3 + 1062744677;
  v6 = v5 < 163 * (v2 ^ 0x40C) - 883025733;
  v7 = v4 + 1062744677 < v5;
  if (v4 + 1062744677 < -883024266 != v6)
    v7 = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((244 * !v7) ^ v2)))(a1, 502438887);
}

uint64_t sub_21E08824C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v5 = 403429410 - v3;
  if (v3 + 1945768943 <= (int)(v4 ^ 0xFFFFFA44))
    v5 = v3;
  return (*(uint64_t (**)(uint64_t, _QWORD))(v2
                                                    + 8
                                                    * ((2419
                                                      * (v5 - 201714706 > (int)((((v4 ^ 0x1BE) + 1599437793) & 0xA0AA8DFD)
                                                                              - 3557))) ^ v4 ^ 0x1BE)))(a1, (a2 + 1));
}

uint64_t sub_21E0882F0(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unsigned int v6;
  unsigned int v7;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1
                                                               + 8
                                                               * (int)((29
                                                                      * (((v6 - 2527) ^ v2 ^ *(_DWORD *)(*v4 + 4 * v7 - 0x2CF4A33C3453BA2BLL)) <= (*(_DWORD *)(*v5 + 4 * v7 - 0x2CF4A33C3453BA2BLL) ^ (v2 + 1021)))) ^ v6))
                                                   - (v6 ^ 0xDECLL)))(a1, v3);
}

uint64_t sub_21E088364(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v5 + 1051) * (v4 < a3)) ^ v5)) - ((v5 - 442) | 4u) + 1025))();
}

uint64_t sub_21E088390@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v3
                                                    + 8
                                                    * ((2419
                                                      * (v4 - 201714706 > (int)(((a2 + 1599437793) & 0xA0AA8DFD) - 3557))) ^ a2)))(a1, (a3 + 1));
}

_DWORD *sub_21E0883DC(_DWORD *result)
{
  int v1;

  *result = 1004877776 - v1;
  return result;
}

void df35957c4e0()
{
  _DWORD v0[8];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * ((v0 + 1561462356 - 2 * ((unint64_t)v0 & 0x5D120654)) ^ 0xFA416E3D)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X8 }
}

uint64_t sub_21E0884C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unint64_t *a15, int a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = &STACK[0xCDF15AEA900D071];
  a14 = 305 - 225134719 * ((&a14 + 395514520 - 2 * ((unint64_t)&a14 & 0x17931298)) ^ 0x16357B2);
  sub_21E047010(&a14);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                                                  + 8 * ((2160 * (a16 == 939001227)) ^ 0x31Au)))(v17, v18, v19, v20, v21, v22, v23);
}

uint64_t sub_21E08857C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;

  v24 = (((&a14 | 0xDF3CEBB8) - &a14 + (&a14 & 0x20C31440)) ^ 0x786F83D1)
      * v22;
  a14 = v24 + (v20 ^ v21) + (76 * (v20 ^ 0x309) + 576053735) * v17 - 1150213889;
  a17 = v20 - v24 + 832;
  a15 = a13;
  v25 = ((uint64_t (*)(int *))(*(_QWORD *)(v23 + 8 * (int)(v20 - 713)) - 4))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((107 * (a16 == v18)) ^ v20)))(v25);
}

uint64_t sub_21E088630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, int a17, unint64_t *a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1328090399
      * (((&a14 | 0x904803B5) - &a14 + (&a14 & 0x6FB7FC48)) ^ 0x6F9B678F);
  a14 = (v21 - 1653802297) ^ v22;
  a15 = 1859624273 - v22;
  a17 = v22 ^ 0x6B80F4A2;
  a18 = &STACK[0x7398388C82CD2D7];
  a19 = a13;
  v23 = sub_21E0DDA14((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (((a16 == v19) * (((v21 + 1838280219) & 0x20F5A) - 776)) ^ v21))
                                          - 12))(v23);
}

uint64_t sub_21E088704@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6, unsigned int a7, unint64_t *a8, uint64_t a9)
{
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  a8 = &STACK[0x3DECEE387AEF03E5];
  a9 = a1;
  a7 = v12
     - ((((&a7 | 0xBD041FA2) ^ 0xFFFFFFFE) - (~&a7 | 0x42FBE05D)) ^ 0xE5A88834) * v10
     - 822;
  ((void (*)(unsigned int *))(*(_QWORD *)(v11 + 8 * (v12 - 1299)) - 4))(&a7);
  a8 = a4;
  LODWORD(a9) = v12
              - 1734664879
              * ((1252819038 - (&a7 | 0x4AAC805E) + (&a7 | 0xB5537FA1)) ^ 0x9A8857BB)
              - 1097;
  v13 = sub_21E092C98((uint64_t)&a7);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((3359 * (((a4 == 0) ^ (v12 + 107)) & 1)) ^ (v12 - 650))))(v13);
}

uint64_t sub_21E088840@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t (*a3)(unsigned int *), uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;

  a8 = a1;
  a7 = (v9 + 1564367706) ^ (225134719 * (&a7 ^ 0x16F0452A));
  v11 = a3(&a7);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * ((1813 * (((v9 ^ (v10 + 103)) ^ (a6 == 0)) & 1)) ^ (v9 + 1564365694)))
                                          - 4))(v11);
}

uint64_t sub_21E0888C8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unsigned int v2;
  int v3;
  void (*v5)(unsigned int *);
  unsigned int v6;
  uint64_t v7;

  v6 = (v1 + 2012) ^ (225134719
                    * ((((2 * &v6) | 0x55ACA4BA) - &v6 + 1428794787) ^ 0xBC261777));
  v7 = a1;
  v5(&v6);
  return v3 ^ v2;
}

void sub_21E08895C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 40) + 225134719 * ((1781271032 - (a1 | 0x6A2C09F8) + (a1 | 0x95D3F607)) ^ 0x8323B32D);
  __asm { BR              X10 }
}

uint64_t sub_21E088A88()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (3522 * (v1 != 0xD1ABB1F3)))) - 8))();
}

uint64_t sub_21E088AE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v5 > 0xB563CFCE;
  *(_BYTE *)(*(_QWORD *)(v9 - 200) + (v0 - 1423011903)) = *(_BYTE *)(*(_QWORD *)(v1 + 8 * (v3 ^ 0x473))
                                                                                 + (((_BYTE)v0 - 63) & 0xF)
                                                                                 - 4) ^ *(_BYTE *)(v2 + (v0 - 1423011903)) ^ (((v0 - 63) & 0xF) * ((v3 - 126) & 0x7F ^ 0x71)) ^ *(_BYTE *)(*(_QWORD *)(v1 + 8 * (v3 ^ 0x444)) + (((_BYTE)v0 - 63) & 0xF) - 11) ^ *(_BYTE *)(*(_QWORD *)(v1 + 8 * (v3 - 838)) + (((_BYTE)v0 - 63) & 0xF) - 4);
  if (v10 == v0 - 171261965 < v4)
    v10 = v0 - 171261965 < v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 * v7) ^ v3)) - 8))();
}

uint64_t sub_21E088BB8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1021
                                          * (((((v0 ^ 0x7D8) + 1498) ^ (((2 * v1) & 0xED1FBFEE ^ 0xA11723E6)
                                                                      + (v1 ^ 0xA7246E04)
                                                                      - 1619040533 == 370099938)) & 1) == 0)) ^ v0))
                            - 8))();
}

uint64_t sub_21E088C30(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((v3 ^ 0xE48) - 1929) ^ 0x52D) * ((a3 + a2 - 1989140471) < 8)) ^ v3))
                            - 8))();
}

uint64_t sub_21E088CA0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((235
                                          * (v7 + ((2 * a7) ^ 0x62A ^ (a4 - 3316)) >= (a7 ^ 0xD6Cu) - 2079)) ^ a7))
                            - 4))();
}

uint64_t sub_21E088CE4(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v21;

  v12 = *(_QWORD *)(v11 - 200);
  v13 = (a3 + a2 + a4) + v12;
  v14 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4) & 0xF;
  v15 = v14 - v13;
  v16 = (v7 | v14) - v13;
  v17 = (v9 | v14) - v13;
  v21 = (unint64_t)(a6 - v12 - 0x2BDC51CD9DAAD470) < 0x10
     || v15 + v8 < (unint64_t)(v6 + 1245) - 3292
     || v16 + 1 < (unint64_t)(v6 ^ 0xC10u) - 1039
     || v17 < 0x10;
  return (*(uint64_t (**)(void))(v10 + 8 * ((25 * v21) ^ v6)))();
}

uint64_t sub_21E088D70()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((69 * ((((((v1 - 703) | 0x14) + 2936) ^ (v0 < 0x10)) & 1) == 0)) ^ v1))
                            - 8))();
}

uint64_t sub_21E088DB0(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int8x16_t v14;
  uint64_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16x4_t v19;
  int8x16x4_t v20;

  *(_DWORD *)(v12 - 216) = a5 + 2;
  v19.val[1].i64[0] = ((_BYTE)a5 + 12) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)a5 + 11) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)a5 + 10) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)a5 + 9) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)a5 + 8) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)a5 + 7) & 0xF;
  v13 = *(_QWORD *)(v12 - 208);
  v14.i64[0] = 0x5D5D5D5D5D5D5D5DLL;
  v14.i64[1] = 0x5D5D5D5D5D5D5D5DLL;
  v15 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4) & 0xF;
  v19.val[0].i64[0] = v15;
  v19.val[0].i64[1] = ((_BYTE)a5 + 13) & 0xF;
  v16.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v20.val[0].i64[1] = ((_BYTE)a5 + 5) & 0xF;
  v20.val[1].i64[1] = ((_BYTE)a5 + 3) & 0xF;
  v20.val[2].i64[1] = ((_BYTE)a5 + 1) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)a5 - 1) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)a5 + 6) & 0xF;
  v20.val[1].i64[0] = ((_BYTE)a5 + 4) & 0xF;
  v20.val[2].i64[0] = *(_DWORD *)(v12 - 216) & 0xF;
  v20.val[3].i64[0] = a5 & 0xF;
  v16.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v17 = vrev64q_s8(vmulq_s8(v16, v14));
  *(int8x16_t *)(*(_QWORD *)(v12 - 200) - 15 + (a3 + a2 + a4)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 + v15 - 15), *(int8x16_t *)(v7 - 15 + (a3 + a2 + a4))), *(int8x16_t *)(v10 + v15 - 15)), *(int8x16_t *)(v8+ v15+ ((52 * (a7 ^ 0x16Fu)) ^ 0x57DLL)- 15)), vextq_s8(v17, v17, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((2907 * ((v11 & 0xFFFFFFF0) == 16)) ^ a7)) - 4))();
}

void sub_21E088F34()
{
  JUMPOUT(0x21E088EB8);
}

uint64_t sub_21E088F40@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((1087 * ((v2 + 1771747967) & 0x966542EE ^ 0x2E8) - 1932) * (v1 != a1)) ^ v2))
                            - 8))();
}

uint64_t sub_21E088F8C()
{
  int v0;
  char v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1781 * ((((v1 & 8) == (v0 ^ 0x2EA)) ^ (v0 - 1)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_21E088FD8(char a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  int8x16x4_t v16;

  *(_DWORD *)(v12 - 236) = v8;
  *(_DWORD *)(v12 - 232) = v10;
  *(_QWORD *)(v12 - 224) = *(_QWORD *)(v12 - 200) - 7;
  *(_QWORD *)(v12 - 216) = v4 - 7;
  *(_DWORD *)(v12 - 228) = -(v8 & 0xFFFFFFF8);
  v13 = a3 + a2 + a1;
  v14 = (a3 + a2 + a4 - v9);
  v16.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4 - (_BYTE)v9) & 0xF;
  v16.val[0].i64[1] = (v13 + 28 - (_BYTE)v9) & 0xF;
  v16.val[1].i64[0] = (v13 + 27 - (_BYTE)v9) & 0xF;
  v16.val[1].i64[1] = (v13 + 26 - (_BYTE)v9) & 0xF;
  v16.val[2].i64[0] = (v13 + 25 - (_BYTE)v9) & 0xF;
  v16.val[2].i64[1] = (v13 + 24 - (_BYTE)v9) & 0xF;
  v16.val[3].i64[0] = (v13 + 23 - (_BYTE)v9) & 0xF;
  v16.val[3].i64[1] = (v13 - (_BYTE)v9 + (_BYTE)v11 - 54) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v12 - 224) + v14) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v6 + (v14 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v12 - 216) + v14)), veor_s8(*(int8x8_t *)((v14 & 0xF) + v5 - 6), *(int8x8_t *)(v7 + (v14 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v16, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x5D5D5D5D5D5D5D5DLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(*(_QWORD *)(v12 - 208)
                                                     + 8
                                                     * ((3226 * (*(_DWORD *)(v12 - 228) == -8 - v9)) ^ (v11 - 2267)))
                                         - 8))((__n128)xmmword_21E17F900);
}

void sub_21E089154()
{
  JUMPOUT(0x21E089058);
}

uint64_t sub_21E08915C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39)
{
  uint64_t v39;
  uint64_t v40;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v39
                                                                                                 + 8
                                                                                                 * (int)(((((a39 + 402183912) & 0xE8072DED) + (a39 ^ 0xFFFFFC00)) * (*(_DWORD *)(v40 - 236) == a7)) ^ a39)))(a1, a2, a3, a4, a5, a6, a39 ^ 0x68u);
}

uint64_t sub_21E0891A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = (a8 - 370102002);
  *(_BYTE *)(*(_QWORD *)(v15 - 200) + v16) = *(_BYTE *)(v11 + (v16 & 0xF)) ^ *(_BYTE *)(v8 + v16) ^ *(_BYTE *)((v16 & 0xF) + v10 + 1) ^ *(_BYTE *)(v12 + (v16 & 0xF)) ^ (93 * (v16 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((245 * (a8 - 1 == v9)) ^ (v13 - 1397)))
                            - 1087 * (v13 ^ 0xCEEu)
                            + 2170))();
}

uint64_t sub_21E089228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;

  v11 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(v10 + 32));
  v12 = vextq_s8(v11, v11, 8uLL);
  v13.i64[0] = 0x6666666666666666;
  v13.i64[1] = 0x6666666666666666;
  v14 = vandq_s8(vaddq_s8(v12, v12), v13);
  v13.i64[0] = 0xB3B3B3B3B3B3B3B3;
  v13.i64[1] = 0xB3B3B3B3B3B3B3B3;
  v15 = veorq_s8(v12, v13);
  v13.i64[0] = 0x1E1E1E1E1E1E1E1ELL;
  v13.i64[1] = 0x1E1E1E1E1E1E1E1ELL;
  v16 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v15, v13), v14), (int8x16_t)xmmword_21E17F960));
  *(int8x16_t *)(v9 - 192) = vextq_s8(v16, v16, 8uLL);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (int)((((a7 - 1202) ^ 0x331) * (v9 == 192)) ^ a7)) - 8))(a1, a2, (a7 - 1202), a4, a5, a6, a7, a8);
}

uint64_t sub_21E0892A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a3 ^ 0x806 ^ (1622 * (v3 == *(_QWORD *)(v5 - 200)))))
                            - ((a3 ^ 0x806u)
                             - 2212)
                            + 798))();
}

uint64_t sub_21E0892D8(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;

  v5 = *(_BYTE **)(v4 - 200);
  *(_BYTE *)(v4 - 144) = *v5;
  *(_BYTE *)(v4 - 143) = v5[1];
  *(_BYTE *)(v4 - 142) = v5[2];
  *(_BYTE *)(v4 - 141) = v5[3];
  *(_BYTE *)(v4 - 140) = v5[4];
  *(_BYTE *)(v4 - 139) = v5[5];
  *(_BYTE *)(v4 - 138) = v5[6];
  *(_BYTE *)(v4 - 137) = v5[7];
  *(_BYTE *)(v4 - 136) = v5[8];
  *(_BYTE *)(v4 - 135) = v5[9];
  *(_BYTE *)(v4 - 134) = v5[10];
  *(_BYTE *)(v4 - 133) = v5[11];
  *(_BYTE *)(v4 - 132) = v5[12];
  *(_BYTE *)(v4 - 131) = v5[13];
  *(_BYTE *)(v4 - 130) = v5[14];
  *(_BYTE *)(v4 - 129) = v5[15];
  *(_QWORD *)(v4 - 128) = *(_QWORD *)v5;
  *(_QWORD *)(v4 - 120) = *((_QWORD *)v5 + 1);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3
                                                                       + 8
                                                                       * ((((v2 ^ 0x929) - 526) * (v5 != 0)) ^ v2 ^ 0x8EC))
                                                           - ((v2 ^ 0x8ECu)
                                                            + 166)
                                                           + 960))(a1, a2, (v2 ^ 0x8ECu) + 166);
}

uint64_t sub_21E0893C0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3
                                                                       + 8
                                                                       * ((((v2 ^ 0x1C5) - 526)
                                                                         * (*(_QWORD *)(v4 - 200) != 0)) ^ v2))
                                                           - (v2 + 166)
                                                           + 960))(a1, a2, (v2 + 166));
}

uint64_t sub_21E08940C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  _BOOL4 v22;

  v20 = (a17 & 0xB7763BBE) + (v18 ^ 0x5BBB1DDF);
  v22 = ((((v17 + 1310) | 0x82) - 2164) & (v20 + 1)) != 0 || v20 == 1538989535;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((453 * v22) ^ v17)) - ((v17 - 1098936070) & 0x41806FEE ^ 0x3C0)))();
}

uint64_t sub_21E089484(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * (((((v2 - 1482898568) & 0x58633FC6) - 2902)
                                                                         * (v3 != 0x58B499B6637D1E20)) ^ v2))
                                                           - 8))(a1, a2, (v2 - 1207));
}

uint64_t sub_21E0894D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  char *v24;
  unsigned int v25;
  int v26;
  char *v27;
  char v28;
  unsigned __int8 v29;
  int v30;
  int v31;
  int v32;
  char v33;
  char v34;
  char v35;
  int v36;
  int v37;
  unsigned __int8 v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned __int8 *v46;
  uint64_t v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned __int8 v51;
  int v52;
  unsigned __int8 v53;
  int v54;
  int v55;
  unsigned __int8 v56;
  char v57;
  unsigned __int8 v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned __int8 v63;
  char v64;
  unint64_t v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  int v69;
  int v70;
  unsigned __int8 v71;
  unint64_t v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  char *v76;
  int v77;
  unsigned int v78;
  int v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  int v157;
  int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  BOOL v194;
  int v195;
  int v196;
  unsigned int v197;
  int v198;
  int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  int v217;
  unsigned int v218;
  unsigned int v219;
  unsigned int v220;
  unsigned __int8 v221;
  int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  unsigned int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  int v269;
  char *v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  char *v276;
  int v277;
  uint64_t v278;
  int v279;
  unint64_t v280;
  char *v281;
  int v282;
  unsigned int v283;
  int v284;
  unsigned int v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  int v289;
  int v290;
  int v291;
  _BYTE *v292;
  unsigned int v293;
  char *v294;
  unsigned int v295;
  uint64_t v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  unint64_t v307;
  unint64_t v308;
  uint64_t v309;
  int v310;
  uint64_t v311;
  uint64_t v312;

  v21 = (uint64_t)*(&off_24E21C7C0 + v18 - 2425);
  v22 = (uint64_t)*(&off_24E21C7C0 + (v18 ^ 0x9ECu));
  v23 = (v18 + 407807030) & 0xE7B152F7;
  v24 = (char *)*(&off_24E21C7C0 + (v18 ^ 0xB4Cu)) - 4;
  v25 = v24[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E1CLL) ^ 0x96];
  v26 = ((*(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E12) ^ 0x9CLL)) ^ 0x34) << (((v18 + 54) & 0xF7) + 24)) | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E13) ^ 0xCLL)) ^ 0x47) << 16);
  v27 = (char *)*(&off_24E21C7C0 + v18 - 2435) - 4;
  v28 = v27[(*(unsigned __int8 *)(v19 - 0x58B499B6637D1E19) ^ 0xA7)
          - 2 * ((*(unsigned __int8 *)(v19 - 0x58B499B6637D1E19) ^ 0xA7) & 0x98)
          + 152];
  v29 = v28 + (~(2 * v28 - 4) | 0x7D) - 64;
  v30 = ((((v29 >> 3) ^ (v29 >> 7) ^ 8) - 2 * (((v29 >> 3) ^ (v29 >> 7)) & 3 ^ (v29 >> 3) & 2) + 65) ^ v29) | ((v25 ^ 0x4D ^ (v25 >> 1) & 0x75) << 24);
  v31 = v27[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E1DLL) ^ 0xAELL];
  v32 = v31 - 2 * ((v31 + 62) & 0x27 ^ v31 & 1);
  LOBYTE(v25) = v32 + 36;
  LOBYTE(v32) = ((((-37 - v32) & 0x80) != 0) | 0x14) ^ ((v32 + 36) >> 3);
  v33 = v27[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E15) ^ 0x11];
  v34 = v33 - ((2 * v33 - 4) & 0xD2);
  v35 = v34 + 103;
  LOBYTE(v25) = (v32 - 2 * (v32 & 0xE ^ (v25 >> 3) & 8) - 90) ^ v25;
  v36 = ((v34 + 103) >> 3) ^ (((-104 - v34) & 0x80) >> 7) ^ 0x1D;
  v37 = v27[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E11) ^ 0xCCLL]
      - ((2 * v27[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E11) ^ 0xCCLL] + 124) & 0x4A);
  v38 = v37 + 35;
  v39 = v24[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E14) ^ 0x1CLL];
  LOBYTE(v37) = ((((-36 - v37) & 0x80) != 0) | 0x14) ^ ((v37 + 35) >> 3);
  v40 = v26 & 0xFFFFFF00 | ((v39 ^ 0xD2 ^ (v39 >> 1) & 0x75) << 24) | ((v37
                                                                                       - 2 * (v37 & 7 ^ (v38 >> 3) & 2)
                                                                                       - 91) ^ v38);
  v41 = ((v36 + (~(2 * v36) | 0xED) - 22) ^ v35) | ((*(unsigned __int8 *)(v22
                                                                                         + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E17) ^ 0x93)) ^ 0x70) << 16) | ((*(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E16) ^ 0xA5)) ^ 0x67) << 8);
  v42 = v24[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E18) ^ 0x4BLL];
  v302 = v24;
  v303 = v22;
  v304 = v21;
  v43 = v25 | ((v24[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E20) ^ 0x69] ^ 0xE8 ^ (v24[*(unsigned __int8 *)(v19 - 0x58B499B6637D1E20) ^ 0x69] >> 1) & 0x75) << 24) | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E1FLL) ^ 0xE8)) ^ 0x4F) << 16);
  v44 = v30 | ((*(unsigned __int8 *)(v22 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E1BLL) ^ 0x64)) ^ 0x6B) << 16) | ((*(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E1ALL) ^ 0x85)) ^ 0xED) << 8);
  v45 = *(unsigned __int8 *)(v21 + (*(unsigned __int8 *)(v19 - 0x58B499B6637D1E1ELL) ^ 0x32)) ^ 0xD0;
  *(_DWORD *)(v20 - 232) = v40 ^ 0xCDB1F4EF;
  *(_DWORD *)(v20 - 224) = (v43 | (v45 << 8)) ^ 0xA2AA406D;
  *(_DWORD *)(v20 - 216) = (v41 | ((v42 ^ 0x21 ^ (v42 >> 1) & 0x75) << 24)) ^ 0xD214ED48;
  HIDWORD(a12) = v17 - 1538989535;
  *(_DWORD *)(v20 - 228) = v44 ^ 0x97D65811;
  *(_DWORD *)(v20 - 236) = 0;
  v312 = (((v23 - 552) | 0x304) + 2137166971) ^ 0x7F629841;
  v46 = *(unsigned __int8 **)(v20 - 200);
  v309 = v46[2] ^ (v23 + 2161);
  v47 = v46[v312] ^ 0x9FLL;
  v48 = (*(unsigned __int8 *)(v21 + v47) ^ 0x1D) << 8;
  v49 = v27[v46[7] ^ 0xBALL];
  v50 = v49 - ((2 * (_BYTE)v49 + 12) & 0xE) - 123;
  LODWORD(v47) = ((((v50 >> 4) - ((v50 >> 3) & 0xE) + 7) ^ v50) >> (v47 & 3)) >> (~(_BYTE)v47 & 3);
  v51 = (v47 - 2 * (v47 & 7) + 7) ^ v50;
  LOBYTE(v44) = v27[v46[15] ^ 0x72] - ((2 * v27[v46[15] ^ 0x72] - 4) & 0xC8) - 30;
  v52 = (v44 >> 3) ^ (v44 >> 7);
  v53 = ((v52 ^ 0xC) - 2 * ((v52 ^ 0xC) & 7 ^ v52 & 3) + 100) ^ v44;
  LODWORD(v47) = v27[v46[3] ^ 0x7BLL];
  v310 = (((((-67 - (v47 - ((2 * (_DWORD)v47 - 4) & 0xFFFFFF88))) >> 7) & 1 | 0x18) ^ (((v47 - ((2 * (_DWORD)v47 - 4) & 0xFFFFFF88) + 66) & 0xF8) >> 3))
        - (((v47 - ((2 * (_DWORD)v47 - 4) & 0xFFFFFF88) + 66) >> 2) & 8)
        - 60) ^ (v47 - ((2 * v47 - 4) & 0xFFFFFF88) + 66);
  v54 = v24[v46[8] ^ 0xD2];
  if ((v54 & 4) != 0)
    v55 = -4;
  else
    v55 = 4;
  v56 = (v55 + (v54 ^ 0xD2)) ^ 0x25 ^ ((v55 + (v54 ^ 0xFFFFFFD2)) >> 1) & 0x75;
  v57 = *(_BYTE *)(v22 + (v46[1] ^ 0xC8));
  v58 = (((v57 ^ 0xE) - v57) ^ 0xFC) + ~v57;
  v59 = v24[v46[4] ^ 0xC4];
  v60 = v24[v46[12] ^ 0x27];
  v61 = v48 & 0xFFFFFF00 | ((v59 ^ 0x53 ^ (v59 >> 1) & 0x75) << 24) | v51;
  v62 = v61 - 1453112497 - 2 * (v61 & 0x2900435F ^ v51 & 0x10);
  v63 = (((v60 >> 1) & 0x75 ^ 0x61) - ((2 * ((v60 >> 1) & 0x75 ^ 0x61)) & 0xA0) - 46) ^ v60;
  v64 = *(_BYTE *)(v22 + (v46[13] ^ 0x1ELL));
  v65 = ((unint64_t)(-15 - v64 - ((2 * ~v64) & 0xE4)) << 16) | ((v63 ^ 0x7ELL) << 24) | v53 | ((*(unsigned __int8 *)(v21 + (v46[14] ^ 0xA4 ^ -(v46[14] ^ 0xA4) ^ (89 - ((v46[14] ^ 0xA4 | 0x59) ^ v46[14] & 0x59u))) + 89) ^ 0x51) << 8);
  v66 = *(unsigned __int8 *)(v22 + ((v46[5] - 2 * (v46[5] & 0xE3u) + 227) ^ 0x34)) ^ 0x65;
  v67 = ((v66 & 0x3F) << 17) + 180355073 + ((v66 << 16) ^ 0xF53FFFFF);
  v68 = (v67 - (v67 | v62 ^ 0xA963434F)) ^ ((v62 ^ 0x569CBCB0) + 1);
  v69 = (v68 - 1453112497 - ((2 * v68) & 0x52C6869E)) ^ v62;
  LOBYTE(v68) = v27[v46[11] ^ 0xF5];
  LOBYTE(v68) = v68 - 2 * ((v68 + 126) ^ v68 & 1) - 4;
  v70 = v302[*v46 ^ 0x7ELL];
  v71 = (((v68 >> 3) ^ 0xF ^ (v68 >> 7))
       - ((2 * ((v68 >> 3) ^ 0xF)) & 0x3C)
       + 126) ^ v68;
  HIDWORD(v72) = v70 ^ 0x12;
  LODWORD(v72) = ~v70 << 24;
  v73 = ((((v72 >> 30) ^ 0x93) >> 2) | (((v72 >> 30) ^ 0xFFFFFF93) << 6)) ^ 0x12;
  v74 = (v73 >> 1) & 0x75 ^ v73;
  v75 = (v58 << 16) | ((v74 ^ 0xC) << 24);
  v76 = (char *)*(&off_24E21C7C0 + (int)(v23 ^ 0xF3)) - 4;
  v77 = *(_DWORD *)&v76[4 * (v74 ^ 2)];
  v308 = v65;
  v78 = v65 ^ 0xB24B45B;
  v79 = v77 - ((2 * v77 + 2036050372) & 0x5999948A) + 695901991;
  v80 = (((*(unsigned __int8 *)(v21 + (v46[10] ^ 0x83)) ^ 0x38) << 8) | ((*(unsigned __int8 *)(v22
                                                                                                 + (v46[9] ^ 0x21)) ^ 0x27) << 16)) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)v56 << 24);
  HIDWORD(v311) = v23;
  v81 = (char *)*(&off_24E21C7C0 + (int)(v23 - 280)) - 8;
  v82 = (uint64_t)*(&off_24E21C7C0 + (int)(v23 ^ 0x225));
  v83 = ((BYTE1(v80) ^ 0x76) - 1060722616 - ((2 * ((v80 >> 8) ^ 0x260C76)) & 0x90)) ^ *(_DWORD *)&v81[4 * (BYTE1(v80) ^ 0xB5)] ^ v79 ^ (((v65 ^ 0xB24B45B) >> 16) + 1827012791 - ((2 * ((v65 ^ 0xB24B45B) >> 16)) & 0x16E)) ^ *(_DWORD *)(v82 + 4 * (((v65 ^ 0xB24B45B) >> 16) ^ 0x5CLL)) ^ (16 * (v79 ^ 0xCCCCA45) * (v79 ^ 0xCCCCA45) - ((32 * (v79 ^ 0xCCCCA45) * (v79 ^ 0xCCCCA45)) & 0x59999480) - 1395865019);
  LODWORD(v65) = v69 + v67;
  v84 = (uint64_t)*(&off_24E21C7C0 + (int)(v23 - 272));
  v85 = (v83 - 31080345 - ((2 * v83) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v69 ^ 0x11u));
  v86 = *(_DWORD *)&v76[4 * (BYTE3(v65) ^ 0xA)];
  v87 = v86 - ((2 * v86 - 111433276) & 0xF6CDB94E) + 2014622089;
  v88 = (((16 * v87) ^ 0xB66DCA70) * (v87 ^ 0xB66DCA7)) ^ *(_DWORD *)(v82 + 4 * (BYTE2(v75) ^ 9u)) ^ ((BYTE2(v75) ^ 0x55) + 1827012791 - 2 * ((HIWORD(v75) ^ 0xB455) & 0xBF ^ HIWORD(v75) & 8));
  HIDWORD(v305) = v71;
  v89 = (v88 - 31080345 - ((2 * v88) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v71 ^ 0x67u));
  v90 = *(_DWORD *)&v76[4 * (v56 ^ 0x26)];
  v91 = *(_DWORD *)&v81[4 * (BYTE1(v78) ^ 0xC3)] ^ (BYTE1(v78) - 1060722616 - ((v78 >> 7) & 0x90)) ^ v87 ^ (v89 - ((2 * v89) & 0xF6CDB94E) - 77144921);
  v92 = v90 - ((2 * v90 + 425437636) & 0x1DC30612) - 1953540117;
  v93 = BYTE2(v65) ^ (16 * (v92 ^ 0xEE18309) * (v92 ^ 0xEE18309)
                    + 1827012791
                    - ((32 * (v92 ^ 0xEE18309) * (v92 ^ 0xEE18309)) & 0xD9CC0160)) ^ 0xD8 ^ *(_DWORD *)(v82 + 4 * (BYTE2(v65) ^ 0x84u));
  v94 = *(unsigned __int8 *)(v21 + (v46[2] ^ (v23 + 113)));
  LODWORD(v305) = v94 ^ 0xB4;
  v95 = *(_DWORD *)&v81[4 * (v94 ^ 0xE3)] ^ v94 ^ 0xB4 ^ (v93 - 1060722616 - ((2 * v93) & 0x818D5090));
  v96 = v92 ^ 0xB6270AB2 ^ ((v95 ^ 0x94) + 249660169 - ((2 * v95) & 0x1DC30612));
  v97 = *(_DWORD *)&v76[4 * (v63 ^ 0xCF)];
  v98 = v96 & 0xDA620CBD ^ *(_DWORD *)(v84 + 4 * (v53 ^ 0x6Du)) ^ ((v96 & 0x259DF342)
                                                                   - 31080345
                                                                   - ((2 * v96) & 0x480B8084));
  v99 = v97 - ((2 * v97 + 22784452) & 0x10950D6) + 2100460877;
  v307 = v80;
  v100 = *(_DWORD *)(v82 + 4 * (BYTE2(v80) ^ 0x50u)) ^ ((BYTE2(v80) ^ 0xC)
                                                        + 1827012791
                                                        - ((2 * (WORD1(v80) ^ 0x260C)) & 0x16E)) ^ (((16 * v99) ^ 0x84A86B0)
                                                                                                  * (v99 ^ 0x84A86B));
  v306 = __PAIR64__(v75, v65);
  v101 = *(_DWORD *)&v81[4 * (BYTE1(v65) ^ 0xC5)] ^ ((BYTE1(v65) ^ 6) - 1060722616 - ((v65 >> 7) & 0x90)) ^ v99 ^ (v100 + 8693867 - ((2 * v100) & 0x10950D6));
  HIDWORD(a17) = v310;
  LODWORD(v94) = (v101 - 31080345 - ((2 * v101) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v310 ^ 0x6Cu));
  v102 = *(_DWORD *)&v76[4 * (HIBYTE(v85) ^ 0x55)];
  v103 = v102 - ((2 * v102 + 2036050372) & 0x63F36288) - 1364752858;
  v104 = BYTE2(v94) ^ 0x5F;
  v105 = *(_DWORD *)&v81[4 * (BYTE1(v98) ^ 0xB2)] ^ *(_DWORD *)(v82
                                                              + 4 * (v104 - ((2 * (WORD1(v94) ^ 0xDB5F)) & 0xB8) + 92)) ^ (16 * (v103 ^ 0x1F9B144) * (v103 ^ 0x1F9B144) + 1827012791 - ((32 * (v103 ^ 0x1F9B144) * (v103 ^ 0x1F9B144)) & 0xD9CC0160)) ^ ((BYTE1(v98) ^ 0xDC91EA33) - 1060722615 + ((v98 >> 7) & 0x90 ^ 0x7EFEAFFF));
  v106 = v104 ^ (v105 - 31080345 - ((2 * v105) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v91 ^ 0xA1u));
  v107 = (v106 - ((2 * v106) & 0x63F36288) + 838447428) ^ v103;
  v108 = *(_DWORD *)&v76[4 * (HIBYTE(v91) ^ 0xE1)];
  v109 = v108 - ((2 * v108 + 2036050372) & 0x6C7FF5B0) - 1293037638;
  v110 = *(_DWORD *)(v82 + 4 * (BYTE2(v85) ^ 0xCu));
  v111 = BYTE2(v85) ^ 0x6AB6E0A0;
  v112 = (v111 + (((BYTE2(v85) ^ 0x50) + 1827012791 - ((2 * (HIWORD(v85) ^ 0x5550)) & 0x16E)) ^ 0x95491F0F ^ v110) + 1) ^ ((v110 ^ 0x9319FF48) + 1);
  v113 = (((16 * v109) ^ 0x63FFAD80) * (v109 ^ 0x63FFAD8)) ^ *(_DWORD *)&v81[4 * (BYTE1(v94) ^ 0xD5)] ^ (((v112 + 1827012791 - ((2 * v112) & 0xD9CC016E)) ^ v110) + v111) ^ ((BYTE1(v94) ^ 0x16) - 1060722616 - ((v94 >> 7) & 0x90));
  v114 = *(_DWORD *)&v76[4 * (HIBYTE(v98) ^ 0x4B)];
  v115 = v114 - ((2 * v114 - 111433276) & 0x94A81350) + 1191304842;
  v116 = (v113 - 31080345 - ((2 * v113) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v98 ^ 0x4Eu));
  v117 = *(_DWORD *)(v82 + 4 * (((v91 ^ 0x5BD90397) >> 16) ^ 0x5Cu)) ^ ((BYTE1(v85) ^ 0xC1)
                                                                                         - 1060722615
                                                                                         + ~(2
                                                                                           * (((v85 >> 8) ^ 0x5550C1) & 0x4A ^ (v85 >> 8) & 2))) ^ *(_DWORD *)&v81[4 * (BYTE1(v85) ^ 2)] ^ v115 ^ (((v91 ^ 0x5BD90397) >> 16) + 1827012791 - (((v91 ^ 0x5BD90397) >> 15) & 0x16E)) ^ (16 * (v115 ^ 0xA5409A8) * (v115 ^ 0xA5409A8) - ((32 * (v115 ^ 0xA5409A8) * (v115 ^ 0xA5409A8)) & 0x94A81340) - 900462168);
  v118 = *(_DWORD *)&v76[4 * (BYTE3(v94) ^ 0xDB)];
  v119 = (v117 - 31080345 - ((2 * v117) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v94 ^ 0xDCu));
  v120 = v109 ^ 0x2E7DDC58 ^ (v116 - ((2 * v116) & 0x6C7FF5B0) + 910162648);
  v121 = *(_DWORD *)(v82 + 4 * (BYTE2(v98) ^ 0x1Du)) ^ (((unsigned __int16)(v91 ^ 0x397) >> 8)
                                                        - 1060722616
                                                        - ((v91 >> 7) & 0x90)) ^ ((16 * v118 - 891466208)
                                                                                * (v118 + 212718818)
                                                                                + v118
                                                                                + 2091767010
                                                                                - 2
                                                                                * (((16 * v118 - 891466208)
                                                                                  * (v118 + 212718818)) & (v118 + 2091767010))) ^ ((BYTE2(v98) ^ 0x41) + 1827012791 - ((2 * (HIWORD(v98) ^ 0x4B41)) & 0x16E)) ^ *(_DWORD *)&v81[4 * (((unsigned __int16)(v91 ^ 0x397) >> 8) ^ 0xC3)];
  LODWORD(v94) = (v121 - 31080345 - ((2 * v121) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v85 ^ 0x9Cu));
  v122 = *(_DWORD *)&v76[4 * (HIBYTE(v107) ^ 0xCE)];
  v123 = v122 - ((2 * v122 + 2036050372) & 0x4C674D4E) - 1562281079;
  v124 = *(_DWORD *)&v81[4 * (BYTE1(v119) ^ 0xE1)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v94) ^ 0x64u)) ^ v123 ^ ((BYTE1(v119) ^ 0x22) - 1060722616 - ((v119 >> 7) & 0x90)) ^ ((BYTE2(v94) ^ 0x38) + 1827012791 - ((2 * (WORD1(v94) ^ 0x7838)) & 0x16E)) ^ (16 * (v123 ^ 0x633A6A7) * (v123 ^ 0x633A6A7) - ((32 * (v123 ^ 0x633A6A7) * (v123 ^ 0x633A6A7)) & 0x4C674D40) + 640919207);
  v125 = v120
       - ((2 * v120) & 0x5C874964)
       - 1371298638
       - ((2 * (v120 - ((2 * v120) & 0x5C874964) - 1371298638)) & 0x9A1903DC)
       - 854818322;
  v126 = *(_DWORD *)&v76[4 * (HIBYTE(v125) ^ 0x77)];
  v127 = (v124 - 31080345 - ((2 * v124) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v125 ^ 0xD8u));
  v128 = v126 - ((2 * v126 - 111433276) & 0xA37F2C0C) + 1315793640;
  LODWORD(v65) = *(_DWORD *)&v76[4 * (HIBYTE(v119) ^ 0xF8)];
  v129 = *(_DWORD *)&v81[4 * (BYTE1(v94) ^ 0xF4)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v107) ^ 0xEDu)) ^ v128 ^ __ROR4__(__ROR4__(*(_DWORD *)(v84 + 4 * (v119 ^ 0x4Cu)) ^ 0x22BB1D0, 6) ^ 0xB43B891E, 26) ^ ((BYTE1(v94) ^ 0x37) - 1060722615 + (~(v94 >> 7) | 0xFFFFFF6F)) ^ ((BYTE2(v107) ^ 0xB1) + 1827012791 - ((2 * (HIWORD(v107) ^ 0xCEB1)) & 0x16E)) ^ (16 * (v128 ^ 0x1BF9606) * (v128 ^ 0x1BF9606) - ((32 * (v128 ^ 0x1BF9606) * (v128 ^ 0x1BF9606)) & 0xA37F2C00) - 775973370);
  v130 = v65 - 2 * ((v65 + 2091767010) & 0x534F0075 ^ v65 & 1) - 805513898;
  v131 = v130 ^ (16 * (v130 ^ 0x34F0074) * (v130 ^ 0x34F0074)
               + 1397686388
               - ((32 * (v130 ^ 0x34F0074) * (v130 ^ 0x34F0074)) & 0xA69E00E0)) ^ ((BYTE2(v125) ^ 0xC)
                                                                                 + 1827012791
                                                                                 - ((2 * (BYTE2(v125) ^ 0xC)) & 0x16E)) ^ *(_DWORD *)(v82 + 4 * (BYTE2(v125) ^ 0x50u));
  v132 = BYTE1(v107) ^ 0x5F;
  v133 = (v131 - 1060722616 - ((2 * v131) & 0x818D5090)) ^ *(_DWORD *)&v81[4
                                                                         * (v132
                                                                          - ((2 * ((v107 >> 8) ^ 0xCEB15F)) & 0x186))
                                                                         + 780];
  v134 = (v133 - 31080345 - ((2 * v133) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v94 ^ 0x31u));
  v135 = *(_DWORD *)&v76[4 * (BYTE3(v94) ^ 0xC2)];
  v136 = v135 - ((2 * v135 + 2036050372) & 0x43766E9E) - 1637282767;
  v137 = *(_DWORD *)(v82 + 4 * (BYTE2(v119) ^ 0xE2u)) ^ ((BYTE2(v119) ^ 0xBE)
                                                         + 1827012791
                                                         - ((2 * (HIWORD(v119) ^ 0xF8BE)) & 0x16E)) ^ v136 ^ (16 * (v136 ^ 0x1BB374F) * (v136 ^ 0x1BB374F) - ((32 * (v136 ^ 0x1BB374F) * (v136 ^ 0x1BB374F)) & 0x43766E80) + 565917519) ^ ((BYTE1(v125) ^ 0x81) - 1060722616 - ((v125 >> 7) & 0x90)) ^ *(_DWORD *)&v81[4 * (BYTE1(v125) ^ 0x42)];
  LODWORD(v94) = (v137 - 31080345 - ((2 * v137) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v107 ^ 0xF9u));
  v138 = v134 ^ v132;
  v139 = (v129 ^ 0xEE4541AA) >> ((v134 ^ v132) & 8) >> ((v134 ^ v132) & 8 ^ 8);
  v140 = *(_DWORD *)&v76[4 * (HIBYTE(v127) ^ 0xF2)];
  v141 = v140 - ((2 * v140 + 2036050372) & 0x4F485D84) - 1538128988;
  v142 = ((BYTE2(v94) ^ 0x87) + 1827012791 - ((2 * (WORD1(v94) ^ 0x6487)) & 0x16E)) ^ *(_DWORD *)(v82
                                                                                                + 4
                                                                                                * (BYTE2(v94) ^ 0xDBu)) ^ (((16 * v141) ^ 0x7A42EC20) * (v141 ^ 0x7A42EC2));
  v143 = v141 ^ (((unsigned __int16)(v138 ^ 0xE047) >> 8)
               - 1060722616
               - (((v138 ^ 0xF637E047) >> 7) & 0x90)) ^ *(_DWORD *)&v81[4
                                                                      * (((unsigned __int16)(v138 ^ 0xE047) >> 8) ^ 0xC3)] ^ (v142 + 665071298 - 2 * (v142 & 0x27A42ECF ^ (((BYTE2(v94) ^ 0x87) - 73 - ((2 * (BYTE2(v94) ^ 0x87)) & 0x6E)) ^ *(_BYTE *)(v82 + 4 * (BYTE2(v94) ^ 0xDBu))) & 0xD));
  v144 = *(_DWORD *)&v76[4 * (HIBYTE(v129) ^ 0x54)];
  v145 = (v143 - 31080345 - ((2 * v143) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v129 ^ 0x9Cu));
  v146 = v144 - ((2 * v144 - 111433276) & 0xD69F6520) + 1744668530;
  v147 = *(_DWORD *)&v81[4 * (BYTE1(v94) ^ 0x8C)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v127) ^ 0x97u)) ^ *(_DWORD *)(v84 + 4 * (v138 ^ 0x71u)) ^ ((BYTE2(v127) ^ 0xCB) + 1827012791 - ((2 * (HIWORD(v127) ^ 0xF2CB)) & 0x16E)) ^ v146 ^ ((BYTE1(v94) ^ 0x4F) - 1060722616 - ((2 * ((v94 >> 8) ^ 0x64874F)) & 0x90)) ^ (16 * (v146 ^ 0xB4FB290) * (v146 ^ 0xB4FB290) - ((32 * (v146 ^ 0xB4FB290) * (v146 ^ 0xB4FB290)) & 0xD69F6520) - 347098480);
  v148 = *(_DWORD *)&v76[4 * (HIBYTE(v134) ^ 0x4C)];
  v149 = v148 - ((2 * v148 - 111433276) & 0xCE604EAE) - 471991239;
  v150 = (((v129 ^ 0xEE4541AA) >> 16) + 1827012791 - (((v129 ^ 0xEE4541AA) >> 15) & 0x16E)) ^ v149 ^ *(_DWORD *)(v82 + 4 * (((v129 ^ 0xEE4541AA) >> 16) ^ 0x5Cu)) ^ (16 * (v149 ^ 0x7302757) * (v149 ^ 0x7302757) - ((32 * (v149 ^ 0x7302757) * (v149 ^ 0x7302757)) & 0xCE604EA0) + 1731209047);
  v151 = BYTE1(v127) ^ *(_DWORD *)&v81[4 * (BYTE1(v127) ^ 0xB2)] ^ 0x71 ^ (v150 - 1060722616 - ((2 * v150) & 0x818D5090));
  v152 = *(_DWORD *)&v76[4 * (BYTE3(v94) ^ 0xDE)];
  v153 = (v151 - 31080345 - ((2 * v151) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v94 ^ 0x6Cu));
  v154 = v152 - 2 * ((v152 + 2091767010) & 0x6B9E3B75 ^ v152 & 1) - 397668266;
  v155 = *(_DWORD *)&v81[4 * (v139 ^ 0xC3)] ^ *(_DWORD *)(v82
                                                                         + 4
                                                                         * (((v138 ^ 0xF637E047) >> 16) ^ 0x5Cu)) ^ v154 ^ (16 * (v154 ^ 0xB9E3B74) * (v154 ^ 0xB9E3B74) + 1805532020 - ((32 * (v154 ^ 0xB9E3B74) * (v154 ^ 0xB9E3B74)) & 0xD73C76E0)) ^ (((v138 ^ 0xF637E047) >> 16) + 1827012791 - (((v138 ^ 0xF637E047) >> 15) & 0x16E)) ^ (v139 - 1060722616 - ((2 * v139) & 0x90));
  v156 = (v155 - 31080345 - ((2 * v155) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v127 ^ 0x66u));
  v157 = *(_DWORD *)&v76[4 * (HIBYTE(v145) ^ 0xEB)];
  v158 = v157 - ((2 * v157 + 962308548) & 0x369434A8) + 402124598;
  v159 = *(_DWORD *)(v82 + 4 * (BYTE2(v156) ^ 0xEDu));
  v160 = *(_DWORD *)&v81[4 * (BYTE1(v153) ^ 0xE)] ^ v158 ^ ((BYTE1(v153) ^ 0xCD)
                                                          - 1060722616
                                                          - ((2 * ((v153 >> 8) ^ 0xE9FCD)) & 0x90)) ^ (16 * (v158 ^ 0xB4A1A54) * (v158 ^ 0xB4A1A54) - ((32 * (v158 ^ 0xB4A1A54) * (v158 ^ 0xB4A1A54)) & 0x369434A0) - 1689642412) ^ (__ROR4__((((BYTE2(v156) ^ 0x6AB6E041) << 11) & 0x31005800 | 0xA6085D5) ^ __ROR4__(v159 & 0xC697B70B ^ 0x44860003, 21), 11) ^ 0xF831CC10 | (BYTE2(v156) ^ 0x6AB6E041) & 0x282040F4 ^ v159 & 0x396848F4) ^ 0x286000B4;
  v161 = (v160 - 31080345 - ((2 * v160) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v147 ^ 0x96u));
  v162 = *(_DWORD *)&v76[4 * (HIBYTE(v147) ^ 0x4E)];
  v163 = v162 - ((2 * v162 + 425437636) & 0x1AD9858C) - 1977968728;
  v164 = *(_DWORD *)&v76[4 * (HIBYTE(v153) ^ 0xE)];
  v165 = *(_DWORD *)&v81[4 * (BYTE1(v156) ^ 0x36)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v145) ^ 0x53u)) ^ v163 ^ ((BYTE2(v145) ^ 0xF) + 1827012791 - ((2 * (HIWORD(v145) ^ 0xEB0F)) & 0x16E)) ^ ((BYTE1(v156) ^ 0xF5) - 1060722616 - ((2 * ((v156 >> 8) ^ 0xCCB1F5)) & 0x90)) ^ (16 * (v163 ^ 0xD6CC2C6) * (v163 ^ 0xD6CC2C6) + 225231558 - ((32 * (v163 ^ 0xD6CC2C6) * (v163 ^ 0xD6CC2C6)) & 0x1AD98580));
  v166 = v164 + 1460565115 + ~((2 * v164 - 111433276) & 0xB4C13F30);
  v167 = (v165 - 31080345 - ((2 * v165) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v153 ^ 0xE6u));
  v168 = *(_DWORD *)(v82 + 4 * (((v147 ^ 0xF4469CA0) >> 16) ^ 0x5Cu)) ^ (((v147 ^ 0xF4469CA0) >> 16)
                                                                                          + 1827012791
                                                                                          - (((v147 ^ 0xF4469CA0) >> 15) & 0x16E)) ^ *(_DWORD *)&v81[4 * (BYTE1(v145) ^ 0x1E)] ^ v166 ^ ((BYTE1(v145) ^ 0xDD) - 1060722616 - ((2 * ((v145 >> 8) ^ 0xEB0FDD)) & 0x90)) ^ (16 * (v166 ^ 0xA609F98) * (v166 ^ 0xA609F98) - ((32 * (v166 ^ 0xA609F98) * (v166 ^ 0xA609F98)) & 0xB4C13F20) - 631201896);
  v169 = (v168 - 31080345 - ((2 * v168) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v156 ^ 0xCu));
  v170 = *(_DWORD *)&v76[4 * (HIBYTE(v156) ^ 0x76)];
  v171 = v170 - ((2 * v170 - 111433276) & 0x8211793E) + 1035374977;
  v172 = *(_DWORD *)(v82 + 4 * (BYTE2(v153) ^ 0xC3u)) ^ (((unsigned __int16)(v147 ^ 0x9CA0) >> 8)
                                                         - 1060722616
                                                         - (((v147 ^ 0xF4469CA0) >> 7) & 0x90)) ^ *(_DWORD *)&v81[4 * (((unsigned __int16)(v147 ^ 0x9CA0) >> 8) ^ 0xC3)] ^ v171 ^ ((BYTE2(v153) ^ 0x9F) + 1827012791 - ((2 * (HIWORD(v153) ^ 0xE9F)) & 0x16E)) ^ (16 * (v171 ^ 0x108BC9F) * (v171 ^ 0x108BC9F) - ((32 * (v171 ^ 0x108BC9F) * (v171 ^ 0x108BC9F)) & 0x82117920) - 1056392033);
  v173 = (v172 - 31080345 - ((2 * v172) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v145 ^ 0x21u));
  v174 = *(_DWORD *)&v76[4 * (HIBYTE(v161) ^ 0xEB)];
  v175 = v174 - 283232590 + ~((2 * v174 - 111433276) & 0xE4E0C39E);
  HIDWORD(v72) = *(_DWORD *)&v81[4 * (BYTE1(v169) ^ 8)] ^ ((BYTE1(v169) ^ 0xCB)
                                                         - 1060722616
                                                         - ((2 * ((v169 >> 8) ^ 0x5AFDCB)) & 0x90)) ^ 0xDC91EA42;
  LODWORD(v72) = HIDWORD(v72);
  LODWORD(v72) = (v72 >> 27) ^ __ROR4__(*(_DWORD *)(v82 + 4 * (BYTE2(v173) ^ 0x73u)) ^ 0x6AB6E0F0 ^ v175 ^ ((BYTE2(v173) ^ 0x2F) + 1827012791 - ((2 * (HIWORD(v173) ^ 0x262F)) & 0x16E)) ^ (16 * (v175 ^ 0x27061CF) * (v175 ^ 0x27061CF) - ((32 * (v175 ^ 0x27061CF) * (v175 ^ 0x27061CF)) & 0xE4E0C380) + 1919967695), 27) ^ 0x5DC97527;
  HIDWORD(v72) = v72;
  v176 = ((v72 >> 5) - 31080345 - ((2 * (v72 >> 5)) & 0xFC4B80CE)) ^ *(_DWORD *)(v84
                                                                               + 4 * (v167 ^ 0xC1u));
  v177 = *(_DWORD *)&v76[4 * (HIBYTE(v167) ^ 0xBF)];
  v178 = v177 - ((2 * v177 + 2036050372) & 0x4B5AD006) - 1571078939;
  v179 = BYTE2(v161);
  v180 = *(_DWORD *)&v81[4 * (BYTE1(v173) ^ 0xA1)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v161) ^ 0x7Bu)) ^ ((BYTE1(v173) ^ 0x62) - 1060722616 - ((2 * ((v173 >> 8) ^ 0x262F62)) & 0x90)) ^ (16 * (v178 ^ 0x5AD6803) * (v178 ^ 0x5AD6803) + 1827012791 - ((32 * (v178 ^ 0x5AD6803) * (v178 ^ 0x5AD6803)) & 0xD9CC0160));
  v181 = (v180 - 31080345 - ((2 * v180) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v169 ^ 6u));
  v182 = (v181 - ((2 * v181) & 0x4B5AD006) + 632121347) ^ v178;
  v183 = *(_DWORD *)&v76[4 * (HIBYTE(v169) ^ 0x5A)];
  v184 = v183 - ((2 * v183 - 111433276) & 0xFC220A2E) - 88155655;
  v185 = ((BYTE2(v167) ^ 0x6D) + 1827012791 - ((2 * (HIWORD(v167) ^ 0xBF6D)) & 0x16E)) ^ *(_DWORD *)(v82 + 4 * (BYTE2(v167) ^ 0x31u)) ^ (((16 * v184) ^ 0xE1105170) * (v184 ^ 0xE110517));
  LODWORD(v65) = ((2 * (HIBYTE(v173) & 0xFA ^ 0x1B013A1)) | 0x6E86B5AA) - (HIBYTE(v173) & 0xFA ^ 0x1B013A1);
  v186 = v184 ^ *(_DWORD *)&v81[4 * (BYTE1(v161) ^ 0x42)] ^ ((BYTE1(v161) ^ 0x81) - 1060722616 - ((v161 >> 7) & 0x90)) ^ (v185 + 2115044631 - 2 * (v185 & 0x7E11051F ^ (((BYTE2(v167) ^ 0x6D) - 73 - ((2 * (BYTE2(v167) ^ 0x6D)) & 0x6E)) ^ *(_BYTE *)(v82 + 4 * (BYTE2(v167) ^ 0x31u))) & 8));
  LODWORD(v72) = __ROR4__((((v65 + 1220322603) & 0x36F34F44 | HIBYTE(v173) & 0xBA) ^ 0xC90CB623) + 187, 17);
  v187 = ((((v65 + 1220322603) ^ 0x490CB6A9) + 1) ^ (((((_DWORD)v65 + 1220322603) << 15) ^ v72 ^ 0x5DD7DB43) >> 15) ^ (((((_DWORD)v65 + 1220322603) << 15) ^ v72 ^ 0x5DD7DB43) << 17) ^ 0xB687F2F9)
       + (HIBYTE(v173) & 5 ^ 0xBE);
  v188 = (v186 - 31080345 - ((2 * v186) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v173 ^ 0xFBu));
  v189 = *(_DWORD *)&v76[4 * v187] - ((2 * *(_DWORD *)&v76[4 * v187] - 111433276) & 0xE1E36E24) + 1839172596;
  v190 = BYTE2(v169) ^ *(_DWORD *)&v81[4 * (BYTE1(v167) ^ 0x18)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v169) ^ 0xA1u)) ^ ((BYTE1(v167) ^ 0xDB) - 1060722616 - 2 * (((v167 >> 8) ^ 0xBF6DDB) & 0x68 ^ (v167 >> 8) & 0x20)) ^ 0xFD ^ (16 * (v189 ^ 0xF1B712) * (v189 ^ 0xF1B712) + 1827012791 - ((32 * (v189 ^ 0xF1B712) * (v189 ^ 0xF1B712)) & 0xD9CC0160));
  v191 = *(_DWORD *)(v84 + 4 * (v161 ^ 0x34u));
  v192 = v189 ^ 0x44CB3CA8 ^ (v190 - ((2 * v190) & 0xE1E36E24) - 252594414);
  v193 = (v191 & 0x2000 | ((((unsigned __int16)(v191 & 0x2000) >> 13) & 1) << 14)) ^ 0x63FD23DF;
  v194 = (v192 & (v193 - 1677534175)) == 0;
  v195 = v193 - 41943616;
  v196 = -981842562 - v193;
  if (v194)
    v196 = v195;
  v197 = (v192 - 1635590559 + v196) ^ v191 & 0xFFFFDFFF;
  v198 = *(_DWORD *)&v76[4 * (HIBYTE(v176) ^ 0x8F)];
  v199 = v198 - ((2 * v198 + 2036050372) & 0x6EC14B32) + 873364091;
  v200 = v182 ^ v179;
  v201 = *(_DWORD *)(v84 + 4 * (v200 ^ 0x33u));
  v202 = (v201 ^ 0xF3360982) + (v201 ^ 0xFE25C067) + 1;
  v203 = ((v201 ^ 0xF3360982) + (v201 ^ 0xFE25C067) - 31080344 - ((2 * v202) & 0xFC4B80CE)) ^ v201;
  v204 = ((v197 ^ 0x223D0F15) >> 16);
  v205 = *(_DWORD *)&v81[4 * (BYTE1(v188) ^ 0x89)] ^ v199 ^ (16 * (v199 ^ 0x760A599) * (v199 ^ 0x760A599)
                                                           + 1827012791
                                                           - ((32 * (v199 ^ 0x760A599) * (v199 ^ 0x760A599)) & 0xD9CC0160)) ^ (((2 * ((v202 ^ 0x7FFFFFFC) & (v201 ^ 0x7E25C067))) ^ v203 ^ 0xFFFFFFFC) + 2 * ((v203 ^ 0x7FFFFFFC) & (2 * ((v202 ^ 0x7FFFFFFC) & (v201 ^ 0x7E25C067))))) ^ ((BYTE1(v188) ^ 0x4A) - 1060722616 - ((2 * ((v188 >> 8) ^ 0x1914A)) & 0x90)) ^ *(_DWORD *)(v82 + 4 * (v204 ^ 0x5Cu));
  v206 = *(_DWORD *)&v76[4 * (HIBYTE(v182) ^ 0xDA)];
  v207 = 16 * (v206 + 212718818) * (v206 + 212718818)
       + 2113640431
       - ((32 * (v206 + 212718818) * (v206 + 212718818)) & 0xFBF72FC0);
  v206 += 2091767010;
  v208 = (v206 + (v206 ^ 0x82046810 ^ v207) + 1) ^ ((v207 ^ 0x82046810) + 1);
  v209 = *(_DWORD *)&v81[4 * (((unsigned __int16)(v197 ^ 0xF15) >> 8) ^ 0xC3)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v176) ^ 0x7Fu)) ^ ((BYTE2(v176) ^ 0x23) + 1827012791 - 2 * ((HIWORD(v176) ^ 0x8F23) & 0xBF ^ HIWORD(v176) & 8)) ^ (((unsigned __int16)(v197 ^ 0xF15) >> 8) - 1060722616 - (((v197 ^ 0x223D0F15) >> 7) & 0x90)) ^ (((v208 + 2113640431 - ((2 * v208) & 0xFBF72FDE)) ^ v207) + v206);
  v210 = (v209 - 31080345 - ((2 * v209) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v188 ^ 0xD6u));
  v211 = *(_DWORD *)&v76[4 * (HIBYTE(v188) ^ 1)];
  v212 = v211 - ((2 * v211 - 111433276) & 0xEB5B1D2C) + 1918591864;
  v213 = ((v176 >> 7) | 0xFFFFFF7B) + (BYTE1(v176) ^ 0xDF);
  v214 = *(_DWORD *)&v81[4 * (BYTE1(v176) ^ 0x1C)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v200) ^ 0xA1u)) ^ (v213 - ((2 * v213 - 1188834170) & 0x818D5090) - 1655139701) ^ (16 * (v212 ^ 0x5AD8E96) * (v212 ^ 0x5AD8E96) + 1827012791 - ((32 * (v212 ^ 0x5AD8E96) * (v212 ^ 0x5AD8E96)) & 0xD9CC0160));
  v215 = (v214 - 31080345 - ((2 * v214) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v197 ^ 0x23u));
  v216 = (v215 - ((2 * v215) & 0xEB5B1D2C) - 173175146) ^ v212;
  v217 = *(_DWORD *)&v76[4 * (HIBYTE(v197) ^ 0x98)];
  v218 = v217 - ((2 * v217 - 111433276) & 0xF0239402) - 188768541;
  v219 = *(_DWORD *)&v81[4 * (BYTE1(v200) ^ 0x23)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v188) ^ 0xCDu)) ^ ((BYTE2(v188) ^ 0x91) + 1827012791 - ((2 * (HIWORD(v188) ^ 0x191)) & 0x16E)) ^ ((BYTE1(v200) ^ 0xE0) - 1060722616 - 2 * (((v200 >> 8) ^ 0x60FDE0) & 0x4C ^ (v200 >> 8) & 4)) ^ v218 ^ (16 * (v218 ^ 0x811CA01) * (v218 ^ 0x811CA01) - ((32 * (v218 ^ 0x811CA01) * (v218 ^ 0x811CA01)) & 0xF0239400) + 2014431745);
  v220 = (v219 - 31080345 - ((2 * v219) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v176 ^ 0x81u));
  v221 = v205 ^ v204;
  v222 = *(_DWORD *)&v76[4 * (HIBYTE(v205) ^ 0x4F)];
  v223 = v222 - ((2 * v222 + 2036050372) & 0x65DEDB0C) + 798835304;
  v224 = *(_DWORD *)(v82 + 4 * (BYTE2(v220) ^ 0x1Fu));
  v225 = v224 ^ BYTE2(v220) ^ 0xF9AF1FFB;
  v224 ^= 0x6CE600B7u;
  v226 = (v224 + v225 + 1) ^ ((BYTE2(v220) ^ 0x95491F4C) + 1);
  v227 = (BYTE2(v220) ^ 0xB7684338 ^ (v226 - ((2 * v226) & 0xBBBD4716) - 572611701)) + v224;
  v228 = v227 ^ (((16 * v223) ^ 0x2EF6D860) * (v223 ^ 0x2EF6D86));
  v229 = v223 ^ ((BYTE1(v216) ^ 0x1A) - 1060722616 - ((2 * ((v216 >> 8) ^ 0xE3FC1A)) & 0x90)) ^ *(_DWORD *)&v81[4 * (BYTE1(v216) ^ 0xD9)] ^ (v228 - 2 * (v228 & 0x32EF6D87 ^ v227 & 1) - 1292931706);
  v230 = (v229 - 31080345 - ((2 * v229) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v210 ^ 0x9Fu));
  v231 = *(_DWORD *)&v76[4 * (HIBYTE(v210) ^ 0x3D)];
  v232 = v205 ^ v204 ^ 0xF551D843;
  v233 = v231 - ((2 * v231 + 2036050372) & 0x5604754E) - 1481633911;
  v234 = *(_DWORD *)&v81[4 * (BYTE1(v220) ^ 0x20)] ^ *(_DWORD *)(v82 + 4 * (BYTE2(v232) ^ 0x5Cu)) ^ *(_DWORD *)(v84 + 4 * ((v216 ^ BYTE2(v200)) ^ 0x6Cu)) ^ v233 ^ (BYTE2(v232) + 1827012791 - ((v232 >> 15) & 0x16E)) ^ (16 * (v233 ^ 0xB023AA7) * (v233 ^ 0xB023AA7) - ((32 * (v233 ^ 0xB023AA7) * (v233 ^ 0xB023AA7)) & 0x56047540) + 721566375) ^ ((BYTE1(v220) ^ 0xE3) - 1060722616 - ((2 * ((v220 >> 8) ^ 0x7D43E3)) & 0x90));
  v235 = *(_DWORD *)&v76[4 * (HIBYTE(v216) ^ 0xE3)];
  v236 = v235 - ((2 * v235 - 111433276) & 0xE16ECA1C) - 312133136;
  v237 = BYTE2(v210);
  v238 = (16 * (v236 ^ 0xB7650E) * (v236 ^ 0xB7650E)
        + 1827012791
        - ((32 * (v236 ^ 0xB7650E) * (v236 ^ 0xB7650E)) & 0xD9CC0160)) ^ *(_DWORD *)(v82 + 4 * (BYTE2(v210) ^ 0x4Au));
  v239 = ((HIBYTE(v220) ^ 0xFFFFFF38) + 187) ^ ((HIBYTE(v220) ^ 0xFFFFFF82) + 1);
  v240 = *(_DWORD *)(v84 + 4 * (v220 ^ 0x2Bu)) ^ *(_DWORD *)&v81[4 * (BYTE1(v232) ^ 0xC3)] ^ (BYTE1(v232) - 1060722616 - ((v232 >> 7) & 0x90)) ^ v236 ^ (v238 - ((2 * v238) & 0xE16ECA1C) + 1891067150);
  v241 = *(_DWORD *)&v76[4 * (HIBYTE(v220) ^ 0xEA8654A5 ^ (v239 - 360295259 - ((2 * v239) & 0xD50CA9B0) + 51)) + 744];
  v242 = v241 - ((2 * v241 + 2036050372) & 0x5F165002) + 741932259;
  v243 = (16 * (v242 ^ 0xF8B2801) * (v242 ^ 0xF8B2801)
        + 1827012791
        - ((32 * (v242 ^ 0xF8B2801) * (v242 ^ 0xF8B2801)) & 0xD9CC0160)) ^ *(_DWORD *)(v82
                                                                                     + 4
                                                                                     * ((BYTE2(v216) ^ 0x717E0EA ^ -(BYTE2(v216) ^ 0x717E0EA) ^ ((BYTE2(v216) ^ 0xFFFFFF5F) + 119005259))
                                                                                      + 119005258));
  v244 = *(_DWORD *)&v81[4 * (BYTE1(v210) ^ 0xE7)] ^ BYTE2(v216) ^ ((BYTE1(v210) ^ 0x24)
                                                                  - 1060722616
                                                                  - ((v210 >> 7) & 0x90)) ^ v242 ^ (v243
                                                                                                  - ((2 * v243) & 0x5F165002)
                                                                                                  - 1349834751) ^ 0xFC;
  v245 = (v244 - 31080345 - ((2 * v244) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v221 ^ 0x75u));
  v246 = *(_DWORD *)&v76[4 * (HIBYTE(v230) ^ 0xF)];
  v247 = v246 - ((2 * v246 + 2036050372) & 0x6AB0DFB2) + 839271611;
  v248 = v240 ^ v237 ^ 0xA25F4E1A;
  v249 = *(_DWORD *)&v81[4 * (BYTE1(v248) ^ 0xC3)] ^ *(_DWORD *)(v84 + 4 * (v234 ^ 0x1Fu)) ^ v247 ^ *(_DWORD *)(v82 + 4 * (BYTE2(v245) ^ 0x73u)) ^ (16 * (v247 ^ 0x5586FD9) * (v247 ^ 0x5586FD9) - ((32 * (v247 ^ 0x5586FD9) * (v247 ^ 0x5586FD9)) & 0x6AB0DFA0) - 1252495399) ^ (BYTE1(v248) - 1060722616 - ((v248 >> 7) & 0x90)) ^ ((BYTE2(v245) ^ 0x2F) + 1827012791 - ((2 * (HIWORD(v245) ^ 0x1C2F)) & 0x16E));
  v250 = *(_DWORD *)&v76[4 * (HIBYTE(v234) ^ 0x2D)];
  v251 = v250 - ((2 * v250 - 111433276) & 0xAAAFE302) - 771373469;
  v252 = *(_DWORD *)(v82 + 4 * (BYTE2(v230) ^ 0x37u)) ^ (16 * (v251 ^ 0x557F181) * (v251 ^ 0x557F181)
                                                         + 1827012791
                                                         - ((32 * (v251 ^ 0x557F181) * (v251 ^ 0x557F181)) & 0xD9CC0160)) ^ BYTE2(v230) ^ ((BYTE1(v245) ^ 0x49) - 1060722616 - ((2 * ((v245 >> 8) ^ 0x1C2F49)) & 0x90)) ^ 0x6B ^ *(_DWORD *)&v81[4 * (BYTE1(v245) ^ 0x8A)];
  v253 = (v252 - 31080345 - ((2 * v252) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4
                                                                         * ((v240 ^ v237) ^ 0x2Cu));
  v254 = v251 ^ 0xB6270AB2 ^ (v253 - ((2 * v253) & 0xAAAFE302) + 1431826817);
  v255 = *(_DWORD *)&v76[4 * (HIBYTE(v240) ^ 0x18)];
  v256 = v255 - ((2 * v255 + 962308548) & 0x22DDFC9E) - 1910713551;
  v257 = v234 ^ 0x97EFF529;
  v258 = *(_DWORD *)(v82 + 4 * (BYTE2(v257) ^ 0x5Cu)) ^ (BYTE2(v257) + 1827012791 - ((v257 >> 15) & 0x16E)) ^ (((16 * v256) ^ 0x16EFE4F0) * (v256 ^ 0x16EFE4F));
  v259 = v256 ^ *(_DWORD *)&v81[4 * (BYTE1(v230) ^ 0x97)] ^ ((BYTE1(v230) ^ 0x54)
                                                           - 1060722616
                                                           - ((2 * ((v230 >> 8) ^ 0xF6B54)) & 0x90)) ^ (v258 - ((2 * v258) & 0x22DDFC9E) + 292486735);
  v260 = (v259 - 31080345 - ((2 * v259) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v245 ^ 0xE9u));
  v261 = *(_DWORD *)&v76[4 * (HIBYTE(v245) ^ 0x1C)];
  v262 = v261 - ((2 * v261 + 2036050372) & 0x4890D852) + 553009419;
  v263 = (16 * (v262 ^ 0x4486C29) * (v262 ^ 0x4486C29)
        - ((32 * (v262 ^ 0x4486C29) * (v262 ^ 0x4486C29)) & 0x4890D840)
        - 1538757591) ^ v262;
  v264 = (BYTE2(v248) + 1827012791 - ((v248 >> 15) & 0x16E)) ^ 0x6AB6E0F0 ^ *(_DWORD *)(v82 + 4
                                                                                            * (BYTE2(v248) ^ 0x5Cu));
  v265 = *(_DWORD *)&v81[4 * (BYTE1(v257) ^ 0xC3)] ^ (BYTE1(v257) - 1060722616 - ((v257 >> 7) & 0x90)) ^ (v263 + v264 - 2 * (v263 & v264));
  v266 = (v265 - 31080345 - ((2 * v265) & 0xFC4B80CE)) ^ *(_DWORD *)(v84 + 4 * (v230 ^ 0xE9u));
  if ((v254 & 0x80) != 0)
    v267 = -128;
  else
    v267 = 128;
  v268 = ((v266 >> 8) ^ 0x5A49A3B7) & 0x25E0117 ^ 0x94A44DF8 ^ ((((v266 >> 8) ^ 0x5A49A3B7) & 0x5E01E8 ^ 0x9CFE4CB1) - 1);
  v269 = v267 + v254 - 2 * ((v267 + v254) & 0x108FBA3B ^ v254 & 2) - 1869628871;
  v270 = (char *)*(&off_24E21C7C0 + (int)(v23 - 735)) - 12;
  LODWORD(v311) = *(_DWORD *)&v270[4 * (HIBYTE(v249) ^ 0x59)];
  v271 = v269 ^ 0xB3D3F82D;
  v272 = *(_DWORD *)&v270[4 * ((v269 ^ 0xB3D3F82D) >> 24)];
  v273 = ((2 * v268) | 0xEF2A207A) - v268 - 2006257725;
  LODWORD(v309) = *(_DWORD *)&v270[4 * (HIBYTE(v260) ^ 0x16)];
  v274 = ((v273 ^ 0x8230EED3) + 1) ^ ((BYTE1(v266) ^ 0xFFFFFF0C) + 30);
  v275 = *(_DWORD *)&v270[4 * (HIBYTE(v266) ^ 0xB3)];
  v276 = (char *)*(&off_24E21C7C0 + (int)(v23 - 373)) - 12;
  v277 = *(_DWORD *)&v276[4 * (BYTE2(v266) ^ 0xE2)];
  LODWORD(v270) = *(_DWORD *)&v276[4 * (BYTE2(v249) ^ 0x25)];
  v278 = *(unsigned int *)&v276[4 * (BYTE2(v269) ^ 0xBE)];
  LODWORD(v276) = *(_DWORD *)&v276[4 * (BYTE2(v260) ^ 0xB1)];
  HIDWORD(v280) = v276 ^ 0x1790;
  LODWORD(v280) = v276 ^ 0xAD43C000;
  v279 = v280 >> 13;
  v281 = (char *)*(&off_24E21C7C0 + (int)(v23 - 738)) - 12;
  LODWORD(v276) = *(_DWORD *)&v281[4 * (BYTE1(v260) ^ 0x6F)];
  HIDWORD(v280) = v275 ^ 0xF4267AFA;
  LODWORD(v280) = v275 ^ 0xF4267AFA;
  v282 = v280 >> 4;
  LODWORD(v280) = __ROR4__(v279, 4);
  v283 = v273 ^ 0xA8A21FF6;
  v284 = *(_DWORD *)&v281[4 * ((v274 - 714273062 - ((2 * v274) & 0xAADA1DB4)) ^ v273 ^ 0xA8A21FF6) + 116];
  v285 = v249 ^ 0x2B252C6F;
  v286 = *(unsigned int *)&v281[4 * (((unsigned __int16)(v249 ^ 0x2C6F) >> 8) ^ 0x1D)];
  v287 = ((unsigned __int16)(v269 ^ 0xF82D) >> 8);
  v288 = (uint64_t)*(&off_24E21C7C0 + (int)(v23 - 515));
  v289 = *(_DWORD *)(v288 + 4 * (v269 ^ 0x57u));
  v290 = *(_DWORD *)(v288 + 4 * (v260 ^ 0x18u));
  v291 = *(_DWORD *)(v288 + 4 * (v266 ^ 0x79u));
  v292 = *(_BYTE **)(v20 - 200);
  v293 = *(_DWORD *)&v281[4 * (v287 ^ 0x1D)] ^ *(_DWORD *)(v20 - 232) ^ (*(_DWORD *)(v288 + 4 * v285)
                                                                       + 1335838389) ^ ((-1335838390 - *(_DWORD *)(v288 + 4 * v285)) >> 2) & 0x369D1412 ^ __ROR4__(v282 ^ v280 ^ 0xC1DA68C4, 28) ^ (v287 - 520640282 - ((v271 >> 7) & 0x1CC));
  v294 = (char *)*(&off_24E21C7C0 + (int)(v23 - 219)) - 12;
  v292[13] = (v294[((v293 ^ 0x3EA0FB0B) >> 16) ^ 0x79] + (((v293 ^ 0x3EA0FB0B) >> 16) ^ 0xAE) - 119) ^ 0xDB;
  HIDWORD(v280) = v270 ^ 0x1790;
  LODWORD(v280) = v270 ^ 0xAD43C000;
  LODWORD(v270) = ((v280 >> 13) + 619689698 - ((2 * (v280 >> 13)) & 0x49DF6DC4)) ^ v272;
  LODWORD(v270) = ((v290 + 1335838389) >> 2) & 0x369D1412 ^ ((_DWORD)v270
                                                                         - 520640282
                                                                         - ((2 * (_DWORD)v270) & 0xC1EF51CC)) ^ v284;
  LODWORD(v270) = ((_DWORD)v270 - 1747560431 - ((2 * (_DWORD)v270) & 0x2FACB14E) + 150) ^ *(_DWORD *)(v20 - 228);
  v295 = v283 ^ (v290 + 1335838389) ^ ((_DWORD)v270 - 714273062 - ((2 * (_DWORD)v270) & 0xAADA1DB4));
  v292[5] = (v294[BYTE2(v295) ^ 0xC1] + (BYTE2(v295) ^ 0x16) - 119) ^ 0xE9;
  v296 = (uint64_t)*(&off_24E21C7C0 + (int)(v23 - 253));
  v292[14] = *(_BYTE *)(v296 + (((unsigned __int16)(v293 ^ 0xFB0B) >> 8) ^ 0x12)) ^ ((((unsigned __int16)(v293 ^ 0xFB0B) >> 8) ^ 0xC1) - ((2 * (((unsigned __int16)(v293 ^ 0xFB0B) >> 8) ^ 0xC1) + 22) & 0x52) + 116) ^ 0x11;
  HIDWORD(v280) = v277 ^ 0x1790;
  LODWORD(v280) = v277 ^ 0xAD43C000;
  LODWORD(v288) = ((v280 >> 13) + 619689698 - ((2 * (v280 >> 13)) & 0x49DF6DC4)) ^ v311;
  v297 = v276 ^ *(_DWORD *)(v20 - 224) ^ (v289 + 1335838389) ^ ((v289 + 1335838389) >> 2) & 0x369D1412 ^ ((_DWORD)v288 - 520640282 - ((2 * (_DWORD)v288) & 0xC1EF51CC));
  v298 = (char *)*(&off_24E21C7C0 + (int)(v23 ^ 0x35C)) - 12;
  LOBYTE(v288) = v298[BYTE3(v297) ^ 0x2CLL] - 13;
  *v292 = v288 ^ (-12 * v288) ^ 0xF0;
  v299 = (char *)*(&off_24E21C7C0 + (int)(v23 ^ 0x30A)) - 4;
  LODWORD(v288) = -52
                - 97
                * v299[(v283 ^ (v290 - 75) ^ ((_BYTE)v270
                                                                              - 38
                                                                              - ((2 * (_BYTE)v270) & 0xB4))) ^ 0x85];
  v292[7] = v288 ^ (v288 >> 1) & 0x4D ^ 0x9F;
  v300 = v309 ^ *(_DWORD *)(v20 - 216) ^ (BYTE1(v285) - 520640282 - ((v285 >> 7) & 0x1CC)) ^ v286 ^ ((_DWORD)v278 << 19) ^ (v291 + 1335838389) ^ (((v278 >> 13) ^ 0x56A1E) + 619689698 - ((2 * ((v278 >> 13) ^ 0x56A1E)) & 0xF6DC4)) ^ ((v291 + 1335838389) >> 2) & 0x369D1412;
  LODWORD(v288) = -52
                - 97
                * v299[(v309 ^ *(_BYTE *)(v20 - 216) ^ (BYTE1(v285)
                                                                                        - 26
                                                                                        - ((v285 >> 7) & 0xCC)) ^ v286 ^ (v291 - 75) ^ (((v278 >> 13) ^ 0x1E) - 30 - ((2 * ((v278 >> 13) ^ 0x1E)) & 0xC4)) ^ ((v291 + 1335838389) >> 2) & 0x12) ^ 0x96];
  v292[11] = v288 ^ 0x28 ^ (v288 >> 1) & 0x4D;
  v292[9] = (((v294[BYTE2(v300) ^ 0x7ELL] - 119) ^ BYTE2(v300) ^ 0xA9)
           + 2 * ((v294[BYTE2(v300) ^ 0x7ELL] + 9) & (BYTE2(v300) ^ 0xA9))) ^ 0xFA;
  v292[1] = ((BYTE2(v297) ^ 0x69) + v294[BYTE2(v297) ^ 0xBELL] - 119) ^ 0x11;
  LODWORD(v288) = -52 - 97 * v299[(v297 ^ BYTE1(v260)) ^ 0xA5];
  v292[3] = v288 ^ (v288 >> 1) & 0x4D ^ 0xC7;
  LOBYTE(v288) = v298[HIBYTE(v295) ^ 0xABLL] - 13;
  v292[4] = v288 ^ 0xE9 ^ (-12 * v288);
  LOBYTE(v288) = v298[BYTE3(v300) ^ 0x79] - 13;
  v292[8] = v288 ^ 0xCB ^ (-12 * v288);
  LODWORD(v288) = -52 - 97 * v299[v293 ^ 7];
  v292[15] = v288 ^ 0xE5 ^ (v288 >> 1) & 0x4D;
  v292[v312] = ((BYTE1(v295) ^ 0xD) - ((2 * (BYTE1(v295) ^ 0xD) + 22) & 0x52) + 116) ^ 0x1A ^ *(_BYTE *)(v296 + (BYTE1(v295) ^ 0xD) + ((v295 >> 7) & 0x1A6 ^ 0xFFFFFFFD) + 212);
  v292[2] = ((BYTE1(v297) ^ 0xA9) - ((2 * (BYTE1(v297) ^ 0xA9) + 22) & 0x52) + 116) ^ 0xD8 ^ *(_BYTE *)(v296 + (BYTE1(v297) ^ 0x7ALL));
  LOBYTE(v288) = v298[HIBYTE(v293) ^ 0xE6];
  v292[12] = (v288 - 13) ^ 0x4B ^ (-12 * (v288 - 13));
  v292[10] = (BYTE1(v300) - ((2 * BYTE1(v300) + 22) & 0x52) + 116) ^ 0x7D ^ *(_BYTE *)(v296 + (BYTE1(v300) ^ 0xD3));
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, unint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v20 - 208) + 8 * (int)((470 * (HIDWORD(a12) <= 0x10)) ^ v23)) - 12))(v300, 1335838389, (v23 - 552) | 0x304, v278, v286, 77, v297, 4294967199, a9, a10, a11, a12, v27, v302, v303, v304, a17, v305, v306,
           v307,
           v308,
           v309,
           v311,
           0,
           5,
           13,
           11,
           9,
           1,
           4,
           10,
           14);
}

void sub_21E08C9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, int a19, int a20,int a21,int a22,int a23,int a24,int a25)
{
  int v25;
  uint64_t v26;

  *(_DWORD *)(v26 - 216) = (a20 | a23) ^ 0xEC81A94E;
  *(_DWORD *)(v26 - 232) = a25 ^ 0x27916F;
  *(_DWORD *)(v26 - 224) = (a22 + (a18 | (a19 << 8))) ^ 0x38533E4F;
  *(_DWORD *)(v26 - 228) = a21 ^ v25 ^ 0x1817FDD4;
  JUMPOUT(0x21E08996CLL);
}

uint64_t sub_21E08CA5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  uint64_t v18;
  int v19;

  v19 = a11 + 1654 * (a3 ^ 0x3CE) - ((1059 * (a3 ^ 0x3CE) - 2129258518) & a18) + 1351851518;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * ((2009
                                          * (((2 * v19) & 0xFFFDFDD8 ^ 0x81142010) + (v19 ^ 0x3F75EEF4) + 1314622392 != 1314556580)) ^ a3))
                            - 4))();
}

uint64_t sub_21E08CB20(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((30 * (a2 + a1 + ((v2 + 559) ^ 0x10B61u) > 7)) ^ v2)) - 12))();
}

uint64_t sub_21E08CB98(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((236 * (a8 + (((a7 - 2548) | 0xA18) ^ (a3 + 2695)) < a7 - 2693)) ^ a7))
                            - 8))();
}

uint64_t sub_21E08CBDC(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;
  int v23;
  int v25;

  v9 = a2 + a1 + ((a4 - 1045254074) & 0x3E4D4FEA ^ (a3 + 2758));
  v10 = *(_QWORD *)(v8 - 200);
  v11 = v10 + (((a4 - 537) | 0x46Cu) ^ 0xCEDLL) + v9;
  v12 = ((_BYTE)a2 + (_BYTE)a1 + (((_BYTE)a4 + 70) & 0xEA ^ (a3 - 58))) & 0xF;
  v13 = v6 + v12 - v9;
  v14 = v12 + 1;
  v15 = v6 + v12 + 1;
  v16 = v12 + 2;
  v17 = v5 + v12 + 2 - v9;
  v18 = v12 + v5 + 3;
  v19 = v4 + v14 - v9;
  v21 = v15 > v10 && v13 < v11;
  v23 = v18 > v10 && v17 < v11 || v21;
  if (v4 + v16 <= v10 || v19 >= v11)
    v25 = v23;
  else
    v25 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((280 * (v25 ^ 1)) ^ a4)) - 8))();
}

uint64_t sub_21E08CC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v8
                                                                      + 8
                                                                      * ((v7 < ((a7 - 1509094102) & 0x59F2EEBB) - 1696) ^ a7)))(a1, a2, a3, 0);
}

uint64_t sub_21E08CCD4(int a1, int a2, int a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16x4_t v20;
  int8x16x4_t v21;

  v20.val[1].i64[0] = ((_BYTE)v8 + 9) & 0xF;
  v20.val[1].i64[1] = ((_BYTE)v8 + 8) & 0xF;
  v20.val[2].i64[0] = ((_BYTE)v8 + 7) & 0xF;
  v20.val[2].i64[1] = ((_BYTE)v8 + 6) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v8 + 5) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v8 + 4) & 0xF;
  v21.val[0].i64[0] = ((_BYTE)v8 + 3) & 0xF;
  v21.val[0].i64[1] = ((_BYTE)v8 + 2) & 0xF;
  v12 = *(_QWORD *)(v11 - 200) - 15;
  v13 = a2 + a1 + a3;
  v21.val[1].i64[0] = ((_BYTE)v8 + 1) & 0xF;
  v21.val[1].i64[1] = v8 & 0xF;
  v21.val[2].i64[0] = ((_BYTE)v8 - 1) & 0xF;
  v21.val[2].i64[1] = ((_BYTE)v8 + 14) & 0xF;
  v21.val[3].i64[0] = (v8 + 13) & 0xF;
  v21.val[3].i64[1] = ((_BYTE)v8 + 12) & 0xF;
  v14.i64[0] = 0x8181818181818181;
  v14.i64[1] = 0x8181818181818181;
  v15.i64[0] = 0x3232323232323232;
  v15.i64[1] = 0x3232323232323232;
  v20.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v8 + 10) & 0xF;
  v16.i64[0] = vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v16.i64[1] = vqtbl4q_s8(v21, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v17 = vrev64q_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 + v13), *(int8x16_t *)(v7 + v20.val[0].i64[0] - 15)), *(int8x16_t *)(v6 + v20.val[0].i64[0] + ((a5 - 740) ^ 0x3CELL) - 15)), *(int8x16_t *)(v20.val[0].i64[0] + v5 - 14)));
  v18 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v17, v17, 8uLL), v15), vmulq_s8(v16, v14)));
  *(int8x16_t *)(v12 + v13) = vextq_s8(v18, v18, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((2701 * ((v9 & 0xFFFFFFF0) == 16)) ^ a5)) - 12))();
}

void sub_21E08CE3C()
{
  JUMPOUT(0x21E08CDB4);
}

uint64_t sub_21E08CE48(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((a8 - 1208418701) & 0x4806FFE9 ^ 0x862) * (v8 != a4)) ^ a8))
                            - 4))();
}

uint64_t sub_21E08CE84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  char v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8 * ((121 * ((v7 & 8) != ((a7 - 1671906603) & 0x63A74FED ^ 0xCEC))) ^ a7))
                            - 4))();
}

uint64_t sub_21E08CED0(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  char v16;
  uint64_t v17;
  int8x16x4_t v19;

  *(_DWORD *)(v11 - 216) = v12;
  v13 = *(_QWORD *)(v11 - 200) - 7;
  *(_DWORD *)(v11 - 228) = v8 & 0xFFFFFFF8;
  *(_DWORD *)(v11 - 224) = v8;
  v14 = -a4;
  v15 = a2 + a1;
  v16 = v9 + a2 + a1;
  v17 = (v15 + a3 + v14);
  v19.val[0].i64[0] = v17 & 0xF;
  v19.val[0].i64[1] = (v16 + 10 + (_BYTE)v14) & 0xF;
  v19.val[1].i64[0] = (v16 + 9 + (_BYTE)v14) & 0xF;
  v19.val[1].i64[1] = (v16 + 8 + (_BYTE)v14) & 0xF;
  v19.val[2].i64[0] = (v16 + 7 + (_BYTE)v14) & 0xF;
  v19.val[2].i64[1] = (v16 + 6 + (_BYTE)v14) & 0xF;
  v19.val[3].i64[0] = (v16 + 5 + (_BYTE)v14) & 0xF;
  v19.val[3].i64[1] = (v7 + (_BYTE)v14 + ((v10 + 90) ^ 2)) & 0xF;
  *(int8x8_t *)(v13 + v17) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v13 + v17), *(int8x8_t *)(v6 + v19.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v19.val[0].i64[0] + v5 - 5), *(int8x8_t *)(v19.val[0].i64[0] + v4 - 6)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x8181818181818181)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(*(_QWORD *)(v11 - 208)
                                                     + 8 * ((3289 * (8 - (v8 & 0xFFFFFFF8) == v14)) ^ (v10 - 3058)))
                                         - 8))((__n128)xmmword_21E17F900);
}

void sub_21E08D00C()
{
  JUMPOUT(0x21E08CF34);
}

uint64_t sub_21E08D014(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (361 * (*(_DWORD *)(v2 - 224) == *(_DWORD *)(v2 - 228)))))
                            - ((a1 + 1288267431) & 0xB3369DFE ^ 0xCE0)))();
}

uint64_t sub_21E08D060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (a6 - 1314556581);
  *(_BYTE *)(*(_QWORD *)(v11 - 200) + v12) ^= *(_BYTE *)(v9 + (v12 & 0xF)) ^ *(_BYTE *)((v12 & 0xF) + v8 + 2) ^ *(_BYTE *)((v12 & 0xF) + v6 + 1) ^ (-127 * (v12 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((502 * (a6 - 1 == v7)) ^ (a5 - 1043))) - 12))();
}

void sub_21E08D0D4()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1705772967)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 24) = v1;
}

void sub_21E08D138(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL) - 1810943893) > 0x14;
  __asm { BR              X10 }
}

uint64_t sub_21E08D1A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  int v4;

  *(_DWORD *)(*(_QWORD *)(a1 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E831) = v3;
  v4 = *v2 - ((2 * *v2 + 136208598) & 0xC1E85D8) + 438203223;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1
                                                     + 8
                                                     * ((189
                                                       * (((2 * v4) & 0xF0B37FDC ^ 0x1205D8)
                                                        + (v4 ^ 0xFE56FD02)
                                                        - 1880111116 != 139036642)) ^ 0x25Bu))
                                         - 8))(0);
}

uint64_t sub_21E08D258()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((158 * ((v2 + v1 - 2019147758) >= 8)) ^ 0x668u)))();
}

uint64_t sub_21E08D2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((227
                                * (((v3 - 1) ^ (a2 - a1 + 0x1C73FCAA0D59E845 < (unint64_t)((v3 + 543723927) & 0xEFF)
                                                                                                - 1759)) & 1)) ^ v3)))();
}

uint64_t sub_21E08D348(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  unsigned int v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4 + 8 * (a4 ^ (493 * (v5 > 0x1F))))
                                         - (a4 - 64983275)
                                         + 4229985804))((a4 - 42));
}

uint64_t sub_21E08D388@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v6 = v5 + ((5 * (a1 ^ 0xFC2077BB)) ^ 0xF7B67076);
  v7 = *(_OWORD *)(a2 + v6 - 15);
  v8 = *(_OWORD *)(a2 + v6 - 31);
  v9 = v3 + v6;
  *(_OWORD *)(v9 - 15) = v7;
  *(_OWORD *)(v9 - 31) = v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8
                                                           * ((3956 * ((v4 & 0xFFFFFFE0) == 32)) ^ (a1 + 64982575)))
                                          - 4))(4155928694);
}

void sub_21E08D400()
{
  JUMPOUT(0x21E08D3B8);
}

uint64_t sub_21E08D40C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4 + 8 * (v7 ^ (230 * (v5 != v6))))
                                         - ((((v7 - 1995) | 0x641u) + a4) ^ (unint64_t)(a2 + 12))))(0);
}

uint64_t sub_21E08D448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  char v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((a5 ^ 0xFC3 ^ ((v6 & 0x18) == 0)) & 1) == 0)
                                          * (((a5 - 450873346) & 0x1ADFC7F5) - 1264)) ^ a5))
                            - 12))();
}

uint64_t sub_21E08D498@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  *(_QWORD *)(v3 - 7 + (v6 + v5 + v7 - v8)) = *(_QWORD *)(a2 - 7 + (v6 + v5 + v7 - v8));
  return (*(uint64_t (**)(void))(v2 + 8 * (((v8 - (v4 & 0xFFFFFFF8) == -8) * (((a1 - 130) | 4) + 1172)) ^ a1)))();
}

uint64_t sub_21E08D4EC(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;

  *(_QWORD *)(a3 + v6) = *(_QWORD *)(v5 + v6);
  return (*(uint64_t (**)(void))(v3 + 8 * (((v7 == 0) * v4) ^ a1)))();
}

uint64_t sub_21E08D518(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v4
                                                            + 8
                                                            * ((63 * ((((v6 - 1591) ^ (v5 == a4)) & 1) == 0)) ^ v6)))(0, a2, (v6 - 1591) | 0x902u);
}

uint64_t sub_21E08D550@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(v5 + (a1 - 139036643)) = *(_BYTE *)(a3 + (a1 - 139036643));
  return (*(uint64_t (**)(_QWORD))(v3
                                           + 8
                                           * ((3957
                                             * (a1
                                              + 64981483
                                              + ((((a2 - 1458671939) & 0x56F18E77) - 601875015) | 0x20005204) != v4)) ^ (a2 - 1458671939) & 0x56F18E77u)))(0);
}

void sub_21E08D5C8()
{
  JUMPOUT(0x21E08D594);
}

void sub_21E08D5DC(uint64_t a1)
{
  unint64_t v2;
  char v3;

  v2 = (unint64_t)&v3 ^ qword_2553CC488 ^ qword_2553B61C8;
  qword_2553CC488 = (1056581677 * v2) ^ 0x3F506021E86BC7B2;
  qword_2553B61C8 = 1056581677 * (v2 ^ 0x3F506021E86BC7B2);
  ((void (*)(char *, void (*)()))*(&off_24E21C7C0
                                            + ((45
                                                                             * ((qword_2553B61C8 - qword_2553CC488) ^ 0xB2)) ^ byte_21E1A50C0[~byte_21E1990B0[(45 * ((qword_2553B61C8 - qword_2553CC488) ^ 0xB2))]])
                                            + 294))((char *)*(&off_24E21C7C0+ ((45 * ((45 * v2) ^ qword_2553B61C8)) ^ byte_21E1B1320[byte_21E1A51C0[(45 * ((45 * v2) ^ qword_2553B61C8))] ^ 0x22])+ 284)- 4, sub_21E0E1814);
  __asm { BR              X10 }
}

uint64_t sub_21E08D704()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((3730 * (*(_QWORD *)(*(_QWORD *)(v1 + 2248) - 4) == 0)) ^ 0x7E0u))
                            - 8))();
}

uint64_t sub_21E08D73C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 2174)))(v1);
}

void sub_21E08D758(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 1734664879 * (a1 ^ 0x2FDB281A);
  __asm { BR              X17 }
}

uint64_t sub_21E08D884()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ (29 * (v1 == 0xDE3E0F6E))))
                                                           - 12))(744 * (v0 ^ 0x24Cu) + 1498162617, 29, 1441090404);
}

uint64_t sub_21E08D8E0@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BOOL4 v15;

  v13 = (a3 - 1441090404);
  v14 = ((v9 - 574089363) & 0x2237EEFB ^ 0x8B7) & v13;
  *(_BYTE *)(a4 + v13) = *(_BYTE *)(v7 + v14) ^ *(_BYTE *)(v4 + v13) ^ *(_BYTE *)(v8 + v14) ^ *(_BYTE *)(v14 + v6 + 2) ^ (-47 * v14);
  v15 = v10 > a1;
  if (v15 == a3 + 1355712043 < v5)
    v15 = a3 + 1355712043 < v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((!v15 * a2) ^ v9)) - 12))();
}

uint64_t sub_21E08D98C()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (((2 * v0) ^ 0xE465D878) & (2 * v1) ^ 0xA4641EDC) + (v1 ^ 0xAC0CE080) - 303056674 != 1612884172;
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 | v3 | (4 * v3))))();
}

uint64_t sub_21E08D9F0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((a4 + a3 - 1915940846 >= (((v4 ^ 0x79E) + 1471863656) & 0xA8452BDF) - 2956)
                                     * ((((v4 ^ 0x79E) + 506819959) & 0xE1CA8F7F) - 2346)) ^ v4 ^ 0x79E)))();
}

uint64_t sub_21E08DA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (a7 ^ (46 * (v7 > 0xFFFFFFEF))))
                            - (((a7 - 2026) + 2615) ^ a7 ^ 0x2D7u)))();
}

uint64_t sub_21E08DAA0(uint64_t a1, uint64_t a2, int a3, int a4, int a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL4 v21;

  v12 = a4 + a3 + (v6 ^ 0xACD ^ (a5 + 2948));
  v13 = v10 - 0x2F36DA607BEC4C16 + v12;
  v14 = v12 & (v6 ^ 0x156);
  v15 = v14 + v8 - v13;
  v16 = (v14 | v9) - v13;
  v17 = (v14 | v7) - v13;
  v21 = (unint64_t)(a6 - (v10 - 0x2F36DA607BEC4C16) - 0x61B4415FE1FE4C86) < 0x10
     || v15 < 0x10
     || v16 < 0x10
     || (unint64_t)(v17 + 2) < 0x10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((55 * v21) ^ v6)) - 12))();
}

uint64_t sub_21E08DB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *(_QWORD *)(v8 + 8 * (v5 ^ 0xA8 ^ ((v7 > 0xF) | (4 * (v7 > 0xF)))));
  *(_DWORD *)(v9 - 144) = v6;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v10
                                                                                      - ((v5 ^ 0xA8u)
                                                                                       + 517)
                                                                                      - ((((v5 ^ 0xA8) + 343) | 0x811u) ^ 0xFFFFFFFFFFFFF74FLL)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_21E08DB8C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int8x16_t v28;
  uint64_t v29;
  int8x16_t v30;
  int8x16_t v31;
  int8x16x4_t v33;
  int8x16x4_t v34;

  *(_DWORD *)(v27 - 120) = (v20 ^ 0x64) + v25;
  *(_DWORD *)(v27 - 128) = v25 + 11;
  *(_DWORD *)(v27 - 136) = v25 + 10;
  v33.val[1].i64[0] = ((_BYTE)v25 + 1) & 0xF;
  v33.val[1].i64[1] = v25 & 0xF;
  v33.val[2].i64[0] = ((_BYTE)v25 - 1) & 0xF;
  v33.val[2].i64[1] = ((_BYTE)v25 + 14) & 0xF;
  v33.val[3].i64[0] = ((_BYTE)v25 + 13) & 0xF;
  v33.val[3].i64[1] = ((_BYTE)v25 + 12) & 0xF;
  v28.i64[0] = 0xD1D1D1D1D1D1D1D1;
  v28.i64[1] = 0xD1D1D1D1D1D1D1D1;
  v29 = (v25 + v24);
  v33.val[0].i64[0] = ((_BYTE)v25 + (_BYTE)v24) & 0xF;
  v33.val[0].i64[1] = *(_DWORD *)(v27 - 120) & 0xF;
  v30.i64[0] = vqtbl4q_s8(v33, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v34.val[0].i64[1] = *(_DWORD *)(v27 - 136) & 0xF;
  v34.val[1].i64[1] = ((_BYTE)v25 + 8) & 0xF;
  v34.val[2].i64[1] = ((_BYTE)v25 + 6) & 0xF;
  v34.val[3].i64[1] = ((_BYTE)v25 + 4) & 0xF;
  v34.val[0].i64[0] = *(_DWORD *)(v27 - 128) & 0xF;
  v34.val[1].i64[0] = ((_BYTE)v25 + 9) & 0xF;
  v34.val[2].i64[0] = (v25 + 7) & 0xF;
  v34.val[3].i64[0] = ((_BYTE)v25 + 5) & 0xF;
  v30.i64[1] = vqtbl4q_s8(v34, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v31 = vrev64q_s8(vmulq_s8(v30, v28));
  *(int8x16_t *)(a1 - 15 + v29) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + (v29 & 0xF) - 15), *(int8x16_t *)(v19 - 15 + v29)), veorq_s8(*(int8x16_t *)(v23 + (v29 & 0xF) - 15), *(int8x16_t *)((v29 & 0xF) + v21 - 13))), vextq_s8(v31, v31, 8uLL));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a19
                                                      + 8
                                                      * ((100
                                                        * ((((v20 ^ 0x64) - 386) | 0x42) - 578 != (v26 & 0xFFFFFFF0))) ^ v20 ^ 0x64))
                                          - 8))(v26);
}

uint64_t sub_21E08DD10(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((v6 - 228) ^ v6 ^ 0xAEA ^ 0x354) * (a1 != a6)) ^ v6)) - 12))();
}

uint64_t sub_21E08DD50(unsigned int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v1 ^ (159 * ((a1 >> 3) & 1))))
                            - (((v1 ^ 0xA37u) + 59) ^ 0xB98)))();
}

uint64_t sub_21E08DD88@<X0>(char a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  int v32;
  char v33;
  uint64_t v34;
  int8x16x4_t v36;

  *(_DWORD *)(v31 - 152) = v30;
  *(_QWORD *)(v31 - 120) = v25 - 7;
  *(_QWORD *)(v31 - 128) = a6 - 7;
  *(_DWORD *)(v31 - 160) = v30 & 0xFFFFFFF8;
  *(_DWORD *)(v31 - 136) = 8 - (v30 & 0xFFFFFFF8);
  v32 = -a5;
  v33 = a1 + a3 + a2;
  v34 = (a4 + a3 + a2 + 16 + v32);
  v36.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a3 + (_BYTE)a2 + 16 + (_BYTE)v32) & 0xF;
  v36.val[0].i64[1] = (v33 + 2 + (_BYTE)v32) & 0xF;
  v36.val[1].i64[0] = (v29 + (_BYTE)v32 + ~((_BYTE)v24 - 43)) & 0xF;
  v36.val[1].i64[1] = (v29 + (_BYTE)v32) & 0xF;
  v36.val[2].i64[0] = (v33 + 15 + (_BYTE)v32) & 0xF;
  v36.val[2].i64[1] = (v33 + 14 + (_BYTE)v32) & 0xF;
  v36.val[3].i64[0] = (v33 + 13 + (_BYTE)v32) & 0xF;
  v36.val[3].i64[1] = (v33 + 12 + (_BYTE)v32) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v31 - 128) + v34) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v27 + (v34 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v31 - 120) + v34)), veor_s8(*(int8x8_t *)(v28 + (v34 & 0xF) - 7), *(int8x8_t *)((v34 & 0xF) + v26 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v36, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xD1D1D1D1D1D1D1D1)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a24 + 8 * ((210 * (*(_DWORD *)(v31 - 136) == v32)) ^ v24)) - 8))((__n128)xmmword_21E17F900);
}

void sub_21E08DED0()
{
  JUMPOUT(0x21E08DDF0);
}

uint64_t sub_21E08DED8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((v0 | 0x40) ^ (828 * (*(_DWORD *)(v2 - 152) == *(_DWORD *)(v2 - 160)))))
                            - (((v0 | 0x40) + 1085230481) & 0xBF50B9B8)
                            - 988 * ((v0 | 0x40) ^ 0x16Du)
                            + 5184))();
}

uint64_t sub_21E08DF44@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_BYTE *)(a2 + (a1 + v7)) = *(_BYTE *)(v4 + ((a1 + v7) & 0xFLL)) ^ *(_BYTE *)(v2
                                                                                             + (a1 + v7)) ^ *(_BYTE *)(v5 + (((_BYTE)a1 + (_BYTE)v7) & 0xF)) ^ *(_BYTE *)((((_BYTE)a1 + (_BYTE)v7) & 0xF) + v3 + 2) ^ (-47 * ((a1 + v7) & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((1470 * (((a1 - 1 == v6) ^ (v8 - 1)) & 1)) ^ (v8 - 2370)))
                            - 12))();
}

uint64_t sub_21E08DFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int8x16_t v28;
  _BOOL4 v30;

  v23 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(v18 + 8));
  v24 = vextq_s8(v23, v23, 8uLL);
  v25.i64[0] = 0xFAFAFAFAFAFAFAFALL;
  v25.i64[1] = 0xFAFAFAFAFAFAFAFALL;
  v26 = vandq_s8(vaddq_s8(v24, v24), v25);
  v25.i64[0] = 0xFDFDFDFDFDFDFDFDLL;
  v25.i64[1] = 0xFDFDFDFDFDFDFDFDLL;
  v27 = veorq_s8(v24, v25);
  v25.i64[0] = 0xF2F2F2F2F2F2F2F2;
  v25.i64[1] = 0xF2F2F2F2F2F2F2F2;
  v28 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v27, v25), v26), (int8x16_t)xmmword_21E17F970));
  *(int8x16_t *)(v22 - 112) = vextq_s8(v28, v28, 8uLL);
  v30 = v19 != 0x2F36DA607BEC4C16 && a9 != 0;
  HIDWORD(a14) = 2 * v20;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * (int)(a7 ^ (859 * v30))) - ((((_DWORD)a7 + 464979591) & 0xE448FBFF) + (unint64_t)(a7 - 1)) + 5098))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_21E08E070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unsigned int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  _BOOL4 v22;

  v20 = (HIDWORD(a13) & 0xFF9D598E) + (v18 ^ 0xFFCEACC7);
  v22 = (((v17 + 648) ^ 0xB30) & (v20 + 9)) != 0 || v20 == -3232569;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (int)((15 * v22) ^ v17)) - (v17 ^ 0x8BBLL)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_21E08E0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  uint64_t v27;
  unsigned int v28;

  v28 = a12 - (a15 & 0xD5FC7956) + a27 - 147 + ((a27 - 1453907849) & 0x56A8DFDD) - 1030058638;
  return ((uint64_t (*)(void))(*(_QWORD *)(v27
                                        + 8
                                        * ((120
                                          * (((2 * v28) & 0xD9EFDDD6 ^ 0xD1EC5956) + (v28 ^ 0x8609D240) - 70602013 == 1757585870)) ^ a27))
                            - 12))();
}

uint64_t sub_21E08E1B8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((((v0 + 228) | 4) - 2059) ^ (v0 + 1964141907) & 0x8AED8BC4)
                                               * ((v2 + v1 - 1828187883) > 7)) ^ v0))
                            - 12))();
}

uint64_t sub_21E08E244(int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2452 * ((((a1 + v3 - 16) < 0xFFFFFFF0) ^ (a3 - 1)) & 1)) ^ a3)))();
}

uint64_t sub_21E08E27C@<X0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v23;
  int v26;

  v11 = (v9 + v8 + a1);
  v12 = v11 + a5 - 0x2F36DA607BEC4C16 + 1;
  v13 = ((_BYTE)v9 + (_BYTE)v8 + (_BYTE)a1) & 0xF;
  v14 = v13 - v11;
  v15 = v5 + v14;
  v16 = v13 + 37 * (a2 ^ 0x3F0u) - 1923;
  v17 = v5 + v16;
  v18 = v6 + v14;
  v19 = v6 + v16;
  v20 = v14 + v7 + 1;
  v21 = v13 + 13 * (a2 ^ 0x320u) + v7 - 2962;
  v23 = v15 < v12 && a3 < v17;
  if (v18 < v12 && a3 < v19)
    v23 = 1;
  v26 = v20 < v12 && a3 < v21 || v23;
  return (*(uint64_t (**)(void))(v10 + 8 * ((3654 * (v26 ^ 1)) ^ a2)))();
}

uint64_t sub_21E08E334(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((((v3 - 617) ^ (v3 - 140) ^ 0x3D2)
                                                                         * (v2 < 0x10)) ^ v3))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_21E08E368@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  int8x16_t v29;
  uint64_t v30;
  int8x16_t v31;
  int8x16_t v32;
  int8x16x4_t v34;
  int8x16x4_t v35;

  *(_DWORD *)(v28 - 128) = a2 + 6;
  v34.val[1].i64[0] = ((_BYTE)a2 + 12) & 0xF;
  v34.val[1].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v34.val[2].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v34.val[2].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v34.val[3].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v34.val[3].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v29.i64[0] = 0xB7B7B7B7B7B7B7B7;
  v29.i64[1] = 0xB7B7B7B7B7B7B7B7;
  v30 = a1 + v27 + v26 - 2990 + (a3 ^ 0xD56u);
  v34.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v27 + (_BYTE)v26 + 82 + (a3 ^ 0x56)) & 0xF;
  v34.val[0].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v31.i64[0] = vqtbl4q_s8(v34, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v35.val[0].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v35.val[1].i64[1] = (a2 + 3) & 0xF;
  v35.val[2].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v35.val[3].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v35.val[0].i64[0] = *(_DWORD *)(v28 - 128) & 0xF;
  v35.val[1].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v35.val[2].i64[0] = (a2 + 2) & 0xF;
  v35.val[3].i64[0] = a2 & 0xF;
  v31.i64[1] = vqtbl4q_s8(v35, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v32 = vrev64q_s8(vmulq_s8(v31, v29));
  *(int8x16_t *)(a4 - 15 + v30) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + (v30 & 0xF) - 15), *(int8x16_t *)(a4 - 15 + v30)), veorq_s8(*(int8x16_t *)(v23 + (v30 & 0xF) - 15), *(int8x16_t *)((v30 & 0xF) + v24 - 14))), vextq_s8(v32, v32, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a22 + 8 * ((2642 * ((v25 & 0xFFFFFFF0) == 16)) ^ a3)) - 4))();
}

void sub_21E08E4CC()
{
  JUMPOUT(0x21E08E458);
}

uint64_t sub_21E08E4D8@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  unsigned int v25;
  char *v26;
  int v27;
  unsigned int v28;
  int v29;
  char v30;
  unsigned __int8 v31;
  int v32;
  int v33;
  unsigned int v34;
  char *v35;
  unsigned int v36;
  char *v37;
  int v38;
  unsigned __int8 v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned __int8 v60;
  int v61;
  unsigned __int8 v62;
  char v63;
  char v64;
  BOOL v65;
  char v66;
  char v67;
  unsigned int v68;
  char v69;
  unsigned __int8 v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  char *v76;
  int v77;
  char *v78;
  unsigned int v79;
  char *v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  uint64_t v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  unsigned int v268;
  unsigned int v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int v273;
  char *v274;
  int v275;
  uint64_t v276;
  int v277;
  int v278;
  unsigned int v279;
  uint64_t v280;
  int v281;
  int v282;
  int v283;
  unsigned int v284;
  uint64_t v285;
  int v286;
  unint64_t v287;
  unsigned int v288;
  uint64_t v289;
  char *v290;
  char *v291;
  int v292;
  uint64_t v293;
  int v294;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  char *v301;
  uint64_t v302;
  unsigned int v303;
  int v304;
  uint64_t v305;

  v22 = (v20 - 392482082) & 0x1764CFBD;
  v23 = (uint64_t)*(&off_24E21C7C0 + v20 - 2016);
  v24 = *(unsigned __int8 *)(v23 + (*(_BYTE *)(v21 - 111) ^ 0xDE ^ ((_BYTE)v20 - 34) & 0xBDu));
  v25 = v24 - ((2 * v24 + 60) & 0xFFFFFFDF) - 115;
  v26 = (char *)*(&off_24E21C7C0 + (v20 ^ 0x9CF)) - 12;
  v27 = (v25 >> 3) ^ (v25 >> 1) ^ 0x3A;
  v28 = v25 ^ 0xA5 ^ (v27 - ((2 * v27) & 0xFFFFFFDF) + 111);
  v29 = (v28 << 16) - ((v28 << 17) & 0x5A0000) + 1714270369;
  v30 = *(_BYTE *)(v23 + (*(unsigned __int8 *)(v21 - 99) ^ 0x91));
  v31 = v30 - ((2 * v30 + 60) & 0x44) - 64;
  v32 = (v31 >> 3) ^ (v31 >> 1);
  v33 = ((-55 * v26[*(unsigned __int8 *)(v21 - 109) ^ 0xD3] + 57) ^ 0x5B7CF57F)
      + 2 * ((-55 * v26[*(unsigned __int8 *)(v21 - 109) ^ 0xD3] + 57) & 0x7F)
      - 1534915967;
  v34 = (v33 - (v29 ^ 0x662DB0A1 | v33)) ^ ((v29 ^ 0x99D24F5E) + 1);
  v35 = (char *)*(&off_24E21C7C0 + v20 - 2176) - 4;
  v36 = ((v34 - ((2 * v34) & 0xCC5B6142) + 1714270369) ^ v29) + v33;
  v37 = (char *)*(&off_24E21C7C0 + v20 - 1703) - 4;
  LOBYTE(v34) = *(_BYTE *)(v23 + (*(unsigned __int8 *)(v21 - 107) ^ 0x39));
  v38 = (((v35[*(unsigned __int8 *)(v21 - 98) ^ 0x26] - 120) ^ 0x8D) << 8) | ((v31 ^ 0xD4 ^ ((v32 ^ 0x45) - ((2 * v32) & 0x44) - 94)) << 16) | (-55 * v26[*(unsigned __int8 *)(v21 - 97) ^ 0x54] + 57) | ((v37[*(unsigned __int8 *)(v21 - 100) ^ 0xCBLL] ^ 0xA7) << 24);
  v39 = v34 - ((2 * v34 + 60) & 0xD6) + 9;
  v40 = (v39 >> 3) ^ (v39 >> 1);
  LOBYTE(v29) = *(_BYTE *)(v23 + (*(unsigned __int8 *)(v21 - 103) ^ 0x8CLL))
              - ((2 * *(_BYTE *)(v23 + (*(unsigned __int8 *)(v21 - 103) ^ 0x8CLL)) + 60) & 0x44)
              - 64;
  v41 = ((v37[*(unsigned __int8 *)(v21 - 108) ^ 0x7DLL] ^ 0xD0) << 24) | ((v39 ^ 0x65 ^ ((v40 ^ 0x68) - 2 * ((v40 ^ 0x68) & 0xEF ^ v40 & 4) - 21)) << 16) | (((v35[*(unsigned __int8 *)(v21 - 106) ^ 0x7ALL] - 120) ^ 0x46) << 8);
  v42 = (v29 >> 3) ^ (v29 >> 1);
  v300 = v37;
  v301 = v35;
  HIDWORD(a14) = 57;
  v43 = (v41 & 0xFFFFFF00 | (-55 * v26[*(unsigned __int8 *)(v21 - 105) ^ 0x41] + 57)) ^ 0x59F0EBC7;
  v44 = v36 ^ (((v35[*(unsigned __int8 *)(v21 - 110) ^ 0x80] - 120) ^ 0x21) << 8) ^ ((v37[*(unsigned __int8 *)(v21 - 112) ^ 0xFALL] ^ 0xFFFFFFFD) << 24) ^ 0x3171FA2D;
  v303 = v38 ^ 0xC5B82DA5;
  v45 = (((v37[*(unsigned __int8 *)(v21 - 104) ^ 0x20] ^ 0x59) << 24) | (((v35[*(unsigned __int8 *)(v21 - 102) ^ 0x6CLL] - 120) ^ 0x58) << 8) | ((v29 ^ 0xE5 ^ ((v42 ^ 0x45) - ((2 * v42) & 0x44) - 94)) << 16) | (-55 * v26[*(unsigned __int8 *)(v21 - 101) ^ 0x58] + 57)) ^ 0x109FCC1C;
  HIDWORD(v299) = v19 + 3232569;
  HIDWORD(v298) = v22 ^ 0xB46;
  LODWORD(v298) = v22 ^ 0xAB8;
  HIDWORD(v297) = v22 ^ 0xB58;
  LODWORD(v297) = v22 ^ 0xAC0;
  HIDWORD(v296) = v22 ^ 0xACC;
  *(_DWORD *)(v21 - 120) = v22;
  LODWORD(v296) = v22 & 0x6B4622A;
  HIDWORD(a17) = 0;
  *(_QWORD *)(v21 - 144) = 7;
  v302 = (v22 - 103948245) & 0x6321F7F;
  v305 = ((_DWORD)v302 + 431093090) ^ 0x19B200A0u;
  LOBYTE(v33) = *(_BYTE *)(v23 + (a1[v305] ^ 0x6FLL));
  LOBYTE(v29) = 57 - 55 * v26[a1[7] ^ 0xD4];
  LOBYTE(v33) = v33 - ((2 * v33 + 28) & 0x14) - 88;
  *(_QWORD *)(v21 - 168) = 15;
  v46 = (v33 >> 3) ^ (v33 >> 1);
  v47 = (v33 ^ 0xA4 ^ ((v46 ^ 0x54) - ((2 * v46) & 0x14) - 118)) << 16;
  LOBYTE(v46) = v26[a1[15] ^ 0xB2];
  v48 = v37[a1[4] ^ 0x44] ^ 0x12;
  *(_QWORD *)(v21 - 128) = 2;
  v49 = v29 | (v48 << 24);
  LOBYTE(v48) = 57 - 55 * v46;
  LOBYTE(v29) = v35[a1[2] ^ 1];
  *(_QWORD *)(v21 - 176) = 5;
  LOBYTE(v46) = *(_BYTE *)(v23 + (a1[5] ^ 0x61));
  *(_QWORD *)(v21 - 136) = 12;
  LOBYTE(v46) = v46 - ((2 * v46 + 60) & 0x72) + 87;
  v50 = (v46 >> 3) ^ (v46 >> 1) ^ 0x1B;
  v51 = v47 & 0xFFFF00FF | (((((2 * v29 + 78) & 0xC3) + ((v29 - 89) ^ 0xE1)) ^ 0x74) << 8);
  LOBYTE(v29) = v50 - ((2 * v50) & 0x72) + 57;
  v52 = a1[8];
  v53 = v49 & 0xFF00FFFF | ((v46 ^ 0xD3 ^ v29) << 16);
  v54 = v37[a1[12] ^ 0x6CLL] ^ 0xAF;
  *(_QWORD *)(v21 - 160) = 6;
  v55 = v48 | (v54 << 24);
  v56 = a1[6];
  v57 = v37[v52 ^ 0x89] ^ 0xA5;
  *(_QWORD *)(v21 - 152) = 3;
  v58 = v53 & 0xFFFF00FF | (((v35[v56 ^ 0xC2] - 120) ^ 0xB0) << 8);
  v59 = v51 & 0xFFFFFF00 | (57 - 55 * v26[a1[3] ^ 9]);
  v60 = 57 - 55 * v26[a1[11] ^ 0x66];
  LOBYTE(v56) = v35[a1[10] ^ 0xB0] - 120;
  *(_QWORD *)(v21 - 192) = 10;
  *(_QWORD *)(v21 - 184) = 9;
  LOBYTE(v52) = *(_BYTE *)(v23 + (a1[9] ^ 0x89));
  v61 = (v57 << 24) | ((v56 ^ 0x5F) << 8);
  v62 = v52 - ((2 * v52 + 60) & 0x48) - 62;
  LOBYTE(v56) = v62 >> 2;
  v63 = ((((((v62 ^ 0x72 ^ v56) + (v56 ^ 0x29) + 1) ^ (-30 - v52))
                          - ((2 * (((v62 ^ 0x72 ^ v56) + (v56 ^ 0x29) + 1) ^ (-30 - v52))) & 0x48)
                          - 92) ^ v62)
                        + (v56 ^ 0x29)) >> 1;
  v64 = (v63 & 0x20 ^ 0x75) + 2 * (v63 & 0x20);
  v65 = ((v64 - 117) & (v62 ^ 0xA0) & 0xE0) == 0;
  v66 = v64 - 33;
  v67 = -55 - v64;
  if (v65)
    v67 = v66;
  v68 = v61 & 0xFF00FFFF | ((((v62 ^ 0xE5) + v67 - 84) ^ v63 & 0xDF) << 16);
  v69 = *(_BYTE *)(v23 + (a1[13] ^ 0xE5));
  v70 = v69 - ((2 * v69 + 60) & 0xE7) + 17;
  v71 = (v70 >> 3) ^ (v70 >> 1) ^ 0x67;
  v72 = v55 & 0xFF00FFFF | ((v70 ^ 0xFA ^ (v71 - ((2 * v71) & 0xE7) - 13)) << 16);
  v73 = (v59 | ((v37[*a1 ^ 0xF4] ^ 9) << 24)) ^ v44;
  v74 = v58 ^ v43;
  v75 = (v68 & 0xFFFFFF00 | v60) ^ v45;
  v76 = (char *)*(&off_24E21C7C0 + HIDWORD(v298)) - 4;
  v77 = *(_DWORD *)(v21 - 120);
  v78 = (char *)*(&off_24E21C7C0 + v77 - 2416) - 12;
  v79 = *(_DWORD *)&v76[4 * (HIBYTE(v73) ^ 0x36)] ^ 0x47DAECDB;
  v80 = (char *)*(&off_24E21C7C0 + v77 - 2818) - 12;
  v81 = *(_DWORD *)&v78[4 * (BYTE1(v75) ^ 0xB7)] + 2123092289;
  v82 = (v79 >> 3) & 0x1597797F ^ (2 * v81) ^ (*(_DWORD *)&v80[4 * (BYTE2(v74) ^ 0x4B)] + 200408077);
  v83 = v72 ^ ((((v35[a1[14] ^ 0x87] - 120) ^ 0xB2) << 8)
             - 977785469
             - ((((v35[a1[14] ^ 0x87] - 120) ^ 0xB2) << 9) & 0x5A00)) ^ v303;
  v84 = (uint64_t)*(&off_24E21C7C0 + v298);
  v85 = v81 ^ v79 ^ *(_DWORD *)(v84 + 4 * ((v72 ^ v303 ^ 0x83) ^ 0xB2u)) ^ (v82
                                                                                             - 2116476967
                                                                                             - ((2 * v82) & 0x3B23FB2));
  v86 = *(_DWORD *)&v76[4 * (HIBYTE(v74) ^ 0xB)] ^ 0x47DAECDB;
  v87 = *(_DWORD *)&v78[4
                      * (((unsigned __int16)(((((v35[a1[14] ^ 0x87] - 120) ^ 0xB2) << 8)
                                                             + 11651
                                                             - ((((unsigned __int16)(v35[a1[14] ^ 0x87]
                                                                                   - 120) ^ 0xB2) << 9) & 0x5A00)) ^ v303) >> 8) ^ 0x82)]
      + 2123092289;
  v88 = (*(_DWORD *)&v80[4 * (BYTE2(v75) ^ 0x47)] + 200408077) ^ (v86 >> 3) & 0x1597797F ^ (2 * v87);
  v89 = *(_DWORD *)(v84 + 4 * (v73 ^ 0xC7u)) ^ v86 ^ v87 ^ (v88 - 2116476967 - ((2 * v88) & 0x3B23FB2));
  v90 = *(_DWORD *)&v76[4 * (HIBYTE(v75) ^ 0x44)] ^ 0x47DAECDB;
  v91 = (v90 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v83) ^ 0xB3)] + 200408077);
  v92 = *(_DWORD *)&v78[4 * (BYTE1(v73) ^ 0x54)] + 2123092289;
  v93 = v92 ^ v90 ^ (2 * v92) ^ *(_DWORD *)(v84 + 4 * (v74 ^ 0xE4u)) ^ (v91
                                                                                         - 2116476967
                                                                                         - ((2 * v91) & 0x3B23FB2));
  v94 = *(_DWORD *)&v76[4 * (HIBYTE(v83) ^ 3)] ^ 0x47DAECDB;
  v95 = *(_DWORD *)&v78[4 * (BYTE1(v74) ^ 0x67)] + 2123092289;
  v96 = (v94 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v73) ^ 0x44)] + 200408077) ^ (2 * v95);
  v97 = v95 ^ v94 ^ (v96 - 2116476967 - ((2 * v96) & 0x3B23FB2)) ^ *(_DWORD *)(v84 + 4
                                                                                   * (v75 ^ 0x29u));
  v98 = ((v97 ^ 0x8A527538) & 0xFFEC3E6F) >> (v60 & 0x18) >> (v60 & 0x18 ^ 0x18);
  v99 = *(_DWORD *)&v76[4 * (HIBYTE(v85) ^ 0xC1)] ^ 0x47DAECDB;
  v100 = *(_DWORD *)&v78[4 * (BYTE1(v93) ^ 0x35)] + 2123092289;
  v101 = (v99 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4
                                                  * (((v89 & 0xFFFFFF55 ^ 0xEE53C7BE) >> (v62 & 0x10) >> (v62 & 0x10 ^ 0x10)) ^ 0x76)]
                                  + 200408077) ^ (2 * v100);
  v102 = *(_DWORD *)(v84
                   + 4
                   * ((v97 ^ 0x38 ^ -(v97 ^ 0x38) ^ ((v97 ^ 0xFFFFFFDF)
                                                                                     + 25))
                    + 24)) ^ v99;
  v103 = *(_DWORD *)&v76[4 * (HIBYTE(v89) ^ 0xAE)] ^ 0x47DAECDB;
  v104 = v102 ^ v100 ^ (v101 - 2116476967 - ((2 * v101) & 0x3B23FB2));
  v105 = *(_DWORD *)&v78[4 * (BYTE1(v97) ^ 0x81)] + 2123092289;
  v106 = (v103 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v93) ^ 0x2D)] + 200408077) ^ (2 * v105);
  v107 = *(_DWORD *)(v84 + 4 * (v85 ^ 0x91u)) ^ v105 ^ v103 ^ (v106
                                                                                - 2116476967
                                                                                - ((2 * v106) & 0x3B23FB2));
  v108 = *(_DWORD *)&v76[4 * (HIBYTE(v93) ^ 0xB3)] ^ 0x47DAECDB;
  v109 = (v108 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v97) ^ 0x24)] + 200408077);
  v110 = *(_DWORD *)&v78[4 * (BYTE1(v85) ^ 0x65)] + 2123092289;
  v111 = *(_DWORD *)(v84 + 4 * (v89 ^ 0xEu)) ^ v108 ^ v110 ^ ((v109 ^ (2 * v110))
                                                                               - 2116476967
                                                                               - ((2 * (v109 ^ (2 * v110))) & 0x3B23FB2));
  v112 = *(_DWORD *)&v76[4 * (v98 ^ 0x40)] ^ 0x47DAECDB;
  v113 = (v112 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v85) ^ 0x5D)] + 200408077);
  v114 = *(_DWORD *)&v78[4 * (BYTE1(v89) ^ 0x33)] + 2123092289;
  v115 = *(_DWORD *)(v84 + 4 * ((v93 ^ 0x29) + ((2 * v93) & 0x30 ^ 0xFFFFFFEF) + 25)) ^ v112 ^ v114 ^ ((v113 ^ (2 * v114)) - 2116476967 - ((2 * (v113 ^ (2 * v114))) & 0x3B23FB2));
  v116 = *(_DWORD *)&v76[4 * (HIBYTE(v104) ^ 0xB9)];
  v117 = (v115 ^ 0x4CAC6148u) >> ((BYTE1(v104) ^ 0x8E) & 0x18) >> ((BYTE1(v104) ^ 0x8E) & 0x18 ^ 0x18);
  v118 = ((v116 ^ 0xB8251324) - 1082817632) ^ ((v116 ^ 0x75090BB) + 1);
  v119 = (v118 - 122720444 - ((2 * v118) & 0xF15EDE88)) ^ v116;
  v120 = v119 - ((2 * v119 + 2129332030) & 0x99E48712) + 208127784;
  v121 = (v120 >> 3) & 0x1597797F ^ v120;
  v122 = v120 & 0x400;
  v123 = *(_DWORD *)&v80[4 * (BYTE2(v107) ^ 0xD3)];
  v65 = (v122 & (v123 + 1037)) == 0;
  v124 = v122 | 0x10020843;
  if (!v65)
    v124 = 537137286 - v124;
  v125 = v121 & 0xFFFFFBFF ^ 0xB29BF407 ^ (v123 - 68160566 + v124);
  v126 = v123 + 200408077;
  v127 = (v126 + v125 + 1) ^ ((v121 ^ 0xB29BF407) + 1);
  v128 = v121 ^ 0x2A6D5022 ^ (v127 + 1728666587 + (~(2 * v127) | 0x31ED484B));
  v129 = *(_DWORD *)&v78[4 * (BYTE1(v111) ^ 0x7C)] + 2123092289;
  v130 = v129 ^ *(_DWORD *)(v84 + 4 * (v115 ^ 0x50u)) ^ (((v126 + v128) ^ (2 * v129))
                                                                          - 2116476967
                                                                          - ((2 * ((v126 + v128) ^ (2 * v129))) & 0x3B23FB2));
  v304 = HIWORD(v111) ^ 0xE43F;
  v131 = *(_DWORD *)&v76[4 * (HIBYTE(v107) ^ 0x75)] ^ 0x47DAECDB;
  v132 = *(_DWORD *)&v78[4 * (BYTE1(v115) ^ 0x95)] + 2123092289;
  v133 = (v131 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v111) ^ 0x49)] + 200408077) ^ (2 * v132);
  v134 = *(_DWORD *)(v84 + 4 * (v104 ^ 0x83u)) ^ v131 ^ v132 ^ (v133
                                                                                 - 2116476967
                                                                                 - ((2 * v133) & 0x3B23FB2));
  v135 = *(_DWORD *)&v76[4 * (HIBYTE(v111) ^ 0xA4)] ^ 0x47DAECDB;
  v136 = *(_DWORD *)&v78[4 * (BYTE1(v104) ^ 0x7A)] + 2123092289;
  v137 = (v135 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v115) ^ 0xDA)] + 200408077) ^ (2 * v136);
  v138 = *(_DWORD *)&v76[4 * (v117 ^ 0x40)] ^ 0x47DAECDB;
  v139 = *(_DWORD *)(v84
                   + 4
                   * ((((v107 ^ 0xFFFFFFBE) + (v107 ^ 0x59) + 1) ^ 0xFFFFFFF0)
                    + (v107 ^ 0x59))) ^ v135 ^ v136 ^ (v137 - 2116476967 - ((2 * v137) & 0x3B23FB2));
  v140 = *(_DWORD *)&v78[4 * ((unsigned __int16)(v107 ^ 0x2159) >> 8)] + 2123092289;
  v141 = (v138 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v104) ^ 0x41)] + 200408077) ^ (2 * v140);
  v142 = *(_DWORD *)(v84 + 4 * (v111 ^ 0xBCu)) ^ v140 ^ v138 ^ (v141
                                                                                 - 2116476967
                                                                                 - ((2 * v141) & 0x3B23FB2));
  v143 = *(_DWORD *)&v78[4 * (BYTE1(v139) ^ 0xF1)];
  v144 = v143 - ((2 * v143 - 48782718) & 0xE28D5A64) + 1876065907;
  v145 = (*(_DWORD *)&v80[4 * (BYTE2(v134) ^ 0x51)] + 200408077) ^ (2
                                                                  * (((((v144 ^ 0x9003EF45) + 515554697) ^ (-2123092289 - v143))
                                                                    - ((2
                                                                      * (((v144 ^ 0x9003EF45) + 515554697) ^ (-2123092289 - v143))) & 0x628D5A64)
                                                                    + 1900457266) ^ v144)
                                                                  + 1031109392);
  v146 = *(_DWORD *)&v76[4 * ((v130 ^ 0x16435890u) >> 24)] ^ 0x47DAECDB;
  v147 = *(_DWORD *)(v84 + 4 * (v142 ^ 0xE9u)) ^ v144 ^ v146 ^ (((v146 >> 3) & 0x1597797F ^ v145)
                                                                                 - 2116476967
                                                                                 - ((2
                                                                                   * ((v146 >> 3) & 0x1597797F ^ v145)) & 0x3B23FB2));
  v148 = *(_DWORD *)&v76[4 * (HIBYTE(v134) ^ 1)] ^ 0x47DAECDB;
  v149 = *(_DWORD *)&v78[4 * (BYTE1(v142) ^ 0xC)] + 2123092289;
  v150 = (v148 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v139) ^ 0xAF)] + 200408077) ^ (2 * v149);
  v151 = v149 ^ v148;
  v152 = v142 ^ 0xA9C2F8F1;
  v153 = v151 ^ (v150 - 2116476967 - ((2 * v150) & 0x3B23FB2)) ^ *(_DWORD *)(v84 + 4 * (v130 ^ 0x88u));
  v154 = *(_DWORD *)&v76[4 * (HIBYTE(v139) ^ 0xC7)] ^ 0x47DAECDB;
  v155 = *(_DWORD *)&v78[4 * (BYTE1(v130) ^ 0xAC)] + 2123092289;
  v156 = (v154 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * BYTE2(v152)] + 200408077) ^ (2 * v155);
  v157 = *(_DWORD *)(v84 + 4 * (v134 ^ 5u)) ^ v154 ^ v155 ^ (v156
                                                                              - 2116476967
                                                                              - ((2 * v156) & 0x3B23FB2));
  v158 = *(_DWORD *)&v76[4 * HIBYTE(v152)] ^ 0x47DAECDB;
  v159 = *(_DWORD *)(v84 + 4 * (v139 ^ 0x75u));
  v160 = *(_DWORD *)&v78[4 * (BYTE1(v134) ^ 0xE5)] + 2123092289;
  v161 = (*(_DWORD *)&v80[4 * (((v130 ^ 0x16435890u) >> 16) ^ 0x76)] + 200408077) ^ v158 ^ (v158 >> 3) & 0x1597797F ^ v160 ^ v159 ^ (2 * v160);
  v162 = *(_DWORD *)&v76[4 * (HIBYTE(v161) ^ 0xE8)] ^ 0x47DAECDB;
  v163 = *(_DWORD *)&v78[4 * (BYTE1(v153) ^ 0xAE)] + 2123092289;
  v164 = (*(_DWORD *)&v80[4 * (BYTE2(v147) ^ 0x8E)] + 200408077) ^ v162 ^ (v162 >> 3) & 0x1597797F ^ v163 ^ (2 * v163);
  v165 = *(_DWORD *)(v84 + 4 * (v157 ^ 0x4Fu));
  v166 = (v164 & 0x40000000 | ((v164 & 0x40000000u) >> 30 << 31)) ^ 0x7F8FD796;
  v65 = ((v166 - 2140133270) & (v165 ^ 0x81D91FD9)) == 0;
  v167 = *(_DWORD *)&v76[4
                       * (((v147 ^ 0xE8F80105uLL) >> (v159 & 0x18 ^ 0x18u) >> (v159 & 0x18)) ^ 0x40)];
  v168 = *(_DWORD *)&v78[4 * ((unsigned __int16)(v157 ^ 0x374F) >> 8)] + 2123092289;
  v169 = (*(_DWORD *)&v80[4 * (BYTE2(v153) ^ 0x5B)] + 200408077) ^ (v167 >> 3) & 0x1597797F ^ (2 * v168) ^ 0x93591B;
  v170 = v169 - 2116476967 - ((2 * v169) & 0x3B23FB2);
  v171 = *(_DWORD *)&v76[4 * (HIBYTE(v153) ^ 7)] ^ 0x47DAECDB;
  v172 = *(_DWORD *)&v78[4 * (BYTE1(v161) ^ 0x4C)] + 2123092289;
  v173 = (v171 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v157) ^ 0x43)] + 200408077) ^ (2 * v172);
  v174 = *(_DWORD *)(v84 + 4 * (v147 ^ 0x1Du)) ^ v171 ^ v172 ^ (v173
                                                                                 - 2116476967
                                                                                 - ((2 * v173) & 0x3B23FB2));
  v175 = *(_DWORD *)&v80[4 * (BYTE2(v161) ^ 0xEF)];
  v176 = *(_DWORD *)&v76[4 * (HIBYTE(v157) ^ 0xA2)] ^ 0x47DAECDB;
  v177 = *(_DWORD *)&v78[4 * (BYTE1(v147) ^ 0xF5)] + 2123092289;
  v178 = (v176 >> 3) & 0x1597797F ^ (2 * v177) ^ (((2 * v175 + 885761638) & 0xE31851B4)
                                                + ((v175 - 1704602829) ^ 0x718C28DA));
  v179 = *(_DWORD *)(v84 + 4 * (v153 ^ 0xF6u)) ^ v176 ^ v177 ^ (v178
                                                                                 - 2116476967
                                                                                 - ((2 * v178) & 0x3B23FB2));
  v180 = *(_DWORD *)(v84 + 4 * (v161 ^ 0xB3u)) ^ v168 ^ v167 ^ v170;
  v181 = v166 - 134775040;
  v182 = v165 ^ 0x12B818FB;
  if (!v65)
    v181 = -149475796 - v166;
  v183 = (v182 - 2005358230 + v181) ^ v164 & 0xBFFFFFFF;
  v184 = *(_DWORD *)&v76[4 * (((v180 ^ 0xBFFFFFFF) >> 24) ^ 0xA9)] ^ 0x47DAECDB;
  v185 = *(_DWORD *)&v78[4 * (BYTE1(v179) ^ 0x8F)] + 2123092289;
  v186 = (v184 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v174) ^ 0xF1)] + 200408077) ^ (2 * v185);
  v187 = *(_DWORD *)(v84 + 4 * (v183 ^ 0x41u)) ^ v185 ^ v184 ^ (v186
                                                                                 - 2116476967
                                                                                 - ((2 * v186) & 0x3B23FB2));
  v188 = *(_DWORD *)&v76[4 * (HIBYTE(v174) ^ 0x34)] ^ 0x47DAECDB;
  v189 = ((v188 & 0xACBBCBFA) >> (v130 & 3) >> (v130 & 3 ^ 3)) ^ (*(_DWORD *)&v80[4 * (BYTE2(v179) ^ 5)] + 200408077);
  v190 = *(_DWORD *)&v78[4 * (BYTE1(v183) ^ 0xB3)] + 2123092289;
  v191 = v180 ^ 0x56B10EBF;
  v192 = *(_DWORD *)(v84 + 4 * (v180 ^ 0xA7u)) ^ v188 ^ v190 ^ ((v189 ^ (2 * v190))
                                                                                 - 2116476967
                                                                                 - ((2 * (v189 ^ (2 * v190))) & 0x3B23FB2));
  v193 = *(_DWORD *)&v76[4 * (((v179 ^ 0xB4737BDD) >> 24) - ((v179 >> 23) & 0x80)) + 256] ^ 0x47DAECDB;
  v194 = *(_DWORD *)&v78[4 * (BYTE1(v191) ^ 0xF4)] + 2123092289;
  v195 = (v193 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v183) ^ 0xE5)] + 200408077) ^ (2 * v194);
  v196 = *(_DWORD *)(v84 + 4 * (v174 ^ 0x46u)) ^ v193 ^ v194 ^ (v195
                                                                                 - 2116476967
                                                                                 - ((2 * v195) & 0x3B23FB2));
  v197 = *(_DWORD *)&v76[4 * (HIBYTE(v183) ^ 0x6C)] ^ 0x47DAECDB;
  v198 = *(_DWORD *)&v78[4 * (BYTE1(v174) ^ 0xD0)] + 2123092289;
  v199 = (*(_DWORD *)&v80[4 * ((HIWORD(v191) & 8 | 0x76) ^ HIWORD(v191) & 0xF7)] + 200408077) ^ v197 ^ (v197 >> 3) & 0x1597797F ^ v198 ^ (2 * v198);
  v200 = *(_DWORD *)(v84 + 4 * (v179 ^ 0xC5u));
  v201 = v200 ^ 0x43539B36 ^ v199;
  v199 ^= 0x3D757B10u;
  v202 = (v201 + v199 + 1) ^ ((v200 ^ 0x7E26E026) + 1);
  v203 = ((v202 - 2116476967 - ((2 * v202) & 0x3B23FB2)) ^ v200) + v199;
  v204 = v203 - ((2 * v203) & 0x4B9CD93A);
  v205 = *(_DWORD *)&v76[4 * (HIBYTE(v187) ^ 0xB6)];
  v206 = v205 ^ 0xF1D91E7A;
  v207 = v205 ^ 0x149ED8D8;
  if ((v205 ^ 0xF1D91E7A) == 0xB603F2A1)
    v207 = -1396978696;
  v208 = *(_DWORD *)&v78[4 * (BYTE1(v196) ^ 0x43)] + 2123092289;
  v209 = (*(_DWORD *)&v80[4 * (BYTE2(v192) ^ 0x16)] + 200408077) ^ (2 * v208) ^ ((v207 & (v205 ^ 0x47DAECD8u)) >> 3);
  v210 = *(_DWORD *)&v76[4 * (HIBYTE(v192) ^ 0xE0)];
  v211 = v210 & 0xFFFFFFDF ^ 0xF8AF6F44 ^ (v210 & 0x20 | 0xBF75839F);
  v212 = v204 - 1513198435;
  v213 = (v209 - 2116476967 - ((2 * v209) & 0x3B23FB2)) ^ *(_DWORD *)(v84 + 4 * (v212 ^ 0x9Fu));
  v214 = v208 ^ v206 ^ (v213 - 1241255263 - ((2 * v213) & 0x6C07E542));
  LOBYTE(v213) = v196 ^ 0xBD;
  v215 = *(_DWORD *)&v80[4 * ((v196 ^ 0x36A4B7BD) >> 16)];
  v216 = *(_DWORD *)&v78[4 * (BYTE1(v212) ^ 0x88)] + 2123092289;
  v217 = (((2 * v215 + 885761638) & 0xE31851B4) + ((v215 - 1704602829) ^ 0x718C28DA)) ^ (2 * v216) ^ (v211 >> 3) & 0x1597797F;
  v218 = v216 ^ v211 ^ *(_DWORD *)(v84 + 4 * (v187 ^ 0x3Eu));
  v219 = *(_DWORD *)&v76[4 * (HIBYTE(v196) ^ 0x76)];
  v220 = v218 ^ (v217 - 2116476967 - ((2 * v217) & 0x3B23FB2));
  v221 = v219 ^ 0x47DAECDB;
  v222 = *(_DWORD *)&v78[4 * (BYTE1(v187) ^ 0x1C)] + 2123092289;
  v223 = (v221 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v212) ^ 0x2C)] + 200408077) ^ (2 * v222);
  v224 = *(_DWORD *)(v84 + 4 * (v192 ^ 0xB4u)) ^ v221 ^ v222 ^ (v223
                                                                                 - 2116476967
                                                                                 - ((2 * v223) & 0x3B23FB2));
  v225 = *(_DWORD *)&v76[4 * (HIBYTE(v212) ^ 0x73)] ^ 0x47DAECDB;
  v226 = *(_DWORD *)&v78[4 * (BYTE1(v192) ^ 0xA4)] + 2123092289;
  v227 = (v225 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v187) ^ 0x50)] + 200408077) ^ (2 * v226);
  v228 = v226 ^ *(_DWORD *)(v84 + 4 * v213) ^ v225 ^ (v227 - 2116476967 - ((2 * v227) & 0x3B23FB2));
  v229 = *(_DWORD *)&v76[4 * (HIBYTE(v214) ^ 7)] ^ 0x47DAECDB;
  v230 = *(_DWORD *)&v78[4 * (BYTE1(v224) ^ 0xC9)] + 2123092289;
  v231 = (v229 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v220) ^ 0xF7)] + 200408077) ^ (2 * v230);
  v232 = *(_DWORD *)&v76[4 * (HIBYTE(v220) ^ 0x85)];
  v233 = *(_DWORD *)(v84 + 4 * ((v228 ^ 0xCC) - ((2 * (v228 ^ 0x58B2CACC)) & 0x30) + 24)) ^ v229 ^ v230 ^ (v231 - 2116476967 - ((2 * v231) & 0x3B23FB2));
  v234 = v232 ^ 0x47DAECDB;
  v235 = (v232 ^ 0x47DAECDB | 0xACBBCBFA) + (v232 ^ 0xEB612721) - 2 * (v232 ^ 0xEB612721);
  v236 = *(_DWORD *)&v78[4 * (BYTE1(v228) ^ 0x3E)] + 2123092289;
  v237 = (*(_DWORD *)&v80[4
                        * (((v224 ^ 0xD1923D12) >> ((v179 ^ 0xDD) & 0x10) >> ((v179 ^ 0xDD) & 0x10 ^ 0x10)) ^ 0x76)]
        + 200408077) ^ (2 * v236) ^ (v235 >> 3);
  v238 = *(_DWORD *)&v76[4 * (HIBYTE(v224) ^ 0x91)] ^ 0x47DAECDB;
  v239 = v236 ^ v234 ^ *(_DWORD *)(v84 + 4 * (v214 ^ 3u)) ^ (v237
                                                                              - 2116476967
                                                                              - ((2 * v237) & 0x3B23FB2));
  v240 = *(_DWORD *)&v78[4 * (BYTE1(v214) ^ 0x2E)] + 2123092289;
  v241 = (v238 >> 3) & 0x1597797F ^ v238 ^ (*(_DWORD *)&v80[4 * (BYTE2(v228) ^ 0xC4)] + 200408077) ^ (2 * v240);
  v242 = *(_DWORD *)&v76[4 * (HIBYTE(v228) ^ 0x18)] ^ 0x47DAECDB;
  v243 = *(_DWORD *)(v84 + 4 * (v220 ^ 0x7Bu)) ^ v240 ^ (v241 - 2116476967 - ((2 * v241) & 0x3B23FB2));
  v244 = *(_DWORD *)&v78[4 * (BYTE1(v220) ^ 0xE2)] + 2123092289;
  v245 = (v242 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v214) ^ 0x56)] + 200408077) ^ (2 * v244);
  v246 = *(_DWORD *)(v84 + 4 * (v224 ^ 0xAu)) ^ v244 ^ v242 ^ (v245
                                                                                - 2116476967
                                                                                - ((2 * v245) & 0x3B23FB2));
  v247 = *(_DWORD *)&v76[4 * ((v233 ^ 0x3570E1F3u) >> 24)] ^ 0x47DAECDB;
  v248 = *(_DWORD *)&v76[4 * (HIBYTE(v239) ^ 0xD2)];
  v249 = ((v248 >> 3) ^ 0x943A48A3) & 0x1D24ACAE ^ 0x337C6805 ^ (((2 * (((v248 >> 3) ^ 0x943A48A3) & 0x8B3D5D1)) | 0x77FAFA2A)
                                                               - (((v248 >> 3) ^ 0x943A48A3) & 0x8B3D5D1)
                                                               - 1006468373);
  v250 = *(_DWORD *)&v78[4 * (BYTE1(v243) ^ 0xCA)] + 2123092289;
  v251 = (v247 >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * ((v239 ^ 0x92466B44) >> 16)] + 200408077) ^ (2 * v250);
  v252 = *(_DWORD *)(v84 + 4 * (v246 ^ 0x82u)) ^ v247 ^ v250 ^ (v251
                                                                                 - 2116476967
                                                                                 - ((2 * v251) & 0x3B23FB2));
  v253 = v249 - ((2 * v249) & 0x33A7F32C) - 1714161258;
  v254 = v248 ^ 0x3DF6EE9A ^ v253;
  v248 ^= 0x47DAECDBu;
  v255 = (v248 + v254 + 1) ^ ((v253 ^ 0x7A2C0241) + 1);
  v256 = (v253 ^ 0xAA5775C1 ^ (v255 - ((2 * v255) & 0x5F0910FE) + 797214847)) + v248;
  v257 = *(_DWORD *)&v78[4 * (BYTE1(v246) ^ 0x9C)] + 2123092289;
  v258 = (*(_DWORD *)&v80[4 * (BYTE2(v243) ^ 0x15)] + 200408077) ^ (2 * v257) ^ v256;
  v259 = v257 ^ *(_DWORD *)(v84 + 4 * (v233 ^ 0xEBu)) ^ (v258 - 2116476967 - ((2 * v258) & 0x3B23FB2));
  v260 = *(_DWORD *)&v76[4 * (HIBYTE(v243) ^ 0x21)] ^ 0x47DAECDB;
  v261 = *(_DWORD *)&v78[4 * ((unsigned __int16)(v233 ^ 0xE1F3) >> 8)] + 2123092289;
  v262 = v261 ^ v260 ^ (*(_DWORD *)&v80[4 * ((v246 ^ 0x1B666882) >> 16)] + 200408077) ^ (v260 >> 3) & 0x1597797F ^ (2 * v261);
  v263 = *(_DWORD *)(v84 + 4 * (v239 ^ 0x5Cu));
  v264 = *(_DWORD *)&v76[4 * (HIBYTE(v246) ^ 0x5B)];
  v265 = (v263 ^ 0x12B818FB ^ -(v263 ^ 0x12B818FB) ^ ((v263 ^ 0xD0329C14 ^ v262) + (v262 ^ 0x3D757B10) + 1))
       + (v262 ^ 0x3D757B10);
  v266 = v265 - ((2 * v265) & 0xE41FA486) + 1913639491;
  v267 = *(_DWORD *)&v78[4 * ((unsigned __int16)(v239 ^ 0x6B44) >> 8)];
  v268 = ((v264 ^ 0x47DAECDBu) >> 3) & 0x1597797F ^ (*(_DWORD *)&v80[4 * (BYTE2(v233) ^ 6)] + 200408077) ^ ((v267 - ((2 * (v267 + 2123092289)) & 0x3D757B10) - 1656320311) << (v304 & 1) << !(v304 & 1));
  v269 = *(_DWORD *)(v84 + 4 * (v243 ^ 0x9Au)) ^ v264 ^ 0x47DAECDB ^ (v267 + 2123092289) ^ (v268 - 2116476967 - ((2 * v268) & 0x3B23FB2));
  v270 = *(unsigned int *)(v21 - 120);
  v271 = (uint64_t)*(&off_24E21C7C0 + (int)v270 - 2374);
  v272 = (uint64_t)*(&off_24E21C7C0 + (int)v270 - 2826);
  v273 = *(_DWORD *)(v272 + 4 * (BYTE2(v259) ^ 0x58u));
  v274 = (char *)*(&off_24E21C7C0 + HIDWORD(v297)) - 12;
  v275 = *(_DWORD *)&v274[4 * (v269 ^ 0x8C)];
  v276 = (uint64_t)*(&off_24E21C7C0 + (int)v270 - 2601);
  v277 = v275 ^ *(_DWORD *)(v271 + 4 * ((v252 ^ 0x70707352u) >> 24)) ^ (4 * v275) ^ *(_DWORD *)(v276
                                                                                                + 4
                                                                                                * (BYTE1(v266) ^ 0x16u)) ^ ((BYTE1(v266) ^ 0x7C) - 305068774 - ((2 * ((v266 >> 8) ^ 0x5F387C)) & 0x34)) ^ (v273 + 1465271071 - ((2 * v273 + 1560248642) & 0x51AD04FC));
  v278 = *(_DWORD *)(v272 + 4 * (BYTE2(v266) ^ 0xE1u));
  v279 = *(_DWORD *)&v274[4 * (v252 ^ 0x14)] ^ 0xDDA77D8C;
  v280 = *(_DWORD *)(v276 + 4 * (BYTE1(v269) ^ 0x37u)) ^ (v278 + 1465271071 - ((2 * v278 + 1560248642) & 0x51AD04FC)) ^ v279 ^ *(_DWORD *)(v271 + 4 * (HIBYTE(v259) ^ 0xC0)) ^ (4 * v279) ^ ((BYTE1(v269) ^ 0x5D) - 305068774 - ((2 * ((v269 >> 8) ^ 0xEF875D)) & 0x34));
  v281 = *(_DWORD *)(v272 + 4 * (BYTE2(v269) ^ 0x5Eu));
  v282 = (v281 + 1465271071 - ((2 * v281 + 1560248642) & 0x51AD04FC)) ^ *(_DWORD *)(v271 + 4 * (HIBYTE(v266) ^ 0x5F));
  v283 = *(_DWORD *)(v272 + 4 * (BYTE2(v252) ^ 0xA9u));
  v284 = *(_DWORD *)&v274[4 * (v259 ^ 0x84)] ^ 0xDDA77D8C;
  v285 = *(_DWORD *)(v276 + 4 * (((unsigned __int16)(v252 ^ 0x7352) >> 8) ^ 0x6Au)) ^ ((unsigned __int16)(v252 ^ 0x7352) >> 8) ^ v284 ^ (4 * v284) ^ (v282 - 305068774 - ((2 * v282) & 0xDBA20A34));
  v286 = *(_DWORD *)&v274[4 * (v266 ^ 0xA3)
                        + 4
                        + 4 * ((2 * v266) & 0x8C ^ 0xFFFFFF77)
                        + 4 * ((2 * v266) & 0x8C ^ 0x88)];
  LODWORD(v287) = ((v277 << 15) & 0x40000 | __ROR4__(v277 & 0xFFFFFFF7 ^ 0x215B4C96, 17)) ^ 0x470B7266;
  HIDWORD(v287) = v287;
  LODWORD(v274) = (v287 >> 15) - ((2 * (v287 >> 15)) & 0x71F29BC) - 2087742242;
  v288 = *(_DWORD *)(v276 + 4 * (BYTE1(v259) ^ 0x1Au)) ^ *(_DWORD *)(v271 + 4 * (HIBYTE(v269) ^ 0x87)) ^ ((BYTE1(v259) ^ 0x70) - 305068774 - 2 * (((v259 >> 8) ^ 0xC05870) & 0x1B ^ (v259 >> 8) & 1)) ^ v286 ^ (v283 + 1465271071 - ((2 * v283 + 1560248642) & 0x51AD04FC)) ^ (((2 * v286) ^ 0xBB4EFB18) << (v277 & 1) << !(v277 & 1));
  v289 = (uint64_t)*(&off_24E21C7C0 + v297);
  a1[4] = *(_BYTE *)(v289 + (((v280 ^ 0xD4873DD) >> 24) ^ 0x5CLL)) ^ ((v280 ^ 0xD4873DD) >> 24) ^ 0xE0 ^ ((((v280 ^ 0xD4873DD) >> 24) ^ 0xE0) + ~(2 * ((((v280 ^ 0xD4873DD) >> 24) + 14) & 0x15 ^ ((v280 ^ 0xD4873DD) >> 24) & 1)) - 61) ^ 0xA4;
  v290 = (char *)*(&off_24E21C7C0 + HIDWORD(v296)) - 12;
  a1[v305] = v290[BYTE2(v274) ^ 0x8BLL] ^ 0xD0;
  a1[8] = *(_BYTE *)(v289 + (BYTE3(v285) ^ 0x11)) ^ BYTE3(v285) ^ 0xAD ^ ((BYTE3(v285) ^ 0xAD)
                                                                          - ((2 * (BYTE3(v285) ^ 0xAD) + 28) & 0x28)
                                                                          - 62) ^ 0x93;
  v291 = (char *)*(&off_24E21C7C0 + (int)v270 - 2459) - 12;
  v292 = v291[BYTE1(v288) ^ 0x45];
  HIDWORD(v287) = v292 ^ 1;
  LODWORD(v287) = (v292 ^ 0x6C) << 24;
  LOBYTE(v292) = (v287 >> 26) - ((2 * (v287 >> 26)) & 0x3C) - 98;
  a1[14] = (((v292 ^ 0xA) + (v292 ^ 0x9E) + 1) ^ 0xFE) + (v292 ^ 0x9E);
  v293 = (uint64_t)*(&off_24E21C7C0 + v296);
  a1[*(_QWORD *)(v21 - 168)] = ((((v288 ^ 0x69) + (v288 ^ 0xA0) + 1) ^ 3)
                              - (v288 ^ 0xA0)
                              + *(_BYTE *)(v293 + (v288 ^ 0x49))
                              - 98) ^ 0x39;
  a1[13] = v290[BYTE2(v288) ^ 0x3FLL] ^ 0x63;
  a1[*(_QWORD *)(v21 - 176)] = v290[BYTE2(v280) ^ 0x83] ^ 0x98;
  a1[*(_QWORD *)(v21 - 144)] = ((v280 ^ 0xC8) + *(_BYTE *)(v293 + (v280 ^ 0xE8)) - 98) ^ 0xD3;
  a1[11] = ((v285 ^ 0x66) + *(_BYTE *)(v293 + (v285 ^ 0x46)) - 98) ^ 0x74;
  v294 = v291[BYTE1(v285) ^ 0x89];
  HIDWORD(v287) = v294 ^ 1;
  LODWORD(v287) = (v294 ^ 0x6C) << 24;
  a1[*(_QWORD *)(v21 - 192)] = (v287 >> 26) ^ 0x86;
  *a1 = *(_BYTE *)(v289 + ((v274 >> 24) ^ 0x1DLL)) ^ ((BYTE3(v274) ^ 0xA1) + 46) ^ BYTE3(v274) ^ 0xA1 ^ 0x1B;
  a1[*(_QWORD *)(v21 - 184)] = v290[BYTE2(v285) ^ 0xB6] ^ 0x8C;
  LODWORD(v290) = v291[((((unsigned __int16)(v280 ^ 0x73DD) >> 8) ^ -((unsigned __int16)(v280 ^ 0x73DD) >> 8) ^ ((((unsigned __int16)(v280 ^ 0x73DD) >> 8) ^ 0xFFFFFF1C) + 228))
                                       + 227) ^ 0x77];
  HIDWORD(v287) = v290 ^ 1;
  LODWORD(v287) = (v290 ^ 0x6C) << 24;
  a1[*(_QWORD *)(v21 - 160)] = (v287 >> 26) ^ 0xDF;
  a1[*(_QWORD *)(v21 - 152)] = ((v274 ^ 0xAB) + *(_BYTE *)(v293 + (v274 ^ 0x8BLL)) - 98) ^ 0x70;
  LODWORD(v291) = v291[BYTE1(v274) ^ 0x41];
  HIDWORD(v287) = v291 ^ 1;
  LODWORD(v287) = (v291 ^ 0x6C) << 24;
  a1[*(_QWORD *)(v21 - 128)] = (v287 >> 26) ^ 0x5F;
  a1[*(_QWORD *)(v21 - 136)] = HIBYTE(v288) ^ 0x17 ^ ((HIBYTE(v288) ^ 0x17)
                                                    - 2
                                                    * (((HIBYTE(v288) ^ 0x17) + 14) & 0x15 ^ (HIBYTE(v288) ^ 0x17) & 1)
                                                    - 62) ^ *(_BYTE *)(v289 + (HIBYTE(v288) ^ 0xABLL)) ^ 0xBB;
  LODWORD(v299) = v22 - 103948245;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a19 + 8 * ((1487 * (HIDWORD(v299) > 0x10)) ^ ((int)v270 - 732))) - 12))(v280, v289, 140, 29, 200408077, 108, v270, v285, a2, a3, a4, a5, a6, a1, v296, v297, v298, v299, v300,
           v301,
           a14,
           v26,
           v23,
           a17,
           v302,
           a19);
}

void sub_21E090920()
{
  JUMPOUT(0x21E08E92CLL);
}

uint64_t sub_21E090958(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((120 * (((((v4 ^ 0xC1B) + 1) ^ (v3 == a3)) & 1) == 0)) ^ v4)) - 8))();
}

uint64_t sub_21E090990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((3353 * ((v7 & 8) == ((a7 + 991) ^ 0xB94))) ^ a7))
                            - ((a7 - 1955) | 0x509u)
                            + 1295))();
}

uint64_t sub_21E0909D4@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  char v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  char v32;
  char v33;
  unsigned int v34;
  int8x16x4_t v36;

  *(_DWORD *)(v30 - 120) = v29;
  *(_DWORD *)(v30 - 128) = v25;
  *(_DWORD *)(v30 - 136) = v25 & 0xFFFFFFF8;
  v31 = a2 - (v25 & 0xFFFFFFF8) + 8;
  v32 = v28 + v27 + v26 - a2;
  v33 = v27 + v26 + a3 + v28 - a2;
  v34 = v27 + v26 + a1 - a2;
  *(_DWORD *)(v30 - 144) = a3 - 343;
  v36.val[0].i64[0] = v34 & 0xF;
  v36.val[0].i64[1] = (v32 + 32) & 0xF;
  v36.val[1].i64[0] = (v32 + 31) & 0xF;
  v36.val[1].i64[1] = (v32 + 30) & 0xF;
  v36.val[2].i64[0] = (v32 + 29) & 0xF;
  v36.val[2].i64[1] = (v32 + 28) & 0xF;
  v36.val[3].i64[0] = v33 & 0xF;
  v36.val[3].i64[1] = (v32 + 26) & 0xF;
  *(int8x8_t *)(a4 - 7 + v34) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v22 + v36.val[0].i64[0] - 7), *(int8x8_t *)(a4 - 7 + v34)), veor_s8(*(int8x8_t *)(v23 + v36.val[0].i64[0] - 7), *(int8x8_t *)(v36.val[0].i64[0] + v24 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v36, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xB7B7B7B7B7B7B7B7)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a22 + 8 * ((123 * (v31 == 0)) ^ a3)) - 4))((__n128)xmmword_21E17F900);
}

void sub_21E090B10()
{
  JUMPOUT(0x21E090A48);
}

uint64_t sub_21E090B18()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((*(_DWORD *)(v1 - 144) + 1724) | 0x114)
                                      + ((*(_DWORD *)(v1 - 144) + 2000) ^ 0xFFFFFFEF))
                                     * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ *(_DWORD *)(v1 - 144))))();
}

uint64_t sub_21E090B58@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a2 - 1757587170);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v4 + (v8 & 0xF)) ^ *(_BYTE *)(v5 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v6 + 1) ^ (-73 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((1483 * (a2 - 1 != v3)) ^ (a1 - 1993))))();
}

void sub_21E090BBC()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1138445481)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 20) = v1;
}

uint64_t sub_21E090C20(uint64_t result)
{
  int v1;
  int v2;

  v1 = 416623387;
  switch(((result ^ 0x5F) & 0xBA | ~(result ^ 0x5F | 0xBA)) ^ *(_BYTE *)result ^ 0x73)
  {
    case '@':
      v2 = 0x4000000;
      goto LABEL_6;
    case 'B':
      v2 = -1744830464;
      goto LABEL_6;
    case 'C':
      v2 = -2113929216;
      goto LABEL_6;
    case 'E':
      v2 = 335544320;
LABEL_6:
      if (*(_DWORD *)(*(_QWORD *)(result + 16) + 8) == v2)
        v1 = 416665468;
      else
        v1 = 416623387;
      break;
    default:
      break;
  }
  *(_DWORD *)(result + 4) = v1;
  return result;
}

void sub_21E090CC4(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v1 = 1292559617 * (((a1 | 0x7DDFA66C) - a1 + (a1 & 0x82205993)) ^ 0xDA8CCE05);
  v2 = (*(_DWORD *)(a1 + 16) ^ v1) == -926299528;
  __asm { BR              X9 }
}

uint64_t sub_21E090D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v5
                                                                      + 8
                                                                      * (((((*(_QWORD *)(v6 + 32) == 0) ^ (a4 + 123)) & 1)
                                                                        * ((a4 ^ 0xF60) - 1857)) ^ a4)))(a1, a2, a3, (v4 + 52));
}

uint64_t sub_21E090DD0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((*(_BYTE *)(v2 + 5) == 1) * (((v0 - 1131) | 0x616) + 1409)) ^ v0))
                            - 4))();
}

uint64_t sub_21E090E10()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((2352
                                          * (*(_BYTE *)(*(_QWORD *)(v2 + 8) + 1) == ((v0 - 376290764) & 0x76 ^ 0x73))) ^ v0))
                            - ((v0 - 1722564177) & 0x66AC3FF5 ^ 0x754)))();
}

uint64_t sub_21E090E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  void (*v57)(uint64_t);
  unsigned int v59;
  uint64_t v60;

  v60 = v43;
  v59 = a1;
  if ((_DWORD)a1 == -926299617)
  {
    v57 = (void (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (int)(v47 - 1641)) - 8);
    v57(*(_QWORD *)(v44 + 8 * (int)(v47 ^ 0x6FD)) - 12);
    ((void (*)(_QWORD, unint64_t *, uint64_t))v57)(*(&off_24E21C7C0 + (int)(v47 - 1440)), &STACK[0xCE8], 16);
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v60
                                                                 + 8
                                                                 * (int)((v47 - 1831) ^ (3147
                                                                                       * (&STACK[0x210] != (unint64_t *)-48))))
                                                     - (v47 ^ 0x75CLL)))(3368667679, a2);
  }
  if ((_DWORD)a1 == -926299618)
  {
    v49 = *(unsigned __int8 *)(v46 + 12);
    if (v49 == 2)
    {
      v54 = 731811679
          * ((((v48 - 152) ^ 0x3BAF4DA8 | 0x6E6C118E)
            - ((v48 - 152) ^ 0x3BAF4DA8)
            + (((v48 - 152) ^ 0x3BAF4DA8) & 0x9193EE70)) ^ 0x1C35FA62);
      *(_DWORD *)(v48 - 128) = v47 - v54 - 489;
      *(_DWORD *)(v48 - 112) = v54 ^ 0x2C055E2A;
      v45[389] = v46 + 0x6C1E238D7D0BC8C6;
      v45[387] = &a43;
      v45[391] = *(_QWORD *)(v44 + 8 * (int)(v47 - 1697)) - 8;
      ((void (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (int)(v47 ^ 0x7D4)) - 8))(v48 - 152);
      a1 = v59;
      v43 = v60;
      v51 = *(_DWORD *)(v48 - 144);
    }
    else
    {
      if (v49 != 1)
      {
        if (*(_BYTE *)(v46 + 12))
        {
          v56 = 1866394843 * ((((v48 - 152) | 0x6A61A0C3) - (v48 - 152) + ((v48 - 152) & 0x959E5F38)) ^ 0x80769737);
          v45[388] = &a43;
          v45[390] = *(_QWORD *)(v44 + 8 * (int)(v47 ^ 0x635));
          *(_DWORD *)(v48 - 152) = v47 - v56 + 471;
          *(_DWORD *)(v48 - 136) = v56 + 1936269160;
          v45[391] = v46 + 0x18EF69DD114E909DLL;
          (*(void (**)(uint64_t))(v44 + 8 * (int)(v47 ^ 0x675)))(v48 - 152);
          v51 = *(_DWORD *)(v48 - 112);
        }
        else
        {
          v50 = 225134719 * ((((v48 - 152) | 0x94C01E3B) + (~(v48 - 152) | 0x6B3FE1C4)) ^ 0x82305B10);
          v45[387] = &a43;
          *(_DWORD *)(v48 - 144) = 1878484398 - v50;
          *(_DWORD *)(v48 - 112) = v47 - v50 + 1436;
          v45[391] = *(_QWORD *)(v44 + 8 * (int)(v47 - 1836)) - 8;
          v45[389] = v46 + 0x2BDC51CD9DAAD480;
          ((void (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (int)(v47 ^ 0x6E3)) - 12))(v48 - 152);
          v51 = *(_DWORD *)(v48 - 128);
        }
        v53 = v47;
        v43 = v60;
        a1 = v59;
        return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v43
                                                            + 8
                                                            * (int)(((v51 != 939001227) * (((v53 - 935) ^ 0x4FF) - 1833)) ^ (v53 - 458)))
                                                - 4))(a1);
      }
      v55 = 1503746353 * (((v48 - 152) & 0xA72D3203 | ~((v48 - 152) | 0xA72D3203)) ^ 0x7EB30F4A);
      v45[390] = &a43;
      v45[389] = v46 + 0x2D04AAFE96B393ECLL;
      v45[388] = *(_QWORD *)(v44 + 8 * (int)(v47 - 1380)) - 8;
      *(_DWORD *)(v48 - 152) = v55 + v47 + 1032;
      *(_DWORD *)(v48 - 120) = v55 + 2113913359;
      ((void (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (int)(v47 - 1688)) - 8))(v48 - 152);
      a1 = v59;
      v43 = v60;
      v51 = *(_DWORD *)(v48 - 148);
    }
    v53 = v47;
  }
  else
  {
    v53 = v47;
    v51 = -939041250;
  }
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v43
                                                      + 8
                                                      * (int)(((v51 != 939001227) * (((v53 - 935) ^ 0x4FF) - 1833)) ^ (v53 - 458)))
                                          - 4))(a1);
}

#error "21E09252C: call analysis failed (funcsize=38)"

void sub_21E092530()
{
  JUMPOUT(0x21E0924C0);
}

uint64_t sub_21E092538(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  uint64_t v59;
  uint64_t v60;
  int v61;
  _QWORD *v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v64 = 1734664879 * (((v63 - 152) & 0x898D89EE | ~((v63 - 152) | 0x898D89EE)) ^ 0x59A95E0B);
  *(_DWORD *)(v63 - 128) = v64 + v61 - 1906;
  *(_DWORD *)(v63 - 124) = ((a1 ^ 0x37BE30C6) + 1221574654 + ((2 * a1) & 0xFEEFF5B4 ^ 0x90839430)) ^ v64;
  v62[387] = &a59;
  v62[389] = &a43;
  v62[388] = a2;
  ((void (*)(uint64_t))(*(_QWORD *)(v59 + 8 * (v61 - 1498)) - 4))(v63 - 152);
  v65 = ((unint64_t)&a40 ^ 0xBBE96B8BBF2B7DE7)
      + 0x4777FDFFE5FDBB19
      + ((2 * (_QWORD)&a40) & 0x77D2D7177E56FBC0);
  *(_BYTE *)(v60 + ((v61 + 545334288) & 0xDF7ED7FD ^ 0x38BLL)) = (v65 ^ 0xBA) * (v65 + 17);
  *(_BYTE *)(v60 + 126) = ((v65 | 1) ^ 0xBA) * (v65 + 18);
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a31 + 8 * v61) - 8))((v65 + 17), (v65 + 18), a31, v66, v67, v68, v69, v70, a9, a10, a11, a12);
}

void sub_21E0926A4()
{
  JUMPOUT(0x21E092660);
}

uint64_t sub_21E0926B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  STACK[0xE28] = a20;
  *(_DWORD *)(v35 - 128) = (v32 + 1539) ^ (1328090399
                                         * ((((v35 - 152) | 0x7386A3C) - ((v35 - 152) & 0x7386A3C)) ^ 0xF8EB0E06));
  *(_BYTE *)(v35 - 144) = ((a24 ^ 0x67) + ((2 * a24) & 0xF7 ^ (5 * (v32 ^ 9)) ^ 0xC1) - 25) ^ (31
                                                                                             * ((((v35 + 104) | 0x3C)
                                                                                               - ((v35 + 104) & 0x3C)) ^ 6));
  STACK[0xE38] = v33 + 0xCCBFA3A1901A9EDLL;
  *(_BYTE *)(v35 - 120) = (31 * ((((v35 + 104) | 0x3C) - ((v35 + 104) & 0x3C)) ^ 6)) ^ 0x16;
  v36 = ((uint64_t (*)(uint64_t))*(&off_24E21C7C0 + (v32 ^ 0x30E)))(v35 - 152);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a32 + 8 * ((2773 * (*(_DWORD *)(v35 - 124) == v34)) ^ v32))
                                          - 4))(v36);
}

uint64_t sub_21E0927A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  _BOOL4 v33;

  v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8 * (v31 ^ 0x25B)))(32, 3341989084) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a31 + 8 * ((v33 * (((v31 ^ 0x777) + 2329) ^ (v31 + 1533))) ^ v31)) - 4))();
}

uint64_t sub_21E092800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,uint64_t a21,uint64_t a22,int a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;
  int v44;
  _DWORD *v45;
  _BYTE *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _BYTE *v53;

  *(_DWORD *)a1 = 1498173510;
  *(_BYTE *)(a1 + 4) = a24 ^ 0x1C;
  *(_WORD *)(a1 + 5) = 1025;
  *(_BYTE *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = 335544320;
  *(_BYTE *)(v48 - 136) = (((v44 - 4) ^ 0x78) + 29 * (a24 ^ 0x1C)) ^ (95
                                                                    * ((~(v48 + 104) & 0x2F | (v48 + 104) & 0xD0) ^ 0x6B));
  STACK[0xE30] = a1 + 12;
  STACK[0xE40] = a20;
  *(_DWORD *)(v48 - 120) = v44
                         - 731811679 * ((~(v48 - 152) & 0x36B9DA2F | (v48 - 152) & 0xC94625D0) ^ 0x7F4F7C6B)
                         + 1681;
  *(_BYTE *)(v48 - 152) = 95 * ((~(v48 + 104) & 0x2F | (v48 + 104) & 0xD0) ^ 0x6B) + 34;
  ((void (*)(uint64_t))(*(_QWORD *)(v43 + 8 * (v44 - 1055)) - 12))(v48 - 152);
  *(_BYTE *)(a20 + 1) = 39;
  *v47 = a1;
  *v45 = 32;
  *v46 = 0;
  v50 = bswap32(*(_DWORD *)(a25 + 8));
  v51 = (v50 + 12) & 0x1FFFFFFFELL;
  v52 = ((unint64_t)&a43 ^ 0xFFFF5BDFF6FFF75FLL)
      + 0x656FFFF3EF6BEFA4
      + ((2 * (_QWORD)&a43) & 0xFFFEB7BFEDFFEEB0);
  v53 = (_BYTE *)(v50 + a25 + 11);
  *v53 = ((v52 - 3) ^ (v44 + 55)) * (v52 + 14);
  *(v53 - 1) = ((v52 - 2) ^ 0xBA) * (v52 + 15);
  return ((uint64_t (*)(void))(*(_QWORD *)(a32 + 8 * ((252 * (v51 != 2)) ^ (v44 - 1281339396) & 0x4C5FAFFFu)) - 12))();
}

void sub_21E0929C0()
{
  JUMPOUT(0x21E092974);
}

uint64_t sub_21E0929CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  int v10;

  return (*(uint64_t (**)(void))(a8 + 8 * (((v10 - 915) * (v8 == v9)) ^ (v10 - 256))))();
}

uint64_t sub_21E0929F0@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v6 = a3 - 1;
  *(_BYTE *)(a1 + v6) = ((v3 - 3) ^ 0xBA) * (v3 + 14);
  return (*(uint64_t (**)(void))(a2 + 8 * ((236 * (v6 == v4 - 1012)) ^ v5)))();
}

uint64_t sub_21E092A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  int v61;
  unint64_t v62;

  v62 = ((unint64_t)&a38 ^ 0xF7BDFAFFFF7E799FLL)
      + 0x7CFBB70BC8DDEE6CLL
      + ((2 * (_QWORD)&a38) & 0xEF7BF5FFFEFCF330);
  a61 = ((v62 - 11) ^ 0xBA) * (v62 + 6);
  a60 = ((v62 + (((v61 - 84) | 0x51) ^ 7)) ^ 0xBA) * (v62 + 7);
  return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * ((v61 - 596) | 0x851)) - 8))((((_DWORD)v62 + (((v61 - 596) | 0x851) ^ 7)) ^ 0xBAu) * ((_DWORD)v62 + 7), (v62 + 6), (v62 + 7), 939001227, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           0,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

void sub_21E092B10()
{
  JUMPOUT(0x21E092AC4);
}

uint64_t sub_21E092B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  int v30;
  int v31;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 + 8 * (v30 ^ (765 * (v31 == (_DWORD)a4)))) - ((v30 - 114896304) & 0x6D92F54 ^ 0x754)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

void sub_21E092B64(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  int v11;

  v9 = v4[5];
  v10 = v4[6] + ((-112 * (a1 ^ 0x5B)) ^ 0x51);
  v11 = 1503746353 * ((((v8 - 152) | 0xA8A77151) - ((v8 - 152) | 0x57588EAE) + 1465421486) ^ 0x8EC6B3E7);
  *(_BYTE *)(v8 - 123) = v4[4]
                       - 49 * ((((v8 + 104) | 0x51) - ((v8 + 104) | 0xAE) - 82) ^ 0xE7)
                       - ((2 * v4[4]) & 0xD6)
                       + 107;
  *(_BYTE *)(v8 - 124) = -49 * ((((v8 + 104) | 0x51) - ((v8 + 104) | 0xAE) - 82) ^ 0xE7) + 55 * v9 + 122;
  *(_QWORD *)(v3 + 3104) = v7;
  *(_BYTE *)(v8 - 148) = (v10 ^ 0x5F)
                       - 49 * ((((v8 + 104) | 0x51) - ((v8 + 104) | 0xAE) - 82) ^ 0xE7)
                       + ((2 * v10) & 0xBF)
                       - 14;
  *(_QWORD *)(v3 + 3112) = v5;
  *(_DWORD *)(v8 - 128) = v11 + a1 - 661;
  *(_DWORD *)(v8 - 152) = (v2 ^ 0x14DA90D) - v11;
  sub_21E07237C(v8 - 152);
  *v6 = -1;
  *(_DWORD *)(v1 + 40) = v2;
}

uint64_t sub_21E092C98(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 1734664879 * ((1796402612 - (a1 | 0x6B12EDB4) + (a1 | 0x94ED124B)) ^ 0xBB363A51);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)*(&off_24E21C7C0 + v1 - 243)
                                        + 8 * ((2657 * (*(_QWORD *)(a1 + 8) != 0x6898E7DB637CE96BLL)) ^ v1)
                                        - 12)
                            - 12))();
}

uint64_t sub_21E092D30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((13
                                          * (((*(_DWORD *)(v1 - 0x6898E7DB637CE953) == 939001227) ^ (((v2 - 124) & 0x76) + 5)) & 1)) ^ (v2 - 1462450044) & 0x572B3776u))
                            - 12))();
}

uint64_t sub_21E092D94()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v1 - 0x6898E7DB637CE95BLL) - 968120314;
  v4 = *(_DWORD *)(v1 - 0x6898E7DB637CE95FLL) + 173188154;
  v5 = v4 < 0x2080A231;
  v6 = v3 < v4;
  if (v3 < 0x2080A231 != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((3562 * v6) ^ v2)) - 12))();
}

_DWORD *sub_21E092E20@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *result = -939041090;
  return result;
}

void sub_21E092E34(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 2009815553 * ((-2 - ((~(_DWORD)a1 | 0xA31E5195) + (a1 | 0x5CE1AE6A))) ^ 0x52157FD0);
  __asm { BR              X10 }
}

uint64_t sub_21E092F08@<X0>(uint64_t a1@<X8>, uint64_t a2, unint64_t *a3, unsigned int a4, unsigned int a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 731811679 * ((((2 * &a3) | 0x3C8AA698) - &a3 - 507859788) ^ 0x57B3F508);
  a7 = v10 + v7 - 346;
  a6 = v8;
  a4 = v10 + 1391826216;
  a5 = v10 - 2096316710;
  a3 = &STACK[0x45D0856C2970AB82];
  v11 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v7 - 245)))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((2251 * (*(_DWORD *)(v8 - 0x6898E7DB637CE953) == 939001227)) ^ v7))
                                          - 8))(v11);
}

void sub_21E092FD8(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _BYTE *v4;

  v3 = *(_QWORD *)(v1 + 16)
     - v2
     - ((2 * (*(_QWORD *)(v1 + 16) - v2) - 0xC241B21570AD4BCLL) & 0xF362FE203B90FD16)
     - 0xC608E808DBCEBD3;
  *v4 = (HIBYTE(v3) ^ 0xF9) - ((2 * (HIBYTE(v3) ^ 0xF9)) & 0x64) + 50;
  v4[1] = (BYTE6(v3) ^ 0xB1) - 2 * ((BYTE6(v3) ^ 0xB1) & 0x36 ^ BYTE6(v3) & 4) + 50;
  v4[2] = (BYTE5(v3) ^ 0x7F) - ((2 * (BYTE5(v3) ^ 0x7F)) & 0x64) + 50;
  v4[3] = (BYTE4(v3) ^ 0x10) - 2 * ((BYTE4(v3) ^ 0x10) & 0x36 ^ BYTE4(v3) & 4) + 50;
  v4[4] = (BYTE3(v3) ^ 0x1D) - ((2 * (BYTE3(v3) ^ 0x1D)) & 0x64) + 50;
  v4[5] = (BYTE2(v3) ^ 0xC8) - ((2 * BYTE2(v3)) & 0x64) + 50;
  v4[6] = (BYTE1(v3) ^ 0x7E) + (~(2 * (BYTE1(v3) ^ 0x7E)) | 0x9B) + 51;
  v4[7] = v3 ^ 0xB9;
  *(_DWORD *)v1 = *a1;
}

void woqRTqq9PL5McfBs891()
{
  _DWORD v0[8];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * (v0 ^ 0xA7536869)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X8 }
}

uint64_t sub_21E0931F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,unint64_t *a21,int a22)
{
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  a21 = &STACK[0xCDF15AEA900D081];
  a20 = 305 - 225134719 * ((&a20 & 0x4A723BB7 | ~(&a20 | 0x4A723BB7)) ^ 0xA37D8162);
  sub_21E047010(&a20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 8 * ((61 * (a22 != v22)) ^ 0x6D6u)))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13);
}

uint64_t sub_21E09327C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned int a22,unsigned int a23,int a24)
{
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;

  v30 = (((&a20 | 0xC32E1EA8) - (&a20 & 0xC32E1EA8)) ^ 0x647D76C1) * v27;
  a21 = a15;
  LODWORD(a20) = v30 + 576055179 * v26 + 1580388100;
  a23 = 1626 - v30;
  ((void (*)(uint64_t *))(*(_QWORD *)(v29 + 648) - 4))(&a20);
  v31 = 1990461019 * ((2 * (&a20 & 0x10C3B078) - &a20 + 1866223494) ^ 0x40D8ED0F);
  a20 = v24;
  a21 = a15;
  a22 = ((v25 ^ 0x6EFFE17A) + ((2 * v25) & 0xDDFFC2F4) - 8488) ^ v31;
  a24 = v31 ^ 0x3AC;
  v32 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v29 + 2176) - 8))(&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8
                                                      * ((4 * (a23 == 939001227)) | (16 * (a23 == 939001227)) | 0x781u))
                                          - 8))(v32);
}

uint64_t sub_21E0933E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,unsigned int a21,int a22,int a23,unint64_t *a24,uint64_t a25)
{
  unsigned int v25;
  int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;

  v28 = 1328090399 * ((&a20 & 0x3AF33063 | ~(&a20 | 0x3AF33063)) ^ 0x3ADFABA6);
  a23 = v28 ^ 0x6B80F4A2;
  a20 = (v25 - 1653802774) ^ v28;
  a21 = -161312482 - v28;
  a24 = &STACK[0x7398388C82CD2FF];
  a25 = a15;
  v29 = sub_21E0DDA14((uint64_t)&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * (((a22 == v26 + ((v25 + 152237930) & 0x7FF) - 1771)
                                                        * (((v25 - 1614387206) & 0x4BE) + 2085)) ^ v25))
                                          - 8))(v29);
}

uint64_t sub_21E0934C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,unint64_t *a21,unint64_t *a22,int a23,unsigned int a24)
{
  unsigned int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a24 = (v24 + 2068) ^ (1990461019
                      * ((2 * (&a20 & 0xDE6BF08) - &a20 + 1914257653) ^ 0x5DFDE27C));
  a21 = &STACK[0x10AB37095071AF8E];
  a22 = a16;
  a20 = &STACK[0xD254D6213B3B429];
  ((void (*)(unint64_t **))(*(_QWORD *)(v27 + 8 * (int)(v24 - 702)) - 8))(&a20);
  HIDWORD(a20) = (v24 - 216) ^ (1734664879
                              * (((&a20 | 0xD5637F69) + (~&a20 | 0x2A9C8096)) ^ 0xFAB85772));
  a21 = a16;
  a22 = &STACK[0x297F1D8FD62A87A6];
  (*(void (**)(unint64_t **))(v27 + 8 * (int)(v24 - 627)))(&a20);
  LODWORD(a20) = v24 - (&a20 ^ 0xA7536869) * v25 - 460;
  a21 = &STACK[0x3DECEE387AEF040D];
  a22 = a16;
  ((void (*)(unint64_t **))(*(_QWORD *)(v27 + 8 * (v24 ^ 0x4AB)) - 4))(&a20);
  a21 = a16;
  LODWORD(a22) = v24
               - 1734664879
               * ((-1137183043
                 - (&a20 ^ 0x636550B5 | 0xBC37F6BD)
                 + (&a20 ^ 0x636550B5 | 0x43C80942)) ^ 0xF7671ED)
               - 735;
  v28 = sub_21E092C98((uint64_t)&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * ((77 * ((_DWORD)a20 == 939001227)) ^ v24))
                                          - (v24 ^ 0x3BB)
                                          + 1913))(v28);
}

uint64_t sub_21E0936B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  unsigned int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((309 * (a18 == ((v19 + 345) ^ (v18 - 1395)))) ^ v19))
                            - ((v19 + 1422136169) & 0xFDD ^ 0x789)))();
}

uint64_t sub_21E0936FC@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  uint64_t v13;

  *a6 = a12 ^ 0xAD6511AEB0F467F9 ^ (a1 - 345);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v13 + 8 * ((3717 * (a8 != v12)) ^ a1)) - 8))(0);
}

uint64_t sub_21E093750()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(_QWORD, uint64_t))(v4 + 8 * (int)(v1 - 651)))(v0 ^ v2, 2866087519) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)((v5 * ((v1 + 839) ^ 0xA33)) ^ v1)) - (v1 ^ 0x432)))();
}

uint64_t sub_21E0937A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  int v18;

  v18 = (a15 ^ v16) - ((((541 * (v15 ^ 0xD6D) - 566) | 0x19B) + 203326009) & (2 * (a15 ^ v16))) - 2045820180;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8
                                        * ((164
                                          * (((2 * v18) & 0xF0B37FDC ^ 0x1205D8) + (v18 ^ 0xFE56FD02) - 1880111116 == 139036642)) ^ v15))
                            - 4))();
}

uint64_t sub_21E093848(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a2 ^ (2964 * ((v3 + v2 - 2019147758) > 7))))
                            - ((a2 - 1914226829) ^ 0x8DE73B16)))();
}

uint64_t sub_21E0938B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((v5 + a5 - 3371) ^ (v5 + 227)) * ((unint64_t)(v6 - a1) > 0x1F)) ^ a5))
                            - ((a5 - 1339) | 0x1D4u)
                            + 2537))();
}

uint64_t sub_21E0938F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v9
                                                              + 8
                                                              * ((956 * (v8 >= ((a6 - v7 - 1131) ^ v6 ^ 0x1D3u))) ^ a6))
                                                  - 12))(a1, 0);
}

uint64_t sub_21E09392C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v10 = v8 + ((14 * (a3 ^ (v3 + 132))) ^ (v5 + 797));
  v11 = *(_OWORD *)(v4 + v10 - 15);
  v12 = *(_OWORD *)(v4 + v10 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((3695 * ((v7 & 0xFFFFFFE0) == 32)) ^ (v6 + a3 + 372))) - 8))();
}

void sub_21E093994()
{
  JUMPOUT(0x21E09393CLL);
}

uint64_t sub_21E0939A0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((3 * (a7 ^ 0x7B7) - 905) * (v7 != a2)) ^ a7))
                            - ((a7 ^ 0x7B7u)
                             + 1118)
                            + 1415))();
}

uint64_t sub_21E0939D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                       + 8
                                                                       * ((42
                                                                         * ((((a6 - 428) ^ v6 ^ (v6 + 41)) & v7) != 0)) ^ a6))
                                                           - 4))(a1, a2, (v8 - a2));
}

uint64_t sub_21E093A08(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  *(_QWORD *)(a1 - 7 + v10 + v9 + v7 - a2 + ((a5 - 499610132) & 0x1DC773BF ^ v6)) = *(_QWORD *)(v5
                                                                                              - 7
                                                                                              + v10
                                                                                              + v9
                                                                                              + v7
                                                                                              - a2
                                                                                              + ((a5 - 499610132) & 0x1DC773BF ^ v6));
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((3226 * (a2 - (v8 & 0xFFFFFFF8) == -8)) ^ a5)) - 4))();
}

void sub_21E093A74()
{
  JUMPOUT(0x21E093A48);
}

uint64_t sub_21E093A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((v7 ^ (v6 - 596) ^ (v6 + 175)) + v7 + 500) * (v8 == a6)) ^ v7))
                            - 4))();
}

uint64_t sub_21E093AB4@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = ((a3 - v4 + 1378) ^ (v6 + 524)) + a2;
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(v5 + v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((43 * (a2 - 1 != a4)) ^ (a3 + v7))) - 4))();
}

uint64_t sub_21E093AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  unsigned int v7;
  void (*v9)(int *);
  _QWORD *v10;
  int *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v6 = (a5 - 303748948) & 0x121AD5FA;
  v7 = (v6 + 1961433939) & 0x8B16E7F3;
  *v10 = a1;
  *v11 = v12 ^ (v5 - 986) ^ v6;
  v15 = (v7 + 478) ^ (225134719
                    * ((&v15 - 932790150 - 2 * ((unint64_t)&v15 & 0xC866C07A)) ^ 0xDE968550));
  v16 = v14;
  v9(&v15);
  v16 = v13;
  v15 = ((v7 ^ 0x16A) + 628) ^ (225134719
                              * ((&v15 + 1496110038 - 2 * ((unint64_t)&v15 & 0x592CD3D6)) ^ 0x4FDC96FC));
  v9(&v15);
  return 0;
}

void h5eRUOOOhxuaBmELCqQZZEcx()
{
  _DWORD v0[8];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * (((v0 | 0x57E95F8D) - (v0 & 0x57E95F8D)) ^ 0xF0BA37E4)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X8 }
}

uint64_t sub_21E093D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, unint64_t *a13, int a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  a13 = &STACK[0xCDF15AEA900D059];
  a12 = 305 - 225134719 * ((&a12 + 1717609390 - 2 * (&a12 & 0x6660A3AE)) ^ 0x7090E684);
  sub_21E047010(&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15
                                                                                          + 8
                                                                                          * ((16 * (a14 != v14)) | 0x2C5u))
                                                                              - 4))(v16, v17, v18, v19, v20);
}

uint64_t sub_21E093D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, unint64_t a15)
{
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = 2009815553 * (((v19 | 0x30093BF5E7791D41) - (v19 & 0x30093BF5E7791D41)) ^ 0x2374332E16723304);
  a13 = v20 + 780;
  a14 = a10;
  a15 = (v15 ^ 0xF6B65DD6FBF76BFFLL) + ((2 * v15) & 0xED6CBBADF7EED7FELL) + 0xF5BAFB9AF8DFE5FLL + v20;
  v21 = (*(uint64_t (**)(int *))(v17 + 4624))(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((826 * (a12 == v16)) ^ 0x5F7)) - 4))(v21);
}

uint64_t sub_21E093E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14, int a15, unint64_t *a16, uint64_t a17)
{
  int v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1328090399 * ((&a12 & 0xCC41D25 | ~(&a12 | 0xCC41D25)) ^ 0xCE886E0);
  a15 = v20 ^ 0x6B80F4A2;
  a16 = &STACK[0x7398388C82CD2C7];
  a17 = a10;
  a12 = (v18 - 1653802380) ^ v20;
  a13 = -767550172 - v20;
  v21 = sub_21E0DDA14((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8
                                                            * ((2558 * (a14 == (v18 ^ 0x722 ^ (v17 + 467)))) ^ v18))
                                          - 4))(v21);
}

uint64_t sub_21E093F38()
{
  void (*v0)(unsigned int *);
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unint64_t *v10;
  unint64_t *v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t *v14;
  unint64_t *v15;

  v7 = (v5 - 1829068544) & 0xBDD;
  v13 = v5 - ((&v13 & 0xD55420A7 | ~(&v13 | 0xD55420A7)) ^ 0x8DF8B731) * v3 - 905;
  v14 = &STACK[0x3DECEE387AEF033D];
  v15 = v10;
  ((void (*)(unsigned int *))(*(_QWORD *)(v4 + 8 * (v5 - 1382)) - 4))(&v13);
  LODWORD(v15) = v5
               - 1734664879 * ((((2 * &v13) | 0x7E2A2532) - &v13 + 1089138023) ^ 0x90CE3A83)
               - 1180;
  v14 = v10;
  sub_21E092C98((uint64_t)&v13);
  if (v13 == (v7 ^ v6))
    v8 = v12;
  else
    v8 = v13;
  v13 = (v5 + 872) ^ ((&v13 ^ 0x16F0452A) * v2);
  v14 = v10;
  v0(&v13);
  v13 = (v7 + 1674) ^ (((-2093976145 - (&v13 | 0x833075AF) + (&v13 | 0x7CCF8A50)) ^ 0x6A3FCF7A)
                     * v2);
  v14 = v11;
  v0(&v13);
  return v8 ^ v1;
}

void sub_21E0940D8(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1D17695A8381D362) == 201714705
    || *(_DWORD *)(*(_QWORD *)a1 - 0x1D17695A8381D362) == 201714705;
  v1 = *(_DWORD *)(a1 + 8) ^ (1438293641 * (((a1 | 0xA30813C6) - (a1 & 0xA30813C6)) ^ 0x1BCF46B9));
  __asm { BR              X14 }
}

uint64_t sub_21E0941F4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v3 ^ (3539 * ((v2 + a1 - 133) > 0x7FFFFF7C))))
                            - (((v3 + 1941873708) & 0x8C41578F)
                             + 1863)
                            + 2514))();
}

uint64_t sub_21E094244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v4 ^ (2567 * (v5 > 0)))) - 12))(2567, a2, a3);
}

uint64_t sub_21E0942A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  BOOL v20;

  *(_DWORD *)(a14 + 4 * (v18 - 1987923158) - 0x2CF4A33C3453BA2BLL) = v15;
  v20 = v18 - 305035498 > -464595990 && v18 - 305035498 < v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8
                                              * ((52 * (((-125 * (v16 ^ 0x8D)) ^ v20) & 1)) ^ v16))
                            - 12))();
}

uint64_t sub_21E094324()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((7 * ((v2 - 1203817472) & 0x47C0CDFD ^ 0x438) - 1200) * (v1 == 0)) ^ v2))
                            - 12))();
}

uint64_t sub_21E09436C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v11 ^ 0x220 ^ (v11 + 1251) ^ 0x245) * (a10 > 0)) ^ v11)) - 4))();
}

uint64_t sub_21E0943C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((190
                                          * (*(_DWORD *)(a14
                                                       - 0x2CF4A33C3453BA2BLL
                                                       + 4 * (((v15 - 1251) ^ (v18 + 1264)) + v17)) != ((v15 - 771) ^ (v16 - 463)))) ^ (v15 - 1417)))
                            - 4))();
}

uint64_t sub_21E094424()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 ^ (3426 * ((v2 + v3) < 0x7FFFFFFF))))
                            - ((v1 + 480) ^ 0x6D7)))();
}

uint64_t sub_21E094468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((190
                                          * (*(_DWORD *)(a1 + 4 * (((v3 - 1251) ^ (v5 + 1264)) + v4)) != ((v3 - 771) ^ v2))) ^ (v3 - 1417)))
                            - 4))();
}

uint64_t sub_21E0944AC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v2 - 120) = v1
                        + 788
                        + 1734664879 * ((2 * ((v2 - 120) & 0x334062D0) - (v2 - 120) - 859857618) ^ 0xE364B534);
  *(_QWORD *)(v2 - 112) = v4;
  sub_21E069D0C(v2 - 120);
  *(_QWORD *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 120) = v1 + 788 + 1734664879 * ((v2 - 120) ^ 0x2FDB281A);
  sub_21E069D0C(v2 - 120);
  *(_DWORD *)(v2 - 120) = v1
                        - 1734664879 * ((((v2 - 120) | 0xE32D3578) - ((v2 - 120) & 0xE32D3578)) ^ 0xCCF61D62)
                        - 1009;
  *(_QWORD *)(v2 - 112) = v0;
  *(_QWORD *)(v2 - 104) = v5;
  return sub_21E069E70(v2 - 120);
}

void sub_21E0948BC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) + 731811679 * ((-2 - ((a1 | 0xFBD815C4) + (~(_DWORD)a1 | 0x427EA3B))) ^ 0x4DD14C7F);
  __asm { BR              X17 }
}

uint64_t sub_21E094A04()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = ((v0 - 390763718) ^ v1) + ((271 * (v0 ^ 0x5C3)) ^ 0xF1FAB3D5) + ((2 * v1) & 0xDF5EE9EE ^ 0xE1409E4) == 1638543524;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 | (16 * v3)) ^ v0)) - 8))();
}

uint64_t sub_21E094A74(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((7 * (v2 + a1 + ((v1 - 793) | 0x44u) - 1873770477 < 8)) ^ (v1 + 654)))
                            - 8))();
}

uint64_t sub_21E094AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((((((a5 + v8 + 1366) < 0xFFFFFFF0) ^ (-51 * (a8 ^ 0xF5))) & 1) * (a8 + 931)) ^ a8))
                                                                                       - 12))(a1, a2, a3, a4, a5, a3);
}

uint64_t sub_21E094B0C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _BOOL4 v67;

  v55 = a8 + 1299;
  v56 = (a8 + 1299) ^ 0xF39;
  v57 = (a5 + v53 + a1 + 1382);
  v58 = v57 + a50;
  v59 = a4 - a50 - 0x6C1E238D7D0BC8B6;
  v60 = v57 & 0xF;
  v61 = v60 + v52 - v58;
  v62 = (v60 | v51) - v58;
  v63 = (v60 | v50) - v58;
  v67 = v61 < 0x10
     || v59 < (unint64_t)(v56 - 457) - 1367
     || v62 < 0x10
     || (unint64_t)(v63 + 1) < 0x10;
  return (*(uint64_t (**)(void))(v54 + 8 * ((37 * v67) ^ v55)))();
}

uint64_t sub_21E094B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * (int)(((((v3 < 0x10) ^ (-51 * (v4 ^ 0x33))) & 1)
                                                                                       * ((v4 + 530553035) & 0xE0606B7F ^ 0xB7C)) ^ v4))
                                                                    - 8))(a1, a2, a3, 0);
}

uint64_t sub_21E094BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  int8x16_t v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16x4_t v63;
  int8x16x4_t v64;

  v63.val[1].i64[0] = ((_BYTE)a3 + 9) & 0xF;
  v63.val[1].i64[1] = ((_BYTE)a3 + 8) & 0xF;
  v63.val[2].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v63.val[2].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v63.val[3].i64[0] = ((_BYTE)a3 + 5) & 0xF;
  v63.val[3].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  v57 = a1 + a2 + v56 + v54;
  v58 = (214 * a8);
  v59.i64[0] = 0x6767676767676767;
  v59.i64[1] = 0x6767676767676767;
  v63.val[0].i64[0] = (v58 ^ 0x5D5) & v57;
  v63.val[0].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v60.i64[0] = vqtbl4q_s8(v63, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v64.val[0].i64[1] = ((_BYTE)a3 + 2) & 0xF;
  v64.val[1].i64[1] = a3 & 0xF;
  v64.val[2].i64[1] = ((_BYTE)a3 + 14) & 0xF;
  v64.val[3].i64[1] = ((_BYTE)a3 + 12) & 0xF;
  v64.val[0].i64[0] = ((_BYTE)a3 + 3) & 0xF;
  v64.val[1].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v64.val[2].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v64.val[3].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v60.i64[1] = vqtbl4q_s8(v64, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v61 = vrev64q_s8(vmulq_s8(v60, v59));
  *(int8x16_t *)(a50 - 15 + v57) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v53 + v63.val[0].i64[0] - 15), *(int8x16_t *)(v50 - 15 + v57)), veorq_s8(*(int8x16_t *)(v52 + v63.val[0].i64[0] - 15), *(int8x16_t *)(v63.val[0].i64[0] + v51 - 14))), vextq_s8(v61, v61, 8uLL));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a46 + 8 * (int)((1646 * ((v55 & 0xFFFFFFF0) == 16)) ^ a5)) - 4))(a1, a2, a3, v55 & 0xFFFFFFF0, a5, v50 - 15, v63.val[0].i64[1], v58, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

void sub_21E094D68()
{
  JUMPOUT(0x21E094CF4);
}

uint64_t sub_21E094D74()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 | (28 * (v1 == 0x871A05F2)))) - 4))(140947627);
}

uint64_t sub_21E094DC0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  _BOOL4 v59;
  unsigned int v60;
  uint64_t v61;
  int v62;
  _BOOL4 v63;

  v59 = v56 > 0xBA9C3E84;
  *(_BYTE *)(a50 + (a1 - 140947627)) = *(_BYTE *)(v53 + ((a1 - 140947627) & 0xFLL)) ^ *(_BYTE *)(v50 + (a1 - 140947627)) ^ *(_BYTE *)(v52 + ((a1 - 140947627) & 0xFLL)) ^ *(_BYTE *)(v51 + ((a1 - 140947627) & 0xFLL) + ((v54 - 459) ^ 0x879)) ^ (103 * ((a1 + 85) & 0xF));
  v60 = a1 + 1023217873;
  v61 = (a1 + 1);
  v62 = v59 ^ (v60 < v55 + 2168);
  v63 = v60 < v57;
  if (!v62)
    v59 = v63;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v58 + 8 * ((28 * !v59) ^ v54)) - 4))(v61);
}

uint64_t sub_21E094E6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((2262 * ((((((a8 - 1434) | 0x838) - 1410) ^ (v8 == a4)) & 1) == 0)) ^ a8))
                            - 8))();
}

uint64_t sub_21E094EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (int)(((a7 - 747) * ((v7 >> 3) & 1)) ^ a7))
                            - ((a7 + 625) ^ 0x56BLL)))();
}

uint64_t sub_21E094EDC(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int8x16x4_t v61;

  v58 = a1 + a2 + v56;
  v59 = v58 + v54 - a4;
  v61.val[0].i64[0] = v59 & 0xF;
  v61.val[0].i64[1] = ((_BYTE)v58 - (_BYTE)a4 + 10) & 0xF;
  v61.val[1].i64[0] = ((_BYTE)v58 - (_BYTE)a4 + 9) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)v58 - (_BYTE)a4 + 8) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)v58 - (_BYTE)a4 + 7) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)v58 - (_BYTE)a4 + 6) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)v58 - (_BYTE)a4 + (((_BYTE)v57 - 104) & 0xF6 ^ 3)) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)v58 - (_BYTE)a4 + 4) & 0xF;
  *(int8x8_t *)(a50 - 7 + v59) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v53 + v61.val[0].i64[0] - 7), *(int8x8_t *)(v50 - 7 + v59)), veor_s8(*(int8x8_t *)(v52 + v61.val[0].i64[0] - 7), *(int8x8_t *)(v61.val[0].i64[0] + v51 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v61, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x6767676767676767)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a46
                                                     + 8 * ((3852 * (a4 - (v55 & 0xFFFFFFF8) == -8)) ^ (v57 - 66)))
                                         - 8))((__n128)xmmword_21E17F900);
}

void sub_21E095014()
{
  JUMPOUT(0x21E094F44);
}

uint64_t sub_21E09501C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 + 1386) | 0x18) - 1715) * (v1 == a1)) ^ v2))
                            - (v2 + 625)
                            + 1371))();
}

uint64_t sub_21E095050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;

  *(_BYTE *)(a50 + (a6 + v55)) = *(_BYTE *)(v53 + ((a6 + v55) & 0xFLL)) ^ *(_BYTE *)(v50
                                                                                                 + (a6 + v55)) ^ *(_BYTE *)(v52 + (((_BYTE)a6 + (_BYTE)v55) & 0xF)) ^ *(_BYTE *)((((_BYTE)a6 + (_BYTE)v55) & 0xF) + v51 + 1) ^ (((a6 + v55) & 0xF) * a7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v56 + 8 * (((4 * (a6 - 1 != v54)) | (8 * (a6 - 1 != v54))) ^ (a7 - 564)))
                            - 12))();
}

uint64_t sub_21E0950B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int8x16_t a51)
{
  uint64_t v51;
  uint64_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;

  v53 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(v51 + 32));
  v54 = vextq_s8(v53, v53, 8uLL);
  v55.i64[0] = 0xF8F8F8F8F8F8F8F8;
  v55.i64[1] = 0xF8F8F8F8F8F8F8F8;
  v56 = vandq_s8(vaddq_s8(v54, v54), v55);
  v55.i64[0] = 0x7C7C7C7C7C7C7C7CLL;
  v55.i64[1] = 0x7C7C7C7C7C7C7C7CLL;
  v57 = veorq_s8(v54, v55);
  v55.i64[0] = 0x7373737373737373;
  v55.i64[1] = 0x7373737373737373;
  v58 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v57, v55), v56), (int8x16_t)xmmword_21E17F980));
  a51 = vextq_s8(v58, v58, 8uLL);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (int)((((a5 + 604) ^ 0xA2B) * (&a51 == 0)) ^ a5)) - (((_DWORD)a5 - 1904) | 0x2C1u) + 961))(a1, a2, a3, a4, a5, a6, a7, a8, v51, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_21E095140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  uint64_t v52;

  return ((uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * (((((v50 - 2756) | 0x2C4) - 216) * (v51 == a50)) ^ v50)) - 12))();
}

uint64_t sub_21E095180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((((((4 * (v50 ^ 0xA61) - 594) | 0x805) ^ 0xE6C) + ((4 * (v50 ^ 0xA61) + 172) | 0x49)) * (a50 != 0)) ^ (4 * (v50 ^ 0xA61)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_21E095268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;

  return (*(uint64_t (**)(void))(v51
                              + 8 * ((((((v50 - 594) | 0x805) ^ 0xE6C) + ((v50 + 172) | 0x49)) * (a50 != 0)) ^ v50)))();
}

uint64_t sub_21E0952B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  uint64_t v16;
  _BOOL4 v18;

  v18 = a15 != 738549162 && (((_BYTE)a15 + 6) & 0xF) == ((v15 - 1214) ^ 0x3C9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((v18 * (v15 - 798)) ^ v15)) - 8))();
}

uint64_t sub_21E0952F8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 - 1499) ^ 0x6A8 ^ (v1 - 1499) ^ 0x165 ^ 0x7B5) * (v0 == 0x6AA16EFD2495BBC5)) ^ (v1 - 1499))))();
}

uint64_t sub_21E095344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  int v47;
  uint64_t v48;

  return ((uint64_t (*)(void))(*(_QWORD *)(v48
                                        + 8
                                        * (v47 ^ (1574
                                                * (((2 * (a15 - ((2 * a47) & 0xE0BBA6C4) - 1000835656)) & 0xBDA3BFDE ^ 0xA0A3A6C4)
                                                 + ((a15 - ((2 * a47) & 0xE0BBA6C4) - 1000835656) ^ 0x2E8C0C8D)
                                                 + 1030731442 != 474060449))))
                            - 4))();
}

uint64_t sub_21E0953FC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((a2 + a1 + 556670993 < ((a6 - 1422) ^ 0x7A2u)) * (((a6 - 2002) | 1) ^ 0x5D0)) ^ a6))
                            - 12))();
}

uint64_t sub_21E095478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (a5 ^ (2938 * (a7 >> 4 == 233643519)))) - (a5 ^ 0x2CDu) + 1375))();
}

uint64_t sub_21E0954B0(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,unint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _BOOL4 v66;
  int v68;

  v54 = a2 + a1 + a3 + ((a5 + 390735781) & 0xE8B5D9FE);
  v55 = v54 + a50 + 1;
  v56 = (a2 + a1) & 0xF;
  v57 = v56 - v54;
  v58 = v51 + v56 - v54;
  v59 = v56 + 1;
  v60 = v51 + v56 + 1;
  v61 = v52 + v56 + 1 - v54;
  v62 = v56 + v52 + 2;
  v63 = v50 + v57;
  v64 = v50 + v59;
  v66 = v60 > a50 && v58 < v55;
  v68 = v62 > a50 && v61 < v55 || v66;
  if (v64 > a50 && v63 < v55)
    v68 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v53 + 8 * (a5 | (4 * (v68 ^ 1)))) - 8))();
}

uint64_t sub_21E09554C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * ((1413 * (v7 >= ((a7 - 2046) ^ 0x437u) - 1367)) ^ a7)))();
}

uint64_t sub_21E09557C(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int8x16_t v57;
  unsigned int v58;
  int8x16_t v59;
  uint64_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16x4_t v65;
  int8x16x4_t v66;

  v56 = (a6 - 978508769) & 0x3A52DBDF;
  v65.val[1].i64[0] = ((_BYTE)v53 + 12) & 0xF;
  v65.val[1].i64[1] = ((_BYTE)v53 + 11) & 0xF;
  v65.val[2].i64[0] = ((_BYTE)v53 + 10) & 0xF;
  v65.val[2].i64[1] = ((_BYTE)v53 + 9) & 0xF;
  v65.val[3].i64[0] = ((_BYTE)v53 + 8) & 0xF;
  v65.val[3].i64[1] = ((_BYTE)v53 + 7) & 0xF;
  v66.val[0].i64[0] = ((_BYTE)v53 + 6) & 0xF;
  v66.val[0].i64[1] = ((_BYTE)v53 + 5) & 0xF;
  v66.val[1].i64[0] = ((_BYTE)v53 + 4) & 0xF;
  v66.val[1].i64[1] = (v53 + 3) & 0xF;
  v66.val[2].i64[0] = (v53 + 2) & 0xF;
  v66.val[2].i64[1] = ((_BYTE)v53 + 1) & 0xF;
  v66.val[3].i64[0] = v53 & 0xF;
  v66.val[3].i64[1] = ((_BYTE)v53 - 1) & 0xF;
  v57.i64[0] = 0xE7E7E7E7E7E7E7E7;
  v57.i64[1] = 0xE7E7E7E7E7E7E7E7;
  v58 = a3 + a2 + a1 + v56 + 2047;
  v59.i64[0] = 0x3232323232323232;
  v59.i64[1] = 0x3232323232323232;
  v60 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + (((_BYTE)a6 + 31) & 0xDF) - 1) & 0xF;
  v65.val[0].i64[0] = v60;
  v65.val[0].i64[1] = ((_BYTE)v53 + (_BYTE)a6 + 31 - 66) & 0xF;
  v61.i64[0] = vqtbl4q_s8(v65, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v61.i64[1] = vqtbl4q_s8(v66, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v62 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a50 - 15 + v58), *(int8x16_t *)(v51 + v60 - 15)), veorq_s8(*(int8x16_t *)(v60 + v52 - 14), *(int8x16_t *)(v50 + v60 - 15))));
  v63 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v62, v62, 8uLL), v59), vmulq_s8(v61, v57)));
  *(int8x16_t *)(a50 - 15 + v58) = vextq_s8(v63, v63, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * ((31 * ((v54 & 0xFFFFFFF0) != 16)) ^ v56)) - 8))();
}

void sub_21E0956F8()
{
  JUMPOUT(0x21E095674);
}

uint64_t sub_21E095704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,unsigned __int8 *a51)
{
  uint64_t v51;
  int v52;
  char *v53;
  unsigned int v54;
  unsigned __int8 v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  char *v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  unsigned int v76;
  unsigned int v77;
  unsigned __int8 v78;
  int v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unsigned __int8 v85;
  int v86;
  int v87;
  unint64_t v88;
  int v89;
  char *v90;
  int v91;
  char *v92;
  int v93;
  int v94;
  int v95;
  uint64_t v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  unsigned int v100;
  uint64_t v101;
  char *v102;
  unsigned int v103;
  int v104;
  int v105;
  unint64_t v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  unsigned int v130;
  int v131;
  int v132;
  int v133;
  unsigned int v134;
  unsigned __int8 v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  int v160;
  unsigned int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  BOOL v171;
  int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  unint64_t v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  int v214;
  int v215;
  int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  int v238;
  int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  int v245;
  unsigned int v246;
  int v247;
  int v248;
  int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  int v285;
  int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  unsigned int v290;
  unsigned int v291;
  int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  int v297;
  unsigned int v298;
  int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  int v304;
  int v305;
  unsigned int v306;
  unsigned int v307;
  int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  int v312;
  int v313;
  unsigned int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  int v325;
  unsigned int v326;
  int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  char *v335;
  int v336;
  int v337;
  char *v338;
  int v339;
  uint64_t v340;
  unsigned int v341;
  int v342;
  int v343;
  int v344;
  int v345;
  int v346;
  int v347;
  int v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  int v352;
  uint64_t v353;
  int v354;
  unsigned int v355;
  unsigned int v356;
  char *v357;
  char *v358;
  int v359;
  unsigned int v360;
  uint64_t v361;
  char *v362;
  int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  uint64_t v368;
  char *v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  unint64_t v381;
  uint64_t v382;
  uint64_t v383;
  int v384;
  uint64_t v385;
  uint64_t v386;
  unsigned int v387;
  int v388;
  int v389;
  unsigned int v390;
  unsigned __int8 v391;

  v53 = (char *)*(&off_24E21C7C0 + v52 - 895) - 4;
  v54 = v53[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBC2) ^ 0xD6];
  v55 = v54 ^ (((v54 >> 2) ^ (v54 >> 6) ^ 0xA)
             + (~(((v54 >> 2) ^ (v54 >> 6)) << (((v52 + 0x80) ^ 0x85) & 0xAF)) | 0xD5)
             + 22) ^ 0x3F;
  v56 = (char *)*(&off_24E21C7C0 + v52 - 864) - 8;
  v57 = *(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBDLL);
  v58 = (uint64_t)*(&off_24E21C7C0 + (v52 ^ 0x63E));
  v59 = (((v57 ^ 0xC) + (v57 ^ 0x2A) + 1) ^ 0xFFFFFFFE) + (v57 ^ 0x2A);
  v60 = (v59 - ((2 * v59) & 0xFFFFFFBC) - 34) ^ v56[v57 ^ 0x9D];
  v61 = ((*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBCLL) ^ 0x78)) ^ 0xA5) << 16) | ((v57 ^ 0x43 ^ (v60 - ((2 * v60) & 0xFFFFFFC7) - 29)) << 24);
  v62 = v53[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBELL) ^ 0xBBLL];
  v63 = v53[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBALL) ^ 0x87];
  v64 = *(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBFLL);
  v65 = (char *)*(&off_24E21C7C0 + v52 - 913) - 8;
  v66 = v61 & 0xFFFFFF00 | v63 ^ 0x4B ^ (((v63 >> 2) ^ (v63 >> 6) ^ 0xA)
                                                                         - 2
                                                                         * (((v63 >> 2) ^ (v63 >> 6)) & 0x25 ^ (v53[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBALL) ^ 0x87] >> 2) & 4)
                                                                         + 97);
  v67 = *(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBBLL);
  LODWORD(v57) = v65[v67 ^ 5] ^ ((v67 ^ 0x75)
                                                                 + (v67 ^ 0xBF)
                                                                 + 1
                                                                 - 2 * (((v67 ^ 0x75) + (v67 ^ 0xBF) + 1) & 0x1F)
                                                                 - 97) ^ 0xB9;
  v68 = *(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBB6) ^ 0x1CLL;
  v69 = v66 | ((_DWORD)v57 << 8);
  v371 = v58;
  v70 = (v62 ^ (((v62 >> 2) ^ (v62 >> 6) ^ 0xA)
                               + ((2
                                 * ((v62 >> 2) ^ (v62 >> 6) ^ ((v53[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBBELL) ^ 0xBBLL] >> 2) | 0x7B))) ^ 0x1D)
                               + 60)) ^ 0x11 | ((v65[v64 ^ 0xE1] ^ ((v64 ^ 0x91) + (v64 ^ 0x5B) + 1 - 2 * (((v64 ^ 0x91) + (v64 ^ 0x5B) + 1) & 0x1F) - 97) ^ 0x73) << 8) | ((*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBC0) ^ 0xCALL)) ^ 0x56) << 16);
  LODWORD(v57) = (v53[v68] ^ (((v53[v68] >> 2) ^ (v53[v68] >> 6) ^ 0xA)
                                             - ((v53[v68] >> 1) & 0x48)
                                             + 36)) ^ 0xE | ((*(unsigned __int8 *)(v58
                                                                                 + (*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBB8) ^ 0xA8)) ^ 0x42) << 16) | ((v56[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBB9) ^ 0x48] ^ 0xF5) << 24);
  v71 = *(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBB7);
  v72 = *(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBC3);
  v370 = v65;
  v372 = v56;
  v389 = (v70 | ((v56[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBC1) ^ 0xFLL] ^ 0x73) << 24)) ^ 0x14A978DD;
  v388 = (v57 | ((v65[v71 ^ 4] ^ ((v71 ^ 0x74)
                                                                  + (v71 ^ 0xBE)
                                                                  + 1
                                                                  - 2 * (((v71 ^ 0x74) + (v71 ^ 0xBE) + 1) & 0x1F)
                                                                  - 97) ^ 0x68) << 8)) ^ 0x87FE6CCF;
  v390 = v69 ^ 0x9649F738;
  v387 = (v55 | ((v56[*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBC5) ^ 0x19] ^ 0xB8) << 24) | ((*(unsigned __int8 *)(v58 + (*(unsigned __int8 *)(v51 - 0x6AA16EFD2495BBC4) ^ 0xC9)) ^ 0x98) << 16) | ((v65[v72 ^ 0xD7] ^ ((v72 ^ 0xA7) + (v72 ^ 0x6D) + 1 - 2 * (((v72 ^ 0xA7) + (v72 ^ 0x6D) + 1) & 0x1F) - 97) ^ 0x47) << 8)) ^ 0x945771BF;
  HIDWORD(a41) = ((v52 - 896) | 0x250) ^ 0x6D0;
  v73 = a51[6];
  v386 = (HIDWORD(a41) - 1041) & 0x43611CC3 ^ 0x43611CCFu;
  v391 = (v73 ^ 0x15)
       + (v73 ^ 0xDF)
       + 1
       + (v370[v73 ^ 0x65] ^ 0x9F)
       - 2 * (((v73 ^ 0x15) + (v73 ^ 0xDF) + 1) & (v370[v73 ^ 0x65] ^ 0x1F));
  LOBYTE(v385) = v56[a51[v386] ^ 0x56];
  v74 = a51[14];
  v75 = ((v74 ^ 0x75) + (v74 ^ 0xBF) + 1 - 2 * (((v74 ^ 0x75) + (v74 ^ 0xBF) + 1) & 0x1F) - 97) ^ v65[v74 ^ 5];
  v76 = v53[a51[11] ^ 0xCALL];
  LODWORD(v56) = (v52 - 896) | 0x250;
  v384 = v76 ^ 0x4E ^ (((v76 >> 2) ^ (v76 >> 6) ^ 0xA) - ((v76 >> 1) & 0x48) + 100);
  LODWORD(v71) = v53[a51[15] ^ 0xE5];
  v77 = v53[a51[7] ^ 0x30];
  v78 = v71 ^ 0x7A ^ (((v71 >> 2) ^ (v71 >> 6) ^ 0xA)
                    - ((v71 >> 1) & 0x20)
                    + 80);
  v79 = v77 ^ 0x4A ^ (((v77 >> 2) ^ (v77 >> 6) ^ 0xA) - ((v77 >> 1) & 0x40) + 96);
  v80 = a51[2];
  v81 = (v80 ^ 0x55)
      + (v80 ^ 0xFFFFFF9F)
      + 1
      + (v370[v80 ^ 0x25] ^ 0xFFFFFF9F)
      - 2 * (((v80 ^ 0x55) + (v80 ^ 0xFFFFFF9F) + 1) & (v370[v80 ^ 0x25] ^ 0x1F));
  v82 = a51[10];
  v83 = v65[v82 ^ 0xD6] ^ ((v82 ^ 0xA6)
                                                           + (v82 ^ 0x6C)
                                                           + 1
                                                           - 2 * (((v82 ^ 0xA6) + (v82 ^ 0x6C) + 1) & 0x1F)
                                                           - 97);
  LODWORD(v82) = v53[a51[3] ^ 0x72];
  v84 = (uint64_t)*(&off_24E21C7C0 + (int)(v56 ^ 0x35C));
  v381 = v78 | ((*(unsigned __int8 *)(v58 + (a51[13] ^ 0x47)) ^ 0xC4) << 16) | ((unint64_t)(v385 ^ 0x7Au) << 24) | ((v75 ^ 0xB9) << 8);
  v85 = v78 ^ 0xFE;
  v86 = *(_DWORD *)(v84 + 4 * ((v381 ^ 0x435A4CFE) >> 16));
  HIDWORD(v88) = v86 ^ 0x1A211D51;
  LODWORD(v88) = ~v86;
  v87 = v88 >> 30;
  v89 = v82 ^ (((v82 >> 2) ^ (v82 >> 6) ^ 0xA)
             - ((2 * ((v82 >> 2) ^ (v82 >> 6) ^ 0xA)) & 0xDDDDDDDD)
             + 110);
  v90 = (char *)*(&off_24E21C7C0 + (int)(v56 ^ 0x373)) - 12;
  v379 = v372[*a51 ^ 0xBBLL];
  LODWORD(v73) = *(_DWORD *)&v90[4 * (v379 ^ 0x92)] + 615238616;
  LODWORD(v80) = (v73 >> 4) & 0x9EA3CED ^ v73;
  v91 = (v52 - 896) | 0x250;
  HIDWORD(v385) = v91;
  v92 = (char *)*(&off_24E21C7C0 + v91 - 577) - 8;
  LODWORD(v380) = v83;
  v93 = *(_DWORD *)&v92[4 * (v83 ^ 0xC9)];
  HIDWORD(v88) = v93 ^ 0x1DE4589A;
  LODWORD(v88) = v93;
  v94 = v80 ^ v87;
  v95 = (v88 >> 30) - 1182257522 - ((2 * (v88 >> 30)) & 0x73105D1C);
  v96 = a51[1] ^ 0x26;
  v97 = v94 ^ v95 ^ 0xE4364507;
  if ((_DWORD)v96 == 218)
    v97 = v94 ^ 0xA2419476;
  v98 = v95 ^ 0xB9882E8E;
  v99 = v98 | v94;
  v100 = (v97 ^ 0xA2419476) & v98;
  v101 = *(unsigned __int8 *)(v58 + v96);
  v102 = (char *)*(&off_24E21C7C0 + (v91 ^ 0x24F)) - 12;
  HIDWORD(a22) = v79;
  v103 = -786474903 * *(_DWORD *)&v102[4 * (v79 ^ 0x41)] + 435072584;
  v378 = v101;
  v104 = *(_DWORD *)(v84 + 4 * (v101 ^ 0xE5));
  HIDWORD(v106) = v104 ^ 0x1A211D51;
  LODWORD(v106) = ~v104;
  v105 = v106 >> 30;
  v107 = *(_DWORD *)&v92[4 * (v75 ^ 0xBE)];
  v108 = (v103 >> 1) & 0x3CF974E ^ v103 ^ v99;
  HIDWORD(v106) = v107 ^ 0x1DE4589A;
  LODWORD(v106) = v107;
  v109 = v106 >> 30;
  v377 = *(unsigned __int8 *)(v58 + (a51[5] ^ 0x45));
  v110 = *(_DWORD *)(v84 + 4 * (v377 ^ 0xAD));
  v111 = v108 ^ v100;
  HIDWORD(v106) = v110 ^ 0x1A211D51;
  LODWORD(v106) = ~v110;
  v112 = v106 >> 30;
  HIDWORD(v380) = v81;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (v81 ^ 0xB)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (v81 ^ 0xB)];
  v113 = v106 >> 30;
  v376 = v372[a51[4] ^ 0x95];
  v114 = *(_DWORD *)&v90[4 * (v376 ^ 0x45)] + 615238616;
  v374 = v372[a51[8] ^ 0x6ELL];
  v375 = *(unsigned __int8 *)(v371 + (a51[9] ^ 0xD0));
  v115 = v105 ^ v109;
  v116 = *(_DWORD *)&v90[4 * (v374 ^ 0xEC)] + 615238616;
  v117 = *(_DWORD *)(v84 + 4 * (v375 ^ 0xD9));
  HIDWORD(v106) = v117 ^ 0x1A211D51;
  LODWORD(v106) = ~v117;
  v118 = v106 >> 30;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (v391 ^ 0x19)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (v391 ^ 0x19)];
  v119 = (v116 >> 4) & 0x9EA3CED ^ v116 ^ v112;
  v120 = -786474903 * *(_DWORD *)&v102[4 * v85] + 435072584;
  LODWORD(v101) = v119 ^ v113 ^ v120 ^ (v120 >> 1) & 0x3CF974E;
  v121 = *(_DWORD *)&v90[4 * (v385 ^ 0xAF)] + 615238616;
  HIDWORD(v373) = v89 ^ 0x44;
  v122 = -786474903 * *(_DWORD *)&v102[4 * (v89 ^ 2)] + 435072584;
  v123 = (v121 >> 4) & 0x9EA3CED ^ v121 ^ v118 ^ (v106 >> 30) ^ v122 ^ (v122 >> 1) & 0x3CF974E;
  v124 = *(_DWORD *)(v84
                   + 4 * (((v123 ^ 0xDB77D7E3) >> (v101 & 0x10) >> (v101 & 0x10 ^ 0x10)) ^ 0x69u));
  v125 = (v114 >> 4) & 0x9EA3CED ^ v114 ^ v115;
  HIDWORD(v106) = v124 ^ 0x1A211D51;
  LODWORD(v106) = ~v124;
  v126 = v106 >> 30;
  LODWORD(v373) = v384;
  v127 = -786474903 * *(_DWORD *)&v102[4 * (v384 ^ 0xA8)] + 435072584;
  v128 = v125 ^ v127 ^ (v127 >> 1) & 0x3CF974E;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v101) ^ 0x1F)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v101) ^ 0x1F)];
  v129 = v106 >> 30;
  v130 = *(_DWORD *)&v90[4 * (HIBYTE(v111) ^ 0xC6)] + 615238616;
  v131 = *(_DWORD *)(v84 + 4 * ((v111 ^ 0x509D5A00) >> 16));
  v132 = (v130 >> 4) & 0x9EA3CED ^ v130 ^ v126;
  HIDWORD(v106) = v131 ^ 0x1A211D51;
  LODWORD(v106) = ~v131;
  v133 = v106 >> 30;
  v134 = -786474903 * *(_DWORD *)&v102[4 * (v128 ^ 0x50)] + 435072584;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v123) ^ 0x9C)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v123) ^ 0x9C)];
  v135 = BYTE1(v128) ^ 0x7C;
  v136 = *(_DWORD *)&v90[4 * ((v128 ^ 0x36027C7Bu) >> 24)];
  v137 = v132 ^ v129 ^ v134 ^ (v134 >> 1) & 0x3CF974E;
  v138 = -786474903 * *(_DWORD *)&v102[4 * (v101 ^ 0x48)] + 435072584;
  v139 = ((v136 + 615238616) >> 4) & 0x9EA3CED ^ (v136 + 615238616) ^ (v106 >> 30) ^ v138 ^ v133;
  v140 = *(_DWORD *)(v84 + 4 * (BYTE2(v128) ^ 0x6Bu));
  HIDWORD(v106) = v140 ^ 0x1A211D51;
  LODWORD(v106) = ~v140;
  v141 = v106 >> 30;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * ((unsigned __int16)(v111 ^ 0x5A00) >> 8)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * ((unsigned __int16)(v111 ^ 0x5A00) >> 8)];
  v142 = v106 >> 30;
  v143 = *(_DWORD *)&v90[4 * (BYTE3(v101) ^ 0x31)] + 615238616;
  v144 = *(_DWORD *)(v84 + 4 * (BYTE2(v101) ^ 0x31u));
  v145 = (v143 >> 4) & 0x9EA3CED ^ v143 ^ v141;
  HIDWORD(v106) = v144 ^ 0x1A211D51;
  LODWORD(v106) = ~v144;
  v146 = v106 >> 30;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * v135] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * v135];
  LODWORD(v101) = *(_DWORD *)&v90[4 * (HIBYTE(v123) ^ 0x4D)] + 615238616;
  v147 = -786474903 * *(_DWORD *)&v102[4 * v111] + 435072584;
  v148 = (v101 >> 4) & 0x9EA3CED ^ v101 ^ v146 ^ (v106 >> 30) ^ v147 ^ (v147 >> 1) & 0x3CF974E;
  v149 = *(_DWORD *)(v84 + 4 * (BYTE2(v148) ^ 0x4Eu));
  v150 = v145 ^ v142;
  HIDWORD(v106) = v149 ^ 0x1A211D51;
  LODWORD(v106) = ~v149;
  v151 = v106 >> 30;
  v152 = -786474903 * *(_DWORD *)&v102[4 * (v123 ^ 0xC8)] + 435072584;
  v153 = v150 ^ v152 ^ (v152 >> 1) & 0x3CF974E;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v153) ^ 0xC6)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v153) ^ 0xC6)];
  v154 = v139 ^ (v138 >> 1) & 0x3CF974E;
  v155 = *(_DWORD *)&v90[4 * (HIBYTE(v137) ^ 0x15)] + 615238616;
  v156 = (v155 >> 4) & 0x9EA3CED ^ v155 ^ v151 ^ (v106 >> 30);
  v157 = -786474903 * *(_DWORD *)&v102[4 * (v154 ^ 0xEA)] + 435072584;
  v158 = v156 ^ v157 ^ (v157 >> 1) & 0x3CF974E;
  v159 = *(_DWORD *)(v84 + 4 * (BYTE2(v137) ^ 0x66u));
  HIDWORD(v106) = v159 ^ 0x1A211D51;
  LODWORD(v106) = ~v159;
  v160 = v106 >> 30;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v148) ^ 0x26)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v148) ^ 0x26)];
  v161 = *(_DWORD *)&v90[4 * (HIBYTE(v154) ^ 0xBE)] + 615238616;
  v162 = (v161 >> 4) & 0x9EA3CED ^ v161 ^ v160 ^ (v106 >> 30);
  v163 = *(_DWORD *)(v84 + 4 * (BYTE2(v154) ^ 0x97u));
  HIDWORD(v106) = v163 ^ 0x1A211D51;
  LODWORD(v106) = ~v163;
  v164 = v106 >> 30;
  HIDWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v137) ^ 0x8A)] ^ 0x1DE4589A;
  LODWORD(v106) = *(_DWORD *)&v92[4 * (BYTE1(v137) ^ 0x8A)];
  v165 = *(_DWORD *)&v90[4 * (HIBYTE(v153) ^ 0x49)] + 615238616;
  v166 = -786474903 * *(_DWORD *)&v102[4 * (v148 ^ 0x3A)] + 435072584;
  v167 = (v165 >> 4) & 0x9EA3CED ^ v165 ^ v164 ^ (v106 >> 30) ^ v166 ^ (v166 >> 1) & 0x3CF974E;
  v168 = *(_DWORD *)&v90[4 * (HIBYTE(v148) ^ 0x32)];
  v169 = v168 + 615238616;
  v170 = (v168 + 615238616) >> 4;
  v171 = (v170 & v168 & 1) == 0;
  v172 = 65076304 - (v168 & 1 | 0x1F07E28);
  if (v171)
    v172 = *(_DWORD *)&v90[4 * (HIBYTE(v148) ^ 0x32)] & 1 | 0x1F07E28;
  v173 = v170 & 0x9EA3CED;
  v174 = *(_DWORD *)(v84 + 4 * (BYTE2(v153) ^ 0x3Bu));
  v175 = v173 - 32538152 + v172;
  HIDWORD(v177) = v174 ^ 0x1A211D51;
  LODWORD(v177) = ~v174;
  v176 = v177 >> 30;
  v178 = *(_DWORD *)&v92[4 * (BYTE1(v154) ^ 0x83)];
  HIDWORD(v177) = v178 ^ 0x1DE4589A;
  LODWORD(v177) = v178;
  v179 = v176 ^ v169 & 0xFFFFFFFE ^ (v177 >> 30);
  v180 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v137 ^ 0xCE)];
  v181 = v179 ^ v180 ^ v175;
  v182 = (v181 ^ 0x13B68228 ^ (((((v180 >> 1) & 0x3CF974E) - (v181 ^ (v180 >> 1) & 0x3CF974E)) ^ -v181)
                             + 330727976
                             - ((2 * ((((v180 >> 1) & 0x3CF974E) - (v181 ^ (v180 >> 1) & 0x3CF974E)) ^ -v181)) & 0x276D0450)))
       + ((v180 >> 1) & 0x3CF974E);
  v183 = v182 - ((2 * v182) & 0xA179A458) + 1354551852;
  v184 = v183 ^ 0x65A8DC25;
  v185 = *(_DWORD *)(v84 + 4 * ((v183 ^ 0x65A8DC25) >> 16));
  HIDWORD(v177) = v185 ^ 0x1A211D51;
  LODWORD(v177) = ~v185;
  v186 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v167) ^ 0xE0)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v167) ^ 0xE0)];
  v187 = 435072584
       - 786474903 * *(_DWORD *)&v102[4 * (v153 ^ 0x89) + 176 + 4 * ((2 * v153) & 0x56 ^ 0xFFFFFFED)];
  v188 = v162 ^ v187 ^ (v187 >> 1) & 0x3CF974E;
  v189 = *(_DWORD *)&v90[4 * (HIBYTE(v158) ^ 0x59)] + 615238616;
  BYTE1(v185) = BYTE1(v188) ^ 0xAC;
  v190 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v188 ^ 0x9E)];
  v191 = (v189 >> 4) & 0x9EA3CED ^ v189 ^ (v177 >> 30) ^ v190 ^ (v190 >> 1) & 0x3CF974E ^ v186;
  v192 = *(_DWORD *)&v90[4 * (HIBYTE(v188) ^ 0xE5)] + 615238616;
  v193 = *(_DWORD *)(v84 + 4 * ((v158 ^ 0xCF5F1448) >> 16));
  HIDWORD(v177) = v193 ^ 0x1A211D51;
  LODWORD(v177) = ~v193;
  v194 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v183) ^ 0x97)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v183) ^ 0x97)];
  v195 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v167 ^ 0xF2)];
  v196 = v194 ^ v192 ^ ((v192 & 0x9EA3CED9) >> (v113 & 4) >> (v113 & 4 ^ 4)) ^ v195 ^ (v195 >> 1) & 0x3CF974E ^ (v177 >> 30);
  v197 = *(_DWORD *)(v84 + 4 * (BYTE2(v188) ^ 0x90u));
  HIDWORD(v177) = v197 ^ 0x1A211D51;
  LODWORD(v177) = ~v197;
  v198 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v158) ^ 0x5F)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v158) ^ 0x5F)];
  v199 = *(_DWORD *)&v90[4 * ((v167 ^ 0xB9CDABD9) >> 24)] + 615238616;
  v200 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v183 ^ 0xE)];
  v201 = *(_DWORD *)(v84 + 4 * ((v167 ^ 0xB9CDABD9) >> 16));
  v202 = (v199 >> 4) & 0x9EA3CED ^ v199 ^ (v177 >> 30) ^ v198 ^ v200 ^ (v200 >> 1) & 0x3CF974E;
  HIDWORD(v177) = v201 ^ 0x1A211D51;
  LODWORD(v177) = ~v201;
  v203 = v177 >> 30;
  v204 = *(_DWORD *)&v92[4 * BYTE1(v185)];
  HIDWORD(v177) = v204 ^ 0x1DE4589A;
  LODWORD(v177) = v204;
  v205 = *(_DWORD *)&v90[4 * HIBYTE(v184)] + 615238616;
  v206 = v203 ^ v205 ^ (v177 >> 30) ^ (v205 >> 4) & 0x9EA3CED;
  v207 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v158 ^ 0x48)];
  v208 = v206 ^ v207 ^ (v207 >> 1) & 0x3CF974E;
  v209 = *(_DWORD *)(v84 + 4 * (BYTE2(v208) ^ 0xB8u));
  HIDWORD(v177) = v209 ^ 0x1A211D51;
  LODWORD(v177) = ~v209;
  v210 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v202) ^ 0xE9)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v202) ^ 0xE9)];
  v211 = *(_DWORD *)&v90[4 * (HIBYTE(v191) ^ 0xDC)] + 615238616;
  v212 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v196 ^ 0x6C)];
  v213 = (v211 >> 4) & 0x9EA3CED ^ v211 ^ v210 ^ (v177 >> 30) ^ v212 ^ (v212 >> 1) & 0x3CF974E;
  v214 = *(_DWORD *)(v84 + 4 * (BYTE2(v191) ^ 0xE9u));
  HIDWORD(v177) = v214 ^ 0x1A211D51;
  LODWORD(v177) = ~v214;
  v215 = v177 >> 30;
  v216 = *(_DWORD *)&v92[4 * (((v208 ^ 0x54D14B41) >> (v206 & 8) >> (v206 & 8 ^ 8)) ^ 0x4B)];
  HIDWORD(v177) = v216 ^ 0x1DE4589A;
  LODWORD(v177) = v216;
  v217 = *(_DWORD *)&v90[4 * (HIBYTE(v196) ^ 0xF2)] + 615238616;
  v218 = (v217 >> 4) & 0x9EA3CED ^ v217 ^ v215 ^ (v177 >> 30);
  v219 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v202 ^ 0xD6)];
  v220 = *(_DWORD *)(v84 + 4 * (BYTE2(v196) ^ 0xAEu));
  v221 = v218 ^ v219 ^ (v219 >> 1) & 0x3CF974E;
  HIDWORD(v177) = v220 ^ 0x1A211D51;
  LODWORD(v177) = ~v220;
  v222 = *(_DWORD *)&v90[4 * (HIBYTE(v202) ^ 0x12)] + 615238616;
  v223 = (v177 >> 30) ^ v222 ^ (v222 >> 4) & 0x9EA3CED;
  v224 = *(_DWORD *)&v92[4 * (BYTE1(v191) ^ 0x6D)];
  v225 = (4 * v224) ^ 0x77916268;
  v226 = v223 | v225;
  HIDWORD(v177) = *(_DWORD *)(v84 + 4 * (BYTE2(v202) ^ 0x3Cu));
  LODWORD(v177) = ~HIDWORD(v177);
  v227 = v223 & v225 & 0xFFFFFFFC | (v224 >> 30);
  v228 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v208 ^ 0x6A)];
  v229 = v226 ^ v228 ^ v227;
  v230 = *(_DWORD *)&v90[4 * (HIBYTE(v208) ^ 0xC2)] + 615238616;
  v231 = (v177 >> 30) ^ v230 ^ (v230 >> 4) & 0x9EA3CED;
  v232 = *(_DWORD *)&v92[4 * (BYTE1(v196) ^ 0x56)];
  v233 = v231 ^ (4 * v232) ^ (v232 >> 30);
  v234 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v191 ^ 0xCC)];
  v235 = v233 ^ v234 ^ (v234 >> 1) & 0x3CF974E;
  v236 = *(_DWORD *)(v84 + 4 * (BYTE2(v235) ^ 0xF0u));
  v237 = v229 ^ (v228 >> 1) & 0x3CF974E;
  HIDWORD(v177) = v236 ^ 0x1A211D51;
  LODWORD(v177) = ~v236;
  v238 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v237) ^ 0x1A)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v237) ^ 0x1A)];
  v239 = *(_DWORD *)&v90[4 * (HIBYTE(v221) ^ 0x60)];
  v240 = *(_DWORD *)&v90[4 * (HIBYTE(v213) ^ 0x96)] + 615238616;
  v241 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v221 ^ 0x1A)];
  v242 = v238 ^ v240 ^ (v240 >> 4) & 0x9EA3CED ^ (v177 >> 30) ^ v241 ^ (v241 >> 1) & 0x3CF974E;
  v243 = v239 - ((2 * v239 + 1230477232) & 0xA87DD45A) + 2028647941;
  v244 = (v243 >> 4) ^ 0x543EEA2;
  v245 = v244 & 0xC82CE0 ^ v243 & 0x6C9ADE0;
  v246 = v244 & 0x922100D ^ v243 & 0xF936521F;
  v247 = *(_DWORD *)(v84 + 4 * (BYTE2(v213) ^ 0xCCu));
  v248 = *(_DWORD *)&v92[4 * (BYTE1(v235) ^ 0x5B)];
  HIDWORD(v177) = v248 ^ v247 ^ 0x7C545CB;
  LODWORD(v177) = v247 ^ ~v248;
  v249 = v246 | v245;
  v250 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * v237];
  v251 = (v177 >> 30) ^ v250 ^ (v250 >> 1) & 0x3CF974E ^ v249;
  v252 = *(_DWORD *)&v90[4 * (HIBYTE(v237) ^ 0xAE)];
  v253 = ((2 * v252 + 1746380796) & 0x613FEFB4) + ((v252 - 200551426) ^ 0x309FF7DA);
  v254 = *(_DWORD *)(v84 + 4 * ((v221 ^ 0xF626D51A) >> 16));
  v255 = *(_DWORD *)&v92[4 * (BYTE1(v213) ^ 0x43)];
  HIDWORD(v177) = v255 ^ 0x1DE4589A ^ v254 ^ 0x1A211D51;
  LODWORD(v177) = v254 ^ ~v255;
  v256 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v235 ^ 0x2A)];
  v257 = (v177 >> 30) ^ v253 ^ v256 ^ (v253 >> 4) & 0x9EA3CED;
  v258 = *(_DWORD *)(v84 + 4 * (BYTE2(v237) ^ 0xF3u));
  HIDWORD(v177) = v258 ^ 0x1A211D51;
  LODWORD(v177) = ~v258;
  v259 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v221) ^ 0x9E)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v221) ^ 0x9E)];
  v260 = *(_DWORD *)&v90[4 * (HIBYTE(v235) ^ 0x81)] + 615238616;
  v261 = (v260 >> 4) & 0x9EA3CED ^ v260 ^ v259;
  v262 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v213 ^ 0x42)];
  v263 = v261 ^ (v177 >> 30) ^ v262 ^ (v262 >> 1) & 0x3CF974E;
  v264 = *(_DWORD *)(v84 + 4 * (BYTE2(v263) ^ 0x77u));
  v265 = v257 ^ (v256 >> 1) & 0x3CF974E;
  HIDWORD(v177) = v264 ^ 0x1A211D51;
  LODWORD(v177) = ~v264;
  v266 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v265) ^ 0x21)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v265) ^ 0x21)];
  v267 = *(_DWORD *)&v90[4 * (HIBYTE(v242) ^ 0xF5)] + 615238616;
  v268 = (v267 >> 4) & 0x9EA3CED ^ v267 ^ v266 ^ (v177 >> 30);
  v269 = *(_DWORD *)(v84 + 4 * (BYTE2(v242) ^ 0x32u));
  HIDWORD(v177) = v269 ^ 0x1A211D51;
  LODWORD(v177) = ~v269;
  v270 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v263) ^ 0xF3)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v263) ^ 0xF3)];
  v271 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v251 ^ 0xCF)];
  v272 = v268 ^ v271 ^ (v271 >> 1) & 0x3CF974E;
  v273 = *(_DWORD *)&v90[4 * (HIBYTE(v251) ^ 0xEC)] + 615238616;
  v274 = *(_DWORD *)(v84 + 4 * (BYTE2(v251) ^ 0xB5u));
  v275 = (v273 >> 4) & 0x9EA3CED ^ v273 ^ v270 ^ (v177 >> 30);
  HIDWORD(v177) = v274 ^ 0x1A211D51;
  LODWORD(v177) = ~v274;
  v276 = v177 >> 30;
  v277 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v265 ^ 0xA0)];
  v278 = v275 ^ v277 ^ (v277 >> 1) & 0x3CF974E;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v242) ^ 0xD0)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v242) ^ 0xD0)];
  v279 = *(_DWORD *)&v90[4 * (HIBYTE(v263) ^ 0x7E)];
  v280 = ((2 * v279 + 1746380796) & 0x613FEFB4) + ((v279 - 200551426) ^ 0x309FF7DA);
  v281 = *(_DWORD *)&v90[4 * (HIBYTE(v265) ^ 0x80)] + 615238616;
  v282 = (v281 >> 4) & 0x9EA3CED ^ v281 ^ (v177 >> 30) ^ v276;
  v283 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v263 ^ 0xBC)];
  v284 = v282 ^ v283 ^ (v283 >> 1) & 0x3CF974E;
  v285 = *(_DWORD *)(v84 + 4 * (BYTE2(v265) ^ 0xB4u));
  v286 = *(_DWORD *)&v92[4 * (BYTE1(v251) ^ 0x92)];
  HIDWORD(v177) = v286 ^ v285 ^ 0x7C545CB;
  LODWORD(v177) = v285 ^ ~v286;
  v287 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v242 ^ 0x5D)];
  v288 = (v177 >> 30) ^ v280 ^ v287 ^ (v280 >> 4) & 0x9EA3CED ^ (v287 >> 1) & 0x3CF974E;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v284) ^ 0xFC)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v284) ^ 0xFC)];
  v289 = v177 >> 30;
  BYTE1(v287) = BYTE1(v278) ^ 0xD;
  HIDWORD(v177) = *(_DWORD *)(v84 + 4 * (BYTE2(v288) ^ 0xA2u));
  LODWORD(v177) = ~HIDWORD(v177);
  v290 = *(_DWORD *)&v90[4 * (HIBYTE(v272) ^ 0xA8)] + 615238616;
  v291 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v278 ^ 5)];
  v292 = v290 ^ (v177 >> 30) ^ v289 ^ (v290 >> 4) & 0x9EA3CED ^ v291;
  v293 = *(_DWORD *)(v84 + 4 * (BYTE2(v272) ^ 0x95u));
  v294 = v292 ^ (v291 >> 1) & 0x3CF974E;
  HIDWORD(v177) = v293 ^ 0x1A211D51;
  LODWORD(v177) = ~v293;
  v295 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v288) ^ 0x77)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v288) ^ 0x77)];
  v296 = *(_DWORD *)&v90[4 * (((v278 ^ 0x95B10D2E) >> 24) - (((v278 ^ 0x95B10D2E) >> 23) & 0x12C)) + 600] + 615238616;
  v297 = (v296 >> 4) & 0x9EA3CED ^ v296 ^ v295 ^ (v177 >> 30);
  v298 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v284 ^ 0xF8)];
  v299 = *(_DWORD *)(v84 + 4 * (BYTE2(v278) ^ 0xD8u));
  HIDWORD(v177) = v299 ^ 0x1A211D51;
  LODWORD(v177) = ~v299;
  v300 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v272) ^ 0x7C)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v272) ^ 0x7C)];
  v301 = v297 ^ v298 ^ (v298 >> 1) & 0x3CF974E;
  v302 = *(_DWORD *)&v90[4 * (HIBYTE(v284) ^ 0x76)] + 615238616;
  v303 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v288 ^ 0xA6)];
  v304 = *(_DWORD *)(v84 + 4 * (BYTE2(v284) ^ 0x5Eu));
  v305 = (v302 >> 4) & 0x9EA3CED ^ v302 ^ v300 ^ (v177 >> 30) ^ v303;
  HIDWORD(v177) = v304 ^ 0x1A211D51;
  LODWORD(v177) = ~v304;
  v306 = v305 ^ (v303 >> 1) & 0x3CF974E;
  v307 = *(_DWORD *)&v90[4 * (HIBYTE(v288) ^ 0xB0)] + 615238616;
  HIDWORD(v177) = v177 >> 30;
  LODWORD(v177) = HIDWORD(v177);
  v308 = *(_DWORD *)&v92[4 * BYTE1(v287)];
  v309 = (v177 >> 22) ^ __ROR4__((v307 >> 4) & 0x9EA3CED ^ v307, 22);
  HIDWORD(v177) = v308 ^ 0x1DE4589A;
  LODWORD(v177) = v308;
  v310 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v272 ^ 0x4B)];
  v311 = v310 ^ (v177 >> 30) ^ __ROR4__(v309 ^ 0x6F05017, 10) ^ (v310 >> 1) & 0x3CF974E;
  v312 = *(_DWORD *)(v84 + 4 * (BYTE2(v311) ^ 0x5Cu));
  HIDWORD(v177) = v312 ^ 0x1A211D51;
  LODWORD(v177) = ~v312;
  v313 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v306) ^ 0x54)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v306) ^ 0x54)];
  v314 = *(_DWORD *)&v90[4 * (HIBYTE(v294) ^ 0x27)] + 615238616;
  v315 = (v314 >> 4) & 0x9EA3CED ^ v314 ^ (v177 >> 30);
  v316 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v301 ^ 0xF4)];
  v317 = v315 ^ v316 ^ v313 ^ (v316 >> 1) & 0x3CF974E;
  v318 = *(_DWORD *)(v84 + 4 * (BYTE2(v294) ^ 0x16u));
  HIDWORD(v177) = v318 ^ 0x1A211D51;
  LODWORD(v177) = ~v318;
  v319 = v177 >> 30;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v311) ^ 0x92)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v311) ^ 0x92)];
  v320 = *(_DWORD *)&v90[4 * (HIBYTE(v301) ^ 0xE5)] + 615238616;
  v321 = (v320 >> 4) & 0x9EA3CED ^ v320 ^ v319 ^ (v177 >> 30);
  v322 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v306 ^ 0x47)];
  v323 = *(_DWORD *)(v84 + 4 * (BYTE2(v301) ^ 0x2Cu));
  v324 = v321 ^ v322 ^ (v322 >> 1) & 0x3CF974E;
  HIDWORD(v177) = v323 ^ 0x1A211D51;
  LODWORD(v177) = ~v323;
  v325 = v177 >> 30;
  LODWORD(v385) = v294;
  HIDWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v294) ^ 0x8E)] ^ 0x1DE4589A;
  LODWORD(v177) = *(_DWORD *)&v92[4 * (BYTE1(v294) ^ 0x8E)];
  v326 = *(_DWORD *)&v90[4 * (HIBYTE(v306) ^ 0x3B)] + 615238616;
  v327 = (v326 >> 4) & 0x9EA3CED ^ v326 ^ (v177 >> 30);
  v328 = *(_DWORD *)(v84 + 4 * (BYTE2(v306) ^ 0xE7u));
  HIDWORD(v177) = v328 ^ 0x1A211D51;
  LODWORD(v177) = ~v328;
  v329 = *(_DWORD *)&v92[4
                       * (((v301 ^ 0x73459FDF) >> ((v301 ^ 0xDF) & 8) >> ((v301 ^ 0xDF) & 8 ^ 8)) ^ 0x4B)];
  v330 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v311 ^ 0xF0)];
  v331 = v327 ^ v325 ^ v330 ^ (v330 >> 1) & 0x3CF974E;
  v332 = *(_DWORD *)&v90[4 * (HIBYTE(v311) ^ 0x8D)] + 615238616;
  v333 = 435072584 - 786474903 * *(_DWORD *)&v102[4 * (v294 ^ 6)];
  v334 = (v332 >> 4) & 0x9EA3CED ^ v332 ^ (v177 >> 30) ^ (v329 >> 30) ^ (4 * v329) ^ v333 ^ (v333 >> 1) & 0x3CF974E;
  v335 = (char *)*(&off_24E21C7C0 + HIDWORD(v385) - 438) - 4;
  v336 = *(_DWORD *)&v335[4 * (HIBYTE(v317) ^ 8)];
  v337 = (-347088973 * v336 + 907174238) ^ (-1388355892 * v336 - 1863270760);
  v338 = (char *)*(&off_24E21C7C0 + (HIDWORD(v385) ^ 0x306)) - 8;
  v339 = (v337 - 1599925471 - ((2 * v337) & 0x41462642)) ^ *(_DWORD *)&v338[4
                                                                          * ((((v334 ^ 0xAA89EE4F) >> 16) | 0x48) ^ ((v334 ^ 0xAA89EE4F) >> 16) & 0x48)];
  LODWORD(v383) = 2 * ((v331 >> 8) ^ 0x90E176);
  HIDWORD(v383) = BYTE1(v331) ^ 0x76;
  v340 = (uint64_t)*(&off_24E21C7C0 + HIDWORD(v385) - 255);
  v341 = (v339 + 1479037456 - ((2 * v339) & 0xB050A420)) ^ *(_DWORD *)(v340
                                                                     + 4
                                                                     * (HIDWORD(v383)
                                                                      - (v383 & 0x160)
                                                                      + 176));
  v342 = *(_DWORD *)&v335[4 * (HIBYTE(v324) ^ 0xE4)];
  v343 = *(_DWORD *)&v335[4 * (HIBYTE(v331) ^ 0x90)];
  v344 = *(_DWORD *)&v335[4 * (HIBYTE(v334) ^ 0x8A)];
  LODWORD(v335) = *(_DWORD *)&v338[4 * (BYTE2(v317) ^ 0x6F)];
  v345 = v341 - 1639534476 - ((2 * v341) & 0x3C8D60E8);
  HIDWORD(v382) = *(_DWORD *)&v338[4 * (BYTE2(v324) ^ 0x94)];
  v346 = (-1863270760 - 1388355892 * v344) ^ (-347088973 * v344 + 907174238);
  v347 = ((unsigned __int16)(v334 ^ 0xEE4F) >> 8);
  v348 = *(_DWORD *)(v340 + 4 * (v347 ^ 0xB0u));
  v349 = (v317 >> 8) ^ 0x86FF3;
  v350 = BYTE1(v317) ^ 0xF3u;
  LODWORD(v382) = *(_DWORD *)(v340 + 4 * (BYTE1(v317) ^ 0x43u));
  LODWORD(v338) = *(_DWORD *)&v338[4 * (BYTE2(v331) ^ 0xE1)] ^ (BYTE1(v324) + 1479037456 - ((v324 >> 7) & 0x20)) ^ *(_DWORD *)(v340 + 4 * (BYTE1(v324) ^ 0x69u)) ^ (v346 - 1599925471 - ((2 * v346) & 0x41462642));
  v351 = (uint64_t)*(&off_24E21C7C0 + HIDWORD(v385) - 241);
  v352 = *(_DWORD *)(v351 + 4 * (v331 ^ 0x63u));
  v353 = *(unsigned int *)(v351 + 4 * (v334 ^ 0x1Bu));
  v354 = *(_DWORD *)(v351 + 4 * (v317 ^ 0xCCu));
  v355 = *(_DWORD *)(v351 + 4 * (v324 ^ 0x66u)) ^ v387 ^ v345;
  v356 = v354 ^ v388 ^ ((_DWORD)v338 - 1639534476 - ((2 * (_DWORD)v338) & 0x3C8D60E8));
  v357 = (char *)*(&off_24E21C7C0 + HIDWORD(v385) - 331) - 12;
  *a51 = (16 - 27 * v357[HIBYTE(v355) ^ 0x84]) ^ 0x65;
  v358 = (char *)*(&off_24E21C7C0 + HIDWORD(v385) - 243) - 12;
  a51[15] = v358[v356 ^ 0xBCLL] ^ 0xDC ^ (v358[v356 ^ 0xBCLL] >> 2) & 0x1A;
  v359 = (907174238 - 347088973 * v342) ^ (-1863270760 - 1388355892 * v342);
  v360 = v348 ^ v335 ^ (v347 + 1479037456 - ((v334 >> 7) & 0x20)) ^ (v359
                                                                                 - 1599925471
                                                                                 - ((2 * v359) & 0x41462642));
  v361 = v352 ^ v389 ^ (v360 - 1639534476 - ((2 * v360) & 0x3C8D60E8));
  v362 = (char *)*(&off_24E21C7C0 + (HIDWORD(v385) ^ 0x3DF)) - 4;
  a51[5] = v362[BYTE2(v361) ^ 0xB0] ^ 0x53;
  a51[13] = v362[BYTE2(v356) ^ 0xD2] ^ 0xA1;
  v363 = (-1863270760 - 1388355892 * v343) ^ (907174238 - 347088973 * v343);
  v364 = HIDWORD(v382) ^ (v350 + 1479037456 - ((2 * v349) & 0x20)) ^ v382 ^ (v363
                                                                           - 1599925471
                                                                           - ((2 * v363) & 0x41462642));
  v365 = v353 ^ v390 ^ (v364 - 1639534476 - ((2 * v364) & 0x3C8D60E8));
  a51[8] = (16 - 27 * v357[HIBYTE(v365) ^ 0xAFLL]) ^ 0xCB;
  a51[4] = (16 - 27 * v357[BYTE3(v361) ^ 0x18]) ^ 0x98;
  v366 = v358[v361 ^ 0x7ALL];
  v367 = (v366 >> 2) & 0x1A ^ v366;
  LOBYTE(v347) = ((v367 ^ 0x21) - 107) ^ ((v367 ^ 0xB5) + 1);
  a51[7] = (v367 ^ 0xB2 ^ (v347 - ((2 * v347) & 0xF0) - 8)) - 108;
  a51[9] = v362[((((BYTE2(v365) ^ 0xE) + (BYTE2(v365) ^ 0xFFFFFF30) + 1) ^ 0xFFFFFFFE) + (BYTE2(v365) ^ 0xE)) ^ 0x5ELL] ^ 0x26;
  a51[v386] = (16 - 27 * v357[HIBYTE(v356) ^ 0xD0]) ^ 0x4F;
  a51[11] = v358[v365 ^ 0x78] ^ (v358[v365 ^ 0x78] >> 2) & 0x1A ^ 0x78;
  v368 = (uint64_t)*(&off_24E21C7C0 + HIDWORD(v385) - 536);
  a51[14] = *(_BYTE *)(v368 + (BYTE1(v356) ^ 0x28)) ^ 0x4B;
  a51[3] = v358[(v355 ^ (BYTE4(v383) - (v383 & 0xC8) + 100)) ^ 0x25] ^ 0x61 ^ (v358[(v355 ^ (BYTE4(v383) - (v383 & 0xC8) + 100)) ^ 0x25] >> 2) & 0x1A;
  a51[6] = *(_BYTE *)(v368 + (BYTE1(v361) ^ 0xCFLL)) ^ 0x2F;
  a51[1] = v362[((unint64_t)(v355 ^ (HIDWORD(v383) - (v383 & 0xC8) - 802318492) ^ 0x4DE50AB2) >> (v294 & 0x10) >> (v294 & 0x10 ^ 0x10)) ^ 0x61] ^ 0xC2;
  a51[10] = *(_BYTE *)(v368 + (BYTE1(v365) ^ 5)) ^ 0x39;
  a51[2] = *(_BYTE *)(v368 + (BYTE1(v355) ^ 0x49)) ^ 0xDD;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a47 + 8 * ((2631 * (a46 > 0x10)) ^ HIDWORD(v385))))(2695041825, 26, v350, v349, v361, HIDWORD(v385), v353, 907174238, a9, v370, v371, v372, v53, a14, v373, v374, v375, v376, v377,
           v378,
           v379,
           a22,
           v380,
           v381,
           v382,
           v383,
           v385,
           8,
           5,
           4,
           1,
           3,
           15,
           10,
           7,
           2,
           13,
           11,
           14,
           v386,
           a41);
}

void sub_21E0978D0()
{
  JUMPOUT(0x21E095BD8);
}

uint64_t sub_21E0979D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((((a4 + 2043) | 4) + ((a4 + 1048) ^ 0xFFFFF3AE)) * (v5 == a5)) ^ (a4 + 1877))))();
}

uint64_t sub_21E097A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  char v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                              + 8
                                                              * (((((a7 - 2375) | 0x560) - 1358) * ((v7 & 8) == 0)) ^ a7)))(a1, a2, a3);
}

uint64_t sub_21E097A38(int a1, int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  int v54;
  char v55;
  int v56;
  char v57;
  uint64_t v58;
  int8x16x4_t v60;

  v56 = -8 - a5;
  v57 = v55 + a2 + a1;
  v58 = (a3 + a2 + a1 + 2382 + v56 + 8);
  v60.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + 78 + (_BYTE)v56 + 8) & 0xF;
  v60.val[0].i64[1] = (v57 + 13 + (_BYTE)v56 + 8) & 0xF;
  v60.val[1].i64[0] = (v57 + 12 + (_BYTE)v56 + 8) & 0xF;
  v60.val[1].i64[1] = (v57 + 11 + (_BYTE)v56 + 8) & 0xF;
  v60.val[2].i64[0] = (v57 + 10 + (_BYTE)v56 + 8) & 0xF;
  v60.val[2].i64[1] = (v53 + (_BYTE)v56 + (a4 ^ 0xE) + 8) & 0xF;
  v60.val[3].i64[0] = (v57 + 8 + (_BYTE)v56 + 8) & 0xF;
  v60.val[3].i64[1] = (v57 + 7 + (_BYTE)v56 + 8) & 0xF;
  *(int8x8_t *)(a50 - 7 + v58) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a50 - 7 + v58), *(int8x8_t *)(v51 + (v58 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v58 & 0xF) + v52 - 6), *(int8x8_t *)(v50 + (v58 & 0xF) - 7)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xE7E7E7E7E7E7E7E7)));
  return (*(uint64_t (**)(__n128))(a46 + 8 * ((878 * (-(v54 & 0xFFFFFFF8) == v56)) ^ (a4 + 1011))))((__n128)xmmword_21E17F900);
}

void sub_21E097B9C()
{
  JUMPOUT(0x21E097AA0);
}

uint64_t sub_21E097BA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,int a42)
{
  uint64_t v42;

  return ((uint64_t (*)(void))(*(_QWORD *)(v42 + 8 * (a1 ^ (2935 * (a42 == a41))))
                            - ((a1 + 1550953933) & 0xA38E4FEF)
                            - 3 * (a1 ^ 0x667u)
                            + 2758))();
}

uint64_t sub_21E097C00(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v55 = (a6 - 474060450);
  *(_BYTE *)(a50 + v55) ^= *(_BYTE *)(v52 + (v55 & 0xF)) ^ *(_BYTE *)((v55 & 0xF) + v53 + 1) ^ *(_BYTE *)(v51 + (v55 & 0xF)) ^ (-25 * (v55 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v54 + 8 * ((71 * (a6 - 1 == v50)) ^ (a4 - 473))) - 4))();
}

void sub_21E097C74()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 100900498)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 8) = v1;
}

void sub_21E097CD8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) ^ (1734664879 * ((-1649565949 - (a1 | 0x9DAD9F03) + (a1 | 0x625260FC)) ^ 0x4D8948E6));
  __asm { BR              X10 }
}

uint64_t sub_21E097DD0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, uint64_t a6, unsigned int a7, unint64_t *a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1948972247 * ((&a4 & 0xFACA3AE8 | ~(&a4 | 0xFACA3AE8)) ^ 0xB0AB30F9);
  a4 = (v11 - 622) ^ v12;
  a7 = 2003183968 - v12;
  a8 = &STACK[0x47DF44ECCB2F1625];
  a5 = &STACK[0x70E23F743AC84B9F];
  a6 = v10;
  v13 = ((uint64_t (*)(int *))(*(_QWORD *)(a1 + 8 * (v11 - 656)) - 12))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * (((((v11 + 127) ^ (*(_DWORD *)(v10 - 0x6898E7DB637CE953) == v8)) & 1)
                                                        * (v11 - 802)) ^ v11))
                                          - 12))(v13);
}

uint64_t sub_21E097EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  int v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (int)((41 * (a10 == v10 - 8)) ^ v12 & 0x9F25776B))
                            - (((v12 & 0x9F25776B ^ 0x2F8) + 433 + 4) ^ (2 * (v12 & 0x9F25776B ^ 0x2F8)))))();
}

void sub_21E097F08(_DWORD *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 *v3;

  v2 = ((unint64_t)(*v3 ^ 0x32u) << 56) | ((unint64_t)(v3[1] ^ 0x32u) << 48) | ((unint64_t)(v3[2] ^ 0x32u) << 40) | ((unint64_t)(v3[3] ^ 0x32u) << 32) | ((v3[4] ^ 0x32) << 24) | ((v3[5] ^ 0x32) << 16) | ((v3[6] ^ 0x32) << 8) | v3[7] ^ 0x32;
  *(_QWORD *)(*(_QWORD *)(v1 + 16) - 0x297F1D8FD62A875ELL) = v2
                                                           - ((2 * v2) & 0x5ACA235D61E8C786)
                                                           - 0x529AEE514F0B9C3DLL;
  *(_DWORD *)v1 = *a1;
}

void sub_21E098004(uint64_t a1)
{
  int v1;
  unsigned int v2;
  int v4;
  unint64_t *v5;
  unsigned int v6;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 16) + 1328090399 * (a1 ^ 0xFFD3643A);
  v2 = 1948972247 * ((&v4 - 258055629 - 2 * (&v4 & 0xF09E6233)) ^ 0x450097DD);
  v6 = 1426307471 - v2;
  v4 = v2 ^ (v1 + 514405674);
  v5 = &STACK[0x1464535CD0E698D];
  sub_21E09FC10((uint64_t)&v4);
  __asm { BR              X9 }
}

uint64_t sub_21E09841C(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;

  v7 = v2 + v5;
  if (v7 <= 0x40)
    v7 = 64;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(*(_QWORD *)(v6 + 8 * (int)((((((v1 + 1116083403) & 0xBD79EAFF) + 360) ^ 0x440) * (a1 - v3 - v4 + v7 > 0xE)) ^ v1))
                                                                                         - 8))(4294967228, 2464169670, 2464169671, 3420812786, &STACK[0x2E0]);
}

uint64_t sub_21E0984AC()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v5 = v1 + v0;
  v6 = v1 + v0 - 2139088826;
  if (v6 <= 0x40)
    v6 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((208 * (v3 + v6 <= (v2 ^ 0xFFFFFBA9 ^ (v5 + ((v2 - 360) ^ 0x80801AAB))))) ^ v2))
                            - 12))();
}

uint64_t sub_21E09851C@<X0>(int a1@<W1>, uint64_t a2@<X4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,arg30_21E09851C a30)
{
  int v30;
  uint64_t v31;
  uint64_t v32;

  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a30.arr[4];
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((2637 * (((v31 + 1) & 0x1FFFFFFF0) == 16)) ^ v30))
                            - ((v30 - 1965) | 0x440u)
                            + 1102))();
}

void sub_21E098578()
{
  JUMPOUT(0x21E098540);
}

uint64_t sub_21E098584@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  int v30;
  int v31;
  uint64_t v32;

  *((_BYTE *)&STACK[0x2E0] + ((a1 + 311) ^ (v31 + 803)) + v30) = a30;
  *((_BYTE *)&STACK[0x2E0] + (a2 - 1830797625)) = *(&a30
                                                                + (((a1 - 459) ^ 0xFFFFFFD5) & 0x100000001));
  return ((uint64_t (*)(void))(*(_QWORD *)(v32 + 8 * ((a1 + 311) ^ 0x805)) - 4))();
}

uint64_t sub_21E098634@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;

  *(_BYTE *)(a1 + (v33 + a2 + 1)) = *(&a30 + v32 + (v30 ^ 0x306u) - 1976076107);
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * (v30 ^ (3681 * ((v31 & 0xFFFFFFFC) == v34)))) - 4))();
}

uint64_t sub_21E098684@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  *(_BYTE *)(a1 + (a2 + 2)) = *(&a30 + (v30 ^ 0x8A3778CA) + v31);
  v33 = 1948972247 * ((~((v32 - 168) | 0xDB3E2262) + ((v32 - 168) & 0xDB3E2262)) ^ 0x915F2873);
  STACK[0x360] = a17;
  *(_DWORD *)(v32 - 152) = v30 - v33 + 2401;
  *(_DWORD *)(v32 - 168) = v33 + 864284138;
  v34 = sub_21E0A4DD0(v32 - 168);
  return a10(v34);
}

uint64_t sub_21E09871C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  int v28;
  uint64_t v29;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * ((2025 * (a11 + ((LODWORD(STACK[0x324]) << (((v28 + 119) | 0x12) ^ 0xB2)) & 0x7C ^ 0x78) + ((((v28 - 2) | 0x600) - 854118) ^ STACK[0x324] & 0x3F) < 0xFFFFFFC0)) ^ (v28 + 410))) - 12))(a28, a2, a3, 3420812786, &STACK[0x2E0], 13, 159, 1863);
}

uint64_t sub_21E0987D8()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  v5 = v3 + 852483;
  if ((v3 + 852483) <= 0x40)
    v5 = 64;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((25
                                                        * (((47 * (v0 ^ 0x13)) ^ (v5
                                                                                                 + -v2
                                                                                                 - v1
                                                                                                 + ((v0 - 388) ^ 0xFFF2F959) < 0xF)) & 1)) ^ v0))
                                          - 12))(2182993698);
}

uint64_t sub_21E098888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,int a34)
{
  int v34;
  int v35;
  uint64_t v36;
  int v37;
  unsigned int v38;
  _BOOL4 v39;

  v37 = v35 + v34;
  v38 = v35 + v34 + 852483;
  if (v38 <= 0x40)
    v38 = 64;
  v39 = !__CFADD__(v37 + ((a2 - 1846339096) & 0x6E0CDFE6) + ((2 * a2) ^ 0x19B0) + 848196, a33 - 854118 + a34 + v38 + 1635);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)(((4 * v39) | (8 * v39)) ^ a2)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_21E098924@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26)
{
  int8x16_t *v26;
  uint64_t v27;
  int8x16_t v28;
  int8x16_t v29;

  v29.i64[0] = 0x3333333333333333;
  v29.i64[1] = 0x3333333333333333;
  *(int8x16_t *)(a1 + a2 + ((a25 - 1522) ^ 0x821DD10A)) = vaddq_s8(vaddq_s8(*v26, v29), vmvnq_s8(vandq_s8(vaddq_s8(*v26, *v26), v28)));
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * (((4 * (((a26 + 1) & 0x1FFFFFFF0) != 16)) | (8 * (((a26 + 1) & 0x1FFFFFFF0) != 16))) ^ (a25 - 4))))();
}

void sub_21E0989A8()
{
  JUMPOUT(0x21E098960);
}

uint64_t sub_21E0989B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (2207 * (v0 == v1))))
                            - (v2 - 360)
                            - ((v2 - 1107) | 0x40u)
                            + 805))();
}

uint64_t sub_21E0989F4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X6>, int a6@<W7>, uint64_t a7@<X8>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(a4 + (((v7 - 683) ^ a1) & (a7 + a2))) = *(_BYTE *)(v8 + v9 + a5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((a7 + a3) > 0x3F) * a6) ^ v7)) - 8))();
}

uint64_t sub_21E098A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35)
{
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  int v41;
  uint64_t (*v42)(uint64_t);
  int v43;
  int v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  _BOOL4 v51;
  _BOOL4 v54;
  uint64_t v55;

  v55 = v36;
  v42 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v38 + 8 * v35) - 4);
  v43 = STACK[0x32C];
  v44 = STACK[0x32C];
  v45 = STACK[0x330];
  v46 = LODWORD(STACK[0x334]);
  v47 = STACK[0x330];
  v48 = STACK[0x334];
  v49 = LOBYTE(STACK[0x340]) ^ 0xF1;
  if (v49 == 2)
  {
    v54 = (unint64_t)&STACK[0x2E0] < a26 && v40 < (unint64_t)&STACK[0x320];
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v38 + 8 * (int)((a25 * v54) ^ (v37 + 2258))) - 4))(14093031);
  }
  else if (v49 == 1)
  {
    v51 = (unint64_t)&STACK[0x2E0] < a26 && v40 < (unint64_t)&STACK[0x320];
    return ((uint64_t (*)(_QWORD, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 + 8 * (((a35 + 1967) * v51) ^ (v37 + 1959))) - 4))((a35 + 1967), v46, &STACK[0x2E0], a4, a5, 13, 159, 1863, a9, a10, a11, v55, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25);
  }
  else
  {
    LODWORD(STACK[0x328]) = 2 * (LODWORD(STACK[0x328]) ^ v39) + v39 - (v41 & (4 * (LODWORD(STACK[0x328]) ^ v39)));
    LODWORD(STACK[0x32C]) = (v44 ^ v39) + (v43 ^ v39) + v39 - (v41 & (2 * ((v44 ^ v39) + (v43 ^ v39))));
    LODWORD(STACK[0x330]) = (v47 ^ v39) + (v45 ^ v39) + v39 - (v41 & (2 * ((v47 ^ v39) + (v45 ^ v39))));
    LODWORD(STACK[0x334]) = v39 + (v48 ^ v39) + (v46 ^ v39) - (v41 & (2 * ((v48 ^ v39) + (v46 ^ v39))));
    return v42(a27);
  }
}

uint64_t sub_21E0997B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30,unsigned int a31,int a32,int a33)
{
  int v33;
  uint64_t v34;
  _BOOL4 v35;

  if (a31 < a30 != a33 - 976274415 < ((v33 + 1981) ^ a29 ^ ((v33 + 231) | 0xAA2u)))
    v35 = a33 - 976274415 < ((v33 + 1981) ^ a29 ^ ((v33 + 231) | 0xAA2u));
  else
    v35 = a33 - 976274415 > a31;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34 + 8 * (((4 * !v35) | (32 * !v35)) ^ (v33 + 410))) - 12))();
}

uint64_t sub_21E09984C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((((v4 + a4 + 63 < (v4 + a4)) ^ (v5 + 28)) & 1)
                                               * (((v5 + 1444692464) & 0xA9E3B7AD) + 3659)) ^ v5))
                            - 4))();
}

uint64_t sub_21E0998A4@<X0>(uint64_t a1@<X0>, int a2@<W3>, int8x16_t *a3@<X4>, int a4@<W5>, unint64_t a5@<X6>, int a6@<W8>)
{
  int v6;
  uint64_t v7;
  int8x16_t v8;
  int8x16_t v9;

  *a3 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a1 + (v6 + a2)), vandq_s8(vaddq_s8(*(int8x16_t *)(a1 + (v6 + a2)), *(int8x16_t *)(a1 + (v6 + a2))), v9)), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (a4 ^ ((a6 | 0x28) + 347))) - (((a6 | 0x28u) + 105) ^ a5)))();
}

uint64_t sub_21E099904(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *(_BYTE *)(a5 + v9) = *(_BYTE *)(a1 + (v8 + a4))
                      - ((v10 - 33) & (2 * *(_BYTE *)(a1 + (v8 + a4))))
                      + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((v9 != 63) * a8) ^ v10)) - 12))();
}

uint64_t sub_21E09994C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8
                                                      * ((31 * (a12 - 1976076820 + ((v12 + 43) ^ 0x379u) > 0xFFFFFFFA)) ^ (v12 + 1371)))
                                          - 4))(a1);
}

uint64_t sub_21E09999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * ((31 * (a10 - 1976076820 + ((v10 + 43) ^ 0x379u) > 0xFFFFFFFA)) ^ (v10 + 1371)))
                                          - 4))(a1);
}

void sub_21E0999EC()
{
  JUMPOUT(0x21E098B4CLL);
}

uint64_t sub_21E099A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  _BOOL4 v17;
  unsigned int v18;
  int v19;
  _BOOL4 v20;

  v17 = a14 < 0xBEB05793;
  v18 = ((v15 - 2977) | 0x80) + v14 - 1969894157;
  v19 = v17 ^ (v18 < 0xBEB05793);
  v20 = v18 < a14;
  if (!v19)
    v17 = v20;
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((114 * !v17) ^ v15)))(2182993698);
}

uint64_t sub_21E099A8C@<X0>(int a1@<W0>, unsigned int a2@<W1>, char a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  _BOOL4 v13;
  char v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  v13 = a2 < v10;
  v14 = *(_BYTE *)(a7 + (a4 + v8 + v9 - 2849 - 146));
  *(_BYTE *)(a5 + (a8 + a1)) = v14 - (a3 & (2 * v14)) + 50;
  v15 = v11 + v8 + 147;
  v16 = v13 ^ (v15 < v10);
  v17 = v15 < a2;
  if (!v16)
    v13 = v17;
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a6) ^ v9)))();
}

uint64_t sub_21E099AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned int v31;

  v30 = 1948972247 * ((((v29 - 168) | 0x8F82B7DA) - ((v29 - 168) & 0x8F82B7DA)) ^ 0x3A1C4234);
  STACK[0x360] = a23;
  *(_DWORD *)(v29 - 168) = a13 + v30;
  *(_DWORD *)(v29 - 152) = v27 - v30 + 2297;
  sub_21E0A4DD0(v29 - 168);
  v31 = STACK[0x324] & 0x3F ^ (((v27 - 82) | 0x913) - 2327);
  *((_BYTE *)&STACK[0x2E0] + v31) = -78;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28 + 8 * ((1421 * (v31 > 0x37)) ^ v27)) - 12))(a27);
}

uint64_t sub_21E099C14()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (46 * (v0 != 63))))
                            - ((v1 - 2345) ^ (v1 - 1329) ^ 0x400)))();
}

uint64_t sub_21E099C5C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (a1 ^ 3u) >= ((163 * (v1 ^ 0x421) + 1251) ^ (v1 + 674));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 | (8 * v3)) ^ v1)) - 4))();
}

uint64_t sub_21E099C98@<X0>(uint64_t a1@<X4>, char a2@<W8>)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + v3 + v4) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)((1019 * ((v2 ^ 0x1E1) == (a2 & 0x38))) ^ v2)) - 4))();
}

uint64_t sub_21E099CE8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1962 * ((v0 - 751288821) < 0x38)) ^ (v1 + 558)))
                            - ((v1 - 1532719179) & 0x5B5B7AEF)
                            + 2759))();
}

uint64_t sub_21E099D48()
{
  unsigned int v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = ((v1 - 1971972832) & 0x7589E7DF ^ (unint64_t)(v2 - 1096)) + v0;
  if (v4 <= 0x38)
    v4 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((452 * (v4 - v0 + ((v1 - 2719) | 0x287) + 751288126 > 7)) ^ v1))
                            - 4))();
}

uint64_t sub_21E099DC0@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + v3 + ((150 * (a2 ^ 0x7CBu)) ^ (unint64_t)(v4 - 440))) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((((v2 & 0xFFFFFFFFFFFFFFF8) == 8) | (32 * ((v2 & 0xFFFFFFFFFFFFFFF8) == 8))) ^ a2))
                            - 8))();
}

void sub_21E099E08()
{
  JUMPOUT(0x21E099DD0);
}

uint64_t sub_21E099E14()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((1363 * (((v0 == v1) ^ (v2 + (v2 ^ 0xEF))) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_21E099E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  *(_BYTE *)(a5 + v6 + v7) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((unint64_t)(v6 + 1 + v7) < 0x38)
                                          * ((v5 - 956100667) & 0x38FCEFDB ^ 0x2B7)) ^ (v5 - 956100667) & 0x38FCEFDBu))
                            - 8))();
}

uint64_t sub_21E099E98@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v3 + v4) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(v3 + 1 + v4) < 0x38) * v2) ^ a2)) - 8))();
}

void sub_21E099EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  char v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  char v13;
  unint64_t v14;
  char v15;
  unsigned int v16;
  char v17;
  char v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  char v22;
  char v23;
  unint64_t v24;

  v10 = LOBYTE(STACK[0x340]) ^ 0xF1;
  if (v10 == 1)
  {
    v19 = STACK[0x324];
    v20 = STACK[0x320];
    v21 = LODWORD(STACK[0x324]) >> 5;
    v22 = v21 ^ 0xE9;
    v23 = (v21 ^ 0xE9) & 0x36 ^ v21 & 4;
    v15 = v9 - 127;
    LOBYTE(STACK[0x318]) = ((v9 - 74) ^ (8 * LOBYTE(STACK[0x324])))
                         - ((2 * ((v9 - 74) ^ (8 * LOBYTE(STACK[0x324])))) & 0x60)
                         + 50;
    LOBYTE(STACK[0x319]) = v22 - 2 * v23 + 50;
    v17 = 100;
    LOBYTE(STACK[0x31A]) = ((v19 >> 13) ^ 0xB) - ((2 * ((v19 >> 13) ^ 0xB)) & 0x64) + 50;
    LOBYTE(STACK[0x31B]) = ((v19 >> 21) ^ 0xD5) + (~(2 * ((v19 >> 21) ^ 0xD5)) | 0x9B) + 51;
    HIDWORD(v24) = v20 ^ 0x17;
    LODWORD(v24) = v19 ^ 0x60000000;
    LOBYTE(STACK[0x31C]) = (v24 >> 29) - ((2 * (v24 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x31D]) = ((v20 >> 5) ^ 0x9E) - 2 * (((v20 >> 5) ^ 0x9E) & 0x33 ^ ((v20 & 0x20) != 0)) + 50;
    LOBYTE(STACK[0x31E]) = ((v20 >> 13) ^ 0x4B) - 2 * (((v20 >> 13) ^ 0x4B) & 0x36 ^ (v20 >> 13) & 4) + 50;
    v16 = v20 >> 21;
    v18 = (v20 >> 21) ^ 0x85;
  }
  else
  {
    if (v10 != 2)
      goto LABEL_6;
    v11 = STACK[0x320];
    v12 = STACK[0x324];
    LOBYTE(STACK[0x318]) = ((LODWORD(STACK[0x320]) >> 21) ^ 0x85) - ((LODWORD(STACK[0x320]) >> 20) & 0x64) + 50;
    LOBYTE(STACK[0x319]) = ((v11 >> 13) ^ 0x4B) - ((((v11 >> 13) ^ 0x4B) << a9) & 0x64) + 50;
    v13 = ((v11 >> 5) ^ 0x9E) + (~(2 * ((v11 >> 5) ^ 0x9E)) | 0x9B);
    HIDWORD(v14) = v11 ^ 0x17;
    LODWORD(v14) = v12 ^ 0x60000000;
    v15 = v9 ^ 0x81;
    LOBYTE(STACK[0x31A]) = v13 + 51;
    LOBYTE(STACK[0x31B]) = (v14 >> 29) - ((2 * (v14 >> 29)) & 0x64) + 50;
    LOBYTE(STACK[0x31C]) = ((v12 >> 21) ^ 0xD5) - ((2 * ((v12 >> 21) ^ 0xD5)) & 0x64) + 50;
    LOBYTE(STACK[0x31D]) = ((v12 >> 13) ^ 0xB) - ((2 * ((v12 >> 13) ^ 0xB)) & 0x64) + 50;
    LOBYTE(STACK[0x31E]) = ((v12 >> 5) ^ 0xE9) - ((2 * ((v12 >> 5) ^ 0xE9)) & 0x64) + 50;
    LOBYTE(v16) = (8 * v12) ^ 0xE0;
    v17 = 96;
    v18 = v16;
  }
  LOBYTE(STACK[0x31F]) = v18 - (v17 & (2 * v16)) + ((v15 + 3) & 0x7B ^ 0x18);
LABEL_6:
  JUMPOUT(0x21E098B48);
}

uint64_t sub_21E09A150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  *(_BYTE *)(a5 + v5 + v8) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * ((7
                                          * (((3 * (((v6 + 318) | 0x151) ^ v7)) ^ (unint64_t)(v8 + 27)) + v5 < 0x40)) ^ ((v6 + 318) | 0x151)))
                            - 8))();
}

void sub_21E09A198()
{
  JUMPOUT(0x21E09A15CLL);
}

uint64_t sub_21E09A1A0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((87 * (v2 + v1 + 753 < ((v0 + 242908559) & 0xF1857F6E ^ 0x2E))) ^ v0))
                            - 4))();
}

uint64_t sub_21E09A1F0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29)
{
  int v29;
  unsigned int v30;
  uint64_t v31;

  LOBYTE(STACK[0x2E0]) = *(&a29 + v30);
  return ((uint64_t (*)(void))(*(_QWORD *)(v31 + 8 * (v29 ^ (2931 * ((a1 + 754) < 4))))
                            - ((v29 + 381668243) & 0xE940316A ^ 0x2ELL)))();
}

void sub_21E09A240()
{
  JUMPOUT(0x21E0985B8);
}

uint64_t sub_21E09A250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  int v37;
  uint64_t v38;
  unsigned int v40;
  unint64_t v41;
  unint64_t v42;

  if (a31 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38
                                                                                   + 8
                                                                                   * ((760
                                                                                     * (LODWORD(STACK[0x33C]) != 1088493529)) ^ (v37 + 364)))
                                                                       - ((v37 + 1400146805) & 0xAC8B75F6 ^ 0x19ELL)))(a1, a2, a3, a15);
  if (a31 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38
                                                                          + 8
                                                                          * ((70 * (LODWORD(STACK[0x33C]) != 1088493529)) ^ (v37 + 364)))
                                                              - ((v37 - 72398892) & 0x450B997)
                                                              + 398))(a1, a2, a15);
  v40 = (v37 + 1903633833) & 0x8E88DE6E;
  v41 = ((unint64_t)&a37 ^ 0xF4E63ED7FDFF8F7BLL)
      + 0x3FFFF5BC321A7B85
      + (((_QWORD)&a37 << (((v37 - 87) & 0x6Eu) - 65)) & 0xE9CC7DAFFBFF1EF0);
  v42 = ((v40 - 1024) | 0x85) ^ 0xFFFFFFFFFFFFFF38;
  *((_BYTE *)&STACK[0x2E0] + v42 + 92) = (v41 ^ 0xBA) * (v41 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38
                                                                        + 8 * (int)((2255 * (v42 == -92)) ^ v40))
                                                            - 4))(a1, a2, a15);
}

void sub_21E09A5E8()
{
  JUMPOUT(0x21E09A5BCLL);
}

uint64_t sub_21E09A5F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int v20;
  uint64_t v21;

  v19 = *(_QWORD *)(a14 + 8);
  memset(&STACK[0x2C0], 50, 16);
  v20 = 1990461019 * ((((2 * (v17 - 168)) | 0x4F4EB508) - (v17 - 168) + 1482204540) ^ 0x8843F80D);
  STACK[0x358] = (unint64_t)&STACK[0x2C0];
  STACK[0x378] = v19;
  *(_DWORD *)(v17 - 152) = v15 - v20 + 2203;
  *(_DWORD *)(v17 - 148) = v20 ^ 0x5330836E;
  STACK[0x370] = (unint64_t)&STACK[0x2D0];
  STACK[0x360] = v17 - 188;
  v21 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * (v15 ^ 0x194)) - 8))(v17 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((522 * (*(_DWORD *)(v17 - 128) == v16)) ^ v15))
                                          - (((v15 - 6) | 0x20Cu) ^ 0x2C5)))(v21);
}

uint64_t sub_21E09A6EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v6 = *(unsigned __int8 *)(*v1 + v0 - 0x65B83A34789E9029) - *(unsigned __int8 *)(v5 + v0 - 0x65B83A34789E9029);
  v7 = v0 + 1;
  v9 = (v6 ^ 0xFFFFEC69) + 498908055 + ((v6 << (v3 ^ 0xCC)) & 0xFFFFD8D2) != 498903040 || v7 == v2 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((2567 * v9) ^ v3)) - 8))();
}

uint64_t sub_21E09A770@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unint64_t v5;
  uint64_t v6;

  v4 = (v1 ^ 0x2E7) - 1293972215;
  v5 = 1438293641
     * ((((v3 - 168) | 0xC3FEFAFF5937F925) - (v3 - 168) + ((v3 - 168) & 0x3C010500A6C806D8)) ^ 0xD55B127BE1F0AC5ALL);
  STACK[0x380] = a1 ^ v5;
  STACK[0x368] = v5 ^ 0x1DBCA800;
  *(_DWORD *)(v3 - 144) = v4 - v5 + 193;
  *(_DWORD *)(v3 - 168) = v5 ^ v4 ^ 0x24;
  *(_DWORD *)(v3 - 164) = ((v1 ^ 0x2E7) + 602453911) ^ v5;
  *(_DWORD *)(v3 - 160) = v4 + v5;
  *(_DWORD *)(v3 - 136) = v5;
  v6 = ((uint64_t (*)(uint64_t))*(&off_24E21C7C0 + (v1 ^ 0x2F5)))(v3 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * *(int *)(v3 - 140)) - 8))(v6);
}

void sub_21E09A864()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 44) = 939001227;
}

void sub_21E09A8B0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_21E09A910(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2872 * (**(_BYTE **)(a2 - 0x593A0D77ED43FF8BLL) == 0)) ^ 0x282u))
                            - 4))();
}

uint64_t sub_21E09A96C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;

  v3 = v1 - ((2 * v1 + 673079508) & 0xD19EAF42) + 2094958603;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 ^ (1174
                                     * (((2 * v3) & 0xBD3B32FE ^ (2 * ((v2 + 401) ^ 0xE4)) ^ 0x911A268E)
                                                    + (v3 ^ 0x3652CEDE)
                                                    + 594474976 != 34378079)))))();
}

uint64_t sub_21E09AA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                       + 8
                                                                       * (a6 ^ (2
                                                                              * ((v8 + v7 + a6 + 560098816 - 3147) > 7)))))(a1, 560096896, a3, a1);
}

uint64_t sub_21E09AA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((744
                                * ((((a6 + 1773) ^ 0x7F5 ^ ((unint64_t)(a3 - a8 + 0x1C73FCAA0D59E3BALL) < 0x20)) & 1) == 0)) ^ a6)))();
}

uint64_t sub_21E09AAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  uint64_t v7;
  unsigned int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((93
                                                                         * (v8 >= ((a7 - 748170267) & 0x361E5ED)
                                                                                - 56739180)) ^ a7))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_21E09AB04(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  v11 = v10 + v9 + a2;
  v12 = v6 + v11;
  v13 = *(_OWORD *)(v12 - 31);
  v14 = v7 + v11;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v8 & 0xFFFFFFE0) == 32) * (((a5 - 69951249) & 0xC99FBD) - 1263)) ^ (a4 + a5 + 1012))))();
}

void sub_21E09AB6C()
{
  JUMPOUT(0x21E09AB30);
}

uint64_t sub_21E09AB78()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  int v3;

  *(_DWORD *)(*v1 - 0x1C73FCAA0D59E2B9) = (((v3 + 39878154) | 0x1014500) ^ 0xBDF5CAC7) + v2;
  *(_QWORD *)(*v1 - 0x1C73FCAA0D59E641) = *v0 + 1;
  return 0;
}

void sub_21E09AD60(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) ^ (1990461019
                             * ((2 * ((a1 ^ 0xA07F1D) & 0xD88EB308) - (a1 ^ 0xA07F1D) + 661736695) ^ 0x8359163));
  __asm { BR              X9 }
}

uint64_t sub_21E09AE58()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v0 - 1467) * (v1 == 0)) ^ v0)) - ((v0 - 700) | 0xA4u) + 936))();
}

uint64_t sub_21E09AE98@<X0>(uint64_t (*a1)(uint64_t *)@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t result;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;

  v5 = ((-1775707760 - (&v7 | 0x9628D990) + (&v7 | 0x69D7266F)) ^ 0x2021802B) * v1;
  v11 = v5 + v2 - 506;
  v7 = 0x45D0856C2970AB82;
  v8 = v5 + 1391826208;
  v9 = v5 - 2086115574;
  v10 = v4;
  result = a1(&v7);
  *(_DWORD *)(v3 + 20) = *(_DWORD *)(v4 - 0x6898E7DB637CE953);
  return result;
}

uint64_t sub_21E09B6D8(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)&unk_24E21505C
                                        + 8 * ((4064 * (*(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL) == 1810943894)) ^ 0x629u)
                                        - 12)
                            - 4))();
}

uint64_t sub_21E09B728(uint64_t a1, uint64_t a2)
{
  char v2;

  if (**(_BYTE **)(a2 - 0x593A0D77ED43FF8BLL))
    v2 = 103;
  else
    v2 = 102;
  *(_BYTE *)(a1 - 0x4063EA0FFD2E1A9) = v2;
  return 0;
}

uint64_t sub_21E09B76C()
{
  return 4294925278;
}

void sub_21E09B774(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) - 731811679 * ((((2 * a1) | 0x7D5D7952) - a1 - 1051638953) ^ 0x77581AED);
  __asm { BR              X9 }
}

uint64_t sub_21E09B85C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, unsigned int a5, int a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  _DWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;

  v14 = *(_DWORD *)(a1 + 8) - v13 + *(_DWORD *)(v9 - 0x6898E7DB637CE95BLL) - 1391826200;
  v15 = 1948972247 * ((2 * (&a5 & 0x7B7DB3A8) - &a5 + 75648084) ^ 0xB11CB9BA);
  a7 = v9;
  a5 = v15 + 354418347;
  a8 = ((v8 - 87) ^ 0x78CA762) - v15 + v14;
  a6 = v8 - v15 + 86;
  v16 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(a2 + 8 * (v8 - 279)) - 12))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * ((1437 * (*v11 == v10)) ^ v8))
                                          - ((v8 + 1294) ^ 0x71BLL)))(v16);
}

uint64_t sub_21E09B94C()
{
  _QWORD *v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((4 * ((((v2 + 595) ^ (*v0 == 0x45D0856C2970AB82)) & 1) == 0)) & 0xDF | (32 * (((v2 + 83) ^ ~(*v0 == 0x45D0856C2970AB82)) & 1))) ^ v2))
                            - (v2 ^ 0x51Eu)
                            + 517))();
}

uint64_t sub_21E09B9B0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  int v5;
  _DWORD *v6;
  uint64_t v7;

  *(_QWORD *)(v2 - 0x45D0856C2970AB82) = (*v3 + a1) + *(_QWORD *)(v4 - 0x6898E7DB637CE96BLL) + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1172 * (*v6 == v5 + v1 - 521)) | v1)) - 12))();
}

void sub_21E09BA14(int a1@<W8>)
{
  int v1;
  int v2;
  int *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(v4 - 0x6898E7DB637CE96BLL);
  v7 = *v3;
  *(_BYTE *)(v6 + *v3 + (v2 ^ (a1 + 519))) = (HIBYTE(v1) ^ 0x83)
                                                         - 2 * ((HIBYTE(v1) ^ 0x83) & 0x36 ^ HIBYTE(v1) & 4)
                                                         + 50;
  v8 = a1 + v7;
  *(_BYTE *)(v6 + (a1 + v7 + 1)) = (BYTE2(v1) ^ 0xF7) - ((2 * (BYTE2(v1) ^ 0xF7)) & 0x64) + 50;
  *(_BYTE *)(v6 + (v8 + 2)) = (BYTE1(v1) ^ 0xA7) + (~(2 * (BYTE1(v1) ^ 0xA7)) | 0x9B) + 51;
  *(_BYTE *)(v6 + (v8 + 3)) = v1 ^ 0xB0;
  v9 = *(_QWORD *)(v4 - 0x6898E7DB637CE96BLL);
  v10 = v5 - 2 * ((v5 + 218786528) & 0xAC5B5D2 ^ v5 & 2) - 1211096912;
  v11 = ((2 * (a1 + *v3 + 4)) & 0xBDFDCF2C) + ((a1 + *v3 + 4) ^ 0x5EFEE796) - 1593763734;
  *(_BYTE *)(v9 + v11) = (HIBYTE(v10) ^ 0xA) - 2 * ((HIBYTE(v10) ^ 0xA) & 0x36 ^ HIBYTE(v10) & 4) + 50;
  *(_BYTE *)(v9 + v11 + 1) = (BYTE2(v10) ^ 0xC5) - ((v10 >> 15) & 0x64) + 50;
  *(_BYTE *)(v9 + v11 + 2) = (BYTE1(v10) ^ 0xB5) + (~(2 * (BYTE1(v10) ^ 0xB5)) | 0x9B) + 51;
  *(_BYTE *)(v9 + v11 + 3) = (v5 - 2 * ((v5 - 32) & 0xD2 ^ v5 & 2) - 80) ^ 0xE2;
  *v3 = v12;
}

void sub_21E09BC50(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1
     - 1990461019 * ((2 * ((a1 ^ 0x51ADEDA1) & 0x37398890) - (a1 ^ 0x51ADEDA1) - 926517393) ^ 0xB68F3847);
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(char *, void (*)()))*(&off_24E21C7C0 + (v1 ^ 0x734)))((char *)*(&off_24E21C7C0 + (v1 ^ 0x7B4)) - 4, sub_21E0E1814);
  __asm { BR              X10 }
}

uint64_t sub_21E09BD10()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(_QWORD *)(*(_QWORD *)(v1 + 8 * (v2 - 1373)) - 4) == 0) * ((v2 ^ 0x149) - 1526)) ^ v2)))();
}

uint64_t sub_21E09BD50@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 1846)))(v1);
}

void sub_21E09BD6C(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  char v4;

  v1 = 1734664879 * (a1 ^ 0x2FDB281A);
  v2 = *(_DWORD *)(a1 + 48) - v1;
  if (*(_QWORD *)a1 | *(_QWORD *)(a1 + 32))
    v3 = *(_DWORD *)(a1 + 52) + v1 == 1205354712;
  else
    v3 = 1;
  v4 = v3;
  __asm { BR              X8 }
}

uint64_t sub_21E09BECC()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  _BOOL4 v4;

  v4 = v1[7] == 0x4451C3A997364FF7 || (v1[1] | v1[8]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((22 * v4) ^ v0)) - (((v0 + 689204782) & 0xD6EB91DF) + 357) + 828))();
}

uint64_t sub_21E09BF34@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v3 + 16);
  *(_DWORD *)(v2 - 0x4451C3A997364FF7) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4
                                                               + 8
                                                               * (((v6 == 0x1D17695A8381D366) * (a2 ^ 0x358)) | a2))
                                                   - 8))(a1, v5 - 144);
}

uint64_t sub_21E09BFFC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  v32 = 1292559617 * ((2 * ((v31 - 144) & 0x6D4AB020) - (v31 - 144) + 313872350) ^ 0xB5E627B7);
  *a2 = &a27 + v27;
  *(_DWORD *)(v31 - 136) = (v29 + 2386) ^ v32;
  *(_DWORD *)(v31 - 132) = v32 ^ 0x4D0BB839;
  sub_21E0477F0(v31 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30
                                                     + 8
                                                     * ((441 * (((v29 ^ 0x7C7 ^ (v28 == 0)) & 1) == 0)) ^ (v29 + 2770))))(a1, v31 - 144);
}

uint64_t sub_21E09C0C8@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  _QWORD *v24;
  uint64_t v25;
  _BOOL4 v27;

  v22 = a2 + 1453;
  v23 = 1866394843 * ((v21 - 144) ^ 0xEA1737F4);
  *(_DWORD *)(v21 - 144) = (((a2 + 1453) ^ 0x2BDC23C3) + v15) ^ v23;
  *(_DWORD *)(v21 - 120) = v23 + a2 - 1305;
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = v16;
  v24 = (_QWORD *)(v21 - 144);
  v27 = v14 == 0;
  ((void (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (a2 - 1533)) - 4))(v21 - 144);
  *(_DWORD *)(v21 - 136) = (v22 - 1524) ^ (1438293641
                                         * ((((v21 - 144) | 0x2E064BF9) + (~(v21 - 144) | 0xD1F9B406)) ^ 0x96C11E87));
  *v24 = v17;
  *(_QWORD *)(v21 - 128) = a13;
  ((void (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (int)(v22 & 0xE419B225)) - 4))(v21 - 144);
  *(_DWORD *)(v21 - 136) = v22
                         - 1328090399
                         * ((((v21 - 144) | 0x26A09494) - (v21 - 144) + ((v21 - 144) & 0xD95F6B68)) ^ 0xD973F0AE)
                         - 1038;
  *v24 = v17;
  *(_QWORD *)(v21 - 128) = a7;
  *(_QWORD *)(v21 - 120) = a14;
  *(_QWORD *)(v21 - 112) = a13;
  *(_QWORD *)(v21 - 104) = a11;
  v25 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v22 - 2500)))(v21 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (v22 ^ (v27 | (4 * v27))))
                                          - (((4 * v22) ^ 0x2E40u)
                                           + (unint64_t)(v22 - 2661))
                                          + 704))(v25);
}

uint64_t sub_21E09C2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  int v10;
  _DWORD *v11;

  v6 = 731811679 * ((-72667135 - ((v5 - 144) | 0xFBAB3001) + ((v5 - 144) | 0x454CFFE)) ^ 0x4DA269BA);
  *(_DWORD *)(v5 - 140) = (v4 + 1152) ^ v6;
  *(_DWORD *)(v5 - 120) = ((v4 ^ 0x17216A79) + v10) ^ v6;
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v8;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v4 - 317)) - 8))(v5 - 144);
  *v11 = v9;
  *(_DWORD *)(v0 + 24) = 939001227;
  return result;
}

void sub_21E09C458(uint64_t a1)
{
  int v1;

  v1 = 1328090399 * ((-2 - ((a1 | 0xD6D05625) + (~(_DWORD)a1 | 0x292FA9DA))) ^ 0xD6FCCDE0);
  __asm { BR              X13 }
}

uint64_t sub_21E09C530()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((v0 & 0x7F543BEB) - 1961278554) & 0x74E6B6FF) + 351)
                                          * (*(_QWORD *)(v1 + 64) != 0)) ^ v0 & 0x7F543BEBu))
                            - 8))();
}

uint64_t sub_21E09C57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  _DWORD *v4;

  v4 = *(_DWORD **)(v0 + 56);
  **(_QWORD **)(v0 + 8) = 0;
  *v4 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((3307 * (*(unsigned __int8 *)(v2 + 5) == ((v3 ^ 0x25) + 86))) ^ v3))
                            - 8))();
}

uint64_t sub_21E09C5C0()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((22 * (*(_BYTE *)(*(_QWORD *)(v0 + 40) + 1) == 38)) ^ v2))
                            - (v2
                             - 995)
                            + 675))();
}

uint64_t sub_21E09C5F8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, int a7, int a8, char a9)
{
  uint64_t v9;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v16 = (((&a4 | 0xFA2BCE12) - &a4 + (&a4 & 0x5D431E8)) ^ 0x5F8AA28) * a1;
  a5 = ((v10 ^ 0xCD) + ((v10 << (((v14 + 18) | 0x48) + 25)) & 0xEC ^ 0x64) - 20) ^ v16;
  a6 = v13 + 0xCCBFA3A1901A969;
  a9 = v16 ^ v11;
  a7 = (v14 + 873) ^ v16;
  a4 = v15;
  v17 = (*(uint64_t (**)(uint64_t *))(v9 + 8 * (int)(v14 - 1428)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12 + 8 * ((3651 * (a8 == 939001227)) ^ v14)) - 8))(v17);
}

uint64_t sub_21E09C6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  *(_BYTE *)(v14 + 1) = 39;
  *v13 = 0;
  v15 = bswap32(*(_DWORD *)(v11 + 8));
  v16 = ((unint64_t)&a10 ^ 0x7FBDFFF6BF77FEFFLL)
      - 0x81CD0841420283FLL
      + ((2 * (_QWORD)&a10) & 0xFF7BFFED7EEFFDF0);
  *(_BYTE *)(v15 + v11 + 11) = (v16 + ((v12 + 88) | 0x11)) * ((v16 + 64) ^ 0xBA);
  *(_BYTE *)(v15 + v11 + 10) = ((v16 + 65) ^ 0xBA) * (v16 + 82);
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v15 + 12) & 0x1FFFFFFFELL) == 2) | v12)))();
}

void sub_21E09C7AC()
{
  JUMPOUT(0x21E09C764);
}

void sub_21E09C7B8()
{
  int v0;
  uint64_t v1;
  _BYTE *v2;

  *v2 = -1;
  *(_DWORD *)(v1 + 32) = v0;
}

void sub_21E09C884(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1988622253 * (((a1 | 0xAAB9410D) - (a1 & 0xAAB9410D)) ^ 0x5CA101AD);
  __asm { BR              X10 }
}

void sub_21E09C928(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  v3 = v1
     + 1438293641
     * (((&v3 ^ 0xEF0EA57 | 0x851FB8DA) - ((&v3 ^ 0xEF0EA57) & 0x851FB8DA)) ^ 0x332807F2)
     - 5;
  v4 = a1;
  sub_21E059BC8((uint64_t)&v3);
  *(_DWORD *)(v2 + 16) = 939001227;
}

void sub_21E09C9C4(uint64_t a1)
{
  int v1;
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 8) ^ (1438293641 * ((a1 & 0xB4D84B78 | ~(a1 | 0xB4D84B78)) ^ 0xF3E0E1F8));
  __asm { BR              X8 }
}

uint64_t sub_21E09CDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  return v38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_21E09CDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v31 = v29 + 99;
  v32 = (((v31 + 881) | 0x880) ^ 0xCBFu) & *a29;
  *(_BYTE *)(a4 + (v32 ^ 0x3C)) = -78;
  return ((uint64_t (*)(void))(*(_QWORD *)(v30 + 8 * ((2294 * ((v32 ^ 0x3C) > 0x37)) ^ v31)) - 4))();
}

uint64_t sub_21E09CE30()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((23 * (v1 != ((13 * (v0 ^ 0xC8B)) ^ 0xB0))) ^ v0)) - 4))();
}

uint64_t sub_21E09CE74()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((486 * ((((((v0 ^ 0xC7A) + 196870776) & 0xF443F0BE) - 41) ^ v1) < 8)) ^ v0 ^ 0xC7A))
                            - ((v0 ^ 0xC7Au)
                             - 2903)
                            + 406))();
}

uint64_t sub_21E09CEC8@<X0>(char a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(a4 + v5) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((a1 & 0x38) == 8) * (v4 + 2885)) ^ v4)) - 4))();
}

uint64_t sub_21E09CF00()
{
  int v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v3 == 0) * v2) ^ v0)) - 4))();
}

uint64_t sub_21E09CF24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (794 * (v1 == a1))))
                            - ((v2 - 621158167) & 0x2506122F)
                            - 13 * (v2 ^ 0xD18u)
                            + 179))();
}

uint64_t sub_21E09CF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;

  *(_BYTE *)(v4 + v6 + a4 - 1) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((unint64_t)(v4 + v6) > 0x3F) * (v5 ^ v7)) ^ (v5 + 244))))();
}

uint64_t sub_21E09CFB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t (*v54)(uint64_t, uint64_t, unint64_t);
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v68;
  _BOOL4 v70;

  v54 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))(((v49 + 715) ^ 0xFFFFFFFFFFFFFCA6)
                                                                   + *(_QWORD *)(v52 + 8 * v49));
  v56 = *(_DWORD *)(a49 - 0x1464535CD0E6661);
  v57 = *(_DWORD *)(a49 - 0x1464535CD0E665DLL);
  v58 = *(_DWORD *)(a49 - 0x1464535CD0E6659);
  v59 = *(unsigned __int8 *)(a49 - 0x1464535CD0E664DLL) ^ 0xF1;
  if (v59 == 2)
  {
    v68 = a4 + 64;
    v70 = a4 < a41 && v51 < v68;
    return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v52
                                                                + 8
                                                                * (int)(((HIDWORD(a40) + a2 + 1375) * v70) ^ (a2 + 2379)))
                                                    - 4))(a49 - 0x1464535CD0E6655, *(unsigned int *)(a49 - 0x1464535CD0E6655));
  }
  else if (v59 == 1)
  {
    v60 = a2 + 1059;
    v61 = ((_DWORD)a2 + 1047) | 0xCu;
    v62 = a2 + 1141;
    v64 = a4 >= a41 || v51 >= a4 + 64;
    v65 = (v60 + v61 - 2112);
    v66 = *(uint64_t (**)(uint64_t, _QWORD, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v52 + 8 * (int)((v65 * v64) ^ v62));
    return v66(v61, v66, a4, v65, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
  else
  {
    *(_DWORD *)(a49 - 0x1464535CD0E6665) = 2 * (*(_DWORD *)(a49 - 0x1464535CD0E6665) ^ v53)
                                           + v53
                                           - (v50 & (4 * (*(_DWORD *)(a49 - 0x1464535CD0E6665) ^ v53)));
    *(_DWORD *)(a49 - 0x1464535CD0E6661) = (*(_DWORD *)(a49 - 0x1464535CD0E6661) ^ v53)
                                           + (v56 ^ v53)
                                           + v53
                                           - (v50 & (2 * ((*(_DWORD *)(a49 - 0x1464535CD0E6661) ^ v53) + (v56 ^ v53))));
    *(_DWORD *)(a49 - 0x1464535CD0E665DLL) = (*(_DWORD *)(a49 - 0x1464535CD0E665DLL) ^ v53)
                                           + (v57 ^ v53)
                                           + v53
                                           - (v50 & (2 * ((*(_DWORD *)(a49 - 0x1464535CD0E665DLL) ^ v53) + (v57 ^ v53))));
    *(_DWORD *)(a49 - 0x1464535CD0E6659) = (*(_DWORD *)(a49 - 0x1464535CD0E6659) ^ v53)
                                           + (v58 ^ v53)
                                           + v53
                                           - (v50 & (2 * ((*(_DWORD *)(a49 - 0x1464535CD0E6659) ^ v53) + (v58 ^ v53))));
    return v54(a1, a2, a4);
  }
}

uint64_t sub_21E09E5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,unsigned int a48,uint64_t a49,uint64_t a50,int a51,int a52)
{
  uint64_t v52;
  _BOOL4 v53;

  if (a48 < 0x422E827B != (a52 + 1052129943) < 0x422E827B)
    v53 = (a52 + 1052129943) < 0x422E827B;
  else
    v53 = a52 + 1052129943 > a48;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 + 8 * (((((((_DWORD)a2 + 2038) ^ v53) & 1) == 0) | (32 * (((((_DWORD)a2 + 2038) ^ v53) & 1) == 0))) ^ ((int)a2 + 686))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

void sub_21E09E634()
{
  JUMPOUT(0x21E09D8DCLL);
}

uint64_t sub_21E09E648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  int v40;
  int v41;
  uint64_t v42;
  _BOOL4 v43;

  v43 = v40 - 1121349162 < (a40 + 2143339041);
  if ((a40 + 2143339041) < 0xC0A1D9FA != (v40 - 1121349162) < 0xC0A1D9FA)
    v43 = (a40 + 2143339041) < 0xC0A1D9FA;
  return ((uint64_t (*)(void))(*(_QWORD *)(v42 + 8 * ((836 * v43) ^ v41)) - ((4 * v41) ^ 0x2248u) + 1212))();
}

uint64_t sub_21E09E6C4(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  _BOOL4 v56;
  unsigned int v57;
  int v58;
  _BOOL4 v59;

  v56 = v52 < v53;
  *(_BYTE *)(a49 - 0x1464535CD0E66ADLL + (v49 + a5)) = *(_BYTE *)(v55 + (a6 + v50 + 157));
  v57 = v50 + 1 + a1;
  v58 = v56 ^ (v57 < v53);
  v59 = v57 < v52;
  if (!v58)
    v56 = v59;
  return ((uint64_t (*)(void))(*(_QWORD *)(v54 + 8 * ((!v56 * a2) ^ v51)) - 4))();
}

void sub_21E09E738()
{
  JUMPOUT(0x21E09E6DCLL);
}

uint64_t sub_21E09E744@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  int v44;
  uint64_t v45;

  v44 = 1948972247 * ((-1960743199 - ((v43 - 136) | 0x8B216EE1) + ((v43 - 136) | 0x74DE911E)) ^ 0xC14064F0);
  *(_DWORD *)(v43 - 136) = v44 + a1 - 224209395;
  *(_QWORD *)(v43 - 128) = a43;
  *(_DWORD *)(v43 - 120) = a2 - v44 + 2399;
  v45 = sub_21E0A4DD0(v43 - 136);
  return a24(v45);
}

uint64_t sub_21E09E7C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned __int8 a28,unsigned __int8 *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,_DWORD *a40)
{
  uint64_t v40;
  int v41;

  v41 = *a29 ^ 0xF1;
  if (v41 == 2)
    return ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * ((1011 * (*a40 == 1088493529)) ^ (a2 + 444)))
                              - ((a2 + 124) | 0x140u)
                              + 476))();
  if (v41 == 1)
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40
                                                        + 8
                                                        * ((2996 * (((*a40 == 1088493529) ^ a28) & 1)) ^ (a2 + 495)))
                                            - 12))(a23);
  *(_BYTE *)(a4 + 91) = ((a39 + 2) ^ 0xBA) * (a39 + 19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v40 + 8 * (a2 + 953))
                                          - ((a2 - 1014941742) & 0x3C7ECFDF)
                                          + 2006))(a23);
}

uint64_t sub_21E09EB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t (*a24)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  return a24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45);
}

void nXJ7Amk1zyK93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a4)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = !v5;
  __asm { BR              X8 }
}

uint64_t sub_21E09EC34(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;

  *a4 = 0;
  *a5 = 0;
  a14 = (1292559617 * ((-802674762 - (&a14 | 0xD02827B6) + (&a14 | 0x2FD7D849)) ^ 0x8884B020)) ^ 0x9B42BBAD;
  v17 = sub_21E0E193C(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16
                                                      + 8
                                                      * (int)(((a15 == 939001227) * ((v15 - 437201248) ^ 0xE5F0D2D0)) ^ v15))
                                          - 12))(v17);
}

uint64_t sub_21E09ECF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, int a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a15 = &STACK[0xCDF15AEA900D071];
  a14 = 305
      - 225134719 * ((-1186484156 - (&a14 | 0xB947B044) + (&a14 | 0x46B84FBB)) ^ 0x50480A91);
  sub_21E047010(&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                                - 3857766902
                                                                                                + *(_QWORD *)(v16 + 8 * ((189 * (a16 == 939001227)) ^ 0x356u))))(v18, v19, v20, v21, v22, v23, v24);
}

uint64_t sub_21E09EDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, int a17)
{
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v22 = 2009815553 * ((~v21 & 0xC96875977AEDC5E3 | v21 & 0x36978A6885123A1CLL) ^ 0xDA157D4C8BE6EBA6);
  HIDWORD(a14) = v22 + 780;
  a15 = a13;
  a16 = ((2 * v18) & 0x3C775B235F2BFDBCLL) + (v18 ^ 0x1E3BAD91AF95FEDELL) - 0x1829A00104109480 + v22;
  sub_21E092E34((uint64_t)&a14);
  v23 = 1990461019 * ((v21 & 0x40BB3FDB | ~(v21 | 0x40BB3FDB)) ^ 0x90A062AD);
  a14 = v17;
  a15 = a13;
  LODWORD(a16) = v23 ^ ((v19 ^ 0xEEFFD1F2) + 2147479136 + ((2 * v19) & 0xDDFFA3E4));
  a17 = v23 ^ 0x3AC;
  sub_21E09AD60((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((3292 * (HIDWORD(a16) == 939001227)) ^ 0x129u)) - 4))(v24, v25, v26, v27, v28, v29, v30, v31);
}

uint64_t sub_21E09EF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, int a17, unint64_t *a18, uint64_t a19)
{
  unsigned int v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1328090399
      * (((&a14 | 0xDA2C3262) - &a14 + (&a14 & 0x25D3CD98)) ^ 0x25FF5658);
  a18 = &STACK[0x7398388C82CD2D7];
  a19 = a13;
  a17 = v22 ^ 0x6B80F4A2;
  a14 = (v19 - 1653801150) ^ v22;
  a15 = 1703295338 - v22;
  v23 = sub_21E0DDA14((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((2485 * (a16 == ((v20 + v19 + 557 - 2012) ^ (v19 + 869)))) ^ v19))
                                          - 4))(v23);
}

uint64_t sub_21E09F008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unint64_t *a14, unint64_t *a15, unint64_t *a16, int a17, unsigned int a18)
{
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  a18 = (v18 + 1984) ^ (1990461019
                      * ((1165453217 - (&a14 | 0x457767A1) + (&a14 | 0xBA88985E)) ^ 0x956C3AD7));
  a15 = &STACK[0x10AB37095071AF46];
  a16 = a11;
  a14 = &STACK[0xD254D6213B3B415];
  ((void (*)(unint64_t **))(*(_QWORD *)(v20 + 8 * (int)(v18 - 786)) - 8))(&a14);
  LODWORD(a14) = v18
               - 1292559617 * ((((2 * &a14) | 0x9BD87E8C) - &a14 + 840155322) ^ 0x6ABF572F)
               - 544;
  a15 = &STACK[0x3DECEE387AEF03E5];
  a16 = a11;
  ((void (*)(unint64_t **))(*(_QWORD *)(v20 + 8 * (v18 ^ 0x41F)) - 4))(&a14);
  LODWORD(a16) = v18
               - 1734664879 * (((&a14 | 0xB6021BFA) - (&a14 & 0xB6021BFA)) ^ 0x99D933E0)
               - 819;
  a15 = a11;
  v21 = sub_21E092C98((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((57 * ((_DWORD)a14 != 939001227)) ^ v18))
                                          - (((v18 - 878) | 9)
                                           + 1149)
                                          + 1442))(v21);
}

uint64_t sub_21E09F1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int v14;
  uint64_t v15;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v15
                                                     + 8
                                                     * (((a13 == ((v14 - 239) ^ (v13 - 1103)))
                                                       * (71 * (v14 ^ 0x5B7) - 668)) ^ v14))
                                         - 4))(0);
}

uint64_t sub_21E09F1F0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8 * ((2245 * (((a1 ^ 0x829 ^ (a5 == v5 + a1 - 910 - 297)) & 1) == 0)) ^ a1))
                            - 4))();
}

uint64_t sub_21E09F244()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = ((uint64_t (*)(_QWORD, uint64_t))*(&off_24E21C7C0 + v2 - 2799))(v0 ^ v1, 3166943530) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((v4 * (((v2 + 1598492897) & 0xA0B8E3A9) - 255)) ^ v2)))();
}

uint64_t sub_21E09F2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v12;
  uint64_t v13;
  int v14;
  int v15;

  v15 = (a12 ^ v14) - ((2 * (a12 ^ v14)) & 0xC1E85D8) - 2045820180;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((251
                                          * ((((((v12 - 2134) | 0x115) - 1445891686) & 0x562E8DBF ^ 0xF0B37B6B) & (2 * v15) ^ 0x1205D8)
                                           + (v15 ^ 0xFE56FD02)
                                           - 1880111116 == 139036642)) ^ ((v12 - 2134) | 0x115)))
                            - 4))();
}

uint64_t sub_21E09F358()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v0 - 1118) ^ (720 * ((v2 + v1 - 2019147758) > 7))))
                            - (((v0 - 1118) ^ 0xE5F0D909)
                             + 437200627)
                            + 225))();
}

uint64_t sub_21E09F3C0(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 | (22 * ((unint64_t)(v1 - a1) < 0x20))))
                            - (((v2 - 231) | 0x300u) ^ 0x30ALL)))();
}

uint64_t sub_21E09F3FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a4 ^ (13 * (v4 < 0x20))))
                            + 3857766890
                            - (((a4 + 1406) | 0x220u)
                             - v5
                             - 1866)
                            + 4))();
}

uint64_t sub_21E09F444(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = (v5 + v3);
  v9 = *(_OWORD *)(v2 + v8 - 15);
  v10 = *(_OWORD *)(v2 + v8 - 31);
  v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  LODWORD(v11) = ((v6 + a2 + 1191) ^ 0x7DD) == (v4 & 0xFFFFFFE0);
  return (*(uint64_t (**)(void))(v7 + 8 * (int)(((2 * v11) | (8 * v11)) ^ (v6 + a2 - 31))))();
}

uint64_t sub_21E09F4A4(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((a2 - 859) | 0x104) - 1444) * (v2 != v3)) ^ a2))
                            - ((a2 - 1546246654) & 0x5C29D2FF ^ 0xFBLL)))();
}

uint64_t sub_21E09F4F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v6
                                                              + 8 * (a4 ^ (1008 * ((v4 & 0x18) != 0))))
                                                  - (((a4 - 223) | 0xA80u) ^ 0xAA8)))(a1, (a4 - v5 + 599));
}

uint64_t sub_21E09F530(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  *(_QWORD *)(a1 - 7 + (v6 + v5 + v7 - v8)) = *(_QWORD *)(v3 - 7 + (v6 + v5 + v7 - v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1555 * (v8 - (v4 & 0xFFFFFFF8) == -8)) ^ a3))
                            - ((5 * (a3 ^ 0xA93u)) ^ 0xFBLL)))();
}

void sub_21E09F594()
{
  JUMPOUT(0x21E09F564);
}

uint64_t sub_21E09F5A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8 * (((((2 * a6) ^ 0x458 ^ (v7 + 3224)) + v8 + a6 - 22) * (v6 == a4)) ^ a6))
                            - 8))();
}

uint64_t sub_21E09F5D8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a1 + (v5 + v4)) = *(_BYTE *)(v3 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((3306 * (v5 - 1 != ((a2 - v7 + 1213) ^ a3))) ^ (v6 + a2 + 1191)))
                            - 4))();
}

uint64_t sub_21E09F61C(uint64_t a1, uint64_t a2, int a3)
{
  int *v3;
  _QWORD *v4;
  void (*v5)(unsigned int *);
  int v6;
  int v7;
  int v8;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;

  v8 = 3 * ((a3 - 239) ^ 0x4D4);
  *v4 = a1;
  *v3 = (v7 + a3 - 239 - 1207) ^ v11;
  v14 = v10;
  v13 = (v8 + 2102) ^ (225134719
                     * ((((&v13 | 0xA2F36EB6) ^ 0xFFFFFFFE) - (~&v13 | 0x5D0C9149)) ^ 0x4BFCD463));
  v5(&v13);
  v14 = v12;
  v13 = (v8 + 2102) ^ (225134719
                     * ((((&v13 | 0xEB8B9512) ^ 0xFFFFFFFE) - (~&v13 | 0x14746AED)) ^ 0x2842FC7));
  v5(&v13);
  return v6 ^ 0x37F8058Bu;
}

void sub_21E09F744(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_21E09F788(uint64_t a1)
{
  uint64_t v1;
  int v3;
  unsigned int v4;

  v3 = (*(uint64_t (**)(void))(v1 + 2304))();
  if (v3 == 16)
    v4 = -42029;
  else
    v4 = -42030;
  (*(void (**)(uint64_t))(v1 + 2056))(a1);
  if (v3)
    return v4;
  else
    return 0;
}

uint64_t sub_21E09F7D0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)&unk_24E21505C
                                        + 8 * ((1527 * (*(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL) == 1810943894)) ^ 0x808u)
                                        - 12)
                            - 12))();
}

uint64_t sub_21E09F820(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x4063EA0FFD2E1F1) = (**(unsigned __int8 **)(a2 - 0x593A0D77ED43FF8BLL) ^ 0xAF4ED9BE)
                                        + 2143289332
                                        + ((2 * **(unsigned __int8 **)(a2 - 0x593A0D77ED43FF8BLL)) & 0x17C);
  return 0;
}

uint64_t sub_21E09F878()
{
  return 4294925278;
}

void sub_21E09F880(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (225134719 * ((a1 & 0x7B48C4E9 | ~(a1 | 0x7B48C4E9)) ^ 0x92477E3C));
  __asm { BR              X9 }
}

uint64_t sub_21E09F92C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_BYTE *)(v2 - 0x6898E7DB637CE957) & 1) * ((8 * a1) ^ 0x1DA4)) ^ a1))
                            - 8))();
}

uint64_t sub_21E09F964(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v4 = *(_DWORD *)(v3 - 0x6898E7DB637CE95FLL) - 372112887 == (((v1 ^ 0x19E0) + 1375) ^ 0x95F);
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v2
                                                              + 8
                                                              * (((8
                                                                 * (((((v1 ^ 0xE0) - 2) ^ v4) & 1) == 0)) & 0xEF | (16 * ((((v1 ^ 0x19E0) + 510) ^ ~v4) & 1))) ^ v1 ^ 0x19E0))
                                                  - 8))(a1, *(_QWORD *)(v3 - 0x6898E7DB637CE96BLL));
}

uint64_t sub_21E09F9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v13 = ((unint64_t)&a10 ^ 0xD73EEBAFBED4B153)
      + 0x7FFF1D7749FFE75FLL
      + ((2 * (_QWORD)&a10) & 0xAE7DD75F7DA962A0);
  a10 = v11 - 1;
  *(_BYTE *)(a2 + a10) = (v13 + ((v10 - 31) & 0x7F)) * ((v13 + 78) ^ 0xBA);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v12 + 8 * ((1013 * (a10 == 0)) ^ v10)) - 12))(a1, a2);
}

void sub_21E09FA8C()
{
  JUMPOUT(0x21E09FA50);
}

void sub_21E09FA94()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 4) = -1100501387;
}

uint64_t sub_21E09FC10(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 8);
  v2 = *(_DWORD *)(result + 20)
     + 1948972247 * ((349132262 - (result | 0x14CF55E6) + (result | 0xEB30AA19)) ^ 0x5EAE5FF7);
  v3 = ((v2 & 0x12E ^ 0xDC3E005) + (v2 & 0xD1) - 1) ^ 0x7CDE0F12;
  *(_DWORD *)(v1 - 0x1464535CD0E664DLL) = (((2 * v3) & 0x13C3FA) - v3 + 2006326786) ^ 0x54270F68;
  *(_QWORD *)(v1 - 0x1464535CD0E666DLL) = 0x7AA17D3C70A973D7;
  *(_DWORD *)(v1 - 0x1464535CD0E6651) = 1088493529;
  v4 = v2 ^ 0x8D;
  if (v4 == 1)
  {
    v5 = 1088493545;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x1464535CD0E6655) = -1828328681;
    v5 = 1088493549;
LABEL_5:
    *(_QWORD *)(v1 - 0x1464535CD0E6665) = 0xBF1AA16E379229E6;
    *(_QWORD *)(v1 - 0x1464535CD0E665DLL) = 0x40E55E91C86DD619;
    *(_DWORD *)(v1 - 0x1464535CD0E6651) = v5;
  }
  *(_DWORD *)(result + 16) = 484388812;
  return result;
}

void sub_21E09FDA8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 24) + 2009815553 * ((-935388273 - (a1 | 0xC83F1B8F) + (a1 | 0x37C0E470)) ^ 0xC6CBCA35);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x1D17695A8381D362) - 201714705 >= 0)
    v4 = *(_DWORD *)(v2 - 0x1D17695A8381D362) - 201714705;
  else
    v4 = 201714705 - *(_DWORD *)(v2 - 0x1D17695A8381D362);
  v3 = *(_QWORD *)a1;
  if (*(_DWORD *)(*(_QWORD *)a1 - 0x1D17695A8381D362) - 201714705 >= 0)
    v5 = *(_DWORD *)(v3 - 0x1D17695A8381D362) - 201714705;
  else
    v5 = 201714705 - *(_DWORD *)(v3 - 0x1D17695A8381D362);
  v7 = v1 + 1734664879 * ((&v7 & 0xB3B8775A | ~(&v7 | 0xB3B8775A)) ^ 0x639CA0BF) + 2051;
  v8 = v2;
  sub_21E069D0C((uint64_t)&v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X13 }
}

uint64_t sub_21E09FF44()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v6;

  v4 = (v1 ^ 0xD0486F57) + v3;
  v6 = v4 > 1384050690 || v4 < v2 - 763432957;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * (((v1 - 181) | 0x241) ^ 0x5CE)) ^ v1)))();
}

uint64_t sub_21E09FFA4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _BOOL4 v16;

  v13 = 4 * (v10 + v6);
  v14 = v1 + v8 + (*(_DWORD *)(*(_QWORD *)(v12 - 0x1D17695A8381D35ELL) + v13 - 0x2CF4A33C3453BA2BLL) ^ v9);
  *(_DWORD *)(*(_QWORD *)(v11 - 0x1D17695A8381D35ELL) + v13 - 0x2CF4A33C3453BA2BLL) = v14
                                                                                    + (v4 ^ 0x325 ^ (v9 + 575))
                                                                                    - (v7 & (2 * v14));
  v16 = v10 + v2 <= v3 && v10 + v2 >= v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((58 * v16) ^ (v4 - 213))))();
}

uint64_t sub_21E0A0080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;
  int v12;
  _BOOL4 v14;

  v14 = v12 - 1188692166 > 995918042 || v12 - 1188692166 < (int)(((v11 + 1489) ^ 0xBB5C8849) + a10);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v14 * (((v11 - 568) | 0x52) + 2505)) ^ v11)) - 4))();
}

uint64_t sub_21E0A00DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  _BOOL4 v26;

  v22 = 4 * (v20 + v16);
  v23 = v11 + v18 + (*(_DWORD *)(*(_QWORD *)(a10 - 0x1D17695A8381D35ELL) + v22 - 0x2CF4A33C3453BA2BLL) ^ v19);
  *(_DWORD *)(*(_QWORD *)(v21 - 0x1D17695A8381D35ELL) + v22 - 0x2CF4A33C3453BA2BLL) = v23 + v19 - (v17 & (2 * v23));
  v24 = v20 + 1 + v12;
  v26 = v24 <= v13 && v24 >= v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((538 * v26) ^ v14)) - 4))();
}

uint64_t sub_21E0A01B4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 == 0x7C549B14F3F477B5) * (((v2 - 1902) | 0xC0) - 393)) ^ v2)))();
}

void sub_21E0A01E8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  *(_DWORD *)(v2 - 0x1D17695A8381D362) = (((v1 + v0) * (v3 - 1477048150)) ^ 0xBEB7EE7F)
                                         + 1296956818
                                         + ((2 * (v1 + v0) * (v3 - 1477048150)) & 0x7D6FDCFE);
}

uint64_t sub_21E0A0434(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_24E215050[(406
                                             * ((*a1 + 1412219108 + *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL)) > 0xC8)) ^ 0xAE9u]
                            - 12))();
}

uint64_t sub_21E0A0494()
{
  return 4294925278;
}

uint64_t sub_21E0A049C()
{
  uint64_t v0;
  int v1;

  return (*(uint64_t (**)(void))(v0 + 8 * (((4 * (v1 == 1810943893)) | (32 * (v1 == 1810943893))) ^ 0x50Du)))();
}

uint64_t sub_21E0A04C8(_DWORD *a1)
{
  int v1;
  int v2;

  *((_BYTE *)a1 + ((v2 - 417837253) ^ 0x2705CAC2u) + v1 + 4) = 124;
  *a1 = v1;
  return 0;
}

uint64_t sub_21E0A04FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _DWORD *a3@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned int v5;
  _BOOL4 v6;

  *(_BYTE *)(a1 + (v3 - 1071804296) + 4) = (**(_BYTE **)(a2 - 0x593A0D77ED43FF8BLL) ^ 0x7F)
                                                       + 2 * **(_BYTE **)(a2 - 0x593A0D77ED43FF8BLL)
                                                       - 3;
  v5 = *a3 + 1873687380;
  v6 = v5 > 0xDB9F02EA;
  if (v5 < 0xDB9F02E9)
    v6 = 1;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1867 * !v6) ^ 0x262u)))();
}

void sub_21E0A05BC()
{
  JUMPOUT(0x21E0A0540);
}

void sub_21E0A05C4(uint64_t a1)
{
  int v1;
  _DWORD v2[8];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 4) - 1734664879 * ((2 * (a1 & 0xC3DAF51C) - a1 + 1009060579) ^ 0x13FE22F9);
  v2[0] = (1292559617 * ((v2 & 0x8DB70028 | ~(v2 | 0x8DB70028)) ^ 0xD51B97BE)) ^ (v1 - 1690125724);
  sub_21E0E193C(v2);
  __asm { BR              X8 }
}

uint64_t sub_21E0A06E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, unint64_t *a13, int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  a13 = &STACK[0xCDF15AEA900D061];
  a12 = v15 - 225134719 * ((((2 * &a12) | 0xD64ED090) - &a12 + 349738936) ^ 0xFDD72D62) - 24;
  sub_21E047010(&a12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16
                                                                                          + 8
                                                                                          * ((164 * (a14 == v14)) ^ v15))
                                                                              - ((v15 + 1691646662) & 0x9B2B8BF5)
                                                                              + 2041))(v17, v18, v19, v20, v21);
}

uint64_t sub_21E0A078C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, int a14, int a15)
{
  _DWORD *v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;

  v22 = v20 ^ *v15 ^ 0x812392EB;
  v23 = ((&a12 + 966091578 - 2 * ((unint64_t)&a12 & 0x3995633A)) ^ 0x9EC60B53) * v17;
  a13 = a11;
  a15 = v18 - v23 - 427;
  a12 = v23 + v18 - 1724 + 576055179 * v22 + 1580387771;
  v24 = ((uint64_t (*)(int *))(*(_QWORD *)(v19 + 8 * (v18 - 1972)) - 4))(&a12);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((11 * (a14 == v16)) ^ v18)))(v24);
}

uint64_t sub_21E0A0848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14, int a15, unint64_t *a16, uint64_t a17)
{
  int v17;
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1328090399 * ((2 * (&a12 & 0x5FBFA4D8) - &a12 + 541088550) ^ 0xDF933F1C);
  a15 = v20 ^ 0x6B80F4A2;
  a16 = &STACK[0x7398388C82CD2CF];
  a17 = a11;
  a12 = (v18 - 1653802906) ^ v20;
  a13 = -231376942 - v20;
  v21 = sub_21E0DDA14((uint64_t)&a12);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((a14 == v17) * (v18 ^ 0xC14)) ^ v18)))(v21);
}

uint64_t sub_21E0A0908()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  void (*v6)(unsigned int *);
  unsigned int v7;
  unsigned int v8;
  uint64_t result;
  unsigned int v10;
  unint64_t *v11;
  unint64_t *v12;
  unsigned int v13;
  unint64_t *v14;
  unint64_t *v15;

  v7 = (v4 + 1212556262) & 0xB7B9D55D;
  v14 = &STACK[0x3DECEE387AEF032D];
  v15 = v11;
  v13 = v4 - (((&v13 | 0x1BCC29ED) - (&v13 & 0x1BCC29ED)) ^ 0xBC9F4184) * v3 - 1431;
  ((void (*)(unsigned int *))(*(_QWORD *)(v5 + 8 * (v4 ^ 0x894)) - 4))(&v13);
  LODWORD(v15) = v4 - (&v13 ^ 0x2FDB281A) * v2 - 1706;
  v14 = v11;
  sub_21E092C98((uint64_t)&v13);
  if (v13 == v1 + v7 - 329)
    v8 = v10;
  else
    v8 = v13;
  v14 = v11;
  v13 = (v4 + 346) ^ (225134719
                    * ((1411521409 - (&v13 | 0x54221B81) + (&v13 | 0xABDDE47E)) ^ 0xBD2DA154));
  v6(&v13);
  v14 = v12;
  v13 = (v7 + 2070) ^ (225134719
                     * ((&v13 - 987934753 - 2 * ((unint64_t)&v13 & 0xC51D4FDF)) ^ 0xD3ED0AF5));
  result = ((uint64_t (*)(unsigned int *))v6)(&v13);
  *(_DWORD *)(v0 + 8) = v8;
  return result;
}

void sub_21E0A0AC0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24)
     - 225134719 * (((a1 ^ 0x3D2525FB | 0x2CC1C13C) - (a1 ^ 0x3D2525FB | 0xD33E3EC3) - 750895421) ^ 0x714A1ED);
  __asm { BR              X15 }
}

uint64_t sub_21E0A0BD0()
{
  int v0;
  uint64_t v1;
  unsigned int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v4 = v3 ^ 0x912;
  v5 = v0 + 188667220 < (int)(v2 + 390381925);
  if (v2 > (v3 ^ 0x912u) + 1757101484 != v0 + 188667220 < v3 - 1757104279)
    v5 = v2 > v4 + 1757101484;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * ((2782 * v5) ^ v4)) - 8))(0x4E5B41712B75A3BDLL);
}

uint64_t sub_21E0A0D10@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  _QWORD *v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL4 v22;

  v18 = 3 * (v13 ^ 0x3BA);
  v19 = a1
      + v17
      + (*(_DWORD *)(a3 + 4 * v14 + v16) ^ v9)
      + v12 * (unint64_t)(*(_DWORD *)(*v11 + 4 * a2 + v16) ^ v9);
  *(_DWORD *)(a3 + 4 * v14 + v16) = v19 + v9 - ((((119 * (v18 ^ 0x9FE) - 237) | v5) ^ 0x255F2C91) & (2 * v19));
  v20 = (v10 ^ HIDWORD(v19)) + (v8 & (v19 >> 31)) + a5;
  v22 = a2 - 1121744670 < v15 && a2 - 1121744670 >= a4;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (v18 ^ (v22 * v7))) - 8))(v20);
}

uint64_t sub_21E0A0DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)(((((a5 + 1799202947) & 0x94C25B3F) + 704) * (a1 != 0x4E5B41712B75A3BDLL)) ^ a5))
                            - 12))();
}

uint64_t sub_21E0A0E2C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v4 = a1 - 2151;
  v5 = v3 > 0xC418812;
  if (v5 == v1 + 1740147676 < 127 * ((a1 - 2151) ^ 0x1C2) - 205622918)
    v5 = v1 + 1740147676 < (int)(v3 + v4 + 1941861918);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2681 * v5) ^ v4)) - 8))();
}

uint64_t sub_21E0A0F0C@<X0>(uint64_t a1@<X0>, int a2@<W5>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v12 = a1 - 0x4E5B41712B75A3BDLL + (*(_DWORD *)(v10 + 4 * v11 + a4) ^ v6);
  *(_DWORD *)(v10 + 4 * v11 + a4) = v6 + v12 + (a2 ^ (4 * (v7 + 1188))) - ((v7 + 626993427) & (2 * v12)) - 1348;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v5 ^ HIDWORD(v12)) + (a3 & (v12 >> 31)) + v8 != 0x4E5B41712B75A3BDLL) * v9) ^ (v7 + 1188)))
                            - 12))();
}

uint64_t sub_21E0A0FB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  _DWORD *v9;
  int v10;
  int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v10 = *v9 + 1383415829;
  v11 = (v7 + 1383415829 < -562353114) ^ (v10 < (int)(((a7 ^ 0x4D3) + 1221) ^ 0xDE7B2A7A));
  v12 = v7 + 1383415829 > v10;
  if (v11)
    v13 = v7 + 1383415829 < -562353114;
  else
    v13 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((4 * !v13) | (16 * !v13)) ^ a7)) - 12))();
}

void sub_21E0A1024()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_21E0A1048(_DWORD *a1)
{
  int v1;

  v1 = *a1 - 1292559617 * ((((2 * (_DWORD)a1) | 0x7938BFFA) - (_DWORD)a1 + 1130602499) ^ 0x1BCF3794);
  __asm { BR              X9 }
}

uint64_t sub_21E0A1118@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ (35 * (v2 == 0))))
                            - ((3 * (((a1 - 3370) | 0x880) ^ 0x856u)) ^ 0x24FLL)))();
}

uint64_t sub_21E0A1164@<X0>(uint64_t (*a1)(uint64_t *)@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t result;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int v10;

  v4 = 731811679 * ((((2 * &v6) | 0x1A9F5F28) - &v6 + 1924157548) ^ 0xC4B909D0);
  v6 = 0x45D0856C2970AB82;
  v9 = v3;
  v7 = v4 + 1391826208;
  v8 = v4 - 2088808250;
  v10 = v4 + v1 - 145;
  result = a1(&v6);
  *(_DWORD *)(v2 + 4) = *(_DWORD *)(v3 - 0x6898E7DB637CE953);
  return result;
}

void sub_21E0A1728(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1 + 1328090399 * ((-2 - ((a1 | 0x92F5A538) + (~(_DWORD)a1 | 0x6D0A5AC7))) ^ 0x92D93EFD);
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(char *, void (*)()))*(&off_24E21C7C0 + (v1 ^ 0x81A)))((char *)*(&off_24E21C7C0 + (v1 ^ 0x89A)) - 4, sub_21E0E1814);
  __asm { BR              X10 }
}

uint64_t sub_21E0A17EC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(_QWORD *)(*(_QWORD *)(v1 + 8 * (((v2 - 669138393) & 0x27E23DDE) - 2117)) - 4) == 0)
                                * (((((v2 - 669138393) & 0x27E23DDE) - 94) | 0x58) ^ (((v2 - 669138393) & 0x27E23DDE)
                                                                                    + 282))) ^ (v2 - 669138393) & 0x27E23DDE)))();
}

uint64_t sub_21E0A1850@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xA8A)))(v1);
}

void IPaI1oem5iL()
{
  _DWORD v0[6];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[0] = (1292559617 * ((((2 * v0) | 0xE0CEECB0) - v0 + 261654952) ^ 0x57341E31)) ^ 0x9B42BBAD;
  sub_21E0E193C(v0);
  __asm { BR              X10 }
}

uint64_t sub_21E0A1938@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((2508 * (v2 != 0)) ^ a1)) - (v3 ^ 0x915D6AB4)))();
}

uint64_t sub_21E0A196C()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v3 = v0 ^ 0x6E0FF46CEF4CB33FLL;
  v4 = *(_QWORD *)(v3 - 0x6E0FF46CEF4CB327);
  v7 = 2478
     - 1988622253 * ((((&v7 | 0x2F0708A6) ^ 0xFFFFFFFE) - (~&v7 | 0xD0F8F759)) ^ 0x26E0B7F9);
  v8 = v4;
  sub_21E09C884(&v7);
  v5 = v9;
  (*(void (**)(uint64_t))(v2 + 2056))(v3 - 0x6E0FF46CEF4CB33FLL);
  return v5 ^ v1;
}

void sub_21E0A1A3C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  if (*(_QWORD *)(a1 + 16))
    v2 = *(_QWORD *)a1 == 0;
  else
    v2 = 1;
  v3 = !v2;
  v1 = *(_DWORD *)(a1 + 24) - 1734664879 * ((((2 * a1) | 0x2F6E0E76) - a1 - 397870907) ^ 0x386C2F21);
  __asm { BR              X9 }
}

uint64_t sub_21E0A1B0C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v7;
  uint64_t v8;

  v8 = *(_QWORD *)(result + 8);
  if (*(_BYTE *)(v8 + 131) == 1)
  {
    v5 = 1948972247 * ((v4 - 144) ^ 0xB59EF5EE);
    *(_QWORD *)(v4 - 136) = v4 + 0x1464535CD0E65B9;
    *(_DWORD *)(v4 - 124) = 1426307468 - v5;
    *(_DWORD *)(v4 - 144) = (v2 + 514405600) ^ v5;
    sub_21E09FC10(v4 - 144);
    v6 = (197 * (v2 ^ 0x70) - 659) | 0x424;
    v7 = ((2 * *(_DWORD *)(v4 - 176)) & 0x7A ^ ((v6 ^ 0x553) - 382))
       + (*(_DWORD *)(v4 - 176) & 0x3F ^ 0x36FFF7C1u)
       - 922744877 > 0xFFFFFFBF;
    __asm { BR              X8 }
  }
  if (!*(_BYTE *)(v8 + 131))
    __asm { BR              X8 }
  return result;
}

void sub_21E0A4870(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v6;

  v1 = 1438293641 * (a1 ^ 0xB8C7557F);
  v2 = *(_DWORD *)a1 - v1;
  if (*(_QWORD *)(a1 + 48))
    v3 = *(_QWORD *)(a1 + 32) == 0;
  else
    v3 = 1;
  v6 = v3 || *(_QWORD *)(a1 + 8) == 0 || *(_DWORD *)(a1 + 40) + v1 == 1867344250;
  __asm { BR              X8 }
}

uint64_t sub_21E0A4934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  void (*v13)(uint64_t);
  unsigned int v14;

  v8 = (uint64_t *)(v7 - 128);
  v9 = *(_QWORD *)(a1 + 16) + 56 * **(unsigned __int8 **)(a1 + 16) + 24;
  v10 = v7 - 128;
  v11 = 1948972247 * ((((v7 - 128) | 0xE59A6F8) - (v7 - 128) + ((v7 - 128) & 0xF1A65900)) ^ 0xBBC75316);
  *(_DWORD *)(v7 - 120) = v11 + v3 - 568;
  *(_WORD *)(v7 - 116) = 29944 - -2857 * ((((v7 - 128) | 0xA6F8) - (v7 - 128) + ((v7 - 128) & 0x5900)) ^ 0x5316);
  *v8 = v9;
  *(_DWORD *)(v7 - 112) = -1843668060 - v11;
  v8[3] = (uint64_t)&STACK[0xCE528DE2F096CE4];
  (*(void (**)(uint64_t))(v2 + 8 * (v3 - 97)))(v7 - 128);
  v12 = 1734664879 * ((-2049561189 - (v10 | 0x85D62D9B) + (v10 | 0x7A29D264)) ^ 0x55F2FA7E);
  *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096CE4];
  *(_QWORD *)(v7 - 104) = v6;
  *(_DWORD *)(v7 - 128) = v3 + 892 + v12;
  *(_DWORD *)(v7 - 112) = v12 + 868664106;
  v13 = *(void (**)(uint64_t))(v2 + 8 * (v3 - 599));
  v13(v7 - 128);
  v14 = 1734664879 * (((v10 | 0x33B4790A) - v10 + (v10 & 0xCC4B86F0)) ^ 0x1C6F5110);
  *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096CE4];
  *(_QWORD *)(v7 - 104) = v4;
  *(_DWORD *)(v7 - 128) = v3 + 892 + v14;
  *(_DWORD *)(v7 - 112) = v5 + v14 - 998680814 + ((v3 - 620) | 0x260);
  v13(v7 - 128);
  *v8 = v1;
  *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096CE4];
  *(_DWORD *)(v7 - 112) = v3 + 731811679 * ((((v7 - 128) | 0x7ABCD931) - ((v7 - 128) & 0x7ABCD931)) ^ 0x334A7F75) - 517;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v3 ^ 0xA0)) - 8))(v7 - 128);
}

void sub_21E0A4B64(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1328090399 * (((a1 | 0xDE3D9B8C) - a1 + (a1 & 0x21C26473)) ^ 0x21EEFFB6);
  if (*(_QWORD *)a1)
    v2 = *(_DWORD *)(a1 + 16) - v1 == 372112887;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_21E0A4C38()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  BOOL v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v2 ^ 0x8B9)))(32, 0x101004023FF3BD5) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((622 * ((v3 ^ (9 * (v2 ^ 0x77))) & 1)) ^ v2))
                            - 12))();
}

uint64_t sub_21E0A4CA4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((31 * ((((v1 == v0) ^ v3) ^ (v3 + 115)) & 1)) ^ v3))
                            - 8))();
}

uint64_t sub_21E0A4CEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 372112888;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v7 + v11);
  if (v13 == 50)
    __asm { BR              X11 }
  if (v13 == 178)
  {
    v14 = 939001227;
    v15 = *(_QWORD *)(v4 + 24);
    v16 = *(unsigned __int8 *)(v4 + 12) ^ v5;
    *(_QWORD *)result = v7;
    *(_DWORD *)(result + 8) = v8;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 67)
      v17 = 1316007424;
    else
      v17 = 1316007425;
    *(_DWORD *)(result + 16) = 1513421355;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 939001227;
    *(_QWORD *)(v15 - 0x1A8CE34870D52A7ELL) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v6 + 8 * (v9 ^ 0xCDD)))();
    v14 = -939041198;
  }
  *(_DWORD *)(v4 + 32) = v14;
  return result;
}

uint64_t sub_21E0A4DD0(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  v1 = 1948972247 * ((-2 - ((a1 | 0x5E084211) + (~(_DWORD)a1 | 0xA1F7BDEE))) ^ 0x14694800);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_DWORD *)a1 - v1 - 864284134;
  v5 = v4
     + (*(_DWORD *)(v3 - 0x1464535CD0E6669) ^ 0x7AA17D3C)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x1464535CD0E6669) ^ 0x7AA17D3C))) & 0xF542FA78)
     + 2057403708;
  *(_DWORD *)(v3 - 0x1464535CD0E6669) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + v2 - 2339) + 8 * ((1267 * ((v5 ^ 0x7AA17D3C) < v4)) ^ v2)
                                                                      - 12))();
}

void sub_21E0A4E9C(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x1464535CD0E666DLL) = (*(_DWORD *)(a1 - 0x1464535CD0E666DLL) ^ 0x70A973D7)
                                        + 1890153431
                                        - ((2 * (*(_DWORD *)(a1 - 0x1464535CD0E666DLL) ^ 0x70A973D7) + 2) & 0xE152E7AE)
                                        + 1;
}

void sub_21E0A4EE4(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  BOOL v4;
  int v5;

  v1 = 1292559617 * (((a1 | 0xAE6EDF8C) - (a1 & 0xAE6EDF8C)) ^ 0x93DB7E5);
  v2 = *(_DWORD *)(a1 + 16) ^ v1;
  v3 = (unsigned __int16)(*(_WORD *)(a1 + 20) - v1);
  if (*(_QWORD *)(a1 + 8))
    v4 = v3 == 27449;
  else
    v4 = 1;
  v5 = !v4;
  __asm { BR              X8 }
}

uint64_t sub_21E0A4FAC(uint64_t a1)
{
  __int16 v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                + 8
                                                                                * ((58 * (((v2 ^ 0xBFC) & 1) == 0)) ^ v2 ^ 0xB84))
                                                                    - ((((v2 ^ 0xB84) - 43) | 0x82u) ^ 0x1E2)))(a1, (unsigned __int16)(v1 - 27449), 121, 130);
}

uint64_t sub_21E0A51A4@<X0>(int a1@<W1>, char a2@<W2>, unint64_t a3@<X7>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int *a15, _QWORD *a16)
{
  char v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BYTE *v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  char v27;

  v23 = (_BYTE *)(v19 + (a1 - 1));
  v24 = -1770326851 * ((*(_DWORD *)(*a16 + (*a15 & a3)) ^ v23) & 0x7FFFFFFF);
  v25 = -1770326851 * (v24 ^ HIWORD(v24));
  v26 = v25 >> ((v17 ^ a2) - 127);
  v27 = *(_BYTE *)(*(_QWORD *)(v20 + 8 * (v17 - 331)) + v26 - 8) ^ (a4 >> v16) ^ *(_BYTE *)(*(_QWORD *)(v20 + 8 * (v17 ^ v18))
                                                                                            + v26
                                                                                            - 12) ^ *(_BYTE *)(v26 + *(_QWORD *)(v20 + 8 * (v17 ^ v22)) + 1) ^ v25 ^ (87 * v26);
  *v23 = v27;
  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((3069 * (a1 != (v27 != 0))) ^ v17)) - 12))();
}

void sub_21E0A5BA8()
{
  JUMPOUT(0x21E0A515CLL);
}

void sub_21E0A5BB0()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_21E0A5BF4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 40) - 1438293641 * (((a1 | 0x372B295D) - (a1 & 0x372B295D)) ^ 0x8FEC7C22);
  __asm { BR              X16 }
}

uint64_t sub_21E0A5D54(int a1)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 + 1051) * (a1 != 0x3508344C)) ^ v1)))();
}

uint64_t sub_21E0A5D94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;

  v11 = v7 > 0xA962A8FD;
  *(_BYTE *)(a1 + (v9 - 1569238634)) = *(_BYTE *)(v5 + ((v9 - 1569238634) & 0xFLL)) ^ *(_BYTE *)(v1 + (v9 - 1569238634)) ^ *(_BYTE *)(((v6 - 1923) | 0xECu) + ((v9 - 1569238634) & 0xFLL) + v2 - 234) ^ *(_BYTE *)(v4 + ((v9 - 1569238634) & 0xFLL)) ^ (-93 * ((v9 - 106) & 0xF));
  if (v11 == v9 - 116086631 < v3)
    v11 = v9 - 116086631 < v8;
  return (*(uint64_t (**)(void))(v10 + 8 * ((2977 * v11) ^ v6)))();
}

uint64_t sub_21E0A5E34(int a1, int a2)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (a2 ^ (39
                                     * (((a1 << ((a2 + 105) ^ 0xEE)) & (((a2 - 1871) | 0x648) ^ 0xFBBDF9A5) ^ v2)
                                      + (a1 ^ 0x48D6CBA1)
                                      - 537659223 != 1574107286)))))();
}

uint64_t sub_21E0A5EA8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((a5 - 440312090) ^ 0x1A3E9916) + ((a5 - 440312090) & 0x1A3E9EFF))
                                          * ((a1 + v5 - 2111766509) < 8)) ^ a5))
                            - 12))();
}

uint64_t sub_21E0A5F04(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (int)((478
                                               * (a2 + a4 - 16 >= (((a7 ^ 0xE5C16F8F) - 73214843) & 0x45D24F5) - 1141)) ^ a7 ^ 0xE5C16F8F))
                            - 4))();
}

uint64_t sub_21E0A5F58(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _BOOL4 v23;

  v14 = a7 - 2114;
  v15 = v12 - 0x55B7A4F61A7BE48ELL + a2 + a1 + v11 + ((a7 - 1769) | 0x64u) - 1125;
  v16 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v11 + ((a7 + 23) | 0x64) - 101) & 0xF;
  v17 = v16 + v10 - v15;
  v18 = (v16 | v7) - v15;
  v19 = v16 + v9 - v15;
  v23 = (unint64_t)(v8 - (v12 - 0x55B7A4F61A7BE48ELL) - 0x46F5648AE782333DLL) > 0xF
     && v17 > 0xF
     && v18 + 5 >= (v14 ^ 0x2B8uLL)
     && v19 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (int)((4031 * v23) ^ v14)) - 8))();
}

uint64_t sub_21E0A600C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((((v7 < 0x10) ^ (a7 - 26)) & 1) * (a7 - 1141)) ^ a7)))();
}

uint64_t sub_21E0A6038@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int8x16_t v27;
  int8x16_t v28;
  int8x16_t v29;
  int8x16x4_t v31;
  int8x16x4_t v32;

  v31.val[1].i64[0] = ((_BYTE)a3 + 8) & 0xF;
  v31.val[1].i64[1] = ((_BYTE)a3 + 7) & 0xF;
  v31.val[2].i64[0] = ((_BYTE)a3 + (_BYTE)a4 - 76 + 99) & 0xF;
  v31.val[2].i64[1] = ((_BYTE)a3 + 5) & 0xF;
  v31.val[3].i64[0] = ((_BYTE)a3 + 4) & 0xF;
  v31.val[3].i64[1] = ((_BYTE)a3 + 3) & 0xF;
  v27.i64[0] = 0xA3A3A3A3A3A3A3A3;
  v27.i64[1] = 0xA3A3A3A3A3A3A3A3;
  v31.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v25 + (_BYTE)a2) & 0xF;
  v31.val[0].i64[1] = ((_BYTE)a3 + 9) & 0xF;
  v28.i64[0] = vqtbl4q_s8(v31, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v32.val[0].i64[1] = ((_BYTE)a3 + 1) & 0xF;
  v32.val[1].i64[1] = (a3 - 1) & 0xF;
  v32.val[2].i64[1] = (a3 + 13) & 0xF;
  v32.val[3].i64[1] = ((_BYTE)a3 + 11) & 0xF;
  v32.val[0].i64[0] = ((_BYTE)a3 + 2) & 0xF;
  v32.val[1].i64[0] = a3 & 0xF;
  v32.val[2].i64[0] = (a3 + 14) & 0xF;
  v32.val[3].i64[0] = (a3 + 12) & 0xF;
  v28.i64[1] = vqtbl4q_s8(v32, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v29 = vrev64q_s8(vmulq_s8(v28, v27));
  *(int8x16_t *)(a5 - 15 + (a1 + v25 + a2)) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v24 + v31.val[0].i64[0] - 15), *(int8x16_t *)(v21 - 15 + (a1 + v25 + a2))), veorq_s8(*(int8x16_t *)(v31.val[0].i64[0] + v22 - 10), *(int8x16_t *)(v23 + v31.val[0].i64[0] - 15))), vextq_s8(v29, v29, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a21
                                        + 8
                                        * ((((((a4 - 76) | 0x80) + 102) ^ ((v26 & 0xFFFFFFF0) == 16)) & 1 | (4 * (((((a4 - 76) | 0x80) + 102) ^ ((v26 & 0xFFFFFFF0) == 16)) & 1))) ^ ((a4 + 692) | 0x280)))
                            - 12))();
}

void sub_21E0A61A4()
{
  JUMPOUT(0x21E0A6124);
}

uint64_t sub_21E0A61B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((a8 ^ 0xB12) * (v9 != v8)) ^ a8))
                            - ((a8 - 2586) ^ 0xE3)))();
}

uint64_t sub_21E0A61E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((3805 * ((v8 & 8) == ((3 * (((a8 ^ 0xE66) - 255465074) & 0xF3A1757 ^ 0x722)) ^ 0x465))) ^ a8 ^ 0xE66)))();
}

uint64_t sub_21E0A6244@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  char v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  unsigned int v31;
  int8x16x4_t v33;

  *(_QWORD *)(v28 - 128) = a3 - 7;
  *(_QWORD *)(v28 - 120) = v19 - 7;
  *(_DWORD *)(v28 - 136) = v27 & 0xFFFFFFF8;
  *(_DWORD *)(v28 - 132) = v27;
  v29 = v21 - (v27 & 0xFFFFFFF8) + 8;
  v30 = v25 + a1 + v26 - v21;
  v31 = a1 + v26 + a2 - v21;
  *(_DWORD *)(v28 - 144) = v24 - 941;
  v33.val[0].i64[0] = v31 & 0xF;
  v33.val[0].i64[1] = (v30 + 88) & 0xF;
  v33.val[1].i64[0] = (v30 + 87) & 0xF;
  v33.val[1].i64[1] = (v30 + 86) & 0xF;
  v33.val[2].i64[0] = ((_BYTE)a1 + (_BYTE)v26 + (_BYTE)v24 + v25 - (_BYTE)v21) & 0xF;
  v33.val[2].i64[1] = (v30 + 84) & 0xF;
  v33.val[3].i64[0] = (v30 + 83) & 0xF;
  v33.val[3].i64[1] = (v30 + 82) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v28 - 128) + v31) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v23 + v33.val[0].i64[0] - 7), *(int8x8_t *)(*(_QWORD *)(v28 - 120) + v31)), veor_s8(*(int8x8_t *)(v33.val[0].i64[0] + v20 - 2), *(int8x8_t *)(v22 + v33.val[0].i64[0] - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v33, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xA3A3A3A3A3A3A3A3)));
  return (*(uint64_t (**)(__n128))(a19 + 8 * ((3997 * (v29 == 0)) ^ v24)))((__n128)xmmword_21E17F900);
}

void sub_21E0A638C()
{
  JUMPOUT(0x21E0A62BCLL);
}

uint64_t sub_21E0A6394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                                + 8
                                                                                * (((*(_DWORD *)(v3 - 144) - 585)
                                                                                  * (*(_DWORD *)(v3 - 132) == *(_DWORD *)(v3 - 136))) ^ *(_DWORD *)(v3 - 144)))
                                                                    - (*(_DWORD *)(v3 - 144) + 445)
                                                                    + 1117))(a1, a2, a3, (*(_DWORD *)(v3 - 144) - 441));
}

uint64_t sub_21E0A63D0@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a3 + (a1 - 1574108902)) = *(_BYTE *)(v6 + ((a1 - 1574108902) & 0xFLL)) ^ *(_BYTE *)(v3 + (a1 - 1574108902)) ^ *(_BYTE *)((((_BYTE)a1 + 26) & 0xF) + v4 + 5) ^ *(_BYTE *)(v5 + (((_BYTE)a1 + 26) & 0xF)) ^ (-93 * ((a1 + 26) & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (((a1 - 1 != v7) * ((a2 - 886) ^ 0x6DE)) ^ (a2 - 366))) - 8))();
}

uint64_t sub_21E0A6440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int8x16_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  _BOOL4 v28;

  v21 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(v17 + 32));
  v22 = vextq_s8(v21, v21, 8uLL);
  v23.i64[0] = 0xE4E4E4E4E4E4E4E4;
  v23.i64[1] = 0xE4E4E4E4E4E4E4E4;
  v24 = vandq_s8(vaddq_s8(v22, v22), v23);
  v23.i64[0] = 0xF2F2F2F2F2F2F2F2;
  v23.i64[1] = 0xF2F2F2F2F2F2F2F2;
  v25 = veorq_s8(v22, v23);
  v23.i64[0] = 0xDFDFDFDFDFDFDFDFLL;
  v23.i64[1] = 0xDFDFDFDFDFDFDFDFLL;
  v26 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v25, v23), v24), (int8x16_t)xmmword_21E17F990));
  *(int8x16_t *)(v19 - 112) = vextq_s8(v26, v26, 8uLL);
  v28 = v18 != 0x55B7A4F61A7BE48ELL && a9 != 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * (int)(a4 ^ (2562 * v28))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_21E0A64CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v25;
  int v26;
  unsigned int v27;
  _BOOL4 v29;

  v26 = HIDWORD(a13) - (((HIDWORD(a13) + 276946152) & 0x5ACB06F7 ^ BYTE4(a13) & 6) << (a25 ^ 0x2B)) - 347282471;
  v27 = ((2 * v26) & 0x77E1F6E ^ 0x5160D62) + (v26 ^ 0xD9740946);
  v29 = (((((_DWORD)a4 + 523763438) & 0xE0C805F6 ^ 0xFFFFFF31) + (((_DWORD)a4 + 428127884) & 0xE67B4DAE)) & (v27 + 9)) == 0
     && v27 != -2084630601;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * (int)((499 * v29) ^ a4)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_21E0A65B0@<X0>(unsigned __int8 *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v17;
  int v18;
  uint64_t v19;
  char *v20;
  int v21;
  unint64_t v22;
  char *v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unsigned int v28;
  int v29;
  char v30;
  char *v31;
  unsigned __int8 v32;
  unsigned int v33;
  char *v34;
  char v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  char v40;
  int v41;
  int v42;
  char v43;
  unsigned int v44;
  char v45;
  int v46;
  char v47;
  char v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  char v56;
  uint64_t v57;
  unsigned __int8 v58;
  char v59;
  char v60;
  unsigned __int8 v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  uint64_t v65;
  int v66;
  char v67;
  int v68;
  uint64_t v69;
  char v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  char *v84;
  int v85;
  uint64_t v86;
  char *v87;
  char *v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  BOOL v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unint64_t v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  char v192;
  unsigned int v193;
  unsigned int v194;
  int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  unsigned int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  char *v252;
  unsigned int v253;
  char *v254;
  int v255;
  unint64_t v256;
  char *v257;
  uint64_t v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  char *v271;
  int v272;
  int v273;
  uint64_t v274;
  uint64_t v275;
  int v276;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;

  v20 = (char *)*(&off_24E21C7C0 + v18 - 1051) - 12;
  v21 = v20[*(unsigned __int8 *)(v19 - 108) ^ 0x36];
  HIDWORD(v22) = v21 ^ 1;
  LODWORD(v22) = (v21 ^ 0x40) << 24;
  v23 = (char *)*(&off_24E21C7C0 + (v18 ^ 0x4F6)) - 4;
  v24 = v23[*(unsigned __int8 *)(v19 - 99) ^ 0xD6];
  v25 = v23[*(unsigned __int8 *)(v19 - 107) ^ 0xE0];
  v26 = ((~v25 << 7) | 0x78) ^ (8 * v25);
  v27 = v23[*(unsigned __int8 *)(v19 - 103) ^ 0x52];
  v28 = (((v22 >> 26) ^ 0x4D) << 24) | ((v25 ^ 0x7B ^ (v26 - ((2 * v26) & 0xE0) + 115)) << 16);
  v29 = v28 - ((2 * v28) & 0x2F140000) + 394942169;
  v30 = ((~v27 << 7) | 0x78) ^ (8 * v27);
  v31 = (char *)*(&off_24E21C7C0 + v18 - 1035) - 8;
  v32 = v27 ^ 0xD3 ^ (v30 + (~(2 * v30) | 0xBF) + 39);
  v33 = (((*(unsigned __int8 *)(v19 - 106) ^ ((*(unsigned __int8 *)(v19 - 106) ^ 0xFFFFFF92)
                                            + (~(2 * (*(unsigned __int8 *)(v19 - 106) ^ 0xFFFFFF92) + 42) | 0xC9)
                                            + 49) ^ 0x6B ^ v31[*(unsigned __int8 *)(v19 - 106) ^ 0xD4]) << 9) & 0x17A00)
      - 1006615891
      + ((((*(_BYTE *)(v19 - 106) ^ ((*(_BYTE *)(v19 - 106) ^ 0x92)
                                                    + (~(2 * (*(_BYTE *)(v19 - 106) ^ 0x92) + 42) | 0xC9)
                                                    + 49)) ^ 0x6B ^ v31[*(unsigned __int8 *)(v19 - 106) ^ 0xD4]) << 8) ^ 0x3BFFBD53);
  v34 = (char *)*(&off_24E21C7C0 + v18 - 900) - 8;
  v35 = v34[*(unsigned __int8 *)(v19 - 109) ^ 0x99];
  v36 = (v33 - (v33 | v29 ^ 0x178A56D9)) ^ ((v29 ^ 0xE875A926) + 1);
  v37 = ((v36 - ((2 * v36) & 0x2F14ADB2) + 394942169) ^ v29) + v33;
  v38 = v20[*(unsigned __int8 *)(v19 - 112) ^ 6];
  HIDWORD(v22) = v38 ^ 1;
  LODWORD(v22) = (v38 ^ 0x40) << 24;
  LOBYTE(v36) = v34[(((*(unsigned __int8 *)(v19 - 101) - (*(unsigned __int8 *)(v19 - 101) ^ 0x50)) ^ 0xFFFFFFE0)
                   + *(unsigned __int8 *)(v19 - 101)) ^ 0x28];
  v39 = v35 ^ 0x7C ^ (v35 << 7) ^ (8 * (v35 ^ 0x7C)) | (((v22 >> 26) ^ 0xF0) << 24);
  LOBYTE(v38) = ((16 * v36) ^ 0xC0) - 20;
  v40 = ((v36 ^ 0x7C) + (v36 ^ 0x6F ^ v38) + 1) ^ ((v38 ^ 0x13) + 1);
  LOBYTE(v38) = ((v40 - ((2 * v40) & 0x18) + 44) ^ v38) + (v36 ^ 0x1C);
  v41 = v20[*(unsigned __int8 *)(v19 - 100) ^ 0x7CLL];
  HIDWORD(v22) = v41 ^ 1;
  LODWORD(v22) = (v41 ^ 0x40) << 24;
  v42 = v36 ^ 0xEB ^ (8 * v38 - ((16 * v38) & 0x20) - 105) | (v32 << 16);
  v43 = v34[~*(_BYTE *)(v19 - 97)];
  v44 = (((v24 ^ (((((v24 ^ (v18 + 43)) << 7) | 0x78) ^ (8 * v24))
                                 - ((2
                                   * ((((v24 ^ (v18 + 43)) << 7) | 0x78) ^ (8 * v24))) & 0xE0)
                                 - 16)) ^ 0x55) << 16) | (((v22 >> 26) ^ 0x5D) << 24) | v43 ^ 0x7C ^ (v43 << 7) ^ (8 * (v43 ^ 0x7C));
  v282 = v34;
  v45 = v34[*(unsigned __int8 *)(v19 - 105) ^ 0xD8];
  v285 = v20;
  v46 = v20[*(unsigned __int8 *)(v19 - 104) ^ 0xFCLL];
  LOBYTE(v38) = v45 ^ 0x7C ^ (v45 << 7) ^ (8 * (v45 ^ 0x7C));
  HIDWORD(v22) = v46 ^ 1;
  LODWORD(v22) = (v46 ^ 0x40) << 24;
  v284 = v23;
  v47 = v23[*(unsigned __int8 *)(v19 - 111) ^ 0xFELL];
  v48 = ((~v47 << 7) | 0x78) ^ (8 * v47);
  LOBYTE(v46) = v47 ^ 0x19;
  v49 = *(unsigned __int8 *)(v19 - 98);
  v283 = v31;
  v50 = (v39 & 0xFF0000FF | ((v46 ^ (v48 + ((2 * v48) & 0x80) - 58)) << 16) | ((v31[*(unsigned __int8 *)(v19 - 110) ^ 0xB6] ^ *(_BYTE *)(v19 - 110) ^ 0xF0 ^ ((*(_BYTE *)(v19 - 110) ^ 0xF0) - ((2 * (*(_BYTE *)(v19 - 110) ^ 0xF0) + 42) & 0x36) + 48) ^ 0x8C) << 8)) ^ 0x172005AA;
  v51 = v38 ^ 0xABDDCC3E ^ v37;
  HIDWORD(v281) = v17 + 2084630601;
  v52 = v18 - 367;
  v53 = (v42 & 0xFFFF00FF | (((*(_BYTE *)(v19 - 102) ^ ((*(_BYTE *)(v19 - 102) ^ 0xBB)
                                                                       - ((2 * (*(_BYTE *)(v19 - 102) ^ 0xBB) + 42) & 0x36)
                                                                       + 48)) ^ 0x68 ^ v31[*(unsigned __int8 *)(v19 - 102) ^ 0xFDLL]) << 8) | (((v22 >> 26) ^ 0x25) << 24)) ^ 0x2FDAB82C;
  v54 = (v44 & 0xFFFF00FF | ((v31[(v49 ^ 0xCA7F7B37 ^ -(v49 ^ 0xCA7F7B37) ^ (-897615029 - (v49 ^ 0x7C)))
                                                 - 897615029] ^ v49 ^ 0x3A ^ ((v49 ^ 0x3A)
                                                                            - ((2 * (v49 ^ 0x3A) + 42) & 0x36)
                                                                            + 48) ^ 0x2F) << 8)) ^ 0x6822E9A3;
  LODWORD(v281) = v52 ^ 0x4F0;
  HIDWORD(v280) = v52 ^ 0x49B;
  LODWORD(v280) = v52 ^ 0x508;
  HIDWORD(v279) = v52 ^ 0x5B4;
  LODWORD(v279) = v52 ^ 0x44F;
  *(_DWORD *)(v19 - 136) = v52;
  HIDWORD(a8) = v52 ^ 0x5EA;
  HIDWORD(a16) = 0;
  v55 = *(_DWORD *)(v19 - 136);
  *(_QWORD *)(v19 - 152) = 9;
  LODWORD(v286) = v55 + 197;
  v289 = (v55 - 5581194) ^ 0xFFAADADA;
  LOBYTE(v44) = v23[a1[9] ^ 0x26];
  LOBYTE(v38) = ((~(_BYTE)v44 << 7) | 0x78) ^ (8 * v44);
  v56 = v23[a1[v289] ^ 0x74];
  LOBYTE(v34) = v44 ^ 0x98 ^ (v38 - ((2 * v38) & 0x40) - 95);
  *(_QWORD *)(v19 - 144) = 7;
  LOBYTE(v44) = ((~v56 << 7) | 0x78) ^ (8 * v56);
  v57 = a1[7];
  *(_QWORD *)(v19 - 184) = 11;
  v58 = v56 ^ 0x6B ^ (v44 - ((2 * v44) & 0x30) - 99);
  LOBYTE(v44) = v282[v57 ^ 0x8B] ^ 0x7C ^ (v282[v57 ^ 0x8B] << 7) ^ (8 * (v282[v57 ^ 0x8B] ^ 0x7C));
  v59 = v282[a1[11] ^ 0x35];
  v60 = v282[a1[15] ^ 3];
  LOBYTE(v57) = v59 ^ 0x7C ^ (v59 << 7) ^ (8 * (v59 ^ 0x7C));
  v61 = v60 ^ 0x7C ^ (v60 << 7) ^ (8 * (v60 ^ 0x7C));
  LODWORD(v23) = v20[a1[4] ^ 0x5CLL];
  HIDWORD(v22) = v23 ^ 1;
  LODWORD(v22) = (v23 ^ 0x40) << 24;
  v62 = v57 | (v34 << 16);
  v63 = a1[14];
  *(_QWORD *)(v19 - 168) = 12;
  v64 = v44 | (((v22 >> 26) ^ 0xA2) << 24);
  v288 = v283[v63 ^ 0xEF];
  LODWORD(v34) = v20[a1[12] ^ 0x69];
  HIDWORD(v22) = v34 ^ 1;
  LODWORD(v22) = (v34 ^ 0x40) << 24;
  LODWORD(v23) = v22 >> 26;
  *(_QWORD *)(v19 - 192) = 3;
  LODWORD(v34) = v61 | ((v288 ^ 0xC6 ^ ((((v63 ^ 0xA9) + 21) ^ v63 ^ 0xA9)
                                                                        - ((2 * (((v63 ^ 0xA9) + 21) ^ v63 ^ 0xA9)) & 0x36)
                                                                        + 27)) << 8);
  v65 = a1[3] ^ 0x39;
  *(_QWORD *)(v19 - 160) = 5;
  LODWORD(v65) = v282[v65];
  v66 = (v65 ^ 0x92) & 0xFF00FFFF | (v58 << 16);
  v67 = v284[a1[5] ^ 0x6ALL] ^ (8 * v284[a1[5] ^ 0x6ALL]) ^ (~v284[a1[5] ^ 0x6ALL] << 7);
  LODWORD(v65) = (((8 * v65) ^ ((_BYTE)v65 << 7)) ^ 0xE0) & 0xF8 ^ v66;
  LOBYTE(v66) = ((v67 ^ 0xA6) + 111) ^ ((v67 ^ 0xC8) + 1);
  v68 = (unsigned __int16)((v283[a1[6] ^ 0x6ALL] ^ a1[6] ^ 0x2C ^ ((a1[6] ^ 0x2C)
                                                                                  - ((2 * (a1[6] ^ 0x2C) + 42) & 0x36)
                                                                                  + 48) ^ 0x51) << 8) | (((v67 ^ 0x53 ^ (v66 - ((2 * v66) & 0xC8) + 100)) + 110) << 16) | v64;
  v69 = a1[2];
  v70 = (v69 ^ 0x30) - ((2 * (v69 ^ 0x30) + 42) & 0x36);
  LOBYTE(v69) = v69 ^ v283[v69 ^ 0x76];
  *(_QWORD *)(v19 - 200) = 0;
  v71 = v20[*a1 ^ 0x2ALL];
  HIDWORD(v22) = v71 ^ 1;
  LODWORD(v22) = (v71 ^ 0x40) << 24;
  LODWORD(v65) = v65 & 0xFFFF00FF | (((v69 ^ (v70 + 48)) ^ 3) << 8) | (((v22 >> 26) ^ 0xCE) << 24);
  LODWORD(v69) = v20[a1[8] ^ 0x80];
  *(_QWORD *)(v19 - 176) = 10;
  v72 = ((((v69 ^ 0x41) << (v69 & 6) << (v69 & 6 ^ 6)) ^ (v69 >> 2) ^ 0xD1) << 24) | (((v283[a1[10] ^ 0x96] ^ a1[10] ^ 0xD0 ^ ((a1[10] ^ 0xD0) - ((2 * (a1[10] ^ 0xD0) + 42) & 0x36) + 48)) ^ 0x88) << 8) | v62;
  v73 = ((v65 ^ 0xEE) + 387974539 - ((2 * (v65 ^ 0xEE)) & 0x2E400B16)) ^ v50;
  v74 = v72 & 0x2FDAB8EF ^ v57 & 3;
  LOBYTE(v57) = v284[a1[13] ^ 0x61];
  v75 = v72 + 802863148 - 2 * v74;
  LOBYTE(v72) = ((~(_BYTE)v57 << 7) | 0x78) ^ (8 * v57);
  v76 = (v75 + 192) ^ v53;
  v77 = ((v23 ^ 0x33333333) << 24) | ((v57 ^ 0x45 ^ (v72 - ((2 * v72) & 0x70) + 60)) << 16) | v34;
  v78 = (v68 - 1411527667 - 2 * (v68 & 0x2BDDCC0F ^ v44 & 2)) ^ v51;
  v79 = (v77 + 1747118499 - 2 * (v77 & 0x6822E9BF ^ v61 & 0xC) + 16) ^ v54;
  v80 = (v78 >> 8) ^ 0x676225;
  v81 = (BYTE1(v78) ^ 0x25 | 0xA6) & (v80 | 0x59);
  v82 = v81 + 335943858 - 2 * (v81 & 0xB6 ^ v80 & 4);
  v83 = 32 * ((3 * ((v73 ^ 0x20000000) / 0x60000000)) & 7)
      + ((HIBYTE(v73) ^ 0x25) - 96 * ((171 * (HIBYTE(v73) ^ 0x25)) >> 14));
  v84 = (char *)*(&off_24E21C7C0 + v55 - 776) - 4;
  v85 = *(_DWORD *)&v84[4 * (BYTE2(v78) ^ 0x1A)];
  LODWORD(v34) = (BYTE1(v76) ^ 0xB0FEF725) + (BYTE1(v76) ^ 0x11);
  *(_DWORD *)(v19 - 132) = -1520963770;
  v86 = (uint64_t)*(&off_24E21C7C0 + v55 - 686);
  v87 = (char *)*(&off_24E21C7C0 + SHIDWORD(v280)) - 12;
  v88 = (char *)*(&off_24E21C7C0 + (int)v281) - 4;
  v89 = *(_DWORD *)(v86 + 4 * (BYTE1(v76) ^ 7u)) ^ *(_DWORD *)&v87[4 * (v79 ^ 0xEE)] ^ ((BYTE2(v78) ^ 0xD5AE2EB7 ^ (v85 - 970733884)) - 2 * (BYTE2(v78) ^ 0xD5AE2EB7) + 2 * ((BYTE2(v78) ^ 0xD5AE2EB7) & (v85 + 1176749764))) ^ (v83 + 640284224 - ((2 * v83 - 1456281222) & 0xA1200306)) ^ ((_DWORD)v34 - 1520963770 + ((2 * (_DWORD)v34) & 0x1E8A ^ 0xBF523FFF)) ^ *(_DWORD *)&v88[4 * (v83 ^ 0x9F)] ^ ((v79 ^ 0xD9) + 943989659 + ((2 * (v79 ^ 0xD9) + 354) & 0x1D2 ^ 0x4F3F77FF));
  v90 = ((HIBYTE(v78) ^ 0x67) + 640284224 - ((2 * (HIBYTE(v78) ^ 0x67) - 1456281222) & 0xA1200306)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v76) ^ 0x7F)] + (BYTE2(v76) ^ 0xFFFFFFF8) + ((v76 >> 15) & 0x1AA ^ 0xA) - 260728848) ^ *(_DWORD *)&v88[4 * (HIBYTE(v78) ^ 0xF8)];
  LODWORD(v34) = *(_DWORD *)&v87[4 * (v73 ^ 0x43)] ^ *(_DWORD *)(v86 + 4 * (BYTE1(v79) ^ 0x46u)) ^ ((v73 ^ 0x74) + 943989659 + ((2 * (v73 ^ 0x74) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((BYTE1(v79) ^ 0xB0FEF764) + (BYTE1(v79) ^ 0x50)) ^ (v90 - 1520963771 - ((2 * v90) & 0x4AAFDE8A));
  v91 = ((HIBYTE(v76) ^ 0x45) + 640284224 - ((2 * (HIBYTE(v76) ^ 0x45) - 1456281222) & 0xA1200306)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v76) ^ 0xDA)] ^ (*(_DWORD *)&v84[4 * (BYTE2(v79) ^ 0xD0)] + (BYTE2(v79) ^ 0x2A51D182) - 970733883);
  *(_DWORD *)(v19 - 128) = 943989658;
  v79 >>= 24;
  *(_DWORD *)(v19 - 120) = 640284224;
  v92 = ((v78 ^ 0x88) + 943989658 - ((2 * (v78 ^ 0x88) - 1312585374) & 0xB0C089D2)) ^ ((BYTE1(v73) ^ 0xB0FEF71D) + (BYTE1(v73) ^ 0x29)) ^ *(_DWORD *)&v87[4 * (v78 ^ 0xBF)] ^ *(_DWORD *)(v86 + 4 * (BYTE1(v73) ^ 0x3Fu)) ^ (v91 - 1520963771 - ((2 * v91) & 0x4AAFDE8A));
  v93 = *(_DWORD *)(v86 + 4 * (v82 ^ 0x140618A4u)) ^ *(_DWORD *)&v88[4 * (v79 ^ 0xE5)] ^ *(_DWORD *)&v87[4 * (v76 ^ 0xC1)] ^ ((BYTE2(v73) ^ 0x2A51D190) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v73) ^ 0xC2)]) ^ ((v76 ^ 0xF6) + 943989659 + ((2 * (v76 ^ 0xF6) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((v82 ^ 0x140618B2) + (v82 ^ 0xA4F8EF86) - 1520963771 - ((2 * ((v82 ^ 0x140618B2) + (v82 ^ 0xA4F8EF86))) & 0x4AAFDE8A)) ^ ((v79 ^ 0x7A) + 640284224 - ((2 * (v79 ^ 0x7A) - 1456281222) & 0xA1200306));
  LODWORD(v69) = ((BYTE1(v92) ^ 0xA7) - ((2 * (BYTE1(v92) ^ 0xA7)) & 0x14C) - 1537581402) ^ 0xBE1E53B7;
  LODWORD(v69) = (((v69 | 0xF6FF52E) - (v69 | 0xF0900AD1) - 258995503) ^ 0x152BF88E)
               + (((v69 | 0xF6FF52E) - (v69 | 0xF0900AD1) - 258995503) ^ 0xA5D50FBA);
  v94 = *(_DWORD *)(v86 + 4 * BYTE1(v92)) ^ *(_DWORD *)&v87[4 * (v93 ^ 0xB4)] ^ (*(_DWORD *)&v84[4 * (BYTE2(v34) ^ 0x37)]
                                                                                                  + (BYTE2(v34) ^ 0x2A51D165)
                                                                                                  - 970733883) ^ ((v93 ^ 0x83) + 943989659 + ((2 * (v93 ^ 0x83) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v89) ^ 0xA0)] ^ ((HIBYTE(v89) ^ 0x3F) + 640284225 + ((2 * (HIBYTE(v89) ^ 0x3F) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ (v69 - 1520963771 - ((2 * v69) & 0x4AAFDE8A));
  v95 = *(_DWORD *)(v86 + 4 * (BYTE1(v93) ^ 0x4Fu)) ^ *(_DWORD *)&v88[4 * ((v34 >> 24) ^ 0x90)] ^ (((v34 >> 24) ^ 0xF) + 640284224 - ((2 * ((v34 >> 24) ^ 0xF) - 1456281222) & 0xA1200306)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v92) ^ 0xD7)] + (BYTE2(v92) ^ 0x2A51D185) - 970733883) ^ *(_DWORD *)&v87[4 * (v89 ^ 0xFD)] ^ ((v89 ^ 0xCA) + 943989659 + ((2 * (v89 ^ 0xCA) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (((v93 >> 7) & 0x196 ^ 0x92) + 1448535674 + ((2 * ((v93 >> 7) & 0x196 ^ 0x92) + 3688) & 0x1E88 ^ 0xBF523FFF));
  LODWORD(v69) = (BYTE1(v89) ^ 0xEAAFFE9B) + 357564681 + ((v89 >> 7) & 0x1EE ^ 0xC8);
  v96 = ((v89 >> 8) & 0x34 ^ 0x24 ^ (v69 | 0xB0FEF734)) + v69;
  LODWORD(v69) = *(_DWORD *)&v87[4 * (v34 ^ 0xE2)];
  v97 = *(_DWORD *)(v86 + 4 * (BYTE1(v89) ^ 0x7Au)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v92) ^ 0x5A)] ^ ((BYTE2(v93) ^ 0x2A51D1FD) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v93) ^ 0xAF)]) ^ ((HIBYTE(v92) ^ 0xC5) + 640284225 + ((2 * (HIBYTE(v92) ^ 0xC5) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ ((v34 ^ 0xD5) - 656292687 + (v69 ^ 0x5F625EE9) - 2 * ((v69 ^ 0x586044E9) & ((v34 ^ 0xD5) + 1491190961))) ^ (v96 - 1520963771 - ((2 * v96) & 0x4AAFDE8A));
  v98 = (((HIBYTE(v93) ^ 0xAB) + 1419343037) ^ 0xFC2F17EB)
      + 64022549
      + ((2 * ((HIBYTE(v93) ^ 0xAB) + 1419343037)) & 0xA8122BD6);
  v99 = *(_DWORD *)&v88[4 * (HIBYTE(v93) ^ 0x34)];
  LODWORD(v65) = v34 >> 8;
  LODWORD(v34) = BYTE1(v34);
  v100 = ((2 * v65) & 0x68 ^ 0xFFFFFFDF) + 2 * (((2 * v65) & 0x7E ^ 0x30) + (v34 ^ 0x7DE3FDA7));
  HIDWORD(v286) = 1253039752;
  LODWORD(v34) = ((v92 ^ 0x4B)
                + 943989659
                + ((2 * (v92 ^ 0x4B) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ v98 & 0x490042D ^ *(_DWORD *)(v86 + 4 * (v34 ^ 0x8E)) ^ (v100 - ((2 * v100 + 1785592174) & 0x4AAFDE88) + 1519315964) ^ *(_DWORD *)&v87[4 * (v92 ^ 0x7C)] ^ (v99 & 0x796DF9D2 ^ v98 & 0x500971D2 | v99 & 0x8692062D) ^ ((BYTE2(v89) ^ 0x2A51D11D) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v89) ^ 0x4F)]);
  v101 = (v97 ^ 0x36) + 1475861577 - ((2 * v97) & 0x92);
  LODWORD(v69) = ((2 * (BYTE1(v97) ^ 0x4A90455)) | 0x465F88AE) - (BYTE1(v97) ^ 0x4A90455) - 590333015;
  v102 = (v69 ^ 0x977837C7)
       + (v69 ^ 0x2786C0F3)
       - 1520963771
       - ((2 * ((v69 ^ 0x977837C7) + (v69 ^ 0x2786C0F3))) & 0x4AAFDE8A);
  v103 = *(_DWORD *)(v86 + 4 * (BYTE1(v97) ^ 0xE7u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v94) ^ 0xE6)] ^ *(_DWORD *)&v87[4 * (v34 ^ 0x58)] ^ (*(_DWORD *)&v84[4 * (BYTE2(v95) ^ 0x45)] + (BYTE2(v95) ^ 0xD5AE2EE8) - 970733883 + ((2 * BYTE2(v95)) ^ 0x54A3A22F)) ^ ((v34 ^ 0x6F) + 943989659 + ((2 * (v34 ^ 0x6F) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((HIBYTE(v94) ^ 0x79) + 640284225 + ((2 * (HIBYTE(v94) ^ 0x79) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF));
  v104 = ((v95 >> 23) & 0x17A) + HIBYTE(v95) + ((HIBYTE(v95) + (HIBYTE(v95) ^ 0xAB668B42) + 1) ^ 0xFFFFFFFE);
  v105 = (BYTE1(v34) ^ 0xC8B2800A) - ((2 * (BYTE1(v34) ^ 0xC8B2800A)) & 0x10450096) + 975696715;
  v106 = (BYTE2(v34) ^ 0xC1041105)
       + ((v34 >> 16) & 0xB0 ^ 0x3232C6B0)
       - ((BYTE2(v34) ^ 0xC1041105) & 0x800001B0);
  v107 = *(_DWORD *)(v86 + 4 * (BYTE1(v34) ^ 0x34u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v95) ^ 0x9F)] ^ *(_DWORD *)&v87[4 * (v94 ^ 0x9F)] ^ (v104 - 779058813 - ((2 * v104) & 0xA1200306)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v97) ^ 0xA7)] + (BYTE2(v97) ^ 0x2A51D1F5) - 970733883) ^ ((v94 ^ 0xA8) + *(_DWORD *)(v19 - 128) - ((2 * (v94 ^ 0xA8) - 1312585374) & 0xB0C089D2)) ^ ((v105 ^ 0xF2957363) + (v105 ^ 0x426B8457) - 1520963771 - ((2 * ((v105 ^ 0xF2957363) + (v105 ^ 0x426B8457))) & 0x4AAFDE8A));
  v108 = *(_DWORD *)&v84[4 * (((BYTE2(v34) ^ 0xFFFFFF52) + (v106 ^ 0x7336D660) + 1) ^ 0xFFFFFFF0)
                       + 4 * (v106 ^ 0x7336D660)]
       + (v106 ^ 0x5967074A)
       - 970733883;
  v109 = ((BYTE1(v94) ^ 0xA6) + ((v94 >> 8) & 0x2F ^ 0xE3B0D809) - ((BYTE1(v94) ^ 0xA6) & 0x2F)) ^ 0xE9911866;
  v110 = ((((2 * v109) | 0xD03E1292) - v109 - 1746864457) ^ 0x623EC9D9)
       + ((((2 * v109) | 0xD03E1292) - v109 - 1746864457) ^ 0xD2C03EED);
  v111 = ((HIBYTE(v97) ^ 0xB3) + 640284225 + ((2 * (HIBYTE(v97) ^ 0xB3) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v97) ^ 0x2C)] ^ *(_DWORD *)(v86 + 4 * (BYTE1(v94) ^ 0x69u)) ^ (v110 - 1520963771 - ((2 * v110) & 0x4AAFDE8A)) ^ v108;
  v112 = v34 >> 24;
  v113 = ((v34 >> 24) ^ 0xBF)
       + 640284225
       + ((2 * ((v34 >> 24) ^ 0xBF) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF);
  v114 = *(_DWORD *)&v87[4 * (v95 ^ 0x13)] ^ ((v95 ^ 0x24) - 656292687) ^ (v111 + 1600282345 - ((2 * v111) & 0xBEC4BDD2));
  v115 = (BYTE2(v94) ^ 0x2A51D115) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v94) ^ 0x47)];
  v116 = BYTE1(v95);
  v117 = (BYTE1(v95) ^ 0xEC) & ((v95 >> 8) ^ 0xD8);
  v118 = v113 ^ *(_DWORD *)&v88[4 * (v112 ^ 0x20)] ^ (~((4 * v117 + 1644031592) & 0x40ADDE88) + 2 * v117 + 1448535674) ^ *(_DWORD *)(v86 + 4 * (v116 ^ 0xFAu)) ^ v115;
  v119 = v103 ^ v102;
  v120 = ((v119 >> 23) & 0xFA ^ 0xC8) + (HIBYTE(v119) ^ 0x7FEE4E9B);
  v121 = *(_DWORD *)&v87[4 * (v101 ^ 0x57F7DC7E)] ^ ((v101 ^ 0x57F7DC49) - 656292687) ^ (v118
                                                                                       + 1600282345
                                                                                       - ((2 * v118) & 0xBEC4BDD2));
  HIDWORD(v22) = ((v103 ^ ~v102) >> 31) ^ 0x92CFFB;
  LODWORD(v22) = ((v120 << 25) + 100663296) ^ 0xDDDDDDDD;
  v122 = ((2 * HIBYTE(v114)) ^ 0xAA) + (HIBYTE(v114) ^ 0xFDF6F6AA);
  v123 = (BYTE1(v114) ^ 0x6D) + (BYTE1(v114) ^ 0xB0FEF759);
  v124 = *(_DWORD *)(v19 - 132);
  LODWORD(v69) = ((v107 >> 23) & 0x17A ^ 0x120) + (HIBYTE(v107) ^ 0x5499742D);
  v125 = *(_DWORD *)(v86 + 4 * (BYTE1(v114) ^ 0x7Bu)) ^ *(_DWORD *)&v87[4 * (v121 ^ 0xBF)] ^ *(_DWORD *)&v88[4 * ((v22 >> 25) ^ 0x4967FD71)] ^ (*(_DWORD *)&v84[4 * (BYTE2(v107) ^ 3)] + (BYTE2(v107) ^ 0x2A51D151) - 970733883) ^ (v120 - 1506039868 + ((2 * ((v120 + 64) & 0x18B ^ (v120 | 0x7FFFFFF7))) ^ 0xA1200011)) ^ ((v121 ^ 0x88) + 943989659 + ((2 * (v121 ^ 0x88) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (v123 + v124 + ((2 * v123) & 0x1E8A ^ 0xBF523FFF));
  v126 = ((2 * (v121 >> 8)) & 0x68 ^ 0xFFFFFFF7)
       + 2 * (((2 * (v121 >> 8)) & 0x1DE ^ 0x18A) + (BYTE1(v121) ^ 0x67ADDF2A));
  v127 = *(_DWORD *)(v86 + 4 * (BYTE1(v121) ^ 0xD3u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v107) ^ 0xF)] ^ ((v119 ^ 0x2F) + 943989659 + ((2 * (v119 ^ 0x2F) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ *(_DWORD *)&v87[4 * (v119 ^ 0x18)] ^ (v69 - 779058813 + ((2 * v69) & 0x306 ^ 0x5EDFFFFF) + 1) ^ (v126 - ((2 * v126 + 1128689326) & 0x4AAFDE88) - 2030360932) ^ (*(_DWORD *)&v84[4 * (BYTE2(v114) ^ 0x91)] + (BYTE2(v114) ^ 0x2A51D1C3) - 970733883);
  HIDWORD(v287) = v119;
  v128 = ((BYTE2(v121) ^ 0x2A51D1CB) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v121) ^ 0x99)]) ^ (v122
                                                                                               - ((2 * v122 - 1387988100) & 0xA1200306)
                                                                                               + 674430785) ^ *(_DWORD *)&v88[4 * (v122 - ((2 * v122 + 2) & 0x13E)) + 136586880];
  v129 = ((2 * (BYTE1(v119) ^ 0x7B)) | 0xD997DFA6) - (BYTE1(v119) ^ 0x7B) - 1825304531;
  v130 = *(_DWORD *)(v86 + 4 * (BYTE1(v119) ^ 0x66u)) ^ ((v129 ^ 0x6CCBEFD8) + (v129 ^ 0xDC3518EC));
  v131 = v128 & 0x80000000 | 0x5BFE3F4F;
  v132 = v130 ^ 0xEEBCF466 ^ (1395261440 - v131);
  v130 ^= 0xA557EF45;
  v133 = (((1395261440 - v131) ^ 0xF72BC0B1) & v130) == 0;
  v134 = v130 - v131 - ((2 * (v130 - v131) + 939294366) & 0x7981B724) + 415177441;
  if (v133)
    v134 = v132;
  v135 = *(_DWORD *)&v87[4 * (v107 ^ 0x65)] ^ ((v107 ^ 0x52)
                                                              + 943989659
                                                              + ((2 * (v107 ^ 0x52) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((v128 & 0x7FFFFFFF) - ((2 * v128) & 0x7981B724) - 1128211566) ^ v134;
  v136 = BYTE1(v107);
  v137 = ((2 * (v136 ^ 0x7F)) & 0xFFFFFF3F) - (v136 ^ 0x7F) - 177238944;
  v138 = (v137 & 0x810C0F02 ^ 0x2001302) + (v137 ^ 0xD93D0C80) - ((v137 ^ 0xD93D0C80) & 0x20100702);
  v139 = ((2 * v114) & 0x136 ^ 0x32) + (v114 ^ 0xF75FFEA6);
  v140 = *(_DWORD *)&v88[4 * (HIBYTE(v121) ^ 0xD2)] ^ ((HIBYTE(v121) ^ 0x4D)
                                                     + 640284225
                                                     + ((2 * (HIBYTE(v121) ^ 0x4D) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ ((BYTE2(v119) ^ 0x2A51D121) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v119) ^ 0x73)]) ^ ((v138 ^ 0x3FB0683E) + (v138 ^ 0x8F4E9F0A));
  HIDWORD(v141) = v114 ^ 0xFFFFFFFD;
  LODWORD(v141) = v139 + 144703845;
  v142 = (v141 >> 6) - ((2 * (v141 >> 6)) & 0xC72FCABA) + 1670899037;
  HIDWORD(v141) = v142 & 0x2C05AF3 ^ 0x3BFE55E;
  LODWORD(v141) = v142 ^ 0x20000000;
  v143 = *(_DWORD *)&v87[4 * ((v141 >> 26) ^ 0x4FE943E7)] ^ *(_DWORD *)(v86 + 4 * (v136 ^ 0x81u)) ^ (v139 + 1088693504 + ((2 * v139 + 50564140) & 0x2C4BDD2 ^ 0x4FFFFFFF)) ^ (v140 - 1520963771 - ((2 * v140) & 0x4AAFDE8A));
  v144 = (-2
        - ((~((HIWORD(v127) ^ 0xA7D66E44) & 0x241631AB) | 0xF30C3928)
         + ((HIWORD(v127) ^ 0xA7D66E44) & 0x20043128 | 0xCF3C6D7))) ^ (HIWORD(v127) ^ 0xA7D66E44) & 0x24163154;
  v145 = (v144 & 0x696FDC8B ^ 0x2865D489) + (v144 ^ 0xD71A0822) - ((v144 ^ 0xD71A0822) & 0x696FDC8B);
  v146 = (((2 * (BYTE1(v135) ^ 0x49)) & 0x142) - (BYTE1(v135) ^ 0x49) + 614670942) ^ 0x37E22756;
  v147 = ((v146 - ((2 * v146) & 0x2280061A) + 1977393933) ^ 0x669DA65B)
       + ((v146 - ((2 * v146) & 0x2280061A) + 1977393933) ^ 0xD663516F);
  v148 = *(_DWORD *)(v86 + 4 * (BYTE1(v135) ^ 1u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v125) ^ 0xA4)] ^ *(_DWORD *)&v87[4 * (v143 ^ 1)] ^ ((HIBYTE(v125) ^ 0x3B) + 640284225 + ((2 * (HIBYTE(v125) ^ 0x3B) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ ((v143 ^ 0x36) + 943989659 + ((2 * (v143 ^ 0x36) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (*(_DWORD *)&v84[4 * (v145 ^ 0x4D79EDA3)] + (v145 ^ 0x67283CF1) - 970733883) ^ (v147 - 1520963771 - ((2 * v147) & 0x4AAFDE8A));
  v149 = ((HIBYTE(v127) ^ 0xDD) + 640284225 + ((2 * (HIBYTE(v127) ^ 0xDD) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v127) ^ 0x42)] ^ ((BYTE1(v143) ^ 0xD9) + (BYTE1(v143) ^ 0xB0FEF7ED)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v135) ^ 0xC2)] + (BYTE2(v135) ^ 0x2A51D190) - 970733883);
  v150 = ((((v125 >> 8) ^ 0x458CA1EB) & 0x65A2F6 ^ 0x29DD1DD) - 1) ^ ((v125 >> 8) ^ 0x458CA1EB) & 0x165A209;
  v151 = *(_DWORD *)&v87[4 * (v125 ^ 0xBF)] ^ ((v125 ^ 0x88)
                                                              + 943989659
                                                              + ((2 * (v125 ^ 0x88) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v143) ^ 0xCFu)) ^ (v149 - 1520963771 - ((2 * v149) & 0x4AAFDE8A));
  v152 = *(_DWORD *)(v86 + 4 * (v150 ^ 0x39DD1CCu)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v143) ^ 0x6E)]
                                                       + (BYTE2(v143) ^ 0x2A51D13C)
                                                       - 970733883) ^ ((v150 ^ 0x39DD1DA)
                                                                     + (v150 ^ 0xB36326EE)
                                                                     + v124
                                                                     + ((2 * ((v150 ^ 0x39DD1DA) + (v150 ^ 0xB36326EE))) & 0xAAFDE8A ^ 0xBFFFFFFF)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v135) ^ 0x61)] ^ ((HIBYTE(v135) ^ 0xFE) + 640284225 + ((2 * (HIBYTE(v135) ^ 0xFE) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF));
  v153 = *(_DWORD *)&v87[4 * (v127 ^ 0xB4)] ^ ((v127 ^ 0x83) - 656292687) ^ (v152 + 1600282345 - ((2 * v152) & 0xBEC4BDD2));
  v154 = HIBYTE(v143);
  v155 = (HIBYTE(v143) ^ 0xC5) + 640284225 + ((2 * (HIBYTE(v143) ^ 0xC5) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF);
  v156 = (((v127 >> 8) & 0x5A ^ 0x1F0A2849) + ((v127 >> 8) & 0xA5) - 1) ^ 0x5F52203B;
  v157 = ((v156 - ((2 * v156) & 0xA0006A) - 1636769739) ^ 0xDE28E837)
       + ((v156 - ((2 * v156) & 0xA0006A) - 1636769739) ^ 0x6ED61F03);
  v158 = v155 ^ *(_DWORD *)&v88[4 * (v154 ^ 0x5A)] ^ *(_DWORD *)(v86 + 4 * (BYTE1(v127) ^ 0x67u)) ^ ((BYTE2(v125) ^ 0x2A51D102) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v125) ^ 0x50)]) ^ (v157 - 1520963771 - ((2 * v157) & 0x4AAFDE8A)) ^ *(_DWORD *)&v87[4 * (v135 ^ 0xD0)] ^ ((v135 ^ 0xE7) + 943989659 + ((2 * (v135 ^ 0xE7) + 354) & 0x1D2 ^ 0x4F3F77FF));
  v159 = (v148 ^ 0xC507EA6B) >> (v125 & 0x10) >> (v125 & 0x10 ^ 0x10);
  LODWORD(v287) = v159 - ((2 * v159) & 0x26);
  v160 = ((v153 >> 7) & 0x1AC) - BYTE1(v153) + 1065;
  v161 = *(_DWORD *)(v86 + 4 * (BYTE1(v153) ^ 0x9Au)) ^ *(_DWORD *)&v87[4 * (v158 ^ 0x57)] ^ (*(_DWORD *)&v84[4 * (BYTE2(v151) ^ 0x2C)] + (BYTE2(v151) ^ 0x2A51D17E) - 970733883) ^ ((v158 ^ 0x60) + 943989659 + ((2 * (v158 ^ 0x60) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((v160 ^ 0xB0FEF391) + (v160 ^ 0x4A5) - 1520963771 - ((2 * ((v160 ^ 0xB0FEF391) + (v160 ^ 0x4A5))) & 0x40ADDE8A)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v148) ^ 0x5A)] ^ ((HIBYTE(v148) ^ 0xC5) + 640284225 + ((2 * (HIBYTE(v148) ^ 0xC5) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF));
  v162 = ((BYTE2(v153) ^ 0x6E) + ((v153 >> 15) & 0x9A ^ 2) + 51);
  v163 = (((2 * (BYTE1(v158) ^ 0x99)) | 0xBDF74EC6) - (BYTE1(v158) ^ 0x99) - 1593550691) ^ 0x7ABBA3E4;
  v164 = (((v163 | 0x82F39871) - (v163 | 0x7D0C678E) + 2097964942) ^ 0x164D6B05)
       + (((v163 | 0x82F39871) - (v163 | 0x7D0C678E) + 2097964942) ^ 0xA6B39C31);
  v165 = *(_DWORD *)(v86 + 4 * (BYTE1(v158) ^ 0x48u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v151) ^ 0xF1)] ^ ((HIBYTE(v151) ^ 0x6E) + 640284225 + ((2 * (HIBYTE(v151) ^ 0x6E) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ *(_DWORD *)&v87[4 * (v148 ^ 0x5C)] ^ ((v148 ^ 0x6B) + 943989659 + ((2 * (v148 ^ 0x6B) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (*(_DWORD *)&v84[4 * (v162 ^ 0x78)] + (v162 ^ 0x2A51D12A) - 970733883) ^ (v164 - 1520963771 - ((2 * v164) & 0x4AAFDE8A));
  v166 = BYTE1(v148);
  v167 = ((2 * (v166 ^ 0x335D4416)) & 0x468A88DA) - (v166 ^ 0x335D4416) - 1875236462;
  v168 = (v167 & 0x7D8E1B6B ^ 0x5C8C1000) + (v167 ^ 0xA3626F6B) - ((v167 ^ 0xA3626F6B) & 0x7D8E1B6B);
  v169 = *(_DWORD *)(v86 + 4 * (v166 ^ 0xFCu)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v153) ^ 0x79)] ^ *(_DWORD *)&v87[4 * (v151 ^ 0x86)] ^ ((BYTE2(v158) ^ 0x2A51D1D2) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v158) ^ 0x80)]) ^ ((v151 ^ 0xB1) + 943989659 + ((2 * (v151 ^ 0xB1) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((HIBYTE(v153) ^ 0xE6) + 640284225 + ((2 * (HIBYTE(v153) ^ 0xE6) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ ((v168 ^ 0x7D8B196E) + (v168 ^ 0xCD75EE5A) - 1520963771 - ((2 * ((v168 ^ 0x7D8B196E) + (v168 ^ 0xCD75EE5A))) & 0x4AAFDE8A));
  v170 = HIBYTE(v158);
  v171 = *(_DWORD *)(v19 - 120);
  v172 = (HIBYTE(v158) ^ 0x55) + v171 - ((2 * (HIBYTE(v158) ^ 0x55) - 1456281222) & 0xA1200306);
  v173 = ((BYTE1(v151) ^ 0xBA) + ((v151 >> 8) & 0xBF ^ 0x12CF2305) - ((BYTE1(v151) ^ 0xBA) & 0xFFFFFFBF)) & 0x10023FFF;
  v174 = *(_DWORD *)&v88[4 * (v170 ^ 0xCA)] ^ v172 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v151) ^ 0x86u)) ^ ((v173 ^ 0xA0FCD4A1) + (v173 ^ 0x10022395) + *(_DWORD *)(v19 - 132) + (~(2 * ((v173 ^ 0xA0FCD4A1) + (v173 ^ 0x10022395))) | 0xBD502175)) ^ (*(_DWORD *)&v84[4 * ((v287 + 19) ^ 0x6B)] + ((v287 + 19) ^ 0x2A51D139) - 970733883);
  v175 = *(_DWORD *)&v87[4 * (v153 ^ 0x38)] ^ ((v153 ^ 0xF) - 656292687) ^ (v174 + 1600282345 - ((2 * v174) & 0xBEC4BDD2));
  v176 = (v161 ^ 0x10CCCA4D) >> (v288 & 0x18 ^ 0x18) >> (v288 & 0x18);
  v177 = (v176 - ((2 * v176) & 0xDA) + 109);
  v178 = (((v169 >> 8) & 0x8C ^ 0xE8BE1881) + ((v169 >> 8) & 0x73) - 1) ^ 0x68360956;
  v179 = ((((2 * v178) & 0x10037C) - v178 - 305021887) ^ 0x6D59AD41)
       + ((((2 * v178) & 0x10037C) - v178 - 305021887) ^ 0xDDA75A75);
  v180 = (*(_DWORD *)&v84[4 * (BYTE2(v165) ^ 0xAD)] + (BYTE2(v165) ^ 0x2A51D1FF) - 970733883) ^ ((v177 ^ 0x6D)
                                                                                               + v171
                                                                                               - ((2 * (v177 ^ 0x6D)
                                                                                                 - 1456281222) & 0xA1200306)) ^ *(_DWORD *)&v88[4 * (v177 ^ 0xF2)];
  v181 = *(_DWORD *)(v86 + 4 * (BYTE1(v169) ^ 0xC0u));
  if (v165 == 148197797)
    v182 = 0;
  else
    v182 = *(_DWORD *)(v86 + 4 * (BYTE1(v169) ^ 0xC0u));
  v183 = v181 & 0x10000 ^ 0x10000;
  v133 = ((v180 ^ v182) & v183) == 0;
  v184 = v180 + v183;
  v185 = 2 * (v181 & 0x10000) - 0x20000;
  if (v133)
    v185 = 0;
  v186 = v181 & 0xFFFEFFFF ^ *(_DWORD *)&v87[4 * (v175 ^ 0xFD)] ^ ((v175 ^ 0xCA)
                                                                                  + 943989659
                                                                                  + ((2 * (v175 ^ 0xCA)
                                                                                    + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (v184 + v185) ^ v179;
  *(_DWORD *)(v19 - 132) = v186;
  v187 = HIBYTE(v175) ^ 0xF7EEBE0;
  v188 = HIBYTE(v175) ^ 0xBB;
  if (v188 >= 0xE1)
    v188 -= 225;
  v189 = 259976122;
  if ((v175 ^ 0xBBBBBBBB) >> 24 <= 0xE0)
    v189 = 259976027;
  if (!v188)
    v187 = v189;
  v190 = (BYTE1(v165) ^ 0x1A) - ((2 * (BYTE1(v165) ^ 0x1A)) & 0x152) + 1254667177;
  v191 = (v190 & 0x2008137 ^ 0x5020016) + (v190 ^ 0x8A6CB1A9) - ((v190 ^ 0x8A6CB1A9) & 0x40800137);
  v192 = (((v191 ^ 0x48) + (v191 ^ 0x7C)) ^ *(_BYTE *)(v86 + 4 * (BYTE1(v165) ^ 0x47u))) & 0x10;
  v193 = ((v186 ^ 0xADB7A92C) >> v192 >> (v192 ^ 0x10))
       - ((2 * ((v186 ^ 0xADB7A92C) >> v192 >> (v192 ^ 0x10))) & 0x35AB043E)
       + 450200095;
  v194 = (v193 & 0x10 ^ 0xBDF6FCFD) + 2 * (v193 & 0x10);
  v195 = (BYTE1(v175) ^ 0xFC | 0x29A968E5) - (BYTE1(v175) ^ 0xFC | 0x1656971A) + 374773530;
  v196 = *(_DWORD *)(v86 + 4 * (BYTE1(v175) ^ 0x95u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v165) ^ 0x97)] ^ *(_DWORD *)&v87[4 * (v161 ^ 0x7A)] ^ ((v161 ^ 0x4D) + 943989659 + ((2 * (v161 ^ 0x4D) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((HIBYTE(v165) ^ 8) + 640284225 + ((2 * (HIBYTE(v165) ^ 8) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v169) ^ 0x43)] + (BYTE2(v169) ^ 0x2A51D111) - 970733883) ^ ((v195 ^ 0x29A9689A) + (v195 ^ 0x99579FAE) - 1520963771 - ((2 * ((v195 ^ 0x29A9689A) + (v195 ^ 0x99579FAE))) & 0x4AAFDE8A));
  v197 = *(_DWORD *)(v86 + 4 * (BYTE1(v161) ^ 0xDCu)) ^ *(_DWORD *)&v87[4 * (v165 ^ 0x92)] ^ ((v165 ^ 0xA5) + 943989659 + ((2 * (v165 ^ 0xA5) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (((v161 >> 7) & 0x196 ^ 0x194) + 1448535674 + ((2 * ((v161 >> 7) & 0x196 ^ 0x194) + 3688) & 0x1E88 ^ 0xBF523FFF)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v169) ^ 7)] ^ ((HIBYTE(v169) ^ 0x98) + 640284225 + ((2 * (HIBYTE(v169) ^ 0x98) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v175) ^ 0xF6)] + (BYTE2(v175) ^ 0x2A51D1A4) - 970733883);
  v198 = ((BYTE2(v161) ^ 0x2A51D1E6) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v161) ^ 0xB4)]) ^ ((v187 ^ 0xF7EEB5B)
                                                                                               + *(_DWORD *)(v19 - 120)
                                                                                               - ((2
                                                                                                 * (v187 ^ 0xF7EEB5B)
                                                                                                 - 1456281222) & 0xA1200306)) ^ *(_DWORD *)&v88[4 * (v187 ^ 0xF7EEBC4)];
  v199 = ((v191 ^ 0x37D87448) + (v191 ^ 0x8726837C)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v165) ^ 0x47u)) ^ *(_DWORD *)&v87[4 * (v169 ^ 0xC4)] ^ ((v169 ^ 0xF3) + 943989659 + ((2 * (v169 ^ 0xF3) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (v198 - ((2 * v198) & 0xD710D91A) - 343380851);
  v200 = 250 - v194;
  if (((v194 + 3) & (v193 & 0xB9 ^ 0xE0)) == 0)
    v200 = (v193 & 0x10 ^ 0xBDF6FCFD) + 2 * (v193 & 0x10);
  v201 = ((v193 & 0xB9 ^ 0xE6) + v200 + 3) & 0xF9 ^ v193 & 0x56;
  v202 = (((HIBYTE(v196) ^ 0x76) + 1419343037) ^ 0x79FF61F7)
       + 100703753
       + ((2 * ((HIBYTE(v196) ^ 0x76) + 1419343037)) & 0xA132C3EE);
  v203 = *(_DWORD *)&v88[4 * (HIBYTE(v196) ^ 0xE9)];
  v204 = (*(_DWORD *)&v84[4 * (BYTE2(v197) ^ 0x77)] + (BYTE2(v197) ^ 0x2A51D125) - 970733883) ^ 0x6A7C0F60 ^ (v202 & 0x10904425 ^ v203 & 0x33F04625 | v202 & 0x440931DA ^ v203 & 0xCC0FB9DA);
  if (v204 == -1142124829)
    v205 = 443148232;
  else
    v205 = (((v196 >> 8) & 0x16 ^ 0xFFFFFFEF) - 795294842 + ((2 * ((v196 >> 8) & 0x16)) | 0x5ECE78F6)) ^ 0x350EDBA1;
  v206 = *(_DWORD *)&v84[4 * (v201 ^ 0x87)] + (v201 ^ 0x2A51D1D5);
  v207 = ((v206 - 769407291) & 0x2000000 ^ 0xFFFECFFF) + 2 * ((v206 - 769407291) & 0x2000000);
  v208 = HIBYTE(v199);
  v209 = *(_DWORD *)&v88[4 * (HIBYTE(v199) ^ 0x84)];
  v210 = *(_DWORD *)(v19 - 132);
  v211 = ((v197 >> 8) & 0xFA ^ 0x4161B40B) + ((v197 >> 8) & 5 ^ 0x8E844001) - 1;
  v212 = *(_DWORD *)(v86 + 4 * (BYTE1(v197) ^ 0xD7u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v210) ^ 0x32)] ^ (*(_DWORD *)&v84[4 * (BYTE2(v196) ^ 1)] + (BYTE2(v196) ^ 0x2A51D153) - 970733883) ^ ((v211 ^ 0x7F1B03FE) + (v211 ^ 0xCFE5F4CA) - 1520963771 - ((2 * ((v211 ^ 0x7F1B03FE) + (v211 ^ 0xCFE5F4CA))) & 0x4AAFDE8A)) ^ ((HIBYTE(v210) ^ 0xAD) + 640284225 + ((2 * (HIBYTE(v210) ^ 0xAD) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ *(_DWORD *)&v87[4 * (v199 ^ 0x53)] ^ ((v199 ^ 0x64) + 943989659 + ((2 * (v199 ^ 0x64) + 354) & 0x1D2 ^ 0x4F3F77FF));
  v213 = (((v199 >> 8) & 0xB6 ^ 0x814C2195) + ((v199 >> 8) & 0x49) - 1) ^ 0x87686176;
  v214 = ((((2 * v213) | 0x3ADB0D90) - v213 + 1653766456) ^ 0x2BB731D4)
       + ((((2 * v213) | 0x3ADB0D90) - v213 + 1653766456) ^ 0x9B49C6E0);
  v215 = (v214 - 1520963771 - ((2 * v214) & 0x4AAFDE8A)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v199) ^ 0xDCu));
  v216 = ((2 * ((HIBYTE(v197) ^ 0x98) + 1419343037)) & 0x8912E2F8) + (((HIBYTE(v197) ^ 0x98) + 1419343037) ^ 0xCCEDFB7C);
  v217 = ((v210 ^ 0x2C)
        + *(_DWORD *)(v19 - 128)
        - ((2 * (v210 ^ 0x2C) - 1312585374) & 0xB0C089D2)) ^ *(_DWORD *)&v87[4
                                                                                            * (v210 ^ 0x1B)] ^ v204 ^ (v215 - 1142124829 - ((2 * v215) & 0x77D91DC6));
  v218 = *(_DWORD *)&v88[4 * (HIBYTE(v197) ^ 7)];
  v219 = (v216 + 856818820) & 0x409900E9 ^ v218 & 0x6BFB88E9 | (v216 + 319947908) & 0x14007516 ^ v218 & 0x94047716;
  v220 = ((2 * v219) & 0xCF9733F6 ^ 0x83010306) + (v219 ^ 0x365B1878);
  v221 = *(_DWORD *)&v84[4 * (BYTE2(v199) ^ 0x6B)] + (BYTE2(v199) ^ 0x2A51D139);
  v222 = v221 + v220 - 2 * ((v220 + 406087173) & (v221 + 1176749765)) - 564646710;
  v223 = ((2 * (BYTE1(v196) ^ 0x9A)) | 0x2CF8F42E) - (BYTE1(v196) ^ 0x9A) - 377256471;
  v224 = (v223 & 0x16744BA1 ^ 0x25F749A1) + (v223 ^ 0xDA08A248) - ((v223 ^ 0xDA08A248) & 0xFFF7CBA1);
  v225 = ((BYTE1(v210) ^ 0xA9) + (BYTE1(v210) ^ 0xB0FEF79D)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v210) ^ 0xBFu)) ^ (v222 - 1520963771 - ((2 * v222) & 0x4AAFDE8A));
  v226 = *(_DWORD *)&v87[4 * (v196 ^ 0xA2)] ^ ((v196 ^ 0x95) - 656292687) ^ (v225 + 1600282345 - ((2 * v225) & 0xBEC4BDD2));
  v227 = *(_DWORD *)(v19 - 120);
  v228 = (v224 ^ 0x33831378)
       + 2
       * ((v205 ^ ((BYTE1(v196) ^ 0x1C) + 443148254 - 2 * ((BYTE1(v196) ^ 0x1C) & 0xFFFFFFDF ^ (v196 >> 8) & 1)))
        - (v205 ^ 0x1A69E7DE | BYTE1(v196) ^ 0x1C));
  v229 = (v224 ^ 0x837DE44C) + (v224 ^ 0x33831378);
  v230 = v207 + 1457877502;
  if (((v207 + 77825) & (v209 ^ 0xD0000000)) != 0)
    v230 = 1457721852 - v207;
  v231 = (((v208 ^ 0x1B) + v227 - ((2 * (v208 ^ 0x1B) - 1456281222) & 0xA1200306)) ^ v209) - 1457799677 + v230;
  v232 = v197 ^ 0x3F;
  v233 = *(_DWORD *)&v87[4 * (v197 ^ 8)];
  v232 -= 656292687;
  v234 = (v232 + (v233 ^ 0xA09DA116 ^ v232) + 1) ^ ((v233 ^ 0xA09DA116) + 1);
  v235 = (v229 - 1520963771 - ((2 * v229) & 0x4AAFDE8A)) ^ (((v234 + 1600282345 - ((2 * v234) & 0xBEC4BDD2)) ^ v233)
                                                          + v232) ^ *(_DWORD *)(v86 + 4 * (v228 + 22)) ^ (v206 - 970733883) & 0xFDFFFFFF ^ v231;
  v236 = (BYTE2(v217) ^ 0x201001DD | 0xB7E9CE39) - (BYTE2(v217) ^ 0x201001DD | 0x481631C6) + 1209414086;
  v237 = (((2 * (BYTE1(v226) ^ 0x11)) | 0xD1F1CFAC) - (BYTE1(v226) ^ 0x11) - 1761142742) ^ 0x729963D6;
  v238 = ((((2 * v237) & 0xC2C7426) - v237 - 102119956) ^ 0x5376B6DA)
       + ((((2 * v237) & 0xC2C7426) - v237 - 102119956) ^ 0xE38841EE);
  v239 = *(_DWORD *)(v86 + 4 * (BYTE1(v226) ^ 5u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v212) ^ 0x69)] ^ ((HIBYTE(v212) ^ 0xF6) + 640284225 + ((2 * (HIBYTE(v212) ^ 0xF6) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ ((v236 ^ 0x680630C0) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v217) ^ 0xA3)] + (((v236 ^ 0xBDA81E15) + (v236 ^ 0x97F9CF3F) + 1) ^ 1) + 1) ^ *(_DWORD *)&v87[4 * (v235 ^ 0x27)] ^ ((v235 ^ 0x10) + 943989659 + ((2 * (v235 ^ 0x10) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (v238 - 1520963771 - ((2 * v238) & 0x4AAFDE8A));
  v240 = (((v235 >> 8) & 0xFE ^ 0xE3) - ((v235 >> 8) & 1)) ^ 0x50616020;
  v241 = ((((2 * v240) | 0xA6BC796E) - v240 + 748798793) ^ 0x833F5C25)
       + ((((2 * v240) | 0xA6BC796E) - v240 + 748798793) ^ 0x33C1AB11);
  v242 = *(_DWORD *)(v86 + 4 * (BYTE1(v235) ^ 0x47u)) ^ *(_DWORD *)&v88[4 * (HIBYTE(v217) ^ 0x69)] ^ *(_DWORD *)&v87[4 * (v212 ^ 0x78)] ^ ((v212 ^ 0x4F) + 943989659 + ((2 * (v212 ^ 0x4F) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ (*(_DWORD *)&v84[4 * (BYTE2(v226) ^ 0xE1)] + (BYTE2(v226) ^ 0x2A51D1B3) - 970733883) ^ ((HIBYTE(v217) ^ 0xF6) + 640284225 + ((2 * (HIBYTE(v217) ^ 0xF6) + 378) & 0xFFFFFF07 ^ 0x5EDFFFFF)) ^ (v241 - 1520963771 - ((2 * v241) & 0x4AAFDE8A));
  v243 = *(_DWORD *)&v84[4 * (BYTE2(v235) ^ 0x60)] + (BYTE2(v235) ^ 0x2A51D132) - 970733883;
  v244 = (((v212 >> 8) & 0x13) + ((v212 >> 8) & 0xEC ^ 0xB6AEFD85) - 1) ^ 0x724C79C8;
  v245 = ((((2 * v244) & 0x88C50A6C) - v244 + 579093193) ^ 0x5698317F)
       + ((((2 * v244) & 0x88C50A6C) - v244 + 579093193) ^ 0xE666C64B);
  v235 >>= 24;
  v246 = ((2 * ((v235 ^ 0x3B) + 1419343037)) & 0xA930E8B0) + (((v235 ^ 0x3B) + 1419343037) ^ 0x5DBEFE58);
  v247 = *(_DWORD *)(v86 + 4 * (BYTE1(v212) ^ 0xD8u)) ^ *(_DWORD *)&v87[4 * (v217 ^ 0xB4)] ^ *(_DWORD *)&v88[4 * (HIBYTE(v226) ^ 0x87)] ^ (v245 - 1520963771 - ((2 * v245) & 0x4AAFDE8A)) ^ ((HIBYTE(v226) ^ 0x18) + v227 - ((2 * (HIBYTE(v226) ^ 0x18) - 1456281222) & 0xA1200306)) ^ ((v217 ^ 0x83) + 943989659 + ((2 * (v217 ^ 0x83) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ v243;
  v248 = *(_DWORD *)&v88[4 * (v235 ^ 0xA4)];
  v249 = (BYTE1(v217) ^ 0x94400A5D) - ((2 * (BYTE1(v217) ^ 0x94400A5D)) & 0x280014C0) + 1555234656;
  v250 = *(_DWORD *)&v87[4 * (v226 ^ 0xD2)] ^ *(_DWORD *)(v86 + 4 * (BYTE1(v217) ^ 0xCFu)) ^ ((BYTE2(v212) ^ 0x2A51D1C5) - 970733883 + *(_DWORD *)&v84[4 * (BYTE2(v212) ^ 0x97)]) ^ ((v226 ^ 0xE5) + 943989659 + ((2 * (v226 ^ 0xE5) + 354) & 0x1D2 ^ 0x4F3F77FF)) ^ ((v249 ^ 0x780C02D0) + (v249 ^ 0xC8F2F5E4) - 1520963771 - ((2 * ((v249 ^ 0x780C02D0) + (v249 ^ 0xC8F2F5E4))) & 0x4AAFDE8A)) ^ ((v248 ^ 0xD1908183) + v246 - 2 * ((v246 + 574685608) & (v248 ^ 0x51908183)) - 1572798040);
  v251 = *(_DWORD *)(v19 - 136);
  v252 = (char *)*(&off_24E21C7C0 + v251 - 1063) - 8;
  v253 = *(_DWORD *)&v252[4 * (HIBYTE(v239) ^ 0xB0)];
  v254 = (char *)*(&off_24E21C7C0 + (int)v280) - 4;
  v255 = *(_DWORD *)&v254[4 * (BYTE1(v247) ^ 0xEB)];
  HIDWORD(v256) = v255 ^ 0x40;
  LODWORD(v256) = v255 ^ 0x8D121F00;
  v257 = (char *)*(&off_24E21C7C0 + v251 - 864) - 8;
  v258 = (uint64_t)*(&off_24E21C7C0 + v251 - 935);
  v259 = *(_DWORD *)&v252[4 * (HIBYTE(v242) ^ 0x30)];
  v260 = *(_DWORD *)&v257[4 * (BYTE2(v242) ^ 0xC3)] ^ v253 ^ (v256 >> 8) ^ (*(_DWORD *)(v258
                                                                                      + 4
                                                                                      * (v250 ^ 0xEBu))
                                                                          + 341835761) ^ (((v242 >> 15) & 0x1FE ^ 0x24)
                                                                                        - 1775397106
                                                                                        + ((2
                                                                                          * ((v242 >> 15) & 0x1FE ^ 0x24)
                                                                                          + 140) & 0x58C ^ 0xB9F47FFF)) ^ (((v253 >> 3) & 0x35901C6 ^ 0x1510140) - ((2 * ((v253 >> 3) & 0x35901C6 ^ 0x1510140)) & 0x90008C) - 1259807138);
  v261 = *(_DWORD *)&v254[4 * (BYTE1(v250) ^ 0xB1)];
  HIDWORD(v256) = v261 ^ 0x40;
  LODWORD(v256) = v261 ^ 0x8D121F00;
  v262 = *(_DWORD *)&v257[4 * (BYTE2(v247) ^ 0x17)] ^ v259 ^ (v256 >> 8) ^ (*(_DWORD *)(v258
                                                                                      + 4
                                                                                      * (v239 ^ 0xC4u))
                                                                          + 341835761) ^ (((v247 >> 15) & 0x1FE ^ 0x18C)
                                                                                        - 1775397106
                                                                                        + ((2
                                                                                          * ((v247 >> 15) & 0x1FE ^ 0x18C)
                                                                                          + 140) & 0x58C ^ 0xB9F47FFF)) ^ ((v259 & 0x1AC80E33 ^ 0xA880A01u) >> (BYTE4(v287) & 3) >> (BYTE4(v287) & 3 ^ 3));
  v263 = *(_DWORD *)&v254[4 * (BYTE1(v239) ^ 0x21)];
  HIDWORD(v256) = v263 ^ 0x40;
  LODWORD(v256) = v263 ^ 0x8D121F00;
  v264 = *(_DWORD *)&v252[4 * (HIBYTE(v247) ^ 0x5E)];
  v265 = (v264 >> 3) & 0x35901C6 ^ v264 ^ *(_DWORD *)&v257[4 * (BYTE2(v250) ^ 0x42)] ^ (v256 >> 8) ^ (((v250 >> 15) & 0x1FE ^ 0x126) - 1775397106 + ((2 * ((v250 >> 15) & 0x1FE ^ 0x126) + 140) & 0x58C ^ 0xB9F47FFF)) ^ (*(_DWORD *)(v258 + 4 * (v242 ^ 0x1Eu)) + 341835761);
  v266 = *(_DWORD *)&v252[4 * (HIBYTE(v250) ^ 0x13)];
  LODWORD(v252) = *(_DWORD *)&v254[4 * (BYTE1(v242) ^ 0xF3)];
  HIDWORD(v256) = v252 ^ 0x40;
  LODWORD(v256) = v252 ^ 0x8D121F00;
  v267 = *(_DWORD *)&v257[4 * (BYTE2(v239) ^ 0x55)] ^ v266 ^ (*(_DWORD *)(v258 + 4 * (v247 ^ 0xA2u))
                                                            + 341835761) ^ (v256 >> 8) ^ (((v239 >> 15) & 0x1FE ^ 0x108) - 1775397106 + ((2 * ((v239 >> 15) & 0x1FE ^ 0x108) + 140) & 0x58C ^ 0xB9F47FFF)) ^ (((v266 >> 3) & 0x35901C6 ^ 0x1510140) - 2 * (((v266 >> 3) & 0x35901C6 ^ 0x1510140) & 0x2510142 ^ (v266 >> 3) & 2) - 1563077816);
  v268 = (uint64_t)*(&off_24E21C7C0 + SHIDWORD(v279));
  a1[v289] = (*(_BYTE *)(v268 + (BYTE2(v260) ^ 0x6BLL)) + (BYTE2(v260) ^ 0x7F) - 102) ^ 0x1E;
  v269 = (char *)*(&off_24E21C7C0 + (int)v279) - 12;
  a1[6] = (v269[BYTE1(v262) ^ 0x50] + BYTE1(v262) - 27) ^ 0x79;
  v270 = (char *)*(&off_24E21C7C0 + v251 - 1006) - 8;
  a1[8] = (v270[HIBYTE(v265) ^ 0xEALL] + (HIBYTE(v265) ^ 0xE) + (HIBYTE(v265) ^ 0x59) - 24) ^ 0x49;
  a1[13] = (*(_BYTE *)(v268 + (BYTE2(v267) ^ 0x14)) + BYTE2(v267) - 102) ^ 0x50;
  a1[4] = ((HIBYTE(v262) ^ 0xE3) + (HIBYTE(v262) ^ 0xB4) + v270[HIBYTE(v262) ^ 7] - 24) ^ 0xF6;
  v271 = (char *)*(&off_24E21C7C0 + SHIDWORD(a8)) - 12;
  LOBYTE(v266) = v271[v267 ^ 0x48] - ((2 * v271[v267 ^ 0x48] + 124) & 0xF3);
  a1[15] = (v266 + 55) ^ 0x4F ^ ((((-56 - v266) >> 3) ^ ((-56 - v266) >> 7))
                               - 2
                               * ((((-56 - v266) >> 3) ^ ((-56 - v266) >> 7)) & 0xFB ^ ((-56 - v266) >> 3) & 2)
                               - 7);
  a1[14] = ((BYTE1(v267) ^ 0x2A) + v269[BYTE1(v267) ^ 0x7ALL] - 27) ^ 0x42;
  LOBYTE(v266) = v271[v265 ^ 0x76] - ((2 * v271[v265 ^ 0x76] + 124) & 0xB6) - 103;
  v272 = (v266 >> 3) ^ (v266 >> 7) ^ 0xB;
  a1[*(_QWORD *)(v19 - 184)] = v266 ^ 0x2B ^ (v272 - ((2 * v272) & 0xF7) + 91);
  a1[2] = ((BYTE1(v260) ^ 0xF5) + v269[BYTE1(v260) ^ 0xA5] - 27) ^ 0x16;
  LOBYTE(v266) = v271[v260]
               - 2 * ((v271[v260] + 62) & 0x53 ^ v271[v260] & 1);
  LOBYTE(v272) = v266 + 16;
  v273 = ((v266 + 16) >> 3) ^ (((-17 - v266) & 0x80) >> 7);
  v274 = (v273 ^ 0x1A) & 0xFFFFFFF3;
  a1[*(_QWORD *)(v19 - 192)] = v272 ^ 0x93 ^ ((v273 ^ 0x1A) - 2 * ((v273 ^ 0x1A) & 0xF3 ^ v273 & 1) - 46);
  a1[*(_QWORD *)(v19 - 152)] = ((BYTE2(v265) ^ 0xBC) + *(_BYTE *)(v268 + (BYTE2(v265) ^ 0xA8)) - 102) ^ 0x4A;
  a1[*(_QWORD *)(v19 - 168)] = ((BYTE3(v267) ^ 0x95) + (BYTE3(v267) ^ 0xC2) + v270[BYTE3(v267) ^ 0x26] - 24) ^ 0x8D;
  v275 = *(_QWORD *)(v19 - 200);
  a1[v275] = ((HIBYTE(v260) ^ 0x93) + (HIBYTE(v260) ^ 0xC4) + v270[HIBYTE(v260) ^ 0x20] - 24) ^ 0xF7;
  LOBYTE(v273) = v271[v262 ^ 0x2FLL] - ((2 * v271[v262 ^ 0x2FLL] + 60) & 0x32);
  LOBYTE(v270) = v273 - 41;
  v276 = ((v273 - 41) >> 3) ^ (((40 - v273) & 0x80) >> 7) ^ 0x13;
  a1[*(_QWORD *)(v19 - 144)] = v270 ^ (v276 - ((2 * v276) & 0x33) - 103) ^ 0xDD;
  a1[*(_QWORD *)(v19 - 160)] = ((BYTE2(v262) ^ 0xAB) + *(_BYTE *)(v268 + (BYTE2(v262) ^ 0xBFLL)) - 102) ^ 0x42;
  a1[*(_QWORD *)(v19 - 176)] = ((BYTE1(v265) ^ 0x7F) + v269[BYTE1(v265) ^ 0x2FLL] - 27) ^ 0xED;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a17 + 8 * ((2764 * ((((_DWORD)v275 - 5580069 - ((2 * (_DWORD)v275 + 32) & 0xFF55B5B6) + 16) ^ 0xFFAADADB) < HIDWORD(v281))) ^ (v251 - 886))) - 8))(v275, v267, 47, v274, 66, 56164806, 19, 66, a2, a3, a4, a5, a6, a1, a8, v279, v280, v281, v282,
           v283,
           v284,
           v285,
           a16,
           a17,
           v286,
           v287,
           v288);
}

void sub_21E0AA714()
{
  JUMPOUT(0x21E0A6ACCLL);
}

uint64_t sub_21E0AA748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  uint64_t v27;
  unsigned int v28;

  v28 = a15 - ((a12 << ((a27 - 43) & 0xEB ^ 0xEA)) & 0xAB250DA4) + 1712612282;
  return ((uint64_t (*)(void))(*(_QWORD *)(v27
                                        + 8
                                        * ((26
                                          * (((2 * v28) & 0xAD7F9EEE ^ 0xA9250CA4) + (v28 ^ 0x32D49A5) + 1876621232 != 1184548647)) ^ a27))
                            - 4))();
}

uint64_t sub_21E0AA838(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((492 * (a1 + v2 + ((v1 - 1670) ^ 0x294034ECu) < (v1 ^ 0x1C8u) - 2843)) ^ v1)))();
}

uint64_t sub_21E0AA8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * (int)(((((a3 - 2754) | 0x404) - 1056)
                                                                                        * ((v6 + a6 - 16) > 0xFFFFFFEF)) ^ a3))
                                                                     - 8))(a1, a2, a3, a2);
}

uint64_t sub_21E0AA8F4@<X0>(int a1@<W0>, int a2@<W2>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _BOOL4 v23;
  int v25;
  int v27;

  v11 = (a1 + v8 + v9);
  v12 = v11 + a5 - 0x55B7A4F61A7BE48ELL + 1;
  v13 = ((_BYTE)a1 + (_BYTE)v8 + (_BYTE)v9) & 0xF;
  v14 = v7 + v13 - v11;
  v15 = ((a2 - 1726) ^ 0xFFFFFFFFFFFFF881) + ((a2 + 17932314) & 0xFEEE57DF) + v13;
  v16 = v7 + v15;
  v17 = v6 + v13 - v11;
  v18 = v6 + v15;
  v19 = v13 + v5;
  v20 = v19 - v11 + 1;
  v21 = v19 + 2;
  v23 = v14 < v12 && a3 < v16;
  v25 = v17 < v12 && a3 < v18 || v23;
  if (a3 >= v21 || v20 >= v12)
    v27 = v25;
  else
    v27 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((1594 * (v27 ^ 1)) ^ a2)) - 8))();
}

uint64_t sub_21E0AA9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                       + 8
                                                                       * ((1838
                                                                         * (((v6 < 0x10) ^ (a6 + 66)) & 1)) ^ a6))
                                                           - 12))(a1, a2, 0);
}

uint64_t sub_21E0AA9F4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W5>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  v11 = (a3 - 779) | 0x289;
  v17.val[1].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a2 + 5) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v12 = a1 + v8 + v9;
  v13.i64[0] = 0x8D8D8D8D8D8D8D8DLL;
  v13.i64[1] = 0x8D8D8D8D8D8D8D8DLL;
  v17.val[0].i64[0] = v12 & 0xF;
  v17.val[0].i64[1] = ((_BYTE)a2 + ((a3 - 11) | 0x89) + 108) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v18.val[0].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a2 + 13) & 0xF;
  v18.val[2].i64[1] = (a2 + 11) & 0xF;
  v18.val[3].i64[1] = (a2 + 9) & 0xF;
  v18.val[0].i64[0] = a2 & 0xF;
  v18.val[1].i64[0] = ((_BYTE)a2 + 14) & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a2 + 12) & 0xF;
  v18.val[3].i64[0] = (a2 + 10) & 0xF;
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v15 = vrev64q_s8(vmulq_s8(v14, v13));
  *(int8x16_t *)(a4 - 15 + v12) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v6 + v17.val[0].i64[0] - 15), *(int8x16_t *)(a4 - 15 + v12)), *(int8x16_t *)(v5 + v17.val[0].i64[0] - 15)), *(int8x16_t *)(v4 + v17.val[0].i64[0] + ((v11 + 479) ^ 0x47BLL) - 15)), vextq_s8(v15, v15, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((59 * ((v7 & 0xFFFFFFF0) != 16)) ^ v11)) - 4))();
}

void sub_21E0AAB60()
{
  JUMPOUT(0x21E0AAAE0);
}

uint64_t sub_21E0AAB6C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v4 ^ (354 * (v3 == a3)))) - ((v4 - 349) ^ 0x311)))();
}

uint64_t sub_21E0AABA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  char v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7
                                                                                + 8
                                                                                * (((a5 - 907) * ((v6 & 8) == 0)) ^ a6))
                                                                    - 12))(a1, a2, a3, (a2 - a3));
}

uint64_t sub_21E0AABCC@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W7>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  int v30;
  char v31;
  uint64_t v32;
  int8x16x4_t v34;

  *(_DWORD *)(v28 - 120) = v27;
  v29 = (a3 ^ 0xFFFFF7E5) & v23;
  v30 = -a2;
  *(_DWORD *)(v28 - 132) = v29;
  *(_DWORD *)(v28 - 128) = v23;
  v31 = v24 + a1 + v25;
  v32 = v30 + v26 + a1 + v25 - 2851 + (a3 ^ 0x33Eu);
  v34.val[0].i64[0] = ((_BYTE)v30 + (_BYTE)v26 + (_BYTE)a1 + (_BYTE)v25 - 35 + (a3 ^ 0x3E)) & 0xF;
  v34.val[0].i64[1] = ((_BYTE)v30 + v31 + 7) & 0xF;
  v34.val[1].i64[0] = ((_BYTE)v30 + v31 + 6) & 0xF;
  v34.val[1].i64[1] = ((_BYTE)v30 + v31 + 5) & 0xF;
  v34.val[2].i64[0] = ((_BYTE)v30 + v31 + 4) & 0xF;
  v34.val[2].i64[1] = ((_BYTE)v30 + v31 + 3) & 0xF;
  v34.val[3].i64[0] = ((_BYTE)v30 + v31 + 2) & 0xF;
  v34.val[3].i64[1] = ((_BYTE)v30 + v31 + 1) & 0xF;
  *(int8x8_t *)(a4 - 7 + v32) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v22 + (v32 & 0xF) - 7), *(int8x8_t *)(a4 - 7 + v32)), veor_s8(*(int8x8_t *)(v21 + (v32 & 0xF) - 7), *(int8x8_t *)((v32 & 0xF) + v20 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v34, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x8D8D8D8D8D8D8D8DLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a20 + 8 * ((27 * (v30 != 8 - v29)) ^ a3 ^ 0x1B)) - 12))((__n128)xmmword_21E17F900);
}

void sub_21E0AAD0C()
{
  JUMPOUT(0x21E0AAC3CLL);
}

uint64_t sub_21E0AAD34()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v0 ^ 0xF46) - 896) * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 132))) ^ v0))
                            - ((25 * (v0 ^ 0xB0Eu)) ^ 0x46DLL)))();
}

uint64_t sub_21E0AAD7C@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 - 1184548648);
  *(_BYTE *)(a3 + v8) ^= *(_BYTE *)(v6 + (v8 & 0xF)) ^ *(_BYTE *)(v5 + (v8 & 0xF)) ^ *(_BYTE *)((v8 & 0xF) + v4 + 1) ^ (-115 * (v8 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((515 * (a1 - 1 != v3)) ^ (a2 + 197))) - 4))();
}

void sub_21E0AADE4()
{
  int v0;
  int v1;
  int *v2;

  if (v0 == 1185120551)
    v1 = 939001227;
  else
    v1 = -939041197;
  *v2 = v1;
}

void sub_21E0AAE48(uint64_t a1)
{
  int v1;

  v1 = 1328090399 * (((a1 | 0xC26AD773) - a1 + (a1 & 0x3D95288C)) ^ 0x3DB9B349);
  __asm { BR              X9 }
}

uint64_t sub_21E0AAF20@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((a1 & 0x6954E479) - 27098862) & 0x19D7BAE) - 293)
                                          * (*(_QWORD *)(v1 + 24) == 0)) ^ a1 & 0x6954E479))
                            - 12))();
}

uint64_t sub_21E0AAF6C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v4
                                                    + 8
                                                    * (((*(_BYTE *)(v2 + 5) == 1)
                                                      * (((a2 - 1839891118) & 0x6DAA7F6E) + 809)) ^ (a2 - 849))))(a1, *(_QWORD *)(v3 + 48));
}

uint64_t sub_21E0AAFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  uint64_t v44;
  int v45;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * (((*(_BYTE *)(*(_QWORD *)(v43 + 32) + 1) == 35) * (((v45 - 2051426649) & 0x7A46496A) + 2972)) ^ v45)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_21E0AAFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v7 = *(_BYTE *)(v2 + 12);
  *(_BYTE *)(v6 - 140) = -41 * ((((v6 + 112) | 0x4A) - (v6 + 112) + ((v6 + 112) & 0xB0)) ^ 0xA4)
                       + ((v5 - 90) & 0x6B ^ 0x2D) * (v3 ^ 0x56)
                       + 96;
  *(_DWORD *)(v6 - 136) = (v5 + 154046659) ^ (1948972247
                                            * ((((v6 - 144) | 0xDEC3664A) - (v6 - 144) + ((v6 - 144) & 0x213C99B0)) ^ 0x6B5D93A4));
  *(_BYTE *)(v6 - 132) = -41 * ((((v6 + 112) | 0x4A) - (v6 + 112) + ((v6 + 112) & 0xB0)) ^ 0xA4)
                       + (v7 ^ 0xDF)
                       + ((2 * v7) & 0xBF)
                       + 43;
  v8 = sub_21E056FA0(v6 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * ((3582 * (*(_DWORD *)(v6 - 144) == 939001227)) ^ v5)))(v8, a2);
}

uint64_t sub_21E0AB0EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,_BYTE *a51)
{
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  int v54;
  BOOL v55;

  a51[128] = v52[12];
  a51[129] = v52[4];
  a51[131] = v52[13];
  v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8 * (v54 + 151)))(142, 2932825243) == 0;
  return (*(uint64_t (**)(void))(v53 + 8 * ((927 * (((13 * (v54 ^ 0xF)) ^ v55) & 1)) ^ v54)))();
}

uint64_t sub_21E0AB170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  *(_DWORD *)a1 = 1498173510;
  *(_BYTE *)(a1 + 4) = a53;
  *(_WORD *)(a1 + 5) = 513;
  *(_BYTE *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = -2113929216;
  *(_BYTE *)(a1 + 12) = 2;
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(v54 + 14);
  *(_WORD *)(v57 - 124) = 23041 * ((((v57 - 144) | 0x1E1C) - ((v57 - 144) | 0xE1E3) - 7709) ^ 0x3059) + 21377;
  *(_QWORD *)(v57 - 136) = a1 + 0x2B0E86FE4BE00E17;
  *(_DWORD *)(v57 - 128) = v56
                         - 2009815553
                         * ((((v57 - 144) | 0x4F2B1E1C) - ((v57 - 144) | 0xB0D4E1E3) - 1328225821) ^ 0xBE203059)
                         + 187;
  ((void (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (v56 + 169)) - 12))(v57 - 144);
  *(_WORD *)(a1 + 14) = 256;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((2738 * (a1 - a51 + ((v56 + 7) ^ 0xFFFFFFFFFFFFFEB8) < 0x20)) ^ v56)))(a1, v58, v59, v60, v61, v62, v63, v64, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_21E0AB290@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(a1 + v1 - 2071772354) = *(_BYTE *)(v2 + v1 - 2071772354);
  return (*(uint64_t (**)(void))(v4 + 8 * ((2731 * (v1 - 1 != ((v5 - 878744392) & 0x3460933F) + v3)) ^ v5)))();
}

uint64_t sub_21E0AB2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v5 = ((v4 - 1) ^ 0x155) - v1;
  v6 = *(_OWORD *)(v2 + v5 - 15);
  v7 = *(_OWORD *)(v2 + v5 - 31);
  v8 = a1 + v5;
  *(_OWORD *)(v8 - 15) = v6;
  *(_OWORD *)(v8 - 31) = v7;
  return (*(uint64_t (**)(void))(v3 + 8 * ((25 * (v1 == 96)) ^ v4)))();
}

uint64_t sub_21E0AB328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  char *v61;
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  int v66;
  char *v67;
  int v68;
  uint64_t v69;
  void (*v70)(char *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;

  if (v54 == -1855171243)
  {
    v79 = v52;
    v70 = (void (*)(char *))((char *)*(&off_24E21C7C0 + (v53 ^ 0x1CD)) - 8);
    v70((char *)*(&off_24E21C7C0 + (v53 ^ 0x87)) - 12);
    ((void (*)(_QWORD, unint64_t *, uint64_t))v70)(*(&off_24E21C7C0 + v53 + 134), &STACK[0xC38], 16);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((1254 * (((a22 == -14) ^ (19 * (v53 ^ 0x2D))) & 1)) ^ (v53 - 111))) - 8))(a22, v71, v72, v73, v74, v75, v76, v77, a9, a10, a11, a12, a13, a14, a15, v79, a17, a18, a19,
             a20,
             a21,
             a22,
             &STACK[0xBA8],
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45);
  }
  if (v54 == -1855171244)
  {
    v59 = *(unsigned __int8 *)(a52 + 14);
    if (v59 == 2)
    {
      v64 = 1734664879
          * ((1353607782 - ((v58 - 144) ^ 0xC9CCD1A0 | 0x50AE6A66) + ((v58 - 144) ^ 0xC9CCD1A0 | 0xAF519599)) ^ 0x49466C23);
      *(_DWORD *)(v58 - 144) = v64 + 677615993;
      *(_QWORD *)(v58 - 120) = a1 + 0x2F36DA607BEC4C24;
      *(_QWORD *)(v58 - 112) = a1 + 0x61B4415FE1FE4C94;
      v65 = (uint64_t)*(&off_24E21C7C0 + (v53 ^ 0x185));
      *(_DWORD *)(v58 - 128) = v53 - v64 + 2666;
      *(_QWORD *)(v58 - 136) = v65 - 8;
      ((void (*)(uint64_t))*(&off_24E21C7C0 + v53 - 45))(v58 - 144);
      v62 = *(_DWORD *)(v58 - 124);
    }
    else
    {
      if (v59 != 1)
      {
        if (*(_BYTE *)(a52 + 14))
        {
          v68 = 1292559617 * ((((v58 - 144) | 0x2783B4B7) - ((v58 - 144) & 0x2783B4B7)) ^ 0x80D0DCDE);
          v69 = (uint64_t)*(&off_24E21C7C0 + v53 + 59);
          *(_DWORD *)(v58 - 128) = (v53 + 2347) ^ v68;
          *(_QWORD *)(v58 - 120) = v69;
          *(_QWORD *)(v58 - 144) = a1 + 0x199CF05987F0153CLL;
          *(_QWORD *)(v58 - 136) = a1 + 0x38BEDCB65C0FCDC1;
          *(_DWORD *)(v58 - 112) = 896743677 - v68;
          ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v53 ^ 0x148)) - 12))(v58 - 144);
          v62 = *(_DWORD *)(v58 - 124);
        }
        else
        {
          v60 = 1438293641 * ((v58 - 144) ^ 0xB8C7557F);
          *(_QWORD *)(v58 - 136) = a1 + 0x46F5648AE782334BLL;
          *(_DWORD *)(v58 - 128) = v60 + 1870537624;
          *(_DWORD *)(v58 - 104) = v60 + v53 + 827;
          v61 = (char *)*(&off_24E21C7C0 + v53 - 262) - 8;
          *(_QWORD *)(v58 - 120) = a1 + 0x55B7A4F61A7BE49CLL;
          *(_QWORD *)(v58 - 112) = v61;
          ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + v53 + 30) - 12))(v58 - 144);
          v62 = *(_DWORD *)(v58 - 144);
        }
        v63 = v53;
        return ((uint64_t (*)(void))(*(_QWORD *)(v55
                                              + 8 * (((((v63 - 296) | 0x82C) ^ 0x859) * (v62 == v56)) ^ (v63 + 262)))
                                  - 12))();
      }
      v66 = 1948972247 * ((((2 * (v58 - 144)) | 0x89355B84) - (v58 - 144) + 996495934) ^ 0x7104582C);
      *(_QWORD *)(v58 - 112) = a1 + 0x4B675195D5CFAF68;
      v67 = (char *)*(&off_24E21C7C0 + v53 + 194) - 8;
      *(_QWORD *)(v58 - 136) = a1 + 0x2C4F5E3A6E84969CLL;
      *(_QWORD *)(v58 - 120) = v67;
      *(_DWORD *)(v58 - 144) = v66 + 544020104;
      *(_DWORD *)(v58 - 140) = v53 - v66 + 2906;
      ((void (*)(uint64_t))*(&off_24E21C7C0 + v53 + 50))(v58 - 144);
      v62 = *(_DWORD *)(v58 - 128);
    }
  }
  else
  {
    v62 = v57 + 55;
  }
  v63 = v53;
  return ((uint64_t (*)(void))(*(_QWORD *)(v55 + 8 * (((((v63 - 296) | 0x82C) ^ 0x859) * (v62 == v56)) ^ (v63 + 262)))
                            - 12))();
}

uint64_t sub_21E0ACB10@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,_QWORD *a43,_DWORD *a44,uint64_t a45,uint64_t a46,uint64_t a47,_BYTE *a48,uint64_t a49,uint64_t a50,char a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BYTE *v56;

  v53 = (a2 + 547587177) & 0xDF5C7B7F;
  *a43 = a1;
  *a44 = 142;
  *a48 = 1;
  *(_BYTE *)(a45 + 1) = 37;
  v54 = bswap32(*(_DWORD *)(v52 + 8));
  v55 = ((unint64_t)&a51 ^ 0x2EF3CFF77DEBFFEDLL ^ v53)
      + ((2 * (_QWORD)&a51) & 0x5DE79FEEFBD7EFF0)
      - 0x1340042C0B002ALL;
  v56 = (_BYTE *)(v54 + v52 + 11);
  *v56 = ((v55 + 48) ^ 0xBA) * (v55 + 65);
  *(v56 - 1) = ((17 * ((a2 + 105) & 0x7F ^ 0x44) + 55) ^ (v55 + 49)) * (v55 + 66);
  return (*(uint64_t (**)(void))(v51 + 8 * (int)((57 * (((v54 + 12) & 0x1FFFFFFFELL) != 2)) ^ v53)))();
}

void sub_21E0ACC28()
{
  JUMPOUT(0x21E0ACBE0);
}

uint64_t sub_21E0ACC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
  int v56;
  uint64_t v57;
  unint64_t v58;

  v58 = ((unint64_t)&a56 ^ 0xB173DFF7E6FBEA9FLL)
      + 0x7EFD2D98BBE5DF5ALL
      + ((2 * (_QWORD)&a56) & 0x62E7BFEFCDF7D530);
  *(_BYTE *)(a1 + 141) = (v58 + ((v56 - 42) | 0x18)) * ((v58 + 7) ^ 0xBA);
  *(_BYTE *)(a1 + 140) = ((v58 + 8) ^ 0xBA) * (v58 + 25);
  return ((uint64_t (*)(void))(*(_QWORD *)(v57 + 8 * (v56 + 477)) - 4))();
}

void sub_21E0ACCE8()
{
  JUMPOUT(0x21E0ACCA0);
}

uint64_t sub_21E0ACCF4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (59 * (v0 != v1)))) - (v2 - 1113) + 294))();
}

uint64_t sub_21E0ACD1C@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = a1 - 1;
  *(_BYTE *)(v5 + v6) = ((v1 + 48) ^ 0xBA) * (v1 + 65);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((((v3 + 1) ^ (v6 == 0)) & 1) == 0) * v2) ^ v3)) - 4))();
}

uint64_t sub_21E0ACD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v49;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;

  v53 = ((uint64_t (*)(void))*(&off_24E21C7C0 + v49 - 23))();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8 * ((50 * (v51 == v52)) ^ v49)))(v53, a49);
}

void sub_21E0ACDA4(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  char v9;
  int v10;
  _BYTE *v11;

  v8 = v2[5];
  v9 = (((2 * (v2[6] + 1)) & 0xA2) + ((v2[6] + 1) ^ 0xD1)) ^ 0x80;
  v10 = 1503746353 * ((~(v7 - 144) & 0xA96E34D9 | (v7 - 144) & 0x5691CB26) ^ 0x8F0FF66F);
  *(_BYTE *)(v7 - 115) = v2[4] - 49 * ((~(v7 + 112) & 0xD9 | (v7 + 112) & 0x26) ^ 0x6F) - ((2 * v2[4]) & 0xD6) + 107;
  *(_BYTE *)(v7 - 116) = -49 * ((~(v7 + 112) & 0xD9 | (v7 + 112) & 0x26) ^ 0x6F) + 55 * v8 + 122;
  *(_DWORD *)(v7 - 144) = (v6 ^ 0x14DA90D) - v10;
  *(_BYTE *)(v7 - 140) = v9 - 49 * ((~(v7 + 112) & 0xD9 | (v7 + 112) & 0x26) ^ 0x6F);
  *(_DWORD *)(v7 - 120) = v10 + v5 + 919;
  *(_QWORD *)(v7 - 136) = a2;
  *(_QWORD *)(v7 - 128) = v3;
  sub_21E07237C(v7 - 144);
  *v11 = -1;
  *(_DWORD *)(v4 + 44) = v6;
}

void sub_21E0ACEBC(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v5;

  if (*(_QWORD *)(a1 + 8))
    v2 = *(_QWORD *)(a1 + 16) == 0x2AC602A0DF9ECD38;
  else
    v2 = 1;
  v5 = !v2 && *(_QWORD *)a1 != 0x14BD953D9E8FA52FLL && *(_QWORD *)(a1 + 32) != 0x2A752CF9B62C38AELL;
  v1 = *(_DWORD *)(a1 + 24) ^ (225134719 * ((a1 - 53603660 - 2 * (a1 & 0xFCCE12B4)) ^ 0xEA3E579E));
  __asm { BR              X10 }
}

uint64_t sub_21E0ACFC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_DWORD *)(v16 - 0x14BD953D9E8FA52FLL) = 1467480806;
  a14 = v17
      + 731811679
      * (((&a12 | 0xA7863943) - &a12 + (&a12 & 0x5879C6B8)) ^ 0xEE709F07)
      + 1184;
  a12 = v18;
  a15 = &STACK[0x3E523A40C5AD4E19];
  a16 = v21;
  v22 = (*(uint64_t (**)(uint64_t *))(v20 + 8 * (v17 ^ 0x52)))(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((2234 * (a13 == 939001227)) ^ v17)) - 4))(v22);
}

uint64_t sub_21E0AD08C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, int a13, unint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *v21 += a12;
  a14 = &STACK[0x3FAB4C42AB622E6F];
  a15 = v19;
  a16 = v24;
  a17 = v25 + a12;
  a18 = (v18 + 472) ^ (1438293641
                     * ((&a13 - 1428119202 - 2 * ((unint64_t)&a13 & 0xAAE0A15E)) ^ 0x1227F421));
  v26 = ((uint64_t (*)(int *))(*(_QWORD *)(v22 + 8 * (v18 ^ 0x3CF)) - 4))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((35 * (a13 == v23)) ^ v18)) - 4))(v26);
}

uint64_t sub_21E0AD140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;

  *v13 += a11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12
                                        + 8
                                        * ((4001 * (*(unsigned __int8 *)(v14 - 0x2AC602A0DF9ECD34) == 196)) ^ v11))
                            - 4))();
}

uint64_t sub_21E0AD18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;

  a16 = v17 + 1734664879 * (&a12 ^ 0x2FDB281A) + 1372;
  a12 = v18;
  a13 = &STACK[0x1D6B5E1B077DD05A];
  a14 = v22 + v16;
  v23 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v20 + 8 * (v17 - 409)) - 12))(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((1654 * (a15 == v21)) ^ v17)) - 4))(v23);
}

void sub_21E0AD20C()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;

  *v1 += v2 - 1022332075;
  *(_DWORD *)(v0 + 40) = 939001227;
}

void sub_21E0AD270(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_DWORD *)a1 ^ (1866394843 * ((1270393433 - (a1 | 0x4BB8AA59) + (a1 | 0xB44755A6)) ^ 0x5E506252));
  v2 = *(_QWORD *)(a1 + 8);
  v3 = ((unint64_t)(*(_DWORD *)(v2 - 0x195CA6660D034730) + 387) >> 3) & 0x3F;
  *(_BYTE *)(v2 - 0x195CA6660D034728 + v3) = 0x80;
  __asm { BR              X14 }
}

uint64_t sub_21E0AD3DC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((226 * (v1 ^ 0x37D)) ^ 0x1B4) * (v0 != 0)) ^ v1))
                            - (v1 - 15)
                            + 867))();
}

uint64_t sub_21E0AD418@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *a1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 == 1) | (16 * (v1 == 1))) ^ v2))
                            - ((2 * v2) ^ 0x6DELL)))();
}

uint64_t sub_21E0AD450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v3) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v3 + 1 == v1) | (16 * (v3 + 1 == v1))) ^ v2)) - (v4 ^ 0x626)))();
}

uint64_t sub_21E0AD47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t *), uint64_t (*a14)(uint64_t *), uint64_t a15, int a16, int a17, int a18, int a19, uint64_t a20,int *a21,uint64_t a22,int a23,int a24)
{
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  void (*v28)(uint64_t *);
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;

  v29 = 1866394843
      * (((&a20 | 0x1059994F) - &a20 + (&a20 & 0xEFA666B0)) ^ 0xFA4EAEBB);
  a20 = a15;
  LODWORD(a21) = v29 ^ 0x6D26F559;
  HIDWORD(a21) = v29 + v25 - 1274;
  v28(&a20);
  v30 = 1734664879 * (&a20 ^ 0x2FDB281A);
  LODWORD(a20) = 1729118973 - v30;
  a21 = &a16;
  a22 = a15;
  a23 = v25 - v30 - 929;
  a24 = v30 + v27;
  a13(&a20);
  *(_DWORD *)(v24 - 0x195CA6660D034740) += a16;
  *(_DWORD *)(v24 - 0x195CA6660D03473CLL) += a17;
  *(_DWORD *)(v24 - 0x195CA6660D034738) += a18;
  *(_DWORD *)(v24 - 0x195CA6660D034734) += a19;
  a22 = v24 + 0x4041F0FC79A2F99ELL;
  LODWORD(a21) = 1734664879 * ((((2 * &a20) | 0xA6CF55BA) - &a20 + 748180771) ^ 0xFCBC82C7)
               + 1062498540
               + v25
               - 505;
  a20 = a15;
  v31 = a14(&a20);
  *(_QWORD *)(v24 - 0x195CA6660D034728) = 0;
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((177 * (((359 * (v25 ^ 0x62Du)) ^ 0x40DLL) == 8)) ^ v25)))(v31);
}

uint64_t sub_21E0AD668()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v1 - 900449968) & 0x35ABC6F3) + 1974) ^ (v1 - 1491847016) & 0x58EBC4FD)
                                * (v0 != 55)) ^ v1)))();
}

uint64_t sub_21E0AD6B8()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((490 * (55 - v0 >= (v1 ^ 0x6EB))) ^ v1))
                            - ((v1 + 718460796) & 0x552D25A7)
                            + 1027))();
}

uint64_t sub_21E0AD710()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 - 589) * (v0 > 0x1F)) ^ v1)) - ((3 * (v1 ^ 0x5A2u)) ^ 0x4E3)))();
}

uint64_t sub_21E0AD748@<X0>(_OWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v5;
  int v6;

  v4 = v2 - 999 == (v1 & 0xFFFFFFE0);
  v5 = v2 - 85;
  *a1 = 0u;
  a1[1] = 0u;
  v6 = !v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v6 | (8 * v6)) ^ v5)))();
}

uint64_t sub_21E0AD784(__n128 a1)
{
  int v1;
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;

  *v3 = a1;
  v3[1] = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 != 0) | (8 * (v2 != 0))) ^ v1)))();
}

uint64_t sub_21E0AD7A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (275 * (v0 != v1))))
                            - ((v2 + 1400726181) & 0xAC82957F)
                            - ((v2 - 1945903123) & 0x73FC17E6)
                            + 2069))();
}

uint64_t sub_21E0AD800()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2019 * ((((v1 + 267) ^ 0x4F7) & v0) != 0)) ^ v1))
                            - (v1 ^ 0x3E8)))();
}

uint64_t sub_21E0AD83C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;

  *(_QWORD *)(a1 + v1) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2799 * (((41 * (v3 ^ 0x4C4u)) ^ 0x6EBLL) + v1 == (v2 & 0xFFFFFFF8))) ^ v3))
                            - 4))();
}

uint64_t sub_21E0AD88C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v2 ^ 0xA3C) - 2218) ^ 0xEC6) * (v0 == v1)) ^ v2)) - 4))();
}

uint64_t sub_21E0AD8BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a1 + v1) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((90 * (((v1 + 1 == v2) ^ (v3 + 70)) & 1)) ^ (v3 - 1600))))();
}

uint64_t sub_21E0AD8F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t *), void (*a14)(uint64_t *), uint64_t a15, int a16, int a17, int a18, int a19, uint64_t a20,int *a21,uint64_t a22,int a23,unsigned int a24)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int *v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v42;

  v30 = *(_QWORD *)(v24 + 16);
  v31 = 1866394843 * (&a20 ^ 0xEA1737F4);
  a20 = a15;
  LODWORD(v42) = v31;
  HIDWORD(v42) = v27 - 769 + v31;
  a21 = (int *)(__PAIR64__(HIDWORD(v42), v31) ^ 0x6D26F557);
  v29(&a20);
  v32 = *v28;
  v33 = (2 * *v28 - 266594554) & 0xFC724520;
  v34 = 1990461019 * ((1195167977 - (&a20 | 0x473CD0E9) + (&a20 | 0xB8C32F16)) ^ 0x97278D9F);
  LODWORD(a20) = v27 + 419026715 - v34;
  a21 = (int *)(v25 + 0x45B1DCC52CA4FEF2);
  LODWORD(a22) = v32 - v34 - 163107309 - v33;
  sub_21E0E3ABC((uint64_t)&a20);
  v35 = *(_DWORD *)(v25 - 0x195CA6660D03472CLL);
  v36 = 1990461019 * ((&a20 & 0x7CFBD336 | ~(&a20 | 0x7CFBD336)) ^ 0xACE08E40);
  LODWORD(a20) = v27 + 419026715 - v36;
  a21 = (int *)(v25 + 0x45B1DCC52CA4FEF6);
  LODWORD(a22) = v35 - v36 - 163107309 - ((2 * v35 - 266594554) & 0xFC724520);
  sub_21E0E3ABC((uint64_t)&a20);
  v37 = 1734664879 * ((&a20 - 270705894 - 2 * (&a20 & 0xEFDD5B1A)) ^ 0xC0067300);
  LODWORD(a20) = 1729118973 - v37;
  a23 = v27 - v37 - 424;
  a24 = v37 - 1052724817;
  a21 = &a16;
  a22 = a15;
  a13(&a20);
  *(_DWORD *)(v25 - 0x195CA6660D034740) += a16;
  *(_DWORD *)(v25 - 0x195CA6660D03473CLL) += a17;
  *(_DWORD *)(v25 - 0x195CA6660D034738) += a18;
  *(_DWORD *)(v25 - 0x195CA6660D034734) += a19;
  a22 = v25 + 0x4041F0FC79A2F99ELL;
  a20 = a15;
  LODWORD(a21) = v27
               + 1062498540
               + 1734664879 * ((&a20 & 0x6EEEC58C | ~(&a20 | 0x6EEEC58C)) ^ 0xBECA1269);
  a14(&a20);
  v38 = 1866394843
      * ((((&a20 | 0x61EB0458) ^ 0xFFFFFFFE) - (~&a20 | 0x9E14FBA7)) ^ 0x7403CC53);
  a20 = v25 - 0x195CA6660D034740;
  LODWORD(a21) = v38 ^ 0x6D26F54D;
  HIDWORD(a21) = v27 - 769 + v38;
  v29(&a20);
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D171) = *(_BYTE *)(v25 - 0x195CA6660D034740)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034740)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D170) = *(_BYTE *)(v25 - 0x195CA6660D03473FLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473FLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16FLL) = *(_BYTE *)(v25 - 0x195CA6660D03473ELL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473ELL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16ELL) = *(_BYTE *)(v25 - 0x195CA6660D03473DLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473DLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16DLL) = *(_BYTE *)(v25 - 0x195CA6660D03473CLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473CLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16CLL) = *(_BYTE *)(v25 - 0x195CA6660D03473BLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473BLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16BLL) = *(_BYTE *)(v25 - 0x195CA6660D03473ALL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473ALL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16ALL) = *(_BYTE *)(v25 - 0x195CA6660D034739)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034739)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D169) = *(_BYTE *)(v25 - 0x195CA6660D034738)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034738)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D168) = *(_BYTE *)(v25 - 0x195CA6660D034737)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034737)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D167) = *(_BYTE *)(v25 - 0x195CA6660D034736)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034736)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D166) = *(_BYTE *)(v25 - 0x195CA6660D034735)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034735)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D165) = *(_BYTE *)(v25 - 0x195CA6660D034734)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034734)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D164) = *(_BYTE *)(v25 - 0x195CA6660D034733)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034733)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D163) = *(_BYTE *)(v25 - 0x195CA6660D034732)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034732)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D162) = *(_BYTE *)(v25 - 0x195CA6660D034731)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034731)) & 0x64)
                                         + 50;
  a21 = (int *)(v42 ^ 0x6D26F54D);
  a20 = v25 - 0x195CA6660D034740;
  v29(&a20);
  LODWORD(a21) = v27
               + 1062498540
               + 1734664879
               * ((804230334
                 - (&a20 ^ 0x123B3484 | 0x2FEF94BE)
                 + (&a20 ^ 0x123B3484 | 0xD0106B41)) ^ 0xEDF077DF);
  a22 = v25 + 0x4041F0FC79A2F99ELL;
  a20 = a15;
  a14(&a20);
  v39 = 1866394843 * ((&a20 + 1994524272 - 2 * (&a20 & 0x76E20670)) ^ 0x9CF53184);
  LODWORD(a21) = v39 ^ 0x6D26F54D;
  HIDWORD(a21) = v27 - 769 + v39;
  a20 = v25 - 0x195CA6660D034740;
  v40 = ((uint64_t (*)(uint64_t *))v29)(&a20);
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16DLL) = *(_BYTE *)(v25 - 0x195CA6660D034740)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034740)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16CLL) = *(_BYTE *)(v25 - 0x195CA6660D03473FLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473FLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16BLL) = *(_BYTE *)(v25 - 0x195CA6660D03473ELL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473ELL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D16ALL) = *(_BYTE *)(v25 - 0x195CA6660D03473DLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473DLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D169) = *(_BYTE *)(v25 - 0x195CA6660D03473CLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473CLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D168) = *(_BYTE *)(v25 - 0x195CA6660D03473BLL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473BLL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D167) = *(_BYTE *)(v25 - 0x195CA6660D03473ALL)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D03473ALL)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D166) = *(_BYTE *)(v25 - 0x195CA6660D034739)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034739)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D165) = *(_BYTE *)(v25 - 0x195CA6660D034738)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034738)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D164) = *(_BYTE *)(v25 - 0x195CA6660D034737)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034737)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D163) = *(_BYTE *)(v25 - 0x195CA6660D034736)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034736)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D162) = *(_BYTE *)(v25 - 0x195CA6660D034735)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034735)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D161) = *(_BYTE *)(v25 - 0x195CA6660D034734)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034734)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D160) = *(_BYTE *)(v25 - 0x195CA6660D034733)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034733)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D15FLL) = *(_BYTE *)(v25 - 0x195CA6660D034732)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034732)) & 0x64)
                                         + 50;
  *(_BYTE *)(v30 - 0x1A5B77A59FD9D15ELL) = *(_BYTE *)(v25 - 0x195CA6660D034731)
                                         - ((2 * *(_BYTE *)(v25 - 0x195CA6660D034731)) & 0x64)
                                         + 50;
  *(_OWORD *)(v25 - 0x195CA6660D034740) = 0u;
  *v28 = 133297277;
  *(_DWORD *)(v25 - 0x195CA6660D03472CLL) = 133297277;
  *(_OWORD *)(v25 - 0x195CA6660D034728) = 0u;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((3620 * ((((v27 + 2136) | 0x52u) ^ 0xCCFLL) == 64)) ^ v27))
                                          - 12))(v40);
}

void sub_21E0AE438(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v1 = 2009815553 * ((~(_DWORD)a1 & 0x903E0269 | a1 & 0x6FC1FD96) ^ 0x61352C2C);
  v2 = *(_DWORD *)(a1 + 24) + v1;
  v3 = *(_DWORD *)(a1 + 56) - v1;
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_DWORD *)(a1 + 20) - v1;
  v7 = 1988622253 * (((&v8 | 0x4D930F29) + (~&v8 | 0xB26CF0D6)) ^ 0xBB8B4F88);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = v4;
  v9 = v5;
  v10 = v7 ^ (v3 + 1295180447);
  v11 = v5;
  v15 = 103024415 * v6 - v7 + 886374379;
  v8 = v2 - v7 - 1814973049;
  sub_21E0DFA68((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_21E0AE5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, int a13, unint64_t *a14, int a15)
{
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  unsigned int v23;
  char v24;
  uint64_t v25;

  v23 = 1328090399
      * (((&a10 | 0xAA2BCC61) - &a10 + (&a10 & 0x55D43398)) ^ 0x55F8A85B);
  v24 = -7 * (*v15 ^ v22) + 97;
  a13 = v20 + v23 - 953327351;
  a12 = ((((v21 - 65) | 0x80) ^ v24 ^ 0x42) + ((2 * v24) & 0x96) + 120) ^ (31
                                                                         * (((&a10 | 0x61)
                                                                           - &a10
                                                                           + (&a10 & 0x98)) ^ 0x5B));
  a11 = v21 - v23 + 1682;
  a10 = v19;
  a14 = &STACK[0x1A8CE34870D52A7E];
  v25 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v17 + 8 * (v21 - 1298)) - 12))(&a10);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((195 * (a15 != v16)) ^ v21)) - 8))(v25);
}

uint64_t sub_21E0AE6A4()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((11
                                          * (((((v2 + 538) ^ 0x926) - 628859294) ^ (24 * ((v2 + 538) ^ 0x926u))) + v0 < 0xFFFFFFFE)) ^ (v2 + 538)))
                            - 4))();
}

uint64_t sub_21E0AE6F0@<X0>(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  a3 = v9 - 1292559617 * ((2 * (&a3 & 0x432A4A38) - &a3 - 1126844990) ^ 0x1B86DDAB) - 962;
  a5 = a1;
  a6 = a2;
  v10 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v7 + 8 * (v9 ^ 0x6A1)) - 4))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * (((a4 != v6) * ((v9 + 345) ^ 0x73F)) ^ v9))
                                          - ((3 * (v9 ^ 0x4B3u)) ^ 0x78DLL)))(v10);
}

uint64_t sub_21E0AE798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;

  v6 = (v3 + 470) ^ (225134719 * (&v6 ^ 0x16F0452A));
  v7 = a1;
  result = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v2 + 8 * (v3 ^ 0x618)) - 8))(&v6);
  *(_DWORD *)(v1 + 16) = v4;
  return result;
}

void sub_21E0AE85C(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_21E0AE99C(uint64_t a1)
{
  __asm { BR              X15 }
}

uint64_t sub_21E0AFE7C@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(v3 + (a1 + v5)) = *(_BYTE *)(a3 + (a1 + v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((3900 * (a1 - 1 == v4)) ^ (v6 + a2 + 854))) - 8))();
}

void sub_21E0AFEBC(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 2009815553 * (a1 ^ 0xF10B2E45);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1E37347F5E569483) + 1659920818;
  v3 = *(_DWORD *)(a1 + 56) + v1 - 2071881859;
  v4 = v2 < 0xD384D3EE;
  v5 = v2 > v3;
  if (v3 < 0xD384D3EE != v4)
    v5 = v4;
  __asm { BR              X10 }
}

uint64_t sub_21E0AFF94(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + (v2 - 1888776765));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((3598
                                * (((v4 - 1662466726 + (~(2 * v4) | 0xFFFFFF4D)) & 0x1F) != ((v3 - 1485) | 0xB2A) - 2980)) ^ v3)))();
}

uint64_t sub_21E0AFFF4()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = ((v3 - 1498) ^ 0x69463C0A) + v2;
  v5 = v4 < 0xD9DAAC15;
  v6 = v4 > v0 - 1965592668;
  if ((v0 - 1965592668) < 0xD9DAAC15 != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1804 * !v6) ^ v3)) - 4))();
}

uint64_t sub_21E0B005C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  v6 = *(unsigned __int8 *)(v1 + (v3 + v4 + 1877));
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v2 + 8 * (int)((2556 * (v6 >> 7)) ^ v5)) - 4))(a1, ((((v5 - 712) | 0x8A2) - 2556) & (2 * v6)) + (v6 ^ 0x7FFAFFD7) - 336212034, (v3 - 1628393946));
}

uint64_t sub_21E0B00C0()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((2047
                                          * (((v2 - 2859) & (v1 + 41) ^ 0xD5FE7F7E)
                                           + ((2 * (v1 + 41)) & 0xFC)
                                           + 704741505 < 4)) ^ v2))
                            - 4))();
}

uint64_t sub_21E0B0114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  _BOOL4 v12;
  _BOOL4 v13;

  v10 = v8 + a6 + 1087122875;
  v11 = ((2 * (v9 - 1447)) ^ 0x385BEF05) + v6;
  v12 = v10 < 0x875F1F74;
  v13 = v10 > v11;
  if (v12 != v11 < 0x875F1F74)
    v13 = v12;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v13 * (v9 - 2908)) ^ (v9 - 1447))))();
}

uint64_t sub_21E0B0184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;

  v11 = *(unsigned __int8 *)(v6 + (((v10 ^ 0x9C0) + 1508) ^ v9) + v8);
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                      + 8
                                                                      * ((22
                                                                        * (a6 + 2139616239 == ((((v10 ^ 0x9C0) - 1190) | 0x888) ^ 0x55867AC6))) ^ v10 ^ 0x9C0))
                                                          - 4))(a1, (v11 ^ 0x7BF3EFDF) - 268640330 + ((2 * v11) & 0xFFFFFFBF), (a5 + v8 + 1));
}

uint64_t sub_21E0B020C(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;

  v13 = (*(unsigned __int8 *)(v7 + (v10 + v9 + 1879)) | (a2 << 8)) + 254831360;
  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * ((49 * (v11 + v12 + a4 != 0)) ^ (a7 - 15)))
                                                  - 4))(a1, ((a7 + 426517011) & 0xE693DFEE ^ 0x6FF8F477 ^ v13) - 67645512 + ((2 * v13) & 0xDFF1FFBA));
}

void sub_21E0B0298()
{
  JUMPOUT(0x21E0B0260);
}

uint64_t sub_21E0B02A4(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = a2 + v4 + v6 + v5 - 923652440 + 120279183;
  v9 = v2 + 865993748;
  v10 = (v9 < 0x82A14085) ^ (v8 < 0x82A14085);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x82A14085;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((!v11 | (16 * !v11)) ^ (v7 + 441))) - 8))();
}

uint64_t *sub_21E0B0324@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *result;
  v9 = result[5];
  v8 = result[6];
  *a4 = v5 - 182549945;
  *(_DWORD *)(v9 - 0x3C7D72D8717BE438) = v6;
  *(_DWORD *)(v7 - 0xA3B51BBC90DC007) = a2;
  *(_QWORD *)(v8 - 0x34AD7F4684A226DBLL) = v4 + (a3 - 260382817);
  *((_DWORD *)result + 2) = 939001227;
  return result;
}

void sub_21E0B039C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = 1734664879 * (((a1 | 0x31D048F7) - (a1 & 0x31D048F7)) ^ 0x1E0B60ED);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  v3 = (*(_BYTE *)(a1 + 28) ^ v1);
  ((void (*)(char *, void (*)()))*(&off_24E21C7C0 + v2 - 1323))((char *)*(&off_24E21C7C0 + v2 - 1415) - 8, sub_21E0DDB70);
  v5 = *(_QWORD *)((char *)*(&off_24E21C7C0 + v2 - 1483) - 4);
  v4 = v2 + 1990461019 * (&v4 ^ 0x2FE4A289) + 9;
  sub_21E09BC50((uint64_t)&v4);
  __asm { BR              X8 }
}

uint64_t sub_21E0B04B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17)
{
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v21 = 1503746353 * (((~&a16 | 0xCB1195D4) + (&a16 | 0x34EE6A2B)) ^ 0x128FA89C);
  a16 = v18 - v21 - 424;
  a17 = v21 + 90;
  sub_21E0C99CC((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * ((3642 * (**(_DWORD **)(v20 + 8 * (v17 ^ 0x3B1)) == ((v17 + 707) ^ 0x573) - 798)) ^ v17))
                                                                                                - 8))(v22, v23, v24, v25, v26, v27, v28);
}

uint64_t sub_21E0B0560@<X0>(int a1@<W8>)
{
  uint64_t *v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  unsigned int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  unsigned int v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[20];
  _BYTE v23[150];

  v8 = *(unsigned int **)(v6 + 8 * (a1 - 1343));
  v9 = *v8;
  v10 = *(_QWORD *)(v6 + 8 * (a1 - 1279));
  v11 = *(_BYTE **)(v10 - 4);
  v23[0] = *v11 - 37;
  v23[1] = v11[1] - 37;
  v23[2] = v11[2] - 37;
  v23[3] = v11[3] - 37;
  v23[4] = v11[4] - 37;
  v23[5] = v11[5] - 37;
  v23[6] = v11[6] - 37;
  v23[7] = v11[7] - 37;
  v23[8] = v11[8] - 37;
  v23[9] = v11[9] - 37;
  v23[10] = v11[10] - 37;
  v23[11] = v11[11] - 37;
  v23[12] = v11[12] - 37;
  v23[13] = v11[13] - 37;
  v23[14] = v11[14] - 37;
  v23[15] = v11[15] - 37;
  v23[16] = v11[16] - 37;
  v23[17] = v11[17] - 37;
  v23[18] = v11[18] - 37;
  v23[19] = v11[19] - 37;
  v23[20] = v11[20] - 37;
  v23[21] = v11[21] - 37;
  v12 = *(_BYTE **)(v10 - 4);
  v23[22] = v12[22] - 37;
  v23[23] = v12[23] - 37;
  v23[24] = v12[24] - 37;
  v23[25] = v12[25] - 37;
  v23[26] = v12[26] - 37;
  v23[27] = v12[27] - 37;
  v23[28] = v12[28] - 37;
  v23[29] = v12[29] - 37;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 ^ 0x68D));
  v14 = v13(v9, v23, v2);
  v15 = ((2 * v14) & 0xE97FF7CE) + (v14 ^ 0xF4BFFBE7);
  if (v15 != -188744729)
  {
    if (v15 == -188743627)
    {
      v16 = *v8;
      v17 = *(_BYTE **)(*(_QWORD *)(v6 + 8 * (v4 ^ 0x7EC)) - 4);
      v22[0] = *v17 - 39;
      v22[1] = v17[1] - 39;
      v22[2] = v17[2] - 39;
      v22[3] = v17[3] - 39;
      v22[4] = v17[4] - 39;
      v22[5] = v17[5] - 39;
      v22[6] = v17[6] - 39;
      v22[7] = v17[7] - 39;
      v22[8] = v17[8] - 39;
      v22[9] = v17[9] - 39;
      v22[10] = v17[10] - 39;
      v22[11] = v17[11] - 39;
      v22[12] = v17[12] - 39;
      v22[13] = v17[13] - 39;
      v22[14] = v17[14] - 39;
      v22[15] = v17[15] - 39;
      v22[16] = v17[16] - 39;
      v22[17] = v17[17] - 39;
      v22[18] = v17[18] - 39;
      v22[19] = v17[19] - 39;
      v18 = v13(v16, v22, v2);
      v19 = (2 * v18) & 0xA379F7AE;
      v15 = (v18 ^ 0xD1BCFBD7) + 2128598892;
    }
    else
    {
      v19 = 1541199708;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v7 + 380) |= v4 - 1631;
  *(_DWORD *)(v7 + 80) = 1107898699;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 ^ 0x72E)))(*v2, v7 + 368, v7 + 372, v7 + 376, v3);
  v21 = *v1;
  *(_DWORD *)(v1[2] - 0x3B8F6B7399CE8EC4) = *v2;
  *(_DWORD *)(v21 - 0x6E143BFCC243FBA3) = *v3 - ((*v3 << (73 * ((v4 - 79) ^ 0x1B) - 108)) & 0x7EB84A1E) - 1084480241;
  *((_DWORD *)v1 + 6) = 939001227;
  return result;
}

void sub_21E0B09BC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) + 1948972247 * ((a1 - 63361569 - 2 * (a1 & 0xFC392DDF)) ^ 0x49A7D831);
  __asm { BR              X10 }
}

void sub_21E0B0AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_DWORD *)(a3 + v3) = 201714705;
}

void sub_21E0B1A78(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 + 1866394843 * ((a1 & 0x7DC4DC73 | ~(a1 | 0x7DC4DC73)) ^ 0x682C1478);
  __asm { BR              X15 }
}

uint64_t sub_21E0B1BA8(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v4 + 8 * (a2 ^ ((v3 == 0xA3DF39A0) * a3))) - 4))(a1, 1680193709);
}

uint64_t sub_21E0B1C00(uint64_t a1, int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  _BOOL4 v16;
  _BOOL4 v17;

  *(_BYTE *)(v12 + (a2 - 1680193709)) = *(_BYTE *)(v7 + ((a2 - 1680193709) & 0xFLL)) ^ *(_BYTE *)(v4 + (a2 - 1680193709)) ^ *(_BYTE *)(v6 + ((a2 - 1680193709) & 0xFLL)) ^ *(_BYTE *)(((a2 - 1680193709) & 0xFLL) + v5 + 2) ^ (75 * ((a2 + 83) & 0xF));
  v13 = a2 + 635931413;
  v14 = ((v8 + 1516) ^ 0xBB0u) + a2;
  v15 = (v9 > v3) ^ (v13 < v2);
  v16 = v13 < v10;
  if (v15)
    v17 = v9 > v3;
  else
    v17 = v16;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v11 + 8 * ((2167 * v17) ^ v8)) - 12))(a1, v14);
}

uint64_t sub_21E0B1C98()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v0 ^ (103
                                               * (((((v0 + 504277711) & 0xE1F15FBB) + 1186870351) ^ (2 * v1) & 0xDEFFCC1E)
                                                + (v1 ^ 0x4CA0DFAF)
                                                + 397079622 != 120248917))))
                            - 4))();
}

uint64_t sub_21E0B1D14(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((2701
                                          * (a3 + a2 + 276830705 >= 751 * ((v3 + 1567) ^ 0x747)
                                                                  + 11 * ((v3 + 1567) ^ 0x790u)
                                                                  - 3837)) ^ (v3 + 1567)))
                            - 4))();
}

uint64_t sub_21E0B1D78()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((((v0 + 841) ^ 0xE62) - 1799) * (v1 >> 4 == 251133537)) ^ v0))
                            - 12))();
}

uint64_t sub_21E0B1DB0(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL4 v20;

  v12 = (a3 + a2 + a4) + v11;
  v13 = (((a7 - 1135237998) & 0x43AA557B) - 324) & (a3 + a2);
  v14 = v9 - v12;
  v15 = (v13 | v8) - v12;
  v16 = (v13 | v7) - v12;
  v20 = (unint64_t)(a6 - v11 - 0x18EF69DD114E908DLL) > 0xF
     && (unint64_t)(v14 + v13) > 0xF
     && v15 > 0xF
     && v16 + 2 >= ((3 * (a7 ^ 0x448u)) ^ 0x937uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((49 * v20) ^ a7)) - 4))();
}

uint64_t sub_21E0B1E58()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 < ((v1 + 12) ^ 0x14Fu)) * ((71 * (v1 ^ 0x172)) ^ 0x9D0)) ^ v1)))();
}

uint64_t sub_21E0B1E98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;
  int8x16x4_t v56;
  int8x16x4_t v57;

  v56.val[1].i64[0] = v51 & 0xF;
  v56.val[1].i64[1] = (v51 - 1) & 0xF;
  v56.val[2].i64[0] = (v51 + 14) & 0xF;
  v56.val[2].i64[1] = (v51 + 13) & 0xF;
  v56.val[3].i64[0] = (v51 + 12) & 0xF;
  v56.val[3].i64[1] = (v51 + 11) & 0xF;
  v52.i64[0] = 0x4B4B4B4B4B4B4B4BLL;
  v52.i64[1] = 0x4B4B4B4B4B4B4B4BLL;
  v56.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a4) & 0xF;
  v56.val[0].i64[1] = (v51 + 1) & 0xF;
  v53.i64[0] = vqtbl4q_s8(v56, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v57.val[0].i64[1] = (v51 + 9) & 0xF;
  v57.val[1].i64[1] = (v51 + 7) & 0xF;
  v57.val[2].i64[1] = (v51 + 5) & 0xF;
  v57.val[3].i64[1] = (v51 + 3) & 0xF;
  v57.val[0].i64[0] = (v51 + 10) & 0xF;
  v57.val[1].i64[0] = (v51 + 8) & 0xF;
  v57.val[2].i64[0] = (v51 + 6) & 0xF;
  v57.val[3].i64[0] = (v51 + 4) & 0xF;
  v53.i64[1] = vqtbl4q_s8(v57, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v54 = vrev64q_s8(vmulq_s8(v53, v52));
  *(int8x16_t *)(a46 - 15 + (a3 + a2 + a4)) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v50 + v56.val[0].i64[0] - 15), *(int8x16_t *)(v47 - 15 + (a3 + a2 + a4))), veorq_s8(*(int8x16_t *)(v49 + v56.val[0].i64[0] - 15), *(int8x16_t *)(v56.val[0].i64[0] + v48 - 13))), vextq_s8(v54, v54, 8uLL));
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a45 + 8 * (int)((((v46 & 0xFFFFFFF0) == 16) * ((a7 ^ 0x607) + 238)) ^ a7)) - 4))(a1, a2, a3, a4, v47 - 15, v46 & 0xFFFFFFF0, a7, a7 ^ 0x607, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

void sub_21E0B1FFC()
{
  JUMPOUT(0x21E0B1F84);
}

uint64_t sub_21E0B2008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (a8 ^ (3635 * (v8 != a6)))) - (((a8 ^ 0x6FCu) + 2573) ^ 0xBB9)))();
}

uint64_t sub_21E0B203C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v6
                                                                               + 8
                                                                               * ((1865 * ((v4 & 8) == (v5 ^ 0x1A4))) ^ v5)))(a1, a2, a3, a4, v5 ^ 0x883u);
}

uint64_t sub_21E0B2070(uint64_t a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int v53;
  int v54;
  char v55;
  uint64_t v56;
  int8x16x4_t v58;

  v53 = -8 - a6;
  v54 = a3 + a2;
  v55 = a3 + a2 + v46;
  v56 = (v54 + a4 + v53 + 8);
  v58.val[0].i64[0] = ((_BYTE)v54 + (_BYTE)a4 + (_BYTE)v53 + 8) & 0xF;
  v58.val[0].i64[1] = (v55 - 71 + (_BYTE)v53 + 8) & 0xF;
  v58.val[1].i64[0] = (v51 + (_BYTE)v53 + 8) & 0xF;
  v58.val[1].i64[1] = (v55 - 57 + (_BYTE)v53 + 8) & 0xF;
  v58.val[2].i64[0] = (v55 - 58 + (_BYTE)v53 + 8) & 0xF;
  v58.val[2].i64[1] = (v55 + (_BYTE)v53 + 7 * (a5 ^ 0xF4) + 8) & 0xF;
  v58.val[3].i64[0] = (v55 - 60 + (_BYTE)v53 + 8) & 0xF;
  v58.val[3].i64[1] = (v55 - 61 + (_BYTE)v53 + 8) & 0xF;
  *(int8x8_t *)(v52 - 7 + v56) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v50 + (v56 & 0xF) - 7), *(int8x8_t *)(v47 - 7 + v56)), veor_s8(*(int8x8_t *)(v49 + (v56 & 0xF) - 7), *(int8x8_t *)((v56 & 0xF) + v48 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v58, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x4B4B4B4B4B4B4B4BLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a45 + 8 * ((1094 * (-(v45 & 0xFFFFFFF8) == v53)) ^ (a5 + 27)))
                                         - 8))((__n128)xmmword_21E17F900);
}

void sub_21E0B21DC()
{
  JUMPOUT(0x21E0B20DCLL);
}

uint64_t sub_21E0B21E4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42,int a43)
{
  uint64_t v43;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v43
                                                      + 8
                                                      * ((27 * (((a43 == a42) ^ (11 * (a1 ^ 0x10))) & 1)) ^ a1))
                                          - 12))(a11);
}

uint64_t sub_21E0B2238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = (a8 - 120250382);
  *(_BYTE *)(v14 + v15) = *(_BYTE *)(v11 + (v15 & 0xF)) ^ *(_BYTE *)(v8 + v15) ^ *(_BYTE *)(v10 + (v15 & 0xF)) ^ *(_BYTE *)((v15 & 0xF) + v9 + 2) ^ (75 * (v15 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * (((a8 - 1 != v12) * (a5 - 2309)) | (a5 - 463))) - 8))();
}

uint64_t sub_21E0B22A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int8x16_t a48)
{
  uint64_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int8x16_t v51;
  int8x16_t v52;
  int8x16_t v53;
  int8x16_t v54;

  v49 = vrev64q_s8(*(int8x16_t *)*(_QWORD *)(a1 + 24));
  v50 = vextq_s8(v49, v49, 8uLL);
  v51.i64[0] = 0xACACACACACACACACLL;
  v51.i64[1] = 0xACACACACACACACACLL;
  v52 = vandq_s8(vaddq_s8(v50, v50), v51);
  v51.i64[0] = 0xD6D6D6D6D6D6D6D6;
  v51.i64[1] = 0xD6D6D6D6D6D6D6D6;
  v53 = veorq_s8(v50, v51);
  v51.i64[0] = 0xC9C9C9C9C9C9C9C9;
  v51.i64[1] = 0xC9C9C9C9C9C9C9C9;
  v54 = vrev64q_s8(veorq_s8(vaddq_s8(vaddq_s8(v53, v51), v52), (int8x16_t)xmmword_21E17F9A0));
  a48 = vextq_s8(v54, v54, 8uLL);
  HIDWORD(a18) = 2 * a9;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 + 8 * (int)((((a7 - 981) ^ 0x5D) * (&a48 == 0)) ^ a7)) - (a7 ^ 0x1EB) + 2646))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_21E0B232C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v0 ^ 0x70) + v0 + 60) * (v1 != v3)) ^ v0)) - 12))();
}

uint64_t sub_21E0B2354()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8 * ((1606 * (((((v0 ^ 0x6F2) + 2348) ^ (v2 == 0)) & 1) == 0)) ^ v0 ^ 0x6F2))
                            - 8))();
}

uint64_t sub_21E0B2390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v44;
  uint64_t v45;
  uint64_t v46;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 + 8 * ((1606 * ((((v44 + 578) ^ (v46 == 0)) & 1) == 0)) ^ (v44 - 1770))) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44);
}

uint64_t sub_21E0B2458@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  _BOOL4 v14;

  v14 = (a11 & 0x3F6FFFF6) + (a1 ^ 0x9FB7FFFB) != -1615331333
     && (((a11 & 0xF6) + (a1 ^ 0xFB) + 5) & 0xF) == ((v11 + 2348) ^ 0xA5A);
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((99 * v14) ^ v11)) - 8))();
}

uint64_t sub_21E0B24B4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (2821 * (v0 != 0))))
                            - (v1 + 628)
                            - ((5 * (v1 ^ 0x33Cu)) ^ 0xFFFFFFFFFFFFF63CLL)))();
}

uint64_t sub_21E0B24F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,_BYTE *a46)
{
  int v46;
  unsigned __int8 *v47;
  int v48;
  unsigned __int8 *v49;
  int v50;
  char *v51;
  int v52;
  unint64_t v53;
  int v54;
  int v55;
  unsigned __int8 v56;
  char *v57;
  int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  char *v62;
  unsigned __int8 v63;
  char v64;
  char *v65;
  char v66;
  int v67;
  char v68;
  int v69;
  unsigned int v70;
  int v71;
  unint64_t v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned __int8 v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  int v86;
  uint64_t v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  unsigned __int8 v99;
  unsigned int v100;
  char *v101;
  char *v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  char *v106;
  int v107;
  int v108;
  char *v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unint64_t v171;
  unsigned int v172;
  int v173;
  int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  unsigned int v238;
  int v239;
  int v240;
  int v241;
  unsigned __int8 v242;
  int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  int v256;
  int v257;
  unint64_t v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  int v267;
  int v268;
  int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  int v303;
  unsigned int v304;
  char *v305;
  int v306;
  int v307;
  char *v308;
  int v309;
  char *v310;
  char *v311;
  int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  uint64_t v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  uint64_t v328;
  char *v329;
  unsigned int v330;
  unsigned int v331;
  uint64_t v332;
  char *v333;
  char *v334;
  int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  uint64_t v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  int v346;
  unsigned int v347;
  int v348;
  int v349;
  BOOL v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  unsigned int v354;
  char *v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  char *v360;
  char *v361;
  char *v362;
  uint64_t v363;
  unint64_t v364;
  unint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  int v372;

  v50 = (v48 - 928) | 0x12C;
  v51 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x3C4)) - 12;
  v52 = v51[v47[2] ^ 0x8BLL];
  HIDWORD(v53) = (v50 - 47) ^ v52;
  LODWORD(v53) = (v52 ^ 0x68) << 24;
  v54 = (v53 >> 27) + (~(2 * (v53 >> 27)) | 0x3B) + 99;
  v55 = (v54 >> 4) ^ (((v53 >> 27) + (~(2 * (v53 >> 27)) | 0x3B) + 99) >> 3);
  v56 = v54 ^ 0x2B ^ ((v55 ^ 0xA) - 2 * ((v55 ^ 0xA) & 7 ^ v55 & 5) + 98);
  v57 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x317)) - 8;
  v58 = v51[v47[10] ^ 0x17];
  v59 = (v58 ^ 0x6F) >> (v56 & 3);
  v60 = (v59 >> (v56 & 3 ^ 3)) ^ (32 * ~v58);
  v61 = ((v59 >> (v56 & 3 ^ 3)) ^ (32 * ~(_BYTE)v58));
  v62 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x373)) - 8;
  v63 = v60 ^ 0xA ^ (((v60 >> 4) ^ (v61 >> 3))
                   - ((2 * ((v60 >> 4) ^ (v61 >> 3))) & 0xAA)
                   - 43);
  v65 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x3E2)) - 12;
  v66 = v65[v47[1] ^ 0x19];
  if (((v66 + 55) & 0x40) != 0)
    v68 = 74;
  else
    v68 = -54;
  v64 = v57[v47[3] ^ 0xAELL];
  v69 = ((v62[*v47 ^ 0x6ELL] ^ (*v47 - ((2 * *v47) & 0xCA) + 101) ^ 0x25) << 24) | (unsigned __int16)(v56 << 8) | (((2 * v64 + 114) & 0x7E) + ((v64 - 71) ^ 0xBF)) | (((v66 + v68 - 83) ^ 0xBE) << 16);
  v361 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x317)) - 8;
  v67 = ((v62[v47[8] ^ 0x4ELL] ^ (v47[8] - ((2 * v47[8]) & 0xCA) + 101) ^ 0xA5) << 24) | (unsigned __int16)(v63 << 8) | (((v65[v47[9] ^ 0x33] + 55) ^ 0x45) << 16);
  v70 = (v67 & 0xFFFFFF00 | (v57[v47[11] ^ 0xFBLL] + 120))
      - 2 * ((v67 & 0xE0DE700 | (v57[v47[11] ^ 0xFBLL] + 120) & 0x7F) ^ (v57[v47[11] ^ 0xFBLL] + 120) & 2);
  v71 = v51[v47[6] ^ 0x59];
  HIDWORD(v72) = ~v71;
  LODWORD(v72) = (v71 ^ 0x68) << 24;
  v73 = (v72 >> 27) - ((2 * (v72 >> 27)) & 0xFFFFFFA6) - 45;
  v74 = (v73 >> 4) ^ (((v72 >> 27) - ((2 * (v72 >> 27)) & 0xA6) - 45) >> 3);
  v75 = (v57[v47[7] ^ 0xB6] + 120) | ((v62[v47[4] ^ 0x40] ^ (v47[4]
                                                                                                 - ((2 * v47[4]) & 0xCA)
                                                                                                 + 101) ^ 0x1A) << 24) | ((v73 ^ 0x6B ^ ((v74 ^ 0x17) - 2 * ((v74 ^ 0x17) & 0xFB ^ v74 & 8) - 45)) << 8);
  v362 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x3C4)) - 12;
  v76 = v51[v47[14] ^ 0x45];
  HIDWORD(v72) = ~v76;
  LODWORD(v72) = (v76 ^ 0x68) << 24;
  v77 = (v72 >> 27) - ((2 * (v72 >> 27)) & 0xFFFFFF84) - 62;
  v78 = (v77 >> 4) ^ (((v72 >> 27) - ((2 * (v72 >> 27)) & 0x84) - 62) >> 3);
  v360 = (char *)*(&off_24E21C7C0 + (v48 ^ 0x3E2)) - 12;
  v79 = ((((v70 - 1911691395) ^ 0x71F218E4) + ((v70 - 1911691395) ^ 0x8E0DE77D) + 1) ^ 0xFFFFFFFC)
      + ((v70 - 1911691395) ^ 0x8E0DE77D);
  v369 = (v75 & 0xFF00FFFF | (((v65[v47[5] ^ 0xD3] + 55) ^ 0xA6) << 16)) ^ 0xC96B161;
  v371 = ((v57[v47[15] ^ 0xC2] + 120) | ((v62[v47[12] ^ 0x2ALL] ^ (v47[12] - ((2 * v47[12]) & 0xCA) + 101) ^ 0xCE) << 24) | (((v65[v47[13] ^ 0x49] + 55) ^ 0xE5) << 16) | ((v77 ^ 0xA3 ^ ((v78 ^ 0x14) - ((2 * v78) & 4) - 62)) << 8)) ^ 0x7E04AEF1;
  v370 = v69 ^ 0xD43B59E9;
  HIDWORD(a12) = v46 + 1615331333;
  v372 = v79 - ((2 * v79) & 0x452FA0E2) - 1567109007;
  HIDWORD(a23) = (v48 - 928) | 0x12C;
  HIDWORD(v366) = v50 ^ 0x28C;
  v368 = (((v50 - 294) | 0xA52) + (v50 ^ 0x3B44EC3B)) ^ 0x3B44F760u;
  v80 = v65[v49[5] ^ 0x36] + 55;
  v367 = v57[v49[v368] ^ 0x39];
  v81 = v51[v49[6] ^ 0xE9];
  HIDWORD(v72) = ~v81;
  LODWORD(v72) = (v81 ^ 0x68) << 24;
  v82 = (v72 >> 27) - ((2 * (v72 >> 27)) & 0x48) - 92;
  v83 = ((v82 ^ 0xA4) >> (v367 & 1)) >> !(v367 & 1);
  v84 = (v83 - ((2 * v83) & 0x48) - 92) ^ v82;
  v85 = ((v80 ^ 0x8A) << 16) | ((v82 ^ 0xDA ^ ((v84 >> 3)
                                                                               - ((v84 >> 2) & 8)
                                                                               - 92)) << 8);
  v86 = (v49[4] - ((2 * v49[4]) & 0x1CA) + 101) ^ v62[v49[4] ^ 0xB2];
  LODWORD(v72) = __ROR4__(-300087381, 5) ^ 0x3F70E83D;
  HIDWORD(v72) = v72;
  v87 = v49[(v72 >> 27)];
  v88 = (v87 - ((2 * v87) & 0x1CA) + 101) ^ v62[v87 ^ 0xD1];
  v89 = v51[v49[14] ^ 0x86];
  HIDWORD(v72) = ~v89;
  LODWORD(v72) = (v89 ^ 0x68) << 24;
  v90 = v85 | (v57[v49[7] ^ 0x6FLL] + 120) | ((v86 ^ 0xF2) << 24);
  v91 = (v72 >> 27) + (~(2 * (v72 >> 27)) | 3) + 127;
  v92 = (v91 >> 4) ^ (((v72 >> 27) + (~(2 * (v72 >> 27)) | 3) + 127) >> 3);
  v93 = ((v92 ^ 0xFFFFFF88) + ((2 * v92) & 0x3C ^ 0xFFFFFFEF) - 1) ^ v91;
  v94 = v51[v49[2] ^ 0x96];
  HIDWORD(v72) = ~v94;
  LODWORD(v72) = (v94 ^ 0x68) << 24;
  v95 = ((v62[*v49 ^ 0xCCLL] ^ (*v49 - ((2 * *v49) & 0xCA) + 101) ^ 0xC2) << 24) | ((((v72 >> 27) ^ ((v72 >> 27) >> 4) ^ ((v72 >> 27) >> 3)) ^ 0xE8) << 8) | (((v360[v49[1] ^ 0xD7] + 55) ^ 0xAA) << 16);
  v96 = v51[v49[10] ^ 0xF0];
  HIDWORD(v72) = ~v96;
  LODWORD(v72) = (v96 ^ 0x68) << 24;
  LODWORD(v87) = (v72 >> 27) - ((2 * (v72 >> 27)) & 0x3A) - 99;
  v97 = (v87 >> 4) ^ (((v72 >> 27) - ((2 * (v72 >> 27)) & 0x3A) - 99) >> 3) ^ 0x1A;
  LOBYTE(v92) = (v97 - ((2 * v97) & 0xFB) - 99) ^ v87;
  v98 = (v49[8] + (~(2 * v49[8]) | 0x35) + 102) ^ v62[v49[8] ^ 0x42];
  v99 = v57[v49[3] ^ 0x8ELL] + 120;
  v100 = (v95 & 0xFFFFFF00 | v99) + 958306133 - 2 * ((v95 & 0x391E9700 | v99 & 0x5D) ^ v99 & 8);
  v101 = (char *)*(&off_24E21C7C0 + (v50 ^ 6)) - 12;
  LODWORD(v87) = *(_DWORD *)&v101[4 * (HIBYTE(v100) ^ 0xF7)];
  HIDWORD(v72) = v87 ^ 0x78DB;
  LODWORD(v72) = v87 ^ 0xC000000;
  HIDWORD(v363) = v360[v49[13] ^ 0xDBLL] + 55;
  v102 = (char *)*(&off_24E21C7C0 + (v50 ^ 0x1B7)) - 8;
  HIDWORD(v72) = (v72 >> 17) ^ 0x7799F4A0;
  LODWORD(v72) = HIDWORD(v72);
  v103 = v72 >> 15;
  v104 = (v361[v49[11] ^ 0xDLL] + 120) | (((v360[v49[9] ^ 0xBALL] + 55) ^ 0xB9) << 16) | ((v98 ^ 0xFFFFFFCF) << 24) | ((v92 ^ 0x96) << 8);
  v105 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE4(v363) ^ 0x87)];
  LODWORD(v87) = (v103 >> 1) & 0x1052DB86 ^ (v105 >> 4) & 0xE169194 ^ 0x400886;
  v106 = (char *)*(&off_24E21C7C0 + (v50 ^ 0x10C)) - 4;
  v107 = *(_DWORD *)&v106[4 * (v90 ^ 0xEC)];
  HIDWORD(v72) = v107 ^ 0x3B74BD;
  LODWORD(v72) = v107 ^ 0xD6800000;
  v108 = v72 >> 23;
  v109 = (char *)*(&off_24E21C7C0 + v50 - 277) - 8;
  v110 = v105 ^ *(_DWORD *)&v109[4 * (v92 ^ 0xD4)] ^ v103 ^ v108;
  v364 = __PAIR64__(v100, v104);
  v111 = *(_DWORD *)&v106[4 * (v104 ^ 0xD7)];
  HIDWORD(v72) = v111 ^ 0x3B74BD;
  LODWORD(v72) = v111 ^ 0xD6800000;
  v112 = v110 ^ (v87 + 1528011181 - ((2 * v87) & 0x34253308)) ^ (-761261126 * v108);
  v113 = *(_DWORD *)&v101[4 * (v86 ^ 0x47)] ^ 0xB990CED5;
  v114 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v100) ^ 0x4E)];
  v115 = (v114 >> 4) & 0xE169194 ^ (v113 >> 1) & 0x1052DB86;
  v365 = __PAIR64__(v90, v93);
  v116 = *(_DWORD *)&v109[4 * (v93 ^ 0x7B)] ^ v113 ^ v114 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23)) ^ (v115 + 1528011181 - 2 * (v115 & 0x1A129986 ^ (v113 >> 1) & 2));
  v117 = *(_DWORD *)&v101[4 * (v98 ^ 0x7F)] ^ 0xB990CED5;
  v118 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (v80 ^ 0x25)];
  v119 = (v118 >> 4) & 0xE169194 ^ (v117 >> 1) & 0x1052DB86;
  LODWORD(v363) = (v367 + 120);
  v120 = *(_DWORD *)&v106[4 * (v363 ^ 0x9E)];
  HIDWORD(v72) = v120 ^ 0x3B74BD;
  LODWORD(v72) = v120 ^ 0xD6800000;
  v121 = *(_DWORD *)&v109[4 * (BYTE1(v100) ^ 0x2C)] ^ v117 ^ v118 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23)) ^ (v119 + 1528011181 - 2 * (v119 & 0x1A129986 ^ (v117 >> 1) & 2));
  LODWORD(v366) = v88;
  v122 = *(_DWORD *)&v101[4 * (v88 ^ 4)] ^ 0xB990CED5;
  v123 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * ((v104 ^ 0xE44A78D7) >> 16)];
  v124 = (v123 >> 4) & 0xE169194 ^ (v122 >> 1) & 0x1052DB86;
  LODWORD(v367) = 1528011182;
  v125 = v124 + 1528011182 + ~((2 * v124) & 0x34253308);
  v126 = *(_DWORD *)&v106[4 * (v99 ^ 0x76)];
  HIDWORD(v72) = v126 ^ 0x3B74BD;
  LODWORD(v72) = v126 ^ 0xD6800000;
  LOBYTE(v119) = v112 ^ 0x9F;
  v127 = ((v112 ^ 0x39D0F49F) >> 8) - (((v112 ^ 0x39D0F49F) >> 7) & 0x1E34D3A);
  v128 = *(_DWORD *)&v109[4 * (BYTE1(v90) ^ 0x95)] ^ v122 ^ v123 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23)) ^ v125;
  LODWORD(v87) = *(_DWORD *)&v106[4 * (v116 ^ 0x78)];
  HIDWORD(v72) = v87 ^ 0x3B74BD;
  LODWORD(v72) = v87 ^ 0xD6800000;
  v129 = *(_DWORD *)&v101[4 * (HIBYTE(v112) ^ 0x6D)] ^ 0xB990CED5;
  v130 = -877393068
       - 1246347769
       * *(_DWORD *)&v102[4 * (((BYTE2(v128) ^ 0xC) + (BYTE2(v128) ^ 0xFFFFFF14) + 1) ^ 0xFFFFFFFE)
                        + 4 * (BYTE2(v128) ^ 0xC)];
  v131 = *(_DWORD *)&v101[4 * (HIBYTE(v116) ^ 0x85)];
  v132 = *(_DWORD *)&v109[4 * (BYTE1(v121) ^ 0xE9)] ^ v129 ^ (1528011181
                                                            - (v129 & 0x20253308)
                                                            + ((v129 >> 1) & 0x1052DB86)) ^ v130 ^ (v72 >> 23) ^ (v130 >> 4) & 0xE169194 ^ (-761261126 * (v72 >> 23));
  LODWORD(v87) = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v112) ^ 0x37)];
  v133 = (v131 >> 1) & 0x1052DB86 ^ 0x10404302 ^ (v87 >> 4) & 0xE169194;
  v134 = *(_DWORD *)&v106[4 * (v121 ^ 0xD5)];
  HIDWORD(v72) = v134 ^ 0x3B74BD;
  LODWORD(v72) = v134 ^ 0xD6800000;
  v135 = *(_DWORD *)&v109[4 * (BYTE1(v128) ^ 0x6D)] ^ v131 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23)) ^ v87 ^ (v133 + 1528011181 - ((2 * v133) & 0x34253308));
  LODWORD(v87) = *(_DWORD *)&v101[4 * (HIBYTE(v121) ^ 0x8F)] ^ 0xB990CED5;
  v136 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v116) ^ 0xEF)];
  v137 = (v127 - 99);
  LODWORD(v87) = (((v136 >> 4) & 0xE169194 ^ v136)
                + ((v87 >> 1) & 0x1052DB86 ^ v87)
                - 2 * (((v136 >> 4) & 0xE169194 ^ v136) & ((v87 >> 1) & 0x1052DB86 ^ v87))) ^ *(_DWORD *)&v109[4 * (v137 ^ 0xA7)];
  v138 = ((v137 ^ 0xF1748323) & 0x71400035 ^ (v127 - 588142947) & 0x35 | (v137 ^ 0xF1748323) & 0x803483CA ^ (v127 - 588142947) & 0xCA) ^ 0x9D;
  v139 = v138 + 1495279561 - ((2 * v138) & 0xA2400792);
  v140 = v139 ^ 0xFDCC419B ^ v87;
  LODWORD(v87) = v87 ^ 0x5B1399AD;
  v141 = (v140 + v87 + 1) ^ ((v139 ^ 0xA6DFD836) + 1);
  LODWORD(v87) = ((v141 + 1495279561 - ((2 * v141) & 0xB2404F92)) ^ v139) + v87;
  v142 = *(_DWORD *)&v106[4 * (v128 ^ 0x1A)];
  HIDWORD(v72) = v142 ^ 0x3B74BD;
  LODWORD(v72) = v142 ^ 0xD6800000;
  v143 = (-761261126 * (v72 >> 23)) ^ (v72 >> 23) ^ v87;
  LODWORD(v87) = *(_DWORD *)&v101[4 * (HIBYTE(v128) ^ 0xDC)] ^ 0xB990CED5;
  v144 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v121) ^ 0xAA)];
  v145 = (v144 >> 4) & 0xE169194 ^ (v87 >> 1) & 0x1052DB86;
  v146 = *(_DWORD *)&v106[4 * v119];
  HIDWORD(v72) = v146 ^ 0x3B74BD;
  LODWORD(v72) = v146 ^ 0xD6800000;
  LODWORD(v87) = *(_DWORD *)&v109[4 * (BYTE1(v116) ^ 0x16)] ^ v144 ^ v87 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23));
  v147 = *(_DWORD *)&v106[4 * (v135 ^ 0x77)];
  LODWORD(v87) = v87 ^ (v145 + 1528011181 - ((2 * v145) & 0x34253308));
  HIDWORD(v72) = v147 ^ 0x3B74BD;
  LODWORD(v72) = v147 ^ 0xD6800000;
  v148 = *(_DWORD *)&v101[4 * (HIBYTE(v132) ^ 0xA7)] ^ 0xB990CED5;
  v149 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v87) ^ 0xC1)];
  v150 = *(_DWORD *)&v109[4 * (BYTE1(v143) ^ 0xA)] ^ v148 ^ v149 ^ (1528011181
                                                                  - (v148 & 0x20253308)
                                                                  + ((v148 >> 1) & 0x1052DB86)) ^ (v149 >> 4) & 0xE169194 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23));
  v151 = *(_DWORD *)&v101[4 * (HIBYTE(v135) ^ 0x2D)] ^ 0xB990CED5;
  v152 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v132) ^ 0x83)];
  v153 = (v152 >> 4) & 0xE169194 ^ (v151 >> 1) & 0x1052DB86;
  v154 = v153 + 1528011181 - 2 * (v153 & 0x1A129986 ^ (v151 >> 1) & 2);
  v155 = *(_DWORD *)&v106[4 * (v143 ^ 0x6B)];
  HIDWORD(v72) = v155 ^ 0x3B74BD;
  LODWORD(v72) = v155 ^ 0xD6800000;
  v156 = *(_DWORD *)&v109[4 * (BYTE1(v87) ^ 0xF2)] ^ v151 ^ v152 ^ (v72 >> 23) ^ v154 ^ (-761261126 * (v72 >> 23));
  v157 = *(_DWORD *)&v101[4 * (HIBYTE(v143) ^ 0xDB)] ^ 0xB990CED5;
  v158 = *(_DWORD *)&v106[4 * (v87 ^ 0xB7)];
  HIDWORD(v72) = v158 ^ 0x3B74BD;
  LODWORD(v72) = v158 ^ 0xD6800000;
  v159 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v135) ^ 0x18)];
  v160 = v157 ^ *(_DWORD *)&v109[4 * (BYTE1(v132) ^ 0xBA)] ^ v159 ^ (v159 >> 4) & 0xE169194 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23)) ^ (1528011181 - (v157 & 0x20253308) + ((v157 >> 1) & 0x1052DB86));
  LODWORD(v87) = *(_DWORD *)&v101[4 * (BYTE3(v87) ^ 0x73)] ^ 0xB990CED5;
  v161 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v143) ^ 0xB1)];
  v162 = *(_DWORD *)&v106[4 * (v132 ^ 0x61)];
  v163 = (v161 >> 4) & 0xE169194 ^ (v87 >> 1) & 0x1052DB86;
  HIDWORD(v72) = v162 ^ 0x3B74BD;
  LODWORD(v72) = v162 ^ 0xD6800000;
  v164 = *(_DWORD *)&v109[4 * (BYTE1(v135) ^ 0x39)] ^ v87 ^ (v72 >> 23) ^ (-761261126 * (v72 >> 23)) ^ v161 ^ (v163 + 1528011182 + ~((2 * v163) & 0x34253308));
  v165 = *(_DWORD *)&v101[4 * (HIBYTE(v150) ^ 0x3C)];
  v166 = (v165 >> 1) ^ 0x5CC8676A;
  v167 = v166 & 0x200 | 0x31C41119;
  if ((v166 & 0x200 & ~v165) != 0)
    v167 = 1669866034 - v167;
  v168 = v166 & 0x1052D986 ^ ((v165 ^ 0xB990CED5) - 834933017 + v167);
  v169 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v164) ^ 0x84)];
  v170 = *(_DWORD *)&v106[4 * (v156 ^ 0xBB)];
  HIDWORD(v171) = v170 ^ 0x3B74BD;
  LODWORD(v171) = v170 ^ 0xD6800000;
  v172 = v169 ^ *(_DWORD *)&v109[4 * (BYTE1(v160) ^ 8)] ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ (((v169 >> 4) & 0xE169194 ^ v168) + 1528011181 - ((2 * ((v169 >> 4) & 0xE169194 ^ v168)) & 0xB627335A));
  v173 = *(_DWORD *)&v106[4 * (v160 ^ 0xF)];
  HIDWORD(v171) = v173 ^ 0x3B74BD;
  LODWORD(v171) = v173 ^ 0xD6800000;
  v174 = *(_DWORD *)&v109[4 * (BYTE1(v164) ^ 0xD)];
  v175 = *(_DWORD *)&v101[4 * (HIBYTE(v156) ^ 0x13)] ^ 0xB990CED5;
  v176 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v150) ^ 0x79)];
  v177 = (v175 >> 1) & 0x1052DB86 ^ v175 ^ v176 ^ (v176 >> 4) & 0xE169194 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ ((v174 ^ 0x5B1399AD) - 244022493 + ((2 * v174) & 0xE2E9077C ^ 0x5DDEFCA7) + 156);
  v178 = *(_DWORD *)&v101[4 * (HIBYTE(v160) ^ 0x9E)] ^ 0xB990CED5;
  v179 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v156) ^ 0x8B)];
  v180 = (v179 >> 4) & 0xE169194 ^ (v178 >> 1) & 0x1052DB86;
  v181 = *(_DWORD *)&v106[4 * (v164 ^ 0x1A)];
  HIDWORD(v171) = v181 ^ 0x3B74BD;
  LODWORD(v171) = v181 ^ 0xD6800000;
  v182 = *(_DWORD *)&v109[4 * (BYTE1(v150) ^ 0xF)] ^ v178 ^ v179 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ (v180 + 1528011181 - 2 * (v180 & 0x1A129994 ^ (v179 >> 4) & 0x10));
  v183 = *(_DWORD *)&v101[4 * (HIBYTE(v164) ^ 0x79)] ^ 0xB990CED5;
  v184 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v160) ^ 0xCD)];
  v185 = (v184 >> 4) & 0xE169194 ^ (v183 >> 1) & 0x1052DB86;
  v186 = *(_DWORD *)&v106[4 * ((v150 ^ 0x94) - ((2 * (v150 ^ 0x94)) & 0xFFFFFFE7))
                        + 972];
  HIDWORD(v171) = v186 ^ 0x3B74BD;
  LODWORD(v171) = v186 ^ 0xD6800000;
  v187 = *(_DWORD *)&v109[4 * (((BYTE1(v156) ^ 0xFFFFFFC4) + (BYTE1(v156) ^ 1) + 1) ^ 0xFFFFFFFC)
                        + 4 * (BYTE1(v156) ^ 1)] ^ v184 ^ v183 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ (v185 + 1528011181 - 2 * (v185 & 0x1A129994 ^ (v184 >> 4) & 0x10));
  v188 = *(_DWORD *)&v102[4 * (BYTE2(v187) ^ 0xC9)];
  v189 = -1246347769 * v188 - ((1802271758 * v188 - 1754786136) & 0xD8B46510) + 940457436;
  v190 = *(_DWORD *)&v101[4 * (HIBYTE(v172) ^ 0x8E)] ^ 0xB990CED5;
  v191 = (((v189 >> 4) ^ 0x6C5A328) & 0xA129014 ^ v189 & 0x1A72D47C | ((v189 >> 4) ^ 0x6C5A328) & 0x4040180 ^ v189 & 0xE58D2B83) ^ (v190 >> 1) & 0x1052DB86;
  v192 = *(_DWORD *)&v109[4 * (BYTE1(v182) ^ 0x45)] ^ v190 ^ ((v191 ^ 0x6C5A3288)
                                                            + 1528011181
                                                            - 2 * ((v191 ^ 0x6C5A3288) & 0x5B1399BF ^ v191 & 0x12));
  v193 = *(_DWORD *)&v106[4 * (v177 ^ 0x1A)];
  HIDWORD(v171) = v193 ^ 0x3B74BD;
  LODWORD(v171) = v193 ^ 0xD6800000;
  v194 = (-761261126 * (v171 >> 23)) ^ (v171 >> 23);
  v195 = v192 ^ 0xF17483BE;
  v196 = ((v192 ^ 0xF17483BE) + (v194 ^ 0x4C9A53F0 ^ (v192 + 1108422577 - ((2 * v192) & 0x84225F62))) + 1) ^ -v194;
  v197 = v194 ^ 0x42112FB1 ^ (v196 + 1108422577 - ((2 * v196) & 0x84225F62));
  BYTE1(v196) = BYTE1(v177) ^ 0xC1;
  v198 = v197 + v195;
  v199 = *(_DWORD *)&v101[4 * ((v177 ^ 0xFEE1C1E9) >> 24)] ^ 0xB990CED5;
  v200 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v172) ^ 0x34)];
  v201 = (v200 >> 4) & 0xE169194 ^ (v199 >> 1) & 0x1052DB86;
  v202 = *(_DWORD *)&v106[4 * (v182 ^ 0xCC)];
  HIDWORD(v171) = v202 ^ 0x3B74BD;
  LODWORD(v171) = v202 ^ 0xD6800000;
  v203 = *(_DWORD *)&v109[4 * (BYTE1(v187) ^ 0x73)] ^ v199 ^ (v171 >> 23) ^ v200 ^ (-761261126 * (v171 >> 23)) ^ (v201 + 1528011181 - ((2 * v201) & 0x34253308));
  v204 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v177) ^ 6)];
  v205 = *(_DWORD *)&v101[4 * (HIBYTE(v182) ^ 0xAD)] ^ 0xB990CED5;
  v206 = (v204 >> 4) & 0xE169194 ^ (v205 >> 1) & 0x1052DB86;
  v207 = v206 + 1528011181 - ((2 * v206) & 0x34253308);
  v208 = *(_DWORD *)&v106[4 * (v187 ^ 0x6D)];
  HIDWORD(v171) = v208 ^ 0x3B74BD;
  LODWORD(v171) = v208 ^ 0xD6800000;
  LOBYTE(v208) = BYTE1(v172) ^ 0xEF;
  v209 = *(_DWORD *)&v109[4 * (BYTE1(v172) ^ 0xD5)] ^ v205 ^ v204 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ v207;
  v210 = *(_DWORD *)&v101[4 * (HIBYTE(v187) ^ 0xC7)] ^ 0xB990CED5;
  v211 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v182) ^ 0xC6)];
  v212 = (v211 >> 4) & 0xE169194 ^ (v210 >> 1) & 0x1052DB86;
  v213 = *(_DWORD *)&v106[4 * (v172 ^ 0xD1)];
  HIDWORD(v171) = v213 ^ 0x3B74BD;
  LODWORD(v171) = v213 ^ 0xD6800000;
  v214 = *(_DWORD *)&v109[4 * BYTE1(v196)] ^ v210 ^ v211 ^ (v171 >> 23) ^ (v212
                                                                         + 1528011181
                                                                         - 2 * (v212 & 0x1A129986 ^ (v210 >> 1) & 2)) ^ ((1766853085 * (v171 >> 23)) << (v198 & 1) << !(v198 & 1));
  v215 = v198 - ((2 * v198) & 0x353E366A) + 446634805;
  v216 = *(_DWORD *)&v101[4 * (HIBYTE(v215) ^ 0x20)] ^ 0xB990CED5;
  v217 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v214) ^ 0x8F)];
  v218 = (v217 >> 4) & 0xE169194 ^ (v216 >> 1) & 0x1052DB86;
  v219 = *(_DWORD *)&v106[4 * (v203 ^ 0xD)];
  HIDWORD(v171) = v219 ^ 0x3B74BD;
  LODWORD(v171) = v219 ^ 0xD6800000;
  v220 = *(_DWORD *)&v109[4 * (BYTE1(v209) ^ 0x71)] ^ v216 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ v217 ^ (v218 + 1528011181 - 2 * (v218 & 0x1A129994 ^ (v217 >> 4) & 0x10));
  v221 = *(_DWORD *)&v101[4 * ((v203 ^ 0xA1C6DBFE) >> 24)] ^ 0xB990CED5;
  v222 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v215) ^ 0x5F)];
  v223 = (v222 >> 4) & 0xE169194 ^ (v221 >> 1) & 0x1052DB86;
  v224 = *(_DWORD *)&v106[4 * (v209 ^ 0x10)];
  HIDWORD(v171) = v224 ^ 0x3B74BD;
  LODWORD(v171) = v224 ^ 0xD6800000;
  v225 = *(_DWORD *)&v109[4 * (BYTE1(v214) ^ 0x40)] ^ v221 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ v222 ^ (v223 + 1528011181 - ((2 * v223) & 0x34253308));
  BYTE2(v221) = BYTE2(v209) ^ 0x34;
  v226 = *(_DWORD *)&v101[4 * ((v209 ^ 0x82344BE3) >> 24)];
  v227 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * ((v203 ^ 0xA1C6DBFE) >> 16)];
  v228 = (v226 >> 1) & 0x1052DB86 ^ 0x10404302 ^ (v227 >> 4) & 0xE169194;
  v229 = *(_DWORD *)&v106[4 * (v214 ^ 0xD9)];
  HIDWORD(v171) = v229 ^ 0x3B74BD;
  LODWORD(v171) = v229 ^ 0xD6800000;
  v230 = *(_DWORD *)&v101[4 * (HIBYTE(v214) ^ 0x4A)];
  v231 = *(_DWORD *)&v109[4 * (BYTE1(v215) ^ 0x4C)] ^ v226 ^ v227 ^ (v171 >> 23) ^ (v228
                                                                                  + 1528011181
                                                                                  - 2
                                                                                  * (v228 & 0x1A129994 ^ (v227 >> 4) & 0x10)) ^ (-761261126 * (v171 >> 23));
  v232 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * BYTE2(v221)];
  v233 = (v230 >> 1) & 0x1052DB86 ^ (v232 >> 4) & 0xE169194 ^ 0x10404302;
  v234 = *(_DWORD *)&v106[4 * (v215 ^ 0xE3)];
  HIDWORD(v171) = v234 ^ 0x3B74BD;
  LODWORD(v171) = v234 ^ 0xD6800000;
  v235 = *(_DWORD *)&v109[4 * (BYTE1(v203) ^ 0xE1)] ^ v232 ^ v230 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23)) ^ (v233 + 1528011181 - 2 * (v233 & 0x1A129994 ^ (v232 >> 4) & 0x10));
  v236 = (v235 ^ 0x54CB397) >> (v208 & 8) >> (v208 & 8 ^ 8);
  v237 = *(_DWORD *)&v101[4 * (HIBYTE(v220) ^ 0xEB)] ^ 0xB990CED5;
  v238 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v235) ^ 0xAB)];
  v239 = (v238 >> 4) & 0xE169194 ^ (v237 >> 1) & 0x1052DB86;
  v240 = *(_DWORD *)&v106[4 * (v225 ^ 0x1D)];
  HIDWORD(v171) = v240 ^ 0x3B74BD;
  LODWORD(v171) = v240 ^ 0xD6800000;
  v241 = v239 + 1528011181 - ((2 * v239) & 0x34253308);
  v242 = BYTE2(v231) ^ 0xE2;
  v243 = *(_DWORD *)&v109[4 * ((unsigned __int16)(v231 ^ 0x2843) >> 8)] ^ v237 ^ v238 ^ (v171 >> 23) ^ (-761261126 * (v171 >> 23));
  v244 = *(_DWORD *)&v106[4 * (v231 ^ 0xB0)];
  HIDWORD(v171) = v244 ^ 0x3B74BD;
  LODWORD(v171) = v244 ^ 0xD6800000;
  v245 = v243 ^ v241;
  v246 = *(_DWORD *)&v101[4 * (HIBYTE(v225) ^ 0x4A)];
  v247 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v220) ^ 0x67)];
  v248 = (-761261126 * (v171 >> 23)) ^ (v171 >> 23);
  v249 = (v248 & 0x10000000 ^ 0xFDEF8B9D) + 2 * (v248 & 0x10000000);
  v250 = v246 ^ 0x48E44D6B ^ *(_DWORD *)&v109[4 * (v236 ^ 0x3A)] ^ v247 ^ (((v247 >> 4) & 0xE169194 ^ ((v246 >> 1) ^ 0x5CC8676A) & 0x1052DB86)
                                                                                          + 1528011181
                                                                                          - 2
                                                                                          * (((v247 >> 4) & 0xE169194 ^ ((v246 >> 1) ^ 0x5CC8676A) & 0x1052DB86) & 0x1A129986 ^ ((v246 >> 1) ^ 0x5CC8676A) & 2));
  v251 = v249 + 1610219496;
  if ((v250 & (v249 + 34632803)) != 0)
    v251 = 1540953890 - v249;
  v252 = (v250 - 1575586693 + v251) ^ v248 & 0xEFFFFFFF;
  v253 = *(_DWORD *)&v101[4 * (HIBYTE(v231) ^ 0xBA)] ^ 0xB990CED5;
  v254 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v225) ^ 0xF2)];
  v255 = (v254 >> 4) & 0xE169194 ^ (v253 >> 1) & 0x1052DB86;
  v256 = *(_DWORD *)&v106[4 * (v235 ^ 0x64)];
  HIDWORD(v258) = v256 ^ 0x3B74BD;
  LODWORD(v258) = v256 ^ 0xD6800000;
  v257 = v258 >> 23;
  HIDWORD(v258) = v257;
  LODWORD(v258) = (v257 - 1928454036 - ((2 * v257) & 0x1A1C40D8)) ^ 0x8D0E206C;
  v259 = *(_DWORD *)&v109[4 * (BYTE1(v220) ^ 0xAC)] ^ v253 ^ v254 ^ (v255 + 1528011181 - ((2 * v255) & 0x34253308)) ^ ((-761261126 * v258) ^ (2 * (v258 >> 1)) | ((v258 >> 1) >> 31));
  v260 = *(_DWORD *)&v101[4 * (HIBYTE(v235) ^ 0x51)] ^ 0xB990CED5;
  v261 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * v242];
  v262 = (v261 >> 4) & 0xE169194 ^ (v260 >> 1) & 0x1052DB86;
  v263 = *(_DWORD *)&v106[4 * (v220 ^ 0x3B)];
  HIDWORD(v258) = v263 ^ 0x3B74BD;
  LODWORD(v258) = v263 ^ 0xD6800000;
  v264 = *(_DWORD *)&v109[4 * (BYTE1(v225) ^ 0x43)] ^ v260 ^ v261 ^ (v258 >> 23) ^ (v262
                                                                                  + 1528011181
                                                                                  - ((2 * v262) & 0x34253308)) ^ (-761261126 * (v258 >> 23));
  v265 = *(_DWORD *)&v101[4 * (HIBYTE(v245) ^ 0x77)] ^ 0xB990CED5;
  v266 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v264) ^ 0xC9)];
  v267 = (v266 >> 4) & 0xE169194 ^ (v265 >> 1) & 0x1052DB86;
  v268 = v267 + 1528011181 - 2 * (v267 & 0x1A129986 ^ (v265 >> 1) & 2);
  v269 = *(_DWORD *)&v106[4 * (v252 ^ 0xE0)];
  HIDWORD(v258) = v269 ^ 0x3B74BD;
  LODWORD(v258) = v269 ^ 0xD6800000;
  v270 = v258 >> 23;
  v271 = *(_DWORD *)&v101[4 * (HIBYTE(v252) ^ 0x70)];
  HIDWORD(v258) = v271 ^ 0xCED5;
  LODWORD(v258) = v271 ^ 0xB9900000;
  v272 = *(_DWORD *)&v109[4 * (((unsigned __int16)(v259 ^ 0xE900) >> 8) ^ 0x3A)] ^ v265 ^ v266 ^ v270 ^ v268 ^ (-761261126 * v270);
  v273 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v245) ^ 0xFC)];
  LODWORD(v258) = __ROR4__((v258 >> 16) ^ __ROR4__(v271 & 0x20A5B70C ^ 0x20808604, 17) ^ 0x27836DB9, 16);
  v274 = *(_DWORD *)&v106[4 * v259];
  v275 = ((v273 >> 4) & 0xE169194 ^ v258) + 1528011181 - ((2 * ((v273 >> 4) & 0xE169194 ^ v258)) & 0xB627335A);
  HIDWORD(v258) = v274 ^ 0x3B74BD;
  LODWORD(v258) = v274 ^ 0xD6800000;
  v276 = v273 ^ *(_DWORD *)&v109[4 * (BYTE1(v264) ^ 0xED ^ -(BYTE1(v264) ^ 0xED) ^ ((BYTE1(v264) ^ 0xFFFFFF28) + 59))
                               + 232] ^ (v258 >> 23) ^ (-761261126 * (v258 >> 23)) ^ v275;
  v277 = *(_DWORD *)&v101[4 * ((v259 ^ 0x69E7E900u) >> 24)] ^ 0xB990CED5;
  v278 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v252) ^ 0x61)];
  v279 = (v278 >> 4) & 0xE169194 ^ (v277 >> 1) & 0x1052DB86;
  v280 = *(_DWORD *)&v106[4 * (v264 ^ 0xAC)];
  HIDWORD(v258) = v280 ^ 0x3B74BD;
  LODWORD(v258) = v280 ^ 0xD6800000;
  v281 = *(_DWORD *)&v109[4 * (BYTE1(v245) ^ 0x4D)] ^ v277 ^ (v258 >> 23) ^ (-761261126 * (v258 >> 23)) ^ v278 ^ (v279 + 1528011181 - ((2 * v279) & 0x34253308));
  v282 = *(_DWORD *)&v101[4 * (HIBYTE(v264) ^ 0xCB)] ^ 0xB990CED5;
  v283 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * BYTE2(v259)];
  LODWORD(v258) = __ROR4__(*(_DWORD *)&v106[4 * (v245 ^ 0x85)], 23);
  v284 = *(_DWORD *)&v109[4 * (BYTE1(v252) ^ 0x1A)] ^ v282 ^ v283 ^ (1528011181
                                                                   - (v282 & 0x20253308)
                                                                   + ((v282 >> 1) & 0x1052DB86)) ^ (v283 >> 4) & 0xE169194 ^ v258 ^ 0x76E97BAD ^ (-761261126 * (v258 ^ 0x76E97BAD));
  v285 = *(_DWORD *)&v101[4 * (HIBYTE(v272) ^ 0x5C)];
  v286 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v284) ^ 0x49)];
  v287 = *(_DWORD *)&v106[4 * (v276 ^ 0x20)];
  v288 = (v285 >> 1) & 0x1052DB86 ^ 0x10404302 ^ (v286 >> 4) & 0xE169194;
  HIDWORD(v258) = v287 ^ 0x3B74BD;
  LODWORD(v258) = v287 ^ 0xD6800000;
  v289 = (-761261126 * (v258 >> 23)) ^ (v258 >> 23);
  v290 = v285 ^ 0x48E44D6B ^ v286 ^ *(_DWORD *)&v109[4 * (BYTE1(v281) ^ 0x3C)] ^ (v288
                                                                                + 1528011181
                                                                                - ((2 * v288) & 0x34253308));
  v291 = *(_DWORD *)&v106[4 * (v281 ^ 0x26)];
  v292 = v290 + v289 - 2 * (v290 & v289);
  HIDWORD(v258) = v291 ^ 0x3B74BD;
  LODWORD(v258) = v291 ^ 0xD6800000;
  v293 = *(_DWORD *)&v101[4 * (HIBYTE(v276) ^ 0xBB)] ^ 0xB990CED5;
  v294 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v272) ^ 0x3D)];
  v295 = *(_DWORD *)&v109[4 * (BYTE1(v284) ^ 0x72)] ^ v294 ^ v293 ^ (v294 >> 4) & 0xE169194 ^ (v258 >> 23) ^ (1528011181 - (v293 & 0x20253308) + ((v293 >> 1) & 0x1052DB86)) ^ (-761261126 * (v258 >> 23));
  v296 = *(_DWORD *)&v101[4 * (HIBYTE(v281) ^ 0xC8)] ^ 0xB990CED5;
  v297 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v276) ^ 0xD0)];
  v298 = (v297 >> 4) & 0xE169194 ^ (v296 >> 1) & 0x1052DB86;
  LODWORD(v258) = __ROR4__(*(_DWORD *)&v106[4 * (v284 ^ 0xD4)], 23);
  v299 = *(_DWORD *)&v109[4 * (BYTE1(v272) ^ 0x3C)] ^ v296 ^ v258 ^ 0x76E97BAD ^ (-761261126 * (v258 ^ 0x76E97BAD)) ^ v297 ^ (v298 + 1528011181 - 2 * (v298 & 0x1A129994 ^ (v297 >> 4) & 0x10));
  v300 = *(_DWORD *)&v101[4 * (HIBYTE(v284) ^ 0x82)] ^ 0xB990CED5;
  v301 = -877393068 - 1246347769 * *(_DWORD *)&v102[4 * (BYTE2(v281) ^ 0x95)];
  v302 = (v301 >> 4) & 0xE169194 ^ (v300 >> 1) & 0x1052DB86;
  v303 = *(_DWORD *)&v106[4 * (v272 ^ 0x76)];
  HIDWORD(v258) = v303 ^ 0x3B74BD;
  LODWORD(v258) = v303 ^ 0xD6800000;
  v304 = *(_DWORD *)&v109[4 * (((BYTE1(v276) ^ 0xBF) & 4 | 0x3A) ^ (BYTE1(v276) ^ 0xBF) & 0xFFFFFFFB)] ^ v300 ^ v301 ^ (v258 >> 23) ^ (-761261126 * (v258 >> 23)) ^ (v302 + 1528011181 - 2 * (v302 & 0x1A129986 ^ (v300 >> 1) & 2));
  v305 = (char *)*(&off_24E21C7C0 + (HIDWORD(a23) ^ 0x16D)) - 12;
  v306 = *(_DWORD *)&v305[4 * (HIBYTE(v295) ^ 0x39)];
  HIDWORD(v258) = v306 ^ 4;
  LODWORD(v258) = v306 ^ 0x2CCF1980;
  v307 = v258 >> 5;
  v308 = (char *)*(&off_24E21C7C0 + (HIDWORD(a23) ^ 0x1DD)) - 12;
  v309 = *(_DWORD *)&v308[4 * (BYTE2(v292) ^ 0xB7)];
  v310 = (char *)*(&off_24E21C7C0 + HIDWORD(a23) - 24) - 4;
  v311 = (char *)*(&off_24E21C7C0 + HIDWORD(a23) - 13) - 4;
  v312 = *(_DWORD *)&v311[4 * (v299 ^ 0xA0)] - 1679194347;
  v313 = *(_DWORD *)&v305[4 * (HIBYTE(v292) ^ 0x2E)];
  v314 = *(_DWORD *)&v305[4 * (HIBYTE(v299) ^ 0xAD)];
  v315 = (((2 * v309) ^ 0xC6E58528) * (v309 ^ 0x6372C294)) ^ (4 * v307) ^ ((2 * v312) | 0x3ED097B8) ^ (*(_DWORD *)&v310[4 * (((unsigned __int16)(v304 ^ 0xEAD7) >> 8) ^ 0x29)] + (((unsigned __int16)(v304 ^ 0xEAD7) >> 8) ^ 0x96FEADC0) + ((((v304 ^ 0x9330EAD7) >> 8) & 0xC0) << (BYTE2(v292) & 1) << !(v292 & 0x10000)) - 1956538634);
  v316 = *(_DWORD *)&v305[4 * (HIBYTE(v304) ^ 0xF9)];
  v317 = *(_DWORD *)&v308[4 * (BYTE2(v304) ^ 0x47)];
  v318 = *(_DWORD *)&v308[4 * (BYTE2(v295) ^ 0xCF)];
  v319 = *(_DWORD *)&v308[4 * (BYTE2(v299) ^ 0x67)];
  v320 = BYTE1(v299);
  v321 = *(_DWORD *)&v310[4 * (BYTE1(v299) ^ 0x13)];
  v322 = BYTE1(v292);
  v323 = *(_DWORD *)&v310[4 * (BYTE1(v292) ^ 0x93)];
  v324 = BYTE1(v295);
  LODWORD(v305) = *(_DWORD *)&v310[4 * (BYTE1(v295) ^ 0x13)];
  LODWORD(v310) = v307 ^ v369 ^ (v315 + 211202363 - ((2 * v315) & 0x192D6276));
  v325 = *(_DWORD *)&v311[4 * (v295 ^ 0xF0)];
  v326 = *(_DWORD *)&v311[4 * (v304 ^ 0xD7)];
  v327 = *(_DWORD *)&v311[4 * (v292 ^ 0x4A)];
  v328 = v312 ^ v309 ^ (v310 - ((2 * (_DWORD)v310) & 0x32DBDC0) - 2120818976);
  v329 = (char *)*(&off_24E21C7C0 + HIDWORD(a23) - 123) - 4;
  a46[5] = v329[BYTE2(v328) ^ 0x64] ^ 0x37 ^ (((v329[BYTE2(v328) ^ 0x64] >> 4) ^ 4)
                                              + ((v329[BYTE2(v328) ^ 0x64] >> 3) & 0x1C ^ 0xF7)
                                              + 79);
  HIDWORD(v258) = v313 ^ 4;
  LODWORD(v258) = v313 ^ 0x2CCF1980;
  LODWORD(v311) = v258 >> 5;
  v330 = (((2 * v317) ^ 0xC6E58528) * (v317 ^ 0x6372C294)) ^ (4 * (_DWORD)v311) ^ ((2 * (v325 - 1679194347)) | 0x3ED097B8) ^ (v321 + (v320 ^ 0x3A) + 576734390);
  v331 = v311 ^ v370 ^ (v330 - 734308017 - ((2 * v330) & 0xA876B29E));
  v332 = (v325 - 1679194347) ^ v317 ^ (v331 - ((2 * v331) & 0xA85EBA7C) + 1412390206);
  v333 = (char *)*(&off_24E21C7C0 + HIDWORD(a23) - 79) - 12;
  a46[2] = v333[BYTE1(v332) ^ 0x3ELL] ^ (8 * (v333[BYTE1(v332) ^ 0x3ELL] & 0xF)) ^ 0xF3;
  v334 = (char *)*(&off_24E21C7C0 + (HIDWORD(a23) ^ 0x63)) - 8;
  a46[4] = (v334[BYTE3(v328) ^ 0x3BLL] + (BYTE3(v328) ^ 0x29) - 20) ^ 0xA;
  HIDWORD(v258) = v316 ^ 4;
  LODWORD(v258) = v316 ^ 0x2CCF1980;
  v335 = v258 >> 5;
  v336 = v335 - 1764176346 - ((2 * v335) & 0x2DB19C4C);
  HIDWORD(v258) = v336 ^ 6;
  LODWORD(v258) = v336 ^ 0x96D8CE20;
  v337 = ((v336 >> 2) ^ 0xEAB0B1EE) & 0x7989546E ^ 0x390A6D49 ^ (-2
                                                               - ((~(((v336 >> 2) ^ 0xEAB0B1EE) & 0x7676AB91) | 0x7F0CEF48)
                                                                + (((v336 >> 2) ^ 0xEAB0B1EE) & 0x7604AB00 | 0x80F310B7)));
  LODWORD(v311) = ((2 * v337) & 0xD28DBCF2) - v337 + 381231494;
  v338 = (((v335 - 1764176346) << 30) ^ 0x7E7D978F) + (v335 << 31) + 25323633;
  v339 = (v338 - (v311 ^ 0x5FB921E0 | v338)) ^ ((v311 ^ 0xA046DE1F) + 1);
  v340 = (v258 >> 4) ^ 0xD44B4F38 ^ ((v311 ^ 0x56B30689 ^ (v339 - ((2 * v339) & 0x12144ED2) + 151660393))
                                   + v338);
  v341 = (2 * v319) ^ 0xC6E58528;
  v342 = (v341 * (v319 ^ 0x6372C294)) ^ ((v324 ^ 0x3A) + 576734390 + (_DWORD)v305) ^ (v327 - 1679194347) ^ ((2 * (v327 - 1679194347)) | 0x3ED097B8) ^ __ROR4__(v340, 28);
  v343 = v319 ^ v371 ^ (v342 + 2114235986 - ((2 * v342) & 0xFC095CA4));
  v344 = v329[BYTE2(v343) ^ 2];
  a46[13] = v344 ^ (v344 >> 4) ^ 0x9D;
  v345 = v333[BYTE1(v328) ^ 0xE4];
  HIDWORD(v258) = ~v345;
  LODWORD(v258) = (v345 ^ 0xC0) << 24;
  LOBYTE(v345) = (((v258 >> 26) ^ 0xBF) >> 6) | (4 * ((v258 >> 26) ^ 0xBF));
  a46[6] = v345 ^ 0x4B ^ (8 * (v345 & 0xF));
  HIDWORD(v258) = v314 ^ 4;
  LODWORD(v258) = v314 ^ 0x2CCF1980;
  v346 = (v258 >> 5) - ((2 * (v258 >> 5)) & 0xA8F721F2);
  v347 = ((730099462 - v346) & 0x40000000 ^ 0xE8FFF7FC) + 2 * ((730099462 - v346) & 0x40000000);
  v348 = v346 - 730099463;
  v349 = (4 * v348) ^ 0x51EE43E4;
  v350 = ((v347 + 385878020) & v349) == 0;
  v351 = v347 + 402504192;
  v352 = -369251848 - v347;
  if (v350)
    v352 = v351;
  v353 = v318 ^ ((v322 ^ 0xBA) + 576734390 + v323) ^ ((2 * (v326 - 1679194347)) | 0x3ED097B8) ^ (2
                                                                                               * (v318 ^ 0x6372C294)
                                                                                               * (v318 ^ 0x6372C294)
                                                                                               - ((4
                                                                                                 * (v318 ^ 0x6372C294)
                                                                                                 * (v318 ^ 0x6372C294)) & 0x128E323C)
                                                                                               - 1991829218) ^ v348 & 0xBFFFFFFF ^ 0xFE4E4B73 ^ (v349 - 16626172 + v352);
  v354 = (v326 - 1679194347) ^ v372 ^ (v353 - 1567109007 - ((2 * v353) & 0x452FA0E2));
  v355 = (char *)*(&off_24E21C7C0 + HIDWORD(a23) - 88) - 8;
  a46[11] = v355[v354 ^ 0x98] ^ (v354 - ((2 * v354) & 0xA0) + 80) ^ 0xF3;
  a46[7] = ((v328 ^ 0x74) - ((2 * (v328 ^ 0x74)) & 0xA0) + 80) ^ v355[v328 ^ 0x4DLL] ^ 0x22;
  v356 = v329[BYTE2(v354) ^ 0xFLL];
  v357 = (((v356 ^ 0xAF) >> 2) | ((v356 ^ 0xFFFFFFAF) << 6)) ^ ((v356 >> 6) | (4 * v356)) & 0xFFFFFFC3 ^ 0xFFFFFFA9;
  a46[9] = ((v357 >> 6) | (4 * v357)) ^ 0xAA;
  a46[14] = v333[BYTE1(v343) ^ 0x4ELL] ^ 0x23 ^ (8 * (v333[BYTE1(v343) ^ 0x4ELL] & 0xF));
  a46[8] = ((HIBYTE(v354) ^ 0x3E) + v334[HIBYTE(v354) ^ 0x2CLL] - 20) ^ 0x51;
  a46[3] = ((v332 ^ 0xAA) + (~(2 * v332) | 0x5F) + 81) ^ 0xB1 ^ v355[v332 ^ 0xECLL];
  a46[12] = (v334[HIBYTE(v343) ^ 0xEBLL] + (HIBYTE(v343) ^ 0xF9) - 20) ^ 0x49;
  v358 = v329[BYTE2(v332) ^ 0x7ALL];
  a46[1] = v358 ^ (v358 >> 4) ^ 0x59;
  a46[v368] = v355[v343 ^ 0xFELL] ^ ((v343 ^ 0x94) - 2 * ((v343 ^ 0x94) & 0x51 ^ v343 & 1) + 80) ^ 0xCA;
  *a46 = (BYTE3(v332) ^ 0x6C) + v334[BYTE3(v332) ^ 0x7ELL] - 20;
  a46[10] = v333[BYTE1(v354) ^ 0x7ELL] ^ ((((8 * (v333[BYTE1(v354) ^ 0x7ELL] & 0xF)) ^ 0x18) & 0x7F | (((v333[BYTE1(v354) ^ 0x7ELL] & 8) != 0) << 7))
                                        - 61) ^ 0xF0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, _QWORD, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a45 + 8 * ((230 * (HIDWORD(a12) > 0x10)) ^ HIDWORD(a23))) - 8))(v333, v332, v322, HIDWORD(a23), v341, v329, 1668465300, v328, a9, a10, a11, a12, v360, v62, v361, v362, a17, v363, v364,
           v365,
           v366,
           v367,
           a23,
           13,
           0x3B44F7673B44F76FLL,
           2,
           3,
           11,
           8,
           4,
           7,
           14,
           10,
           5,
           9);
}

void sub_21E0B4E6C()
{
  JUMPOUT(0x21E0B2968);
}

uint64_t sub_21E0B4F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;

  return (*(uint64_t (**)(void))(v20
                              + 8
                              * (v19 ^ (56
                                      * (((2 * (a11 - (a19 & 0x83C35514) - 830960734)) & 0x79A77E74 ^ 0x1835414)
                                       + ((a11 - (a19 & 0x83C35514) - 830960734) ^ 0x7D3215B0)
                                       - 739287590 == 281222420)))))();
}

uint64_t sub_21E0B4FD8(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 | (16 * (a1 + v1 - 1020510010 < ((v2 - 966) | 0x820u) - 2335))))
                            - 12))();
}

uint64_t sub_21E0B504C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v4 + 16) ^ (2136 * ((a2 + a4 - 16) > 0xFFFFFFEF))))
                            - ((781 * ((v4 + 16) ^ 0x4DE) - 1822) | 0xB2u)
                            + 687))();
}

uint64_t sub_21E0B509C(int a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;

  v9 = (a1 + v2 + a2);
  v10 = v9 + v8 + 1;
  v11 = ((_BYTE)a1 + (_BYTE)v2 + (_BYTE)a2) & 0xF;
  v12 = v11 - v9;
  v13 = v4 + v11 - v9;
  v14 = v11 + v4 + ((v6 + 1711679172) & 0x99F9DFA7) - 2342;
  v15 = v11 + 2;
  v16 = v5 + v11 + 2 - v9;
  v17 = v11 + v5 + (v6 + 1073) - 1769;
  v18 = v12 + v3 + 1;
  v19 = v3 + v15;
  v21 = v16 < v10 && v17 > v8;
  if (v13 < v10 && v14 > v8)
    v21 = 1;
  if (v19 > v8 && v18 < v10)
    v21 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((7 * !v21) ^ v6)) - 8))();
}

uint64_t sub_21E0B5148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 + 8 * (a7 ^ (486 * (v7 < 0x10))))
                                                                    - ((a7 - 1029) ^ 0xBC0u)
                                                                    + 2335))(a1, a2, a3, 0);
}

uint64_t sub_21E0B517C(int a1, int a2, int a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16x4_t v19;
  int8x16x4_t v20;

  v19.val[1].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)a3 + 12) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)a3 + 11) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)a3 + 9) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)a3 + 8) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v12 = a1 + v5 + a2;
  v20.val[1].i64[0] = (a3 + 5) & 0xF;
  v20.val[1].i64[1] = (a3 + 4) & 0xF;
  v20.val[2].i64[0] = (a3 + 3) & 0xF;
  v20.val[2].i64[1] = (a3 + 2) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v20.val[3].i64[1] = a3 & 0xF;
  v13.i64[0] = 0x5353535353535353;
  v13.i64[1] = 0x5353535353535353;
  v14.i64[0] = 0x3232323232323232;
  v14.i64[1] = 0x3232323232323232;
  v19.val[0].i64[0] = v12 & 0xF;
  v19.val[0].i64[1] = ((_BYTE)a3 + 14) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v11 - 15 + v12), *(int8x16_t *)(v7 + v19.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v19.val[0].i64[0] + v8 - 13), *(int8x16_t *)(v19.val[0].i64[0] + v6 - 14))));
  v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v14), vmulq_s8(v15, v13)));
  *(int8x16_t *)(v11 - 15 + v12) = vextq_s8(v17, v17, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((2631 * ((v9 & 0xFFFFFFF0) == 16)) ^ a5)) - (a5 ^ 0x778u) + 1435))();
}

void sub_21E0B52E0()
{
  JUMPOUT(0x21E0B525CLL);
}

uint64_t sub_21E0B52EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((v5 - 1462404728) & 0x572A89FF ^ 0x956) * (v4 != a4)) ^ v5))
                            - ((v5 - 1430) | 0x2B2u)
                            + 687))();
}

uint64_t sub_21E0B533C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  char v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v7
                                                                                                 + 8
                                                                                                 * ((1457 * ((v6 & 8) != 3 * (a6 ^ 0x1B6) - 2343)) ^ a6))
                                                                                     - (a6 + 1644)
                                                                                     + 2335))(a1, a2, a3, a4, (a3 - a4), (a6 + 1644));
}

uint64_t sub_21E0B5380(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char v50;
  int v51;
  uint64_t v52;
  unsigned int v53;
  char v54;
  char v55;
  unsigned int v56;
  int8x16x4_t v58;

  v53 = a4 - (v49 & 0xFFFFFFF8) + 8;
  v54 = v50 + a1 + v45 - a4;
  v55 = a1 + v45 + v51 + v50 - a4;
  v56 = a1 + v45 + a2 - a4;
  v58.val[0].i64[0] = v56 & 0xF;
  v58.val[0].i64[1] = (v54 + 42) & 0xF;
  v58.val[1].i64[0] = (v54 + 41) & 0xF;
  v58.val[1].i64[1] = (v54 + 40) & 0xF;
  v58.val[2].i64[0] = v55 & 0xF;
  v58.val[2].i64[1] = (v54 + 38) & 0xF;
  v58.val[3].i64[0] = (v54 + 37) & 0xF;
  v58.val[3].i64[1] = (v54 + 36) & 0xF;
  *(int8x8_t *)(v52 - 7 + v56) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v52 - 7 + v56), *(int8x8_t *)(v47 + v58.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v58.val[0].i64[0] + v48 - 5), *(int8x8_t *)(v58.val[0].i64[0] + v46 - 6)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v58, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x5353535353535353)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a45 + 8 * ((21 * (v53 == 0)) ^ (v51 - 704))) - 12))((__n128)xmmword_21E17F900);
}

void sub_21E0B54C8()
{
  JUMPOUT(0x21E0B53F8);
}

uint64_t sub_21E0B54D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,int a42)
{
  uint64_t v42;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v42
                                                                                                  + 8 * (((a6 ^ 0x4B5) * (a42 == a41)) ^ a6))
                                                                                      - 8))(a1, a2, a3, a4, a5, a6 ^ 0xB9Cu);
}

uint64_t sub_21E0B5510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = (a5 - 281224753);
  *(_BYTE *)(v11 + v12) ^= *(_BYTE *)(v8 + (v12 & 0xF)) ^ *(_BYTE *)((v12 & 0xF) + v9 + 2) ^ *(_BYTE *)((v12 & 0xF) + v7 + 1) ^ (83 * (v12 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((1892 * (a5 - 1 == v6)) ^ (a6 - 1366))) - 8))();
}

void sub_21E0B5584()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1443406026)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_21E0B55E8(uint64_t a1)
{
  int v1;
  int v2;
  _BOOL4 v4;

  v1 = 2009815553 * (((a1 | 0x4FFE6075) - a1 + (a1 & 0xB0019F8A)) ^ 0xBEF54E30);
  v2 = *(_DWORD *)(a1 + 16) + v1;
  v4 = *(_QWORD *)(a1 + 8) != 0x2B0E86FE4BE00E09 && (unsigned __int16)(*(_WORD *)(a1 + 20) - v1) != 21249;
  __asm { BR              X8 }
}

uint64_t sub_21E0B56C0()
{
  unsigned int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((3376
                                          * ((v0 | ((v0 < v1) << 16)) + 2042383798 != 257 * (v2 ^ 0x1E4) + 2042404533)) ^ v2))
                            - 12))();
}

#error "21E0B5B1C: call analysis failed (funcsize=179)"

uint64_t sub_21E0B5B20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  v4 = *(_DWORD **)(v1 + 8 * (v0 ^ 0x3F6));
  STACK[0x288] = 0x839445371A9CF5E8;
  STACK[0x218] = (unint64_t)v4;
  LODWORD(STACK[0x284]) = *v4;
  v5 = *(unsigned int **)(v1 + 8 * (v0 + 12));
  STACK[0x228] = (unint64_t)v5;
  v6 = *v5;
  v7 = 1990461019 * ((((v3 - 152) | 0x640FFB83759AD0EDLL) - ((v3 - 152) & 0x640FFB83759AD0EDLL)) ^ 0x5BC1B77A5A7E7264);
  v8 = v0 - 1916317331 + v7;
  *(_DWORD *)(v3 - 120) = v8;
  *(_DWORD *)(v3 - 116) = v7;
  *(_DWORD *)(v3 - 128) = (v0 - 1084413910) ^ v7;
  *(_DWORD *)(v3 - 124) = v8 - 68;
  *(_DWORD *)(v3 - 132) = v0 - 1916317331 - v7 + 124;
  v9 = v6 - v7;
  v10 = (_QWORD *)(v3 - 152);
  *v10 = v9;
  v10[1] = v7;
  v11 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 413)) - 12))(v3 - 152);
  v12 = *(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 136));
  STACK[0x270] = *(_QWORD *)(v1 + 8 * (v0 ^ 0x1A8)) - 4;
  return v12(v11);
}

uint64_t sub_21E0B5C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  unsigned int *v16;
  uint64_t v17;
  unsigned int v18;
  int v19;

  STACK[0x238] = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8 * a12))(a14, 2965982036);
  v18 = (*(uint64_t (**)(void))(v14 + 8 * a11))();
  *v16 = v18;
  v19 = v18 ^ 0x10E40A8E ^ ((v18 >> 30) + 283380366 - 4 * (v18 >> 31));
  v16[1] = ((1812433253 * v19) ^ 0xAF9DF4FD) + ((v19 * (((v15 + 1880) ^ 0x869) + 1477382515)) & 0x5F3BE9FA) + 1348602628;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (v15 + 1880)) - 8))();
}

void sub_21E0B5CFC()
{
  JUMPOUT(0x21E0B5C9CLL);
}

uint64_t sub_21E0B5D10(uint64_t a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, char a8)
{
  char v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  unsigned int v18;
  unint64_t v19;
  char v20;
  char v21;

  v17 = STACK[0x220] + (v14 + v12);
  v18 = -1770326851
      * ((*(_DWORD *)(*(_QWORD *)STACK[0x248] + (*(_DWORD *)STACK[0x240] & (14 * (v10 ^ a7) + v15))) ^ v17) & 0x7FFFFFFF);
  v19 = -1770326851 * (v18 ^ HIWORD(v18));
  v20 = *(_BYTE *)(*(_QWORD *)(v11 + 8 * (v10 & 0x264A013)) + (v19 >> 24));
  v21 = *(_BYTE *)(*(_QWORD *)(v11 + 8 * (v10 ^ v16)) + (v19 >> 24) - 12) ^ *(_BYTE *)(*(_QWORD *)(v11 + 8 * (v10 + 75))
                                                                                       + (v19 >> 24)
                                                                                       - 6);
  LODWORD(v19) = v19 ^ (-77 * (v19 >> 24));
  *(_BYTE *)v17 = v21 ^ (((v9 ^ a3) >> (v8 + a8)) - ((2 * ((v9 ^ a3) >> (v8 + a8))) & 0xC0) - 32) ^ v20 ^ v19 ^ 0xE0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((996
                                          * (v14
                                           - (((v21 ^ (((v9 ^ a3) >> (v8 + a8))
                                                                      - ((2 * ((v9 ^ a3) >> (v8 + a8))) & 0xC0)
                                                                      - 32) ^ v20 ^ v19) ^ 0xE0) != 0) != a2)) ^ v10))
                            - 12))();
}

void sub_21E0B6D34()
{
  JUMPOUT(0x21E0B5AD8);
}

void sub_21E0B6D3C()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void sub_21E0B6D80(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v1 = 1866394843 * ((((2 * a1) | 0xA95321D2) - a1 + 727084823) ^ 0x3EBEA71D);
  v2 = *(_DWORD *)(a1 + 16) ^ v1;
  v3 = *(_DWORD *)(a1 + 40) - v1;
  v5 = (v3 & 0x30000000) == 0x20000000 || (v3 & 0x3F000000) == 117440512;
  __asm { BR              X11 }
}

uint64_t sub_21E0B6E58@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, char a5, int a6, int a7, unint64_t *a8, unint64_t *a9, uint64_t a10, int a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v15 = *(_QWORD *)(v12 + 8);
  v16 = 225134719
      * (((&a4 | 0x833A4E3F) - &a4 + (&a4 & 0x7CC5B1C0)) ^ 0x95CA0B15);
  a5 = 94 - 127 * (((&a4 | 0x3F) - &a4 + (&a4 & 0xC0)) ^ 0x15);
  a6 = (v11 ^ 0x79F24DD1) - v16 - 490735025 + ((v11 << (v14 - 107)) & 0x7FF39F6E ^ 0xC13044C);
  a7 = v16 + 728726529 + v14;
  a4 = &STACK[0x19042E346FDCEC41];
  a8 = &STACK[0x3EE0953444D42892];
  a9 = &STACK[0x21D4707617554416];
  a10 = v15;
  v17 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v14 - 1004)) - 4))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((225 * (a11 == 939001227)) ^ v14)) - 12))(v17);
}

uint64_t sub_21E0B6F8C()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)(((((v1 - 518451569) & 0x1EE6EDCE ^ 0xFFFFF62A) + v1 + 2099)
                                               * (v2 == 117440512)) ^ (v1 - 736)))
                            - 12))();
}

uint64_t sub_21E0B6FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  unsigned int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10 + 8 * (((8 * (a9 + 4 < a9)) | (32 * (a9 + 4 < a9))) ^ v9))
                                          - 8))(a1);
}

uint64_t sub_21E0B7044()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((2667
                                          * ((v1 ^ ((v0 ^ 0xF13) - 807) ^ 0x3B4FB156)
                                           - 1613038220
                                           + ((2 * v1) & 0xC5FFF7FE ^ 0x816081A2) != 47905139)) ^ v0))
                            - 12))();
}

uint64_t sub_21E0B70B0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v2 - 1660943359 < (v0 ^ 0xF14u) - 1376) * (((v0 - 2676) | 0xA20) ^ 0xA81)) ^ v0)))();
}

uint64_t sub_21E0B7108(unsigned int a1, int a2, int a3, int a4)
{
  char v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((25
                                          * (((a4
                                             - (v4 & 3)
                                             + ((347 * ((a2 - 1026750511) & 0x3D32EFEF ^ 0x1E1)) ^ (a3 + 657))) & 0xFFFFFFFC) > a1)) ^ a2))
                            - 4))();
}

uint64_t sub_21E0B7170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a1 - 3 + (v3 + v2)) = *(_DWORD *)(v1 - 3 + (v3 + v2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((8 * ((v4 ^ 0xB1 ^ (v5 == 4)) & 1)) & 0xDF | (32 * ((v4 ^ 0xB1 ^ (v5 == 4)) & 1))) ^ (v4 - 916)))
                            - 12))();
}

uint64_t sub_21E0B71C8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((28 * ((v1 ^ v0 ^ 0x59B0411B) != 0)) ^ v0 ^ 0x346u)) - 12))();
}

uint64_t sub_21E0B721C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v4 > 0x43BE2E3D;
  *(_BYTE *)(a1 + (v6 - 157814652)) = *(_BYTE *)(v1 + (v6 - 157814652));
  if (v8 == v6 - 1294351801 < v3)
    v8 = v6 - 1294351801 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((v8 * (v2 - 624)) ^ v2)) - 12))();
}

uint64_t sub_21E0B7288@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v6 - 13);
  a3.i32[0] = *(_DWORD *)(a2 + (v8 ^ 0x1D9) + a1);
  *(_DWORD *)(a2 - 3 + (v4 + v3)) = vmovn_s16((int16x8_t)vmovl_u8(a3)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((61 * (v5 != 4)) ^ v8)) - (v8 + 2309) + 2769))();
}

uint64_t sub_21E0B72E8(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 + 707) ^ a1 ^ 0x742) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_21E0B7314@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(v1 + (v4 + v3));
  v7 = v5 + 2099 + v4 - 3488 != v2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((2 * v7) | (16 * v7)) ^ (v5 + 1398))))();
}

uint64_t sub_21E0B7350()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((903 * (*(_QWORD *)(v1 + 24) != 0x3C8626971E59615CLL)) ^ v0))
                            - (v0 - 2099)
                            + 1376))();
}

uint64_t sub_21E0B738C@<X0>(uint64_t a1@<X8>, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a1 - 0x3C8626971E59615CLL) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((4086 * (*(_QWORD *)(v4 + 32) != 0x1C75E665D0135B6)) ^ (347 * (v3 ^ 0xD9B))))
                            - 12))();
}

void sub_21E0B73F0(uint64_t a1@<X8>)
{
  _DWORD *v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 0x1C75E665D0135B6) = v2;
  *v1 = 939001227;
}

uint64_t sub_21E0B7484(uint64_t a1)
{
  unsigned int v1;
  unsigned int v2;

  v1 = 1866394843 * ((a1 & 0x6DD456B5 | ~(a1 | 0x6DD456B5)) ^ 0x783C9EBE);
  v2 = *(_DWORD *)(a1 + 12) - v1;
  return (*(uint64_t (**)(void))((char *)*(&off_24E21C7C0 + (int)(v2 ^ 0x15C))
                              + 8
                              * (int)(((((v2 + 1997) | 0x24) + ((v2 - 1172927285) & 0x45E97F9B) - 5708)
                                     * ((*(_DWORD *)(a1 + 8) ^ v1) - 1831269706 < 7)) ^ v2)
                              - 12))();
}

uint64_t sub_21E0B753C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((v1 < 0x1F) ^ (29 * (v2 ^ 0x8E))) & 1)
                                          * ((v2 - 3175) ^ 0x16E)) ^ v2))
                            - 4))();
}

uint64_t sub_21E0B7584@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  int v3;
  char *v4;
  int8x16x4_t v6;
  int8x16x4_t v7;
  int8x16x4_t v8;

  v6 = vld4q_s8(v1);
  v4 = v1 + 64;
  v7.val[0] = v6.val[3];
  v7.val[1] = v6.val[2];
  v8 = vld4q_s8(v4);
  v7.val[2] = v6.val[1];
  v7.val[3] = v6.val[0];
  v6.val[0] = v8.val[3];
  v6.val[1] = v8.val[2];
  v6.val[2] = v8.val[1];
  v6.val[3] = v8.val[0];
  vst4q_s8(v1, v7);
  vst4q_s8(v4, v6);
  return ((uint64_t (*)(char *))(*(_QWORD *)(a1 + 8 * ((2552 * ((v2 & 0x1FFFFFFE0) == 32)) ^ (v3 + 938)))
                                         - 4))(v1);
}

void sub_21E0B7600()
{
  JUMPOUT(0x21E0B759CLL);
}

uint64_t sub_21E0B760C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((((((a1 - 259820926) & 0xF7C856D) + 166) ^ ((a1 - 2124) | 0x30)) * (v2 == v3)) ^ a1))
                            - 12))();
}

uint64_t sub_21E0B7650@<X0>(uint64_t a1@<X8>)
{
  char v1;
  unsigned int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((824 * ((((v1 & 0x18) == 0) ^ (v2 - 27)) & 1)) ^ v2)))();
}

uint64_t sub_21E0B7690@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  char *v5;
  int8x8x4_t v7;
  int8x8x4_t v8;

  v5 = (char *)(v1 + 4 * v3);
  v7 = vld4_s8(v5);
  v8.val[0] = v7.val[3];
  v8.val[1] = v7.val[2];
  v8.val[2] = v7.val[1];
  v8.val[3] = v7.val[0];
  vst4_s8(v5, v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v3 - (v2 & 0x1FFFFFFF8) == -8) * (((v4 - 609) | 0x140) ^ 0x145)) ^ v4))
                            - 4))();
}

void sub_21E0B76F0()
{
  JUMPOUT(0x21E0B76BCLL);
}

uint64_t sub_21E0B76F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 12) ^ 0x557) * (v1 == v3)) ^ v2)))();
}

uint64_t sub_21E0B7724@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  int v2;
  int v3;
  char v4;
  char v5;

  v4 = *v1;
  *v1 = v1[3];
  v1[3] = v4;
  v5 = v1[1];
  v1[1] = v1[2];
  v1[2] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((167 * ((v3 ^ 0x811) + v2 == 1831270014)) ^ v3)) - 12))();
}

void sub_21E0B7784(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 24) - 731811679 * (((a1 | 0x92BE802D) - (a1 & 0x92BE802D)) ^ 0xDB482669);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1D17695A8381D362) - 201714705 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1D17695A8381D362) - 201714705;
  else
    v3 = 201714705 - *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1D17695A8381D362);
  v2 = *(_QWORD *)(a1 + 8);
  if (*(_DWORD *)(v2 - 0x1D17695A8381D362) - 201714705 >= 0)
    v4 = *(_DWORD *)(v2 - 0x1D17695A8381D362) - 201714705;
  else
    v4 = 201714705 - *(_DWORD *)(v2 - 0x1D17695A8381D362);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = v1 + 1734664879 * (((&v6 | 0x6D763A1D) - (&v6 & 0x6D763A1D)) ^ 0x42AD1207) + 1014;
  sub_21E069D0C((uint64_t)&v6);
  if (v3 >= v4)
    v5 = v4;
  else
    v5 = v3;
  __asm { BR              X8 }
}

uint64_t sub_21E0B7920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  _BOOL4 v25;

  v23 = 4 * (v20 + v18);
  v24 = v14
      + v22
      + (*(_DWORD *)(*(_QWORD *)(a9 - 0x1D17695A8381D35ELL) + v23 - 0x2CF4A33C3453BA2BLL) ^ v19)
      - (*(_DWORD *)(*(_QWORD *)(a11 - 0x1D17695A8381D35ELL) + v23 - 0x2CF4A33C3453BA2BLL) ^ v19);
  *(_DWORD *)(*(_QWORD *)(a13 - 0x1D17695A8381D35ELL) + v23 - 0x2CF4A33C3453BA2BLL) = v24
                                                                                    + v19
                                                                                    - (((v17 - 1581918692) & 0x5E4A25DA ^ (v21 + 78)) & (2 * v24));
  v25 = v20 - 1298454008 < (int)(v15 + 51935535);
  if (v15 > 0x7CE786D0 != v20 - 1298454008 < -2095548113)
    v25 = v15 > 0x7CE786D0;
  return (*(uint64_t (**)(void))(v13 + 8 * ((!v25 * v16) ^ v17)))();
}

uint64_t sub_21E0B7A68()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 - 1544087279 > 1953785912 || v2 - 1544087279 < v3 - 193697735;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((((v1 - 653942980) ^ v5) & 1) == 0) * (((v1 + 575) | 0x260) ^ 0x67F)) ^ v1))
                            - 12))();
}

uint64_t sub_21E0B7AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;
  int v13;
  _BOOL4 v15;

  v15 = v13 + 1614391251 > 817297146 || v13 + 1614391251 < a11 - 1330187742 + (v12 ^ 0x5D7);
  return (*(uint64_t (**)(void))(v11 + 8 * ((v15 * (v12 - 251)) ^ v12)))();
}

uint64_t sub_21E0B7B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  _BOOL4 v29;

  v24 = v13 - 971;
  v25 = 4 * (v22 + v20);
  v26 = v15
      + v24
      + 1399
      - 1257867599
      + (*(_DWORD *)(*(_QWORD *)(a11 - 0x1D17695A8381D35ELL) + v25 - 0x2CF4A33C3453BA2BLL) ^ 0x6D506A8E);
  *(_DWORD *)(*(_QWORD *)(a13 - 0x1D17695A8381D35ELL) + v25 - 0x2CF4A33C3453BA2BLL) = v26 + v21 - (v23 & (2 * v26));
  v27 = v22 + 1 + v16;
  v29 = v27 > v17 || v27 < v19;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v29 * v18) ^ v24)))();
}

uint64_t sub_21E0B7C20()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * (((v1 != 0x45C7EB6F4AF982CALL) * (((v2 ^ 0x374) + 611) ^ 0x980)) ^ v2))
                            - 4))();
}

uint64_t sub_21E0B7C64@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((v2 + v3 - 1) < 0x7FFFFFFF) * (((a1 - 1521) | 0x509) + 2437)) ^ (a1 - 248)))
                            - 12))();
}

uint64_t sub_21E0B7F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((3738
                                          * (*(_DWORD *)(*(_QWORD *)(a13 - 0x1D17695A8381D35ELL)
                                                       - 0x2CF4A33C3453BA2BLL
                                                       + 4 * (v15 + v17 - 1)) == v16)) ^ v13 ^ 0x1F0))
                            - (((v13 ^ 0x1F0u) + 248) ^ 0x5FDLL)))();
}

uint64_t sub_21E0B7FE0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (496 * ((v4 + v3 - 2) < 0x7FFFFFFF))))
                            - v2
                            + 1509))();
}

uint64_t sub_21E0B8014@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((3738 * (*(_DWORD *)(a1 + 4 * (v3 + v5 - 1)) == v4)) ^ v1))
                            - ((v1 + 248) ^ 0x5FDLL)))();
}

void sub_21E0B8050()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  *(_DWORD *)(v3 - 0x1D17695A8381D362) = (((v2 + v1) * (v0 - 1477048150)) ^ 0xFE65FF53)
                                         + 228584638
                                         + ((2 * (v2 + v1) * (v0 - 1477048150)) & 0xFCCBFEA6);
}

void sub_21E0B80E0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 8) + 1328090399 * ((2 * (a1 & 0x3C1EE1BE) - a1 - 1008656831) ^ 0x3C327A7B);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unint64_t **)a1;
  v11 = *(_QWORD *)(v3 - 0x6075B478BABD28DBLL);
  v6 = v2;
  v7 = &STACK[0x1D17695A8381D386];
  v8 = v5;
  v9 = v3;
  v10 = v1 - 1948972247 * ((2 * (&v6 & 0x1A6E6DF0) - &v6 + 1704038925) ^ 0xD00F67E3) + 1511;
  ((void (*)(uint64_t *))*(&off_24E21C7C0 + (v1 & 0x2EDF10AF)))(&v6);
  v7 = *(unint64_t **)(v3 - 0x6075B478BABD28E3);
  v8 = &STACK[0x1D17695A8381D396];
  LODWORD(v6) = v1
              - 1734664879 * ((2 * (&v6 & 0x3E58A2D0) - &v6 - 1045996244) ^ 0xEE7C7536)
              - 1241;
  sub_21E069E70((uint64_t)&v6);
  LODWORD(v7) = v1
              + 1948972247 * ((&v6 + 290413972 - 2 * (&v6 & 0x114F5D94)) ^ 0xA4D1A87A)
              + 933;
  v6 = v4;
  sub_21E05D024((uint64_t)&v6);
  __asm { BR              X8 }
}

uint64_t sub_21E0B833C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v18 - 104) = v16;
  *(_DWORD *)(v18 - 112) = v15
                         + 1
                         - 1948972247 * ((2 * ((v18 - 144) & 0x699B54B0) - (v18 - 144) - 1771787444) ^ 0x23FA5EA2)
                         + 906;
  *(_QWORD *)(v18 - 128) = v14;
  *(_QWORD *)(v18 - 120) = v13;
  *(_QWORD *)(v18 - 144) = a12;
  *(_QWORD *)(v18 - 136) = v16;
  v19 = a11(v18 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * (int)((7
                                                             * (v12 - 1 < ((((v15 + 1020140964) & 0xC331DFFF) - 389860380) & 0x173CCE77)
                                                                        + 2147481064)) ^ (v15 + 1020140964) & 0xC331DFFF))
                                          - 12))(v19);
}

uint64_t sub_21E0B8400()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_QWORD *)(v7 - 120) = v4;
  *(_QWORD *)(v7 - 112) = v2;
  *(_QWORD *)(v7 - 144) = v4;
  *(_QWORD *)(v7 - 136) = v1;
  *(_DWORD *)(v7 - 128) = v3
                        + 1503746353 * ((((v7 - 144) | 0xDE24CC37) + (~(v7 - 144) | 0x21DB33C8)) ^ 0xF8450E80)
                        - 1004;
  ((void (*)(uint64_t))((char *)*(&off_24E21C7C0 + v3 - 2543) - 12))(v7 - 144);
  v8 = 1866394843 * ((v7 - 144) ^ 0xEA1737F4);
  *(_DWORD *)(v7 - 144) = v3 - v8 - 1388;
  *(_DWORD *)(v7 - 140) = v8 + v0 - 1007309966;
  *(_QWORD *)(v7 - 136) = v6;
  v9 = sub_21E0724BC(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((15 * (*(_DWORD *)(v7 - 128) == ((v3 - 900) | 0x128) + 1715240805)) ^ v3)))(v9);
}

uint64_t sub_21E0B84E4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((7 * (v0 - 1 < ((v1 - 389860380) & 0x173CCE77u) + 2147481064)) ^ v1))
                            - 12))();
}

uint64_t sub_21E0B852C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 24);
  v6 = 1292559617 * (((v4 - 144) & 0x2E998ABE | ~((v4 - 144) | 0x2E998ABE)) ^ 0x76351D28);
  *(_QWORD *)(v4 - 144) = v10;
  *(_DWORD *)(v4 - 136) = (v2 + 882) ^ v6;
  *(_DWORD *)(v4 - 132) = v6 ^ 0x4D0AB839;
  sub_21E0477F0(v4 - 144);
  *(_DWORD *)(v4 - 112) = v2
                        - 1948972247 * ((2 * ((v4 - 144) & 0x68D50AA8) - (v4 - 144) - 1758792363) ^ 0x22B400BB)
                        + 1511;
  *(_QWORD *)(v4 - 128) = v1;
  *(_QWORD *)(v4 - 120) = v0;
  *(_QWORD *)(v4 - 104) = v3;
  *(_QWORD *)(v4 - 144) = v10;
  *(_QWORD *)(v4 - 136) = v3;
  v9(v4 - 144);
  *(_QWORD *)(v4 - 136) = v3;
  *(_QWORD *)(v4 - 128) = v5;
  *(_DWORD *)(v4 - 144) = v2
                        - 1734664879 * ((((v4 - 144) | 0x120180BF) + (~(v4 - 144) | 0xEDFE7F40)) ^ 0x3DDAA8A4)
                        - 1241;
  return sub_21E069E70(v4 - 144);
}

void sub_21E0B8670(uint64_t a1)
{
  int v1;

  v1 = 1988622253 * (a1 ^ 0xF61840A0);
  __asm { BR              X8 }
}

uint64_t sub_21E0B86F8(uint64_t result)
{
  *(_DWORD *)(result + 16) = 1176869342;
  return result;
}

void sub_21E0B8AF8()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  int v3;

  v0 = MEMORY[0x24BDAC7A8]();
  if (*(_QWORD *)v0)
    v2 = *(_QWORD *)(v0 + 16) == 0x7398388C82CD2C7;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)(v0 + 28) ^ (1990461019 * ((v0 - 2 * (v0 & 0xFFF30092) - 851822) ^ 0xD017A21B));
  __asm { BR              X8 }
}

void sub_21E0B8C28()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 12) = v1 | 4;
}

uint64_t sub_21E0BA330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;

  LODWORD(STACK[0x464]) = STACK[0x280];
  v70 = v65 ^ 0xB9Bu;
  LODWORD(STACK[0x4E8]) = STACK[0x288];
  v67[14] = STACK[0x268];
  v67[17] = STACK[0x270];
  v67[45] = STACK[0x278];
  ++*(_DWORD *)(a65 + 52);
  LODWORD(STACK[0x4A4]) = *(_DWORD *)(a65 + 392);
  v71 = v66 + v70 - 4111 + 3 * (((_DWORD)v70 - 1410273549) & 0x540F0AFF ^ 0xBEu);
  STACK[0x220] = v71;
  v67[20] = v71;
  LODWORD(STACK[0x2D0]) = v69;
  LODWORD(STACK[0x288]) = STACK[0x4E8];
  LODWORD(STACK[0x280]) = STACK[0x464];
  return ((uint64_t (*)(void))(*(_QWORD *)(v68 + 8 * (int)((1345 * (v67[39] == 0)) ^ v70)) - 4))();
}

void sub_21E0BA37C()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x464]) = STACK[0x280];
  LODWORD(STACK[0x4E8]) = STACK[0x288];
  STACK[0x3C0] = STACK[0x268];
  STACK[0x3D8] = STACK[0x270];
  STACK[0x4B8] = STACK[0x278];
  LODWORD(STACK[0x3AC]) = v0;
  v3 = v1 + ((v2 - 848) | 0x29Fu) - 2562 + ((v2 - 848) | 0x29Fu) + 1092;
  STACK[0x220] = v3;
  STACK[0x3F0] = v3;
  LODWORD(STACK[0x2D0]) = v0;
  LODWORD(STACK[0x288]) = STACK[0x4E8];
  LODWORD(STACK[0x280]) = STACK[0x464];
  JUMPOUT(0x21E0C71E0);
}

void sub_21E0BA3CC()
{
  LODWORD(STACK[0x3B8]) = 787114181;
  JUMPOUT(0x21E0BA3E8);
}

uint64_t sub_21E0BA7F8(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  unsigned int *v10;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);

  LODWORD(STACK[0x230]) = a3;
  LODWORD(STACK[0x1898]) = v4;
  LODWORD(STACK[0x189C]) = 764495895;
  v9 = *(_DWORD **)(v6 + 8 * (v3 ^ 0x533));
  STACK[0x228] = (unint64_t)v9;
  LODWORD(STACK[0x43C]) = *v9;
  v10 = *(unsigned int **)(v6 + 8 * (v3 - 1329));
  STACK[0x260] = (unint64_t)v10;
  v11 = *v10;
  v12 = STACK[0x210];
  v13 = (v3 - 1084415251) ^ STACK[0x210];
  *(_DWORD *)(v8 - 172) = v3 + 76793309 - STACK[0x210] + 211;
  *(_DWORD *)(v8 - 168) = v13;
  v14 = v3 + 76793309 + v12;
  *(_DWORD *)(v8 - 164) = v14 + 111;
  *(_DWORD *)(v8 - 160) = v14;
  *(_DWORD *)(v8 - 156) = v12;
  *(_QWORD *)(v5 + 232) = v11 - v12;
  *(_QWORD *)(v5 + 240) = v12;
  v15 = ((uint64_t (*)(uint64_t))STACK[0x218])(v8 - 192);
  v16 = *(uint64_t (**)(uint64_t))(v7 + 8 * *(int *)(v8 - 176));
  STACK[0x2A8] = *(_QWORD *)(v6 + 8 * (v3 - 1749)) - 4;
  return v16(v15);
}

uint64_t sub_21E0BA8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,uint64_t a60,uint64_t a61)
{
  uint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  unsigned int v64;

  STACK[0x2A0] = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x258])(a61, 2965982036);
  v64 = (*(uint64_t (**)(void))(v61 + 8 * a58))();
  *v63 = v64;
  v63[1] = 1812433253 * ((v64 >> ((a59 + 42) ^ 0xF2)) ^ v64) + 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v62 + 8 * (a59 | 0x30)) - 12))();
}

void sub_21E0BA944()
{
  JUMPOUT(0x21E0BA900);
}

uint64_t sub_21E0BA954(uint64_t a1, uint64_t a2, int a3, unsigned int a4)
{
  char v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  unsigned int v11;
  unint64_t v12;

  v10 = (_BYTE *)(v9 + (a3 - 2135087872));
  v11 = -1770326851
      * ((*(_DWORD *)(*(_QWORD *)STACK[0x280] + (*(_DWORD *)STACK[0x278] & ((v6 ^ 0xC2D) - 675257003))) ^ v10) & 0x7FFFFFFF);
  v12 = -1770326851 * ((v11 >> ((v6 ^ 0x93) + 115)) ^ v11);
  LOBYTE(v12) = *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v6 - 2337)) + (v12 >> 24) - 8) ^ ((v5 ^ a4) >> (v4 - 60)) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v6 - 2605)) + (v12 >> 24) - 8) ^ *(_BYTE *)(*(_QWORD *)(v7 + 8 * (v6 - 2731)) + (v12 >> 24) - 5) ^ v12 ^ (-73 * BYTE3(v12));
  *v10 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((29 * (a3 - (v12 != 0) == 2135087871)) ^ v6))
                            - 8))();
}

uint64_t sub_21E0BB584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t (*a54)(void))
{
  unint64_t v54;

  STACK[0x498] = v54;
  STACK[0x4D8] = STACK[0x2A0];
  return a54();
}

uint64_t sub_21E0BB59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,uint64_t a58,uint64_t a59,int a60,unsigned int a61,unint64_t a62,uint64_t *a63)
{
  unint64_t a64;
  int a71;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  BOOL v76;
  int v77;

  v73 = a5 - 1291;
  v74 = *(_QWORD *)(v71 + 456);
  STACK[0x300] = *(_QWORD *)(v72 + 8 * (int)(a5 - 1755));
  a64 = ((2 * (_QWORD)&STACK[0x418]) & 0x6FF17FFFEBF7D740)
      + 0x5FF766B7FE6EFFFELL
      + ((unint64_t)&STACK[0x418] ^ 0xB7F8BFFFF5FBE9BBLL ^ v73);
  a62 = a64 + 112;
  a63 = &a9 - 0x13B95098FF30060;
  a61 = (a5 + 1717302484) & 0x99A4077A;
  a57 = (a61 - 620513141) & 0x24FC461A;
  a56 = a57 ^ 0x47;
  a71 = (a5 - 674540346) & 0x2834AFF7;
  a51 = (a5 - 309375012) & 0x1270ABFF;
  a53 = a51 ^ 0xCDC;
  LODWORD(STACK[0x210]) = a5 ^ 0x72A;
  v75 = a40;
  *(_QWORD *)(v71 + 160) = ((a5 + 909) ^ a5 ^ 0xDE3) + STACK[0x220];
  STACK[0x318] = v75;
  if (v75)
    v76 = v74 == 0x1C73FCAA0D59E849;
  else
    v76 = 1;
  v77 = !v76;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(*(_QWORD *)(v72
                                                                                         + 8 * (int)((52 * v77) ^ v73))
                                                                             - 12))(v74, a2, 163417917, 4131552223, (__n128)0);
}

uint64_t sub_21E0BB748(uint64_t a1, __n128 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  int v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;

  v68 = (char *)&STACK[0x5A0] + v66 - 0x9DCA84C7F980907;
  *(_DWORD *)v68 = 545914443;
  *((_QWORD *)v68 + 1) = 0;
  *((_DWORD *)v68 + 4) = 789502386;
  *((_DWORD *)v68 + 6) = 1810943893;
  *((_QWORD *)v68 + 4) = 0;
  *((_DWORD *)v68 + 10) = 1810943893;
  STACK[0x2E8] = (unint64_t)(v68 + 40);
  *((_QWORD *)v68 + 6) = 0;
  v65[59] = v68 + 48;
  *((_DWORD *)v68 + 14) = 1810943893;
  v65[44] = v68 + 56;
  *((_QWORD *)v68 + 8) = 0;
  v65[35] = v68 + 64;
  *((_DWORD *)v68 + 18) = 1810943893;
  *v65 = v68 + 72;
  *((_QWORD *)v68 + 10) = 0;
  STACK[0x2F8] = (unint64_t)(v68 + 80);
  v68[88] = 102;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E849) = 545914443;
  *(__n128 *)(a1 - 0x1C73FCAA0D59E845) = a2;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E835) = 0;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E831) = 1810943893;
  STACK[0x200] = a1 - 0x1C73FCAA0D59E82DLL;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E82DLL) = 1071804296;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E761) = 1071804296;
  *(__n128 *)(a1 - 0x1C73FCAA0D59E695) = a2;
  *(__n128 *)(a1 - 0x1C73FCAA0D59E685) = a2;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E675) = 0;
  strcpy((char *)(a1 - 0x1C73FCAA0D59E3E1), "22222222222222222222");
  *(_BYTE *)(a1 - 0x1C73FCAA0D59E3CCLL) = 0;
  *(_WORD *)(a1 - 0x1C73FCAA0D59E3CBLL) = 0;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E3C9) = 0;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E3C1) = 0;
  *(__n128 *)(a1 - 0x1C73FCAA0D59E3B9) = a2;
  *(__n128 *)(a1 - 0x1C73FCAA0D59E3A9) = a2;
  return ((uint64_t (*)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 + 8 * v64) - 12))(a1, v68, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64);
}

uint64_t sub_21E0BB970(__n128 a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;

  v6 = (__n128 *)(v1 + v4);
  v6[-1] = a1;
  *v6 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 224) * v3) ^ v2)) - 12))();
}

uint64_t sub_21E0BB998@<X0>(uint64_t a1@<X0>, int a2@<W8>, __n128 a3@<Q0>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 - 0x1C73FCAA0D59E2B9) = 0x341E54032A84DEE1;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E2B1) = v3;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E2A9) = v3;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E2A1) = v4;
  *(__n128 *)(a1 - 0x1C73FCAA0D59E29DLL) = a3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 ^ (4 * (a2 == 1395)))) - 4))();
}

uint64_t sub_21E0BBA3C@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(__n128 *)(v2 + v4) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a1 ^ (4 * (v3 == v4)))) - 4))();
}

uint64_t sub_21E0BBA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  char *a66;
  int v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  unint64_t v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  STACK[0x220] = v70;
  STACK[0x260] = a2 + 0x4063EA0FFD2E201;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E25DLL) = v68;
  *(_QWORD *)(a1 - 0x1C73FCAA0D59E255) = v68;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E24DLL) = v69;
  a61 = a2;
  *(_QWORD *)(a2 + 96) = a1;
  *(_QWORD *)(v67 + 48) = a2 + 96;
  a65 = a1;
  *(_DWORD *)(a1 - 0x1C73FCAA0D59E66DLL) = 665814059;
  STACK[0x280] = *(_QWORD *)(v72 + 8 * v66) + (((v66 - 180) | 0xB06u) ^ 0xFFFFFFFFFFFFF4FALL);
  v73 = *(_QWORD *)(v67 + 160);
  v74 = (char *)&a9 + v73 - 0x9DCA84C7F980367;
  STACK[0x230] = v73;
  STACK[0x228] = v73 + 432;
  STACK[0x298] = (unint64_t)v74;
  a66 = v74 + 0x593A0D77ED44011BLL;
  STACK[0x290] = STACK[0x318];
  STACK[0x3F0] = STACK[0x228];
  LODWORD(STACK[0x42C]) = -1662466727;
  LODWORD(STACK[0x3B4]) = 1810943893;
  STACK[0x3D0] = 0;
  LODWORD(STACK[0x35C]) = 1888776765;
  *(_DWORD *)STACK[0x298] = a6;
  LODWORD(STACK[0x278]) = -1586970980;
  LODWORD(STACK[0x2A0]) = 511168776;
  LODWORD(STACK[0x2A8]) = ((((v66 - 180) | 0xB06) - 521) ^ 0xE2087644) + 1231254271;
  LODWORD(STACK[0x268]) = -1893593971;
  LODWORD(STACK[0x270]) = 396411095;
  v75 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 8 * (int)((((((v66 - 180) | 0xB06) - 773) ^ 0xFFFFF295) + ((((v66 - 180) | 0xB06) - 773) | 0x146)) ^ (((v66 - 180) | 0xB06) - 521)));
  LODWORD(STACK[0x288]) = v71;
  return v75(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61);
}

uint64_t sub_21E0BBC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  return (*(uint64_t (**)(void))(v10 + 8 * ((147 * (v8 == ((v9 - 2341) | 0x101) + (v9 ^ 0xAC6 ^ (a8 - 164)))) ^ v9)))();
}

uint64_t sub_21E0BBCA4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v0 + 381) ^ 0x41E) - 1730) & (v1 - 1810943890)) - LODWORD(STACK[0x288]) == -1810943893)
                                * (((v0 + 381) | 0x41E) ^ 0x6BA)) | v0)))();
}

uint64_t sub_21E0BBCF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * (v7 ^ (3563 * (v6 != a6)))) - ((v7 - 1405) | 0x806u) + 2371))();
}

uint64_t sub_21E0BBD2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  _BOOL4 v11;

  v11 = v6 != a6 && LODWORD(STACK[0x35C]) - v8 == v7 + 77831146;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((3563 * v11) ^ v7)) - 4))();
}

uint64_t sub_21E0BBD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  int v15;

  v13 = (_DWORD *)STACK[0x298];
  *v13 = v8 - 1;
  v14 = &v13[6 * (v8 - 629260516)];
  v15 = v14[2];
  STACK[0x290] = *((_QWORD *)v14 + 2);
  LODWORD(STACK[0x35C]) = v14[6];
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v11 + (v15 + a7) * (uint64_t)v10 + 36) == a8 + v9 - 829 - 897)
                                * ((v9 - 1440) ^ 0x115)) ^ (v9 + 649))))();
}

uint64_t sub_21E0BBE28()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v3 = LODWORD(STACK[0x35C]) - 2060298240;
  v4 = ((v1 - 1982465368) < 0xF5C6CA3D) ^ (v3 < (((v0 ^ 0x29F) + 1843) ^ 0xF5C6C26C));
  v5 = v3 < v1 - 1982465368;
  if (v4)
    v5 = (v1 - 1982465368) < 0xF5C6CA3D;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((60 * v5) | v0)) - 12))();
}

uint64_t sub_21E0BBE9C()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;

  v3 = 2009815553 * (((((v2 - 192) | 0xFE880E16) ^ 0xFFFFFFFE) - (~(v2 - 192) | 0x177F1E9)) ^ 0xF07CDFAC);
  STACK[0x1980] = STACK[0x238];
  *(_DWORD *)(v2 - 168) = v1 - v3 + 2700;
  *(_DWORD *)(v2 - 136) = v0 - v3 + ((971 * (v1 ^ 0x11C)) ^ 0xE3126B4A);
  STACK[0x1960] = STACK[0x250];
  v4 = STACK[0x248];
  STACK[0x1970] = STACK[0x290];
  STACK[0x1978] = v4;
  STACK[0x1950] = STACK[0x240];
  v5 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + v1 + 138) - 4))(v2 - 192);
  return ((uint64_t (*)(uint64_t, __n128))(*(_QWORD *)(STACK[0x2B0]
                                                              + 8
                                                              * (((*(_DWORD *)(v2 - 184) == 939001227)
                                                                * ((261 * (v1 ^ 0x119)) ^ 0xBB1)) ^ v1))
                                                  - 8))(v5, (__n128)0);
}

uint64_t sub_21E0BBFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * ((25 * (*(_DWORD *)(v9 + (v11 + a7) * (uint64_t)v8) != 462742189)) ^ (v7 - 1709376414) & 0x65E2FFE7))
                            - (((v7 - 1709376414) & 0x65E2FFE7 ^ 0x4C3u)
                             - 392)
                            + 1427))();
}

uint64_t sub_21E0BC034()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (89 * (v0 == v2 - 479519405))))
                            - ((v1 + 1639184908) & 0x9E4C077B ^ (203 * (v1 ^ 0x592)) ^ 4)))();
}

uint64_t sub_21E0BC090()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((431 * (((v0 - 1819) & *(_DWORD *)(v2 + v4 * (uint64_t)v1 + 40)) != 0)) ^ (v0 + 474))))();
}

uint64_t sub_21E0BC0C4@<X0>(int a1@<W4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  if ((a2 + 1662466747) <= 0x10 && ((1 << (a2 - 69)) & 0x10125) != 0)
    return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                          + 8
                                          * ((433
                                            * (((((a1 - 1716244388) & 0x664BCFD3) - 1874) & *(_DWORD *)(v3 + v5 * (uint64_t)v2 + 40)) != 0)) ^ (a1 + 351)))
                              - (((a1 - 1762) | 0x63Cu) ^ 0x679)))();
  else
    return (*(uint64_t (**)(void))(v4
                                + 8
                                * ((431 * (((a1 - 1819) & *(_DWORD *)(v3 + v5 * (uint64_t)v2 + 40)) != 0)) ^ (a1 + 474))))();
}

uint64_t sub_21E0BC3BC()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((((v0 - 1127) ^ v0 ^ 0x763 ^ 0x3EE) * ((v1 >> 1) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_21E0BC3EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62)
{
  int v62;
  int v63;
  int v64;
  uint64_t v65;
  int v66;
  unint64_t v67;
  int v68;

  v67 = STACK[0x298];
  *(_DWORD *)(v67 + 392) = a1;
  *(_DWORD *)(v67 + 396) = STACK[0x3B4];
  *(_QWORD *)(v67 + 400) = STACK[0x3D0];
  *(_DWORD *)(v67 + 408) = 545914443 - v63 + LODWORD(STACK[0x35C]);
  *(_QWORD *)(v67 + 416) = STACK[0x290] + (v63 - 1888776765);
  v68 = (*(uint64_t (**)(unint64_t, uint64_t))(v65 + v66 * (uint64_t)v64 + 8))(STACK[0x260], a62);
  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x2B0]
                                                     + 8
                                                     * ((2023
                                                       * (v68 + 939001227 - ((2 * v68) & 0x6FF00B16) == ((v62 + 226) | 0x523) + 938999400)) ^ v62))
                                         - 8))((__n128)0);
}

uint64_t sub_21E0BC4CC()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1
                                           + 8
                                           * ((15
                                             * (((LODWORD(STACK[0x3B4]) - 1810943893) ^ 0xBBAE7BEDE97EFF2FLL)
                                              + 0x4451841244448538
                                              + ((2 * (LODWORD(STACK[0x3B4]) - 1810943893)) & 0x1D2FDFE5ELL) != 767788135)) ^ v0)))((v0 + 1443993707) & 0xA9EE615F);
}

uint64_t sub_21E0BC574@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;

  v5 = (a1 - 2661) | 1;
  v6 = *(unsigned __int8 *)(STACK[0x3D0] + (v5 ^ 0x10Cu) + 1846 - 1875)
     - (*(_BYTE *)(*(_QWORD *)(v2 + v4 * (uint64_t)v1 + 24)
                                  - 0x1120614314C08C48
                                  + (v5 ^ 0x10Cu)
                                  + 1846
                                  - 1875)
                       - 102);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((2 * v6) & 0x7DEFFC3E) + (v6 ^ 0x3EF7FE1F) != 1056439839)
                                          * ((63 * (v5 ^ 0x10C)) ^ 0x72C)) ^ v5))
                            - 8))();
}

uint64_t sub_21E0BC63C()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = v0 < v1;
  if (v5 == v2 - 0x740E27C1A657895CLL < ((v3 - 1589) ^ 0x2DC38468 ^ (unint64_t)(13 * (v3 ^ 0x746u))))
    v5 = v2 - 0x740E27C1A657895CLL < v0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3110 * v5) ^ v3)))();
}

void sub_21E0BC6B0()
{
  JUMPOUT(0x21E0BC5BCLL);
}

uint64_t sub_21E0BC6B8@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((a1 ^ 0x63D) - 1293) ^ 0x5F1) * (v2 - v3 + a2 + 1190369290 == 1126999762)) ^ a1))
                            - 8))();
}

uint64_t sub_21E0BC708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (((*(_DWORD *)(v10 + v12 * (uint64_t)v8 + 32) == a8)
                                          * ((22 * (v9 ^ 0x21B)) ^ 0x19D)) ^ v9))
                            - ((v9 - 278) | 0x1Eu)
                            + 274))();
}

uint64_t sub_21E0BC750()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v5 = *(_DWORD *)(v2 + v4 * (uint64_t)v1 + 36) - 583088666;
  v7 = v5 > -1751072580 && v5 < SLODWORD(STACK[0x270]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v7 * ((v0 + 1541) ^ 0x5BA)) ^ v0)) - 8))();
}

uint64_t sub_21E0BC7B0@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((105 * (*(_DWORD *)STACK[0x298] - 629260515 < ((a1 + 1252) | 0x121u) - 1811)) ^ a1))
                            - 8))();
}

uint64_t sub_21E0BC7FC@<X0>(int a1@<W8>)
{
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  unint64_t v9;
  _BOOL4 v11;

  v7 = STACK[0x35C];
  v8 = (_DWORD *)STACK[0x298];
  v9 = STACK[0x298] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v6;
  *(_DWORD *)(v9 + 12) = v4;
  *(_QWORD *)(v9 + 16) = STACK[0x290];
  *(_DWORD *)(v9 + 24) = v7;
  *v8 = v1 + 1;
  v11 = v3 + 1421873564 > 253889650 || v3 + 1421873564 < SLODWORD(STACK[0x268]);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((((a1 ^ 0x63D) + a1 + 617 + 372) * v11) ^ a1)) - 8))();
}

void sub_21E0BC870()
{
  STACK[0x290] = STACK[0x3D0];
  LODWORD(STACK[0x35C]) = 1888776765;
  JUMPOUT(0x21E0BC8A8);
}

uint64_t sub_21E0BC8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  _BOOL4 v12;

  v12 = *(_DWORD *)STACK[0x298] != a6 || v9 != a8;
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((v12 * (((v8 - 252) ^ 0xFFFFF295) + ((v8 - 252) | 0x146))) ^ v8)))();
}

uint64_t sub_21E0BC940()
{
  STACK[0x3F0] = STACK[0x230];
  return ((uint64_t (*)(void))STACK[0x280])();
}

uint64_t sub_21E0BC95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((866 * (v5 == ((a5 - 1655) ^ (v7 - 100)))) ^ (a5 - 1674))) - 12))();
}

void sub_21E0BC98C(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;

  v3 = *(unint64_t **)(v1 + 472);
  STACK[0x260] = STACK[0x200];
  STACK[0x290] = *v3;
  STACK[0x280] = *(_QWORD *)(v2 + 8 * a1) + ((a1 + 491015771) & 0xE2BBBBFE ^ 0xFFFFFFFFFFFFF4F2);
  JUMPOUT(0x21E0BBB70);
}

uint64_t sub_21E0BCA40@<X0>(uint64_t (*a1)(void)@<X8>)
{
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x278] = v2;
  *(_QWORD *)(v3 + 160) = v2 - 112;
  STACK[0x2A8] = *(_QWORD *)(v4 + 8 * (v1 ^ 0x66C)) - 4;
  return a1();
}

uint64_t sub_21E0BCA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59,char a60,uint64_t a61,char a62,uint64_t a63)
{
  uint64_t a70;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  *(_QWORD *)(a70 - 0x1C73FCAA0D59E231) = *(_QWORD *)STACK[0x2F8];
  *(_DWORD *)(a70 - 0x1C73FCAA0D59E239) = **(_DWORD **)v70;
  v72 = *(_QWORD **)(v70 + 48);
  *(_QWORD *)(*v72 - 0x1C73FCAA0D59E661) = *(_QWORD *)(a63 + 8);
  *(_DWORD *)(*v72 - 0x1C73FCAA0D59E669) = *(_DWORD *)a63;
  *(_BYTE *)(a61 + STACK[0x220]) = ((a62 + a54) ^ 0xBA) * a60;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v71 + 8 * a59) - 8))(186);
}

uint64_t sub_21E0BCB88@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t (*v50)(void);

  *(_QWORD *)(v48 + 200) = 104 - a1;
  v49 = *(_QWORD *)(v48 + 160);
  v50 = (uint64_t (*)(void))STACK[0x300];
  STACK[0x278] = v49;
  *(_QWORD *)(v48 + 160) = v49 - 112;
  STACK[0x2A8] = *(_QWORD *)(v47 + 8 * ((9 * (a47 ^ 0x2D3)) ^ 0x66C)) - 4;
  return v50();
}

uint64_t sub_21E0BCBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52)
{
  unint64_t v52;
  int v53;
  uint64_t v54;
  int v55;

  STACK[0x220] = v52;
  return ((uint64_t (*)(void))(*(_QWORD *)(v54 + 8 * ((a52 * (v53 == v55)) ^ (a5 - 1060))) - 12))();
}

uint64_t sub_21E0BCBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v53 = STACK[0x518];
  STACK[0x2D8] = STACK[0x518];
  STACK[0x398] = 0;
  LODWORD(STACK[0x34C]) = 1810943893;
  STACK[0x400] = 0;
  LODWORD(STACK[0x2C4]) = 1810943893;
  STACK[0x4D0] = v51;
  return ((uint64_t (*)(void))(*(_QWORD *)(v52
                                        + 8
                                        * (((((v53 == v51) ^ (a51 + 4)) & 1)
                                          * ((63 * (a51 ^ 0x2E2)) ^ 0x1D)) ^ a51))
                            - 12))();
}

uint64_t sub_21E0BCC78@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((70
                                * (((v1 ^ 0x2E)
                                                   + *(_BYTE *)(a1 - 0x1C73FCAA0D59E829)
                                                   - *((_BYTE *)*(&off_24E21C7C0 + (v1 ^ 0x61A)) - 8)
                                                   - 76) != (11 * (v1 ^ 0x64) - 29))) ^ (v1 + 733))))();
}

uint64_t sub_21E0BCD2C()
{
  int v0;
  int v1;
  char v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 == 124) ^ (3 * (v0 ^ v2))) & 1) * v4) ^ v0)))();
}

void sub_21E0BCD54()
{
  JUMPOUT(0x21E0BCCE8);
}

uint64_t sub_21E0BCD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  int v67;
  uint64_t v68;
  int v69;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v68
                                                               + 8
                                                               * ((1502 * (v67 == v69 + a67 - 3041)) ^ (a5 - 1645)))
                                                   - 8))(1165, 50);
}

uint64_t sub_21E0BCDBC(int a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a67;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;

  v71 = ((((((a67 + 37) | 0xB0) + a3) & a4) + 95) ^ *(unsigned __int8 *)(STACK[0x4D0]
                                                                                        - 0x1C73FCAA0D59E25DLL
                                                                                        + v69
                                                                                        + 0xB92C2BE3D395DDALL))
      - (*(_BYTE *)(STACK[0x510] + v69 + 0xB92C2BE3D395DDALL) - 35);
  return ((uint64_t (*)(void))(*(_QWORD *)(v67
                                        + 8
                                        * ((((v70 & (2 * v71)) + (v71 ^ (v68 + 1825)) == (((((a67 - 3035) | 0xB0) + 1133) | 0x200) ^ v68))
                                          * a1) ^ ((a67 - 3035) | 0xB0)))
                            - 8))();
}

uint64_t sub_21E0BCE68(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 + ((v3 - 2893) | 0x30u) + 1645 - 1826 != v5 + 20) * a2) ^ v3))
                            - 8))();
}

uint64_t sub_21E0BCEA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  int v5;

  v5 = (v3 + 246) | 0x320;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((*(_BYTE *)(a3 + a2)
                                                             - *(_BYTE *)(*(_QWORD *)(a1 + 8 * (v5 - 1439)) - 8)) != 47)
                                          * ((v5 - 569) ^ v5 ^ 0x3FF ^ 0x3A)) ^ (v5 - 846)))
                            - 12))();
}

uint64_t sub_21E0BCF90(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((203 * (((v3 - 476) | v5) ^ a3) - 1773) * (v4 == 124)) ^ v3))
                            - 12))();
}

void sub_21E0BCFC4()
{
  JUMPOUT(0x21E0BCF50);
}

uint64_t sub_21E0BCFD0@<X0>(uint64_t a1@<X0>, char a2@<W4>, char a3@<W5>, uint64_t a4@<X6>, int a5@<W7>, uint64_t a6@<X8>)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((((*(_BYTE *)(a6 + a4)
                                                             - *(_BYTE *)(*(_QWORD *)(a1
                                                                                    + 8
                                                                                    * (((v6 - 1257) | 0x722) ^ 0x6EE))
                                                                        - 12)
                                                             - 63) == (((((v6 + 23) | 0x22) + a2) & a3)
                                                                                      - 37))
                                          * a5) ^ (((v6 - 1257) | 0x722) + 453)))
                            - 4))();
}

uint64_t sub_21E0BD078(uint64_t a1, int a2)
{
  int v2;
  int v3;
  char v4;
  char v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (((((v2 == 124) ^ ((v3 ^ v4) * v5 + 1)) & 1) * a2) ^ v3))
                            - 12))();
}

void sub_21E0BD0A8()
{
  JUMPOUT(0x21E0BD038);
}

uint64_t sub_21E0BD0B8()
{
  char v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  v5 = (v1 - 555383319) & 0x211A7F75;
  v6 = (char)(((v1 - 23) & 0x75 ^ 0xF0) + v0) - (char)(v2 - 77);
  LODWORD(STACK[0x298]) = (v6 ^ 0x517DEFF6) - 5808592 + ((2 * v6) & 0xA2FBDFEC);
  v7 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x258])(1576, 2940923044);
  STACK[0x4D0] = v7 + v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((((v7 == 0) ^ (9 * (v5 ^ 0xBF))) & 1)
                                          * (20 * (v5 ^ 0xDD6) - 3041)) ^ v5))
                            - 4))();
}

uint64_t sub_21E0BD18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v62 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x258])(1576, 3012117910);
  STACK[0x2C8] = v62 + 0x1C73FCAA0D59E849;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (int)(((((v62 == 0) ^ (v61 + 69) ^ 0xCE) & 1) * ((v61 + 456561477) & 0xE4C96D97 ^ 0xD94)) | v61)))(v62, v63, v64, v65, v66, v67, v68, v69, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60);
}

uint64_t sub_21E0BD210()
{
  int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = v0 == ((v1 + 115032186) & 0xF924BBDF) + 1361396807;
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((((((v1 - 1919) ^ v3) & 1) == 0) | (2 * ((((v1 - 1919) ^ v3) & 1) == 0))) ^ v1)))();
}

uint64_t sub_21E0BD27C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((54 * (v3 == (((a1 ^ 0xFED) - 44) ^ (v1 - 1542)))) ^ a1)) - 12))();
}

uint64_t sub_21E0BD2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,unint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a64)(uint64_t);
  unint64_t v64;
  int v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t);

  v71 = (v66 ^ 0xEA1737F4) * v65;
  STACK[0x1958] = v64;
  *(_DWORD *)(v70 - 152) = v71 + 1191936615;
  *(_DWORD *)(v70 - 176) = (v68 - 154) ^ v71;
  STACK[0x1968] = a44;
  STACK[0x1970] = a45;
  v72 = a64(v70 - 192);
  v73 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v69
                                                    + 8 * (((*(_DWORD *)(v70 - 192) != v67) * (v68 - 1490)) ^ v68))
                                        - (v68 - 1360)
                                        + 170);
  STACK[0x2A0] = (unint64_t)*(&off_24E21C7C0 + v68 - 1106) - 4;
  return v73(v72);
}

uint64_t sub_21E0BD394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,unint64_t a44,unint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a64)(uint64_t);
  unint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;

  STACK[0x2A0] = v64;
  v68 = 1866394843 * ((((2 * (v67 - 192)) | 0xAF01F952) - (v67 - 192) - 1468071081) ^ 0xBD97CB5D);
  STACK[0x1968] = a44;
  STACK[0x1970] = a45;
  STACK[0x1958] = 0x73D8B50DC9C1C9F4;
  *(_DWORD *)(v67 - 176) = (v65 - 154) ^ v68;
  *(_DWORD *)(v67 - 152) = v68 + 1191936613;
  v69 = a64(v67 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v66
                                                      + 8
                                                      * (((*(_DWORD *)(v67 - 192) != 939001227)
                                                        * (((((2 * v65) ^ 0xCBA) - 146) | 0x92) - 130)) ^ v65))
                                          - 12))(v69);
}

uint64_t sub_21E0BD484()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x2A0] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((((v0 + 2115) ^ (v0 - 1404)) * (LODWORD(STACK[0x298]) == v1)) ^ v0))
                            - 12))();
}

uint64_t sub_21E0BD4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a64)(uint64_t);
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  _QWORD *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;

  v72 = ((v66 - 701182552 - 2 * (v66 & 0xD634CDA8)) ^ 0x3C23FA5C) * v65;
  v68[33] = a45;
  v68[32] = a44;
  *(_DWORD *)(v71 - 176) = (v67 - 154) ^ v72;
  *(_DWORD *)(v71 - 152) = v72 + 1191936613;
  v68[30] = v64;
  v73 = a64(v71 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v69
                                                      + 8
                                                      * ((52
                                                        * (((v67 - 1) ^ (*(_DWORD *)(v71 - 192) == v70)) & 1)) ^ v67))
                                          - ((v67 - 1392) | 0x20u)
                                          + 170))(v73);
}

uint64_t sub_21E0BD5A0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  int v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  int v47;

  v45 = ((-2103483308 - (v36 | 0x829F6454) + (v36 | 0x7D609BAB)) ^ 0x9777AC5F) * v38;
  v40[33] = a36;
  v40[32] = a35;
  v40[30] = v37;
  *(_DWORD *)(v44 - 176) = (v39 + 1206) ^ v45;
  *(_DWORD *)(v44 - 152) = a1 + v45;
  v46 = v42(v44 - 192);
  v47 = *(_DWORD *)(v44 - 192);
  STACK[0x510] = STACK[0x2A0];
  return ((uint64_t (*)(uint64_t, __n128))(*(_QWORD *)(v41
                                                              + 8
                                                              * ((1613
                                                                * (v47 == (v39 ^ 0x795 ^ (v43 - 3136)) + v39 + 1645)) ^ v39))
                                                  - 8))(v46, (__n128)0);
}

void sub_21E0BD6B4()
{
  JUMPOUT(0x21E0BD6E0);
}

uint64_t sub_21E0BD704()
{
  int v0;
  uint64_t v1;

  STACK[0x510] = STACK[0x2A0];
  return (*(uint64_t (**)(void))(v1 + 8 * ((2260 * (STACK[0x400] != 0)) ^ (v0 + 262))))();
}

uint64_t sub_21E0BE340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void (*a66)(void);
  uint64_t v66;
  int v67;
  uint64_t v68;

  a66();
  return (*(uint64_t (**)(void))(v68
                              + 8
                              * (((2 * (*(_QWORD *)(v66 + 72) == 0)) | (32 * (*(_QWORD *)(v66 + 72) == 0))) ^ (v67 - 330))))();
}

uint64_t sub_21E0BE374()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_QWORD *)(v0 + 384) != 0x1C73FCAA0D59E849)
                                          * ((v1 + 437) ^ (v1 - 910) ^ 0xB62)) ^ (v1 + 437)))
                            - 12))();
}

uint64_t sub_21E0BE3B8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((3672
                                          * (((v0 + 106) ^ (STACK[0x2C8] == 0x1C73FCAA0D59E849)) & 1)) ^ v0))
                            - 4))();
}

uint64_t sub_21E0BE3F8()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((416 * (v2 == ((v0 - 1502305160) & 0x598B5FAB ^ (v1 - 739)))) ^ v0))
                            - (v0 ^ 0x2F3)))();
}

uint64_t sub_21E0BE550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unint64_t a34)
{
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;

  LODWORD(STACK[0x4EC]) = 1194114437;
  LODWORD(STACK[0x3EC]) = 128;
  v38 = STACK[0x518];
  v39 = STACK[0x3C8];
  STACK[0x1958] = STACK[0x340];
  STACK[0x1960] = v38 + 0xA36CB07627EE3DLL;
  STACK[0x1950] = 0;
  v40 = 1734664879 * ((((2 * (v37 - 192)) | 0x7E4AA72C) - (v37 - 192) - 1059410838) ^ 0x10FE7B8C);
  *(_DWORD *)(v37 - 144) = v40 + v34 - 285;
  *(_DWORD *)(v37 - 140) = 1205354840 - v40;
  STACK[0x1970] = v39;
  STACK[0x1978] = v38 + 0xA36CB07627ED2DLL;
  STACK[0x1988] = a34;
  STACK[0x1990] = 0;
  v41 = ((uint64_t (*)(uint64_t))STACK[0x2A8])(v37 - 192);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36
                                                      + 8
                                                      * ((7
                                                        * (*(_DWORD *)(v37 - 168) != v35 + ((v34 + 264) | 0x323) - 1827)) ^ v34))
                                          - ((v34 + 264) ^ 0x74Fu)
                                          + 835))(v41);
}

uint64_t sub_21E0BE660()
{
  int v0;
  int v1;
  uint64_t v2;

  STACK[0x3F0] = STACK[0x278] - 1824;
  LODWORD(STACK[0x3AC]) = v0;
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x530] != 0) * (((v1 + 1404) ^ 0xFE8) - 771)) ^ (v1 + 1404))))();
}

uint64_t sub_21E0BE6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v5 + 8 * (((LODWORD(STACK[0x3AC]) != v6 + v4 + 1397 - 2284) * ((7 * (v4 ^ 0x31E)) ^ 0x238)) ^ v4))
                                                                                       - 8))(a1, a2, a3, a4, STACK[0x2B8]);
}

uint64_t sub_21E0BE788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,uint64_t a41,uint64_t a42)
{
  unsigned int v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;

  v48 = 1948972247 * ((2109518235 - ((v47 - 192) | 0x7DBCB19B) + ((v47 - 192) | 0x82434E64)) ^ 0x37DDBB8A);
  *(_DWORD *)(v47 - 176) = v48 + LODWORD(STACK[0x4A4]) + 902436971;
  *(_DWORD *)(v47 - 172) = v42 - v48 - 162;
  *(_DWORD *)(v47 - 168) = v48 + 1303832999 * a40 + 1849976412;
  v43[33] = a38;
  v43[34] = a42;
  v43[30] = a37;
  v49 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v44 + 8 * (v42 ^ 0x38E)) - 8))(v47 - 192);
  v50 = *(_DWORD *)(v47 - 192);
  LODWORD(STACK[0x2D0]) = v50;
  return (*(uint64_t (**)(uint64_t))(v45
                                            + 8
                                            * ((2419 * (v50 == v46 + ((v42 + 559580228) & 0xDEA57FFF) - 1827)) ^ v42)))(v49);
}

uint64_t sub_21E0BE884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,unint64_t a46,unint64_t a47,uint64_t a48,unint64_t a49,unint64_t a50)
{
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  unint64_t v55;
  int v56;
  int v57;
  unint64_t v58;
  unint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  char *v65;

  STACK[0x4F0] = STACK[0x488];
  LODWORD(STACK[0x3A8]) = STACK[0x2D4];
  v53 = STACK[0x4A4];
  if ((LODWORD(STACK[0x4A4]) - 28794009) >= 2)
  {
    if (v53 != 28794011)
    {
      LODWORD(STACK[0x2D0]) = -939041180;
      v65 = (char *)&a9 + STACK[0x220] - 0x9DCA84C7F980367;
      STACK[0x268] = (unint64_t)(v65 + 2048);
      STACK[0x270] = (unint64_t)(v65 + 2176);
      STACK[0x2A8] = (unint64_t)v65;
      STACK[0x278] = (unint64_t)(v65 + 2304);
      JUMPOUT(0x21E0B99D4);
    }
    v54 = (a5 - 1823) | 0x2DB;
    v59 = STACK[0x488];
    v60 = STACK[0x2D4];
    v61 = 1734664879 * ((v52 - 192) ^ 0x2FDB281A);
    STACK[0x1978] = STACK[0x4F0];
    STACK[0x1980] = v59;
    *(_DWORD *)(v52 - 160) = -1652556219 - v61 + a5;
    STACK[0x1960] = a47;
    STACK[0x1958] = a46;
    *(_DWORD *)(v52 - 192) = -1037661779 - v61;
    *(_DWORD *)(v52 - 168) = v61 + 1513351342 + v60 * (v54 + 293839126);
  }
  else
  {
    v54 = a5 - 1092;
    v55 = STACK[0x488];
    v56 = STACK[0x2D4];
    v57 = 1734664879 * ((~((v52 - 192) | 0x62F43C36) + ((v52 - 192) & 0x62F43C36)) ^ 0xB2D0EBD3);
    STACK[0x1978] = STACK[0x4F0];
    STACK[0x1980] = v55;
    *(_DWORD *)(v52 - 160) = -1652556219 - v57 + a5;
    *(_DWORD *)(v52 - 168) = v57 + 1513351342 + 293839861 * v56;
    *(_DWORD *)(v52 - 192) = v53 - v57 - ((2 * v53 - 57588016) & 0x844D135C) + ((a5 - 1092) ^ 0xC06F2FC9);
    v58 = a50;
    STACK[0x1958] = a49;
    STACK[0x1960] = v58;
  }
  v62 = sub_21E0DD6B0(v52 - 192);
  v63 = *(_DWORD *)(v52 - 164);
  LODWORD(STACK[0x2D0]) = v63;
  return (*(uint64_t (**)(uint64_t))(v50 + 8 * (((v63 == v51) * ((v54 + 1092) ^ 0xEE2)) ^ v54)))(v62);
}

uint64_t sub_21E0BEC24()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v0 - STACK[0x410] < ((v1 - 38) ^ 0x309uLL)) * (v1 ^ 0x452)) ^ v1))
                            - 12))();
}

uint64_t sub_21E0BEC78@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v2 - 1622060458) = *(_BYTE *)(v4 + v2 - 1622060458)
                                   - ((2 * *(_BYTE *)(v4 + v2 - 1622060458)) & 0x64)
                                   + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1915 * (v2 - 1 != v3)) ^ v1)) - 12))();
}

uint64_t sub_21E0BECCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  int8x16_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;

  v6 = v4 + 127 - v1;
  v7 = vrev64q_s8(*(int8x16_t *)(v6 - 15));
  v8 = vextq_s8(v7, v7, 8uLL);
  v9 = vrev64q_s8(*(int8x16_t *)(v6 - 31));
  v10 = vextq_s8(v9, v9, 8uLL);
  v11 = a1 + 127 - v1;
  v12.i64[0] = 0x6464646464646464;
  v12.i64[1] = 0x6464646464646464;
  v13.i64[0] = 0x3232323232323232;
  v13.i64[1] = 0x3232323232323232;
  v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v12)), v13));
  *(int8x16_t *)(v11 - 15) = vextq_s8(v14, v14, 8uLL);
  v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v12)), v13));
  *(int8x16_t *)(v11 - 31) = vextq_s8(v15, v15, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8 * (((((v1 == 96) ^ (-107 * (v3 ^ 0x38))) & 1) * v2) ^ v3))
                            - 12))();
}

uint64_t sub_21E0BED6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  uint64_t v66;
  BOOL v67;

  LODWORD(STACK[0x3AC]) = 939001227;
  v67 = *(_DWORD *)(a65 + 392) - 28794010 < ((v65 - 2111363574) & 0x7DD8D9FC ^ 0xFFFFF612);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 + 8 * ((((v65 + 10) ^ 0xCC ^ v67) & 1 | (8 * (((v65 + 10) ^ 0xCC ^ v67) & 1))) ^ v65)) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_21E0BEDEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  char *v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  unint64_t v37;

  v29 = STACK[0x3B8];
  v30 = STACK[0x2B8];
  if (LODWORD(STACK[0x3B8]) == 787114181)
  {
    v37 = (480 * (v30 ^ 0x721)) ^ 0xF62357B38067EC19;
    v32 = (char *)&STACK[0x5A0] + v25 + v37;
    STACK[0x2A0] = (unint64_t)(v32 + 0x1464535CD0E672DLL);
    LODWORD(STACK[0x54C]) = 1625327498;
    STACK[0x3F0] = v25 - 176;
    STACK[0x430] = 0;
    LODWORD(STACK[0x450]) = 1810943893;
    v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * (((2 * (v32 != (char *)-272)) | (16 * (v32 != (char *)-272))) ^ ((int)v30 - 1310))) - 12);
    STACK[0x260] = STACK[0x4B8];
    STACK[0x2A8] = (unint64_t)(v32 + 228);
    STACK[0x298] = (unint64_t)v32;
    STACK[0x200] = (unint64_t)(v32 + 248);
    return v33(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, v37, a20, a21);
  }
  else if (v29 == 1055549640)
  {
    LODWORD(STACK[0x3AC]) = v24 + 97;
    return (*(uint64_t (**)(void))(v27
                                + 8
                                * (int)(((*(_QWORD *)(v26 + 480) != 0) * (((v30 + 1404) ^ 0xFE8) - 771)) ^ (v30 + 1404))))();
  }
  else
  {
    v34 = 225134719 * (((((v28 - 192) | 0x120B7FAA) ^ 0xFFFFFFFE) - (~(v28 - 192) | 0xEDF48055)) ^ 0xFB04C57F);
    STACK[0x1950] = a24;
    *(_DWORD *)(v28 - 184) = v29 - v34 - ((2 * v29 + 573255286) & 0x6FF00B16) + 151887046;
    *(_DWORD *)(v28 - 180) = (v30 + 1368) ^ v34;
    v35 = v30;
    v36 = sub_21E05C00C(v28 - 192);
    return (*(uint64_t (**)(uint64_t))(v27
                                              + 8
                                              * (((*(_QWORD *)(v26 + 480) != 0) * (((v35 + 1404) ^ 0xFE8) - 771)) ^ (v35 + 1404))))(v36);
  }
}

void sub_21E0BEEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void (*a26)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t *, uint64_t, uint64_t, unint64_t *),uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int *a66;
  int v66;
  uint64_t v67;
  uint64_t v68;

  a26(*a66, (v66 - 28794008), a36 ^ 0x35CED64Du, a66[13] - 2014623902, &STACK[0x18A0], v67, v68, &STACK[0x1878]);
  JUMPOUT(0x21E0BEF78);
}

uint64_t sub_21E0BF064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  _QWORD *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  int v57;
  int v58;
  unint64_t v59;
  int v60;
  int v61;
  int v62;

  if ((v51 - 28794009) >= 2)
  {
    if (v51 != 28794011)
    {
      v62 = STACK[0x2D0];
      goto LABEL_7;
    }
    v59 = STACK[0x488];
    v60 = STACK[0x2D4];
    v61 = 1988622253 * ((((2 * (v55 - 192)) | 0xEE1BEFD2) - (v55 - 192) + 150079511) ^ 0x115B749);
    v50[34] = a47;
    v50[35] = a46;
    v50[32] = v59;
    *(_DWORD *)(v55 - 136) = -1988622253 * ((((2 * (v55 - 192)) | 0xEE1BEFD2) - (v55 - 192) + 150079511) ^ 0x115B749)
                           + 103024415 * v60
                           + 1873445565;
    *(_DWORD *)(v55 - 192) = a5 - v61 - 1814972947;
    *(_DWORD *)(v55 - 176) = v61 ^ 0x72AE8A0C;
    v50[30] = v52;
  }
  else
  {
    v56 = STACK[0x2D4];
    v57 = (v55 - 192) | 0xF277EBDB;
    v58 = 1988622253 * ((v57 - ((v55 - 192) & 0xF277EBDB)) ^ 0x46FAB7B);
    v50[32] = STACK[0x488];
    v50[30] = v52;
    *(_DWORD *)(v55 - 136) = -1988622253 * ((v57 - ((v55 - 192) & 0xF277EBDB)) ^ 0x46FAB7B)
                           + 103024415 * v56
                           + 1873445565;
    *(_DWORD *)(v55 - 176) = (v51 + 1895247217) ^ v58;
    *(_DWORD *)(v55 - 192) = a5 - v58 - 1814972947;
    v50[34] = a50;
    v50[35] = a49;
  }
  a1 = sub_21E0DFA68(v55 - 192);
  a5 = STACK[0x2B8];
  v62 = *(_DWORD *)(v55 - 160);
  LODWORD(STACK[0x2D0]) = v62;
LABEL_7:
  LODWORD(STACK[0x288]) = 1773113831;
  return (*(uint64_t (**)(uint64_t))(v53 + 8 * (int)(((v62 == v54) * ((a5 - 1092) ^ 0x653)) ^ (a5 - 1092))))(a1);
}

uint64_t sub_21E0BF21C()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  STACK[0x290] = v0;
  *(_DWORD *)(v3 - 188) = v1
                        - 1990461019
                        * ((1842346900 - ((v3 - 192) | 0x6DCFFB94) + ((v3 - 192) | 0x9230046B)) ^ 0xBDD4A6E2)
                        + 298601180;
  nullsub_1(v3 - 192);
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v2
                                     + 8
                                     * (((((((uint64_t (*)(uint64_t, uint64_t))STACK[0x258])(336, 318119320) == 0) ^ (v1 - 33)) & 1)
                                       * (((v1 - 672) | 0x603) ^ 0x726)) | v1))
                         - 8);
  return v4();
}

uint64_t sub_21E0BF2F0(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((unint64_t)*(&off_24E21C7C0 + (v1 & 0x292813E5 ^ 0x393u)) - a1 - 12 > 0x1F)
                                          * (((v1 & 0x292813E5) + 6) ^ 0x385)) ^ v1 & 0x292813E5u))
                            - 8))();
}

uint64_t sub_21E0BF37C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;

  v5 = (335 - v2);
  v6 = vrev64q_s8(*(int8x16_t *)(a2 + v5 - 15));
  v7 = vextq_s8(v6, v6, 8uLL);
  v8 = vrev64q_s8(*(int8x16_t *)(a2 + v5 - 31));
  v9 = vextq_s8(v8, v8, 8uLL);
  v10 = a1 + v5;
  v11.i64[0] = 0x6464646464646464;
  v11.i64[1] = 0x6464646464646464;
  v12.i64[0] = 0x3232323232323232;
  v12.i64[1] = 0x3232323232323232;
  v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1784 * (v2 == 288)) ^ v3)) - ((v3 + 920) ^ 0x72BLL)))();
}

uint64_t sub_21E0BF414@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  int8x8_t v6;

  v4 = STACK[0x2B0];
  v5 = (v3 - 320);
  v6 = vrev64_s8(*(int8x8_t *)(a2 + v5 - 7));
  *(int8x8_t *)(a1 - 7 + v5) = vrev64_s8(vadd_s8(vsub_s8(v6, vand_s8(vadd_s8(v6, v6), (int8x8_t)0x6464646464646464)), (int8x8_t)0x3232323232323232));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v2 - 286) ^ 0xA63)) - ((v2 + 1121) ^ 0xB8CLL)))();
}

uint64_t sub_21E0BF488@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a1 + v4 - 204791817 + ((v2 + 718761009) & 0x55289BCD)) = *(_BYTE *)(a2
                                                                               + v4
                                                                               - 204791817
                                                                               + ((v2 + 718761009) & 0x55289BCD))
                                                                    - ((2
                                                                      * *(_BYTE *)(a2
                                                                                 + v4
                                                                                 - 204791817
                                                                                 + ((v2 + 718761009) & 0x55289BCD))) & 0x64)
                                                                    + 50;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1408 * (v4 - 1 == v3)) ^ v2)) - 8))();
}

uint64_t sub_21E0BF4EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 432) = a2;
  *v2 = 0xCDCDCDCDCDCDCDCDLL;
  v2[1] = 0x3232323234323220;
  v7 = 1990461019 * (((v6 - 192) & 0xD49EFC21 | ~((v6 - 192) | 0xD49EFC21)) ^ 0x485A157);
  *(_DWORD *)(v6 - 184) = v7 + v3 + 84385794;
  *(_DWORD *)(v6 - 192) = 1149298222 - v7;
  nullsub_1(v6 - 192);
  LODWORD(STACK[0x360]) = 1810944229;
  v8 = ((uint64_t (*)(uint64_t, uint64_t))STACK[0x258])(336, 1690680581);
  *(_QWORD *)(v4 + 208) = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v8 == 0) * (((v3 - 1317035142) & 0x4E8057A7) - 1643)) | v3))
                            - (((v3 - 1636) | 0x203u) ^ 0x72BLL)))();
}

uint64_t sub_21E0BF5E8()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  LODWORD(STACK[0x570]) = -939041185;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((60 * (*(_QWORD *)(v1 + 432) != 0)) ^ (v0 - 867))) - 8))();
}

void sub_21E0BF6D8()
{
  LODWORD(STACK[0x288]) = 1773113831;
  JUMPOUT(0x21E0BEC18);
}

uint64_t sub_21E0BF79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void (*a66)(uint64_t);
  uint64_t v66;

  a66(v66);
  return sub_21E0BE660();
}

uint64_t sub_21E0BF7B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;

  *(_QWORD *)(v1 + 160) = a1 - 16;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 == v5) * (v3 + 2789)) ^ v3)))();
}

void sub_21E0BF8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void (*a31)(uint64_t),unint64_t a32)
{
  int v32;
  uint64_t v33;
  char *v34;

  *(_DWORD *)(v33 - 192) = (v32 + 1017761812) ^ (1948972247
                                               * ((2 * ((v33 - 192) & 0x498EA068) - (v33 - 192) + 913399703) ^ 0x83EFAA79));
  sub_21E0DD498((_DWORD *)(v33 - 192));
  LODWORD(STACK[0x280]) += (v32 + 1092) ^ 0x722;
  LOBYTE(STACK[0x196C]) = (-81 * ((v33 + 64) ^ 0x1A)) ^ 0x20;
  STACK[0x1950] = a32;
  STACK[0x1960] = a27;
  *(_DWORD *)(v33 - 184) = (v32 + 910) ^ (1734664879 * ((v33 - 192) ^ 0x2FDB281A));
  a31(v33 - 192);
  LODWORD(STACK[0x2D0]) = *(_DWORD *)(v33 - 168);
  v34 = (char *)&a9 + STACK[0x220] - 0x9DCA84C7F980367;
  STACK[0x268] = (unint64_t)(v34 + 2048);
  STACK[0x270] = (unint64_t)(v34 + 2176);
  STACK[0x2A8] = (unint64_t)v34;
  STACK[0x278] = (unint64_t)(v34 + 2304);
  JUMPOUT(0x21E0B99D4);
}

uint64_t sub_21E0BF9B4(unint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  *(_QWORD *)(v2 + 160) = STACK[0x278] - 160;
  *(_QWORD *)(v2 + 376) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ (3152 * (v4 > a1))))
                            - ((v1 + 206827594) & 0xF3AC0FFF ^ 0x6F4)))();
}

uint64_t sub_21E0BFA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a1 + (v7 + v5)) = *(_BYTE *)(a2 + (v7 + v5)) ^ *(_BYTE *)(a3
                                                                                                 + ((v7 + v5) & 0xFLL)) ^ *(_BYTE *)(v4 + ((v7 + v5) & 0xFLL)) ^ *(_BYTE *)(((v7 + v5) & 0xFLL) + v3 + 2) ^ (-51 * ((v7 + v5) & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((3078 * (v7 + 1 + v5 < ((v6 - 747) | 0x20u) - 725)) ^ v6)) - 4))();
}

uint64_t sub_21E0BFAF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = (v6 - 1240622259);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9) ^ *(_BYTE *)(a3 + (v9 & 0xF)) ^ *(_BYTE *)(v4 + (v9 & 0xF)) ^ *(_BYTE *)((v9 & 0xF) + v3 + 2) ^ (-51 * (v9 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((86 * (((v7 - 641) ^ 0xFFFFFBDA) + v6 == v5)) ^ v7)) - 4))();
}

uint64_t sub_21E0BFB70(uint64_t a1)
{
  int8x16_t *v1;
  int v2;
  int8x16_t *v3;
  _QWORD *v4;
  uint64_t v5;

  *v1 = veorq_s8(*v3, (int8x16_t)xmmword_21E17F9C0);
  v4[64] += 32;
  v4[65] = a1 + 0x3D5B97A9E5EFD321;
  v4[66] = a1 + 0x310193F223BCFE0ALL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((364 * (((v1 == 0) ^ (v2 + 126)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_21E0BFC0C(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x2B0] + 8 * ((v2 + 893) ^ (v1 != a1)))
                            - ((11 * ((v2 + 893) ^ 0x803u)) ^ 0x8CBLL)))();
}

uint64_t sub_21E0BFC44(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  BOOL v6;
  int v7;

  v4 = v2 ^ 0x226;
  v5 = ((v2 ^ 0x226) - 1054) | 0x110;
  if (a1)
    v6 = v1 == 0;
  else
    v6 = 1;
  v7 = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v7 * ((((v4 - 1742656371) & 0x67DECDDB) + 631) ^ v5)) ^ v4)))();
}

uint64_t sub_21E0BFE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t (*a21)(uint64_t),uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  uint64_t v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  uint64_t v66;
  int v67;
  unint64_t v69;
  _BOOL4 v70;

  if ((v51 - 28794009) < 2)
  {
    v58 = (v50 + 984532696) & 0xC55133CD;
    v59 = *(_QWORD *)(v56 + 496);
    v60 = LODWORD(STACK[0x390]) ^ 0x6F7C9FEE;
    v61 = (2 * LODWORD(STACK[0x390])) & 0xDEF93FDC;
    v62 = 2009815553 * ((~(v57 - 192) & 0xE89501B3 | (v57 - 192) & 0x176AFE4C) ^ 0x199E2FF6);
    *(_BYTE *)(v53 + 232) = (~(v57 + 64) & 0xB3 | (v57 + 64) & 0x4C) ^ 0x56;
    *(_DWORD *)(v57 - 136) = v62 + v51 + 600066770;
    *(_QWORD *)(v53 + 280) = a50;
    *(_QWORD *)(v53 + 296) = a22;
    *(_DWORD *)(v57 - 172) = (v58 ^ 0xDF83FCC9) + v60 + v61 + v62;
    *(_DWORD *)(v57 - 168) = v50 - v62 + 102;
    *(_QWORD *)(v53 + 240) = v59;
    *(_QWORD *)(v53 + 264) = a49;
    *(_QWORD *)(v53 + 272) = a33;
LABEL_5:
    v66 = a21(v57 - 192);
    v67 = *(_DWORD *)(v57 - 176);
    LODWORD(STACK[0x2D0]) = v67;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v54 + 8 * (int)((2482 * (v67 == v55)) ^ v58))
                                            - ((63 * (v58 ^ 0x1D4) - 184581968) & 0xB007BAF ^ 0x387)))(v66);
  }
  if (v51 == 28794011)
  {
    v58 = (v50 - 827604788) & 0x315439D9;
    v63 = LODWORD(STACK[0x390]) ^ 0x5FB5BCFF;
    v64 = (2 * LODWORD(STACK[0x390])) & 0xBF6B79FE;
    v65 = 2009815553 * ((((v57 - 192) | 0x25F30540) - ((v57 - 192) & 0x25F30540)) ^ 0xD4F82B05);
    *(_QWORD *)(v53 + 240) = *(_QWORD *)(v56 + 496);
    *(_QWORD *)(v53 + 296) = a22;
    *(_BYTE *)(v53 + 232) = (((v57 + 64) | 0x40) - ((v57 + 64) & 0x40)) ^ 0xA5;
    *(_QWORD *)(v53 + 264) = a46;
    *(_QWORD *)(v53 + 272) = a33;
    *(_QWORD *)(v53 + 280) = a47;
    *(_DWORD *)(v57 - 172) = v65 + v58 + v63 + v64 - 280306138;
    *(_DWORD *)(v57 - 168) = v50 - v65 + 102;
    *(_DWORD *)(v57 - 136) = v65 + 628860781;
    goto LABEL_5;
  }
  LODWORD(STACK[0x2D0]) = v52 + 18;
  v69 = STACK[0x540];
  v70 = LODWORD(STACK[0x390]) != 0;
  STACK[0x520] = LODWORD(STACK[0x390]);
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v54
                                                                        + 8
                                                                        * ((v70 * (((v50 + 915) ^ 0x935) + 2451)) ^ (v50 - 1432)))
                                                            - 12))(a1, v69);
}

uint64_t sub_21E0C35B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a65;
  int v65;
  uint64_t v66;
  int v67;

  v67 = *(_DWORD *)(a65 + 88);
  *(_DWORD *)(a65 + 88) = ((v65 - 527) ^ 0x515) + v67;
  return ((uint64_t (*)(void))(*(_QWORD *)(v66 + 8 * (((v67 - 1107898704) < 0xFFFFFFFA) ^ (v65 - 527)))
                            - 8))();
}

void sub_21E0C35F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void (*a31)(uint64_t),uint64_t a32)
{
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_DWORD *)(v35 - 192) = (v32 + 1017761247) ^ (1948972247
                                               * ((((v35 - 192) | 0x97421721) + (~(v35 - 192) | 0x68BDE8DE)) ^ 0x22DCE2CE));
  sub_21E0DD498((_DWORD *)(v35 - 192));
  *(_DWORD *)(v35 - 184) = (v32 + 345) ^ (1734664879
                                        * ((((v35 - 192) | 0x1A94DCED) - ((v35 - 192) | 0xE56B2312) - 445963502) ^ 0x354FF4F7));
  *(_QWORD *)(v33 + 232) = a32;
  *(_QWORD *)(v33 + 248) = v34;
  *(_BYTE *)(v33 + 260) = (-81 * ((((v35 + 64) | 0xED) - ((v35 + 64) | 0x12) + 18) ^ 0xF7)) ^ 0x20;
  a31(v35 - 192);
  JUMPOUT(0x21E0BA244);
}

uint64_t sub_21E0C36C8@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((v3 ^ 0x93F) + 395 * (v3 ^ 0x432) - 4064) * (a2 != v2)) ^ v3))
                            - 8))();
}

uint64_t sub_21E0C3708@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((172 * ((((v2 ^ 0xA19) - 1790) & a2) == 0)) ^ v2)) - 4))();
}

uint64_t sub_21E0C373C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_QWORD *)(a1 - 7 + (v4 + v3 + v5 - v6)) = *(_QWORD *)(v8 - 7 + (v4 + v3 + v5 - v6));
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v6 - (a3 & 0xFFFFFFF8) == -8) * (v7 ^ 0xD1E)) ^ v7)) - 12))();
}

uint64_t sub_21E0C3798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  int v10;

  *(_QWORD *)(v9 + v7) = *(_QWORD *)(v6 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v8 == 0) * v5) ^ v10)) - 12))();
}

uint64_t sub_21E0C37C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, int a5@<W8>)
{
  int v5;
  int v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a4 + 8 * (v5 ^ (753 * (a5 != v6))))
                                                                    - (v5 - 282)
                                                                    - ((v5 + 711418755) & 0xD5989F6F ^ 0xFFFFFFFFFFFFFBD1)))(a1, a2, a3, LODWORD(STACK[0x290]));
}

void sub_21E0C3814(unint64_t a1)
{
  int v1;

  STACK[0x430] = a1;
  LODWORD(STACK[0x450]) = v1;
  JUMPOUT(0x21E0C3828);
}

void sub_21E0C38D8()
{
  JUMPOUT(0x21E0C3898);
}

uint64_t sub_21E0C38E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a66)(void);
  int v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;

  v70 = a66();
  LODWORD(STACK[0x570]) = v67;
  return (*(uint64_t (**)(uint64_t))(v68
                                            + 8 * ((2723 * (v67 == (v66 ^ 0xD4 ^ (v69 - 3136)) + v66 - 212)) ^ v66)))(v70);
}

uint64_t sub_21E0C3920()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  unint64_t v3;

  v2 = (uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v0 - 1722)) - 8);
  STACK[0x288] = STACK[0x298] + 128;
  STACK[0x268] = ((unint64_t)&STACK[0x3E0] ^ 0xA7E7D7FFFF69F7FFLL)
               + 0x7E5BFF1FFDBFFE01
               + ((2 * (_QWORD)&STACK[0x3E0]) & 0x4FCFAFFFFED3EFF0);
  v3 = STACK[0x2B8];
  LODWORD(STACK[0x258]) = STACK[0x2B8] - 1699;
  STACK[0x280] = (int)v3 ^ 0x718;
  LODWORD(STACK[0x270]) = v3 ^ 0x746;
  LODWORD(STACK[0x210]) = v3 - 1827200804;
  STACK[0x230] = (2 * (_DWORD)v3) ^ 0xCF4u;
  LODWORD(STACK[0x228]) = v3 + 1369206469;
  LODWORD(STACK[0x220]) = v3 ^ 0x726;
  STACK[0x290] = (unint64_t)*(&off_24E21C7C0 + (v0 ^ 0x67C)) - 4;
  return v2(359751390, 2997);
}

uint64_t sub_21E0C395C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((60 * (*(_QWORD *)(v2 + 432) != 0)) ^ (v0 - 867))) - 8))();
}

uint64_t sub_21E0C3994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a1 + (v5 - 678730849)) = *(_BYTE *)(v7 + (v5 - 678730849));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((987 * (v5 - 1 != ((v6 - 1037) ^ 0x28749F76))) ^ (v6 + 562))) - 4))();
}

uint64_t sub_21E0C39E8@<X0>(char a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((23 * ((((a1 & 1) == 0) ^ (v2 - 92)) & 1)) ^ (v2 - 1593)))
                            - 12))();
}

uint64_t sub_21E0C3A24()
{
  unsigned int v0;
  uint64_t v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((v2 ^ v0) < 1122 * ((v3 + 419) ^ 0x8C4u) - 1731) * (v3 - 301)) ^ (v3 + 419))))();
}

uint64_t sub_21E0C3A6C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v0 | (2
                                     * ((((5 * v2) + 4 == v1 - 1810943893) ^ (63 * (((v0 - 4) | 6) ^ 0xDB))) & 1)))))();
}

uint64_t sub_21E0C3AB4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  int v13;
  int v14;
  unint64_t v15;
  int v16;
  int v17;
  int v18;
  void (*v19)(uint64_t);
  int v20;
  unint64_t v21;
  unint64_t v22;

  v6 = a1 - 419;
  v7 = (_QWORD *)STACK[0x298];
  v8 = STACK[0x298] + 0x2CF4A33C3453BB4BLL;
  v7[34] = 0xC05EC1135E90E2CLL;
  v7[35] = v8;
  v7[68] = 0xC05EC1135E90E2CLL;
  v7[69] = (char *)v7 + 0x2CF4A33C3453BC5BLL;
  STACK[0x258] = (unint64_t)v7 + 0x1D17695A8381D586;
  v7[102] = 0xC05EC1135E90E2CLL;
  v7[103] = (char *)v7 + 0x2CF4A33C3453BD6BLL;
  STACK[0x268] = (unint64_t)v7 + 0x1D17695A8381D696;
  v7[136] = 0xC05EC1135E90E2CLL;
  v7[137] = (char *)v7 + 0x2CF4A33C3453BE7BLL;
  STACK[0x270] = (unint64_t)v7 + 0x1D17695A8381D7A6;
  v7[170] = 0xC05EC1135E90E2CLL;
  v7[171] = (char *)v7 + 0x2CF4A33C3453BF8BLL;
  v9 = *(_QWORD *)(v1 + 224);
  LODWORD(STACK[0x290]) = a1 - 1987;
  v10 = 1866394843 * ((v5 - 192) ^ 0xEA1737F4);
  *(_DWORD *)(v5 - 168) = a1 - 1987 + v10;
  *(_DWORD *)(v5 - 192) = ((v4 ^ 0x440F7B74) - 4396573 + ((a1 - 403770056) & (2 * v4) ^ 0x67E00916)) ^ v10;
  STACK[0x280] = (unint64_t)v7 + 0x1D17695A8381D8B6;
  v11 = v9 + 4;
  STACK[0x1958] = (unint64_t)v7 + 0x1D17695A8381D476;
  STACK[0x1960] = v9 + 4;
  v12 = (void (*)(uint64_t))((char *)*(&off_24E21C7C0 + (a1 ^ 0x8D9)) - 4);
  v12(v5 - 192);
  STACK[0x288] = (unint64_t)v12;
  v13 = 1866394843 * ((((2 * (v5 - 192)) | 0xA65B855E) - (v5 - 192) + 751975761) ^ 0x393AF55B);
  v14 = STACK[0x290];
  *(_DWORD *)(v5 - 192) = ((v4 ^ 0xC00C6B7D) + 2076178924 + ((2 * v4) & 0xEFE8DDEC ^ 0x6FE00904)) ^ v13;
  *(_DWORD *)(v5 - 168) = v14 + v13;
  v15 = v11 + v3;
  STACK[0x1958] = STACK[0x258];
  STACK[0x1960] = v15;
  v12(v5 - 192);
  v16 = 1866394843 * ((((v5 - 192) ^ 0x73CC1324 | 0x8E70416A) - (((v5 - 192) ^ 0x73CC1324) & 0x8E70416A)) ^ 0x17AB65BA);
  STACK[0x1958] = STACK[0x268];
  STACK[0x1960] = v15 + v3;
  v17 = STACK[0x290];
  *(_DWORD *)(v5 - 168) = LODWORD(STACK[0x290]) + v16;
  *(_DWORD *)(v5 - 192) = ((v4 ^ 0x440E6C70) - 4325657 + ((2 * v4) & 0xE7ECD3F6 ^ 0x67E00316)) ^ v16;
  ((void (*)(uint64_t))STACK[0x288])(v5 - 192);
  STACK[0x268] = v15 + v3 + v3;
  v18 = 1866394843 * ((((v5 - 192) | 0x3191AE7E) - ((v5 - 192) & 0x3191AE7E)) ^ 0xDB86998A);
  STACK[0x1958] = STACK[0x270];
  STACK[0x1960] = v15 + v3 + v3;
  *(_DWORD *)(v5 - 168) = v17 + v18;
  *(_DWORD *)(v5 - 192) = ((v4 ^ 0xC00F6B64) + 2075982323 + ((2 * v4) & 0xEFEEDDDE ^ 0x6FE00916)) ^ v18;
  v19 = (void (*)(uint64_t))STACK[0x288];
  ((void (*)(uint64_t))STACK[0x288])(v5 - 192);
  v20 = 1866394843 * ((747209636 - ((v5 - 192) | 0x2C8983A4) + ((v5 - 192) | 0xD3767C5B)) ^ 0x39614BAF);
  *(_DWORD *)(v5 - 168) = v17 + v20;
  *(_DWORD *)(v5 - 192) = ((v4 ^ 0xC405FD7C) + 2142662635 + ((2 * v4) & 0xE7FBF1EE ^ 0x67F00106)) ^ v20;
  v21 = STACK[0x2B0];
  STACK[0x1960] = STACK[0x268] + v3;
  STACK[0x1958] = STACK[0x280];
  v19(v5 - 192);
  v22 = STACK[0x430];
  STACK[0x4C0] = (v2 - 1810943893);
  return (*(uint64_t (**)(unint64_t))(v21
                                                     + 8
                                                     * ((3377 * ((((11 * (v6 ^ 0x73B)) ^ (v2 == 1810943893)) & 1) == 0)) ^ (v6 + 199))))(v22);
}

uint64_t sub_21E0C3F7C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v4 = ((unint64_t)&STACK[0x4C0] ^ 0x7DD97D7B577EDFDFLL)
     - 0x58583000041442D9
     + ((2 * (_QWORD)&STACK[0x4C0]) & 0xFBB2FAF6AEFDBFB0);
  v5 = v2 - 1;
  STACK[0x4C0] = v5;
  *(_BYTE *)(a1 + v5) = ((v4 - 6) ^ 0xBA) * ((a2 ^ 3) + v4);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1762 * (STACK[0x4C0] == 0)) | a2)))();
}

void sub_21E0C4014()
{
  JUMPOUT(0x21E0C3FCCLL);
}

uint64_t sub_21E0C401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void (*a66)(void);
  int v66;
  uint64_t v67;
  uint64_t v68;

  a66();
  return ((uint64_t (*)(void))(*(_QWORD *)(v68 + 8 * ((60 * (*(_QWORD *)(v67 + 432) != 0)) ^ (v66 - 867))) - 8))();
}

uint64_t sub_21E0C405C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t (*a66)(void);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;

  v71 = a66();
  *(_QWORD *)(v68 + 160) -= 16;
  return (*(uint64_t (**)(uint64_t))(v69
                                            + 8
                                            * (((v67 == v70) * (((v66 - 1794) | 0x104) + 2789)) ^ ((v66 - 1794) | 0x104))))(v71);
}

uint64_t sub_21E0C40A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  uint64_t v45;
  int v46;

  v43 = 1866394843 * ((((v42 - 192) | 0xE9316293) - ((v42 - 192) & 0xE9316293)) ^ 0x3265567);
  v44 = STACK[0x298];
  STACK[0x1968] = 0;
  STACK[0x1970] = v44;
  STACK[0x1960] = a29;
  STACK[0x1950] = a28;
  STACK[0x1958] = a36;
  *(_DWORD *)(v42 - 152) = (v40 + 83) ^ v43;
  *(_DWORD *)(v42 - 144) = v43 ^ 0x60E0878A;
  STACK[0x1988] = 0;
  v45 = ((uint64_t (*)(uint64_t))((char *)*(&off_24E21C7C0 + (v40 | 0xCA)) - 8))(v42 - 192);
  v46 = *(_DWORD *)(v42 - 148);
  LODWORD(STACK[0x574]) = v46;
  return (*(uint64_t (**)(uint64_t))(v41 + 8 * ((123 * (v46 == (((v40 + 476) | 0x422) ^ a40))) ^ v40)))(v45);
}

void sub_21E0C4190()
{
  JUMPOUT(0x21E0C41B8);
}

void sub_21E0C4378()
{
  JUMPOUT(0x21E0C43A8);
}

uint64_t sub_21E0C4424()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  v4 = LODWORD(STACK[0x258]) | 0x243;
  v5 = STACK[0x40C];
  *(_DWORD *)(*(_QWORD *)(v1 + 584) + ((v5 + v0) & 0xFFFFFFFC)) = v3;
  v6 = (v4 ^ 0x2C7) + v5;
  LODWORD(STACK[0x40C]) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((((v6 + v0) > 0x3F) * (((v4 ^ 0x30) - 656) ^ 0x53)) | v4))
                            - 8))();
}

uint64_t sub_21E0C6194@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  unint64_t v12;

  v11 = *(_DWORD *)(v4 + 4 * (v8 + v6 - 8)) ^ *(_DWORD *)(v4 + 4 * (v8 + v6 + ((a4 + v7) & a1) - 737));
  HIDWORD(v12) = *(_DWORD *)(v4 + 4 * (v8 + v6 - 16)) ^ *(_DWORD *)(v4
                                                                                  + 4 * (v8 + v6 - 14)) ^ (v11 + v10 - (a3 & (2 * v11))) ^ v10;
  LODWORD(v12) = *(_DWORD *)(v4 + 4 * (v8 + v6 - 16)) ^ *(_DWORD *)(v4
                                                                                  + 4 * (v8 + v6 - 14)) ^ (v11 + v10 - (a3 & (2 * v11)));
  *(_DWORD *)(v4 + 4 * (v5 + v8)) = (v12 >> 31) + v10 - (a3 & (2 * (v12 >> 31)));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((v5 + 1 + v8) > 0x4F) * a2) ^ a4)) - 8))();
}

uint64_t sub_21E0C6220()
{
  unsigned int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

void sub_21E0C62E0()
{
  JUMPOUT(0x21E0C6240);
}

uint64_t sub_21E0C62FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8 * ((126 * ((v8 + 1547729552) < 0x28)) ^ (v7 - 18))) - 4))(1547729531, 1547729571, a3, a4, a5, a6, a7, 14093031);
}

void sub_21E0C63BC()
{
  JUMPOUT(0x21E0C630CLL);
}

uint64_t sub_21E0C63DC(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((173 * ((a2 + 1 + v3) > 0x3B)) ^ v2)) - 4))();
}

uint64_t sub_21E0C64B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * ((2084 * ((a4 + 1 + v5) > 0x4F)) ^ v4))
                                          - 4))(a3);
}

void sub_21E0C6578()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  LODWORD(STACK[0x3B0]) = v1;
  LODWORD(STACK[0x50C]) = v5;
  LODWORD(STACK[0x378]) = v2;
  LODWORD(STACK[0x4A8]) = v4;
  LODWORD(STACK[0x4E4]) = v0;
  v9 = *(_QWORD *)(v8 + 568);
  v10 = *(_DWORD *)(v9 - 0x1464535CD0E6655);
  LODWORD(STACK[0x40C]) = 1547729611;
  *(_DWORD *)(v9 - 0x1464535CD0E6655) = (v10 ^ v6)
                                        + (v0 ^ (v6 + 816) ^ v3)
                                        + v6
                                        - (v7 & (2 * ((v10 ^ v6) + (v0 ^ (v6 + 816) ^ v3))));
  JUMPOUT(0x21E0C65DCLL);
}

uint64_t sub_21E0C66B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  int v13;
  unint64_t v14;

  v10 = *(_QWORD *)(v7 + 168);
  v11 = *(unsigned __int8 *)(v10 - 0x1464535CD0E664DLL) ^ 0xF1;
  if (v11 == 2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8 * (((*(_DWORD *)(v10 - 0x1464535CD0E6651) == 1088493529) * (((v9 + 289) | 0x22) ^ 0x812)) ^ (v9 - 873))))(a1, a2, a3, 1878002454, a5, a6, a7, 2874770560);
  if (v11 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((v9 + 884) ^ ((*(_DWORD *)(v10 - 0x1464535CD0E6651) == ((v9 + 223) | 0x50) + 1088491399) << 6))) - 4))(a1, a2, a3, 1878002454, a5, a6, a7, 2874770560);
  v13 = 439 * (v9 ^ 0x724);
  v14 = STACK[0x268];
  *(_QWORD *)(v7 + 144) = 91;
  *(_BYTE *)(v10 - 0x1464535CD0E6652) = (v14 ^ 0xBA) * (v14 + ((v13 + 15) ^ 0x38) - 23);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (v13 | (2 * (*(_QWORD *)(v7 + 144) != 0)))) - 8))(a1, a2, a3, 1878002454, a5, a6, a7, 2874770560);
}

void sub_21E0C6F40()
{
  JUMPOUT(0x21E0C6F00);
}

uint64_t sub_21E0C6F48()
{
  return ((uint64_t (*)(void))STACK[0x338])();
}

uint64_t sub_21E0C6F98@<X0>(uint64_t a1@<X8>)
{
  _DWORD *v1;
  int v2;
  uint64_t v3;
  int v4;
  _BYTE *v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v4 = v2 - 1176;
  v5 = (_BYTE *)STACK[0x328];
  v6 = *(_DWORD *)(a1 - 0x1464535CD0E6665);
  *v5 = ((v6 >> ((v4 + 85) ^ 0x3B)) ^ 0x50)
      - 2 * (((v6 >> ((v4 + 85) ^ 0x3B)) ^ 0x50) & 0x36 ^ (v6 >> ((v4 + 85) ^ 0x3B)) & 4)
      + 50;
  v5[1] = (BYTE2(v6) ^ 0xD7) - ((2 * (BYTE2(v6) ^ 0xD7)) & 0x64) + 50;
  v5[2] = (BYTE1(v6) ^ 0xA) + ~(2 * ((BYTE1(v6) ^ 0xA) & 0x37 ^ BYTE1(v6) & 5)) + 51;
  v5[3] = v6 ^ 0xD5;
  v7 = *v1 - 1351125763;
  v8 = v7 < 0xF0588CD6;
  v9 = v7 > 0xF0588CDA;
  if (v8)
    v9 = v8;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2984 * v9) ^ v4)))();
}

void sub_21E0C70C8()
{
  JUMPOUT(0x21E0C6FBCLL);
}

uint64_t sub_21E0C70D0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  STACK[0x3F0] = *(_QWORD *)(v0 + 160) - 1632;
  LODWORD(STACK[0x3AC]) = -939041092;
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x530] != 0) * (((v2 + 1404) ^ 0xFE8) - 771)) ^ (v2 + 1404))))();
}

uint64_t sub_21E0C713C@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int *a49,uint64_t (*a50)(_QWORD, uint64_t, _QWORD))
{
  uint64_t v50;
  int v51;
  unsigned int v52;
  uint64_t v53;

  v52 = (a2 + 1223935832) & 0xB70C2F7F;
  v53 = a50(*a49, a1, LODWORD(STACK[0x460]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v50
                                                      + 8
                                                      * (int)(((LODWORD(STACK[0x3AC]) != v51 + v52 + 1397 - 2284)
                                                             * ((7 * (v52 ^ 0x31E)) ^ 0x238)) ^ v52))
                                          - 8))(v53);
}

uint64_t sub_21E0C7230()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((11 * (v0 == 678730848)) ^ (v2 - 1043)))
                            - ((v2 - 1495850404) & 0x5928D69F ^ 0x1BLL)))();
}

void sub_21E0C7290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;

  v50 = (((v49 ^ v47) * v48) ^ 0xD78B64BC) + v46;
  *(_BYTE *)(a46 + v50) = *(_BYTE *)(a3 + v50);
  JUMPOUT(0x21E0C7260);
}

uint64_t sub_21E0C72C0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  uint64_t v33;
  int v34;

  v34 = STACK[0x574];
  STACK[0x3F0] -= 1632;
  LODWORD(STACK[0x3AC]) = v34;
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * ((2205 * (v34 == ((261 * (a1 ^ 0x2B6)) ^ a33))) ^ a1)) - 12))();
}

uint64_t sub_21E0C7310@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,_DWORD *a58)
{
  uint64_t v58;
  uint64_t v59;

  *a58 = STACK[0x320];
  a58[93] = STACK[0x4EC];
  a58[94] = STACK[0x2E4];
  a58[95] = STACK[0x3A4];
  a58[96] = STACK[0x37C];
  return (*(uint64_t (**)(void))(v59
                              + 8
                              * (((*(_QWORD *)(v58 + 480) != 0) * ((((a1 ^ 0x592) + 1404) ^ 0xFE8) - 771)) ^ ((a1 ^ 0x592) + 1404))))();
}

uint64_t sub_21E0C7378()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((*(_QWORD *)(v1 + 480) != 0) * (((v0 + 1404) ^ 0xFE8) - 771)) ^ (v0 + 1404))))();
}

void sub_21E0C73AC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1990461019 * ((-2 - ((~(_DWORD)a1 | 0xDD0DCA84) + (a1 | 0x22F2357B))) ^ 0xF2E9680D);
  __asm { BR              X10 }
}

uint64_t sub_21E0C7484()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((500 * (*(_DWORD *)(v1 + 4) - v0 == 450495144)) ^ v2)))();
}

uint64_t sub_21E0C74B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, int a12, char a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  a13 = ((((2 * *(_BYTE *)(v14 - 0x596ED33E7E9805B1)) & 0xBC ^ 0x88) + (*(_BYTE *)(v14 - 0x596ED33E7E9805B1) ^ 0x1B)) ^ 0x80)
      - 95 * (((&a11 | 0xE6) - &a11 + (&a11 & 0x18)) ^ 0xA2);
  a11 = v13
      - 731811679
      * (((&a11 | 0x10C9A6E6) - &a11 + (&a11 & 0xEF365918)) ^ 0x593F00A2)
      + 1041;
  v16 = sub_21E05CF80((uint64_t)&a11);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1727 * (a12 == 939001227)) ^ v13)))(v16);
}

uint64_t sub_21E0C7568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, char a12, int a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  a12 = (*(_BYTE *)(v14 - 0x596ED33E7E9805B2) ^ 0x5A)
      - (((&a11 | 0x88) - &a11 + (&a11 & 0x74)) ^ 0xCD)
      + ((2 * (*(_BYTE *)(v14 - 0x596ED33E7E9805B2) & 0x1F)) ^ 0xA)
      + 122;
  a11 = v13
      - 2009815553
      * (((&a11 | 0x8C4EA088) - &a11 + (&a11 & 0x73B15F74)) ^ 0x7D458ECD)
      - 816610846;
  v17 = sub_21E0D4AFC((uint64_t)&a11);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((2784 * (a13 == v16)) ^ v13)))(v17);
}

uint64_t sub_21E0C7618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, int a12, char a13)
{
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  a13 = ((*(_BYTE *)(v14 - 0x596ED33E7E9805B3) ^ 0xBA) + ((2 * *(_BYTE *)(v14 - 0x596ED33E7E9805B3)) ^ 0x8A) - 19) ^ (-41 * (&a11 ^ 0xEE));
  a11 = (v13 - 1714081674) ^ (1948972247 * (&a11 ^ 0xB59EF5EE));
  v17 = sub_21E0E1EB0((uint64_t)&a11);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((1178 * (a12 == v16)) ^ v13)))(v17);
}

uint64_t sub_21E0C76A4()
{
  _DWORD *v0;
  int v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  uint64_t result;
  _DWORD v6[2];
  char v7;

  v3 = *(_BYTE *)(v2 - 0x596ED33E7E9805B4);
  v4 = 1988622253 * ((~v6 & 0xC6BBBC32 | v6 & 0x394443CD) ^ 0x30A3FC92);
  v6[0] = v1 - v4 + 1019600328;
  v7 = v4 + (v3 ^ 0x78) + ((2 * v3) & 0x7A ^ 0xA) + 0x80;
  result = sub_21E0DD39C((uint64_t)v6);
  *v0 = v6[1];
  return result;
}

void sub_21E0C7774(uint64_t a1)
{
  int v1;
  unint64_t v2;

  v1 = *(_DWORD *)(a1 + 16) ^ (731811679 * (((a1 | 0xB9F94F1E) - (a1 & 0xB9F94F1E)) ^ 0xF00FE95A));
  v2 = ((unint64_t)(*(_DWORD *)(*(_QWORD *)a1 - 0x195CA6660D034730) + 387) >> 3) & 0x3F;
  *(_BYTE *)(*(_QWORD *)a1 - 0x195CA6660D034728 + v2) = 0x80;
  __asm { BR              X12 }
}

uint64_t sub_21E0C7884()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ 0xAA6 ^ (53 * (v0 == 0))))
                            - ((v1 ^ 0xAA6u)
                             + 485)
                            - (((v1 ^ 0xAA6u) + 2778) ^ 0xFFFFFFFFFFFFF0FDLL)))();
}

uint64_t sub_21E0C78C0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  *a1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((592 * (v1 != 1)) ^ (127 * (v2 ^ 0x32E))))
                            - ((127 * (v2 ^ 0x32E) + 645) | 0x820u)
                            + 3094))();
}

uint64_t sub_21E0C7910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v4) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v4 + 1 != v1) * v5) ^ v2)) - v3 + 3094))();
}

uint64_t sub_21E0C793C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(int *), uint64_t a12, int a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  void (*v19)(int *);
  unsigned int v20;
  uint64_t v21;

  v20 = 1503746353 * (((&a13 | 0xC57F0237) + (~&a13 | 0x3A80FDC8)) ^ 0xE31EC080);
  a14 = a12;
  a13 = v20 + v17 + 479;
  LODWORD(a15) = v20 + 1879245641;
  v19(&a13);
  a14 = v16 + 0xAAE376B1B19CB24;
  a15 = a12;
  a13 = (((&a13 | 0x2F2D4467) + (~&a13 | 0xD0D2BB98)) ^ 0x39DD014C) * v18 - 157118610 + v17;
  v21 = a11(&a13);
  *(_QWORD *)(v16 - 0x195CA6660D034728) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15
                                                      + 8
                                                      * ((2243 * (((v17 - 1657047093) & 0x62C47DDE) != 508)) ^ (v17 - 1857)))
                                          - 12))(v21);
}

uint64_t sub_21E0C7A70()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  v3 = 7 * (v1 ^ 0xA9D);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((32 * (((v3 ^ 0xE9 ^ (v0 == (v3 ^ 0xC50) - 1598)) & 1) == 0)) & 0xBF | (((v3 ^ 0xBE9 ^ ~(v0 == (v3 ^ 0xC50) - 1598)) & 1) << 6)) ^ v3))
                            - 8))();
}

uint64_t sub_21E0C7AC4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((344
                                * (((55 - v0 < (((v1 - 1141) | 0x81C) ^ 0xA14u)) ^ (v1 - 116)) & 1)) ^ v1)))();
}

uint64_t sub_21E0C7B14()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1702 * (v0 >= ((2 * v1) ^ 0xFFFFE00A) + ((v1 + 1905755603) & 0x8E687BFE))) ^ v1))
                            - 8))();
}

uint64_t sub_21E0C7B68@<X0>(_OWORD *a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  *a1 = 0u;
  a1[1] = 0u;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1363 * ((v1 & 0xFFFFFFE0) == 32)) ^ (v2 - 934)))
                            - ((v2 - 1898) ^ 0x488)))();
}

void sub_21E0C7BAC()
{
  JUMPOUT(0x21E0C7B8CLL);
}

uint64_t sub_21E0C7BB8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 + 1432) ^ 0xA79) * (v1 == v0)) ^ v2))
                            - 46 * (v2 ^ 0x48Eu)
                            + 448))();
}

uint64_t sub_21E0C7BF4()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((59 * ((v0 & 0x18) == (v1 ^ 0x1F2u) - 3054)) ^ v1))
                            - ((v1 - 1742) ^ 0x346)))();
}

uint64_t sub_21E0C7C30()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + v1 + v5 - 0x195CA6660D034727) = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v2 - (v0 & 0xFFFFFFF8) == -8) * ((v3 + 807) ^ 0x383)) ^ v3)))();
}

uint64_t sub_21E0C7C84()
{
  int v0;
  int v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *v2 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v0) ^ v1)))();
}

uint64_t sub_21E0C7CA8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 ^ 0xD9B) + v1 - 1193 - 3319) * (v2 == v0)) ^ v1)))();
}

uint64_t sub_21E0C7CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  *(_BYTE *)(a1 + v2) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((482 * (v2 + 1 != v1)) ^ (v3 - 1805)))
                            - ((v3 + 182117856) & 0xF5250FFD)
                            + 448))();
}

uint64_t sub_21E0C7D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void (*a11)(uint64_t *), uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  void (*v19)(uint64_t *);
  int *v20;
  _BYTE *v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;

  v21 = *(_BYTE **)(v15 + 8);
  v22 = 1503746353 * ((&a13 - 445393276 - 2 * (&a13 & 0xE573D684)) ^ 0xC3121432);
  LODWORD(a15) = v22 + 1879245639;
  a14 = a12;
  LODWORD(a13) = v18 + 3125 + v22;
  v19(&a13);
  v23 = *v20;
  v24 = 2009815553
      * ((-1329413884 - (&a13 | 0xB0C2C104) + (&a13 | 0x4F3D3EFB)) ^ 0xBE3610BE);
  LODWORD(a14) = v18 - 715354264 + v24;
  HIDWORD(a14) = v24 + v23 - 1129106799 - ((2 * v23 - 266594554) & 0x894A4E1C);
  a13 = v17 + 0x2D6AE882D45B2F67;
  sub_21E0DFBD0((uint64_t)&a13);
  v25 = 2009815553 * (&a13 ^ 0xF10B2E45);
  v26 = v25
      + *(_DWORD *)(v17 - 0x195CA6660D03472CLL)
      - 1129106799
      - ((2 * *(_DWORD *)(v17 - 0x195CA6660D03472CLL) - 266594554) & 0x894A4E1C);
  LODWORD(a14) = v18 - 715354264 + v25;
  HIDWORD(a14) = v26;
  a13 = v17 + 0x2D6AE882D45B2F6BLL;
  sub_21E0DFBD0((uint64_t)&a13);
  a14 = v17 + 0xAAE376B1B19CB24;
  a15 = a12;
  LODWORD(a13) = 225134719 * (((&a13 | 0x424E1FD7) + (~&a13 | 0xBDB1E028)) ^ 0x54BE5AFC)
               - 157118610
               + v18
               + 2646;
  a11(&a13);
  v27 = 1503746353 * (((&a13 | 0x273325F1) + (~&a13 | 0xD8CCDA0E)) ^ 0x152E746);
  LODWORD(a15) = v27 + 1879245629;
  a14 = v17 - 0x195CA6660D034740;
  LODWORD(a13) = v18 + 3125 + v27;
  v28 = ((uint64_t (*)(uint64_t *))v19)(&a13);
  *v21 = *(_BYTE *)(v17 - 0x195CA6660D034740);
  v21[1] = *(_BYTE *)(v17 - 0x195CA6660D03473FLL);
  v21[2] = *(_BYTE *)(v17 - 0x195CA6660D03473ELL);
  v21[3] = *(_BYTE *)(v17 - 0x195CA6660D03473DLL);
  v21[4] = *(_BYTE *)(v17 - 0x195CA6660D03473CLL);
  v21[5] = *(_BYTE *)(v17 - 0x195CA6660D03473BLL);
  v21[6] = *(_BYTE *)(v17 - 0x195CA6660D03473ALL);
  v21[7] = *(_BYTE *)(v17 - 0x195CA6660D034739);
  v21[8] = *(_BYTE *)(v17 - 0x195CA6660D034738);
  v21[9] = *(_BYTE *)(v17 - 0x195CA6660D034737);
  v21[10] = *(_BYTE *)(v17 - 0x195CA6660D034736);
  v21[11] = *(_BYTE *)(v17 - 0x195CA6660D034735);
  v21[12] = *(_BYTE *)(v17 - 0x195CA6660D034734);
  v21[13] = *(_BYTE *)(v17 - 0x195CA6660D034733);
  v21[14] = *(_BYTE *)(v17 - 0x195CA6660D034732);
  v21[15] = *(_BYTE *)(v17 - 0x195CA6660D034731);
  *(_OWORD *)(v17 - 0x195CA6660D034740) = 0u;
  *v20 = 133297277;
  *(_DWORD *)(v17 - 0x195CA6660D03472CLL) = 133297277;
  *(_OWORD *)(v17 - 0x195CA6660D034728) = 0u;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16
                                                      + 8
                                                      * ((27 * (((v18 + 2594) ^ 0xBFELL) == 64)) ^ v18))
                                          - 4))(v28);
}

uint64_t sub_21E0C8158@<X0>(uint64_t a1@<X8>, __n128 a2@<Q0>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *(__n128 *)(v5 + v2 + 24) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((a1 ^ 0xBFE) + v2 == 64) * v3) ^ v6)) - 4))();
}

void sub_21E0C81C4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 20) + 1292559617 * (a1 ^ 0xA7536869);
  __asm { BR              X10 }
}

uint64_t sub_21E0C826C@<X0>(uint64_t a1@<X8>, uint64_t a2, unint64_t *a3, unsigned int a4, unsigned int a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 731811679 * ((&a3 & 0xB4299F98 | ~(&a3 | 0xB4299F98)) ^ 0x220C623);
  a7 = v10 + v7 - 1192;
  a4 = v10 + 1391826212;
  a5 = v10 - 2096316710;
  a6 = v8;
  a3 = &STACK[0x45D0856C2970AB82];
  v11 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v7 ^ 0x44D)))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((2808 * (*(_DWORD *)(v8 - 0x6898E7DB637CE953) == 939001227)) ^ v7))
                                          - 4))(v11);
}

void sub_21E0C8340(_DWORD *a1@<X8>)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;
  _BYTE *v4;

  v3 = -441513949 * (*v1 - v2) - ((190713926 * (*v1 - v2) + 28517608) & 0x158B6BA0) + 2074036292;
  *v4 = (HIBYTE(v3) ^ 0xA) - 2 * ((HIBYTE(v3) ^ 0xA) & 0x36 ^ HIBYTE(v3) & 4) + 50;
  v4[1] = (BYTE2(v3) ^ 0xC5) - ((v3 >> 15) & 0x64) + 50;
  v4[2] = (BYTE1(v3) ^ 0xB5) + (~(2 * (BYTE1(v3) ^ 0xB5)) | 0x9B) + 51;
  v4[3] = v3 ^ 0xE2;
  v1[4] = *a1;
}

void sub_21E0C8430(uint64_t a1)
{
  int v1;
  _BOOL4 v3;

  v3 = (*(_BYTE *)(a1 + 8) ^ (31 * ((a1 - 2 * (a1 & 0x88) - 120) ^ 0xB2))) != 0x62
    && *(_QWORD *)(a1 + 16) != 0xCCBFA3A1901A95DLL;
  v1 = *(_DWORD *)(a1 + 24) ^ (1328090399 * ((a1 - 2 * (a1 & 0xDA0A088) + 228630664) ^ 0xF273C4B2));
  __asm { BR              X10 }
}

void sub_21E0C8514(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  unsigned __int8 **v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  void (*v17)(uint64_t);
  int v18;
  int v19;
  unsigned __int8 *v20;
  int8x16_t v21;
  int8x16_t v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  uint64_t v27;
  char v28;
  char v29;
  _BYTE v30[20];
  _BYTE v31[436];

  v8 = (uint64_t *)(v7 - 128);
  v9 = *v3;
  if (v1 == 198)
    goto LABEL_4;
  if (v1 == 101)
  {
    *v8 = (uint64_t)&STACK[0x195CA6660D034644];
    *(_DWORD *)(v7 - 120) = v6
                          - 1438293641 * ((((v7 - 128) | 0x1A18ACCE) - ((v7 - 128) & 0x1A18ACCE)) ^ 0xA2DFF9B1)
                          + 1118656834;
    sub_21E0DD3DC(v7 - 128);
    v18 = 1990461019 * ((-1294110926 - ((v7 - 128) | 0xB2DD6F32) + ((v7 - 128) | 0x4D2290CD)) ^ 0x62C63244);
    *v8 = (uint64_t)&STACK[0x195CA6660D034644];
    *(_QWORD *)(v7 - 120) = &v28;
    *(_DWORD *)(v7 - 112) = v6 + 1298779670 + v18;
    *(_DWORD *)(v7 - 108) = 1268886125 - v18;
    sub_21E0DD2A8(v7 - 128);
    v19 = 1990461019 * (((v7 - 128) & 0xB4926575 | ~((v7 - 128) | 0xB4926575)) ^ 0x64893803);
    *(_DWORD *)(v7 - 112) = v6 + 1298779670 + v19;
    *(_DWORD *)(v7 - 108) = 1268886125 - v19;
    *v8 = (uint64_t)&STACK[0x195CA6660D034644];
    *(_QWORD *)(v7 - 120) = &v29;
    sub_21E0DD2A8(v7 - 128);
    v20 = &v9[56 * *v9];
    *(_BYTE *)(v7 - 129) = v20[43] ^ 0x32;
    *(_BYTE *)(v7 - 130) = v20[42] ^ (v6 + 59);
    *(_BYTE *)(v7 - 131) = v20[41] ^ 0x32;
    *(_BYTE *)(v7 - 132) = v20[40] ^ 0x32;
    *(_BYTE *)(v7 - 133) = v20[39] ^ 0x32;
    *(_BYTE *)(v7 - 134) = v20[38] ^ 0x32;
    *(_BYTE *)(v7 - 135) = v20[37] ^ 0x32;
    *(_BYTE *)(v7 - 136) = v20[36] ^ 0x32;
    *(_BYTE *)(v7 - 137) = v20[35] ^ 0x32;
    *(_BYTE *)(v7 - 138) = v20[34] ^ 0x32;
    *(_BYTE *)(v7 - 139) = v20[33] ^ 0x32;
    *(_BYTE *)(v7 - 140) = v20[32] ^ 0x32;
    *(_BYTE *)(v7 - 141) = v20[31] ^ 0x32;
    *(_BYTE *)(v7 - 142) = v20[30] ^ 0x32;
    *(_BYTE *)(v7 - 143) = v20[29] ^ 0x32;
    *(_BYTE *)(v7 - 144) = v20[28] ^ 0x32;
    *(_BYTE *)(v7 - 145) = v20[27] ^ 0x32;
    *(_BYTE *)(v7 - 146) = v20[26] ^ 0x32;
    *(_BYTE *)(v7 - 147) = v20[25] ^ 0x32;
    *(_BYTE *)(v7 - 148) = v20[24] ^ 0x32;
    *(_DWORD *)(v7 - 112) = v6 + 1734664879 * ((v7 + 1529604084 - 2 * ((v7 - 128) & 0x5B2BE874)) ^ 0x74F0C06E) - 2014;
    *(_QWORD *)(v7 - 104) = v30;
    *v8 = (uint64_t)&STACK[0x195CA6660D034644];
    *(_QWORD *)(v7 - 120) = v7 - 148;
    ((void (*)(uint64_t))*(&off_24E21C7C0 + v6 - 2399))(v7 - 128);
    v21.i64[0] = 0x6464646464646464;
    v21.i64[1] = 0x6464646464646464;
    v22.i64[0] = 0x3232323232323232;
    v22.i64[1] = 0x3232323232323232;
    v23 = 12 * ((v6 + 505) ^ 0xB08u);
    v24 = vrev64q_s8(*(int8x16_t *)&v30[v23 - 2972]);
    v25 = vextq_s8(v24, v24, 8uLL);
    v26 = vrev64q_s8(vaddq_s8(vsubq_s8(v25, vandq_s8(vaddq_s8(v25, v25), v21)), v22));
    *(int8x16_t *)&v31[v23 - 2972] = vextq_s8(v26, v26, 8uLL);
    __asm { BR              X13 }
  }
  if (v1 == 100)
  {
LABEL_4:
    v10 = (uint64_t)&v9[56 * *v9 + 24];
    v11 = 1948972247 * ((v7 - 128 - 2 * ((v7 - 128) & 0x38FE8E8F) + 956206735) ^ 0x8D607B61);
    *(_QWORD *)(v7 - 104) = &STACK[0xCE528DE2F096C78];
    *v8 = v10;
    *(_DWORD *)(v7 - 112) = -1843668060 - v11;
    *(_WORD *)(v7 - 116) = 29944 - -2857 * ((v7 - 128 - 2 * ((v7 - 128) & 0x8E8F) - 29041) ^ 0x7B61);
    *(_DWORD *)(v7 - 120) = v11 + v6 - 2473;
    v12 = *(void (**)(uint64_t))(v2 + 8 * (v6 - 2002));
    v27 = v5;
    v13 = v2;
    v12(v7 - 128);
    v14 = 1734664879 * ((v7 - 128) ^ 0x2FDB281A);
    *(_QWORD *)(v7 - 104) = &v28;
    v15 = v14 + 868664071;
    *(_DWORD *)(v7 - 112) = v14 + 868664071;
    v16 = v6 + v14 - 1013;
    *(_DWORD *)v8 = v16;
    *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096C78];
    v17 = *(void (**)(uint64_t))(v13 + 8 * (v6 - 2504));
    v17(v7 - 128);
    *(_QWORD *)(v7 - 120) = &STACK[0xCE528DE2F096C78];
    *(_QWORD *)(v7 - 104) = &v29;
    *(_DWORD *)(v7 - 112) = v15;
    *(_DWORD *)v8 = v16;
    v17(v7 - 128);
    *(_DWORD *)(v7 - 120) = (v6 - 2507) ^ (1438293641
                                         * ((((v7 - 128) | 0x2AC53E67) - (v7 - 128) + ((v7 - 128) & 0xD53AC198)) ^ 0x92026B18));
    *(_QWORD *)(v7 - 112) = v31;
    *v8 = (uint64_t)&STACK[0xCE528DE2F096C78];
    ((void (*)(uint64_t))(*(_QWORD *)(v13 + 8 * (v6 - 2156)) - 8))(v7 - 128);
    __asm { BR              X15 }
  }
  *((_DWORD *)v3 + 7) = a1;
}

void sub_21E0C8B5C(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 1866394843 * ((-1682930662 - (a1 | 0x9BB0841A) + (a1 | 0x644F7BE5)) ^ 0x8E584C11);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  __asm { BR              X8 }
}

uint64_t sub_21E0C8C34()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_BYTE *)(*(_QWORD *)(v1 + 64) + 1) == 35)
                                          * (((v0 | 0x40) - 892) ^ 0x4E0)) ^ (v0 | 0x40)))
                            - 8))();
}

uint64_t sub_21E0C8C70()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 - 1700)))(16, 962668376) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1309 * v3) ^ v0)) - ((v0 - 1633604212) & 0x615ECEF7) + 1231))();
}

uint64_t sub_21E0C8CD0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  int v4;
  uint64_t v5;
  _QWORD *v7;
  uint64_t result;
  _BYTE *v9;
  int v10;
  _QWORD v11[2];
  unsigned int v12;
  __int16 v13;

  v7 = *(_QWORD **)(v1 + 16);
  v12 = (v4 - 1637) ^ (1292559617 * ((2 * (v11 & 0x5829E588) - v11 + 668342899) ^ 0x8085721A));
  v11[1] = &v10;
  v13 = -6911 * ((2 * ((unsigned __int16)v11 & 0xE588) - (unsigned __int16)v11 + 6771) ^ 0x721A) + 27453;
  result = ((uint64_t (*)(_QWORD *))(*(_QWORD *)(v5 + 8 * (v4 - 1784)) - 4))(v11);
  v3[130] = HIBYTE(v10) % 0xAu - (((HIBYTE(v10) % 0xAu) << (((v4 - 84) ^ 0xFE) & 0xD7)) & 2) - 31;
  *(_DWORD *)a1 = 1498173510;
  *(_BYTE *)(a1 + 4) = v2 ^ 0x9D;
  *(_WORD *)(a1 + 5) = 257;
  *(_BYTE *)(a1 + 7) = 0;
  *(_DWORD *)(a1 + 8) = 0x4000000;
  *(_WORD *)(a1 + 12) = 2;
  *(_BYTE *)(a1 + 14) = v3[130] & 3 ^ 1;
  *(_BYTE *)(a1 + 15) = -69;
  v3[1] = 36;
  v3[131] = 0;
  *v7 = a1;
  v9 = *(_BYTE **)(v1 + 40);
  **(_DWORD **)(v1 + 24) = 16;
  *v9 = 1;
  *(_DWORD *)(v1 + 32) = 939001227;
  return result;
}

void sub_21E0C8E48(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  v1 = 1438293641 * ((-2 - ((a1 | 0x46237229) + (~(_DWORD)a1 | 0xB9DC8DD6))) ^ 0x11BD8A9);
  v2 = *(_DWORD *)(a1 + 8) + v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_DWORD *)(a1 + 12) ^ v1;
  v5 = *(_DWORD *)(v3 - 0x195CA6660D034730);
  *(_DWORD *)(v3 - 0x195CA6660D034730) = v5 + 8 * v4 - 2120769968;
  v6 = v5 + 8 * v4 - 1410863571;
  v7 = v6 < v5 + 709906397;
  if ((v5 + 709906397) < 0x3242445A != v6 < 0x3242445A)
    v7 = (v5 + 709906397) < 0x3242445A;
  *(_DWORD *)(v3 - 0x195CA6660D03472CLL) += ((v4 - 1875708982) >> 29) + v7;
  __asm { BR              X11 }
}

uint64_t sub_21E0C8FE8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((((v2 + v3 + 64) < 0xFFFFFFC0) * (a2 + 154)) ^ a2))
                                          - ((a2 + 8) ^ 0x3D0)))(a1);
}

uint64_t sub_21E0C9028()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = (v2 - 1905370704) <= 0xFE3B65E5 || -29661658 - v1 <= (v2 - 1905370704);
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (323 * v5))))();
}

uint64_t sub_21E0C9080()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((28
                                          * ((((v0 ^ 0x894u) + 380) ^ 0xFFFFFFFFAF7637CCLL)
                                           + (1351208632 - v1) < 8)) ^ v0 ^ 0x894))
                            - (((v0 ^ 0x894u) + 1214) ^ 0x98ELL)))();
}

uint64_t sub_21E0C90F8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((62
                                * (v4
                                 - v2
                                 + v0
                                 + ((v1 - 384) | 0x100u)
                                 + ((v1 + 108551753) & 0xF9879E74 ^ 0xE6A35999F2FCA996) > 7)) ^ v1)))();
}

uint64_t sub_21E0C915C@<X0>(int8x8_t *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int8x8_t *v3;
  uint64_t v4;

  *a1 = veor_s8(*v3, (int8x8_t)0x3232323232323232);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((((((v2 - 5) - 2313) & v1) != 8)
                                                        * (206 * ((v2 - 5) ^ 0x907) - 1229)) ^ (v2 - 5)))
                                          - 4))(8);
}

uint64_t sub_21E0C91B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, int8x8_t a3@<D0>)
{
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int v10;

  *(int8x8_t *)(a2 + a1) = veor_s8(*(int8x8_t *)(v6 + a1), a3);
  v8 = v4 == a1;
  v9 = a1 + 8;
  v10 = !v8;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * ((v10 * v5) ^ v3)) - 4))(v9);
}

uint64_t sub_21E0C91E4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (3906 * (v1 == v0))))
                            - (v2 + 428)
                            - ((v2 + 1024991747) & 0xC2E7DF6C ^ 0xFFFFFFFFFFFFFFCCLL)))();
}

uint64_t sub_21E0C922C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v2 + v1) = *(_BYTE *)(v5 + v2 + v1) ^ (v4 + 90) & 0xE1 ^ 0xB2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((598 * (v2 + 1 == v3)) ^ (v4 + 892))) - 8))();
}

uint64_t sub_21E0C9284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t *), uint64_t (*a17)(uint64_t *), void (*a18)(uint64_t *), uint64_t a19, uint64_t a20,int a21,int a22,int a23,int a24,uint64_t a25,int *a26,uint64_t a27,int a28,unsigned int a29)
{
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;

  v35 = 1866394843
      * (((&a25 ^ 0x55F1DEE2) + 136786894 - 2 * ((&a25 ^ 0x55F1DEE2) & 0x82733CE)) ^ 0xB7C1DAD8);
  a25 = v33;
  LODWORD(a26) = v35 ^ 0x6D26F559;
  HIDWORD(a26) = v35 + v30 - 1356;
  a16(&a25);
  v36 = 1734664879 * ((&a25 & 0x147EEE15 | ~(&a25 | 0x147EEE15)) ^ 0xC45A39F0);
  a26 = &a21;
  a27 = v33;
  a28 = v30 - v36 - 1011;
  a29 = v36 - 1052724817;
  LODWORD(a25) = 1729118973 - v36;
  a18(&a25);
  *(_DWORD *)(v31 - 0x195CA6660D034740) += a21;
  *(_DWORD *)(v31 - 0x195CA6660D03473CLL) += a22;
  *(_DWORD *)(v31 - 0x195CA6660D034738) += a23;
  *(_DWORD *)(v31 - 0x195CA6660D034734) += a24;
  a27 = v31 + 0x4041F0FC79A2F99ELL;
  LODWORD(a26) = v30
               + 1734664879 * ((&a25 & 0x2C0692A6 | ~(&a25 | 0x2C0692A6)) ^ 0xFC224543)
               + 1062497953;
  a25 = v33;
  v37 = a17(&a25);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8
                                                      * ((((v32 - v34 - 1875709046) < 0xFFFFFFC0)
                                                        * (4 * (v30 ^ 0x675) + 154)) ^ (4 * (v30 ^ 0x675))))
                                          - ((4 * (v30 ^ 0x675u) + 8) ^ 0x3D0)))(v37);
}

uint64_t sub_21E0C94A0@<X0>(unsigned int a1@<W8>, __n128 a2@<Q0>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  v5.n128_u64[0] = 0x3232323232323232;
  v5.n128_u64[1] = 0x3232323232323232;
  return ((uint64_t (*)(__n128, __n128))(*(_QWORD *)(v4
                                                             + 8
                                                             * (int)((a3 - v3 + (a1 ^ 0xE6A35999F2FCBB04) < 0x10) | a1 ^ 0x6DC))
                                                 - 12))(a2, v5);
}

uint64_t sub_21E0C95CC()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(v8 + v1 + v4 + 24) = *(_BYTE *)(v5 + v1 + v4) ^ v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v1 + 1 == (v0 ^ v3) + v2) * v9) ^ v0)) - 12))();
}

uint64_t sub_21E0C9608@<X0>(int a1@<W8>, int8x16_t a2@<Q1>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;

  *(int8x16_t *)(v5 + v2 + 24) = veorq_s8(*(int8x16_t *)(v3 + v2), a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 + (a1 ^ v7) == 1028) * v6) ^ a1)) - 12))();
}

uint64_t sub_21E0C9640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _DWORD *a12, _DWORD *a13, _DWORD *a14, uint64_t a15, void (*a16)(uint64_t *), uint64_t (*a17)(uint64_t *), void (*a18)(uint64_t *), uint64_t a19, int a20,int a21,int a22,int a23,int a24,int a25,uint64_t a26,int *a27,uint64_t a28,int a29,unsigned int a30)
{
  uint64_t v30;
  _DWORD *v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;

  v34 = 1866394843 * ((&a26 - 1095000019 - 2 * (&a26 & 0xBEBBA02D)) ^ 0x54AC97D9);
  a26 = v33;
  LODWORD(a27) = v34 ^ 0x6D26F559;
  HIDWORD(a27) = v34 + v32 - 672;
  a16(&a26);
  v35 = 1734664879 * (&a26 ^ 0x2FDB281A);
  LODWORD(a26) = 1729118973 - v35;
  a27 = &a22;
  a28 = v33;
  a29 = v32 - v35 - 327;
  a30 = v35 - 1052724817;
  a18(&a26);
  *v31 += a22;
  *a14 += a23;
  *a13 += a24;
  *a12 += a25;
  a28 = a11;
  LODWORD(a27) = 1734664879 * (((&a26 | 0x92B092C6) - (&a26 & 0x92B092C6)) ^ 0xBD6BBADC)
               + 1062497953
               + v32
               + 684;
  a26 = v33;
  v36 = a17(&a26);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30
                                                      + 8
                                                      * (v32 | (8
                                                              * (a21 - 1875709110 < ((v32 - 713237462) & 0x2A832475 ^ 0xFFFFFBB4)))))
                                          - 12))(v36);
}

void sub_21E0C97F4()
{
  JUMPOUT(0x21E0C958CLL);
}

uint64_t sub_21E0C9820()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((480 * (v1 != 1875708982)) ^ v0)) - 8))();
}

uint64_t sub_21E0C9854@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  unsigned int v2;
  int v3;
  _BYTE *v4;
  uint64_t v5;
  _BOOL4 v6;

  v6 = v2 < a1;
  *(_BYTE *)(a2 - 0x195CA6660D034728) = *v4 ^ 0x32;
  if (v6 == a1 > 0xAEBA059E)
    v6 = v2 > 0xAEBA059E;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v5 + 8 * ((3444 * v6) ^ v3)) - 8))(v2 > 0xAEBA059E);
}

void sub_21E0C98E4()
{
  JUMPOUT(0x21E0C9894);
}

uint64_t sub_21E0C98EC()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (252 * (v1 != 1875708982)))) - ((v0 - 564) | 0x404u) + 1596))();
}

uint64_t sub_21E0C993C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  unsigned int v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v9;

  *(_BYTE *)(a1 + (v5 - 2131226454)) = *(_BYTE *)(v6 + (v5 - 2131226454)) ^ 0x32;
  v9 = v5 + 76927976 > v2 && v5 + 76927976 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((252 * v9) ^ v1)) - v3 + 1596))();
}

void sub_21E0C99CC(uint64_t a1)
{
  int v1;

  v1 = 1503746353 * (((a1 | 0x73C6F490) - (a1 & 0x73C6F490)) ^ 0x55A73626);
  __asm { BR              X11 }
}

uint64_t sub_21E0C9A88@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((54 * (*v1 != (a1 ^ 0x656))) ^ a1)) - 12))();
}

uint64_t sub_21E0C9AC8@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = a1 - 401;
  v6 = v3(*v4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((3379 * (*v1 != 0)) ^ v5)) - 12))(v6);
}

uint64_t sub_21E0C9AF8()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 376) = 0;
  *(_QWORD *)(v0 + 384) = 0;
  *(_DWORD *)(v0 + 392) = 28794008;
  *(_DWORD *)(v0 + 88) = 1107898699;
  return result;
}

uint64_t sub_21E0C9B38@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((3379 * (*v1 != 0)) ^ a1 ^ 0x293)) - 12))();
}

void sub_21E0C9B64(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_21E0C9BE8()
{
  return 4294925278;
}

void sub_21E0C9E24(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 1503746353 * ((a1 & 0x31AE6F2F | ~(a1 | 0x31AE6F2F)) ^ 0xE8305266);
  __asm { BR              X15 }
}

uint64_t sub_21E0C9F60(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8 * ((203 * ((a2 ^ 0xEE766CA9) == v3 - 843)) ^ v3))
                                                   - 8))(a1, 918745438);
}

uint64_t sub_21E0C9FA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _BOOL4 v19;
  _BOOL4 v20;

  v16 = (a2 - 918745438);
  *(_BYTE *)(v15 + v16) = *(_BYTE *)(v8 + (v16 & 0xF)) ^ *(_BYTE *)(v6 + v16) ^ *(_BYTE *)(v9 + (v16 & 0xF)) ^ *(_BYTE *)((v16 & 0xF) + v7 + 4) ^ (-11 * (v16 & 0xF));
  LODWORD(v16) = a2 + 612136313;
  v17 = (a5 ^ 0x2E5u) + a2;
  v18 = (v12 > 0xA4C09929) ^ (v16 < v11);
  v19 = v16 < v13;
  if (v18)
    v20 = v12 > 0xA4C09929;
  else
    v20 = v19;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * ((!v20 * v14) ^ v10)) - 8))(a1, v17);
}

uint64_t sub_21E0CA044(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;

  v4 = ((v3 + 1485099326) ^ (2 * a2) & 0x7A86FDCA) + (a2 ^ 0xD335124C) - 71372928 != 956460645;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v4 << 8) | (v4 << 9)) ^ v3)) - 4))();
}

uint64_t sub_21E0CA0B4(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((376
                                          * ((((183 * ((v3 + 1080) ^ 0xC2C)) ^ (a2
                                                                              + v4
                                                                              + ((v3 + 828) | 0x18u)
                                                                              - 1027833574
                                                                              - 2903 < 8)) & 1) == 0)) ^ (v3 + 1080)))
                            - 4))();
}

uint64_t sub_21E0CA118(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((211 * (a3 + v9 - 16 < ((((a8 + 1111413887) & 0xBDC12C3F) - 215) ^ 0xFFFFF4A8))) ^ a8)))();
}

uint64_t sub_21E0CA164(uint64_t a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL4 v19;

  v11 = (a2 + v9 + a3) + v10;
  v12 = ((_BYTE)a2 + (_BYTE)v9 + (_BYTE)a3) & 0xF;
  v13 = v12 + v7 - v11;
  v14 = v12 + v8 - v11;
  v15 = (v12 | v6) - v11;
  v19 = (unint64_t)(a4 - v10 - 0x2D04AAFE96B393DCLL) < 0x10
     || v13 < 0x10
     || v14 < 0x10
     || v15 + 4 < (unint64_t)(23 * (((a5 - 2607) | 0x958) ^ 0xBDBu)) - 2997;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((19 * v19) ^ a5)) - 4))();
}

uint64_t sub_21E0CA1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  int v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v3
                                                                                + 8
                                                                                * (((v4 < (((v5 - 2437) | 0x918) ^ 0xB48u))
                                                                                  * ((v5 + 91) ^ 0xC3A)) | v5))
                                                                    - 4))(a1, a2, a3, 0);
}

uint64_t sub_21E0CA23C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16x4_t v17;
  int8x16x4_t v18;

  v17.val[1].i64[0] = ((_BYTE)a4 + 8) & 0xF;
  v17.val[1].i64[1] = ((_BYTE)a4 + 7) & 0xF;
  v17.val[2].i64[0] = ((_BYTE)a4 + 6) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)a4 + 5) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)a4 + 4) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)a4 + 3) & 0xF;
  v12 = a1 + v10 + a2;
  v13.i64[0] = 0xF5F5F5F5F5F5F5F5;
  v13.i64[1] = 0xF5F5F5F5F5F5F5F5;
  v17.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v10 + (_BYTE)a2) & 0xF;
  v17.val[0].i64[1] = ((_BYTE)a4 + 9) & 0xF;
  v14.i64[0] = vqtbl4q_s8(v17, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v18.val[0].i64[1] = ((_BYTE)a4 + 1) & 0xF;
  v18.val[1].i64[1] = ((_BYTE)a4 - 1) & 0xF;
  v18.val[2].i64[1] = ((_BYTE)a4 + 13) & 0xF;
  v18.val[3].i64[1] = ((_BYTE)a4 + 11) & 0xF;
  v18.val[0].i64[0] = ((_BYTE)a4 + 2) & 0xF;
  v18.val[1].i64[0] = a4 & 0xF;
  v18.val[2].i64[0] = ((_BYTE)a4 + 14) & 0xF;
  v18.val[3].i64[0] = (a4 + 12) & 0xF;
  v14.i64[1] = vqtbl4q_s8(v18, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v15 = vrev64q_s8(vmulq_s8(v14, v13));
  *(int8x16_t *)(*(_QWORD *)(v11 - 184) - 15 + v12) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v7 + (v12 & 0xF) - 15), *(int8x16_t *)(v5 - 15 + v12)), *(int8x16_t *)(v8 + (v12 & 0xF) - 15)), *(int8x16_t *)((a3 - 1223)+ (unint64_t)(v12 & 0xF)+ v6- 1892)), vextq_s8(v15, v15, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((283 * ((v9 & 0xFFFFFFF0) == 16)) | a3)) - 12))();
}

void sub_21E0CA394()
{
  JUMPOUT(0x21E0CA314);
}

uint64_t sub_21E0CA3A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  int v5;
  int v6;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v5 == a4) ^ (v6 + 11) ^ 0x23) & 1)
                                * (((v6 - 1781) | 0x280) ^ 0x2C4)) | v6)))();
}

uint64_t sub_21E0CA3DC()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((203
                                          * ((((v2 ^ 0x1F) + 1) ^ (((((v2 + 1507534903) & 0xA624DFD9)
                                                                                    - 2896) & v1) == 0)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_21E0CA430@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  char v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  char v17;
  uint64_t v18;
  int8x16x4_t v20;

  *(_DWORD *)(v13 - 212) = v10;
  v15 = v10 & 0xFFFFFFF8;
  *(_DWORD *)(v13 - 188) = a4;
  *(_QWORD *)(v13 - 200) = v5 - 7;
  *(_QWORD *)(v13 - 208) = v14 - 7;
  *(_DWORD *)(v13 - 216) = v15;
  v16 = -a3;
  v17 = v11 + a1 + v12;
  *(_DWORD *)(v13 - 224) = v9 ^ 0x81F;
  v18 = (a1 + v12 + a2 + v16);
  v20.val[0].i64[0] = v18 & 0xF;
  v20.val[0].i64[1] = (v17 + 9 + (_BYTE)v16) & 0xF;
  v20.val[1].i64[0] = (v17 + 8 + (_BYTE)v16) & 0xF;
  v20.val[1].i64[1] = (v17 + 7 + (_BYTE)v16) & 0xF;
  v20.val[2].i64[0] = (v17 + 6 + (_BYTE)v16) & 0xF;
  v20.val[2].i64[1] = (*(_DWORD *)(v13 - 188) + (_BYTE)v16 + (v9 ^ 0xFD)) & 0xF;
  v20.val[3].i64[0] = (v17 + 4 + (_BYTE)v16) & 0xF;
  v20.val[3].i64[1] = (v17 + 3 + (_BYTE)v16) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v13 - 208) + v18) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + v20.val[0].i64[0] - 7), *(int8x8_t *)(*(_QWORD *)(v13 - 200) + v18)), veor_s8(*(int8x8_t *)(v8 + v20.val[0].i64[0] - 7), *(int8x8_t *)(v20.val[0].i64[0] + v6 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xF5F5F5F5F5F5F5F5)));
  return (*(uint64_t (**)(__n128))(v4 + 8 * ((11 * (8 - v15 != v16)) ^ (v9 - 612))))((__n128)xmmword_21E17F900);
}

void sub_21E0CA57C()
{
  JUMPOUT(0x21E0CA4A4);
}

uint64_t sub_21E0CA588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((((*(_DWORD *)(v11 - 224) - 99) ^ 0x223)
                                                        * (*(_DWORD *)(v11 - 212) == *(_DWORD *)(v11 - 216))) ^ *(_DWORD *)(v11 - 224)))
                                          - (*(unsigned int *)(v11 - 224) ^ 0x34FLL)))(a10);
}

uint64_t sub_21E0CA5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  *(_BYTE *)(v13 + (a7 - 956460646)) = *(_BYTE *)(v10 + ((a7 - 956460646) & 0xFLL)) ^ *(_BYTE *)(v8 + (a7 - 956460646)) ^ *(_BYTE *)(v11 + (((_BYTE)a7 - 102) & 0xF)) ^ *(_BYTE *)((((_BYTE)a7 - 102) & 0xF) + v9 + 4) ^ (-11 * ((a7 - 102) & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((4088 * (a7 - 1 == v12)) ^ (a6 - 860)))
                            - ((a6 + 2094681239) & 0x8325AAF4)
                            + 736))();
}

uint64_t sub_21E0CA654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int8x16_t v7;

  v7.i64[0] = 0xF3F3F3F3F3F3F3F3;
  v7.i64[1] = 0xF3F3F3F3F3F3F3F3;
  *(int8x16_t *)(v6 - 176) = veorq_s8(vaddq_s8(*(int8x16_t *)*(_QWORD *)(a1 + 8), v7), (int8x16_t)xmmword_21E17F9D0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1994 * (((a5 ^ (v6 == 176)) & 1) == 0)) ^ a5)) - 12))();
}

uint64_t sub_21E0CA6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((((a5 ^ 0x12E) + 1699830572) & 0x9AAEA3ED) + 1752) * (v6 == v7)) ^ a5 ^ 0x12E)))();
}

uint64_t sub_21E0CA6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  _BYTE *v5;

  *(_BYTE *)(v4 - 160) = *v5;
  *(_BYTE *)(v4 - 159) = v5[1];
  *(_BYTE *)(v4 - 158) = v5[2];
  *(_BYTE *)(v4 - 157) = v5[3];
  *(_BYTE *)(v4 - 156) = v5[4];
  *(_BYTE *)(v4 - 155) = v5[5];
  *(_BYTE *)(v4 - 154) = v5[6];
  *(_BYTE *)(v4 - 153) = v5[7];
  *(_BYTE *)(v4 - 152) = v5[8];
  *(_BYTE *)(v4 - 151) = v5[9];
  *(_BYTE *)(v4 - 150) = v5[10];
  *(_BYTE *)(v4 - 149) = v5[11];
  *(_BYTE *)(v4 - 148) = v5[12];
  *(_BYTE *)(v4 - 147) = v5[13];
  *(_BYTE *)(v4 - 146) = v5[14];
  *(_BYTE *)(v4 - 145) = v5[15];
  *(_QWORD *)(v4 - 144) = *(_QWORD *)v5;
  *(_QWORD *)(v4 - 136) = *((_QWORD *)v5 + 1);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2
                                                                       + 8
                                                                       * (int)(((((v5 == 0) ^ (v3 + 57)) & 1)
                                                                              * ((v3 + 1298261428) & 0xB29E1FF5 ^ 0x1A)) ^ (v3 - 230)))
                                                           - 12))(a1, a2, (v3 - 968) | 0x80u);
}

uint64_t sub_21E0CA7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v19;
  int v20;
  int v21;
  unsigned int v22;
  _BOOL4 v24;

  v22 = a19 - ((2 * a19 + 67140834) & 0xA39F1186) + v20 - 741357902;
  v24 = (v22 & 0xF) == 3 && v22 != (v21 ^ 0x9F6) + 1372555329;
  return (*(uint64_t (**)(void))(v19 + 8 * ((v24 * (((v21 - 1649052067) & 0x624A87BE) - 1685)) ^ v21)))();
}

uint64_t sub_21E0CA87C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((((v2 ^ 0x712) + 3394) ^ 0xD9E) * (v1 != 0)) ^ v2)) - 4))();
}

uint64_t sub_21E0CA8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  unsigned __int8 *v28;
  char *v29;
  unsigned int v30;
  char *v31;
  char *v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  char v37;
  char v38;
  char *v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unint64_t v45;
  unsigned int v46;
  char v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  int v55;
  uint64_t v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  unint64_t v65;
  int v66;
  char *v67;
  char *v68;
  unsigned int v69;
  char *v70;
  int v71;
  char *v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  unsigned __int8 v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  unsigned int v131;
  unsigned int v132;
  char *v133;
  int v134;
  int v135;
  int v136;
  unsigned int v137;
  char *v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  unint64_t v143;
  uint64_t v144;
  int v145;
  int v146;
  int v147;
  char *v148;
  int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  char *v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  BOOL v158;
  unsigned int v159;
  unsigned int v160;
  unint64_t v161;
  unsigned int v162;
  _BYTE *v163;
  char *v164;
  int v165;
  unsigned int v166;
  char *v167;
  int v168;
  int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  char *v174;
  int v175;
  unsigned int v176;
  char v177;
  uint64_t v178;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v29 = (char *)*(&off_24E21C7C0 + (v26 ^ 0xC5A)) - 4;
  v30 = v29[v23[12] ^ 0xFELL];
  v31 = (char *)*(&off_24E21C7C0 + (v26 ^ 0xC22)) - 4;
  v32 = (char *)*(&off_24E21C7C0 + (v26 ^ 0xFEE)) - 12;
  v33 = v32[v23[6] ^ 0x3BLL];
  v34 = v29[v23[8] ^ 0x1DLL];
  v35 = v29[*v23 ^ 0xD7];
  v36 = (v23[11] - ((2 * v23[11]) & 0xB2) - 39) ^ 0xA9 ^ v31[v23[11] ^ 0xB4] | ((v34 ^ 0x35 ^ (((v34 >> 1) & 0x40 | (((((v34 >> 1) & 0x40) >> 6) & 1) << 7)) + 65)) << 24);
  v37 = v32[v23[2] ^ 0x23];
  v38 = (v37 ^ 0xA7) + ((2 * v37) & 0x8C ^ 0xF3) - 57;
  v39 = (char *)*(&off_24E21C7C0 + v26 - 3127) - 12;
  v40 = ((v35 ^ (((v35 >> 1) & 0x40 | (((((v35 >> 1) & 0x40) >> 6) & 1) << 7)) + 65) ^ 0x10) << 24) | (((v38 ^ (6 * v38)) ^ 0xC2) << 8);
  v41 = (v31[v23[15] ^ 0xC8] ^ (v23[15] - ((2 * v23[15]) & 0xB2) - 39) ^ 0x37) & 0xFF00FFFF | ((v30 ^ (3 * ((v26 ^ 0xFFFFF084) & (v30 >> 1)) + 65) ^ 0xE) << 24) | ((((v39[v23[13] ^ 0xECLL] - 29) ^ 0xE) - 96) << 16);
  v183 = v31;
  v184 = v29;
  v42 = v31[v23[3] ^ 0x66] ^ (v23[3] - ((2 * v23[3]) & 0xB2) - 39) ^ 0x7B;
  v43 = v29[v23[4] ^ 0x94];
  v44 = v39[v23[5] ^ 0xA7];
  HIDWORD(v45) = v44 + 1;
  LODWORD(v45) = (v44 << 24) - 2097152000;
  v46 = v40 & 0xFF00FFFF | (((v39[v23[1] ^ 0xC2] - 125) ^ 0x8D) << 16);
  LOBYTE(v44) = v32[v23[10] ^ 0x74];
  v181 = v39;
  v182 = v32;
  v47 = v32[v23[(14 - (v43 ^ 0x41u) % 0xE) + (v43 ^ 0x41u) % 0xE] ^ 0x9ALL] ^ 0x61;
  v48 = v36 & 0xFF0000FF | (((v44 ^ (6 * (v44 ^ 0x61))) ^ 0xF7) << 8) | (((v39[v23[9] ^ 0x35] - 125) ^ 0xB8) << 16);
  *(_DWORD *)(v27 - 200) = (((v23[7] ^ 0xCC) - ((2 * (v23[7] ^ 0xCC)) & 0xB2) - 39) ^ v31[v23[7] ^ 0xD1] | (((((6 * (v33 ^ 0x61)) ^ v33) & 0xEE | (6 * (v33 ^ 0x61)) & 0x10 ^ v33 & 0x11111111) ^ 0xA0) << 8) | ((v43 ^ 0x9E ^ (((v43 >> 1) & 0x40 | (((((v43 >> 1) & 0x40) >> 6) & 1) << 7)) + 65)) << 24) | (((((((v45 >> 25) ^ 0xFFFFFF82) & 0x80) != 0) | (2 * ((v45 >> 25) ^ 0x82))) ^ 0xB8) << 16)) ^ 0xCB803B96;
  *(_DWORD *)(v27 - 212) = (v41 & 0xFFFF00FF | (((v47 ^ (6 * v47)) ^ 0xD2) << 8)) ^ 0xB94930F0;
  *(_DWORD *)(v27 - 208) = v48 ^ 0x68435215;
  *(_DWORD *)(v27 - 188) = (v46 | v42) ^ 0x81956267;
  HIDWORD(a13) = -2120916259;
  LODWORD(v180) = v24 & 0x10;
  HIDWORD(v180) = v24 ^ (v25 + 130);
  HIDWORD(a11) = v180 ^ 0x10;
  *(_DWORD *)(v27 - 216) = 0;
  HIDWORD(v191) = v26 ^ 0xF20;
  HIDWORD(v189) = (v26 ^ 0xF20) + 2784;
  *(_DWORD *)(v27 - 236) = HIDWORD(v189) ^ 0xD46;
  *(_QWORD *)(v27 - 224) = 3;
  *(_QWORD *)(v27 - 248) = 6;
  v49 = v32[v28[6] ^ 0xA2];
  v192 = ((HIDWORD(v189) ^ 0xD46) - 135) & 0x366EA8E ^ 0x366EA8Eu;
  v50 = v49 ^ (6 * (v49 ^ 0x61));
  LOBYTE(v41) = (v28[3] + (~(2 * v28[3]) | 0x4D) - 38) ^ v31[v28[3] ^ 0xA6];
  v51 = v29[v28[v192] ^ 0x72];
  v52 = v28[14];
  v53 = (((v51 >> 1) & 0x40 | (((((v51 >> 1) & 0x40) >> 6) & 1) << 7)) + 65) ^ v51;
  v54 = (v28[15] - ((2 * v28[15]) & 0x1B2) - 39) ^ v31[v28[15] ^ 0x97];
  v55 = v182[v52 ^ 0xCB] ^ (6 * (v182[v52 ^ 0xCB] ^ 0x61)
                                           - ((12 * (v182[v52 ^ 0xCB] ^ 0x61)) & 0x4C)
                                           - 89);
  v56 = v28[12];
  *(_QWORD *)(v27 - 232) = 1;
  v57 = (((v184[v56 ^ 0x7A] >> 1) & 0x40 | (((((v184[v56 ^ 0x7A] >> 1) & 0x40u) >> 6) & 1) << 7))
       + 65) ^ v184[v56 ^ 0x7A];
  LOBYTE(v32) = v39[v28[1] ^ 0x79] - 125;
  v58 = v182[v28[10] ^ 0x3DLL];
  v59 = v58 ^ (6 * (v58 ^ 0x61)) ^ 0x6E;
  LOBYTE(v31) = v39[v28[9] ^ 0x7ALL] - 125;
  v60 = (((v58 ^ (6 * (v58 ^ 0x61))) ^ 0x6E) << 8) | ((v31 ^ 0x4F) << 16);
  v61 = v29[*v28 ^ 0x23];
  LOBYTE(v61) = (((v61 >> 1) & 0x40 | ((((v61 >> 1) & 0x40) != 0) << 7)) + 65) ^ v61;
  v62 = v29[*(unsigned __int8 *)(*(_QWORD *)(v27 - 184) + 8) ^ 0xE4];
  v63 = (((v62 >> 1) & 0x40 | (((((v62 >> 1) & 0x40) >> 6) & 1) << 7)) + 65) ^ v62;
  v64 = v183[v28[11] ^ 0xE3] ^ (v28[11] - ((2 * v28[11]) & 0xB2) - 39) ^ 0xFE | ((v63 ^ 0xB) << 24) | v60;
  LOBYTE(v60) = v182[*(unsigned __int8 *)(*(_QWORD *)(v27 - 184) + 2) ^ 0x80];
  v186 = ((v61 ^ 0xF2) << 24) | ((unint64_t)(v60 ^ 0xACu ^ (6 * (v60 ^ 0x61) - ((12 * (v60 ^ 0x61)) & 0x4C) - 89)) << 8) | v41 ^ 0x59 | ((v32 ^ 0xB1) << 16);
  v65 = (v186 ^ 0xAF7E2A84) >> (v52 & 8) >> (v52 & 8 ^ 8);
  LODWORD(v52) = (2 * v59) & 0x40;
  HIDWORD(a22) = v64;
  v66 = ((unsigned __int16)(v64 ^ 0xDEC7) >> 8);
  LODWORD(v29) = v66 + 1888510752 - v52;
  v67 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x38B)) - 12;
  v68 = (char *)*(&off_24E21C7C0 + HIDWORD(v191) - 169) - 8;
  HIDWORD(v185) = (v39[*(unsigned __int8 *)(*(_QWORD *)(v27 - 184) + 13) ^ 0xA7] - 125) ^ 0xBD;
  v69 = *(_DWORD *)&v67[4 * (v61 ^ 0x80)] ^ *(_DWORD *)&v68[4
                                                                           * ((v39[*(unsigned __int8 *)(*(_QWORD *)(v27 - 184) + 13) ^ 0xA7]
                                                                                              - 125) ^ 0xF3)] ^ 0x8322577 ^ v29;
  LODWORD(v29) = v66 ^ 0x81;
  v70 = (char *)*(&off_24E21C7C0 + HIDWORD(v191) - 416) - 4;
  v71 = v69 ^ *(_DWORD *)&v70[4 * v29];
  LODWORD(v29) = v71 + 690917522 - ((2 * v71) & 0x525D2124);
  LODWORD(v187) = (v28[7] - ((2 * v28[7]) & 0x1B2) - 39) ^ v183[v28[7] ^ 0x43];
  v72 = (char *)*(&off_24E21C7C0 + HIDWORD(v191) - 266) - 8;
  v73 = v29 ^ *(_DWORD *)&v72[4 * (v187 ^ 0x75)];
  LODWORD(v185) = v55 ^ 0x8E;
  LODWORD(v56) = *(_DWORD *)&v67[4 * (v53 ^ 0xC9)] ^ *(_DWORD *)&v68[4 * (v32 ^ 0x8B)] ^ ((v55 ^ 0x8D) + 1888510752 - ((2 * v55) & 0x40)) ^ *(_DWORD *)&v72[4 * (v64 ^ 0xC7)] ^ *(_DWORD *)&v70[4 * (v55 ^ 0xC)];
  HIDWORD(a19) = v39[*(unsigned __int8 *)(*(_QWORD *)(v27 - 184) + 5) ^ 0x1BLL] - 125;
  v188 = __PAIR64__(v53, v54);
  v74 = *(_DWORD *)&v68[4 * (BYTE4(a19) ^ 0x28)] ^ *(_DWORD *)&v67[4 * (v63 ^ 0xF5)] ^ (v65 + 1888510752 - ((2 * v65) & 0x40)) ^ *(_DWORD *)&v72[4 * (v54 ^ 0x97)] ^ *(_DWORD *)&v70[4 * (v65 ^ 0x81)];
  LODWORD(v189) = v50;
  HIDWORD(v187) = v57;
  LODWORD(v65) = ((v50 ^ 0x61) + 1888510752 - ((2 * (v50 ^ 0x61)) & 0x40)) ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (v31 ^ 0x6B)] ^ *(_DWORD *)&v70[4 * (v50 ^ 0x56)] ^ *(_DWORD *)&v67[4 * (v57 ^ 0xDD)];
  LODWORD(v65) = (v65 + 690917522 - ((2 * v65) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v41 ^ 0x22)];
  LODWORD(v29) = *(_DWORD *)&v67[4 * (HIBYTE(v73) ^ 0x90)] ^ *(_DWORD *)&v68[4 * (BYTE2(v65) ^ 0xEB)] ^ 0xC64D1580;
  v75 = ((BYTE1(v74) ^ 0xCD) + 1888510752 - ((v74 >> 7) & 0x40)) ^ 0x6A63BB07 ^ *(_DWORD *)&v70[4 * (BYTE1(v74) ^ 0x4C)];
  v76 = v75 & v29;
  v77 = v75 + (_DWORD)v29;
  LODWORD(v29) = *(_DWORD *)&v72[4 * (v56 ^ 0x42)];
  LODWORD(v29) = (~v77 + 2 * v76) ^ ((v29 ^ 0x292E9092)
                                   + 188531526
                                   + ((2 * (_DWORD)v29) & 0x1679868A ^ 0xEDA6FFFF));
  v78 = *(_DWORD *)&v67[4 * (BYTE3(v56) ^ 0x45)] ^ 0x8322577 ^ *(_DWORD *)&v70[4 * (BYTE1(v65) ^ 0xA1)] ^ *(_DWORD *)&v68[4 * (BYTE2(v73) ^ 0xFD)] ^ ((BYTE1(v65) ^ 0x20) + 1888510752 - 2 * (((v65 >> 8) ^ 0xC6EB20) & 0x28 ^ (v65 >> 8) & 8));
  v79 = (v78 + 690917522 - ((2 * v78) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v74 ^ 0xA7)];
  v80 = ((BYTE1(v73) ^ 0xCC) + 1888510752 - ((v73 >> 7) & 0x40)) ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (BYTE2(v56) ^ 0x56)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v74) ^ 0xCB)] ^ *(_DWORD *)&v70[4 * (BYTE1(v73) ^ 0x4D)];
  v81 = (v80 + 690917522 - ((2 * v80) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v65 ^ 0x59)];
  v82 = *(_DWORD *)&v67[4 * (BYTE3(v65) ^ 0x1B)] ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (BYTE2(v74) ^ 8)];
  LODWORD(v56) = BYTE1(v56);
  v83 = ((2 * (_DWORD)v29) | 0x9CB54B2F) - (_DWORD)v29;
  LODWORD(v65) = *(_DWORD *)&v72[4 * (v73 ^ 0xA)] ^ *(_DWORD *)&v70[4 * (v56 ^ 0xF4)] ^ (v82 + 1888510752 - ((2 * v82) & 0xE120C640));
  LODWORD(v29) = v83 - ((2 * v83 + 1665840336) & 0x43B7AD66) - 746508005;
  v84 = *(_DWORD *)&v67[4 * ((v29 >> 24) ^ 0xFC)] ^ *(_DWORD *)&v68[4 * (BYTE2(v65) ^ 0x15)] ^ 0x8322577 ^ *(_DWORD *)&v70[4 * (BYTE1(v81) ^ 0x65)] ^ ((BYTE1(v81) ^ 0xE4) + 1888510752 - ((2 * ((v81 >> 8) ^ 0xFD9AE4)) & 0x40));
  v85 = (v84 + 690917522 - ((2 * v84) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v79 ^ 0x6F)];
  LODWORD(v31) = ((v56 ^ 0x75) - ((2 * (v56 ^ 0x75)) & 0x52) - 915298519) ^ 0xE05F37BB ^ v65;
  LODWORD(v56) = *(_DWORD *)&v68[4 * (BYTE2(v29) ^ 0x9F)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v79) ^ 0x87)] ^ *(_DWORD *)&v70[4 * (BYTE1(v31) ^ 0x85)] ^ ((BYTE1(v31) ^ 4) + 1888510752 - ((v31 >> 7) & 0x40));
  LODWORD(v56) = ((v56 ^ 0x8322577) + 690917522 - 2 * ((v56 ^ 0x8322577) & 0x292E909A ^ v56 & 8)) ^ *(_DWORD *)&v72[4 * (v81 ^ 0x27)];
  LODWORD(v32) = ((unsigned __int16)(v83 - ((2 * v83 - 19248) & 0xAD66) + 12571) >> 8);
  LODWORD(v29) = ((v32 ^ 0xD6) + 1888510752 - ((v29 >> 7) & 0x40)) ^ *(_DWORD *)&v67[4 * (HIBYTE(v81) ^ 0xFD)] ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (BYTE2(v79) ^ 0x73)] ^ *(_DWORD *)&v70[4 * (v32 ^ 0x57)];
  LODWORD(v31) = ((_DWORD)v29 + 690917522 - ((2 * (_DWORD)v29) & 0x525D2124)) ^ *(_DWORD *)&v72[4
                                                                                              * (v31 ^ 0x6F)];
  LODWORD(v65) = *(_DWORD *)&v67[4 * (BYTE3(v65) ^ 0xAB)] ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (BYTE2(v81) ^ 0x9A)];
  LODWORD(v65) = *(_DWORD *)&v70[4 * (BYTE1(v79) ^ 0xD1)] ^ ((BYTE1(v79) ^ 0x8639793 ^ ((((BYTE1(v79) ^ 0x959C44A8)
                                                                                        + 1784920840) ^ ((BYTE1(v79) ^ 0xFFFFFFAF) + 1))
                                                                                      + 140744595
                                                                                      - ((2
                                                                                        * (((BYTE1(v79) ^ 0x959C44A8)
                                                                                          + 1784920840) ^ ((BYTE1(v79) ^ 0xFFFFFFAF) + 1))) & 0x10C72F86)
                                                                                      + 48))
                                                           + 1784920839) ^ (v65 + 1888510752 - ((2 * v65) & 0xE120C640));
  LODWORD(v65) = (v65 + 690917522 - ((2 * v65) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (-105 - v83)];
  v86 = *(_DWORD *)&v67[4 * (HIBYTE(v85) ^ 0x8B)] ^ 0x8322577 ^ *(_DWORD *)&v68[4
                                                                              * ((BYTE2(v65) ^ 0x42)
                                                                               - ((2 * (WORD1(v65) ^ 0x6642)) & 0x88))
                                                                              + 272];
  v87 = *(_DWORD *)&v72[4 * (v56 ^ 0x8F)] ^ *(_DWORD *)&v70[4 * (BYTE1(v31) ^ 0x69)] ^ (v86 + 1888510752 - ((2 * v86) & 0xE120C640));
  v88 = *(_DWORD *)&v67[4 * (BYTE3(v56) ^ 0x37)] ^ *(_DWORD *)&v68[4 * (BYTE2(v85) ^ 0xE2)] ^ 0x8322577 ^ *(_DWORD *)&v70[4 * (BYTE1(v65) ^ 0x86)] ^ ((BYTE1(v65) ^ 7) + 1888510752 - ((v65 >> 7) & 0x40));
  v89 = (v88 + 690917522 - ((2 * v88) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v31 ^ 0x8A)];
  LODWORD(v29) = ((BYTE1(v85) ^ 0x62) + 1888510752 - 2 * (((v85 >> 8) ^ 0x8BE262) & 0x39 ^ (v85 >> 8) & 0x19)) ^ 0x8322577 ^ *(_DWORD *)&v67[4 * ((v31 >> 24) ^ 9)] ^ *(_DWORD *)&v70[4 * (BYTE1(v85) ^ 0xE3)] ^ *(_DWORD *)&v68[4 * (BYTE2(v56) ^ 0x76)];
  v90 = ((_DWORD)v29 + 690917522 - ((2 * (_DWORD)v29) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v65 ^ 0x8D)];
  LODWORD(v65) = *(_DWORD *)&v68[4 * (BYTE2(v31) ^ 0x2D)] ^ *(_DWORD *)&v67[4 * (BYTE3(v65) ^ 0x66)] ^ 0x8322577;
  LODWORD(v191) = v56 >> 8;
  LOBYTE(v54) = BYTE1(v56) ^ 0x1E;
  LODWORD(v56) = (v65 + 1888510752 - ((2 * v65) & 0xE120C640)) ^ *(_DWORD *)&v70[4 * (BYTE1(v56) ^ 0x9F)];
  v91 = (v56 + 690917522 - ((2 * v56) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v85 ^ 0xCF)];
  LODWORD(v56) = *(_DWORD *)&v68[4 * (BYTE2(v91) ^ 0x8C)];
  LODWORD(v56) = ((2 * v56) & 0x8056C88 ^ 0xF7FEDBFF) + (v56 ^ 0x77749A89);
  LODWORD(v56) = *(_DWORD *)&v70[4 * (BYTE1(v90) ^ 0x2B)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v87) ^ 0x83)] ^ ((BYTE1(v90) ^ 0xAA) + 1888510752 - ((2 * ((v90 >> 8) ^ 0x4DDBAA)) & 0x40)) ^ (v56 - ((2 * v56 + 134573194) & 0xFE8D7FFC) + 55146051);
  LODWORD(v29) = *(_DWORD *)&v72[4 * (v89 ^ 0x82)];
  LODWORD(v56) = (((v56 ^ 0x201E3DB4) + 690917522 - 2 * ((v56 ^ 0x201E3DB4) & 0x92E9093 ^ v56 & 1)) ^ v29) & 0x3984C735 | (((v56 ^ 0x201E3DB4) + 690917522 - ((2 * (v56 ^ 0x201E3DB4)) & 0x525D2124)) ^ v29) & 0xC67B38CA;
  LODWORD(v65) = *(_DWORD *)&v67[4 * (HIBYTE(v89) ^ 0xCF)] ^ *(_DWORD *)&v68[4 * (BYTE2(v87) ^ 0xF9)] ^ 0x8322577;
  LODWORD(v29) = BYTE1(v91);
  LODWORD(v65) = *(_DWORD *)&v72[4 * (v90 ^ 0xC7)] ^ *(_DWORD *)&v70[4 * (BYTE1(v91) ^ 0x89)] ^ (v65 + 1888510752 - ((2 * v65) & 0xE120C640));
  LOBYTE(v32) = v87 ^ BYTE1(v31);
  HIDWORD(v45) = *(_DWORD *)&v67[4 * (HIBYTE(v90) ^ 0x4D)] ^ 0xC64D1580 ^ *(_DWORD *)&v68[4 * (BYTE2(v89) ^ 0x50)];
  LODWORD(v45) = HIDWORD(v45);
  LODWORD(v45) = (v45 >> 20) ^ __ROR4__(((BYTE1(v87) ^ 0x4C) + 1888510752 - ((v87 >> 7) & 0x40)) ^ 0x6A63BB07 ^ *(_DWORD *)&v70[4 * (BYTE1(v87) ^ 0xCD)], 20) ^ 0x749397B4;
  HIDWORD(v45) = v45;
  v92 = ((v45 >> 12) + 690917522 - ((2 * (v45 >> 12)) & 0x525D2124)) ^ *(_DWORD *)&v72[4
                                                                                     * ((v91 ^ v54) ^ 0xC2)];
  v89 >>= 8;
  v93 = *(_DWORD *)&v67[4 * (HIBYTE(v91) ^ 0x76)] ^ ((v89 ^ 0x20)
                                                   + 1888510752
                                                   - 2 * ((v89 ^ 0xCF1420) & 0x32 ^ v89 & 0x12)) ^ *(_DWORD *)&v68[4 * (BYTE2(v90) ^ 0x9F)] ^ *(_DWORD *)&v70[4 * (v89 ^ 0xA1)] ^ *(_DWORD *)&v72[4 * (v32 ^ 0xAA)];
  v94 = v56 - ((2 * v56) & 0xBCCE60E0) + 1583820912;
  v95 = *(_DWORD *)&v68[4 * (BYTE2(v94) ^ 2)] ^ *(_DWORD *)&v67[4 * (BYTE3(v65) ^ 0x3F)] ^ (((unsigned __int16)(v93 ^ 0x4B22) >> 8)
                                                                                          + 1888510752
                                                                                          - ((v93 >> 7) & 0x40)) ^ *(_DWORD *)&v70[4 * (((unsigned __int16)(v93 ^ 0x4B22) >> 8) ^ 0x81)] ^ *(_DWORD *)&v72[4 * (v92 ^ 0x4E)];
  v96 = v29 ^ 0xE229300A ^ v65;
  v97 = *(_DWORD *)&v67[4 * (HIBYTE(v92) ^ 0x2E)] ^ *(_DWORD *)&v68[4 * (BYTE2(v65) ^ 0x6D)] ^ ((BYTE1(v94) ^ 0x9D)
                                                                                              + 1888510752
                                                                                              - ((v94 >> 7) & 0x40)) ^ *(_DWORD *)&v72[4 * (v93 ^ 0x22)] ^ *(_DWORD *)&v70[4 * (BYTE1(v94) ^ 0x1C)];
  v98 = v95 ^ 0x58A66F5E;
  LOBYTE(v32) = (v68[4 * (BYTE2(v94) ^ 2)] ^ v67[4 * (BYTE3(v65) ^ 0x3F)] ^ (((unsigned __int16)(v93 ^ 0x4B22) >> 8)
                                                                           + 32
                                                                           - ((v93 >> 7) & 0x40)) ^ v70[4 * (((unsigned __int16)(v93 ^ 0x4B22) >> 8) ^ 0x81)] ^ v72[4 * (v92 ^ 0x4E)] ^ 0x5E) & 0x10;
  v99 = *(_DWORD *)&v67[4 * (HIBYTE(v93) ^ 0x69)] ^ (BYTE1(v96) + 1888510752 - ((v96 >> 7) & 0x40)) ^ *(_DWORD *)&v70[4 * (BYTE1(v96) ^ 0x81)] ^ *(_DWORD *)&v68[4 * (BYTE2(v92) ^ 0x50)] ^ *(_DWORD *)&v72[4 * (v94 ^ 0x96)];
  v100 = *(_DWORD *)&v68[4
                       * (((v97 ^ 0x68D49FCF) >> (char)v32 >> (v32 ^ 0x10)) ^ 0x44)] ^ 0xF3762CCD;
  v101 = (v100 & 0x2000 ^ 0x7BFEF22F) + 2 * (v100 & 0x2000);
  v102 = *(_DWORD *)&v72[4 * v96];
  v103 = *(_DWORD *)&v67[4 * (HIBYTE(v99) ^ 0xEB)];
  if ((v102 & 0x80000) != 0)
    v104 = 0x80000;
  else
    v104 = -524288;
  v105 = *(_DWORD *)&v68[4 * (BYTE2(v93) ^ 0xCB)] ^ *(_DWORD *)&v70[4 * (BYTE1(v92) ^ 0x95)] ^ ((BYTE1(v92) ^ 0x14)
                                                                                              + 1888510752
                                                                                              - ((v92 >> 7) & 0x40)) ^ (v104 + (v102 ^ 0x292E9092)) ^ *(_DWORD *)&v67[4 * (HIBYTE(v94) ^ 0x3B)];
  v106 = *(_DWORD *)&v70[4 * (BYTE1(v97) ^ 0x1E)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v105) ^ 0xCE)] ^ *(_DWORD *)&v68[4 * ((v99 ^ 0x3604C198) >> 16)] ^ ((BYTE1(v97) ^ 0x9F) + 1888510752 - ((v97 >> 7) & 0x40)) ^ *(_DWORD *)&v72[4 * (v95 ^ 0xA1)];
  v107 = *(_DWORD *)&v68[4 * (BYTE2(v105) ^ 0x95)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v95) ^ 0x85)] ^ (((unsigned __int16)(v99 ^ 0xC198) >> 8)
                                                                                                + 1888510752
                                                                                                - ((v99 >> 7) & 0x40)) ^ *(_DWORD *)&v70[4 * (((unsigned __int16)(v99 ^ 0xC198) >> 8) ^ 0x81)] ^ *(_DWORD *)&v72[4 * (v97 ^ 0x30)];
  v108 = *(_DWORD *)&v67[4 * (HIBYTE(v97) ^ 0xB5)] ^ ((BYTE1(v105) ^ 0x6F)
                                                    + 1888510752
                                                    - ((2 * ((v105 >> 8) ^ 0xCE956F)) & 0x40)) ^ *(_DWORD *)&v68[4 * (BYTE2(v95) ^ 0xE2)] ^ *(_DWORD *)&v70[4 * (BYTE1(v105) ^ 0xEE)] ^ *(_DWORD *)&v72[4 * (v99 ^ 0x67)];
  v109 = v101 - 1358983176;
  if (((v101 - 2080305711) & (v103 ^ 0x7F46A000)) != 0)
    v109 = -1493339050 - v101;
  v110 = *(_DWORD *)&v70[4 * (BYTE1(v98) ^ 0x81)] ^ (BYTE1(v98) + 1888510752 - ((v98 >> 7) & 0x40)) ^ *(_DWORD *)&v72[4 * (v105 ^ 0x15)] ^ v100 & 0xFFFFDFFF ^ ((v103 ^ 0x353B394D) - 721322535 + v109);
  v111 = *(_DWORD *)&v67[4 * (HIBYTE(v106) ^ 0xB)] ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (BYTE2(v110) ^ 1)];
  v112 = ((unsigned __int16)(v108 ^ 0x1949) >> 8);
  v113 = (v111 + 1888510752 - ((2 * v111) & 0xE120C640)) ^ *(_DWORD *)&v70[4 * (v112 ^ 0x81)];
  v114 = BYTE1(v107) ^ 0x76;
  v115 = (v113 + 690917522 - ((2 * v113) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v107 ^ 1)];
  v116 = ((BYTE1(v110) ^ 0xA2) + 1888510752 - ((2 * ((v110 >> 8) ^ 0x1745A2)) & 0x40)) ^ *(_DWORD *)&v70[4 * (BYTE1(v110) ^ 0x23)];
  v117 = *(_DWORD *)&v68[4 * (BYTE2(v106) ^ 0xCA)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v107) ^ 0x30)] ^ *(_DWORD *)&v72[4 * (v108 ^ 0xB6)] ^ (v116 + 690917522 - ((2 * v116) & 0x525D2124));
  v118 = *(_DWORD *)&v67[4 * ((v108 ^ 0x62EE1949u) >> 24)] ^ ((BYTE1(v106) ^ 0xA4)
                                                            + 1888510752
                                                            - ((2 * ((v106 >> 8) ^ 0xD68EA4)) & 0x40)) ^ *(_DWORD *)&v68[4 * (((v107 ^ 0x72FA76B6) >> 16) ^ 0x73)] ^ *(_DWORD *)&v70[4 * (BYTE1(v106) ^ 0x25)] ^ *(_DWORD *)&v72[4 * (v110 ^ 0xF0)];
  v119 = *(_DWORD *)&v67[4 * (HIBYTE(v110) ^ 0xCA)];
  v120 = *(_DWORD *)&v68[4 * (BYTE2(v108) ^ 0xAA)];
  v121 = v119 & 0x10 | 0x1213C041;
  if ((v120 & v119 & 0x10) != 0)
    v121 = 606568578 - v121;
  v122 = (v120 ^ 0x77749A89) - 303284289 + v121;
  v123 = *(_DWORD *)&v70[4 * (v114 ^ 0x8E)];
  v124 = *(_DWORD *)&v72[4 * ((2 * v106) ^ 0xFFFFFFF7) + 4 * (v106 ^ 0x104)] ^ (v123 & 0xA2AADE60 ^ (v114 ^ 0x6A63BB08) & 0x22229A60 | v123 & 0x5D55219F ^ (v114 ^ 0x6A63BB08) & 0x4841219F) ^ v119 & 0x7FFFFFEF ^ ((v122 ^ 0x8402B644) + (v119 & 0x80000000));
  v125 = ((unsigned __int16)(v118 ^ 0x8990) >> 8);
  v126 = v125 ^ 0x8322577 ^ *(_DWORD *)&v68[4 * (BYTE2(v124) ^ 0xBB)] ^ *(_DWORD *)&v67[4 * (HIBYTE(v115) ^ 0xC1)];
  v127 = (v126 + 1888510752 - ((2 * v126) & 0xE120C640)) ^ *(_DWORD *)&v70[4 * (v125 ^ 0x81)];
  v128 = (v127 + 690917522 - ((2 * v127) & 0x525D2124)) ^ *(_DWORD *)&v72[4 * (v117 ^ 0x4F)];
  v129 = v115 ^ v112;
  v130 = *(_DWORD *)&v67[4 * (HIBYTE(v117) ^ 0x40)] ^ *(_DWORD *)&v72[4 * (v118 ^ 0x90)] ^ *(_DWORD *)&v70[4 * (BYTE1(v124) ^ 0x32)] ^ ((BYTE1(v124) ^ 0xB3) + 1888510752 - ((2 * ((v124 >> 8) ^ 0x8FFB3)) & 0x40)) ^ *(_DWORD *)&v68[4 * (((v129 ^ 0x1C884693u) >> v180 >> SBYTE4(a11)) ^ 0x44)];
  v131 = *(_DWORD *)&v67[4 * HIBYTE(v118)] ^ (((unsigned __int16)(v129 ^ 0x4693) >> 8)
                                            + 1888510752
                                            - ((v115 >> 7) & 0x40)) ^ *(_DWORD *)&v68[4 * (BYTE2(v117) ^ 0xB5)] ^ *(_DWORD *)&v72[4 * (v124 ^ 0xB)] ^ *(_DWORD *)&v70[4 * (((unsigned __int16)(v129 ^ 0x4693) >> 8) ^ 0x81)];
  v132 = *(_DWORD *)&v68[4 * (BYTE2(v118) ^ 0xFB)] ^ ((BYTE1(v117) ^ 0xA4)
                                                    + 1888510752
                                                    - 2 * (((v117 >> 8) ^ 0x40B5A4) & 0x31 ^ (v117 >> 8) & 0x11)) ^ *(_DWORD *)&v67[4 * (HIBYTE(v124) ^ 0xD5)] ^ *(_DWORD *)&v70[4 * (BYTE1(v117) ^ 0x25)] ^ *(_DWORD *)&v72[4 * (v129 ^ 0x6C)];
  v133 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x320)) - 12;
  HIDWORD(v190) = *(_DWORD *)&v133[4 * (HIWORD(v132) & 0xDF ^ 0x9C ^ (HIWORD(v132) & 0x20 | 0xDF))];
  v134 = *(_DWORD *)&v133[4 * (BYTE2(v128) ^ 0x65)];
  v135 = *(_DWORD *)&v133[4 * (BYTE2(v130) ^ 0xCD)];
  v136 = *(_DWORD *)&v133[4 * (BYTE2(v131) ^ 0xE6)];
  v137 = (v130 ^ 0xB612A8DE) >> (v132 & 0x18 ^ 0x10) >> (v132 & 0x18 ^ 8);
  v138 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x306)) - 4;
  v139 = HIBYTE(v128);
  LODWORD(v190) = *(_DWORD *)&v138[4 * (HIBYTE(v128) ^ 0xED)];
  v140 = *(_DWORD *)&v138[4 * (v137 ^ 0x4A)];
  v141 = HIBYTE(v131);
  v142 = *(_DWORD *)&v138[4 * (HIBYTE(v131) ^ 0x1C)];
  HIDWORD(v143) = v136 ^ 0x21611;
  LODWORD(v143) = v136 ^ 0x913C0000;
  LODWORD(v138) = ((v143 >> 18) - 757008831 - ((2 * (v143 >> 18)) & 0xA5C1EC82)) ^ *(_DWORD *)&v138[4 * (HIBYTE(v132) ^ 0x49)];
  v144 = (uint64_t)*(&off_24E21C7C0 + HIDWORD(v191) - 204);
  v145 = *(_DWORD *)(v144 + 4 * (BYTE1(v131) ^ 0xC8u));
  v146 = *(_DWORD *)(v144 + 4 * (BYTE1(v132) ^ 0xBBu));
  v147 = *(_DWORD *)(v144 + 4 * (BYTE1(v128) ^ 0xD8u));
  LODWORD(v144) = *(_DWORD *)(v144 + 4 * (BYTE1(v130) ^ 0xB2u));
  v148 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x355)) - 4;
  v149 = *(_DWORD *)&v148[4 * (v130 ^ 0xBB)];
  v150 = *(_DWORD *)&v148[4 * (v131 ^ 0xA2)];
  v151 = *(_DWORD *)&v148[4 * (v132 ^ 0x9E)];
  v152 = *(_DWORD *)&v148[4 * (v128 ^ 0xA2)];
  HIDWORD(v143) = v152 ^ 0x14DA3D;
  LODWORD(v143) = v152 ^ 0x9DC00000;
  v153 = HIBYTE(v132) ^ *(_DWORD *)(v27 - 212) ^ v144 ^ (((v144 >> 1) & 0x7BD6B2A3 ^ 0x70860020 ^ v138 ^ (v143 >> 22))
                                                       - 1186385791
                                                       - 2
                                                       * (((v144 >> 1) & 0x7BD6B2A3 ^ 0x70860020 ^ v138 ^ (v143 >> 22)) & 0x39493089 ^ (v138 ^ (v143 >> 22)) & 8));
  v154 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x32B)) - 4;
  *(_BYTE *)(*(_QWORD *)(v27 - 184) + 12) = v154[HIBYTE(v153) ^ 0xADLL] ^ 0x27 ^ (v154[HIBYTE(v153) ^ 0xADLL] >> 2) & 0x19;
  v155 = ((v141 ^ 0x21) - 757008831 - 2 * ((v141 ^ 0x21) & 0x45 ^ v141 & 4)) ^ 0xED1A43F1 ^ v142;
  v156 = ((v135 ^ 0x913E1611) >> (v191 & 0x12 ^ 0x10) >> (v191 & 0x12 ^ 2)) | (v135 << 14) ^ 0x85844000;
  v157 = (v156 & 0x20000000 | ((((v156 & 0x20000000) >> 29) & 1) << 30)) ^ 0xBF7FFFF7;
  v158 = ((v157 + 1082130441) & v155) == 0;
  v159 = v157 + 1554217372;
  v160 = -610043510 - v157;
  if (v158)
    v160 = v159;
  HIDWORD(v161) = v151 ^ 0x14DA3D;
  LODWORD(v161) = v151 ^ 0x9DC00000;
  HIDWORD(v161) = v161 >> 22;
  LODWORD(v161) = HIDWORD(v161);
  v162 = *(_DWORD *)(v27 - 208) ^ __ROR4__((v161 >> 7) ^ __ROR4__(((v147 ^ 0xE90C9841) >> 1) & 0x7BD6B2A3 ^ v147 ^ 0xE90C9841 ^ v156 & 0xDFFFFFFF ^ (v155 - 472086931 + v160), 7) ^ 0x953947F8, 25);
  v163 = *(_BYTE **)(v27 - 184);
  v164 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x311)) - 8;
  v163[9] = v164[BYTE2(v162) ^ 0xB2] ^ 0xD5;
  HIDWORD(v161) = v134 ^ 0x21611;
  LODWORD(v161) = v134 ^ 0x913C0000;
  v165 = v161 >> 18;
  HIDWORD(v161) = v150 ^ 0x14DA3D;
  LODWORD(v161) = v150 ^ 0x9DC00000;
  v166 = (v137 - 757008831 - ((2 * v137) & 0x82)) ^ *(_DWORD *)(v27 - 200) ^ v140 ^ v146 ^ 0xE90C9841 ^ ((v146 ^ 0xE90C9841) >> 1) & 0x7BD6B2A3 ^ (v161 >> 22) ^ v165;
  v167 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x339)) - 8;
  v163[7] = ((v166 ^ 0xC8) - 2 * ((v166 ^ 0xC8) & 0x2F ^ v166 & 4) + 43) ^ 0xD9 ^ v167[v166 ^ 0xABLL];
  v163[v192] = v154[HIBYTE(v166) ^ 0xE6] ^ 0x76 ^ (v154[HIBYTE(v166) ^ 0xE6] >> 2) & 0x19;
  v163[8] = v154[HIBYTE(v162) ^ 0xE2] ^ (v154[HIBYTE(v162) ^ 0xE2] >> 2) & 0x19 ^ 0xDF;
  HIDWORD(v161) = HIDWORD(v190) ^ 0x21611;
  LODWORD(v161) = HIDWORD(v190) ^ 0x913C0000;
  v168 = ((v139 ^ 0xA7) - 757008831 - ((2 * (v139 ^ 0xA7)) & 0x82)) ^ 0xED1A4386 ^ v190;
  v169 = (v161 >> 18) + v168 - 2 * ((v161 >> 18) & v168);
  HIDWORD(v161) = v149 ^ 0x14DA3D;
  LODWORD(v161) = v149 ^ 0x9DC00000;
  v170 = ((v145 ^ 0xE90C9841) >> 1) & 0x7BD6B2A3 ^ v145 ^ 0xE90C9841 ^ (v161 >> 22) ^ v169;
  v171 = v170 + (*(_DWORD *)(v27 - 188) ^ 0x819562DD) - 2 * (v170 & (*(_DWORD *)(v27 - 188) ^ 0x19562DD));
  v172 = v171 - ((2 * v171) & 0xA01503AE) - 804617769;
  v173 = v154[HIBYTE(v172) ^ 0x97];
  *v163 = v173 ^ 0x86 ^ (v173 >> 2) & 0x19;
  v163[13] = v164[((v153 ^ 0xE89D8C9A) >> (v153 & 0x10 ^ 0x10) >> (v153 & 0x10)) ^ 0xDELL] ^ 0xD;
  v163[15] = ((v153 ^ 0x42) - ((2 * (v153 ^ 0x42)) & 0x56) + 43) ^ v167[v153 ^ 0x72] ^ 0x1C;
  v174 = (char *)*(&off_24E21C7C0 + (HIDWORD(v191) ^ 0x3A4)) - 8;
  v163[14] = ((BYTE1(v153) ^ 0x8C) - ((2 * (BYTE1(v153) ^ 0x8C)) & 0xB4) + 90) ^ v174[BYTE1(v153) ^ 0xA0] ^ 0x11;
  v163[11] = v162 ^ 0x5A ^ ((v167[v162 ^ 0x79] ^ 0xB3) & (v167[v162 ^ 0x79] ^ 0x2B) | v167[v162 ^ 0x79] & 0x98);
  v163[*(_QWORD *)(v27 - 248)] = ((BYTE1(v166) ^ 0x9A) - ((2 * (BYTE1(v166) ^ 0x9A)) & 0xB4) + 90) ^ 0x3B ^ v174[BYTE1(v166) ^ 0xB1];
  v163[10] = ((BYTE1(v162) ^ 0x52) + (~(2 * (BYTE1(v162) ^ 0x52)) | 0x4B) + 91) ^ 0xC2 ^ v174[BYTE1(v162) ^ 0xALL];
  v175 = v167[v172 ^ 0x20];
  v176 = v172 & 2 ^ 2;
  v177 = v172 & 2 | 0x58;
  if ((v175 & v176) == 0)
    v177 = v172 & 2 | 0x58 | (4 * ((v176 & 2) != 0));
  v178 = *(unsigned int *)(v27 - 236);
  v163[*(_QWORD *)(v27 - 224)] = v172 & 0xFD ^ ((v175 ^ 4) + v177 - 90) ^ 4;
  v163[5] = v164[BYTE2(v166) ^ 0x3ELL] ^ 0xA6;
  v163[2] = ((BYTE1(v172) ^ 0x86) - ((2 * (BYTE1(v172) ^ 0x86)) & 0xB4) + 90) ^ 0xCE ^ v174[BYTE1(v172) ^ 0x35];
  v163[*(_QWORD *)(v27 - 232)] = v164[BYTE2(v172) ^ 0xE1] ^ 0xBD;
  return ((uint64_t (*)(char *, _QWORD, uint64_t, _QWORD, uint64_t, _UNKNOWN **, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, char *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * ((30 * (HIDWORD(v180) > 0x10)) ^ HIDWORD(v191))) - 12))(v174, v176 >> 1, v178, 0, 180, &off_24E21C7C0, 59, v167, a9, a10, a11, v22, a13, v180, v181, v182, v183, v184, a19,
           v185,
           v186,
           a22,
           v187,
           v188,
           v189,
           v190,
           v191,
           13,
           5,
           0x366EA8E0366EA8FLL,
           8,
           9,
           12);
}

void sub_21E0CCB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,__int16 a21,unsigned __int8 a22,int a23,int a24,int a25,int a26,int a27,unsigned __int8 a28,int a29,unsigned __int8 a30,int a31,char a32,__int16 a33,char a34)
{
  int v34;
  uint64_t v35;

  *(_DWORD *)(v35 - 188) = a24 ^ 0x9CF7C636;
  *(_DWORD *)(v35 - 200) = (((a31 ^ 0x3A) << 24) | (((a32 ^ a34 ^ 0x20) ^ 0x20) << 8) | a28 ^ 0x5E | ((a20 ^ a7) << 16)) ^ 0x35D488D7;
  *(_DWORD *)(v35 - 212) = ((a23 << 16) | ((a29 ^ v34) << 24) | a30 ^ 0x8A | (a22 << 8)) ^ 0x35E6CCAA;
  *(_DWORD *)(v35 - 208) = a27 ^ 0x856480F;
  JUMPOUT(0x21E0CACB4);
}

uint64_t sub_21E0CCC0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20
                                        + 8
                                        * (a3 | (112
                                               * (((2 * (a20 - ((2 * a10) & 0x6D16F0EA) + 948680422)) & 0x75EE7AFC ^ 0x650670E8)
                                                + ((a20 - ((2 * a10) & 0x6D16F0EA) + 948680422) ^ 0xC7C450B)
                                                + 2008809434 != 850607448))))
                            - 4))();
}

uint64_t sub_21E0CCCBC(int a1, int a2)
{
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((929
                                          * (a2
                                           + a1
                                           + (((v3 ^ 0x7F7) + 1369) ^ 0x4508C0C7 ^ ((v3 ^ 0x7F7) - 936896674) & 0x37D7EBBFu) < 8)) ^ v3 ^ 0x7F7))
                            - 4))();
}

uint64_t sub_21E0CCD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (a4 ^ (53 * ((a3 + a6 - 16) > 0xFFFFFFEF))))
                                                                              - (a4 + 571)
                                                                              + 2892))(a1, a2, a3, a4, v7);
}

uint64_t sub_21E0CCD8C(int a1, int a2, int a3, unsigned int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;
  int v24;

  v9 = (a2 + a1 + a3);
  v10 = v9 + v8 + 1;
  v11 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v12 = v11 - v9;
  v13 = v6 + v12;
  v14 = (((a4 - 211) | 0x200) ^ 0xA4BLL) + v11;
  v15 = v6 + v14;
  v16 = v7 + v12;
  v17 = v7 + v14;
  v18 = v12 + v5 + 1;
  v19 = v11 + ((a4 + 1991029341) & 0x89534FDD) + v5 - 2902;
  v21 = v13 < v10 && v15 > v8;
  if (v16 < v10 && v17 > v8)
    v21 = 1;
  v24 = v18 < v10 && v19 > v8 || v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((711 * (v24 ^ 1)) ^ a4)) - 12))();
}

uint64_t sub_21E0CCE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unsigned int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                + 8
                                                                                * ((7
                                                                                  * (v7 >= ((((4 * a6) ^ 0x2274) - 20) ^ a6 ^ 0x112u))) ^ a6))
                                                                    - 12))(a1, a2, a3, 0);
}

uint64_t sub_21E0CCE74(int a1, int a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16x4_t v21;
  int8x16x4_t v22;

  v12 = a5 - 6;
  v21.val[1].i64[0] = ((_BYTE)v9 + 5) & 0xF;
  v21.val[1].i64[1] = ((_BYTE)v9 + 4) & 0xF;
  v21.val[2].i64[0] = ((_BYTE)v9 + 3) & 0xF;
  v21.val[2].i64[1] = ((_BYTE)v9 + 2) & 0xF;
  v21.val[3].i64[0] = ((_BYTE)v9 + 1) & 0xF;
  v21.val[3].i64[1] = v9 & 0xF;
  v22.val[0].i64[0] = ((_BYTE)v9 - 1) & 0xF;
  v22.val[0].i64[1] = ((_BYTE)v9 + 14) & 0xF;
  v13 = *(_QWORD *)(v11 - 184) - 15;
  v14 = a2 + a1 + a3;
  v22.val[1].i64[0] = ((_BYTE)v9 + 13) & 0xF;
  v22.val[1].i64[1] = ((_BYTE)v9 + 12) & 0xF;
  v22.val[2].i64[0] = (v9 + 11) & 0xF;
  v22.val[2].i64[1] = (v9 + 10) & 0xF;
  v22.val[3].i64[0] = (v9 + 9) & 0xF;
  v22.val[3].i64[1] = ((_BYTE)v9 + 8) & 0xF;
  v15.i64[0] = 0x7F7F7F7F7F7F7F7FLL;
  v15.i64[1] = 0x7F7F7F7F7F7F7F7FLL;
  v16.i64[0] = 0x3232323232323232;
  v16.i64[1] = 0x3232323232323232;
  v21.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  v21.val[0].i64[1] = ((_BYTE)v12 + (_BYTE)v9) & 0xF;
  v17.i64[0] = vqtbl4q_s8(v21, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v17.i64[1] = vqtbl4q_s8(v22, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v18 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 + v14), *(int8x16_t *)(v7 + v21.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v8 + v21.val[0].i64[0] - 15), *(int8x16_t *)(v21.val[0].i64[0] + v6 - 14))));
  v19 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v18, v18, 8uLL), v16), vmulq_s8(v17, v15)));
  *(int8x16_t *)(v13 + v14) = vextq_s8(v19, v19, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((2 * (((v12 ^ ((v10 & 0xFFFFFFF0) == 16)) & 1) == 0)) & 0xF7 | (8 * ((v12 ^ ~((v10 & 0xFFFFFFF0) == 16)) & 1))) ^ v12))
                            - 8))();
}

void sub_21E0CCFF0()
{
  JUMPOUT(0x21E0CCF60);
}

uint64_t sub_21E0CCFFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;

  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((((a8 + 1502163391) & 0xA676CF9D) - 2304) * (v9 != a4)) | a8)))();
}

uint64_t sub_21E0CD030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;
  unsigned int v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v6
                                                                                         + 8
                                                                                         * (int)(a6 ^ (855 * ((v8 >> 3) & 1))))
                                                                             - (a6 + 571)
                                                                             + 2892))(a1, a2, a3, a4, (v7 - a4));
}

uint64_t sub_21E0CD05C(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  char v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  int8x16x4_t v19;

  *(_DWORD *)(v13 - 200) = v12;
  *(_DWORD *)(v13 - 212) = v9 & 0xFFFFFFF8;
  *(_DWORD *)(v13 - 208) = v9;
  *(_DWORD *)(v13 - 188) = -(v9 & 0xFFFFFFF8);
  v15 = -8 - a4;
  v16 = v10 + a2 + a1;
  v17 = (a2 + a1 + a3 + v15 + 8);
  v19.val[0].i64[0] = v17 & (((v11 - 1728479611) & 0x67067F3F) - 2318);
  v19.val[0].i64[1] = (v16 + 6 + (_BYTE)v15 + 8) & 0xF;
  v19.val[1].i64[0] = (v16 + 5 + (_BYTE)v15 + 8) & 0xF;
  v19.val[1].i64[1] = (v16 + 4 + (_BYTE)v15 + 8) & 0xF;
  v19.val[2].i64[0] = (v16 + 3 + (_BYTE)v15 + 8) & 0xF;
  v19.val[2].i64[1] = (v16 + 2 + (_BYTE)v15 + 8) & 0xF;
  v19.val[3].i64[0] = (v16 + 1 + (_BYTE)v15 + 8) & 0xF;
  v19.val[3].i64[1] = (v8 + (_BYTE)v15 + 8) & 0xF;
  *(int8x8_t *)(v14 - 7 + v17) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v14 - 7 + v17), *(int8x8_t *)(v6 + v19.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v7 + v19.val[0].i64[0] - 7), *(int8x8_t *)(v19.val[0].i64[0] + v5 - 6)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x7F7F7F7F7F7F7F7FLL)));
  return (*(uint64_t (**)(__n128))(v4 + 8 * ((45 * (*(_DWORD *)(v13 - 188) != v15)) ^ (v11 - 1867))))((__n128)xmmword_21E17F900);
}

void sub_21E0CD1C8()
{
  JUMPOUT(0x21E0CD0D8);
}

uint64_t sub_21E0CD1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v7 + 8 * (((a7 - 1634) * (*(_DWORD *)(v8 - 208) == *(_DWORD *)(v8 - 212))) ^ a7))
                                                                                               - ((a7 - 1565) | 0x858u)
                                                                                               + 2892))(a1, a2, a3, a4, a5, a6, (a7 + 571));
}

uint64_t sub_21E0CD214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (a5 - 850607449);
  *(_BYTE *)(v12 + v13) ^= *(_BYTE *)(v10 + (v13 & 0xF)) ^ *(_BYTE *)(v11 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + v9 + 1) ^ (127 * (v13 & 0xF)) ^ 0x32;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((119 * (a5 - 1 != v8)) ^ (a7 - 2774))) - 4))();
}

void sub_21E0CD284()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 479617122)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 4) = v1;
}

void sub_21E0CD2E8(uint64_t a1)
{
  int v1;

  v1 = 1866394843 * ((2 * (a1 & 0x400CF3B1) - a1 - 1074590642) ^ 0x55E43BBA);
  __asm { BR              X10 }
}

uint64_t sub_21E0CD390@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((341
                                          * (v2 != ((v1 - 712712518) & 0x2A7B2BEA ^ 0x73B466CD ^ (v1 + 1092531412) & 0xBEE14FAF))) ^ (v1 + 2363)))
                            - 12))();
}

uint64_t sub_21E0CD414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 + 8 * (v2 + 434))
                                                                                       - 12))(a1, 4052387906, 242578933, 50, 3710916422, 626993890);
}

uint64_t sub_21E0CD550@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v4 != ((v5 + 1205) ^ v1 ^ v5 ^ v2)) * v3) ^ v5)) - 4))();
}

uint64_t sub_21E0CD57C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((746 * ((v2 + 1463964121) & 0xA8BDAE3E ^ 0xA3A)) ^ 0xBB0) * (v3 == v1)) ^ v2))
                            - 12))();
}

uint64_t sub_21E0CD5C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;

  v6 = (v3 - 1529163348) & 0x5B252FBD;
  v7 = v4 + v2;
  v8 = v4 + 1;
  *(_DWORD *)(*(_QWORD *)(v1 - 0x1D17695A8381D35ELL) + 4 * (v7 + v6) - 0x2CF4A33C3453BA2BLL) = v5;
  v9 = 7 * (v6 ^ 0xA31);
  *(_DWORD *)(v1 - 0x1D17695A8381D362) = v8;
  v10 = v2 + v8;
  v11 = -121 - (v10 + v9);
  if (v10 + v9 + 121 >= 0)
    v11 = v10 + v9 + 121;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((22
                                          * ((int)((v11 ^ 0xEFCFEF97) + ((2 * v11) & 0xDF9FDF2E) + 271585384) > (v9 ^ 0xA2C) - 260)) ^ v9))
                            - 8))();
}

uint64_t sub_21E0CD6D8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((135 * (*(_DWORD *)(*v3 + 4 * v4 - 0x2CF4A33C3453BA2BLL) == v1)) ^ v2))
                            - ((v2 - 896432172) & 0x356E6DFF)
                            + 251))();
}

uint64_t sub_21E0CD730@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((22 * (v2 - 1 > (v1 ^ 0xA2C) - 260)) ^ v1)) - 8))();
}

uint64_t sub_21E0CD768(uint64_t result)
{
  int v1;
  int v2;
  int *v3;
  int v4;
  int v5;

  if ((v2 + 2983) >= 0x7FFFFFFF)
    v5 = -v1;
  else
    v5 = v4;
  *v3 = v5;
  *(_DWORD *)(result + 4) = 1117968857;
  return result;
}

void sub_21E0CD7A8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 48) - 1988622253 * (((a1 | 0x41099A5B) - a1 + (a1 & 0xBEF665A4)) ^ 0xB711DAFB);
  __asm { BR              X14 }
}

uint64_t sub_21E0CD8DC(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (((a3 - 3010)
                                          * (((((a3 - 3063) | 0x205) + 2840635) ^ (2 * v3) & 0xFB7FFF9E)
                                           + (v3 ^ 0x7DEA528F)
                                           + 1996159292 != 1958410507)) ^ a3))
                            - 12))();
}

uint64_t sub_21E0CD948(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a2 + a1 + 37748785 >= ((101 * (a4 ^ 0x243)) ^ 0x256u)) * (101 * (a4 ^ 0x240) + 3522)) ^ a4)))();
}

uint64_t sub_21E0CD9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * ((956 * ((((a5 ^ 0x3BC) - 597) & a8) != -37748784)) ^ a5)))();
}

uint64_t sub_21E0CD9D8(int a1, int a2, int a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BOOL4 v21;

  v10 = (a2 + a1 + a3);
  v11 = v10 + v4;
  v12 = v10 + v8;
  v13 = v11 - v12;
  v14 = (a2 + a1) & 0xF;
  v15 = v14 + v6 - v12;
  v16 = (v14 | v5) - v12;
  v17 = (v14 | v7) - v12;
  v21 = v15 > 0xF
     && v13 >= ((a4 - 1734699910) & 0x67656DD9 ^ 0x489uLL)
     && v16 + 1 >= ((a4 - 1741049415) & 0x67C64E5F ^ 0x24EuLL)
     && v17 > 0xF;
  return (*(uint64_t (**)(void))(v9 + 8 * ((2199 * v21) ^ a4)))();
}

uint64_t sub_21E0CDA78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  unsigned int v8;
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v9
                                                                               + 8
                                                                               * ((2344
                                                                                 * (((v8 < 0x10) ^ (a8 - 108)) & 1)) ^ a8)))(a1, a2, a3, a4, (a8 + 1221342045) & 0xB733CD0B);
}

uint64_t sub_21E0CDAC4(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  unsigned int v77;
  int8x16_t v78;
  uint64_t v79;
  int8x16_t v80;
  int8x16_t v81;
  int8x16x4_t v83;
  int8x16x4_t v84;

  v76 = a5 + 310;
  *(_DWORD *)(v75 - 148) = v72 + 9;
  *(_DWORD *)(v75 - 144) = v72 + 10;
  v83.val[1].i64[0] = ((_BYTE)v72 + 2) & 0xF;
  v83.val[1].i64[1] = ((_BYTE)v72 + 1) & 0xF;
  v83.val[2].i64[0] = v72 & 0xF;
  v83.val[2].i64[1] = ((_BYTE)v72 - 1) & 0xF;
  v83.val[3].i64[0] = ((_BYTE)v72 + 14) & 0xF;
  v83.val[3].i64[1] = ((_BYTE)v72 + 13) & 0xF;
  v77 = a2 + a1 + a3;
  v78.i64[0] = 0x7B7B7B7B7B7B7B7BLL;
  v78.i64[1] = 0x7B7B7B7B7B7B7B7BLL;
  v79 = (984 * (v76 ^ 0x63A) - 1953) & v77;
  v83.val[0].i64[0] = v79;
  v83.val[0].i64[1] = ((_BYTE)v72 + 3) & 0xF;
  v80.i64[0] = vqtbl4q_s8(v83, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v84.val[0].i64[1] = ((_BYTE)v72 + 11) & 0xF;
  v84.val[1].i64[1] = *(_DWORD *)(v75 - 148) & 0xF;
  v84.val[2].i64[1] = ((_BYTE)v72 + 7) & 0xF;
  v84.val[3].i64[1] = ((_BYTE)v72 + 5) & 0xF;
  v84.val[0].i64[0] = ((_BYTE)v72 + 12) & 0xF;
  v84.val[1].i64[0] = *(_DWORD *)(v75 - 144) & 0xF;
  v84.val[2].i64[0] = ((_BYTE)v72 + 8) & 0xF;
  v84.val[3].i64[0] = (v72 + 6) & 0xF;
  v80.i64[1] = vqtbl4q_s8(v84, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v81 = vrev64q_s8(vmulq_s8(v80, v78));
  *(int8x16_t *)(v74 - 15 + v77) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v70 + v79 - 15), *(int8x16_t *)(v68 - 15 + v77)), veorq_s8(*(int8x16_t *)(v79 + v69 - 14), *(int8x16_t *)(v71 + v79 - 15))), vextq_s8(v81, v81, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a68 + 8 * ((2891 * ((v73 & 0xFFFFFFF0) == 16)) ^ v76)) - 12))();
}

void sub_21E0CDC38()
{
  JUMPOUT(0x21E0CDBC0);
}

uint64_t sub_21E0CDC44(int a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * ((109 * ((a1 ^ 0x3E2) - 2141869838 == v1)) ^ a1))
                                          - 4))(2103390628);
}

uint64_t sub_21E0CDC94(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v15;

  v11 = v7 > 0x871E87AE;
  *(_BYTE *)(v9 + (a1 - 2103390628)) = *(_BYTE *)(v3 + ((a1 - 2103390628) & 0xFLL)) ^ *(_BYTE *)(v1 + (a1 - 2103390628)) ^ *(_BYTE *)(((a1 - 2103390628) & 0xFLL) + v2 + 1) ^ *(_BYTE *)(v4 + ((a1 - 2103390628) & 0xFLL)) ^ (123 * ((a1 + 92) & 0xF));
  v12 = (v6 ^ 0xFB8242E0) + a1;
  v13 = (a1 + 1);
  v14 = v11 ^ (v12 < v5);
  v15 = v12 < v8;
  if (!v14)
    v11 = v15;
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((3744 * v11) ^ v6)))(v13);
}

uint64_t sub_21E0CDD30@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((((v1 - 1387) ^ 0x221) * (a1 == v3)) ^ v1)) - (v1 ^ 0x7B8)))();
}

uint64_t sub_21E0CDD70@<X0>(int a1@<W7>, char a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1756 * ((a2 & 8) != (a1 ^ 0x747) - 1282)) ^ a1)))();
}

uint64_t sub_21E0CDDA8(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  int v73;
  char v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  int8x16x4_t v83;

  *(_DWORD *)(v77 - 148) = v73;
  v78 = v73 & 0xFFFFFFF8;
  *(_QWORD *)(v77 - 144) = v68 - 7;
  v79 = v75 - 7;
  *(_DWORD *)(v77 - 152) = v78;
  v80 = v74 + a2 + a1;
  *(_DWORD *)(v77 - 156) = a5 ^ 0x747;
  v81 = (a2 + a1 + a3 - v76);
  v83.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 - (_BYTE)v76) & 0xF;
  v83.val[0].i64[1] = (v80 + 3 - (_BYTE)v76) & 0xF;
  v83.val[1].i64[0] = (v80 + 2 - (_BYTE)v76) & 0xF;
  v83.val[1].i64[1] = (v80 + 1 - (_BYTE)v76) & 0xF;
  v83.val[2].i64[0] = (v72 - (_BYTE)v76) & 0xF;
  v83.val[2].i64[1] = (v72 - (_BYTE)v76 + (a5 ^ 0xFD)) & 0xF;
  v83.val[3].i64[0] = (v80 + 14 - (_BYTE)v76) & 0xF;
  v83.val[3].i64[1] = (v80 + 13 - (_BYTE)v76) & 0xF;
  *(int8x8_t *)(v79 + v81) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v70 + (v81 & 0xF) - 7), *(int8x8_t *)(*(_QWORD *)(v77 - 144) + v81)), veor_s8(*(int8x8_t *)((v81 & 0xF) + v69 - 6), *(int8x8_t *)(v71 + (v81 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v83, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x7B7B7B7B7B7B7B7BLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a68
                                                     + 8 * ((8 * (-v78 == -8 - v76)) | (16 * (-v78 == -8 - v76)) | a5))
                                         - 4))((__n128)xmmword_21E17F900);
}

void sub_21E0CDEF8()
{
  JUMPOUT(0x21E0CDE0CLL);
}

uint64_t sub_21E0CDF00()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((*(_DWORD *)(v1 - 156) + 25) ^ 0x75A) + 263)
                                * (*(_DWORD *)(v1 - 148) == *(_DWORD *)(v1 - 152))) ^ *(_DWORD *)(v1 - 156))))();
}

uint64_t sub_21E0CDF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = (a6 - 1958410508);
  *(_BYTE *)(v12 + v14) = *(_BYTE *)(v9 + (v14 & 0xF)) ^ *(_BYTE *)(v7 + v14) ^ *(_BYTE *)((v14 & 0xF) + v8 + 1) ^ *(_BYTE *)(v10 + (v14 & 0xF)) ^ ((v14 & 0xF) * ((a7 - 90) ^ 0x7F));
  return (*(uint64_t (**)(void))(v13 + 8 * ((3898 * (a6 - 1 != v11)) ^ (a7 + 496))))();
}

uint64_t sub_21E0CDFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int8x16_t v64;

  v64 = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v60 + 40) - 0x498DA1AEF22D93B7), (int8x16_t)xmmword_21E17F9F0);
  *(int8x16_t *)(v63 - 128) = veorq_s8(*(int8x16_t *)*(_QWORD *)(v60 + 8), (int8x16_t)xmmword_21E17F9E0);
  *(int8x16_t *)(v63 - 112) = v64;
  LODWORD(a25) = 2 * v59;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (int)((8 * (((v61 == 0) ^ (a5 - 61)) & 1)) & 0xDF | (32 * (((v61 == 0) ^ (a5 - 61)) & 1)) | a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

uint64_t sub_21E0CE02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v59;
  uint64_t v60;
  _BOOL4 v62;

  v62 = (((a25 & 0xD6) + (v59 ^ 0xEBu) + 5) & 0xF) == 0
     && (a25 & 0xBCFFFDD6) + (v59 ^ 0xDE7FFEEB) != -562037013;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * (int)(((((a5 - 835) | 4) + 1636) * v62) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

#error "21E0D42C0: call analysis failed (funcsize=5818)"

void sub_21E0D42C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a70;
  int a71;
  int a73;
  int a74;
  uint64_t v74;

  *(_DWORD *)(v74 - 156) = a70 ^ 0xFF39EDCB;
  *(_DWORD *)(v74 - 160) = a74 ^ 0x3D917132;
  *(_DWORD *)(v74 - 152) = a71 ^ 0x6A761018;
  *(_DWORD *)(v74 - 148) = a73 ^ 0x444D5CEA;
  JUMPOUT(0x21E0D2298);
}

uint64_t sub_21E0D4318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int a69;
  uint64_t v69;

  return (*(uint64_t (**)(void))(v69
                              + 8
                              * (a69 ^ (980
                                      * (((2 * (a24 - (a26 & 0x7F9E06AC) - 2056808248)) & 0xFFF82DE6 ^ 0x7F9804A4)
                                       + ((a24 - (a26 & 0x7F9E06AC) - 2056808248) ^ 0xC03315A5)
                                       - 1699217600 != 448009779)))))();
}

uint64_t sub_21E0D43EC(int a1, int a2, int a3)
{
  uint64_t v3;
  _BOOL4 v4;

  v4 = a2 + a1 + ((a3 - 1868851783) & 0x6F64665F ^ 0x8003EB53) > 7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((4 * v4) | (32 * v4)) ^ a3)) - 8))();
}

uint64_t sub_21E0D4470(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((a6 + a5 - 16 < ((((a3 - 390583878) & 0x1747D9DE) - 1236) ^ 0xFFFFFAFA))
                                * (((a3 - 390583878) & 0x1747D9DE) - 2484)) ^ (a3 - 390583878) & 0x1747D9DE)))();
}

uint64_t sub_21E0D44C0(int a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BOOL4 v24;
  int v26;

  v11 = (a2 + a1 + a6);
  v12 = v9 + v11 + (a3 ^ 0x50BLL);
  v13 = (((a3 - 167) | 0x308) ^ 0x764) & v11;
  v14 = v13 - v11;
  v15 = v7 + v13 - v11;
  v16 = v13 + 1;
  v17 = v7 + v13 + 1;
  v18 = v13 + v8;
  v19 = v18 - v11 + 2;
  v20 = v18 + 3;
  v21 = v6 + v14;
  v22 = v6 + v16;
  v24 = v17 > v9 && v15 < v12;
  v26 = v20 > v9 && v19 < v12 || v24;
  if (v22 > v9 && v21 < v12)
    v26 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (int)((29 * v26) ^ a3)) - 4))();
}

uint64_t sub_21E0D4560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD);

  v11 = (a8 - 1899) | 0x145u;
  v12 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                      + 8
                                                                                      * (int)(((((v8 < 0x10) ^ (a8 + 8)) & 1)
                                                                                             * (v11 - 305)) ^ a8))
                                                                          - 12);
  *(_DWORD *)(v10 - 144) = v8;
  return v12(a1, a2, 0, v11, (a8 - 1529));
}

uint64_t sub_21E0D45A4(int a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  uint64_t v73;
  unsigned int v74;
  int8x16_t v75;
  uint64_t v76;
  int8x16_t v77;
  int8x16_t v78;
  int8x16x4_t v80;
  int8x16x4_t v81;

  v80.val[1].i64[0] = ((_BYTE)v71 + 10) & 0xF;
  v80.val[1].i64[1] = ((_BYTE)v71 + 9) & 0xF;
  v80.val[2].i64[0] = ((_BYTE)v71 + 8) & 0xF;
  v80.val[2].i64[1] = ((_BYTE)v71 + 7) & 0xF;
  v80.val[3].i64[0] = ((_BYTE)v71 + 6) & 0xF;
  v80.val[3].i64[1] = ((_BYTE)v71 + 5) & 0xF;
  v74 = a2 + a1 + a6;
  v75.i64[0] = 0x6B6B6B6B6B6B6B6BLL;
  v75.i64[1] = 0x6B6B6B6B6B6B6B6BLL;
  v76 = (((a4 - 1) | 0x81) - 438) & v74;
  v80.val[0].i64[0] = v76;
  v80.val[0].i64[1] = ((_BYTE)v71 + 11) & 0xF;
  v77.i64[0] = vqtbl4q_s8(v80, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v81.val[0].i64[1] = ((_BYTE)v71 + 3) & 0xF;
  v81.val[1].i64[1] = ((_BYTE)v71 + 1) & 0xF;
  v81.val[2].i64[1] = (v71 - 1) & 0xF;
  v81.val[3].i64[1] = ((_BYTE)v71 + 13) & 0xF;
  v81.val[0].i64[0] = ((_BYTE)v71 + 4) & 0xF;
  v81.val[1].i64[0] = ((_BYTE)v71 + 2) & 0xF;
  v81.val[2].i64[0] = v71 & 0xF;
  v81.val[3].i64[0] = (v71 + 14) & 0xF;
  v77.i64[1] = vqtbl4q_s8(v81, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v78 = vrev64q_s8(vmulq_s8(v77, v75));
  *(int8x16_t *)(*(_QWORD *)(v73 - 136) - 15 + v74) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v69 + v76 - 15), *(int8x16_t *)(*(_QWORD *)(v73 - 136) - 15 + v74)), veorq_s8(*(int8x16_t *)(v76 + v70 - 13), *(int8x16_t *)(v68 + v76 - 15))), vextq_s8(v78, v78, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a68
                                        + 8 * ((((v72 & 0xFFFFFFF0) == 16) | (8 * ((v72 & 0xFFFFFFF0) == 16))) ^ a4))
                            - 4))();
}

void sub_21E0D4708()
{
  JUMPOUT(0x21E0D4690);
}

uint64_t sub_21E0D4714(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((3 * (a6 ^ 0x3BC) - 1377) | 0x54) - 565) * (*(_DWORD *)(v7 - 144) != a3)) ^ a6)))();
}

uint64_t sub_21E0D474C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  char v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * ((3295
                                                                                  * ((v8 & 8) == (((a7 - 1817) | 0x120) ^ 0x172))) ^ a7))
                                                                    - ((a7 + 766862356) & 0xD24A96DE ^ 0x252)))(a1, a2, a3, (v7 - a3));
}

uint64_t sub_21E0D47AC(char a1, char a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a68;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  char v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  char v79;
  uint64_t v80;
  int8x16x4_t v82;

  *(_DWORD *)(v77 - 152) = v73 & 0xFFFFFFF8;
  *(_DWORD *)(v77 - 148) = v75;
  v78 = -a3;
  v79 = v74 + a2 + a1;
  v80 = v72 + v78 + (((a5 - 49) | 0x84) ^ v68);
  v82.val[0].i64[0] = ((_BYTE)v72 + (_BYTE)v78 + (((a5 - 49) | 0x84) ^ v68)) & 0xF;
  v82.val[0].i64[1] = (v79 + 11 + (_BYTE)v78) & 0xF;
  v82.val[1].i64[0] = (v79 + 10 + (_BYTE)v78) & 0xF;
  v82.val[1].i64[1] = (v79 + 9 + (_BYTE)v78) & 0xF;
  v82.val[2].i64[0] = (v79 + 8 + (_BYTE)v78) & 0xF;
  v82.val[2].i64[1] = (v79 + 7 + (_BYTE)v78) & 0xF;
  v82.val[3].i64[0] = (v79 + 6 + (_BYTE)v78) & 0xF;
  v82.val[3].i64[1] = (v79 + 5 + (_BYTE)v78) & 0xF;
  *(int8x8_t *)(v76 - 7 + v80) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v70 + (v80 & 0xF) - 7), *(int8x8_t *)(v76 - 7 + v80)), veor_s8(*(int8x8_t *)((v80 & 0xF) + v71 - 5), *(int8x8_t *)(v69 + (v80 & 0xF) - 7))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v82, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x6B6B6B6B6B6B6B6BLL)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a68 + 8 * ((2202 * (8 - (v73 & 0xFFFFFFF8) == v78)) ^ a5)) - 8))((__n128)xmmword_21E17F900);
}

void sub_21E0D48D8()
{
  JUMPOUT(0x21E0D4804);
}

uint64_t sub_21E0D48E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v0 - 1123141223) ^ 0xBD0E3900) + ((v0 - 1123141223) & 0x42F1C6FF) + 885)
                                     * (*(_DWORD *)(v2 - 144) != *(_DWORD *)(v2 - 152))) ^ v0)))();
}

uint64_t sub_21E0D492C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = (v8 + a4 + 451);
  *(_BYTE *)(v12 + v14) ^= *(_BYTE *)(v10 + (v14 & 0xF)) ^ *(_BYTE *)((v14 & 0xF) + v11 + 2) ^ *(_BYTE *)(v9 + (v14 & 0xF)) ^ (107 * (v14 & 0xF));
  return (*(uint64_t (**)(void))(v13 + 8 * ((1955 * (a4 - 1 != v7)) ^ (a7 - 153))))();
}

void sub_21E0D498C()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1227388005)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 16) = v1;
}

uint64_t sub_21E0D49F0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_24E215050[((2 * (*(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL) != 1810943906)) | (16 * (*(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL) != 1810943906))) ^ 0x5CEu]
                            - 12))();
}

uint64_t sub_21E0D4A44@<X0>(uint64_t a1@<X8>)
{
  return a1;
}

uint64_t sub_21E0D4A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a1 - 0x4063EA0FFD2E1A1) - 0x1C73FCAA0D59E675) = *(_BYTE *)(*(_QWORD *)(a2
                                                                                                  - 0x593A0D77ED43FF8BLL)
                                                                                      + 12);
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 14760) - 12))();
}

void sub_21E0D4AF4()
{
  JUMPOUT(0x21E0D4AC4);
}

uint64_t sub_21E0D4AFC(uint64_t result)
{
  int v2;

  if ((*(_BYTE *)(result + 4) + ((16 - (result | 0x10) + (result | 0xEF)) ^ 0xAA)) > 0x22u
    || ((1 << (*(_BYTE *)(result + 4) + ((16 - (result | 0x10) + (result | 0xEF)) ^ 0xAA))) & 0x414000000) == 0)
  {
    v2 = -939041308;
  }
  else
  {
    v2 = 939001227;
  }
  *(_DWORD *)(result + 8) = v2;
  return result;
}

void sub_21E0D4B74(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;
  unint64_t *v8;
  int v9;
  int v10;
  unsigned int v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v1 = 2009815553 * (a1 ^ 0xF10B2E45);
  v2 = *(_DWORD *)(a1 + 32) - v1;
  v3 = *(_DWORD *)(a1 + 48) - v1;
  v4 = *(_QWORD *)a1;
  v5 = 1948972247 * (&v7 ^ 0xB59EF5EE);
  v6 = v5 + 1303832999 * ((*(_DWORD *)(a1 + 36) - v1) ^ 0x8EDE9E1);
  v9 = v3 + v5 - 793855496;
  v10 = v2 - v5 + 133;
  v8 = &STACK[0x1769FB36A4B6473D];
  v12 = &STACK[0xAC35C7385DC943];
  v13 = v4;
  v11 = v6 + 2065000247;
  ((void (*)(int *))((char *)*(&off_24E21C7C0 + (v2 ^ 0xE9)) - 8))(&v7);
  __asm { BR              X9 }
}

uint64_t sub_21E0D4CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, unsigned int a12, uint64_t a13, uint64_t a14, int a15, int a16, int a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  v24 = *(_QWORD *)(v19 + 40);
  v25 = *(_QWORD *)(v19 + 16);
  v26 = 1734664879 * (((&a12 | 0x4DD4A1A7) + (~&a12 | 0xB22B5E58)) ^ 0x620F89BC);
  a15 = v26 + 293839861 * a11 + 1513351342;
  a17 = v22 + 1679 - v26 - 1652556511;
  a12 = v21 - v26 - ((v22 + 844793906 + (v21 << (((v22 - 16) | 0x10) + 73))) & 0x844D135C) + 1532219043;
  a18 = a9;
  a19 = a9;
  a13 = v24;
  a14 = v25;
  v27 = sub_21E0DD6B0((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((11 * (a16 != v20)) ^ (v22 + 1679))) - 4))(v27);
}

uint64_t sub_21E0D4DBC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t result;
  uint64_t v5;
  unsigned int v6;

  result = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1 + 8 * (v3 ^ 0x78)))(**(unsigned int **)(v1 + 8 * (v3 - 165)), v5, v6);
  *(_DWORD *)(v0 + 52) = v2;
  return result;
}

void sub_21E0D4E5C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v6[3];
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int32x4_t v24;
  uint64_t v25;
  int32x4_t v26;
  int32x4_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  _BYTE v34[12];
  char v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 16) - 731811679 * ((1995111358 - (a1 | 0x76EAFBBE) + (a1 | 0x89150441)) ^ 0xC0E3A205);
  v2 = *(_QWORD *)(a1 + 8);
  v6[1] = *(_QWORD *)a1;
  v3 = (v1 - 126);
  v4 = (char *)*(&off_24E21C7C0 + (v1 ^ 0xE9)) - 12;
  v25 = v2 - 0xCE528DE2F096DD4;
  v20 = v2 - 0xCE528DE2F096DB8;
  v23 = v2 - 0xCE528DE2F096DBCLL;
  v28 = v2 - 0xCE528DE2F096DD0;
  v30 = (v3 ^ (unint64_t)v34 ^ 0xFBDEDFE522B25F77)
      + ((2 * (_QWORD)v34) & 0xF7BDBFCA4564BEE0)
      + 0x6B779BFFF4FEFBCLL;
  v33 = v2 - 0xB9EE3A861FB076BLL;
  v18 = v2 - 0xCE528DE2F096DB4;
  v16 = v2 - 0xCE528DE2F096DE0;
  v15 = v2 - 0xCE528DE2F096DDFLL;
  v14 = v2 - 0xCE528DE2F096DDELL;
  v13 = v2 - 0xCE528DE2F096DDDLL;
  v12 = v2 - 0xCE528DE2F096DD8;
  v11 = v2 - 0xCE528DE2F096DDCLL;
  v10 = v2 - 0xCE528DE2F096DDBLL;
  v9 = v2 - 0xCE528DE2F096DDALL;
  v8 = v2 - 0xCE528DE2F096DD9;
  v21 = (char *)&v6[0xF56D4D5428F5EE2CLL] + 3;
  v6[0] = v2 - 0xCE528DE2F097798;
  v6[2] = v2 - 0xCE528DE4DC4B46CLL;
  v17 = v1 + 514405587;
  v26 = vdupq_n_s32(0x37F8059Bu);
  v27 = vdupq_n_s32(0x6FF00B16u);
  v7 = v1 - 853865123;
  v19 = *(_QWORD *)&v4[8 * v1];
  v29 = &v35;
  v22 = 0x5495955EB850905DLL;
  v32 = v1;
  v24 = vdupq_n_s32(0x37F8058Bu);
  v31 = v2 - 0xCE528DE2F096E18;
  v5 = *(_DWORD *)(v2 - 0xCE528DE2F096DD4) & 0x3F;
  *(_BYTE *)(v2 - 0xCE528DE2F096E18 + (v5 ^ 0x3C)) = -78;
  __asm { BR              X8 }
}

uint64_t sub_21E0D523C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41)
{
  int v41;
  int v42;
  uint64_t v43;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 + 8 * (int)(((((v42 + 1846543477) & 0x91EFFE86) - 2539) * (v41 != 63)) ^ v42))
                                                                                                - ((v42 - 1593463379) & 0x5EFA4BCD ^ 0x85)))(a1, a2, a3, a4, a5, a6, a41);
}

uint64_t sub_21E0D52AC()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((58 * ((v1 ^ 3u) < ((v0 - 446483012) & 0x1A9CC47F ^ 0x436u))) ^ v0)))();
}

uint64_t sub_21E0D52F4@<X0>(int a1@<W0>, char a2@<W8>, uint64_t a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v4 - 891);
  *(_QWORD *)(a3 + v3 + (v8 ^ v5)) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((((a2 & 0x38) == 8) * a1) ^ v8)) - 8))();
}

uint64_t sub_21E0D5334(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + (v1 ^ v4)) = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (int)(((v2 == 0) * a1) ^ v1)) - 8))();
}

uint64_t sub_21E0D5360@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((3 * (v1 ^ 0x8EB) - 1005) * (v2 == a1)) ^ v1))
                            - ((43 * (v1 ^ 0x982u)) ^ 0x89)))();
}

uint64_t sub_21E0D53C4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, unint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  uint64_t v55;
  int v56;
  int v57;
  char *v58;
  int v59;
  uint64_t v60;
  _DWORD *v61;
  int v62;
  int v63;
  _BOOL4 v65;
  uint64_t (*v66)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);
  _BOOL4 v69;
  uint64_t (*v70)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t);
  unint64_t v71;

  v70 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)(v55 + 8 * (a6 - 126)) - 4);
  v58 = &a55 + a25 - 0x5495955EB850905DLL;
  v71 = a24 + a25;
  v59 = *(_DWORD *)(a49 - 0x1464535CD0E6661);
  v60 = *(unsigned int *)(a49 - 0x1464535CD0E665DLL);
  v61 = (_DWORD *)(a49 - 0x1464535CD0E6659);
  v62 = *(_DWORD *)(a49 - 0x1464535CD0E6659);
  v63 = *(unsigned __int8 *)(a49 - 0x1464535CD0E664DLL) ^ 0xF1;
  if (v63 == 2)
  {
    v69 = a4 >= v71 || (unint64_t)v58 >= a4 + 64;
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v55
                                                                 + 8
                                                                 * (int)((((a1 ^ 0x380) + 3020) * v69) ^ (a1 + 685)))
                                                     - 4))(2112363690, v60);
  }
  else if (v63 == 1)
  {
    v65 = a4 >= v71 || (unint64_t)v58 >= a4 + 64;
    v66 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v55 + 8 * ((3256 * v65) ^ ((int)a1 + 1731)));
    return v66(v66, v60, a1, a2, a3, v61, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             v71);
  }
  else
  {
    *(_DWORD *)(a49 - 0x1464535CD0E6665) = 2 * (*(_DWORD *)(a49 - 0x1464535CD0E6665) ^ v57)
                                           + v57
                                           - (v56 & (4 * (*(_DWORD *)(a49 - 0x1464535CD0E6665) ^ v57)));
    *(_DWORD *)(a49 - 0x1464535CD0E6661) = (*(_DWORD *)(a49 - 0x1464535CD0E6661) ^ v57)
                                           + (v59 ^ v57)
                                           + v57
                                           - (v56 & (2 * ((*(_DWORD *)(a49 - 0x1464535CD0E6661) ^ v57) + (v59 ^ v57))));
    *(_DWORD *)(a49 - 0x1464535CD0E665DLL) = (*(_DWORD *)(a49 - 0x1464535CD0E665DLL) ^ v57)
                                           + (v60 ^ v57)
                                           + v57
                                           - (v56 & (2 * ((*(_DWORD *)(a49 - 0x1464535CD0E665DLL) ^ v57) + (v60 ^ v57))));
    *v61 = (*v61 ^ v57) + (v62 ^ v57) + v57 - (v56 & (2 * ((*v61 ^ v57) + (v62 ^ v57))));
    return v70(v70, v60, a1, a2, a3, v61, a4, a5, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             v71);
  }
}

uint64_t sub_21E0D6F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  uint64_t v47;

  return (*(uint64_t (**)(uint64_t))(v47 + 8 * ((a47 + 1593) ^ (410 * (a10 == 0)))))(3466);
}

void sub_21E0D6F70()
{
  JUMPOUT(0x21E0D51E0);
}

uint64_t sub_21E0D6FD8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_DWORD *a28)
{
  uint64_t v28;
  int v29;

  v29 = *a28 - ((2 * *a28 + 1044238414) & 0x2FBD045A) + 1459448404;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((2763
                                * ((((a3 ^ 0xCEF) + 536342160) & (2 * v29) ^ 0xFB5005A)
                                 + (v29 ^ 0x18257F52)
                                 + 2035611373 != 156300396)) ^ (a3 + 1695))))();
}

uint64_t sub_21E0D7078()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((254 * (v2 + v1 + (((v0 ^ 0x65F) + 233) ^ 0x7004099Bu) > 7)) ^ v0))
                            - 4))();
}

uint64_t sub_21E0D70C8(uint64_t a1, int a2)
{
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a2 ^ 0xB9B) - 37) * (v2 < 0x20)) ^ a2))
                            - ((a2 - 2049) ^ 0x311)))();
}

uint64_t sub_21E0D7100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;

  *(int8x8_t *)(a4 - 7 + (v7 + v6 - v9)) = veor_s8(*(int8x8_t *)(a6 - 7 + (v7 + v6 - v9)), (int8x8_t)0x3232323232323232);
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8 * ((88 * ((((v10 - 137) | 2) ^ 0x29A) + v9 == (v8 & 0xFFFFFFF8))) ^ v10))
                            - 4))();
}

uint64_t sub_21E0D7164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                       + 8
                                                                       * (int)((((43 * (v7 ^ 0x291) + 1458941560) & 0xA90A5B37 ^ 0xF83)
                                                                              * (v5 == v6)) ^ v7)))(a1, a2, a3, a5);
}

uint64_t sub_21E0D71AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  int8x16_t v12;
  uint64_t v14;
  uint64_t v15;
  int8x16_t v16;

  v11 = v9 + v8 + a1;
  v12.i64[0] = 0x3232323232323232;
  v12.i64[1] = 0x3232323232323232;
  v14 = a6 + v11;
  v15 = a4 + v11;
  v16 = veorq_s8(*(int8x16_t *)(v14 - 31), v12);
  *(int8x16_t *)(v15 - 15) = veorq_s8(*(int8x16_t *)(v14 - 15), v12);
  *(int8x16_t *)(v15 - 31) = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((202 * ((v6 & 0xFFFFFFE0) == 32)) ^ (v7 + 3279)))
                            - ((v7 - 476005772) & 0x1C5F4DDE ^ 0x8D8)))();
}

void sub_21E0D722C()
{
  JUMPOUT(0x21E0D71E8);
}

uint64_t sub_21E0D7238()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 | (v0 != v1) | (8 * (v0 != v1))))
                            - 3 * (v2 ^ 0x8FFu)
                            + 121))();
}

uint64_t sub_21E0D7264()
{
  char v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 & 0x18) == (v1 ^ 0x8D9) - 13) * ((61 * (v1 ^ 0x8D9)) ^ 0x30E)) ^ v1 ^ 0xA51)))();
}

uint64_t sub_21E0D72B0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + (v4 + v3)) = *(_BYTE *)(a2 + (v4 + v3)) ^ 0x32;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 1 != a3) * ((3 * ((v5 - 785) ^ 0x70B)) ^ 0xD90)) ^ (v5 - 785))))();
}

uint64_t sub_21E0D72F8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v3;
  int v4;
  char v5;
  int v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a1 + (v6 + v3)) = *(_BYTE *)(a2 + (v6 + v3)) ^ v5;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 - 1 != a3) * v7) ^ v4)))();
}

void sub_21E0D7364(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16)
     - 2009815553 * (((a1 ^ 0x29DACD99 | 0xFE3C163A) - ((a1 ^ 0x29DACD99) & 0xFE3C163A)) ^ 0x26EDF5E6);
  __asm { BR              X8 }
}

uint64_t sub_21E0D7424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  uint64_t v15;
  int v16;
  uint64_t v17;

  a14 = (v16 - 1690126876) ^ (1292559617
                            * ((&a14 - 1215187974 - 2 * ((unint64_t)&a14 & 0xB791B3FA)) ^ 0x10C2DB93));
  v17 = sub_21E0E193C(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((2308 * (a15 == 939001227)) ^ v16)) - 8))(v17);
}

uint64_t sub_21E0D74A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, int a16)
{
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a15 = &STACK[0xCDF15AEA900D061];
  a14 = v18 - 225134719 * (&a14 ^ 0x16F0452A) - 1176;
  sub_21E047010(&a14);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((2473 * (a16 == v16)) ^ v18))
                                                                                                - ((v18 - 415) | 4u)
                                                                                                + 1062))(v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_21E0D751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, uint64_t a15, uint64_t a16, int a17)
{
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  void (*v23)(unsigned int *);
  uint64_t v24;
  uint64_t v26;

  v22 = v17[4];
  v26 = *v17;
  a15 = v17[3];
  a16 = a11;
  a14 = v21 - 491 + 1292559617 * (((&a14 | 0x22083211) + (~&a14 | 0xDDF7CDEE)) ^ 0x855B5A79);
  v23 = (void (*)(unsigned int *))(*(_QWORD *)(v19 + 8 * (v21 ^ 0x478)) - 4);
  v23(&a14);
  a15 = v22;
  a16 = a11;
  a14 = v21 - 491 + 1292559617 * ((&a14 - 1401199616 - 2 * (&a14 & 0xAC7B6400)) ^ 0xB280C69);
  v23(&a14);
  a14 = v21 - ((((2 * &a14) | 0xE8838AC4) - &a14 - 1950467426) ^ 0x854AEB27) * v20 + 571;
  a15 = a11;
  a16 = v26;
  v24 = (*(uint64_t (**)(unsigned int *))(v19 + 8 * (v21 - 978)))(&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((471 * (a17 == ((v21 - 259368511) & 0xF75A7D9) + 938999746)) ^ v21))
                                          - 12))(v24);
}

uint64_t sub_21E0D7678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, int a16, int a17, unint64_t *a18, uint64_t a19)
{
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1328090399 * ((2 * (&a14 & 0x12CC25B8) - &a14 + 1832114754) ^ 0x92E0BE78);
  a14 = (v21 - 1653801923) ^ v22;
  a15 = 1569277994 - v22;
  a18 = &STACK[0x7398388C82CD2E7];
  a19 = a11;
  a17 = v22 ^ 0x6B80F4A2;
  v23 = sub_21E0DDA14((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * ((28 * (a16 == (((v21 - 749) | 0x488) ^ (v19 - 1353)))) ^ v21))
                                          - (v21 - 228)
                                          + 830))(v23);
}

uint64_t sub_21E0D774C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  uint64_t v16;
  uint64_t v17;
  int v18;
  void (*v19)(unsigned int *);
  uint64_t v20;

  a14 = v18
      - 220
      - 1292559617 * ((((2 * &a14) | 0x4F50077A) - &a14 + 1482161219) ^ 0xFB6BD4);
  a15 = &STACK[0x3DECEE387AEF03E5];
  a16 = a13;
  v19 = (void (*)(unsigned int *))(*(_QWORD *)(v17 + 8 * (v18 - 697)) - 4);
  v19(&a14);
  a14 = v18 - 220 - 1292559617 * (((&a14 | 0xECDA7279) - (&a14 & 0xECDA7279)) ^ 0x4B891A10);
  a15 = &STACK[0x3DECEE387AEF03E1];
  a16 = a13;
  v19(&a14);
  a15 = a13;
  LODWORD(a16) = v18
               - 1734664879 * ((&a14 + 934811702 - 2 * (&a14 & 0x37B81836)) ^ 0x1863302C)
               - 495;
  v20 = sub_21E092C98((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((3694 * (a14 == 939001227)) ^ v18))
                                          - (v18 + 639)
                                          + 1477))(v20);
}

uint64_t sub_21E0D7894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, int a12)
{
  uint64_t v12;
  unsigned int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (int)((2487 * (a12 == (((v13 + 319) | 0x140) ^ a9))) ^ v13))
                            - (v13 ^ 0x34ELL)))();
}

uint64_t sub_21E0D78E0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int *v2;
  int v3;
  uint64_t result;
  void (*v6)(int *);
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  *v2 = v8 ^ v3;
  v11 = v9;
  v10 = (a1 + 918) ^ (225134719
                    * ((379551908 - (&v10 | 0x169F80A4) + (&v10 | 0xE9607F5B)) ^ 0xFF903A71));
  v6(&v10);
  v11 = v7;
  v10 = (a1 + 918) ^ (225134719
                    * ((&v10 + 467316494 - 2 * ((unint64_t)&v10 & 0x1BDAAF0E)) ^ 0xD2AEA24));
  result = ((uint64_t (*)(int *))v6)(&v10);
  *(_DWORD *)(v1 + 20) = 939001227;
  return result;
}

void sub_21E0D79F0(uint64_t a1)
{
  int v1;
  _BOOL4 v2;

  v1 = *(_DWORD *)(a1 + 8) + 1328090399 * ((a1 & 0x7524ACE | ~(a1 | 0x7524ACE)) ^ 0x77ED10B);
  v2 = *(_QWORD *)(a1 + 32) <= *(_QWORD *)a1;
  __asm { BR              X15 }
}

uint64_t sub_21E0D7B00()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((234
                                * (((2 * v1) & 0x72FEBF74 ^ (((v0 - 1023) | 0x925) + 1482462739) & 0xA7A363A5 ^ 0x10743270)
                                 + (v1 ^ 0xB5C5C712)
                                 + ((((v0 - 1023) | 0x925) - 302205870) & 0x12034E5E ^ 0x6FF7E618) != 695683514)) ^ ((v0 - 1023) | 0x925))))();
}

uint64_t sub_21E0D7B9C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((4052 * (a1 + v4 + 1182834758 >= ((a4 - 799) | 0x440u) - 1081)) ^ a4)))();
}

uint64_t sub_21E0D7BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * (int)(((a8
                                                                                                 + ((((_DWORD)a4 + 225) | 0x40) ^ (a5 + 1071)) > 0xFFFFFFEF)
                                                                                                * (a4 ^ 0x36F)) ^ a4)))(a1, a2, a3, a4, a5, a3);
}

uint64_t sub_21E0D7C20(int a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v21;
  unint64_t v22;
  int v24;

  v12 = a4 ^ 0xFE;
  v13 = (a1 + v9 + a5);
  v14 = *(_QWORD *)(v11 - 216);
  v15 = v13 + v14;
  v16 = v13 & 0xF;
  v17 = v16 + v7 - v15;
  v18 = (v16 | v8) - v15;
  v19 = (v16 | v6) - v15;
  v21 = v17 > 0xF
     && v5 - v14 >= (v12 + 2551) + (unint64_t)(v12 ^ 0x79Fu) - 4614
     && (unint64_t)(v18 + 5) > 0xF;
  v22 = v19 + 2;
  v24 = v21 && v22 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((2001 * v24) ^ v12)) - 8))();
}

uint64_t sub_21E0D7CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * (a8 ^ ((v8 > 0xF) | (2 * (v8 > 0xF)))))
                                                                    - ((a8 + 1526317480) & 0xA5063AEB)
                                                                    - ((a8 - 656197593) & 0x271CBB7F ^ 0xFFFFFFFFFFFFF4E7)))(a1, a2, a3, 0);
}

uint64_t sub_21E0D7D04(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  int8x16_t v15;
  uint64_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16x4_t v20;
  int8x16x4_t v21;

  v20.val[1].i64[0] = ((_BYTE)a3 + 3) & 0xF;
  v20.val[1].i64[1] = ((a7 ^ 0xFB) + (_BYTE)a3) & 0xF;
  v20.val[2].i64[0] = ((_BYTE)a3 + 1) & 0xF;
  v20.val[2].i64[1] = a3 & 0xF;
  v20.val[3].i64[0] = ((_BYTE)a3 - 1) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)a3 + 14) & 0xF;
  v14 = STACK[0x208];
  v15.i64[0] = 0x5D5D5D5D5D5D5D5DLL;
  v15.i64[1] = 0x5D5D5D5D5D5D5D5DLL;
  v16 = a3 + (((a7 ^ 0x32) - 2104) ^ (v11 - 479));
  v20.val[0].i64[0] = ((_BYTE)a3 + (((a7 ^ 0x32) - 56) ^ (v11 + 33))) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)a3 + 4) & 0xF;
  v17.i64[0] = vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v21.val[0].i64[1] = ((_BYTE)a3 + 12) & 0xF;
  v21.val[1].i64[1] = ((_BYTE)a3 + 10) & 0xF;
  v21.val[2].i64[1] = (a3 + 8) & 0xF;
  v21.val[3].i64[1] = ((_BYTE)a3 + 6) & 0xF;
  v21.val[0].i64[0] = ((_BYTE)a3 + 13) & 0xF;
  v21.val[1].i64[0] = ((_BYTE)a3 + 11) & 0xF;
  v21.val[2].i64[0] = ((_BYTE)a3 + 9) & 0xF;
  v21.val[3].i64[0] = ((_BYTE)a3 + 7) & 0xF;
  v17.i64[1] = vqtbl4q_s8(v21, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v18 = vrev64q_s8(vmulq_s8(v17, v15));
  *(int8x16_t *)(*(_QWORD *)(v13 - 216) - 15 + v16) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 + (v16 & 0xF) - 15), *(int8x16_t *)(v7 - 15 + v16)), veorq_s8(*(int8x16_t *)((v16 & 0xF) + v10 - 10), *(int8x16_t *)((v16 & 0xF) + v8 - 13))), vextq_s8(v18, v18, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((50 * ((v12 & 0xFFFFFFF0) != 16)) ^ a7 ^ 0x32)) - 8))();
}

void sub_21E0D7E68()
{
  JUMPOUT(0x21E0D7DE8);
}

uint64_t sub_21E0D7E74()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((((2 * (v0 ^ 0x16D) + 440) | 8) ^ 0xC39) * (v1 == 0xCBA98A8)) | (2 * (v0 ^ 0x16D))))
                                          - 8))(1435499969);
}

uint64_t sub_21E0D7ED0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  _BOOL4 v16;

  v11 = v7 > 0xE4E20FB1;
  v12 = (a1 - 1435499969);
  v13 = ((43 * (v6 ^ 0x92F)) ^ 0xC17) & v12;
  *(_BYTE *)(*(_QWORD *)(v10 - 216) + v12) = *(_BYTE *)(v3 + v13) ^ *(_BYTE *)(v1 + v12) ^ *(_BYTE *)(v13 + v4 + 5) ^ *(_BYTE *)(v13 + v2 + 2) ^ (93 * v13);
  LODWORD(v12) = a1 - 980553074;
  v14 = (a1 + 1);
  v15 = v11 ^ (v12 < v5);
  v16 = v12 < v8;
  if (!v15)
    v11 = v16;
  return (*(uint64_t (**)(uint64_t))(v9 + 8 * ((970 * v11) ^ v6)))(v14);
}

uint64_t sub_21E0D7F80(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((v5 + 253) ^ 0x352) * (v4 == a4)) ^ v5))
                            - ((v5 + 779901498) & 0xD183AFBA ^ 0xC1CLL)))();
}

uint64_t sub_21E0D7FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  char v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * ((2008 * ((v8 & 8) != (((a8 ^ 0x761) - 709) ^ 0x17C))) ^ a8)))();
}

uint64_t sub_21E0D8008(int a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char v15;
  char v16;
  unsigned int v17;
  int8x16x4_t v19;

  v13 = *(_QWORD *)(v12 - 216) - 7;
  *(_DWORD *)(v12 - 224) = v11 & 0xFFFFFFF8;
  *(_DWORD *)(v12 - 220) = v11;
  v14 = a1 + a2 + v10;
  v15 = v14 - a4;
  v16 = v14 - a4 - 18;
  v17 = v14 + v9 - a4;
  v19.val[0].i64[0] = v17 & 0xF;
  v19.val[0].i64[1] = (v15 + 4) & 0xF;
  v19.val[1].i64[0] = (v15 + 3) & 0xF;
  v19.val[1].i64[1] = (v15 + 2) & 0xF;
  v19.val[2].i64[0] = (v15 + 1) & 0xF;
  v19.val[2].i64[1] = v15 & 0xF;
  v19.val[3].i64[0] = (v15 - 1) & 0xF;
  v19.val[3].i64[1] = (v16 + 10 * (a5 ^ 0x2C)) & 0xF;
  *(int8x8_t *)(v13 + v17) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v7 + v19.val[0].i64[0] - 7), *(int8x8_t *)(v5 - 7 + v17)), veor_s8(*(int8x8_t *)(v19.val[0].i64[0] + v8 - 2), *(int8x8_t *)(v19.val[0].i64[0] + v6 - 5))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v19, (int8x16_t)xmmword_21E17F900), (int8x8_t)0x5D5D5D5D5D5D5D5DLL)));
  return (*(uint64_t (**)(__n128))(STACK[0x208] + 8 * ((227 * (a4 - (v11 & 0xFFFFFFF8) == -8)) ^ a5)))((__n128)xmmword_21E17F900);
}

void sub_21E0D812C()
{
  JUMPOUT(0x21E0D805CLL);
}

uint64_t sub_21E0D8134()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((11 * (v0 ^ 0x343) + 542) ^ v0 ^ 0xF38)
                                * (*(_DWORD *)(v2 - 220) == *(_DWORD *)(v2 - 224))) ^ v0)))();
}

uint64_t sub_21E0D8174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_BYTE *)(*(_QWORD *)(v14 - 216) + (a6 + v12)) = *(_BYTE *)(v9 + ((a6 + v12) & 0xFLL)) ^ *(_BYTE *)(v7 + (a6 + v12)) ^ *(_BYTE *)((((_BYTE)a6 + (_BYTE)v12) & 0xF) + v10 + 5) ^ *(_BYTE *)((((_BYTE)a6 + (_BYTE)v12) & 0xF) + v8 + 2) ^ (((a6 + v12) & 0xF) * (((a7 - 3) & 0xD9) + 69));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((846 * (a6 - 1 == v11)) ^ (a7 - 802))) - 4))();
}

uint64_t sub_21E0D81F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *(int8x16_t *)(v38 - 208) = veorq_s8(*(int8x16_t *)*(_QWORD *)(v36 + 16), (int8x16_t)xmmword_21E17FA00);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 + 8 * (int)(a5 ^ (51 * (v38 - 208 == *(_QWORD *)(v38 - 216))))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_21E0D8240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  BOOL v9;
  char v11;
  uint64_t (*v12)(void);

  v8 = *(_BYTE **)(v7 - 216);
  *(_BYTE *)(v7 - 144) = *v8;
  *(_BYTE *)(v7 - 143) = v8[1];
  *(_BYTE *)(v7 - 142) = v8[2];
  *(_BYTE *)(v7 - 141) = v8[3];
  *(_BYTE *)(v7 - 140) = v8[4];
  *(_BYTE *)(v7 - 139) = v8[5];
  *(_BYTE *)(v7 - 138) = v8[6];
  *(_BYTE *)(v7 - 137) = v8[7];
  *(_BYTE *)(v7 - 136) = v8[8];
  *(_BYTE *)(v7 - 135) = v8[9];
  *(_BYTE *)(v7 - 134) = v8[10];
  *(_BYTE *)(v7 - 133) = v8[11];
  *(_BYTE *)(v7 - 132) = v8[12];
  *(_BYTE *)(v7 - 131) = v8[13];
  *(_BYTE *)(v7 - 130) = v8[14];
  *(_BYTE *)(v7 - 129) = v8[15];
  if (v8)
    v9 = v7 == 144;
  else
    v9 = 1;
  v11 = v9 || *(_QWORD *)(v5 + 40) == 0x6C1F48F5F9B676A8;
  v12 = *(uint64_t (**)(void))(v6
                            + 8
                            * ((((((a5 ^ 0x30) + 28) ^ v11) & 1) == 0) | (2 * (((((a5 ^ 0x30) + 28) ^ v11) & 1) == 0)) | a5 ^ 0xB30));
  LODWORD(STACK[0x204]) = -42900;
  return v12();
}

uint64_t sub_21E0D8328()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  int v6;
  uint64_t (*v7)(void);

  if (*(_QWORD *)(v3 - 216))
    v4 = v3 == 208;
  else
    v4 = 1;
  v6 = v4 || *(_QWORD *)(v1 + 40) == 0x6C1F48F5F9B676A8;
  v7 = *(uint64_t (**)(void))(v2 + 8 * (((((v0 - 740) ^ v6) & 1) == 0) | (2 * ((((v0 - 740) ^ v6) & 1) == 0)) | v0));
  LODWORD(STACK[0x204]) = -42900;
  return v7();
}

uint64_t sub_21E0D8388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  unsigned int v49;
  _BOOL4 v51;
  uint64_t (*v52)(void);

  v49 = (v45 ^ v46 ^ 0x6F73D8F7) + (a45 & 0xDEE7BFBE);
  v51 = (((46 * (v47 ^ 0x701)) ^ 0x751) & (v49 + 1)) == 0 && v49 != 1869864927;
  v52 = *(uint64_t (**)(void))(v48 + 8 * ((3487 * v51) ^ v47));
  LODWORD(STACK[0x204]) = -42899;
  return v52();
}

#error "21E0DC538: call analysis failed (funcsize=4004)"

void sub_21E0DC53C()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 232) = LODWORD(STACK[0x21C]) ^ 0x16F4AA82;
  *(_DWORD *)(v0 - 224) = LODWORD(STACK[0x210]) ^ 0xA0863916;
  *(_DWORD *)(v0 - 228) = LODWORD(STACK[0x218]) ^ 0x5F49CB7E;
  *(_DWORD *)(v0 - 236) = LODWORD(STACK[0x214]) ^ 0x9ADE727A;
  JUMPOUT(0x21E0DAA2CLL);
}

uint64_t sub_21E0DC590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,int a46)
{
  int v46;
  uint64_t v47;

  return ((uint64_t (*)(void))(*(_QWORD *)(v47
                                        + 8
                                        * (v46 | (((2 * (a44 - (a46 & 0xE87BF764) + 2096634103)) & 0x75BFEDB2 ^ 0x603BE520)
                                                + ((a44 - (a46 & 0xE87BF764) + 2096634103) ^ 0xCEE20D6B)
                                                - 441847825 == 545908424)))
                            - 4))();
}

uint64_t sub_21E0DC64C(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((58 * (a1 + v2 - 987756249 < ((v1 - 486321658) & 0x1CFCADFD ^ 0x415u))) ^ v1)))();
}

uint64_t sub_21E0DC6CC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7
                                                      + 8
                                                      * ((((a6 + 1228683666) & 0x36C3C6FF ^ 0x494)
                                                        * ((a2 + a7 - 16) < 0xFFFFFFF0)) ^ a6))
                                          - 4))(a1);
}

uint64_t sub_21E0DC718(int a1, int a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _BOOL4 v22;
  int v24;

  v9 = (a1 + v6 + a2);
  v10 = *(_QWORD *)(v8 - 216);
  v11 = v10 + ((a3 - 110) ^ 0x440) + v9;
  v12 = ((_BYTE)a1 + (_BYTE)v6 + (_BYTE)a2) & 0xF;
  v13 = v12 - v9;
  v14 = v4 + v12 - v9;
  v15 = v12 + v4 + 1;
  v16 = v12 + 4;
  v17 = v5 + v12 + 4 - v9;
  v18 = v12 + v5 + 5;
  v19 = v13 + v3 + 3;
  v20 = v3 + v16;
  v22 = v15 > v10 && v14 < v11;
  v24 = v18 > v10 && v17 < v11 || v22;
  if (v20 > v10 && v19 < v11)
    v24 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((4 * (v24 ^ 1)) | (16 * (v24 ^ 1))) ^ a3)) - 8))();
}

uint64_t sub_21E0DC7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                       + 8
                                                                       * (int)((((((a7 + 672) | 0x20) ^ 0xFFFFF166)
                                                                               + ((a7 + 1766570562) & 0x96B446FF))
                                                                              * (v7 > 0xF)) ^ a7))
                                                           - 8))(a1, a2, 0);
}

uint64_t sub_21E0DC804(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16x4_t v20;
  int8x16x4_t v21;

  v20.val[1].i64[0] = ((_BYTE)v7 + 5) & 0xF;
  v20.val[1].i64[1] = ((_BYTE)v7 + 4) & 0xF;
  v20.val[2].i64[0] = ((_BYTE)v7 + 3) & 0xF;
  v20.val[2].i64[1] = ((_BYTE)v7 + 2) & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v7 + 1) & 0xF;
  v20.val[3].i64[1] = v7 & 0xF;
  v21.val[0].i64[0] = ((_BYTE)v7 - 1) & 0xF;
  v21.val[0].i64[1] = ((_BYTE)v7 + 14) & 0xF;
  v12 = *(_QWORD *)(v11 - 216) - 15;
  v21.val[1].i64[0] = (v7 + 13) & 0xF;
  v21.val[1].i64[1] = (v7 + 12) & 0xF;
  v21.val[2].i64[0] = (v7 + 11) & 0xF;
  v21.val[2].i64[1] = ((_BYTE)v7 + 10) & 0xF;
  v21.val[3].i64[0] = ((_BYTE)v7 + 9) & 0xF;
  v21.val[3].i64[1] = ((_BYTE)v7 + 8) & 0xF;
  v13 = a1 + v9 + a2;
  v14.i64[0] = 0xF9F9F9F9F9F9F9F9;
  v14.i64[1] = 0xF9F9F9F9F9F9F9F9;
  v15.i64[0] = 0x3232323232323232;
  v15.i64[1] = 0x3232323232323232;
  v20.val[0].i64[0] = v13 & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v7 + 6) & 0xF;
  v16.i64[0] = vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v16.i64[1] = vqtbl4q_s8(v21, (int8x16_t)xmmword_21E17F8F0).u64[0];
  v17 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v12 + v13), *(int8x16_t *)(v5 + v20.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v20.val[0].i64[0] + v6 - 11), *(int8x16_t *)(v20.val[0].i64[0] + v4 - 12))));
  v18 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v17, v17, 8uLL), v15), vmulq_s8(v16, v14)));
  *(int8x16_t *)(v12 + v13) = vextq_s8(v18, v18, 8uLL);
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((v8 & 0xFFFFFFF0) == 16) * ((a4 - 1143) ^ 0x31B)) ^ a4)) - 4))();
}

void sub_21E0DC964()
{
  JUMPOUT(0x21E0DC8DCLL);
}

uint64_t sub_21E0DC970(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v3 == a3) ^ (v4 + 1)) & 1) * (((v4 + 14) | 0xA3) + 841)) ^ v4))
                            - 8))();
}

uint64_t sub_21E0DC9A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  char v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                                + 8
                                                                                * ((282
                                                                                  * ((((v8 & 8) == 0) ^ (a7 + 72)) & 1)) ^ a7))
                                                                    - ((a7 + 1253261752) & 0xB54CBDD9)
                                                                    + 1081))(a1, a2, a3, (v7 - a3));
}

uint64_t sub_21E0DC9F4(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  char v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  int8x16x4_t v20;

  *(_DWORD *)(v14 - 224) = v10;
  *(_DWORD *)(v14 - 220) = v13;
  v15 = *(_QWORD *)(v14 - 216) - 7;
  *(_DWORD *)(v14 - 228) = v10 & 0xFFFFFFF8;
  v16 = -a3;
  v17 = a1 + v12;
  v18 = (v17 + a2 + v16);
  v20.val[0].i64[0] = ((_BYTE)v17 + (_BYTE)a2 + (_BYTE)v16) & 0xF;
  v20.val[0].i64[1] = (v11 + (_BYTE)v17 + 6 + (_BYTE)v16) & 0xF;
  v20.val[1].i64[0] = (v11 + (_BYTE)v17 + 5 + (_BYTE)v16) & 0xF;
  v20.val[1].i64[1] = (v9 + (_BYTE)v16 + (((_BYTE)a6 + 0x80) & 0xAB ^ 7)) & 0xF;
  v20.val[2].i64[0] = (v11 + (_BYTE)v17 + 3 + (_BYTE)v16) & 0xF;
  v20.val[2].i64[1] = (v11 + (_BYTE)v17 + 2 + (_BYTE)v16) & 0xF;
  v20.val[3].i64[0] = (v11 + (_BYTE)v17 + 1 + (_BYTE)v16) & 0xF;
  v20.val[3].i64[1] = (v9 + (_BYTE)v16) & 0xF;
  *(int8x8_t *)(v15 + v18) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v15 + v18), *(int8x8_t *)(v7 + (v18 & 0xF) - 7)), veor_s8(*(int8x8_t *)((v18 & 0xF) + v8 - 3), *(int8x8_t *)((v18 & 0xF) + v6 - 4)))), (int8x8_t)0x3232323232323232), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v20, (int8x16_t)xmmword_21E17F900), (int8x8_t)0xF9F9F9F9F9F9F9F9)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(STACK[0x208]
                                                     + 8 * ((3207 * (8 - (v10 & 0xFFFFFFF8) == v16)) ^ a6))
                                         - 12))((__n128)xmmword_21E17F900);
}

void sub_21E0DCB38()
{
  JUMPOUT(0x21E0DCA64);
}

uint64_t sub_21E0DCB40(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((a1 - 960247392) & 0x393C367D ^ 0xE07) + ((a1 - 610237534) & 0x245F7C7B))
                                * (*(_DWORD *)(v2 - 224) == *(_DWORD *)(v2 - 228))) ^ a1)))();
}

uint64_t sub_21E0DCB9C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a4 - 545908425);
  *(_BYTE *)(*(_QWORD *)(v10 - 216) + v11) ^= *(_BYTE *)(v7 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v8 + 4) ^ *(_BYTE *)((v11 & 0xF) + v6 + 3) ^ (-7 * (v11 & 0xF)) ^ 0x32;
  return (*(uint64_t (**)(void))(v9 + 8 * ((3021 * (a4 - 1 == v5)) ^ (a5 - 728))))();
}

void sub_21E0DCC0C()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 749434274)
    v1 = 939001227;
  else
    v1 = -939041197;
  *(_DWORD *)(v2 + 24) = v1;
}

void sub_21E0DCC70(_DWORD *a1)
{
  unsigned int v1;
  int v2;

  v1 = 1292559617 * (((a1 | 0xCFAF1A7C) - (a1 & 0xCFAF1A7C)) ^ 0x68FC7215);
  v2 = *a1 ^ v1;
  __asm { BR              X14 }
}

uint64_t sub_21E0DCD44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  _DWORD v8[2];
  uint64_t v9;

  v5 = v2 - ((((v3 - 221) ^ 0xDF3B7A54) + v4) & 0x881F1042) - 1280491160;
  v6 = 1328090399 * (((v8 | 0xAFA0ACE7) + (~v8 | 0x505F5318)) ^ 0x5073C8DC);
  v9 = v1;
  v8[0] = v5 ^ v6;
  v8[1] = v6 + v3 - 1521;
  return ((uint64_t (*)(_DWORD *))(*(_QWORD *)(a1 + 8 * (v3 ^ 0xBAD)) - 12))(v8);
}

void sub_21E0DCE9C(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v4;

  if (*(_QWORD *)(a1 + 24))
    v2 = *(_QWORD *)a1 == 0xB4770752010985CLL;
  else
    v2 = 1;
  v4 = v2 || *(_QWORD *)(a1 + 16) == 0x2A752CF9B62C38AELL;
  v1 = *(_DWORD *)(a1 + 12) - 1328090399 * ((((2 * a1) | 0xEBBB7AA8) - a1 + 170017452) ^ 0xA0ED96E);
  __asm { BR              X10 }
}

uint64_t sub_21E0DCF90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, int a10, uint64_t a11, int a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  _DWORD *v17;
  int v18;
  unsigned int v19;
  uint64_t v20;

  v17 = (_DWORD *)(v12 - 0xB4770752010985CLL);
  *(_DWORD *)(v12 - 0xB4770752010985CLL) = 849310553;
  a11 = v14;
  a9 = v15
     - 1119051499
     + 1866394843 * ((&a9 & 0x7F2AB59B | ~(&a9 | 0x7F2AB59B)) ^ 0x6AC27D90);
  sub_21E0DD8C0((uint64_t)&a9);
  *(_DWORD *)(v13 - 0x2A752CF9B62C38AALL) = a10;
  *v17 += 4;
  a9 = v15
     - 1119051499
     + 1866394843 * ((&a9 & 0xAB498ACE | ~(&a9 | 0xAB498ACE)) ^ 0xBEA142C5);
  a11 = v14 + 4;
  sub_21E0DD8C0((uint64_t)&a9);
  v18 = a10;
  *v17 += 4;
  v19 = 1438293641 * (((&a9 | 0xBA55A497) + (~&a9 | 0x45AA5B68)) ^ 0x292F1E9);
  a9 = (v18 ^ 0xBC1C1B21) - v19;
  a10 = (v15 + 612) ^ v19;
  a11 = v13 + 0x2EF9A644C86BCD16;
  v20 = sub_21E083F98((uint64_t)&a9);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * (((a12 == 939001227) * (v15 ^ 0x44B)) ^ v15)) - 12))(v20);
}

uint64_t sub_21E0DD118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, int a12)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  uint64_t v18;

  v17 = 1990461019 * ((-1758987483 - (&a9 | 0x9727FB25) + (&a9 | 0x68D804DA)) ^ 0x473CA653);
  a12 = v17 + v12 - 28;
  a10 = v17 + 450495144;
  a11 = v15;
  v18 = (*(uint64_t (**)(int *))(v14 + 8 * (v12 - 589)))(&a9);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((2378 * (a9 == v16)) ^ v12))
                                          - (((v12 - 179) | 0x80u) ^ 0x286)))(v18);
}

void sub_21E0DD1C0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  _DWORD *v3;
  int v4;

  *(_BYTE *)(v1 - 0x2A752CF9B62C38A6) = v2[8];
  *v3 = (v4 ^ 0x37) + *v3 - 649;
  *(_BYTE *)(v1 - 0x2A752CF9B62C38A5) = v2[9];
  ++*v3;
  *(_BYTE *)(v1 - 0x2A752CF9B62C38A4) = v2[10];
  ++*v3;
  *(_BYTE *)(v1 - 0x2A752CF9B62C38A3) = v2[11];
  ++*v3;
  *(_DWORD *)(v0 + 8) = 939001227;
}

uint64_t sub_21E0DD2A8(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v1 = 1990461019 * (((a1 | 0x514A27EE) - (a1 & 0x514A27EE)) ^ 0x7EAE8567);
  v2 = *(_DWORD *)(a1 + 20);
  v3 = *(_DWORD *)(a1 + 16) - v1;
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = 1503746353 * (&v8 ^ 0x2661C2B6);
  v11 = v3 - v6 - 1298781335;
  v8 = v1 + v2 + v6 - 882372346;
  v9 = v5;
  v10 = v4;
  return ((uint64_t (*)(int *))((char *)*(&off_24E21C7C0 + (v3 ^ 0x4D69D96D)) - 8))(&v8);
}

uint64_t sub_21E0DD39C(uint64_t result)
{
  int v1;
  int v3;

  v1 = (*(_BYTE *)(result + 8) - -83 * (result ^ 0xA0));
  if (v1 == 65 || v1 == 62)
    v3 = 939001227;
  else
    v3 = -939041308;
  *(_DWORD *)(result + 4) = v3;
  return result;
}

uint64_t *sub_21E0DD3DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)a1;
  v4 = (1328090399 * ((((2 * &v3) | 0xE499C828) - &v3 - 1917641748) ^ 0x8D9F802E)) ^ (*(_DWORD *)(a1 + 8) + 1438293641 * (a1 ^ 0xB8C7557F) + 816661015);
  v3 = v1;
  return sub_21E0DD598(&v3);
}

void sub_21E0DD498(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *a1 ^ (1948972247 * ((2 * (a1 & 0x2F94EC30) - (_DWORD)a1 + 1349194703) ^ 0xE5F5E621));
  v2 = *(_QWORD *)((char *)*(&off_24E21C7C0 + (int)(v1 & 0xC1102CA6)) - 4);
  v3 = v1
     - 1328090399
     * ((((2 * (&v3 ^ 0x4E435F68)) | 0xD441B032) - (&v3 ^ 0x4E435F68) - 1780537369) ^ 0xDBB0E34B)
     - 1017760155;
  v4 = v2;
  sub_21E0A1728((uint64_t)&v3);
}

uint64_t *sub_21E0DD598(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)(v1 - 0x195CA6660D034740) = 0xFBDC740BB9F3DCDCLL;
  *(_QWORD *)(v1 - 0x195CA6660D034738) = 0x5190721660F77F86;
  *(_QWORD *)(v1 - 0x195CA6660D034730) = 0x7F1F47D07F1F47DLL;
  return result;
}

uint64_t sub_21E0DD60C(uint64_t result)
{
  unint64_t v1;
  _DWORD *v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  _BOOL4 v6;
  int v7;
  int v8;

  v1 = 1328090399 * ((2 * (result & 0x58B74E4A150132C1) - result + 0x2748B1B5EAFECD3ELL) ^ 0xFE573689152DA904);
  v2 = (_DWORD *)(result + 8);
  v3 = *(_QWORD *)(result + 24) - v1;
  v4 = *(_QWORD *)(result + 40) ^ v1;
  v5 = v4 >= v3;
  v6 = (uint64_t)v4 < (uint64_t)v3;
  v7 = !v5;
  if (((*(_DWORD *)(result + 32) + 1328090399 * ((2 * (result & 0x150132C1) - (_DWORD)result - 352400066) ^ 0x152DA904)) & 1) != 0)
    v8 = v6;
  else
    v8 = v7;
  if (!v8)
    v2 = (_DWORD *)result;
  *(_DWORD *)(result + 12) = *(_DWORD *)(result + 16) ^ (1328090399
                                                       * ((2 * (result & 0x150132C1) - result - 352400066) ^ 0x152DA904)) ^ (*v2 + 1328090399 * ((2 * (result & 0x150132C1) - result - 352400066) ^ 0x152DA904));
  return result;
}

uint64_t sub_21E0DD6B0(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t result;
  _QWORD v11[2];
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = 1734664879 * ((2 * (a1 & 0x5C09438B) - a1 - 1544110988) ^ 0x8C2D946E);
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = -192827299 * (*(_DWORD *)(a1 + 24) - v2) + 1937692874;
  v8 = 1990461019 * ((2 * (v11 & 0x46F57180) - v11 - 1190490500) ^ 0x96EE2CF5);
  v9 = *(_DWORD *)(a1 + 32) + 1652554731 + v2;
  v12 = v9 - v8 + 2063;
  v13 = ((v7 ^ 0xF7BFAFFE) + 1534120800 + ((2 * v7) & 0xEF7F5FFC)) ^ v8;
  v11[0] = v4;
  v11[1] = v5;
  v14 = v6;
  v15 = v3;
  result = ((uint64_t (*)(_QWORD *))((char *)*(&off_24E21C7C0 + v9) - 8))(v11);
  *(_DWORD *)(a1 + 28) = v16;
  return result;
}

uint64_t sub_21E0DD80C(uint64_t result)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(result + 12) ^ (1328090399 * ((result & 0x601195F2 | ~(result | 0x601195F2)) ^ 0x603D0E37));
  v2 = *(_QWORD *)result;
  *(_BYTE *)(v2 - 0x452F444F57B2EFF4) = HIBYTE(v1) ^ 0xE6;
  *(_BYTE *)(v2 - 0x452F444F57B2EFF3) = BYTE2(v1) ^ 0x6B;
  *(_BYTE *)(v2 - 0x452F444F57B2EFF2) = BYTE1(v1) ^ 0xF3;
  *(_BYTE *)(v2 - 0x452F444F57B2EFF1) = v1 ^ 0x5F;
  return result;
}

uint64_t sub_21E0DD8C0(uint64_t result)
{
  unsigned __int8 *v1;
  int v2;

  v1 = *(unsigned __int8 **)(result + 8);
  v2 = (v1[3] << 24) | (v1[2] << 16) | (v1[1] << 8);
  *(_DWORD *)(result + 4) = (v2 | *v1) - 2 * ((v2 | *v1) & 0x3512E7F ^ *v1 & 2) + 55651965;
  return result;
}

uint64_t wmhYOjgJkR()
{
  return 2;
}

uint64_t sub_21E0DD914(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 - 0x4063EA0FFD2E1A9) = 102;
  *(_DWORD *)(a1 - 0x4063EA0FFD2E1B9) = *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL);
  *(_QWORD *)(a1 - 0x4063EA0FFD2E1B1) = *(_QWORD *)(a2 - 0x593A0D77ED43FF8BLL);
  return 0;
}

uint64_t sub_21E0DD984(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;
  int v12;

  v1 = 1292559617 * ((result - 2 * (result & 0xA680B104F4E3B206) - 0x597F4EFB0B1C4DFALL) ^ 0x7F1A8C7C53B0DA6FLL);
  v2 = *(_QWORD *)(result + 32) - v1;
  v3 = *(_DWORD *)(result + 40) + v1;
  v4 = *(_DWORD *)(result + 28) ^ v1;
  v5 = *(_DWORD *)(result + 8) + v1;
  v6 = *(_QWORD *)(result + 16) + v1;
  v7 = *(_DWORD *)(result + 24) ^ v1;
  v8 = v2 > v6;
  v9 = v2 == v6;
  v10 = v8;
  if ((v7 & 1) != 0)
    v11 = v10;
  else
    v11 = v9;
  if (v11)
    v12 = v3;
  else
    v12 = v4;
  *(_DWORD *)result = v12 ^ v5;
  return result;
}

uint64_t sub_21E0DDA14(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v2 = 1328090399 * ((a1 & 0xA566FC58 | ~(a1 | 0xA566FC58)) ^ 0xA54A679D);
  v3 = *(_DWORD *)a1 ^ v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_DWORD *)(a1 + 4) + v2 - ((2 * (*(_DWORD *)(a1 + 4) + v2) + 241264988) & 0x6B9DAC9A);
  v6 = 1990461019 * ((&v9 + 377671751 - 2 * ((unint64_t)&v9 & 0x1682D047)) ^ 0x396672CE);
  v7 = (*(_DWORD *)(a1 + 12) ^ v2) - 853640948;
  v9 = *(_QWORD *)(a1 + 24);
  v10 = v6 ^ v7;
  v12 = v4;
  v13 = v5 + v6 - 50361605;
  v14 = v6 ^ (v3 + 1653802680);
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_24E21C7C0 + (int)(v3 ^ 0x9D6D016B)) - 12))(&v9);
  *(_DWORD *)(a1 + 8) = v11;
  return result;
}

void sub_21E0DDB70()
{
  unint64_t v0;
  _BYTE v1[8];
  unsigned int v2;
  char v3;
  char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v0 = (unint64_t)&v1[qword_2553B61C8 - qword_2553B61D8];
  qword_2553B61D8 = 1056581677 * v0 - 0x3872BA1B2E0615B6;
  qword_2553B61C8 = 1056581677 * (v0 ^ 0x3F506021E86BC7B2);
  LOBYTE(v0) = 45 * ((qword_2553B61C8 + 45 * v0 + 74) ^ 0xB2);
  v4 = (char *)*(&off_24E21C7C0
               + (v0 ^ byte_21E1B1320[byte_21E1A51C0[v0] ^ 0xB3])
               + 67)
     - 4;
  v2 = 751 - 1990461019 * (((&v2 | 0x9D9722C4) - (&v2 & 0x9D9722C4)) ^ 0xB273804D);
  sub_21E06A020(&v2);
  v4 = (char *)*(&off_24E21C7C0
               + ((45 * ((qword_2553B61C8 + qword_2553B61D8) ^ 0xB2)) ^ byte_21E18C950[byte_21E1B1220[(45 * ((qword_2553B61C8 + qword_2553B61D8) ^ 0xB2))] ^ 2])
               + 79)
     - 4;
  v2 = 751
     - 1990461019 * ((((&v2 | 0x222D00F6) ^ 0xFFFFFFFE) - (~&v2 | 0xDDD2FF09)) ^ 0xF2365D80);
  sub_21E06A020(&v2);
  v3 = 49 * (((&v2 | 0x22) - (&v2 | 0xDD) - 35) ^ 0x94) + 89;
  v2 = 1221
     - 1503746353 * (((&v2 | 0xCF143B22) - (&v2 | 0x30EBC4DD) + 820757725) ^ 0xE975F994);
  sub_21E0C99CC((uint64_t)&v2);
}

uint64_t sub_21E0DDD9C(uint64_t a1)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  uint64_t result;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  int v89;
  int v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  unsigned int v108;
  uint64_t v109;

  v109 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_DWORD **)(a1 + 16);
  v93 = (*v2 ^ 0x6EB7FFFF) - 100907010 + ((2 * *v2) & 0xDD6FFFFE);
  v94 = (v2[1] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[1]) & 0xDD6FFFFE);
  v95 = (v2[2] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[2]) & 0xDD6FFFFE);
  v96 = (v2[3] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[3]) & 0xDD6FFFFE);
  v97 = (v2[4] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[4]) & 0xDD6FFFFE);
  v98 = (v2[5] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[5]) & 0xDD6FFFFE);
  v99 = (v2[6] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[6]) & 0xDD6FFFFE);
  v100 = (v2[7] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[7]) & 0xDD6FFFFE);
  v101 = (v2[8] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[8]) & 0xDD6FFFFE);
  v102 = (v2[9] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[9]) & 0xDD6FFFFE);
  v103 = (v2[10] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[10]) & 0xDD6FFFFE);
  v104 = (v2[11] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[11]) & 0xDD6FFFFE);
  v105 = (v2[12] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[12]) & 0xDD6FFFFE);
  v106 = (v2[13] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[13]) & 0xDD6FFFFE);
  v107 = (v2[14] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[14]) & 0xDD6FFFFE);
  v108 = (v2[15] ^ 0x6EB7FFFF) - 100907010 + ((2 * v2[15]) & 0xDD6FFFFE);
  v92 = v1;
  v3 = *(_DWORD *)(v1 - 0x240ADDD1281D1260);
  v4 = *(_DWORD *)(v1 - 0x240ADDD1281D125CLL);
  v5 = *(_DWORD *)(v1 - 0x240ADDD1281D1258);
  v6 = v93;
  HIDWORD(v7) = *(_DWORD *)(v1 - 0x240ADDD1281D1264) + v93 + 1857444987 + (v4 & v3 | v5 & ~v3);
  LODWORD(v7) = HIDWORD(v7);
  v8 = (v7 >> 25) + v3 - ((2 * ((v7 >> 25) + v3)) & 0xE7D59C48) + 1944768036;
  HIDWORD(v7) = v5 + v94 - 2146209959 + (v3 & (v8 ^ 0x73EACE24) | v4 & ~(v8 ^ 0x73EACE24));
  LODWORD(v7) = HIDWORD(v7);
  v9 = (v7 >> 20) + (v8 ^ 0x73EACE24) - ((2 * ((v7 >> 20) + (v8 ^ 0x73EACE24))) & 0x902A4FD4) - 938137622;
  HIDWORD(v7) = v4 + v95 - 1150539554 + ((v9 ^ 0xC81527EA) & (v8 ^ (v3 - ((2 * v3) & 0xE7D59C48) + 1944768036)) ^ v3);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 15) + (v9 ^ 0xC81527EA) - ((2 * ((v7 >> 15) + (v9 ^ 0xC81527EA))) & 0xC4D94E0A) - 496195835;
  v10 = v1 ^ 0xE26CA705;
  HIDWORD(v7) = v3
              + v96
              + 1493796593
              + ((((v1 ^ 0xE26CA705) & (v8 ^ 0xBBFFE9CE ^ v9))
                - ((2 * ((v1 ^ 0xE26CA705) & (v8 ^ 0xBBFFE9CE ^ v9))) & 0xE7D59C48)
                + 1944768036) ^ v8);
  LODWORD(v7) = HIDWORD(v7);
  v11 = (v7 >> 10) + (v1 ^ 0xE26CA705) - ((2 * ((v7 >> 10) + (v1 ^ 0xE26CA705))) & 0x36CA8E02) + 459622145;
  HIDWORD(v7) = v97
              + (v8 ^ 0x73EACE24)
              - 1933064270
              + ((((v11 ^ 0x1B654701) & (v9 ^ 0x2A7980EF ^ v1))
                - ((2 * ((v11 ^ 0x1B654701) & (v9 ^ 0x2A7980EF ^ v1))) & 0x902A4FD4)
                - 938137622) ^ v9);
  LODWORD(v7) = HIDWORD(v7);
  v12 = (v7 >> 25) + (v11 ^ 0x1B654701) - ((2 * ((v7 >> 25) + (v11 ^ 0x1B654701))) & 0x786EFA6E) + 1010269495;
  LODWORD(v2) = v12 ^ 0x3C377D37;
  HIDWORD(v7) = v98
              + (v9 ^ 0xC81527EA)
              - 556564947
              + ((((v12 ^ 0x3C377D37) & (v1 ^ 0xF909E004 ^ v11))
                - ((2 * ((v12 ^ 0x3C377D37) & (v1 ^ 0xF909E004 ^ v11))) & 0xC4D94E0A)
                - 496195835) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 20) + (v12 ^ 0x3C377D37) - ((2 * ((v7 >> 20) + (v12 ^ 0x3C377D37))) & 0x59F8B160) + 754735280;
  v13 = v1 ^ 0x2CFC58B0;
  HIDWORD(v7) = v99
              + v10
              + 1065090582
              + ((((v1 ^ 0x2CFC58B0) & (v11 ^ 0x27523A36 ^ v12))
                - ((2 * ((v1 ^ 0x2CFC58B0) & (v11 ^ 0x27523A36 ^ v12))) & 0x36CA8E02)
                + 459622145) ^ v11);
  LODWORD(v7) = HIDWORD(v7);
  v14 = (v7 >> 15) + (v1 ^ 0x2CFC58B0) - ((2 * ((v7 >> 15) + (v1 ^ 0x2CFC58B0))) & 0x8F1AB4A4) + 1200446034;
  HIDWORD(v7) = v100
              + (v11 ^ 0x1B654701)
              - 1802351356
              + ((((v14 ^ 0x478D5A52) & (v12 ^ 0x10CB2587 ^ v1))
                - ((2 * ((v14 ^ 0x478D5A52) & (v12 ^ 0x10CB2587 ^ v1))) & 0x786EFA6E)
                + 1010269495) ^ v12);
  LODWORD(v7) = HIDWORD(v7);
  v15 = (v7 >> 10) + (v14 ^ 0x478D5A52) - ((2 * ((v7 >> 10) + (v14 ^ 0x478D5A52))) & 0x2F15A634) + 394973978;
  v16 = v15 ^ 0x178AD31A;
  HIDWORD(v7) = v101
              + (_DWORD)v2
              + 13390043
              + ((((v15 ^ 0x178AD31A) & (v1 ^ 0x6B7102E2 ^ v14))
                - ((2 * ((v15 ^ 0x178AD31A) & (v1 ^ 0x6B7102E2 ^ v14))) & 0x59F8B160)
                + 754735280) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 25) + (v15 ^ 0x178AD31A) - ((2 * ((v7 >> 25) + (v15 ^ 0x178AD31A))) & 0xB468442E) + 1513366039;
  v17 = v1 ^ 0x5A342217;
  HIDWORD(v7) = v102
              + v13
              + 579907506
              + ((((v1 ^ 0x5A342217) & (v14 ^ 0x50078948 ^ v15))
                + 1200446034
                + (~(2 * ((v1 ^ 0x5A342217) & (v14 ^ 0x50078948 ^ v15))) | 0x70E54B5B)
                + 1) ^ v14);
  LODWORD(v7) = HIDWORD(v7);
  v18 = (v7 >> 20) + (v1 ^ 0x5A342217) - ((2 * ((v7 >> 20) + (v1 ^ 0x5A342217))) & 0x7CE3CA40) + 1047651616;
  v19 = v18 ^ 0x3E71E520;
  HIDWORD(v7) = v103
              + (v14 ^ 0x478D5A52)
              - 1756687436
              + ((((v18 ^ 0x3E71E520) & (v15 ^ 0x4DBEF10D ^ v1))
                - ((2 * ((v18 ^ 0x3E71E520) & (v15 ^ 0x4DBEF10D ^ v1))) & 0x2F15A634)
                + 394973978) ^ v15);
  LODWORD(v7) = HIDWORD(v7);
  v20 = (v7 >> 15) + (v18 ^ 0x3E71E520) - ((2 * ((v7 >> 15) + (v18 ^ 0x3E71E520))) & 0x9707B292) + 1266932041;
  v21 = v20 ^ 0x4B83D949;
  HIDWORD(v7) = v104
              + v16
              + 547917761
              + ((((v20 ^ 0x4B83D949) & (v1 ^ 0x6445C737 ^ v18))
                - ((2 * ((v20 ^ 0x4B83D949) & (v1 ^ 0x6445C737 ^ v18))) & 0xB468442E)
                + 1513366039) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 10) + (v20 ^ 0x4B83D949) - ((2 * ((v7 >> 10) + (v20 ^ 0x4B83D949))) & 0xDD66C42E) + 1857249815;
  v22 = v1 ^ 0x6EB36217;
  HIDWORD(v7) = v105
              + v17
              + 47958309
              + ((((v1 ^ 0x6EB36217) & (v18 ^ 0x75F23C69 ^ v20))
                - ((2 * ((v1 ^ 0x6EB36217) & (v18 ^ 0x75F23C69 ^ v20))) & 0x7CE3CA40)
                + 1047651616) ^ v18);
  LODWORD(v7) = HIDWORD(v7);
  v23 = (v7 >> 25) + (v1 ^ 0x6EB36217) - ((2 * ((v7 >> 25) + (v1 ^ 0x6EB36217))) & 0x4D3E3780) + 647961536;
  HIDWORD(v7) = v106
              + v19
              - 1796986474
              + ((((v23 ^ 0x269F1BC0) & (v20 ^ 0x2530BB5E ^ v1))
                - ((2 * ((v23 ^ 0x269F1BC0) & (v20 ^ 0x2530BB5E ^ v1))) & 0x9707B292)
                + 1266932041) ^ v20);
  LODWORD(v7) = HIDWORD(v7);
  v24 = (v7 >> 20) + (v23 ^ 0x269F1BC0) - ((2 * ((v7 >> 20) + (v23 ^ 0x269F1BC0))) & 0xEDDEC2D2) - 152084119;
  v25 = v24 ^ 0xF6EF6169;
  HIDWORD(v7) = v107
              + v21
              + 1036319633
              + ((((v24 ^ 0xF6EF6169) & (v1 ^ 0x482C79D7 ^ v23))
                - ((2 * ((v24 ^ 0xF6EF6169) & (v1 ^ 0x482C79D7 ^ v23))) & 0xDD66C42E)
                + 1857249815) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v1) = (v7 >> 15) + (v24 ^ 0xF6EF6169) - ((2 * ((v7 >> 15) + (v24 ^ 0xF6EF6169))) & 0x2AA7171E) - 1789686897;
  v26 = v1 ^ 0x95538B8F;
  HIDWORD(v7) = v108
              + v22
              - 520110044
              + ((((v1 ^ 0x95538B8F) & (v23 ^ 0xD0707AA9 ^ v24))
                - ((2 * ((v1 ^ 0x95538B8F) & (v23 ^ 0xD0707AA9 ^ v24))) & 0x4D3E3780)
                + 647961536) ^ v23);
  LODWORD(v7) = HIDWORD(v7);
  v27 = (v7 >> 10) + (v1 ^ 0x95538B8F) - ((2 * ((v7 >> 10) + (v1 ^ 0x95538B8F))) & 0xF50A074E) - 91946073;
  HIDWORD(v7) = v94
              + (v23 ^ 0x269F1BC0)
              - 1922441883
              + ((((v1 ^ 0x6FD68828 ^ v27) & v25) - ((2 * ((v1 ^ 0x6FD68828 ^ v27) & v25)) & 0x2AA7171E) - 1789686897) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v28 = v27 ^ 0xFA8503A7;
  LODWORD(v1) = (v7 >> 27) + (v27 ^ 0xFA8503A7) - ((2 * ((v7 >> 27) + (v27 ^ 0xFA8503A7))) & 0x636D9196) + 834062539;
  HIDWORD(v7) = v99
              + v25
              + 1468820291
              + ((((v27 ^ 0xCB33CB6C ^ v1) & v26) - ((2 * ((v27 ^ 0xCB33CB6C ^ v1) & v26)) & 0xF50A074E) - 91946073) ^ v27);
  LODWORD(v7) = HIDWORD(v7);
  v29 = v1 ^ 0x31B6C8CB;
  v30 = (v7 >> 23) + (v1 ^ 0x31B6C8CB) - 1557270794 + (~(2 * ((v7 >> 23) + (v1 ^ 0x31B6C8CB))) | 0xB9A42213) + 1;
  HIDWORD(v7) = v104
              + v26
              - 1112927660
              + ((((v1 ^ 0x929B263D ^ v30) & v28) - ((2 * ((v1 ^ 0x929B263D ^ v30) & v28)) & 0x636D9196) + 834062539) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v31 = v30 ^ 0xA32DEEF6;
  LODWORD(v1) = (v7 >> 18)
              + (v30 ^ 0xA32DEEF6)
              + 331113759
              + (~(2 * ((v7 >> 18) + (v30 ^ 0xA32DEEF6))) | 0xD88735C1)
              + 1;
  HIDWORD(v7) = v93
              + v28
              - 2130542675
              + ((((v30 ^ 0xB0918BE9 ^ v1) & v29) - ((2 * ((v30 ^ 0xB0918BE9 ^ v1) & v29)) & 0x465BDDEC) - 1557270794) ^ v30);
  LODWORD(v7) = HIDWORD(v7);
  v32 = v1 ^ 0x13BC651F;
  v33 = (v7 >> 12) + (v1 ^ 0x13BC651F) - ((2 * ((v7 >> 12) + (v1 ^ 0x13BC651F))) & 0xA2E7397E) + 1366531263;
  HIDWORD(v7) = v98
              + v29
              + 1836763232
              + ((((v1 ^ 0x42CFF9A0 ^ v33) & v31) - ((2 * ((v1 ^ 0x42CFF9A0 ^ v33) & v31)) & 0x2778CA3E) + 331113759) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v2) = v33 ^ 0x51739CBF;
  LODWORD(v1) = (v7 >> 27) + (v33 ^ 0x51739CBF) - ((2 * ((v7 >> 27) + (v33 ^ 0x51739CBF))) & 0x6A515218) - 1255626484;
  HIDWORD(v7) = v103
              + v31
              - 1718629290
              + ((((v33 ^ 0xE45B35B3 ^ v1) & v32)
                + 1366531263
                + (~(2 * ((v33 ^ 0xE45B35B3 ^ v1) & v32)) | 0x5D18C681)
                + 1) ^ v33);
  LODWORD(v7) = HIDWORD(v7);
  v34 = v1 ^ 0xB528A90C;
  v35 = (v7 >> 23) + (v1 ^ 0xB528A90C) - ((2 * ((v7 >> 23) + (v1 ^ 0xB528A90C))) & 0xD6196E8) + 112249716;
  HIDWORD(v7) = v108
              + v32
              + 1877843588
              + ((((v1 ^ 0xB3986278 ^ v35) & v2)
                - ((2 * ((v1 ^ 0xB3986278 ^ v35) & v2)) & 0x6A515218)
                - 1255626484) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v36 = v35 ^ 0x6B0CB74;
  LODWORD(v1) = (v7 >> 18) + (v35 ^ 0x6B0CB74) - ((2 * ((v7 >> 18) + (v35 ^ 0x6B0CB74))) & 0x9B29F32) + 81350553;
  HIDWORD(v7) = v97
              + (_DWORD)v2
              + 2132784075
              + ((((v35 ^ 0x26984ED ^ v1) & v34) - ((2 * ((v35 ^ 0x26984ED ^ v1) & v34)) & 0xD6196E8) + 112249716) ^ v35);
  LODWORD(v7) = HIDWORD(v7);
  v37 = v1 ^ 0x4D94F99;
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0x4D94F99) - ((2 * ((v7 >> 12) + (v1 ^ 0x4D94F99))) & 0x2A35C980) - 1793399616;
  HIDWORD(v7) = v102
              + v34
              - 1188198935
              + ((((v1 ^ 0x91C3AB59 ^ v2) & v36)
                - ((2 * ((v1 ^ 0x91C3AB59 ^ v2) & v36)) & 0x9B29F32)
                + 81350553) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v38 = v2 ^ 0x951AE4C0;
  LODWORD(v1) = (v7 >> 27)
              + (v2 ^ 0x951AE4C0)
              - ((2 * ((v7 >> 27) + (v2 ^ 0x951AE4C0))) & 0x854EAB86)
              + 1118262723;
  HIDWORD(v7) = v107
              + v36
              + 1518518233
              + ((((v2 ^ 0xD7BDB103 ^ v1) & v37)
                - ((2 * ((v2 ^ 0xD7BDB103 ^ v1) & v37)) & 0x2A35C980)
                - 1793399616) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  v39 = v1 ^ 0x42A755C3;
  LODWORD(v2) = (v7 >> 23) + (v1 ^ 0x42A755C3) - ((2 * ((v7 >> 23) + (v1 ^ 0x42A755C3))) & 0xC77A6B4C) - 474139226;
  HIDWORD(v7) = v96
              + v37
              - 1944009334
              + ((((v1 ^ 0xA11A6065 ^ v2) & v38)
                - ((2 * ((v1 ^ 0xA11A6065 ^ v2) & v38)) & 0x854EAB86)
                + 1118262723) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v40 = v2 ^ 0xE3BD35A6;
  LODWORD(v1) = (v7 >> 18)
              + (v2 ^ 0xE3BD35A6)
              - ((2 * ((v7 >> 18) + (v2 ^ 0xE3BD35A6))) & 0x92901DD2)
              - 918024471;
  HIDWORD(v7) = v101
              + v38
              - 593113872
              + ((((v2 ^ 0x2AF53B4F ^ v1) & v39)
                - ((2 * ((v2 ^ 0x2AF53B4F ^ v1) & v39)) & 0xC77A6B4C)
                - 474139226) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v2) = (v7 >> 12) + (v1 ^ 0xC9480EE9) - ((2 * ((v7 >> 12) + (v1 ^ 0xC9480EE9))) & 0xF030E48A) + 2014868037;
  HIDWORD(v7) = v106
              + v39
              + 1093640456
              + ((((v1 ^ 0xB1507CAC ^ v2) & v40)
                - ((2 * ((v1 ^ 0xB1507CAC ^ v2) & v40)) & 0x92901DD2)
                - 918024471) ^ v1);
  LODWORD(v7) = HIDWORD(v7);
  v41 = (v7 >> 27)
      + (v2 ^ 0x78187245)
      - ((2 * ((v7 >> 27) + (v2 ^ 0x78187245))) & 0x72604CA8)
      + 959456852;
  HIDWORD(v7) = v95
              + v40
              - 1808049157
              + ((((v2 ^ 0x41285411 ^ v41) & (v1 ^ 0xC9480EE9))
                - ((2 * ((v2 ^ 0x41285411 ^ v41) & (v1 ^ 0xC9480EE9))) & 0xF030E48A)
                + 2014868037) ^ v2);
  LODWORD(v7) = HIDWORD(v7);
  v42 = (v7 >> 23) + (v41 ^ 0x39302654) - ((2 * ((v7 >> 23) + (v41 ^ 0x39302654))) & 0xA9495866) - 727405517;
  HIDWORD(v7) = v100
              + (v1 ^ 0xC9480EE9)
              - 21316900
              + ((((v41 ^ 0xED948A67 ^ v42) & (v2 ^ 0x78187245))
                - ((2 * ((v41 ^ 0xED948A67 ^ v42) & (v2 ^ 0x78187245))) & 0x72604CA8)
                + 959456852) ^ v41);
  LODWORD(v7) = HIDWORD(v7);
  v43 = (v7 >> 18) + (v42 ^ 0xD4A4AC33) - ((2 * ((v7 >> 18) + (v42 ^ 0xD4A4AC33))) & 0xE926D728) + 1955818388;
  HIDWORD(v7) = v105
              + (v2 ^ 0x78187245)
              + 611714189
              + ((((v42 ^ 0xA037C7A7 ^ v43) & (v41 ^ 0x39302654))
                - ((2 * ((v42 ^ 0xA037C7A7 ^ v43) & (v41 ^ 0x39302654))) & 0xA9495866)
                - 727405517) ^ v42);
  LODWORD(v7) = HIDWORD(v7);
  v44 = (v7 >> 12) + (v43 ^ 0x74936B94) - ((2 * ((v7 >> 12) + (v43 ^ 0x74936B94))) & 0xB9ED18DA) - 587821971;
  v45 = 4 * (v41 & 0xF ^ 4u);
  v93 = *(unsigned int *)((char *)&v93 + v45);
  *(unsigned int *)((char *)&v93 + v45) = v6;
  LODWORD(v45) = v94;
  v46 = 4
      * (((v7 >> 12)
        + (v43 ^ 0x94)
        - ((2 * ((v7 >> 12) + (v43 ^ 0x94))) & 0xDA)
        + 109) & 0xF ^ 0xDu);
  v94 = *(unsigned int *)((char *)&v93 + v46);
  *(unsigned int *)((char *)&v93 + v46) = v45;
  LODWORD(v45) = v95;
  v47 = 4 * (v43 & 0xF ^ 4u);
  v95 = *(unsigned int *)((char *)&v93 + v47);
  *(unsigned int *)((char *)&v93 + v47) = v45;
  LODWORD(v45) = v96;
  v48 = 4 * (v42 & 0xF ^ 3u);
  v96 = *(unsigned int *)((char *)&v93 + v48);
  *(unsigned int *)((char *)&v93 + v48) = v45;
  LODWORD(v45) = v97;
  v49 = 4 * ((v41 >> 4) ^ 5u);
  v97 = *(unsigned int *)((char *)&v93 + v49);
  *(unsigned int *)((char *)&v93 + v49) = v45;
  LODWORD(v45) = v98;
  v50 = 4
      * ((((v7 >> 12) + (v43 ^ 0x94) - ((2 * ((v7 >> 12) + (v43 ^ 0x94))) & 0xDA) + 109) >> 4) ^ 6u);
  v98 = *(unsigned int *)((char *)&v93 + v50);
  *(unsigned int *)((char *)&v93 + v50) = v45;
  LODWORD(v45) = v99;
  v51 = 4 * ((v43 >> 4) ^ 9u);
  v99 = *(unsigned int *)((char *)&v93 + v51);
  *(unsigned int *)((char *)&v93 + v51) = v45;
  LODWORD(v45) = v100;
  v52 = 4 * ((v42 >> 4) ^ 3u);
  v100 = *(unsigned int *)((char *)&v93 + v52);
  *(unsigned int *)((char *)&v93 + v52) = v45;
  HIDWORD(v7) = v98
              + (v41 ^ 0x39302654)
              - 1757023931
              + (((v43 ^ 0xA865E7F9 ^ v44) - ((2 * (v43 ^ 0xA865E7F9 ^ v44)) & 0xA9495866) - 727405517) ^ v42);
  LODWORD(v7) = HIDWORD(v7);
  v53 = (v7 >> 28) + (v44 ^ 0xDCF68C6D) - ((2 * ((v7 >> 28) + (v44 ^ 0xDCF68C6D))) & 0xEB4EC600) - 173579520;
  v54 = v102;
  HIDWORD(v7) = v101
              + (v42 ^ 0xD4A4AC33)
              + 515747460
              + (((v53 ^ v44 ^ 0x2951EF6D) - 2 * ((v53 ^ v44 ^ 0x2951EF6D) & 0x74936B96 ^ (v53 ^ v44) & 2) + 1955818388) ^ v43);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v52) = v53 ^ 0xF5A76300;
  LODWORD(v45) = (v7 >> 21) + (v53 ^ 0xF5A76300) - ((2 * ((v7 >> 21) + (v53 ^ 0xF5A76300))) & 0x4333B7D4) - 1583752214;
  v55 = v104;
  HIDWORD(v7) = v104
              + (v43 ^ 0x74936B94)
              + 82385189
              + (((v53 ^ 0x543EB8EA ^ v45) - ((2 * (v53 ^ 0x543EB8EA ^ v45)) & 0xB9ED18DA) - 587821971) ^ v44);
  LODWORD(v7) = HIDWORD(v7);
  v56 = v45 ^ 0xA199DBEA;
  v57 = (v7 >> 16) + (v45 ^ 0xA199DBEA) - ((2 * ((v7 >> 16) + (v45 ^ 0xA199DBEA))) & 0x43281884) + 563350594;
  HIDWORD(v7) = v107
              + (v44 ^ 0xDCF68C6D)
              - 1791954929
              + (((v45 ^ 0x800DD7A8 ^ v57) - ((2 * (v45 ^ 0x800DD7A8 ^ v57)) & 0xEB4EC600) - 173579520) ^ v53);
  LODWORD(v7) = HIDWORD(v7);
  v58 = v57 ^ 0x21940C42;
  v59 = (v7 >> 9) + (v57 ^ 0x21940C42) - ((2 * ((v7 >> 9) + (v57 ^ 0x21940C42))) & 0xDA8B870C) + 1833288582;
  HIDWORD(v7) = v94
              + v52
              + 1007329863
              + (((v59 ^ v57 ^ 0x4CD1CFC4)
                - 2 * ((v59 ^ v57 ^ 0x4CD1CFC4) & 0x2199DBFA ^ (v59 ^ v57) & 0x10)
                - 1583752214) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 28) + (v59 ^ 0x6D45C386) - ((2 * ((v7 >> 28) + (v59 ^ 0x6D45C386))) & 0x5785E) - 2147304401;
  HIDWORD(v7) = v97
              + v56
              - 483752020
              + (((v59 ^ 0xED477FA9 ^ v45) - ((2 * (v59 ^ 0xED477FA9 ^ v45)) & 0x43281884) + 563350594) ^ v57);
  LODWORD(v7) = HIDWORD(v7);
  v60 = v45 ^ 0x8002BC2F;
  v61 = (v7 >> 21) + (v45 ^ 0x8002BC2F) - ((2 * ((v7 >> 21) + (v45 ^ 0x8002BC2F))) & 0x94DDF246) + 1248786723;
  HIDWORD(v7) = v100
              + v58
              - 1912143005
              + (((v61 ^ v45 ^ 0xCA6C450C) - 2 * ((v61 ^ v45 ^ 0xCA6C450C) & 0x6D45C387 ^ (v61 ^ v45) & 1) + 1833288582) ^ v59);
  LODWORD(v7) = HIDWORD(v7);
  v62 = v61 ^ 0x4A6EF923;
  v63 = (v7 >> 16) + (v61 ^ 0x4A6EF923) - ((2 * ((v7 >> 16) + (v61 ^ 0x4A6EF923))) & 0xCE7FB84E) + 1732238375;
  HIDWORD(v7) = v103
              + (v59 ^ 0x6D45C386)
              + 1443591283
              + (((v63 ^ v61 ^ 0x2D512504) - 2 * ((v63 ^ v61 ^ 0x2D512504) & 0x2BC3F ^ (v63 ^ v61) & 0x10) - 2147304401) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 9) + (v63 ^ 0x673FDC27) - ((2 * ((v7 >> 9) + (v63 ^ 0x673FDC27))) & 0x6303678C) + 830583750;
  HIDWORD(v7) = v106
              + v60
              - 1075366199
              + (((v45 ^ v63 ^ 0x56BE6FE1) - 2 * ((v45 ^ v63 ^ 0x56BE6FE1) & 0x4A6EF927 ^ (v45 ^ v63) & 4) + 1248786723) ^ v61);
  LODWORD(v7) = HIDWORD(v7);
  v64 = v45 ^ 0x3181B3C6;
  v65 = (v7 >> 28) + (v45 ^ 0x3181B3C6) - ((2 * ((v7 >> 28) + (v45 ^ 0x3181B3C6))) & 0xFF0AFCD4) + 2139455082;
  HIDWORD(v7) = v93
              + v62
              - 2115182595
              + (((v45 ^ 0x4E04CDAC ^ v65) - ((2 * (v45 ^ 0x4E04CDAC ^ v65)) & 0xCE7FB84E) + 1732238375) ^ v63);
  LODWORD(v7) = HIDWORD(v7);
  v66 = v65 ^ 0x7F857E6A;
  v67 = (v7 >> 21) + (v65 ^ 0x7F857E6A) - ((2 * ((v7 >> 21) + (v65 ^ 0x7F857E6A))) & 0xF921DC8C) + 2089872966;
  result = v95;
  HIDWORD(v7) = v96
              + (v63 ^ 0x673FDC27)
              + 1815799944
              + (((v65 ^ 0x315902C ^ v67) - ((2 * (v65 ^ 0x315902C ^ v67)) & 0x6303678C) + 830583750) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 16) + (v67 ^ 0x7C90EE46) - ((2 * ((v7 >> 16) + (v67 ^ 0x7C90EE46))) & 0xD0380984) - 400816958;
  HIDWORD(v7) = v99
              + v64
              - 1680616184
              + (((v67 ^ 0x948CEA84 ^ v45) - ((2 * (v67 ^ 0x948CEA84 ^ v45)) & 0xFF0AFCD4) + 2139455082) ^ v65);
  LODWORD(v7) = HIDWORD(v7);
  v69 = v45 ^ 0xE81C04C2;
  v70 = (v7 >> 9) + (v45 ^ 0xE81C04C2) - ((2 * ((v7 >> 9) + (v45 ^ 0xE81C04C2))) & 0xEB0CD0D2) + 1971742825;
  HIDWORD(v7) = v102
              + v66
              + 1897957436
              + (((v45 ^ 0x9D9A6CAB ^ v70) - ((2 * (v45 ^ 0x9D9A6CAB ^ v70)) & 0xF921DC8C) + 2089872966) ^ v67);
  LODWORD(v7) = HIDWORD(v7);
  v71 = v70 ^ 0x75866869;
  v72 = (v7 >> 28) + (v70 ^ 0x75866869) - ((2 * ((v7 >> 28) + (v70 ^ 0x75866869))) & 0x471B49B6) - 1550998309;
  HIDWORD(v7) = v105
              + (v67 ^ 0x7C90EE46)
              + 2116506088
              + (((v70 ^ 0xD60BCCB2 ^ v72) - ((2 * (v70 ^ 0xD60BCCB2 ^ v72)) & 0xD0380984) - 400816958) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v52) = v72 ^ 0xA38DA4DB;
  LODWORD(v45) = (v7 >> 21) + (v72 ^ 0xA38DA4DB) - ((2 * ((v7 >> 21) + (v72 ^ 0xA38DA4DB))) & 0x4BC7BDCA) - 1511792923;
  HIDWORD(v7) = v108
              + v69
              - 1225902853
              + (((v72 ^ 0x66E7A3E ^ v45) - ((2 * (v72 ^ 0x66E7A3E ^ v45)) & 0xEB0CD0D2) + 1971742825) ^ v70);
  LODWORD(v7) = HIDWORD(v7);
  v73 = v45 ^ 0xA5E3DEE5;
  v74 = (v7 >> 16) + (v45 ^ 0xA5E3DEE5) - ((2 * ((v7 >> 16) + (v45 ^ 0xA5E3DEE5))) & 0x67FC0C28) - 1275197932;
  HIDWORD(v7) = v95
              + v71
              + 1542983272
              + (((v74 ^ v45 ^ 0x161DD8F1) - 2 * ((v74 ^ v45 ^ 0x161DD8F1) & 0x238DA4DF ^ (v74 ^ v45) & 4) - 1550998309) ^ v72);
  LODWORD(v7) = HIDWORD(v7);
  v75 = (v7 >> 9) + (v74 ^ 0xB3FE0614) - ((2 * ((v7 >> 9) + (v74 ^ 0xB3FE0614))) & 0x2D782782) + 381424577;
  v76 = v75 ^ 0x16BC13C1;
  HIDWORD(v7) = v93
              + v52
              - 1955276217
              + (((v76 | v45 ^ 0x5A1C211A) - ((2 * (v76 | v45 ^ 0x5A1C211A)) & 0x67FC0C28) - 1275197932) ^ v74);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 26) + v76 - ((2 * ((v7 >> 26) + v76)) & 0xAD79762E) + 1455209239;
  v77 = v45 ^ 0x56BCBB17;
  HIDWORD(v7) = v100
              + v73
              - 629753958
              + (((v45 ^ 0x56BCBB17 | v74 ^ 0x4C01F9EB)
                - ((2 * (v45 ^ 0x56BCBB17 | v74 ^ 0x4C01F9EB)) & 0x2D782782)
                + 381424577) ^ v75);
  LODWORD(v7) = HIDWORD(v7);
  v78 = (v7 >> 22) + (v45 ^ 0x56BCBB17) - ((2 * ((v7 >> 22) + (v45 ^ 0x56BCBB17))) & 0x4BA91D36) + 634687131;
  v79 = v78 ^ 0x25D48E9B;
  HIDWORD(v7) = v107
              + (v74 ^ 0xB3FE0614)
              + 1121967018
              + (((v79 | v75 ^ 0xE943EC3E) - ((2 * (v79 | v75 ^ 0xE943EC3E)) & 0xAD79762E) + 1455209239) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v52) = (v7 >> 17) + v79 - ((2 * ((v7 >> 17) + v79)) & 0x28025ACA) + 335621477;
  v80 = v52 ^ 0x14012D65;
  HIDWORD(v7) = v98
              + v76
              - 1814079428
              + (((v80 | v45 ^ 0xA94344E8) - ((2 * (v80 | v45 ^ 0xA94344E8)) & 0x4BA91D36) + 634687131) ^ v78);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 11) + v80 + 1205494637 + (~(2 * ((v7 >> 11) + v80)) | 0x704B3925) + 1;
  v81 = v45 ^ 0x47DA636D;
  HIDWORD(v7) = v105
              + v77
              - 56159802
              + (((v45 ^ 0x47DA636D | v78 ^ 0xDA2B7164)
                - ((2 * (v45 ^ 0x47DA636D | v78 ^ 0xDA2B7164)) & 0x28025ACA)
                + 335621477) ^ v52);
  LODWORD(v7) = HIDWORD(v7);
  v82 = (v7 >> 26) + (v45 ^ 0x47DA636D) - ((2 * ((v7 >> 26) + (v45 ^ 0x47DA636D))) & 0x9829CD2) - 2067706263;
  v83 = v82 ^ 0x84C14E69;
  HIDWORD(v7) = v96
              + v79
              + 643335317
              + (((v82 ^ 0x84C14E69 | v52 ^ 0xEBFED29A)
                - ((2 * (v82 ^ 0x84C14E69 | v52 ^ 0xEBFED29A)) & 0x8FB4C6DA)
                + 1205494637) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v52) = (v7 >> 22) + (v82 ^ 0x84C14E69) - ((2 * ((v7 >> 22) + (v82 ^ 0x84C14E69))) & 0x4ED92CB6) - 1486055845;
  v84 = v52 ^ 0xA76C965B;
  HIDWORD(v7) = v103
              + v80
              - 1757696896
              + (((v84 | v45 ^ 0xB8259C92) - ((2 * (v84 | v45 ^ 0xB8259C92)) & 0x9829CD2) - 2067706263) ^ v82);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 17) + v84 - ((2 * ((v7 >> 17) + v84)) & 0x9B5BB10) + 81452424;
  v85 = v45 ^ 0x4DADD88;
  HIDWORD(v7) = v94
              + v81
              + 483399124
              + (((v45 ^ 0x4DADD88 | v82 ^ 0x7B3EB196)
                - ((2 * (v45 ^ 0x4DADD88 | v82 ^ 0x7B3EB196)) & 0x4ED92CB6)
                - 1486055845) ^ v52);
  LODWORD(v7) = HIDWORD(v7);
  v86 = (v7 >> 11) + (v45 ^ 0x4DADD88) - ((2 * ((v7 >> 11) + (v45 ^ 0x4DADD88))) & 0x83A97538) + 1104460444;
  HIDWORD(v7) = v101
              + v83
              + 116667986
              + (((v86 ^ 0x41D4BA9C | v52 ^ 0x589369A4)
                - ((2 * (v86 ^ 0x41D4BA9C | v52 ^ 0x589369A4)) & 0x9B5BB10)
                + 81452424) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v52) = (v7 >> 26) + (v86 ^ 0x41D4BA9C) - ((2 * ((v7 >> 26) + (v86 ^ 0x41D4BA9C))) & 0x5F556A8C) - 1347766970;
  HIDWORD(v7) = v108
              + v84
              - 1787257117
              + (((v52 ^ 0xAFAAB546 | v45 ^ 0xFB252277)
                - ((2 * (v52 ^ 0xAFAAB546 | v45 ^ 0xFB252277)) & 0x83A97538)
                + 1104460444) ^ v86);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = (v7 >> 22) + (v52 ^ 0xAFAAB546) - ((2 * ((v7 >> 22) + (v52 ^ 0xAFAAB546))) & 0x71E66C5A) + 955463213;
  HIDWORD(v7) = v99
              + v85
              + 978123543
              + (((v45 ^ 0x38F3362D | v86 ^ 0xBE2B4563)
                - 1347766970
                + (~(2 * (v45 ^ 0x38F3362D | v86 ^ 0xBE2B4563)) | 0xA0AA9573)
                + 1) ^ v52);
  LODWORD(v7) = HIDWORD(v7);
  v87 = (v7 >> 17) + (v45 ^ 0x38F3362D) - 899705367 + (~(2 * ((v7 >> 17) + (v45 ^ 0x38F3362D))) | 0x6B40D42D) + 1;
  v88 = v87 ^ 0xCA5F95E9;
  HIDWORD(v7) = v106
              + (v86 ^ 0x41D4BA9C)
              - 447493724
              + (((v88 | v52 ^ 0x50554AB9) - ((2 * (v88 | v52 ^ 0x50554AB9)) & 0x71E66C5A) + 955463213) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  v89 = (v7 >> 11) + v88 - ((2 * ((v7 >> 11) + v88)) & 0x8E24AB22) + 1192383889;
  v90 = v89 ^ 0x47125591;
  HIDWORD(v7) = v97
              + (v52 ^ 0xAFAAB546)
              - 1902168443
              + (((v90 | v45 ^ 0xC70CC9D2) - ((2 * (v90 | v45 ^ 0xC70CC9D2)) & 0x94BF2BD2) - 899705367) ^ v87);
  LODWORD(v7) = HIDWORD(v7);
  v91 = (v7 >> 26) + v90 - ((2 * ((v7 >> 26) + v90)) & 0x21EF01F8) - 1862827780;
  *(_DWORD *)(v92 - 0x240ADDD1281D1264) += v91 ^ 0x90F780FC;
  HIDWORD(v7) = v55
              + (v45 ^ 0x38F3362D)
              + 1418111544
              + (((v91 ^ 0x90F780FC | v87 ^ 0x35A06A16)
                - ((2 * (v91 ^ 0x90F780FC | v87 ^ 0x35A06A16)) & 0x8E24AB22)
                + 1192383889) ^ v89);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v45) = ((2 * ((v7 >> 22) + (v91 ^ 0x90F780FC))) & 0xF7F9D3F0)
               + (((v7 >> 22) + (v91 ^ 0x90F780FC)) ^ 0xFBFCE9F8)
               + 67311112;
  HIDWORD(v7) = result
              + (v87 ^ 0xCA5F95E9)
              - 1037858114
              + (((v45 | v89 ^ 0xB8EDAA6E) - 1862827780 + (~(2 * (v45 | v89 ^ 0xB8EDAA6E)) | 0xDE10FE07) + 1) ^ v91);
  LODWORD(v7) = HIDWORD(v7);
  LODWORD(v52) = v45 + (v7 >> 17);
  HIDWORD(v7) = v54 + (v89 ^ 0x47125591) - 2100130924 + ((v52 | v91 ^ 0x6F087F03) ^ v45);
  LODWORD(v7) = HIDWORD(v7);
  *(_DWORD *)(v92 - 0x240ADDD1281D1260) += v52 + (v7 >> 11);
  *(_DWORD *)(v92 - 0x240ADDD1281D125CLL) += v52;
  *(_DWORD *)(v92 - 0x240ADDD1281D1258) += v45;
  return result;
}

uint64_t XtCqEf5X(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  _BYTE v6[8];
  _QWORD v7[2];
  unsigned int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v4 = (unint64_t)&v6[qword_2553C1220 + qword_2553B61C8];
  qword_2553C1220 = (1056581677 * v4) ^ 0x3F506021E86BC7B2;
  qword_2553B61C8 = 1056581677 * (v4 ^ 0x3F506021E86BC7B2);
  v8 = 2009815553 * ((2 * (v7 & 0x14594FB8) - v7 + 1806086208) ^ 0x9AAD9E05) + 1481;
  v10 = a1;
  v11 = a2;
  v7[0] = a3;
  v7[1] = a4;
  ((void (*)(_QWORD *))((char *)*(&off_24E21C7C0
                                           + ((45
                                                                            * ((qword_2553B61C8 + qword_2553C1220) ^ 0xB2)) ^ byte_21E18C950[byte_21E1B1220[(45 * ((qword_2553B61C8 + qword_2553C1220) ^ 0xB2))] ^ 0x4D])
                                           + 351)
                                 - 8))(v7);
  return v9 ^ 0x37F8058Bu;
}

uint64_t sub_21E0DFA68(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v2 = 1988622253 * ((((2 * a1) | 0x7A930536) - a1 - 1028227739) ^ 0xCB51C23B);
  v3 = *(_DWORD *)a1 + v2;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = -958090017 * (*(_DWORD *)(a1 + 56) + v2) + 943143261;
  v8 = 1328090399 * ((((2 * &v10) | 0x74F8666) - &v10 - 61326131) ^ 0xFC74A709);
  v10 = *(_QWORD *)(a1 + 24);
  v14 = v6;
  v15 = v4;
  v16 = (v7 ^ 0xF7D7EABF) - v8 + ((2 * v7) & 0xEFAFD57E) + 2137913340;
  v11 = v3 - v8 + 1814972209;
  v12 = v5;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_24E21C7C0 + (int)(v3 ^ 0x93D1BDBA)) - 4))(&v10);
  *(_DWORD *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_21E0DFBD0(uint64_t result)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(result + 12) - 2009815553 * (((result | 0x6497EF52) - (result & 0x6497EF52)) ^ 0x959CC117);
  v2 = *(_QWORD *)result;
  *(_BYTE *)(v2 - 0x46C78EE8E15E7657) = HIBYTE(v1) ^ 0xC4;
  *(_BYTE *)(v2 - 0x46C78EE8E15E7656) = BYTE2(v1) ^ 0xA5;
  *(_BYTE *)(v2 - 0x46C78EE8E15E7655) = BYTE1(v1) ^ 0x27;
  *(_BYTE *)(v2 - 0x46C78EE8E15E7654) = v1 ^ 0xE;
  return result;
}

uint64_t sub_21E0DFC7C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x4063EA0FFD2E201) = *(_DWORD *)(a2 - 0x593A0D77ED43FF83);
  *(_QWORD *)(a1 - 0x4063EA0FFD2E1F9) = *(_QWORD *)(a2 - 0x593A0D77ED43FF7BLL);
  return 0;
}

uint64_t sub_21E0DFCD4(uint64_t a1)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  int v64;
  unsigned int v65;
  int v66;
  uint64_t result;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  unsigned int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  uint64_t v105;

  v105 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_DWORD **)(a1 + 16);
  v89 = (*v2 ^ 0x7F37BCBE) - 823558162 + ((2 * *v2) & 0xFE6F797C);
  v90 = (v2[1] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[1]) & 0xFE6F797C);
  v91 = (v2[2] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[2]) & 0xFE6F797C);
  v92 = (v2[3] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[3]) & 0xFE6F797C);
  v93 = (v2[4] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[4]) & 0xFE6F797C);
  v94 = (v2[5] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[5]) & 0xFE6F797C);
  v95 = (v2[6] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[6]) & 0xFE6F797C);
  v96 = (v2[7] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[7]) & 0xFE6F797C);
  v97 = (v2[8] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[8]) & 0xFE6F797C);
  v98 = (v2[9] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[9]) & 0xFE6F797C);
  v99 = (v2[10] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[10]) & 0xFE6F797C);
  v100 = (v2[11] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[11]) & 0xFE6F797C);
  v101 = (v2[12] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[12]) & 0xFE6F797C);
  v102 = (v2[13] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[13]) & 0xFE6F797C);
  v103 = (v2[14] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[14]) & 0xFE6F797C);
  v104 = (v2[15] ^ 0x7F37BCBE) - 823558162 + ((2 * v2[15]) & 0xFE6F797C);
  v88 = v1;
  v3 = *(_DWORD *)(v1 - 0x6241F50E74A17128);
  v4 = *(_DWORD *)(v1 - 0x6241F50E74A17124);
  v5 = *(_DWORD *)(v1 - 0x6241F50E74A17120);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x6241F50E74A1712CLL) + v89 - 1991678004 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0xF0B98CE6) + 2019346035;
  HIDWORD(v6) = v5 + v90 - 1700365654 + (v3 & (v7 ^ 0x785CC673) | v4 & ~(v7 ^ 0x785CC673));
  LODWORD(v6) = HIDWORD(v6);
  v8 = (v6 >> 20) + (v7 ^ 0x785CC673) - ((2 * ((v6 >> 20) + (v7 ^ 0x785CC673))) & 0x61B713A6) + 819694035;
  HIDWORD(v6) = v4 + v91 - 704695249 + ((v8 ^ 0x30DB89D3) & (v7 ^ (v3 - ((2 * v3) & 0xF0B98CE6) + 2019346035)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0x30DB89D3) - ((2 * ((v6 >> 15) + (v8 ^ 0x30DB89D3))) & 0x452416AE) - 1567487145;
  v9 = v1 ^ 0xA2920B57;
  HIDWORD(v6) = v3
              + v92
              + 1939640898
              + ((((v1 ^ 0xA2920B57) & (v7 ^ 0x48874FA0 ^ v8))
                - ((2 * ((v1 ^ 0xA2920B57) & (v7 ^ 0x48874FA0 ^ v8))) & 0xF0B98CE6)
                + 2019346035) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  v10 = (v6 >> 10) + (v1 ^ 0xA2920B57) - ((2 * ((v6 >> 10) + (v1 ^ 0xA2920B57))) & 0x443887A0) + 572277712;
  HIDWORD(v6) = v93
              + (v7 ^ 0x785CC673)
              - 1487219965
              + ((((v10 ^ 0x221C43D0) & (v8 ^ 0x92498284 ^ v1))
                - ((2 * ((v10 ^ 0x221C43D0) & (v8 ^ 0x92498284 ^ v1))) & 0x61B713A6)
                + 819694035) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  v11 = (v6 >> 25) + (v10 ^ 0x221C43D0) - ((2 * ((v6 >> 25) + (v10 ^ 0x221C43D0))) & 0x7B5E44A4) + 1034887762;
  LODWORD(v2) = v11 ^ 0x3DAF2252;
  HIDWORD(v6) = v94
              + (v8 ^ 0x30DB89D3)
              - 110720642
              + ((((v11 ^ 0x3DAF2252) & (v1 ^ 0x808E4887 ^ v10))
                - ((2 * ((v11 ^ 0x3DAF2252) & (v1 ^ 0x808E4887 ^ v10))) & 0x452416AE)
                - 1567487145) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v11 ^ 0x3DAF2252) - ((2 * ((v6 >> 20) + (v11 ^ 0x3DAF2252))) & 0x57CAC8FA) + 736453757;
  v12 = v1 ^ 0x2BE5647D;
  HIDWORD(v6) = v95
              + v9
              + 1510934887
              + ((((v1 ^ 0x2BE5647D) & (v10 ^ 0x1FB36182 ^ v11))
                - ((2 * ((v1 ^ 0x2BE5647D) & (v10 ^ 0x1FB36182 ^ v11))) & 0x443887A0)
                + 572277712) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  v13 = (v6 >> 15) + (v1 ^ 0x2BE5647D) - ((2 * ((v6 >> 15) + (v1 ^ 0x2BE5647D))) & 0xA86B3244) + 1412798754;
  HIDWORD(v6) = v96
              + (v10 ^ 0x221C43D0)
              - 1356507051
              + ((((v13 ^ 0x54359922) & (v11 ^ 0x164A462F ^ v1))
                - ((2 * ((v13 ^ 0x54359922) & (v11 ^ 0x164A462F ^ v1))) & 0x7B5E44A4)
                + 1034887762) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  v14 = (v6 >> 10) + (v13 ^ 0x54359922) - ((2 * ((v6 >> 10) + (v13 ^ 0x54359922))) & 0x6E6DD436) + 926345755;
  v15 = v14 ^ 0x3736EA1B;
  HIDWORD(v6) = v97
              + (_DWORD)v2
              + 459234348
              + ((((v14 ^ 0x3736EA1B) & (v1 ^ 0x7FD0FD5F ^ v13))
                - ((2 * ((v14 ^ 0x3736EA1B) & (v1 ^ 0x7FD0FD5F ^ v13))) & 0x57CAC8FA)
                + 736453757) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v14 ^ 0x3736EA1B) - ((2 * ((v6 >> 25) + (v14 ^ 0x3736EA1B))) & 0xE2CD9FFA) - 244920323;
  v16 = v1 ^ 0xF166CFFD;
  HIDWORD(v6) = v98
              + v12
              + 1025751811
              + ((((v1 ^ 0xF166CFFD) & (v13 ^ 0x63037339 ^ v14))
                - ((2 * ((v1 ^ 0xF166CFFD) & (v13 ^ 0x63037339 ^ v14))) & 0xA86B3244)
                + 1412798754) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  v17 = (v6 >> 20) + (v1 ^ 0xF166CFFD) - ((2 * ((v6 >> 20) + (v1 ^ 0xF166CFFD))) & 0xEF8C175A) + 2009467821;
  v18 = v17 ^ 0x77C60BAD;
  HIDWORD(v6) = v99
              + (v13 ^ 0x54359922)
              - 1310843131
              + ((((v17 ^ 0x77C60BAD) & (v14 ^ 0xC65025E6 ^ v1))
                - ((2 * ((v17 ^ 0x77C60BAD) & (v14 ^ 0xC65025E6 ^ v1))) & 0x6E6DD436)
                + 926345755) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  v19 = (v6 >> 15) + (v17 ^ 0x77C60BAD) - ((2 * ((v6 >> 15) + (v17 ^ 0x77C60BAD))) & 0x99FD5E78) - 855724228;
  v20 = v19 ^ 0xCCFEAF3C;
  HIDWORD(v6) = v100
              + v15
              + 993762066
              + ((((v19 ^ 0xCCFEAF3C) & (v1 ^ 0x86A0C450 ^ v17))
                - ((2 * ((v19 ^ 0xCCFEAF3C) & (v1 ^ 0x86A0C450 ^ v17))) & 0xE2CD9FFA)
                - 244920323) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v19 ^ 0xCCFEAF3C) - ((2 * ((v6 >> 10) + (v19 ^ 0xCCFEAF3C))) & 0xB3BF945E) - 639645137;
  v21 = v1 ^ 0xD9DFCA2F;
  HIDWORD(v6) = v101
              + v16
              + 493802614
              + ((((v1 ^ 0xD9DFCA2F) & (v17 ^ 0xBB38A491 ^ v19))
                - ((2 * ((v1 ^ 0xD9DFCA2F) & (v17 ^ 0xBB38A491 ^ v19))) & 0xEF8C175A)
                + 2009467821) ^ v17);
  LODWORD(v6) = HIDWORD(v6);
  v22 = (v6 >> 25) + (v1 ^ 0xD9DFCA2F) - ((2 * ((v6 >> 25) + (v1 ^ 0xD9DFCA2F))) & 0x4F5EA75C) - 1481682002;
  HIDWORD(v6) = v102
              + v18
              - 1351142169
              + ((((v22 ^ 0xA7AF53AE) & (v19 ^ 0x15216513 ^ v1))
                - ((2 * ((v22 ^ 0xA7AF53AE) & (v19 ^ 0x15216513 ^ v1))) & 0x99FD5E78)
                - 855724228) ^ v19);
  LODWORD(v6) = HIDWORD(v6);
  v23 = (v6 >> 20) + (v22 ^ 0xA7AF53AE) - ((2 * ((v6 >> 20) + (v22 ^ 0xA7AF53AE))) & 0x123CC26C) + 152985910;
  v24 = v23 ^ 0x91E6136;
  HIDWORD(v6) = v103
              + v20
              + 1482163938
              + ((((v23 ^ 0x91E6136) & (v1 ^ 0x7E709981 ^ v22))
                - ((2 * ((v23 ^ 0x91E6136) & (v1 ^ 0x7E709981 ^ v22))) & 0xB3BF945E)
                - 639645137) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v23 ^ 0x91E6136) - ((2 * ((v6 >> 15) + (v23 ^ 0x91E6136))) & 0x7B8FE4C) + 64782118;
  v25 = v1 ^ 0x3DC7F26;
  HIDWORD(v6) = v104
              + v21
              - 74265739
              + ((((v1 ^ 0x3DC7F26) & (v22 ^ 0xAEB13298 ^ v23))
                - ((2 * ((v1 ^ 0x3DC7F26) & (v22 ^ 0xAEB13298 ^ v23))) & 0x4F5EA75C)
                - 1481682002) ^ v22);
  LODWORD(v6) = HIDWORD(v6);
  v26 = (v6 >> 10) + (v1 ^ 0x3DC7F26) - ((2 * ((v6 >> 10) + (v1 ^ 0x3DC7F26))) & 0xDC170604) + 1846248194;
  HIDWORD(v6) = v90
              + (v22 ^ 0xA7AF53AE)
              - 1476597578
              + ((((v1 ^ 0x6DD7FC24 ^ v26) & v24) - ((2 * ((v1 ^ 0x6DD7FC24 ^ v26) & v24)) & 0x7B8FE4C) + 64782118) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v26 ^ 0x6E0B8302;
  LODWORD(v1) = (v6 >> 27) + (v26 ^ 0x6E0B8302) - ((2 * ((v6 >> 27) + (v26 ^ 0x6E0B8302))) & 0x6144F188) + 815954116;
  HIDWORD(v6) = v95
              + v24
              + 1914664596
              + ((((v26 ^ 0x5EA9FBC6 ^ v1) & v25) - ((2 * ((v26 ^ 0x5EA9FBC6 ^ v1) & v25)) & 0xDC170604) + 1846248194) ^ v26);
  LODWORD(v6) = HIDWORD(v6);
  v27 = v1 ^ 0x30A278C4;
  v28 = (v6 >> 23) + (v1 ^ 0x30A278C4) - ((2 * ((v6 >> 23) + (v1 ^ 0x30A278C4))) & 0x3105F060) - 1736247248;
  HIDWORD(v6) = v100
              + v25
              - 667083355
              + ((((v1 ^ 0xA82080F4 ^ v28) & v2)
                - ((2 * ((v1 ^ 0xA82080F4 ^ v28) & v2)) & 0x6144F188)
                + 815954116) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v29 = v28 ^ 0x9882F830;
  LODWORD(v1) = (v6 >> 18) + (v28 ^ 0x9882F830) - ((2 * ((v6 >> 18) + (v28 ^ 0x9882F830))) & 0x10A4C46A) - 2007866827;
  HIDWORD(v6) = v89
              + (_DWORD)v2
              - 1684698370
              + ((((v28 ^ 0x10D09A05 ^ v1) & v27) - ((2 * ((v28 ^ 0x10D09A05 ^ v1) & v27)) & 0x3105F060) - 1736247248) ^ v28);
  LODWORD(v6) = HIDWORD(v6);
  v30 = v1 ^ 0x88526235;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x88526235) - ((2 * ((v6 >> 12) + (v1 ^ 0x88526235))) & 0x7ACBACA) - 2083103387;
  HIDWORD(v6) = v94
              + v27
              - 2012359759
              + ((((v1 ^ 0xB843F50 ^ v2) & v29)
                - ((2 * ((v1 ^ 0xB843F50 ^ v2) & v29)) & 0x10A4C46A)
                - 2007866827) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v31 = v2 ^ 0x83D65D65;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x83D65D65)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x83D65D65))) & 0x2A165AD2)
              - 1794429591;
  HIDWORD(v6) = v99
              + v29
              - 1272784985
              + ((((v2 ^ 0x16DD700C ^ v1) & v30)
                - ((2 * ((v2 ^ 0x16DD700C ^ v1) & v30)) & 0x7ACBACA)
                - 2083103387) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v32 = v1 ^ 0x950B2D69;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x950B2D69) - ((2 * ((v6 >> 23) + (v1 ^ 0x950B2D69))) & 0xDEE453A0) + 1869752784;
  HIDWORD(v6) = v104
              + v30
              - 1971279403
              + ((((v1 ^ 0xFA7904B9 ^ v2) & v31)
                - ((2 * ((v1 ^ 0xFA7904B9 ^ v2) & v31)) & 0x2A165AD2)
                - 1794429591) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v33 = v2 ^ 0x6F7229D0;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x6F7229D0)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x6F7229D0))) & 0x9C88F43E)
              - 834373089;
  HIDWORD(v6) = v93
              + v31
              - 1716338916
              + ((((v2 ^ 0xA13653CF ^ v1) & v32)
                - ((2 * ((v2 ^ 0xA13653CF ^ v1) & v32)) & 0xDEE453A0)
                + 1869752784) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v34 = v1 ^ 0xCE447A1F;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xCE447A1F) - ((2 * ((v6 >> 12) + (v1 ^ 0xCE447A1F))) & 0xA3330418) - 778468852;
  HIDWORD(v6) = v98
              + v32
              - 742354630
              + ((((v1 ^ 0x1FDDF813 ^ v2) & v33)
                - ((2 * ((v1 ^ 0x1FDDF813 ^ v2) & v33)) & 0x9C88F43E)
                - 834373089) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v35 = v2 ^ 0xD199820C;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0xD199820C)
              - ((2 * ((v6 >> 27) + (v2 ^ 0xD199820C))) & 0x6949C9C8)
              - 1264261916;
  HIDWORD(v6) = v103
              + v33
              + 1964362538
              + ((((v2 ^ 0x653D66E8 ^ v1) & v34)
                - ((2 * ((v2 ^ 0x653D66E8 ^ v1) & v34)) & 0xA3330418)
                - 778468852) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v36 = v1 ^ 0xB4A4E4E4;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0xB4A4E4E4) - ((2 * ((v6 >> 23) + (v1 ^ 0xB4A4E4E4))) & 0x306BD6B4) - 1741296806;
  HIDWORD(v6) = v92
              + v34
              - 1498165029
              + ((((v1 ^ 0x2C910FBE ^ v2) & v35)
                - ((2 * ((v1 ^ 0x2C910FBE ^ v2) & v35)) & 0x6949C9C8)
                - 1264261916) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v37 = v2 ^ 0x9835EB5A;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x9835EB5A)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x9835EB5A))) & 0x7A9699E)
              - 2083212081;
  HIDWORD(v6) = v97
              + v35
              - 147269567
              + ((((v2 ^ 0x1BE15F95 ^ v1) & v36)
                - ((2 * ((v2 ^ 0x1BE15F95 ^ v1) & v36)) & 0x306BD6B4)
                - 1741296806) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x83D4B4CF) - ((2 * ((v6 >> 12) + (v1 ^ 0x83D4B4CF))) & 0x7BA357DC) - 1110332434;
  HIDWORD(v6) = v102
              + v36
              + 1539484761
              + ((((v1 ^ 0x3E051F21 ^ v2) & v37)
                - ((2 * ((v1 ^ 0x3E051F21 ^ v2) & v37)) & 0x7A9699E)
                - 2083212081) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v38 = (v6 >> 27)
      + (v2 ^ 0xBDD1ABEE)
      - ((2 * ((v6 >> 27) + (v2 ^ 0xBDD1ABEE))) & 0xF76770AE)
      - 72107945;
  HIDWORD(v6) = v91
              + v37
              - 1362204852
              + ((((v2 ^ 0x466213B9 ^ v38) & (v1 ^ 0x83D4B4CF))
                - ((2 * ((v2 ^ 0x466213B9 ^ v38) & (v1 ^ 0x83D4B4CF))) & 0x7BA357DC)
                - 1110332434) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v39 = (v6 >> 23) + (v38 ^ 0xFBB3B857) - ((2 * ((v6 >> 23) + (v38 ^ 0xFBB3B857))) & 0x6967EB08) + 884209028;
  HIDWORD(v6) = v96
              + (v1 ^ 0x83D4B4CF)
              + 424527405
              + ((((v38 ^ 0xCF004DD3 ^ v39) & (v2 ^ 0xBDD1ABEE))
                - ((2 * ((v38 ^ 0xCF004DD3 ^ v39) & (v2 ^ 0xBDD1ABEE))) & 0xF76770AE)
                - 72107945) ^ v38);
  LODWORD(v6) = HIDWORD(v6);
  v40 = v39 ^ 0x34B3F584;
  v41 = (v6 >> 18) + (v39 ^ 0x34B3F584) - ((2 * ((v6 >> 18) + (v39 ^ 0x34B3F584))) & 0x6B4AB4BA) - 1247454627;
  HIDWORD(v6) = v101
              + (v2 ^ 0xBDD1ABEE)
              + 1057558494
              + ((((v39 ^ 0x8116AFD9 ^ v41) & (v38 ^ 0xFBB3B857))
                - ((2 * ((v39 ^ 0x8116AFD9 ^ v41) & (v38 ^ 0xFBB3B857))) & 0x6967EB08)
                + 884209028) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  v42 = (v6 >> 12) + (v41 ^ 0xB5A55A5D) - ((2 * ((v6 >> 12) + (v41 ^ 0xB5A55A5D))) & 0x92DAC6B6) + 1231905627;
  v43 = 4 * (v38 & 0xF ^ 7);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v43);
  v44 = 4 * (v42 & 0xF ^ 0xB);
  *(unsigned int *)((char *)&v89 + v43) = *(unsigned int *)((char *)&v89 + v44);
  *(unsigned int *)((char *)&v89 + v44) = v2;
  v45 = 4 * (v41 & 0xF ^ 0xDu);
  LODWORD(v2) = *(unsigned int *)((char *)&v89 + v45);
  v46 = 4 * (v39 & 0xF ^ 4u);
  *(unsigned int *)((char *)&v89 + v45) = *(unsigned int *)((char *)&v89 + v46);
  *(unsigned int *)((char *)&v89 + v46) = v2;
  v47 = 4 * ((v38 >> 4) ^ 5u);
  LODWORD(v46) = *(unsigned int *)((char *)&v89 + v47);
  v48 = 4 * ((v42 >> 4) ^ 5u);
  *(unsigned int *)((char *)&v89 + v47) = *(unsigned int *)((char *)&v89 + v48);
  *(unsigned int *)((char *)&v89 + v48) = v46;
  v49 = 4 * ((v38 >> 8) & 0xF ^ 8);
  LODWORD(v48) = *(unsigned int *)((char *)&v89 + v49);
  v50 = 4 * ((v42 >> 8) & 0xF ^ 3);
  *(unsigned int *)((char *)&v89 + v49) = *(unsigned int *)((char *)&v89 + v50);
  *(unsigned int *)((char *)&v89 + v50) = v48;
  v51 = 4 * (((unsigned __int16)v38 >> 12) ^ 0xBu);
  LODWORD(v48) = *(unsigned int *)((char *)&v89 + v51);
  v52 = 4 * (((unsigned __int16)v42 >> 12) ^ 6u);
  *(unsigned int *)((char *)&v89 + v51) = *(unsigned int *)((char *)&v89 + v52);
  *(unsigned int *)((char *)&v89 + v52) = v48;
  HIDWORD(v6) = v94
              + (v38 ^ 0xFBB3B857)
              - 1311179626
              + (((v41 ^ 0xFCC83906 ^ v42) - ((2 * (v41 ^ 0xFCC83906 ^ v42)) & 0x6967EB08) + 884209028) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  v53 = (v6 >> 28) + (v42 ^ 0x496D635B) - ((2 * ((v6 >> 28) + (v42 ^ 0x496D635B))) & 0xE45DE5D6) - 231804181;
  v54 = v98;
  HIDWORD(v6) = v97
              + v40
              + 961591765
              + (((v53 ^ v42 ^ 0xBB4391B0) - 2 * ((v53 ^ v42 ^ 0xBB4391B0) & 0x35A55A5F ^ (v53 ^ v42) & 2) - 1247454627) ^ v41);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 21) + (v53 ^ 0xF22EF2EB) - ((2 * ((v6 >> 21) + (v53 ^ 0xF22EF2EB))) & 0x8EA88C58) + 1196705324;
  HIDWORD(v6) = v100
              + (v41 ^ 0xB5A55A5D)
              + 528229494
              + (((v53 ^ 0xB57AB4C7 ^ v51) - ((2 * (v53 ^ 0xB57AB4C7 ^ v51)) & 0x92DAC6B6) + 1231905627) ^ v42);
  LODWORD(v6) = HIDWORD(v6);
  v55 = v51 ^ 0x4754462C;
  v56 = (v6 >> 16) + (v51 ^ 0x4754462C) - ((2 * ((v6 >> 16) + (v51 ^ 0x4754462C))) & 0x5D1E6FFC) - 1366345730;
  HIDWORD(v6) = v103
              + (v42 ^ 0x496D635B)
              - 1346110624
              + (((v51 ^ 0xE9DB71D2 ^ v56) - ((2 * (v51 ^ 0xE9DB71D2 ^ v56)) & 0xE45DE5D6) - 231804181) ^ v53);
  LODWORD(v6) = HIDWORD(v6);
  v57 = v56 ^ 0xAE8F37FE;
  v58 = (v6 >> 9) + (v56 ^ 0xAE8F37FE) - ((2 * ((v6 >> 9) + (v56 ^ 0xAE8F37FE))) & 0xA8E304C6) + 1416725091;
  HIDWORD(v6) = v90
              + (v53 ^ 0xF22EF2EB)
              + 1453174168
              + (((v56 ^ 0xFAFEB59D ^ v58) - ((2 * (v56 ^ 0xFAFEB59D ^ v58)) & 0x8EA88C58) + 1196705324) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 28) + (v58 ^ 0x54718263) - ((2 * ((v6 >> 28) + (v58 ^ 0x54718263))) & 0xB918757A) + 1552693949;
  HIDWORD(v6) = v93
              + v55
              - 37907715
              + (((v58 ^ 0x8FDB8DE ^ v51) - ((2 * (v58 ^ 0x8FDB8DE ^ v51)) & 0x5D1E6FFC) - 1366345730) ^ v56);
  LODWORD(v6) = HIDWORD(v6);
  v59 = v51 ^ 0x5C8C3ABD;
  v60 = (v6 >> 21) + (v51 ^ 0x5C8C3ABD) - 240229022 + (~(2 * ((v6 >> 21) + (v51 ^ 0x5C8C3ABD))) | 0x1CA3353B) + 1;
  HIDWORD(v6) = v96
              + v57
              - 1466298700
              + (((v51 ^ 0xAD225FDF ^ v60) - ((2 * (v51 ^ 0xAD225FDF ^ v60)) & 0xA8E304C6) + 1416725091) ^ v58);
  LODWORD(v6) = HIDWORD(v6);
  v61 = v60 ^ 0xF1AE6562;
  v62 = (v6 >> 16) + (v60 ^ 0xF1AE6562) - ((2 * ((v6 >> 16) + (v60 ^ 0xF1AE6562))) & 0x453F2DA4) + 580884178;
  HIDWORD(v6) = v99
              + (v58 ^ 0x54718263)
              + 1889435588
              + (((v62 ^ v60 ^ 0xD331F3B0) - 2 * ((v62 ^ v60 ^ 0xD331F3B0) & 0x5C8C3ABF ^ (v62 ^ v60) & 2) + 1552693949) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 9) + (v62 ^ 0x229F96D2) - ((2 * ((v6 >> 9) + (v62 ^ 0x229F96D2))) & 0x20722E8C) - 1875306682;
  HIDWORD(v6) = v102
              + v59
              - 629521894
              + (((v62 ^ 0xB2A68194 ^ v51) - ((2 * (v62 ^ 0xB2A68194 ^ v51)) & 0xE35CCAC4) - 240229022) ^ v60);
  LODWORD(v6) = HIDWORD(v6);
  v63 = v51 ^ 0x90391746;
  v64 = (v6 >> 28) + (v51 ^ 0x90391746) - ((2 * ((v6 >> 28) + (v51 ^ 0x90391746))) & 0xC0AAB7C4) - 531276830;
  HIDWORD(v6) = v89
              + v61
              - 1669338290
              + (((v64 ^ v51 ^ 0x706C4CA4) - 2 * ((v64 ^ v51 ^ 0x706C4CA4) & 0x229F96DA ^ (v64 ^ v51) & 8) + 580884178) ^ v62);
  LODWORD(v6) = HIDWORD(v6);
  v65 = v64 ^ 0xE0555BE2;
  v66 = (v6 >> 21) + (v64 ^ 0xE0555BE2) - ((2 * ((v6 >> 21) + (v64 ^ 0xE0555BE2))) & 0x90790622) - 935558383;
  result = v91;
  HIDWORD(v6) = v92
              + (v62 ^ 0x229F96D2)
              - 2033323047
              + (((v64 ^ 0x2869D8F3 ^ v66) - ((2 * (v64 ^ 0x2869D8F3 ^ v66)) & 0x20722E8C) - 1875306682) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 16) + (v66 ^ 0xC83C8311) - ((2 * ((v6 >> 16) + (v66 ^ 0xC83C8311))) & 0xE7E2F69C) - 202278066;
  HIDWORD(v6) = v95
              + v63
              - 1234771879
              + (((v66 ^ 0x3BCDF85F ^ v51) - ((2 * (v66 ^ 0x3BCDF85F ^ v51)) & 0xC0AAB7C4) - 531276830) ^ v64);
  LODWORD(v6) = HIDWORD(v6);
  v68 = v51 ^ 0xF3F17B4E;
  v69 = (v6 >> 9) + (v51 ^ 0xF3F17B4E) - ((2 * ((v6 >> 9) + (v51 ^ 0xF3F17B4E))) & 0x1248C292) + 153379145;
  HIDWORD(v6) = v98
              + v65
              - 1951165555
              + (((v51 ^ 0xFAD51A07 ^ v69) - ((2 * (v51 ^ 0xFAD51A07 ^ v69)) & 0x90790622) - 935558383) ^ v66);
  LODWORD(v6) = HIDWORD(v6);
  v70 = v69 ^ 0x9246149;
  v71 = (v6 >> 28) + (v69 ^ 0x9246149) - ((2 * ((v6 >> 28) + (v69 ^ 0x9246149))) & 0xCB605B96) + 1706044875;
  HIDWORD(v6) = v101
              + (v66 ^ 0xC83C8311)
              - 1732616903
              + (((v71 ^ v69 ^ 0x6C944C82) - 2 * ((v71 ^ v69 ^ 0x6C944C82) & 0x73F17B4F ^ (v71 ^ v69) & 1) - 202278066) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v48) = v71 ^ 0x65B02DCB;
  LODWORD(v51) = (v6 >> 21) + (v71 ^ 0x65B02DCB) - ((2 * ((v6 >> 21) + (v71 ^ 0x65B02DCB))) & 0xB9ABAB40) + 1557517728;
  HIDWORD(v6) = v104
              + v68
              - 780058548
              + (((v51 ^ v71 ^ 0x3965F86B) - 2 * ((v51 ^ v71 ^ 0x3965F86B) & 0x924615D ^ (v51 ^ v71) & 0x14) + 153379145) ^ v69);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = v51 ^ 0x5CD5D5A0;
  v72 = (v6 >> 16) + (v51 ^ 0x5CD5D5A0) - ((2 * ((v6 >> 16) + (v51 ^ 0x5CD5D5A0))) & 0x8FA6C81A) + 1205036045;
  HIDWORD(v6) = v91
              + v70
              + 1988827577
              + (((v51 ^ 0x1B06B1AD ^ v72) - ((2 * (v51 ^ 0x1B06B1AD ^ v72)) & 0xCB605B96) + 1706044875) ^ v71);
  LODWORD(v6) = HIDWORD(v6);
  v73 = (v6 >> 9) + (v72 ^ 0x47D3640D) - ((2 * ((v6 >> 9) + (v72 ^ 0x47D3640D))) & 0xD3BCA586) - 371305789;
  v74 = v73 ^ 0xE9DE52C3;
  HIDWORD(v6) = v89
              + v48
              - 1509431912
              + (((v74 | v51 ^ 0xA32A2A5F) - ((2 * (v74 | v51 ^ 0xA32A2A5F)) & 0x8FA6C81A) + 1205036045) ^ v72);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 26) + v74 - ((2 * ((v6 >> 26) + v74)) & 0x3DA4082C) - 1630403562;
  v75 = v51 ^ 0x9ED20416;
  HIDWORD(v6) = v96
              + v52
              - 183909653
              + (((v51 ^ 0x9ED20416 | v72 ^ 0xB82C9BF2)
                - ((2 * (v51 ^ 0x9ED20416 | v72 ^ 0xB82C9BF2)) & 0xD3BCA586)
                - 371305789) ^ v73);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 22) + (v51 ^ 0x9ED20416) - ((2 * ((v6 >> 22) + (v51 ^ 0x9ED20416))) & 0x37DA0F66) + 468518835;
  v76 = v52 ^ 0x1BED07B3;
  HIDWORD(v6) = v103
              + (v72 ^ 0x47D3640D)
              + 1567811323
              + (((v76 | v73 ^ 0x1621AD3C) - ((2 * (v76 | v73 ^ 0x1621AD3C)) & 0x3DA4082C) - 1630403562) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v48) = (v6 >> 17) + v76 - ((2 * ((v6 >> 17) + v76)) & 0x75038E2) - 2086134671;
  v77 = v48 ^ 0x83A81C71;
  HIDWORD(v6) = v94
              + v74
              - 1368235123
              + (((v77 | v51 ^ 0x612DFBE9) - ((2 * (v77 | v51 ^ 0x612DFBE9)) & 0x37DA0F66) + 468518835) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 11) + v77 - ((2 * ((v6 >> 11) + v77)) & 0x12F210D6) + 158926955;
  v78 = v51 ^ 0x979086B;
  HIDWORD(v6) = v101
              + v75
              + 389684503
              + (((v78 | v52 ^ 0xE412F84C) - ((2 * (v78 | v52 ^ 0xE412F84C)) & 0x75038E2) - 2086134671) ^ v48);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 26) + v78 - ((2 * ((v6 >> 26) + v78)) & 0x11A3BB5A) + 147971501;
  v79 = v52 ^ 0x8D1DDAD;
  HIDWORD(v6) = v92
              + v76
              + 1089179622
              + (((v52 ^ 0x8D1DDAD | v48 ^ 0x7C57E38E)
                - ((2 * (v52 ^ 0x8D1DDAD | v48 ^ 0x7C57E38E)) & 0x12F210D6)
                + 158926955) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v48) = (v6 >> 22) + (v52 ^ 0x8D1DDAD) - ((2 * ((v6 >> 22) + (v52 ^ 0x8D1DDAD))) & 0x7418D45C) + 973892142;
  v80 = v48 ^ 0x3A0C6A2E;
  HIDWORD(v6) = v99
              + v77
              - 1311852591
              + (((v80 | v51 ^ 0xF686F794) + 147971501 + (~(2 * (v80 | v51 ^ 0xF686F794)) | 0xEE5C44A5) + 1) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 17) + v80 - ((2 * ((v6 >> 17) + v80)) & 0x34760188) + 440074436;
  v81 = v51 ^ 0x1A3B00C4;
  HIDWORD(v6) = v90
              + v78
              + 929243429
              + (((v81 | v52 ^ 0xF72E2252) - ((2 * (v81 | v52 ^ 0xF72E2252)) & 0x7418D45C) + 973892142) ^ v48);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 11) + v81 - ((2 * ((v6 >> 11) + v81)) & 0x6665052C) + 858948246;
  v82 = v52 ^ 0x33328296;
  HIDWORD(v6) = v97
              + v79
              + 562512291
              + (((v52 ^ 0x33328296 | v48 ^ 0xC5F395D1)
                - ((2 * (v52 ^ 0x33328296 | v48 ^ 0xC5F395D1)) & 0x34760188)
                + 440074436) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v48) = (v6 >> 26) + (v52 ^ 0x33328296) - ((2 * ((v6 >> 26) + (v52 ^ 0x33328296))) & 0xAB2A9E98) - 711635124;
  v83 = v48 ^ 0xD5954F4C;
  HIDWORD(v6) = v104
              + v80
              - 1341412812
              + (((v83 | v51 ^ 0xE5C4FF3B) - ((2 * (v83 | v51 ^ 0xE5C4FF3B)) & 0x6665052C) + 858948246) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 22) + v83 - 1903941011 + (~(2 * ((v6 >> 22) + v83)) | 0xE2F7AB25) + 1;
  v84 = v51 ^ 0x8E842A6D;
  HIDWORD(v6) = v95
              + v81
              + 1423967848
              + (((v51 ^ 0x8E842A6D | v52 ^ 0xCCCD7D69)
                - ((2 * (v51 ^ 0x8E842A6D | v52 ^ 0xCCCD7D69)) & 0xAB2A9E98)
                - 711635124) ^ v48);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v52) = (v6 >> 17) + (v51 ^ 0x8E842A6D) - ((2 * ((v6 >> 17) + (v51 ^ 0x8E842A6D))) & 0x540BA2A6) + 705024339;
  v85 = v52 ^ 0x2A05D153;
  HIDWORD(v6) = v102
              + v82
              - 1649419
              + (((v52 ^ 0x2A05D153 | v48 ^ 0x2A6AB0B3)
                - ((2 * (v52 ^ 0x2A05D153 | v48 ^ 0x2A6AB0B3)) & 0x1D0854DA)
                - 1903941011) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  v86 = (v6 >> 11) + (v52 ^ 0x2A05D153) - ((2 * ((v6 >> 11) + (v52 ^ 0x2A05D153))) & 0x79B2DE08) + 1020882692;
  v87 = v86 ^ 0x3CD96F04;
  HIDWORD(v6) = v93
              + (v48 ^ 0xD5954F4C)
              - 1456324138
              + (((v87 | v51 ^ 0x717BD592) - ((2 * (v87 | v51 ^ 0x717BD592)) & 0x540BA2A6) + 705024339) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v51) = (v6 >> 26) + v87 - ((2 * ((v6 >> 26) + v87)) & 0xF7C8020E) - 68943609;
  HIDWORD(v6) = v100
              + v84
              + 1863955849
              + (((v51 ^ 0xFBE40107 | v52 ^ 0xD5FA2EAC)
                - ((2 * (v51 ^ 0xFBE40107 | v52 ^ 0xD5FA2EAC)) & 0x79B2DE08)
                + 1020882692) ^ v86);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v88 - 0x6241F50E74A1712CLL) += v51 ^ 0xFBE40107;
  LODWORD(v52) = ((2 * ((v6 >> 22) + (v51 ^ 0xFBE40107))) & 0x9BFBFFE4)
               + (((v6 >> 22) + (v51 ^ 0xFBE40107)) ^ 0xCDFDFFF2)
               + 838991886;
  HIDWORD(v6) = result
              + v85
              - 592013809
              + (((v52 | v86 ^ 0xC32690FB) - ((2 * (v52 | v86 ^ 0xC32690FB)) & 0xF7C8020E) - 68943609) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v48) = v52 + (v6 >> 17);
  HIDWORD(v6) = v54 + (v86 ^ 0x3CD96F04) - 1654286619 + ((v48 | v51 ^ 0x41BFEF8) ^ v52);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v88 - 0x6241F50E74A17128) += v48 + (v6 >> 11);
  *(_DWORD *)(v88 - 0x6241F50E74A17124) += v48;
  *(_DWORD *)(v88 - 0x6241F50E74A17120) += v52;
  return result;
}

void sub_21E0E1814()
{
  unint64_t v0;
  char v1;
  int v2;
  char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  v0 = (qword_2553B61C8 - qword_2553C1228) ^ (unint64_t)&v1;
  qword_2553C1228 = 1056581677 * (v0 - 0x3F506021E86BC7B2);
  qword_2553B61C8 = 1056581677 * (v0 ^ 0x3F506021E86BC7B2);
  LOBYTE(v0) = 45 * ((qword_2553B61C8 - 45 * (v0 + 78)) ^ 0xB2);
  v3 = (char *)*(&off_24E21C7C0
               + (v0 ^ byte_21E1991B0[byte_21E18C850[v0] ^ 0x96])
               + 56)
     - 4;
  v2 = 751 - 1990461019 * ((&v2 + 1011570787 - 2 * ((unint64_t)&v2 & 0x3C4B5863)) ^ 0x13AFFAEA);
  sub_21E06A020(&v2);
}

uint64_t sub_21E0E193C(_DWORD *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = *a1 ^ (1292559617 * (((_DWORD)a1 + 1433560265 - 2 * (a1 & 0x557264C9)) ^ 0xF2210CA0));
  result = ((uint64_t (*)(_QWORD, char *))*(&off_24E21C7C0 + (int)(v2 ^ 0x9B42BAEF)))(*(&off_24E21C7C0 + (int)(v2 + 1690125445)), (char *)*(&off_24E21C7C0 + (int)(v2 ^ 0x9B42BB6B)) - 8);
  v4 = *(_DWORD *)*(&off_24E21C7C0 + (int)(v2 ^ 0x9B42BB3A));
  if ((_DWORD)result)
    v4 = -939040971;
  a1[1] = v4;
  return result;
}

_BYTE *sub_21E0E19FC(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_21E0E1A8C + 4 * byte_21E1992B7[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_21E0E1AF0(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _BOOL4 v10;
  _BOOL4 v11;

  v1 = 1438293641 * (((result | 0xFD7EFF5BBD5188CCLL) - result + (result & 0x28100A442AE7733)) ^ 0xEBDB17DF0596DDB3);
  v2 = *(_QWORD *)(result + 16);
  v3 = v2 ^ v1;
  v4 = *(_QWORD *)(result + 40);
  v5 = v4 ^ v1;
  v6 = *(_DWORD *)(result + 32) ^ v1;
  v7 = *(_DWORD *)(result + 24) + v1;
  v8 = *(_DWORD *)(result + 8) - v1;
  v9 = *(_DWORD *)result ^ v1;
  v10 = v5 >= v3;
  v11 = v4 != v2;
  if ((v6 & 1) != 0)
    v11 = v10;
  if (v11)
    v9 = v8;
  *(_DWORD *)(result + 28) = v9 ^ v7;
  return result;
}

uint64_t *sub_21E0E1B9C(uint64_t a1)
{
  int v1;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 8) + 1328090399 * ((a1 & 0x3B291235 | ~(a1 | 0x3B291235)) ^ 0x3B0589F0) + 1615495782;
  v3 = *(_QWORD *)a1;
  v4 = (1328090399
      * (((&v3 | 0x1D287DAF) - &v3 + (&v3 & 0xE2D78250)) ^ 0xE2FB1995)) ^ v1;
  return sub_21E0DD598(&v3);
}

uint64_t sub_21E0E1C70(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x4063EA0FFD2E1D9) = *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL);
  *(_QWORD *)(a1 - 0x4063EA0FFD2E1D1) = *(_QWORD *)(a2 - 0x593A0D77ED43FF8BLL);
  return 0;
}

uint64_t sub_21E0E1CC8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x4063EA0FFD2E1C9) = *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL);
  *(_QWORD *)(a1 - 0x4063EA0FFD2E1C1) = *(_QWORD *)(a2 - 0x593A0D77ED43FF8BLL);
  return 0;
}

uint64_t sub_21E0E1D20(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_DWORD *)(a1 + 16) - 1503746353 * ((((2 * a1) | 0x4522DCEA) - a1 + 1567527307) ^ 0x84F0ACC3) + 268461777;
  v3 = *(_DWORD *)(a1 + 16) - 1503746353 * ((((2 * a1) | 0x4522DCEA) - a1 + 1567527307) ^ 0x84F0ACC3) + 268463994;
  v7 = *(_QWORD *)a1;
  v6 = (1438293641 * ((&v5 + 1751431367 - 2 * ((unint64_t)&v5 & 0x6864B8C7)) ^ 0xD0A3EDB8)) ^ v3;
  v5 = v1;
  return ((uint64_t (*)(uint64_t *))*(&off_24E21C7C0 + v2))(&v5);
}

uint64_t sub_21E0E1E0C(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  int v7;
  BOOL v8;
  uint64_t v9;

  v1 = 1990461019
     * (((result ^ 0x37A510289ECACBA2)
       - 2 * ((result ^ 0x37A510289ECACBA2) & 0x5052C542CFF637D4)
       + 0x5052C542CFF637D4) ^ 0x583999937ED85EFFLL);
  v2 = *(_QWORD *)(result + 8) ^ v1;
  v3 = *(_QWORD *)result + v1;
  v4 = v2 > v3;
  v5 = v2 == v3;
  v6 = v4;
  if (((*(_DWORD *)(result + 36)
       - 1990461019
       * (((result ^ 0x9ECACBA2) - 2 * ((result ^ 0x9ECACBA2) & 0xCFF637D4) - 805947436) ^ 0x7ED85EFF)) & 1) != 0)
    v7 = v6;
  else
    v7 = v5;
  v8 = v7 == 0;
  v9 = 28;
  if (!v8)
    v9 = 32;
  *(_DWORD *)(result + 16) = (*(_DWORD *)(result + v9)
                            - 1990461019
                            * (((result ^ 0x9ECACBA2) - 2 * ((result ^ 0x9ECACBA2) & 0xCFF637D4) - 805947436) ^ 0x7ED85EFF)) ^ (*(_DWORD *)(result + 20) + 1990461019 * (((result ^ 0x9ECACBA2) - 2 * ((result ^ 0x9ECACBA2) & 0xCFF637D4) - 805947436) ^ 0x7ED85EFF));
  return result;
}

uint64_t sub_21E0E1EB0(uint64_t result)
{
  int v1;

  if ((*(unsigned __int8 *)(result + 8) ^ (-41
                                                                         * ((result + 41 - 2 * (result & 0x29)) ^ 0xC7)))
     - 108 >= 3)
    v1 = -939041308;
  else
    v1 = 939001227;
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_21E0E1F08(_QWORD *a1)
{
  uint64_t v1;
  _DWORD *v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  unsigned int v52;
  int v53;
  int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  uint64_t result;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  uint64_t v103;

  v103 = *MEMORY[0x24BDAC8D0];
  v1 = a1[2];
  v2 = (_DWORD *)*a1;
  v87 = (*(_DWORD *)*a1 ^ 0xAFB7FFDE) + 2069494784 + ((2 * *(_DWORD *)*a1) & 0x5F6FFFBC);
  v88 = (v2[1] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[1]) & 0x5F6FFFBC);
  v89 = (v2[2] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[2]) & 0x5F6FFFBC);
  v90 = (v2[3] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[3]) & 0x5F6FFFBC);
  v91 = (v2[4] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[4]) & 0x5F6FFFBC);
  v92 = (v2[5] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[5]) & 0x5F6FFFBC);
  v93 = (v2[6] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[6]) & 0x5F6FFFBC);
  v94 = (v2[7] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[7]) & 0x5F6FFFBC);
  v95 = (v2[8] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[8]) & 0x5F6FFFBC);
  v96 = (v2[9] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[9]) & 0x5F6FFFBC);
  v97 = (v2[10] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[10]) & 0x5F6FFFBC);
  v98 = (v2[11] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[11]) & 0x5F6FFFBC);
  v99 = (v2[12] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[12]) & 0x5F6FFFBC);
  v100 = (v2[13] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[13]) & 0x5F6FFFBC);
  v101 = (v2[14] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[14]) & 0x5F6FFFBC);
  v102 = (v2[15] ^ 0xAFB7FFDE) + 2069494784 + ((2 * v2[15]) & 0x5F6FFFBC);
  v86 = v1;
  v3 = *(_DWORD *)(v1 - 0x599E976286A640DALL);
  v4 = *(_DWORD *)(v1 - 0x599E976286A640D6);
  v5 = *(_DWORD *)(v1 - 0x599E976286A640D2);
  HIDWORD(v6) = *(_DWORD *)(v1 - 0x599E976286A640DELL) + v87 - 1403475814 + (v4 & v3 | v5 & ~v3);
  LODWORD(v6) = HIDWORD(v6);
  v7 = (v6 >> 25) + v3 - ((2 * ((v6 >> 25) + v3)) & 0x47CD4826) + 602317843;
  HIDWORD(v6) = v5 + v88 - 1112163464 + (v3 & (v7 ^ 0x23E6A413) | v4 & ~(v7 ^ 0x23E6A413));
  LODWORD(v6) = HIDWORD(v6);
  v8 = (v6 >> 20) + (v7 ^ 0x23E6A413) - ((2 * ((v6 >> 20) + (v7 ^ 0x23E6A413))) & 0x5D243886) + 781327427;
  HIDWORD(v6) = v4 + v89 - 116493059 + ((v8 ^ 0x2E921C43) & (v7 ^ (v3 - ((2 * v3) & 0x47CD4826) + 602317843)) ^ v3);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v8 ^ 0x2E921C43) - ((2 * ((v6 >> 15) + (v8 ^ 0x2E921C43))) & 0x203DB424) - 1877026286;
  v9 = v1 ^ 0x901EDA12;
  HIDWORD(v6) = v3
              + v90
              - 1767124208
              + ((((v1 ^ 0x901EDA12) & (v7 ^ 0xD74B850 ^ v8))
                - ((2 * ((v1 ^ 0x901EDA12) & (v7 ^ 0xD74B850 ^ v8))) & 0x47CD4826)
                + 602317843) ^ v7);
  LODWORD(v6) = HIDWORD(v6);
  v10 = (v6 >> 10) + (v1 ^ 0x901EDA12) - ((2 * ((v6 >> 10) + (v1 ^ 0x901EDA12))) & 0x23FADC28) - 1845662188;
  HIDWORD(v6) = v91
              + (v7 ^ 0x23E6A413)
              - 899017775
              + ((((v10 ^ 0x91FD6E14) & (v8 ^ 0xBE8CC651 ^ v1))
                - ((2 * ((v10 ^ 0x91FD6E14) & (v8 ^ 0xBE8CC651 ^ v1))) & 0x5D243886)
                + 781327427) ^ v8);
  LODWORD(v6) = HIDWORD(v6);
  v11 = (v6 >> 25) + (v10 ^ 0x91FD6E14) - ((2 * ((v6 >> 25) + (v10 ^ 0x91FD6E14))) & 0x54537C92) - 1440104887;
  HIDWORD(v6) = v92
              + (v8 ^ 0x2E921C43)
              + 477481548
              + ((((v11 ^ 0xAA29BE49) & (v1 ^ 0x1E3B406 ^ v10))
                - ((2 * ((v11 ^ 0xAA29BE49) & (v1 ^ 0x1E3B406 ^ v10))) & 0x203DB424)
                - 1877026286) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 20) + (v11 ^ 0xAA29BE49) - ((2 * ((v6 >> 20) + (v11 ^ 0xAA29BE49))) & 0xE126DAC0) + 1888709984;
  v12 = v1 ^ 0x70936D60;
  HIDWORD(v6) = v93
              + v9
              + 2099137077
              + ((((v1 ^ 0x70936D60) & (v10 ^ 0x3BD4D05D ^ v11))
                - ((2 * ((v1 ^ 0x70936D60) & (v10 ^ 0x3BD4D05D ^ v11))) & 0x23FADC28)
                - 1845662188) ^ v10);
  LODWORD(v6) = HIDWORD(v6);
  v13 = (v6 >> 15) + (v1 ^ 0x70936D60) - ((2 * ((v6 >> 15) + (v1 ^ 0x70936D60))) & 0x3C2B4A02) - 1642748671;
  HIDWORD(v6) = v94
              + (v10 ^ 0x91FD6E14)
              - 768304861
              + ((((v13 ^ 0x9E15A501) & (v11 ^ 0xDABAD329 ^ v1))
                - ((2 * ((v13 ^ 0x9E15A501) & (v11 ^ 0xDABAD329 ^ v1))) & 0x54537C92)
                - 1440104887) ^ v11);
  LODWORD(v6) = HIDWORD(v6);
  v14 = (v6 >> 10) + (v13 ^ 0x9E15A501) - ((2 * ((v6 >> 10) + (v13 ^ 0x9E15A501))) & 0x99BDD91C) - 857805682;
  HIDWORD(v6) = v95
              + (v11 ^ 0xAA29BE49)
              + 1047436538
              + ((((v14 ^ 0xCCDEEC8E) & (v1 ^ 0xEE86C861 ^ v13))
                - ((2 * ((v14 ^ 0xCCDEEC8E) & (v1 ^ 0xEE86C861 ^ v13))) & 0xE126DAC0)
                + 1888709984) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 25) + (v14 ^ 0xCCDEEC8E) - ((2 * ((v6 >> 25) + (v14 ^ 0xCCDEEC8E))) & 0x93D02D4A) - 907536731;
  v15 = v1 ^ 0xC9E816A5;
  HIDWORD(v6) = v96
              + v12
              + 1613954001
              + ((((v1 ^ 0xC9E816A5) & (v13 ^ 0x52CB498F ^ v14))
                - ((2 * ((v1 ^ 0xC9E816A5) & (v13 ^ 0x52CB498F ^ v14))) & 0x3C2B4A02)
                - 1642748671) ^ v13);
  LODWORD(v6) = HIDWORD(v6);
  v16 = (v6 >> 20) + (v1 ^ 0xC9E816A5) - ((2 * ((v6 >> 20) + (v1 ^ 0xC9E816A5))) & 0xF03021B2) + 2014843097;
  v17 = v16 ^ 0x781810D9;
  HIDWORD(v6) = v97
              + (v13 ^ 0x9E15A501)
              - 722640941
              + ((((v16 ^ 0x781810D9) & (v14 ^ 0x536FA2B ^ v1))
                - ((2 * ((v16 ^ 0x781810D9) & (v14 ^ 0x536FA2B ^ v1))) & 0x99BDD91C)
                - 857805682) ^ v14);
  LODWORD(v6) = HIDWORD(v6);
  v18 = (v6 >> 15) + (v16 ^ 0x781810D9) - ((2 * ((v6 >> 15) + (v16 ^ 0x781810D9))) & 0x67F1A044) - 1275539422;
  v19 = v18 ^ 0xB3F8D022;
  HIDWORD(v6) = v98
              + (v14 ^ 0xCCDEEC8E)
              + 1581964256
              + ((((v18 ^ 0xB3F8D022) & (v1 ^ 0xB1F0067C ^ v16))
                - ((2 * ((v18 ^ 0xB3F8D022) & (v1 ^ 0xB1F0067C ^ v16))) & 0x93D02D4A)
                - 907536731) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 10) + (v18 ^ 0xB3F8D022) - ((2 * ((v6 >> 10) + (v18 ^ 0xB3F8D022))) & 0xB9EB74A2) - 587875759;
  v20 = v1 ^ 0xDCF5BA51;
  HIDWORD(v6) = v99
              + v15
              + 1082004804
              + ((((v1 ^ 0xDCF5BA51) & (v16 ^ 0xCBE0C0FB ^ v18))
                - ((2 * ((v1 ^ 0xDCF5BA51) & (v16 ^ 0xCBE0C0FB ^ v18))) & 0xF03021B2)
                + 2014843097) ^ v16);
  LODWORD(v6) = HIDWORD(v6);
  v21 = (v6 >> 25) + (v1 ^ 0xDCF5BA51) - ((2 * ((v6 >> 25) + (v1 ^ 0xDCF5BA51))) & 0x12E6B5F2) - 1988928775;
  HIDWORD(v6) = v100
              + v17
              - 762939979
              + ((((v21 ^ 0x89735AF9) & (v18 ^ 0x6F0D6A73 ^ v1))
                - ((2 * ((v21 ^ 0x89735AF9) & (v18 ^ 0x6F0D6A73 ^ v1))) & 0x67F1A044)
                - 1275539422) ^ v18);
  LODWORD(v6) = HIDWORD(v6);
  v22 = (v6 >> 20) + (v21 ^ 0x89735AF9) - ((2 * ((v6 >> 20) + (v21 ^ 0x89735AF9))) & 0xC55D0E9C) - 491878578;
  v23 = v22 ^ 0xE2AE874E;
  HIDWORD(v6) = v101
              + v19
              + 2070366128
              + ((((v22 ^ 0xE2AE874E) & (v1 ^ 0x5586E0A8 ^ v21))
                - ((2 * ((v22 ^ 0xE2AE874E) & (v1 ^ 0x5586E0A8 ^ v21))) & 0xB9EB74A2)
                - 587875759) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 15) + (v22 ^ 0xE2AE874E) - ((2 * ((v6 >> 15) + (v22 ^ 0xE2AE874E))) & 0x371C1DA2) + 462294737;
  v24 = v1 ^ 0x1B8E0ED1;
  HIDWORD(v6) = v102
              + v20
              + 513936451
              + ((((v1 ^ 0x1B8E0ED1) & (v21 ^ 0x6BDDDDB7 ^ v22))
                - ((2 * ((v1 ^ 0x1B8E0ED1) & (v21 ^ 0x6BDDDDB7 ^ v22))) & 0x12E6B5F2)
                - 1988928775) ^ v21);
  LODWORD(v6) = HIDWORD(v6);
  v25 = (v6 >> 10) + (v1 ^ 0x1B8E0ED1) - ((2 * ((v6 >> 10) + (v1 ^ 0x1B8E0ED1))) & 0x5BC75994) + 769895626;
  HIDWORD(v6) = v88
              + (v21 ^ 0x89735AF9)
              - 888395388
              + ((((v1 ^ 0x366DA21B ^ v25) & v23) - ((2 * ((v1 ^ 0x366DA21B ^ v25) & v23)) & 0x371C1DA2) + 462294737) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = v25 ^ 0x2DE3ACCA;
  LODWORD(v1) = (v6 >> 27)
              + (v25 ^ 0x2DE3ACCA)
              + 2134608069
              + (~(2 * ((v6 >> 27) + (v25 ^ 0x2DE3ACCA))) | 0x188EE75)
              + 1;
  HIDWORD(v6) = v93
              + v23
              - 1792100510
              + ((((v25 ^ 0x52D8240F ^ v1) & v24) - ((2 * ((v25 ^ 0x52D8240F ^ v1) & v24)) & 0x5BC75994) + 769895626) ^ v25);
  LODWORD(v6) = HIDWORD(v6);
  v26 = v1 ^ 0x7F3B88C5;
  v27 = (v6 >> 23) + (v1 ^ 0x7F3B88C5) - ((2 * ((v6 >> 23) + (v1 ^ 0x7F3B88C5))) & 0xDC623136) + 1848711323;
  HIDWORD(v6) = v98
              + v24
              - 78881165
              + ((((v1 ^ 0x110A905E ^ v27) & v2)
                - ((2 * ((v1 ^ 0x110A905E ^ v27) & v2)) & 0xFE77118A)
                + 2134608069) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v28 = v27 ^ 0x6E31189B;
  LODWORD(v1) = (v6 >> 18) + (v27 ^ 0x6E31189B) - ((2 * ((v6 >> 18) + (v27 ^ 0x6E31189B))) & 0xA58AFAB0) + 1388674392;
  HIDWORD(v6) = v87
              + (_DWORD)v2
              - 1096496180
              + ((((v27 ^ 0x3CF465C3 ^ v1) & v26) - ((2 * ((v27 ^ 0x3CF465C3 ^ v1) & v26)) & 0xDC623136) + 1848711323) ^ v27);
  LODWORD(v6) = HIDWORD(v6);
  v29 = v1 ^ 0x52C57D58;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x52C57D58) - ((2 * ((v6 >> 12) + (v1 ^ 0x52C57D58))) & 0x79649884) + 1018317890;
  HIDWORD(v6) = v92
              + v26
              - 1424157569
              + ((((v1 ^ 0x6E77311A ^ v2) & v28)
                - ((2 * ((v1 ^ 0x6E77311A ^ v2) & v28)) & 0xA58AFAB0)
                + 1388674392) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v30 = v2 ^ 0x3CB24C42;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x3CB24C42)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x3CB24C42))) & 0x9333D35E)
              + 1234823599;
  HIDWORD(v6) = v97
              + v28
              - 684582795
              + ((((v2 ^ 0x752BA5ED ^ v1) & v29)
                - ((2 * ((v2 ^ 0x752BA5ED ^ v1) & v29)) & 0x79649884)
                + 1018317890) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v31 = v1 ^ 0x4999E9AF;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0x4999E9AF) - ((2 * ((v6 >> 23) + (v1 ^ 0x4999E9AF))) & 0x3CF09B74) + 511200698;
  HIDWORD(v6) = v102
              + v29
              - 1383077213
              + ((((v1 ^ 0x57E1A415 ^ v2) & v30)
                - ((2 * ((v1 ^ 0x57E1A415 ^ v2) & v30)) & 0x9333D35E)
                + 1234823599) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v32 = v2 ^ 0x1E784DBA;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0x1E784DBA)
              - ((2 * ((v6 >> 18) + (v2 ^ 0x1E784DBA))) & 0x2D56EA52)
              + 380335401;
  HIDWORD(v6) = v91
              + v30
              - 1128136726
              + ((((v2 ^ 0x8D33893 ^ v1) & v31)
                - ((2 * ((v2 ^ 0x8D33893 ^ v1) & v31)) & 0x3CF09B74)
                + 511200698) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v33 = v1 ^ 0x16AB7529;
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0x16AB7529) - ((2 * ((v6 >> 12) + (v1 ^ 0x16AB7529))) & 0xBEF11316) + 1601735051;
  HIDWORD(v6) = v96
              + v31
              - 154152440
              + ((((v1 ^ 0x49D3FCA2 ^ v2) & v32)
                - ((2 * ((v1 ^ 0x49D3FCA2 ^ v2) & v32)) & 0x2D56EA52)
                + 380335401) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v34 = v2 ^ 0x5F78898B;
  LODWORD(v1) = (v6 >> 27)
              + (v2 ^ 0x5F78898B)
              - ((2 * ((v6 >> 27) + (v2 ^ 0x5F78898B))) & 0x52C417B2)
              - 1453192231;
  HIDWORD(v6) = v101
              + v32
              - 1742402568
              + ((((v2 ^ 0xF61A8252 ^ v1) & v33)
                - ((2 * ((v2 ^ 0xF61A8252 ^ v1) & v33)) & 0xBEF11316)
                + 1601735051) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v35 = v1 ^ 0xA9620BD9;
  LODWORD(v2) = (v6 >> 23) + (v1 ^ 0xA9620BD9) - ((2 * ((v6 >> 23) + (v1 ^ 0xA9620BD9))) & 0xC3EA7FAC) - 504021034;
  HIDWORD(v6) = v90
              + v33
              - 909962839
              + ((((v1 ^ 0x4897340F ^ v2) & v34)
                - ((2 * ((v1 ^ 0x4897340F ^ v2) & v34)) & 0x52C417B2)
                - 1453192231) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v36 = v2 ^ 0xE1F53FD6;
  LODWORD(v1) = (v6 >> 18)
              + (v2 ^ 0xE1F53FD6)
              - ((2 * ((v6 >> 18) + (v2 ^ 0xE1F53FD6))) & 0xBFA38994)
              - 539900726;
  HIDWORD(v6) = v95
              + v34
              + 440932623
              + ((((v2 ^ 0x3E24FB1C ^ v1) & v35)
                - ((2 * ((v2 ^ 0x3E24FB1C ^ v1) & v35)) & 0xC3EA7FAC)
                - 504021034) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v2) = (v6 >> 12) + (v1 ^ 0xDFD1C4CA) + 168231549 + (~(2 * ((v6 >> 12) + (v1 ^ 0xDFD1C4CA))) | 0xEBF1FB05) + 1;
  HIDWORD(v6) = v100
              + v35
              + 2127686951
              + ((((v1 ^ 0xD5D6C6B7 ^ v2) & v36)
                - ((2 * ((v1 ^ 0xD5D6C6B7 ^ v2) & v36)) & 0xBFA38994)
                - 539900726) ^ v1);
  LODWORD(v6) = HIDWORD(v6);
  v37 = (v6 >> 27)
      + (v2 ^ 0xA07027D)
      - ((2 * ((v6 >> 27) + (v2 ^ 0xA07027D))) & 0x3B9F4E3A)
      - 1647335651;
  HIDWORD(v6) = v89
              + v36
              - 774002662
              + ((((v2 ^ 0x97C8A560 ^ v37) & (v1 ^ 0xDFD1C4CA))
                - ((2 * ((v2 ^ 0x97C8A560 ^ v37) & (v1 ^ 0xDFD1C4CA))) & 0x140E04FA)
                + 168231549) ^ v2);
  LODWORD(v6) = HIDWORD(v6);
  v38 = v37 ^ 0x9DCFA71D;
  v39 = (v6 >> 23) + (v37 ^ 0x9DCFA71D) - ((2 * ((v6 >> 23) + (v37 ^ 0x9DCFA71D))) & 0x5D2318AC) + 781290582;
  HIDWORD(v6) = v94
              + (v1 ^ 0xDFD1C4CA)
              + 1012729595
              + ((((v37 ^ 0xB35E2B4B ^ v39) & (v2 ^ 0xA07027D))
                - ((2 * ((v37 ^ 0xB35E2B4B ^ v39) & (v2 ^ 0xA07027D))) & 0x3B9F4E3A)
                - 1647335651) ^ v37);
  LODWORD(v6) = HIDWORD(v6);
  v40 = (v6 >> 18) + (v39 ^ 0x2E918C56) - ((2 * ((v6 >> 18) + (v39 ^ 0x2E918C56))) & 0xCED5C656) + 1735058219;
  HIDWORD(v6) = v99
              + (v2 ^ 0xA07027D)
              + 1645760684
              + ((((v39 ^ 0x49FB6F7D ^ v40) & (v37 ^ 0x9DCFA71D))
                - ((2 * ((v39 ^ 0x49FB6F7D ^ v40) & (v37 ^ 0x9DCFA71D))) & 0x5D2318AC)
                + 781290582) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v1) = (v6 >> 12) + (v40 ^ 0x676AE32B);
  v41 = 4 * (v37 & 0xF ^ 0xDu);
  v42 = *(unsigned int *)((char *)&v87 + v41);
  v43 = 4 * (v1 & 0xF);
  *(unsigned int *)((char *)&v87 + v41) = *(unsigned int *)((char *)&v87 + v43);
  v44 = 4 * (v40 & 0xF ^ 0xBu);
  *(unsigned int *)((char *)&v87 + v43) = *(unsigned int *)((char *)&v87 + v44);
  v45 = 4 * (v39 & 0xF ^ 6u);
  *(unsigned int *)((char *)&v87 + v44) = *(unsigned int *)((char *)&v87 + v45);
  v46 = 4 * ((v37 >> 4) ^ 1u);
  v47 = v1 - ((2 * v1) & 0x84E764A0) - 1032605104;
  *(unsigned int *)((char *)&v87 + v45) = *(unsigned int *)((char *)&v87 + v46);
  v48 = 4 * (((v1 - ((2 * v1) & 0xA0) + 80) >> 4) ^ 5u);
  *(unsigned int *)((char *)&v87 + v46) = *(unsigned int *)((char *)&v87 + v48);
  v49 = 4 * ((v40 >> 4) ^ 2u);
  *(unsigned int *)((char *)&v87 + v48) = *(unsigned int *)((char *)&v87 + v49);
  v50 = 4 * ((v39 >> 4) ^ 5u);
  *(unsigned int *)((char *)&v87 + v49) = *(unsigned int *)((char *)&v87 + v50);
  *(unsigned int *)((char *)&v87 + v50) = v42;
  HIDWORD(v6) = v92
              + v38
              - 722977436
              + (((v40 ^ 0xA519517B ^ v47) - ((2 * (v40 ^ 0xA519517B ^ v47)) & 0x5D2318AC) + 781290582) ^ v39);
  LODWORD(v6) = HIDWORD(v6);
  v51 = (v6 >> 28) + (v47 ^ 0xC273B250) - ((2 * ((v6 >> 28) + (v47 ^ 0xC273B250))) & 0x310DFCEC) + 411500150;
  v52 = v96;
  HIDWORD(v6) = v95
              + (v39 ^ 0x2E918C56)
              + 1549793955
              + (((v47 ^ 0xDAF54C26 ^ v51) - ((2 * (v47 ^ 0xDAF54C26 ^ v51)) & 0xCED5C656) + 1735058219) ^ v40);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 21) + (v51 ^ 0x1886FE76) - ((2 * ((v6 >> 21) + (v51 ^ 0x1886FE76))) & 0x51C734C0) + 686004832;
  HIDWORD(v6) = v98
              + (v40 ^ 0x676AE32B)
              + 1116431684
              + (((v51 ^ 0x30656416 ^ v50) - ((2 * (v51 ^ 0x30656416 ^ v50)) & 0x84E764A0) - 1032605104) ^ v47);
  LODWORD(v6) = HIDWORD(v6);
  v53 = v50 ^ 0x28E39A60;
  v54 = (v6 >> 16) + (v50 ^ 0x28E39A60) - ((2 * ((v6 >> 16) + (v50 ^ 0x28E39A60))) & 0xD3C9908) - 2036446076;
  HIDWORD(v6) = v101
              + (v47 ^ 0xC273B250)
              - 757908434
              + (((v50 ^ 0xAE7DD6E4 ^ v54) - ((2 * (v50 ^ 0xAE7DD6E4 ^ v54)) & 0x310DFCEC) + 411500150) ^ v51);
  LODWORD(v6) = HIDWORD(v6);
  v55 = v54 ^ 0x869E4C84;
  v56 = (v6 >> 9) + (v54 ^ 0x869E4C84) - ((2 * ((v6 >> 9) + (v54 ^ 0x869E4C84))) & 0x687B3B8E) - 1271030329;
  HIDWORD(v6) = v88
              + (v51 ^ 0x1886FE76)
              + 2041376358
              + (((v54 ^ 0x32A3D143 ^ v56) - ((2 * (v54 ^ 0x32A3D143 ^ v56)) & 0x51C734C0) + 686004832) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = v56 ^ 0xB43D9DC7;
  LODWORD(v50) = (v6 >> 28) + (v56 ^ 0xB43D9DC7) - ((2 * ((v6 >> 28) + (v56 ^ 0xB43D9DC7))) & 0xCA5F7562) - 449856847;
  HIDWORD(v6) = v91
              + v53
              + 550294475
              + (((v56 ^ 0x51122776 ^ v50) - ((2 * (v56 ^ 0x51122776 ^ v50)) & 0xD3C9908) - 2036446076) ^ v54);
  LODWORD(v6) = HIDWORD(v6);
  v57 = v50 ^ 0xE52FBAB1;
  v58 = (v6 >> 21) + (v50 ^ 0xE52FBAB1) - ((2 * ((v6 >> 21) + (v50 ^ 0xE52FBAB1))) & 0x52BC55E6) - 1453446413;
  HIDWORD(v6) = v94
              + v55
              - 878096510
              + (((v58 ^ v50 ^ 0x4C719042) - 2 * ((v58 ^ v50 ^ 0x4C719042) & 0x343D9DCF ^ (v58 ^ v50) & 8) - 1271030329) ^ v56);
  LODWORD(v6) = HIDWORD(v6);
  v59 = v58 ^ 0xA95E2AF3;
  v60 = (v6 >> 16) + (v58 ^ 0xA95E2AF3) - ((2 * ((v6 >> 16) + (v58 ^ 0xA95E2AF3))) & 0x445C7BAE) - 1574027817;
  HIDWORD(v6) = v97
              + v49
              - 1817329518
              + (((v58 ^ 0xB701724 ^ v60) - ((2 * (v58 ^ 0xB701724 ^ v60)) & 0xCA5F7562) - 449856847) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 9) + (v60 ^ 0xA22E3DD7) - ((2 * ((v6 >> 9) + (v60 ^ 0xA22E3DD7))) & 0xADF3CFBE) - 688265249;
  HIDWORD(v6) = v100
              + v57
              - 41319704
              + (((v60 ^ 0x74D7DA08 ^ v50) - ((2 * (v60 ^ 0x74D7DA08 ^ v50)) & 0x52BC55E6) - 1453446413) ^ v58);
  LODWORD(v6) = HIDWORD(v6);
  v61 = v50 ^ 0xD6F9E7DF;
  v62 = (v6 >> 28) + (v50 ^ 0xD6F9E7DF) - ((2 * ((v6 >> 28) + (v50 ^ 0xD6F9E7DF))) & 0xFE15A2B8) + 2131415388;
  HIDWORD(v6) = v87
              + v59
              - 1081136100
              + (((v50 ^ 0xA9F33683 ^ v62) - ((2 * (v50 ^ 0xA9F33683 ^ v62)) & 0x445C7BAE) - 1574027817) ^ v60);
  LODWORD(v6) = HIDWORD(v6);
  v63 = v62 ^ 0x7F0AD15C;
  v64 = (v6 >> 21) + (v62 ^ 0x7F0AD15C) - ((2 * ((v6 >> 21) + (v62 ^ 0x7F0AD15C))) & 0x7D294962) + 1049928881;
  result = v89;
  HIDWORD(v6) = v90
              + (v60 ^ 0xA22E3DD7)
              - 1445120857
              + (((v62 ^ 0x419E75ED ^ v64) - ((2 * (v62 ^ 0x419E75ED ^ v64)) & 0xADF3CFBE) - 688265249) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 16) + (v64 ^ 0x3E94A4B1) - ((2 * ((v6 >> 16) + (v64 ^ 0x3E94A4B1))) & 0x2C73AAF4) - 1774594694;
  HIDWORD(v6) = v93
              + v61
              - 646569689
              + (((v64 ^ 0xA8AD71CB ^ v50) - ((2 * (v64 ^ 0xA8AD71CB ^ v50)) & 0xFE15A2B8) + 2131415388) ^ v62);
  LODWORD(v6) = HIDWORD(v6);
  v66 = v50 ^ 0x9639D57A;
  v67 = (v6 >> 9) + (v50 ^ 0x9639D57A) - ((2 * ((v6 >> 9) + (v50 ^ 0x9639D57A))) & 0xD612DC7A) + 1795780157;
  HIDWORD(v6) = v96
              + v63
              - 1362963365
              + (((v50 ^ 0xFD30BB47 ^ v67) - ((2 * (v50 ^ 0xFD30BB47 ^ v67)) & 0x7D294962) + 1049928881) ^ v64);
  LODWORD(v6) = HIDWORD(v6);
  v68 = (v6 >> 28) + (v67 ^ 0x6B096E3D) - ((2 * ((v6 >> 28) + (v67 ^ 0x6B096E3D))) & 0x82D7CB84) + 1097590210;
  HIDWORD(v6) = v99
              + (v64 ^ 0x3E94A4B1)
              - 1144414713
              + (((v67 ^ 0x2A628BFF ^ v68) - ((2 * (v67 ^ 0x2A628BFF ^ v68)) & 0x2C73AAF4) - 1774594694) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = v68 ^ 0x416BE5C2;
  LODWORD(v50) = (v6 >> 21) + (v68 ^ 0x416BE5C2) - ((2 * ((v6 >> 21) + (v68 ^ 0x416BE5C2))) & 0x14198B4E) - 1978874457;
  HIDWORD(v6) = v102
              + v66
              - 191856358
              + (((v68 ^ 0xCB672065 ^ v50) - ((2 * (v68 ^ 0xCB672065 ^ v50)) & 0xD612DC7A) + 1795780157) ^ v67);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = v50 ^ 0x8A0CC5A7;
  v69 = (v6 >> 16) + (v50 ^ 0x8A0CC5A7) - ((2 * ((v6 >> 16) + (v50 ^ 0x8A0CC5A7))) & 0x8AC178A0) + 1163967568;
  HIDWORD(v6) = v89
              + (v67 ^ 0x6B096E3D)
              - 1717937529
              + (((v50 ^ 0xCF6C79F7 ^ v69) - ((2 * (v50 ^ 0xCF6C79F7 ^ v69)) & 0x82D7CB84) + 1097590210) ^ v68);
  LODWORD(v6) = HIDWORD(v6);
  v70 = (v6 >> 9) + (v69 ^ 0x4560BC50) - ((2 * ((v6 >> 9) + (v69 ^ 0x4560BC50))) & 0x23B640AA) - 1847910315;
  v71 = v70 ^ 0x91DB2055;
  HIDWORD(v6) = v87
              + v49
              - 921229722
              + (((v71 | v50 ^ 0x75F33A58) - ((2 * (v71 | v50 ^ 0x75F33A58)) & 0x8AC178A0) + 1163967568) ^ v69);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 26) + v71 - ((2 * ((v6 >> 26) + v71)) & 0xE542F340) - 224298592;
  v72 = v50 ^ 0xF2A179A0;
  HIDWORD(v6) = v94
              + v45
              + 404292537
              + (((v50 ^ 0xF2A179A0 | v69 ^ 0xBA9F43AF)
                - ((2 * (v50 ^ 0xF2A179A0 | v69 ^ 0xBA9F43AF)) & 0x23B640AA)
                - 1847910315) ^ v70);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 22) + (v50 ^ 0xF2A179A0) - ((2 * ((v6 >> 22) + (v50 ^ 0xF2A179A0))) & 0x3DFA3E40) - 1627578592;
  v73 = v70 ^ 0x6E24DFAA;
  v74 = v45 ^ 0x9EFD1F20;
  HIDWORD(v6) = v101
              + (v69 ^ 0x4560BC50)
              - 2138953783
              + (((v74 | v73) - ((2 * (v74 | v73)) & 0xE542F340) - 224298592) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 17) + v74 - ((2 * ((v6 >> 17) + v74)) & 0x2338740C) + 295451142;
  v75 = v49 ^ 0x119C3A06;
  HIDWORD(v6) = v92
              + v71
              - 780032933
              + (((v75 | v50 ^ 0xD5E865F) - ((2 * (v75 | v50 ^ 0xD5E865F)) & 0x3DFA3E40) - 1627578592) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 11) + v75 - ((2 * ((v6 >> 11) + v75)) & 0xBDDFB6E8) + 1592777588;
  v76 = v50 ^ 0x5EEFDB74;
  HIDWORD(v6) = v99
              + v72
              + 977886693
              + (((v76 | v45 ^ 0x6102E0DF) - ((2 * (v76 | v45 ^ 0x6102E0DF)) & 0x2338740C) + 295451142) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 26) + v76 - ((2 * ((v6 >> 26) + v76)) & 0x54ACACB0) + 710301272;
  v77 = v45 ^ 0x2A565658;
  HIDWORD(v6) = v90
              + v74
              + 1677381812
              + (((v45 ^ 0x2A565658 | v49 ^ 0xEE63C5F9)
                - ((2 * (v45 ^ 0x2A565658 | v49 ^ 0xEE63C5F9)) & 0xBDDFB6E8)
                + 1592777588) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 22) + (v45 ^ 0x2A565658) - ((2 * ((v6 >> 22) + (v45 ^ 0x2A565658))) & 0xDE1C08E0) + 1863189616;
  v78 = v49 ^ 0x6F0E0470;
  HIDWORD(v6) = v97
              + v75
              - 723650401
              + (((v78 | v50 ^ 0xA110248B) - ((2 * (v78 | v50 ^ 0xA110248B)) & 0x54ACACB0) + 710301272) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 17) + v78 - ((2 * ((v6 >> 17) + v78)) & 0xA07322B0) + 1345950040;
  v79 = v50 ^ 0x50399158;
  HIDWORD(v6) = v88
              + v76
              + 1517445619
              + (((v79 | v45 ^ 0xD5A9A9A7) - ((2 * (v79 | v45 ^ 0xD5A9A9A7)) & 0xDE1C08E0) + 1863189616) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 11) + v79 - ((2 * ((v6 >> 11) + v79)) & 0xDAAD2E1A) + 1834391309;
  v80 = v45 ^ 0x6D56970D;
  HIDWORD(v6) = v95
              + v77
              + 1150714481
              + (((v80 | v49 ^ 0x90F1FB8F) - ((2 * (v80 | v49 ^ 0x90F1FB8F)) & 0xA07322B0) + 1345950040) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = (v6 >> 26) + v80 - ((2 * ((v6 >> 26) + v80)) & 0xA16F5474) + 1354213946;
  v81 = v49 ^ 0x50B7AA3A;
  HIDWORD(v6) = v102
              + v78
              - 753210622
              + (((v81 | v50 ^ 0xAFC66EA7) - ((2 * (v81 | v50 ^ 0xAFC66EA7)) & 0xDAAD2E1A) + 1834391309) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 22) + v81 - ((2 * ((v6 >> 22) + v81)) & 0x92A0EDF2) - 917473543;
  v82 = v50 ^ 0xC95076F9;
  HIDWORD(v6) = v93
              + v79
              + 2012170038
              + (((v50 ^ 0xC95076F9 | v45 ^ 0x92A968F2)
                - ((2 * (v50 ^ 0xC95076F9 | v45 ^ 0x92A968F2)) & 0xA16F5474)
                + 1354213946) ^ v49);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v45) = (v6 >> 17) + (v50 ^ 0xC95076F9) - ((2 * ((v6 >> 17) + (v50 ^ 0xC95076F9))) & 0x932E18CA) + 1234635877;
  v83 = v45 ^ 0x49970C65;
  HIDWORD(v6) = v100
              + v80
              + 586552771
              + (((v83 | v49 ^ 0xAF4855C5) - ((2 * (v83 | v49 ^ 0xAF4855C5)) & 0x92A0EDF2) - 917473543) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  v84 = (v6 >> 11) + v83 - ((2 * ((v6 >> 11) + v83)) & 0x51555130) + 682272920;
  v85 = v84 ^ 0x28AAA898;
  HIDWORD(v6) = v91
              + (v49 ^ 0x50B7AA3A)
              - 868121948
              + (((v85 | v50 ^ 0x36AF8906) - ((2 * (v85 | v50 ^ 0x36AF8906)) & 0x932E18CA) + 1234635877) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v50) = (v6 >> 26) + v85 - ((2 * ((v6 >> 26) + v85)) & 0xCEEAF536) + 1735752347;
  HIDWORD(v6) = v98
              + v82
              - 1842809257
              + (((v50 ^ 0x67757A9B | v45 ^ 0xB668F39A)
                - ((2 * (v50 ^ 0x67757A9B | v45 ^ 0xB668F39A)) & 0x51555130)
                + 682272920) ^ v84);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v86 - 0x599E976286A640DELL) += v50 ^ 0x67757A9B;
  LODWORD(v45) = ((2 * ((v6 >> 22) + (v50 ^ 0x67757A9B))) & 0xF77F79DE)
               + (((v6 >> 22) + (v50 ^ 0x67757A9B)) ^ 0xFBBFBCEF)
               + 71320337;
  HIDWORD(v6) = result
              + v83
              - 3811619
              + (((v45 | v84 ^ 0xD7555767) - ((2 * (v45 | v84 ^ 0xD7555767)) & 0xCEEAF536) + 1735752347) ^ v50);
  LODWORD(v6) = HIDWORD(v6);
  LODWORD(v49) = v45 + (v6 >> 17);
  HIDWORD(v6) = v52 + (v84 ^ 0x28AAA898) - 1066084429 + ((v49 | v50 ^ 0x988A8564) ^ v45);
  LODWORD(v6) = HIDWORD(v6);
  *(_DWORD *)(v86 - 0x599E976286A640DALL) += v49 + (v6 >> 11);
  *(_DWORD *)(v86 - 0x599E976286A640D6) += v49;
  *(_DWORD *)(v86 - 0x599E976286A640D2) += v45;
  return result;
}

uint64_t *sub_21E0E39E0(uint64_t a1)
{
  int v1;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x24BDAC8D0];
  v1 = (*(_DWORD *)a1 ^ (1292559617 * ((((2 * a1) | 0x8367595C) - a1 - 1102294190) ^ 0xE6E0C4C7))) + 1890529686;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = (1328090399 * (((&v3 | 0x9D5488AA) - (&v3 & 0x9D5488AA)) ^ 0x6287EC90)) ^ v1;
  return sub_21E0DD598(&v3);
}

uint64_t sub_21E0E3ABC(uint64_t result)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(result + 16) + 1990461019 * (((result | 0x40281B77) - result + (result & 0xBFD7E488)) ^ 0x6FCCB9FE);
  v2 = *(_QWORD *)(result + 8);
  *(_BYTE *)(v2 - 0x5F0E832B39A845E2) = HIBYTE(v1) ^ 0xFE;
  *(_BYTE *)(v2 - 0x5F0E832B39A845E1) = BYTE2(v1) ^ 0x39;
  *(_BYTE *)(v2 - 0x5F0E832B39A845E0) = BYTE1(v1) ^ 0x22;
  *(_BYTE *)(v2 - 0x5F0E832B39A845DFLL) = v1 ^ 0x90;
  return result;
}

uint64_t sub_21E0E3B70(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 - 0x4063EA0FFD2E1E9) = *(_DWORD *)(a2 - 0x593A0D77ED43FF8FLL);
  *(_QWORD *)(a1 - 0x4063EA0FFD2E1E1) = *(_QWORD *)(a2 - 0x593A0D77ED43FF8BLL);
  return 0;
}

char *sub_21E0E3BC8(char *result, char *a2, unint64_t a3)
{
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;
  unint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  if (((a2 ^ result) & 7) != 0)
  {
    if ((a3 + 7) >= 8)
      return (char *)((uint64_t (*)(void))((char *)&loc_21E0E3C9C + 4 * byte_21E1A52C0[a3 & 7]))();
  }
  else
  {
    v3 = -(int)result & 7;
    switch((int)v3)
    {
      case 1:
        goto LABEL_11;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_9;
      case 4:
        goto LABEL_8;
      case 5:
        goto LABEL_7;
      case 6:
        goto LABEL_6;
      case 7:
        v4 = *result++;
        *a2++ = v4;
LABEL_6:
        v5 = *result++;
        *a2++ = v5;
LABEL_7:
        v6 = *result++;
        *a2++ = v6;
LABEL_8:
        v7 = *result++;
        *a2++ = v7;
LABEL_9:
        v8 = *result++;
        *a2++ = v8;
LABEL_10:
        v9 = *result++;
        *a2++ = v9;
LABEL_11:
        v10 = *result++;
        *a2++ = v10;
        break;
      default:
        break;
    }
    v11 = a3 >= v3;
    v12 = a3 - v3;
    if (!v11)
      v12 = 0;
    v13 = v12 & 7;
    switch(v13)
    {
      case 0uLL:
        return result;
      case 1uLL:
        goto LABEL_24;
      case 2uLL:
        goto LABEL_23;
      case 3uLL:
        goto LABEL_22;
      case 4uLL:
        goto LABEL_21;
      case 5uLL:
        goto LABEL_20;
      case 6uLL:
        goto LABEL_19;
      case 7uLL:
        v14 = *result++;
        *a2++ = v14;
LABEL_19:
        v15 = *result++;
        *a2++ = v15;
LABEL_20:
        v16 = *result++;
        *a2++ = v16;
LABEL_21:
        v17 = *result++;
        *a2++ = v17;
LABEL_22:
        v18 = *result++;
        *a2++ = v18;
LABEL_23:
        v19 = *result++;
        *a2++ = v19;
LABEL_24:
        *a2 = *result;
        break;
      default:
        result = (char *)((uint64_t (*)(void))((char *)&loc_21E0E3CE8 + 4 * byte_21E1A52CF[(v13 >> 3) & 7]))();
        break;
    }
  }
  return result;
}

void apReceiverFairPlayHelper_Finalize(uint64_t a1)
{
  const void *v2;

  if (gLogCategory_APReceiverFairPlayHelper <= 30
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
    *(_QWORD *)(a1 + 16) = 0;
  }
}

CFStringRef apReceiverFairPlayHelper_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;
  CFStringRef v3;

  ASPrintF();
  v2 = CFGetAllocator(a1);
  v3 = CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverFairPlayHelper %p %s>"), a1, 0);
  free(0);
  return v3;
}

const void *APReceiverFairPlayHelperCreate()
{
  const void *Instance;
  int v1;
  _QWORD block[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;

  if (gLogCategory_APReceiverFairPlayHelper <= 30
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APReceiverFairPlayHelperGetTypeID_once != -1)
    dispatch_once(&APReceiverFairPlayHelperGetTypeID_once, &__block_literal_global);
  Instance = (const void *)_CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
LABEL_19:
    if (gLogCategory_APReceiverFairPlayHelper <= 90
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Instance)
    {
      CFRelease(Instance);
      return 0;
    }
    return Instance;
  }
  if (gLogCategory_APReceiverFairPlayHelper <= 30)
  {
    if (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize())
      LogPrintF();
    if (gLogCategory_APReceiverFairPlayHelper <= 30
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  v4 = 0;
  v5 = &v4;
  v6 = 0x2000000000;
  v7 = 0;
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __apReceiverFairPlayHelper_InitContext_block_invoke;
  block[3] = &unk_24E21DB38;
  block[4] = &v4;
  if (apReceiverFairPlayHelper_InitContext_onceToken != -1)
    dispatch_once(&apReceiverFairPlayHelper_InitContext_onceToken, block);
  v1 = *((_DWORD *)v5 + 6);
  _Block_object_dispose(&v4, 8);
  if (v1)
    goto LABEL_19;
  return Instance;
}

void APReceiverFairPlayHelperRemoveAllFPSessions(uint64_t a1)
{
  const __CFArray *v2;
  CFIndex Count;
  CFIndex v4;
  CFIndex i;
  uint64_t Int64;
  const void *v7;

  v2 = *(const __CFArray **)(a1 + 16);
  if (v2)
  {
    Count = CFArrayGetCount(v2);
    if (Count >= 1)
    {
      v4 = Count;
      for (i = 0; i != v4; ++i)
      {
        CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 16), i);
        Int64 = CFDictionaryGetInt64();
        if (gLogCategory_APReceiverFairPlayHelper <= 30
          && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (Int64)
          h5eRUOOOhxuaBmELCqQZZEcx();
      }
    }
    v7 = *(const void **)(a1 + 16);
    if (v7)
    {
      CFRelease(v7);
      *(_QWORD *)(a1 + 16) = 0;
    }
  }
}

uint64_t APReceiverFairPlayHelperCopyAuthorizeItemResponseIntoBuffer(uint64_t a1, const __CFDictionary *a2, const __CFString *a3, char *a4, size_t a5, _QWORD *a6)
{
  int v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v13 = 0;
  v12 = 0;
  if (apReceiverFairPlayHelper_CopyPICResponseData(a1, a2, a3, &v13, &v12))
  {
    APSLogErrorAt();
    v10 = 4294895366;
    goto LABEL_18;
  }
  if (v13)
  {
    if (!Base64EncodeCopyEx())
    {
      v9 = snprintf(a4, a5, "%s: %s\n%s: %s\n", "PIC-Data", 0, "Player-GUID", gFairPlayPlayerGUID);
      if (v9 < 1 || v9 >= (int)a5)
      {
        v10 = 4294895362;
LABEL_17:
        APSLogErrorAt();
        goto LABEL_18;
      }
      goto LABEL_9;
    }
    v10 = 4294895362;
    APSLogErrorAt();
LABEL_18:
    if (gLogCategory_APReceiverFairPlayHelper <= 90
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_11;
  }
  v9 = snprintf(a4, a5, "%s:\n%s: %s\n", "PIC-Data", "Player-GUID", gFairPlayPlayerGUID);
  if (v9 < 1 || v9 >= (int)a5)
  {
    v10 = 4294895362;
    goto LABEL_17;
  }
LABEL_9:
  v10 = 0;
  if (a6)
    *a6 = v9;
LABEL_11:
  if (v13)
    jEHf8Xzsv8K(v13);
  return v10;
}

uint64_t apReceiverFairPlayHelper_CopyPICResponseData(uint64_t a1, CFDictionaryRef theDict, const __CFString *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v8;
  const __CFString *Value;
  const __CFString *v10;
  CFTypeID v11;
  uint64_t v12;
  uint64_t v13;
  UInt8 *v14;
  CFTypeID v15;
  const __CFArray *v16;
  CFArrayRef *v17;
  const __CFArray *v18;
  const __CFDictionary *ValueAtIndex;
  uint64_t Int64;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v25;
  CFMutableDictionaryRef Mutable;
  const __CFDictionary *v27;
  CFArrayRef *v28;
  uint64_t v29;
  CFIndex Count;
  CFIndex v31;
  CFIndex i;
  const __CFDictionary *cf;
  UInt8 *v37;
  CFIndex Length;
  void *v39[5];
  CFRange v40;

  v39[3] = *(void **)MEMORY[0x24BDAC8D0];
  if (a3)
  {
    v8 = CFStringCopyUTF8CString();
    if ((_DWORD)v8)
    {
      v13 = v8;
      APSLogErrorAt();
      v14 = 0;
      goto LABEL_83;
    }
    CFStringGetLength(a3);
  }
  v39[0] = 0;
  Value = (const __CFString *)CFDictionaryGetValue(theDict, CFSTR("PIC-Request"));
  if (Value)
  {
    v10 = Value;
    CFRetain(Value);
    v11 = CFGetTypeID(v10);
    if (v11 == CFStringGetTypeID())
    {
      v12 = CFStringCopyUTF8CString();
      if ((_DWORD)v12)
      {
        v13 = v12;
      }
      else
      {
        CFStringGetLength(v10);
        v13 = Base64DecodeCopy();
        if (!(_DWORD)v13)
        {
          v14 = 0;
          goto LABEL_13;
        }
      }
      APSLogErrorAt();
      if (gLogCategory_APReceiverFairPlayHelper <= 90
        && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v14 = 0;
    }
    else
    {
      v15 = CFGetTypeID(v10);
      if (v15 == CFDataGetTypeID())
      {
        Length = CFDataGetLength((CFDataRef)v10);
        v14 = (UInt8 *)malloc_type_malloc(Length, 0x100004077774924uLL);
        v40.location = 0;
        v40.length = Length;
        CFDataGetBytes((CFDataRef)v10, v40, v14);
      }
      else
      {
        v14 = 0;
      }
      v13 = 0;
    }
LABEL_13:
    CFRelease(v10);
    if ((_DWORD)v13)
    {
      APSLogErrorAt();
      goto LABEL_83;
    }
    goto LABEL_14;
  }
  v14 = 0;
LABEL_14:
  v18 = *(const __CFArray **)(a1 + 16);
  v17 = (CFArrayRef *)(a1 + 16);
  v16 = v18;
  v37 = v14;
  if (v18 && CFArrayGetCount(v16) >= 10)
  {
    ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(*v17, 0);
    Int64 = CFDictionaryGetInt64();
    if (gLogCategory_APReceiverFairPlayHelper <= 30
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Int64)
      h5eRUOOOhxuaBmELCqQZZEcx();
    cf = ValueAtIndex;
    CFArrayRemoveValueAtIndex(*v17, 0);
  }
  else
  {
    cf = 0;
  }
  v21 = 10;
  do
  {
    df35957c4e0();
    if (!v22)
    {
      woqRTqq9PL5McfBs891();
      if ((_DWORD)v23 != -42032 && (_DWORD)v23 != -42180)
      {
        v13 = v23;
        if (!(_DWORD)v23)
          goto LABEL_44;
LABEL_62:
        APSLogErrorAt();
        v27 = cf;
        goto LABEL_65;
      }
    }
    memset(v39, 0, 24);
    if (gLogCategory_APReceiverFairPlayHelper <= 40
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    zxcm2Qme0x(0, 0, (uint64_t)v39);
    v13 = v25;
    if ((_DWORD)v25)
      goto LABEL_41;
    DataToHexCStringEx();
    v13 = XtCqEf5X(0, (uint64_t)v39, (uint64_t)"/var/mobile/Media/iTunes_Control/iTunes/AirTunes/", (uint64_t)&gFairPlayContextID);
    if (gLogCategory_APReceiverFairPlayHelper <= 50
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if ((_DWORD)v13)
LABEL_41:
      usleep(0x30D40u);
    --v21;
  }
  while (v21);
  if ((_DWORD)v13)
    goto LABEL_62;
LABEL_44:
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    v13 = 4294960568;
    goto LABEL_68;
  }
  v27 = Mutable;
  CFDictionarySetCString();
  CFDictionarySetInt64();
  v28 = v17;
  v29 = CFArrayEnsureCreatedAndAppend();
  if ((_DWORD)v29)
  {
    v13 = v29;
    APSLogErrorAt();
    goto LABEL_66;
  }
  if (gLogCategory_APReceiverFairPlayHelper < 31)
  {
    if (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize())
      LogPrintF();
    if (gLogCategory_APReceiverFairPlayHelper <= 10
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      Count = CFArrayGetCount(*v17);
      if (Count >= 1)
      {
        v31 = Count;
        for (i = 0; i != v31; ++i)
        {
          v27 = (const __CFDictionary *)CFArrayGetValueAtIndex(*v28, i);
          if (gLogCategory_APReceiverFairPlayHelper <= 10
            && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
          {
            CFDictionaryGetValue(v27, CFSTR("uuid"));
            CFDictionaryGetValue(v27, CFSTR("id"));
            v28 = v17;
            LogPrintF();
          }
        }
      }
    }
  }
  v13 = 0;
LABEL_65:
  if (!v27)
    goto LABEL_67;
LABEL_66:
  CFRelease(v27);
LABEL_67:
  if (!(_DWORD)v13)
    goto LABEL_72;
LABEL_68:
  if (gLogCategory_APReceiverFairPlayHelper <= 90
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_72:
  if (!(_DWORD)v13)
  {
    *a4 = 0;
    *a5 = 0;
    v14 = v37;
    goto LABEL_74;
  }
  APSLogErrorAt();
  v14 = v37;
LABEL_83:
  if (gLogCategory_APReceiverFairPlayHelper <= 90
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_74:
  if (v14)
    free(v14);
  return v13;
}

uint64_t APReceiverFairPlayHelperCopyAuthorizeItemResponseIntoDictionary(uint64_t a1, const __CFDictionary *a2, const __CFString *a3, uint64_t a4)
{
  uint64_t v4;
  const __CFAllocator *v5;
  CFDataRef v6;
  CFStringRef v7;
  CFIndex length;
  UInt8 *bytes;

  v4 = a4;
  length = 0;
  bytes = 0;
  if (a4)
  {
    if (!apReceiverFairPlayHelper_CopyPICResponseData(a1, a2, a3, &bytes, &length))
    {
      v5 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
      if (bytes)
      {
        v6 = CFDataCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], bytes, length);
        CFDictionaryAddValue(*(CFMutableDictionaryRef *)v4, CFSTR("PIC-Data"), v6);
        if (v6)
          CFRelease(v6);
      }
      v7 = CFStringCreateWithCString(v5, gFairPlayPlayerGUID, 0x8000100u);
      CFDictionaryAddValue(*(CFMutableDictionaryRef *)v4, CFSTR("playerGUID"), v7);
      if (v7)
        CFRelease(v7);
      v4 = 0;
      goto LABEL_9;
    }
    APSLogErrorAt();
    v4 = 4294895366;
  }
  else
  {
    APSLogErrorAt();
  }
  if (gLogCategory_APReceiverFairPlayHelper <= 90
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_9:
  if (bytes)
    jEHf8Xzsv8K((uint64_t)bytes);
  return v4;
}

uint64_t APReceiverFairPlayHelperProcessFPInfo(uint64_t a1, __CFDictionary *a2, const char **a3)
{
  uint64_t TypedValue;
  const __CFString *v7;
  const __CFArray *v8;
  CFIndex Count;
  CFIndex v10;
  uint64_t v11;
  const void *v12;
  int v13;
  const void *v14;
  uint64_t Int64;
  const __CFData *v17;
  uint64_t v18;
  const char *v19;
  const __CFData *v20;
  const __CFData *v21;
  CFIndex Length;
  uint64_t v23;
  const UInt8 *BytePtr;
  uint64_t v25;
  int v27;
  uint64_t v28;

  CFStringGetTypeID();
  TypedValue = CFDictionaryGetTypedValue();
  if (TypedValue)
    v7 = (const __CFString *)TypedValue;
  else
    v7 = CFSTR("00000000-0000-0000-0000-000000000000");
  v8 = *(const __CFArray **)(a1 + 16);
  if (v8)
  {
    Count = CFArrayGetCount(v8);
    v10 = Count - 1;
    if (Count >= 1)
    {
      v11 = Count;
      while (1)
      {
        CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 16), --v11);
        CFStringGetTypeID();
        v12 = (const void *)CFDictionaryGetTypedValue();
        if (v12)
        {
          if (CFEqual(v12, v7))
            break;
        }
        if (v11 <= 0)
          goto LABEL_10;
      }
      Int64 = CFDictionaryGetInt64();
      if (!Int64)
      {
LABEL_10:
        v13 = 1;
        goto LABEL_13;
      }
      goto LABEL_28;
    }
    v13 = 0;
  }
  else
  {
    v13 = 0;
    v10 = -1;
  }
LABEL_13:
  if (gLogCategory_APReceiverFairPlayHelper <= 20
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!v13)
    goto LABEL_22;
  while (1)
  {
    CFArrayGetValueAtIndex(*(CFArrayRef *)(a1 + 16), v10);
    CFStringGetTypeID();
    v14 = (const void *)CFDictionaryGetTypedValue();
    if (v14)
    {
      if (CFEqual(v14, CFSTR("00000000-0000-0000-0000-000000000000")))
        break;
    }
    if (v10-- <= 0)
      goto LABEL_22;
  }
  Int64 = CFDictionaryGetInt64();
  if (!Int64)
  {
LABEL_22:
    if (gLogCategory_APReceiverFairPlayHelper <= 20
      && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    Int64 = 0;
    goto LABEL_35;
  }
LABEL_28:
  if (gLogCategory_APReceiverFairPlayHelper <= 30
    && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionarySetInt64();
LABEL_35:
  CFDataGetTypeID();
  v17 = (const __CFData *)CFDictionaryGetTypedValue();
  if (v17)
  {
    v18 = 0;
    if (CFDataGetLength(v17))
      v19 = "(NC-D)";
    else
      v19 = "(C-D)";
  }
  else
  {
    CFDataGetTypeID();
    v20 = (const __CFData *)CFDictionaryGetTypedValue();
    if (v20)
    {
      v21 = v20;
      v28 = 0;
      v27 = 0;
      Length = CFDataGetLength(v20);
      if (Length)
        v19 = "(NC-Cloud-D)";
      else
        v19 = "(C-Cloud-D)";
      if (Int64)
      {
        v23 = Length;
        BytePtr = CFDataGetBytePtr(v21);
        nXJ7Amk1zyK93(Int64, (uint64_t)BytePtr, v23, (uint64_t)&v28, (uint64_t)&v27);
        if ((_DWORD)v25)
        {
          v18 = v25;
        }
        else
        {
          v18 = CFDictionarySetData();
          jEHf8Xzsv8K(v28);
          if (!(_DWORD)v18)
          {
            CFDictionaryRemoveValue(a2, CFSTR("PD-Info"));
            goto LABEL_48;
          }
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        v18 = 4294960528;
      }
      if (gLogCategory_APReceiverFairPlayHelper <= 90
        && (gLogCategory_APReceiverFairPlayHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      v18 = 0;
      v19 = "(N-D)";
    }
  }
LABEL_48:
  if (a3)
    *a3 = v19;
  return v18;
}

uint64_t _APMediaDataControlServerGetTypeID()
{
  uint64_t result;

  result = _CFRuntimeRegisterClass();
  gAPMediaDataControlServerTypeID = result;
  return result;
}

void _APMediaDataControlServerFinalize(uint64_t a1)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  NSObject *v8;
  NSObject *v9;
  int v10;
  NSObject *v11;
  NSObject *v12;
  int v13;
  CFDictionaryRef v14;

  if (*(_BYTE *)(a1 + 104))
  {
    v13 = FatalErrorF();
    APMediaDataControlServerCreate(v13, v14);
  }
  else
  {
    if (gLogCategory_APMediaDataControlServer <= 50
      && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v2 = *(const void **)(a1 + 48);
    if (v2)
    {
      CFRelease(v2);
      *(_QWORD *)(a1 + 48) = 0;
    }
    v3 = *(const void **)(a1 + 88);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(a1 + 88) = 0;
    }
    v4 = *(const void **)(a1 + 96);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(a1 + 96) = 0;
    }
    v5 = *(const void **)(a1 + 160);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(a1 + 160) = 0;
    }
    v6 = *(const void **)(a1 + 40);
    if (v6)
    {
      CFRelease(v6);
      *(_QWORD *)(a1 + 40) = 0;
    }
    v7 = *(const void **)(a1 + 176);
    if (v7)
    {
      CFRelease(v7);
      *(_QWORD *)(a1 + 176) = 0;
    }
    v8 = *(NSObject **)(a1 + 128);
    if (v8)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 128));
      dispatch_release(v8);
      *(_QWORD *)(a1 + 128) = 0;
    }
    v9 = *(NSObject **)(a1 + 136);
    if (v9)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
      dispatch_release(v9);
      *(_QWORD *)(a1 + 136) = 0;
    }
    v10 = *(_DWORD *)(a1 + 144);
    if ((v10 & 0x80000000) == 0)
    {
      if (close(v10) && *__error())
        __error();
      *(_DWORD *)(a1 + 144) = -1;
    }
    if (*(_QWORD *)(a1 + 152))
    {
      NetSocket_Delete();
      *(_QWORD *)(a1 + 152) = 0;
    }
    v11 = *(NSObject **)(a1 + 112);
    if (v11)
    {
      dispatch_release(v11);
      *(_QWORD *)(a1 + 112) = 0;
    }
    v12 = *(NSObject **)(a1 + 120);
    if (v12)
    {
      dispatch_release(v12);
      *(_QWORD *)(a1 + 120) = 0;
    }
  }
}

uint64_t APMediaDataControlServerCreate(uint64_t a1, CFDictionaryRef theDict, __int128 *a3, uint64_t *a4)
{
  BOOL v8;
  const void *TypedValue;
  const void *v10;
  const __CFString *v11;
  dispatch_qos_class_t Int64;
  int Int64Ranged;
  uint64_t Instance;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  const void *v18;
  NSObject *v19;
  dispatch_queue_t v20;
  NSObject *v21;
  dispatch_queue_t v22;
  const void *v23;
  const void *v24;
  CFMutableDictionaryRef Mutable;
  int v28;
  unsigned int v29;
  char label[80];
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  if (CFDictionaryContainsKey(theDict, CFSTR("MDC::AllowP2P")))
    v8 = CFDictionaryGetInt64() != 0;
  else
    v8 = 0;
  if (CFDictionaryContainsKey(theDict, CFSTR("MDC::EncryptionReadKey")))
  {
    CFDataGetTypeID();
    TypedValue = (const void *)CFDictionaryGetTypedValue();
  }
  else
  {
    TypedValue = 0;
  }
  if (CFDictionaryContainsKey(theDict, CFSTR("MDC::EncryptionWriteKey")))
  {
    CFDataGetTypeID();
    v10 = (const void *)CFDictionaryGetTypedValue();
  }
  else
  {
    v10 = 0;
  }
  if (CFDictionaryContainsKey(theDict, CFSTR("MDC::Label")))
  {
    CFStringGetTypeID();
    v11 = (const __CFString *)CFDictionaryGetTypedValue();
  }
  else
  {
    v11 = &stru_24E220A30;
  }
  if (CFDictionaryContainsKey(theDict, CFSTR("MDC::QualityOfService")))
    Int64 = CFDictionaryGetInt64();
  else
    Int64 = QOS_CLASS_DEFAULT;
  if (CFDictionaryContainsKey(theDict, CFSTR("MDC::TimeoutSecs")))
    Int64Ranged = CFDictionaryGetInt64Ranged();
  else
    Int64Ranged = -1;
  if (!*(_BYTE *)(a1 + 1) || (TypedValue != 0) != (v10 != 0) || !a3 || !*((_QWORD *)a3 + 1))
  {
    APSLogErrorAt();
    return -6705;
  }
  v28 = Int64Ranged;
  if (gAPMediaDataControlServerInitOnce != -1)
    dispatch_once_f(&gAPMediaDataControlServerInitOnce, 0, (dispatch_function_t)_APMediaDataControlServerGetTypeID);
  Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return -6728;
  }
  v15 = Instance;
  *(_QWORD *)(Instance + 176) = 0;
  *(_OWORD *)(Instance + 144) = 0u;
  *(_OWORD *)(Instance + 160) = 0u;
  *(_OWORD *)(Instance + 112) = 0u;
  *(_OWORD *)(Instance + 128) = 0u;
  *(_OWORD *)(Instance + 80) = 0u;
  *(_OWORD *)(Instance + 96) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 16) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  v16 = *a3;
  *(_QWORD *)(Instance + 32) = *((_QWORD *)a3 + 2);
  *(_OWORD *)(Instance + 16) = v16;
  if (*(_QWORD *)a3)
  {
    v17 = FigCFWeakReferenceHolderCreateWithReferencedObject();
    *(_QWORD *)(v15 + 40) = v17;
    if (!v17)
      goto LABEL_59;
  }
  *(_DWORD *)(v15 + 144) = -1;
  *(_QWORD *)(v15 + 152) = 0;
  SockAddrCopy();
  v18 = *(const void **)(v15 + 48);
  if (v11)
    CFRetain(v11);
  *(_QWORD *)(v15 + 48) = v11;
  if (v18)
    CFRelease(v18);
  SNPrintF();
  v19 = dispatch_queue_attr_make_with_qos_class(0, Int64, 0);
  v20 = dispatch_queue_create(label, v19);
  *(_QWORD *)(v15 + 112) = v20;
  if (!v20)
    goto LABEL_59;
  SNPrintF();
  v21 = dispatch_queue_attr_make_with_qos_class(0, Int64, 0);
  v22 = dispatch_queue_create(label, v21);
  *(_QWORD *)(v15 + 120) = v22;
  if (!v22)
    goto LABEL_59;
  *(_BYTE *)(v15 + 84) = v8;
  v23 = *(const void **)(v15 + 88);
  if (TypedValue)
    CFRetain(TypedValue);
  *(_QWORD *)(v15 + 88) = TypedValue;
  if (v23)
    CFRelease(v23);
  v24 = *(const void **)(v15 + 96);
  if (v10)
    CFRetain(v10);
  *(_QWORD *)(v15 + 96) = v10;
  if (v24)
    CFRelease(v24);
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  *(_QWORD *)(v15 + 160) = Mutable;
  if (!Mutable)
  {
LABEL_59:
    APSLogErrorAt();
    v29 = -6728;
    goto LABEL_60;
  }
  v29 = ServerSocketOpen();
  if (v29)
  {
    APSLogErrorAt();
LABEL_60:
    CFRelease((CFTypeRef)v15);
    return v29;
  }
  if (*(_BYTE *)(v15 + 84))
    SocketSetP2P();
  *(_DWORD *)(v15 + 168) = v28;
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APTTrafficMetricsCreate();
  *a4 = v15;
  return v29;
}

void controlServer_startInternal(uint64_t *a1)
{
  uint64_t v2;
  dispatch_source_t v3;
  NSObject *v4;
  void *v5;
  int v6;

  v2 = *a1;
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_BYTE *)(v2 + 104))
    goto LABEL_8;
  v3 = dispatch_source_create(MEMORY[0x24BDACA00], *(int *)(v2 + 144), 0, *(dispatch_queue_t *)(v2 + 112));
  if (v3)
  {
    v4 = v3;
    v5 = (void *)CFRetain((CFTypeRef)v2);
    dispatch_set_context(v4, v5);
    dispatch_source_set_event_handler_f(v4, (dispatch_function_t)controlServer_acceptConnection);
    dispatch_source_set_cancel_handler_f(v4, (dispatch_function_t)controlServer_listenSourceCancelled);
    *(_QWORD *)(v2 + 128) = v4;
    *(_BYTE *)(v2 + 104) = 1;
    dispatch_resume(v4);
LABEL_8:
    v6 = 0;
    goto LABEL_9;
  }
  APSLogErrorAt();
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    v6 = -6728;
    LogPrintF();
  }
  else
  {
    v6 = -6728;
  }
LABEL_9:
  *((_DWORD *)a1 + 2) = v6;
}

uint64_t controlServer_acceptConnection(uint64_t a1)
{
  int v2;
  int v3;
  const void *v4;
  int v5;
  const void *v6;
  int Native;
  dispatch_source_t v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  int v12;
  uint64_t result;

  if (!*(_BYTE *)(a1 + 104))
    goto LABEL_24;
  if (gLogCategory_APMediaDataControlServer <= 30
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v2 = SocketAccept();
  if (v2)
  {
    v12 = v2;
LABEL_35:
    APSLogErrorAt();
    goto LABEL_25;
  }
  if (*(_BYTE *)(a1 + 84))
    SocketSetP2P();
  setsockopt(-1, 6, 1, &controlServer_acceptConnection_sOne, 4u);
  v3 = NetSocket_CreateWithNative();
  if (v3)
  {
    v12 = v3;
    goto LABEL_35;
  }
  v4 = *(const void **)(a1 + 88);
  if (!v4)
    goto LABEL_15;
  if (!*(_QWORD *)(a1 + 96))
  {
LABEL_14:
    CFRelease(v4);
    *(_QWORD *)(a1 + 88) = 0;
    goto LABEL_15;
  }
  CFDataGetBytePtr((CFDataRef)v4);
  CFDataGetBytePtr(*(CFDataRef *)(a1 + 96));
  v5 = NetSocketChaCha20Poly1305Configure();
  if (v5)
  {
    v12 = v5;
    goto LABEL_35;
  }
  v4 = *(const void **)(a1 + 88);
  if (v4)
    goto LABEL_14;
LABEL_15:
  v6 = *(const void **)(a1 + 96);
  if (v6)
  {
    CFRelease(v6);
    *(_QWORD *)(a1 + 96) = 0;
  }
  Native = NetSocket_GetNative();
  v8 = dispatch_source_create(MEMORY[0x24BDACA00], Native, 0, *(dispatch_queue_t *)(a1 + 112));
  if (!v8)
  {
    APSLogErrorAt();
    v12 = -6728;
    goto LABEL_25;
  }
  v9 = v8;
  APTTrafficMetricsConnectionFormed();
  v10 = (void *)CFRetain((CFTypeRef)a1);
  dispatch_set_context(v9, v10);
  dispatch_source_set_event_handler_f(v9, (dispatch_function_t)controlServer_receiveData);
  dispatch_source_set_cancel_handler_f(v9, (dispatch_function_t)controlServer_dataSourceCancelled);
  *(_QWORD *)(a1 + 136) = v9;
  *(_QWORD *)(a1 + 152) = 0;
  v11 = *(NSObject **)(a1 + 128);
  if (v11)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 128));
    dispatch_release(v11);
    *(_QWORD *)(a1 + 128) = 0;
  }
  dispatch_resume(v9);
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_24:
  v12 = 0;
LABEL_25:
  result = 0;
  if (v12)
  {
    if (gLogCategory_APMediaDataControlServer <= 90)
    {
      if (gLogCategory_APMediaDataControlServer != -1)
        return LogPrintF();
      result = _LogCategory_Initialize();
      if ((_DWORD)result)
        return LogPrintF();
    }
  }
  return result;
}

void controlServer_listenSourceCancelled(_DWORD *cf)
{
  int v2;

  v2 = cf[36];
  if ((v2 & 0x80000000) == 0)
  {
    if (close(v2) && *__error())
      __error();
    cf[36] = -1;
  }
  CFRelease(cf);
}

void controlServer_receiveData(uint64_t a1)
{
  NSObject *v2;
  int v3;
  const __CFData *v4;
  UInt8 *v5;
  UInt8 *v6;
  int v7;
  const __CFAllocator *v8;
  const __CFData *v9;
  CFPropertyListRef v10;
  const void *v11;
  CFTypeID v12;
  int v13;
  const void *Int64;
  const void *v15;
  const __CFArray *Value;
  const __CFArray *v17;
  const void *ValueAtIndex;
  const void *v19;
  _QWORD *v20;
  _QWORD *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  NSObject *v25;
  const void *v26;
  _QWORD *v27;
  _QWORD *v28;
  const void *v29;
  int8x8_t v30;
  unint64_t v31;
  int v32;

  v2 = *(NSObject **)(a1 + 136);
  if (!dispatch_source_get_data(v2))
  {
    if (v2)
    {
      dispatch_source_cancel(v2);
      dispatch_release(v2);
      *(_QWORD *)(a1 + 136) = 0;
    }
    return;
  }
  if (!*(_BYTE *)(a1 + 104))
    return;
  if (v2)
  {
    if (gLogCategory_APMediaDataControlServer <= 30
      && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APTTrafficMetricsMessageReadStarted();
    v3 = (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 + 152) + 24))(*(_QWORD *)(a1 + 152), 32);
    if (v3)
    {
      v13 = v3;
      APSLogErrorAt();
    }
    else
    {
      v30 = vrev32_s8(0);
      v31 = bswap64(0);
      v32 = bswap32(0);
      v4 = (const __CFData *)(v30.u32[0] - 32);
      v5 = (UInt8 *)malloc_type_malloc((size_t)v4, 0x755FD699uLL);
      if (v5)
      {
        v6 = v5;
        if (v30.u32[0] == 32)
        {
          APTTrafficMetricsMessageReadFinished();
          v11 = 0;
          goto LABEL_17;
        }
        v7 = (*(uint64_t (**)(_QWORD, const __CFData *))(*(_QWORD *)(a1 + 152) + 24))(*(_QWORD *)(a1 + 152), v4);
        if (v7)
        {
          v13 = v7;
          APSLogErrorAt();
        }
        else
        {
          APTTrafficMetricsMessageReadFinished();
          v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
          v9 = CFDataCreateWithBytesNoCopy((CFAllocatorRef)*MEMORY[0x24BDBD240], v6, (CFIndex)v4, (CFAllocatorRef)*MEMORY[0x24BDBD258]);
          if (v9)
          {
            v4 = v9;
            v10 = CFPropertyListCreateWithData(v8, v9, 0, 0, 0);
            v11 = v10;
            if (!v10)
            {
              v13 = -6728;
              goto LABEL_83;
            }
            v12 = CFGetTypeID(v10);
            if (v12 != CFDictionaryGetTypeID())
            {
              v13 = -6756;
LABEL_83:
              APSLogErrorAt();
              free(v6);
              Int64 = 0;
LABEL_45:
              CFRelease(v4);
LABEL_46:
              if (v11)
                CFRelease(v11);
              if (Int64)
                CFRelease(Int64);
              if (!v13)
                return;
              goto LABEL_51;
            }
LABEL_17:
            Int64 = 0;
            switch(v30.i32[1])
            {
              case 0x6173796E:
                goto LABEL_21;
              case 0x72706C79:
                Int64 = (const void *)CFNumberCreateInt64();
                if (Int64)
                {
                  Value = (const __CFArray *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 160), Int64);
                  if (!Value)
                  {
                    APSLogErrorAt();
                    v13 = -6727;
                    goto LABEL_44;
                  }
                  v17 = Value;
                  ValueAtIndex = CFArrayGetValueAtIndex(Value, 0);
                  v19 = CFArrayGetValueAtIndex(v17, 1);
                  controlServer_invokeResponse(a1, (uint64_t)ValueAtIndex, v11, v32, (uint64_t)v19);
                  CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(a1 + 160), Int64);
LABEL_43:
                  APTTrafficMetricsMessageProcessed();
                  v13 = 0;
                  goto LABEL_44;
                }
                break;
              case 0x73796E63:
                Int64 = (const void *)CFNumberCreateInt64();
                if (Int64)
                {
LABEL_21:
                  if (!v32 || !v11)
                  {
                    APSLogErrorAt();
                    v13 = -6705;
                    goto LABEL_95;
                  }
                  if (*(_QWORD *)(a1 + 16))
                  {
                    v15 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
                    if (!v15)
                    {
                      APSLogErrorAt();
                      if (gLogCategory_APMediaDataControlServer <= 60
                        && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      v13 = -6709;
                      goto LABEL_95;
                    }
                  }
                  else
                  {
                    v15 = 0;
                  }
                  v20 = malloc_type_calloc(1uLL, 0x38uLL, 0x10E0040FFDB73A6uLL);
                  v21 = v20;
                  if (v20)
                  {
                    v20[1] = a1;
                    *v20 = *(_QWORD *)(a1 + 24);
                    v20[2] = Int64;
                    v20[3] = v31;
                    *((_DWORD *)v20 + 8) = v32;
                    v20[5] = v11;
                    v20[6] = v15;
                    CFRetain((CFTypeRef)a1);
                    v22 = (const void *)v21[2];
                    if (v22)
                      CFRetain(v22);
                    v23 = (const void *)v21[5];
                    if (v23)
                      CFRetain(v23);
                    v24 = (const void *)v21[6];
                    if (v24)
                      CFRetain(v24);
                    dispatch_async_f(*(dispatch_queue_t *)(a1 + 120), v21, (dispatch_function_t)controlServer_delegateRequestInternal);
                    v13 = 0;
                    if (v15)
                      goto LABEL_41;
                  }
                  else
                  {
                    APSLogErrorAt();
                    v13 = -6728;
                    if (v15)
LABEL_41:
                      CFRelease(v15);
                  }
                  if (v21)
                    goto LABEL_43;
LABEL_95:
                  APSLogErrorAt();
LABEL_44:
                  free(v6);
                  if (!v4)
                    goto LABEL_46;
                  goto LABEL_45;
                }
                break;
              default:
                v13 = -6717;
                goto LABEL_44;
            }
            APSLogErrorAt();
            v13 = -6728;
            goto LABEL_44;
          }
          APSLogErrorAt();
          v13 = -6728;
        }
        free(v6);
      }
      else
      {
        APSLogErrorAt();
        v13 = -6728;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    v13 = -6723;
  }
LABEL_51:
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APSLogErrorAt();
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v25 = *(NSObject **)(a1 + 136);
  if (v25)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
    dispatch_release(v25);
    *(_QWORD *)(a1 + 136) = 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    if (*(_QWORD *)(a1 + 16))
    {
      v26 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
      if (!v26)
      {
        APSLogErrorAt();
        if (gLogCategory_APMediaDataControlServer <= 60
          && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return;
      }
    }
    else
    {
      v26 = 0;
    }
    v27 = malloc_type_calloc(1uLL, 0x20uLL, 0x10E00402F6D9A90uLL);
    if (!v27)
    {
      APSLogErrorAt();
      if (!v26)
        return;
LABEL_72:
      CFRelease(v26);
      return;
    }
    v28 = v27;
    v27[1] = a1;
    *v27 = *(_QWORD *)(a1 + 32);
    *((_DWORD *)v27 + 4) = v13;
    v27[3] = v26;
    CFRetain((CFTypeRef)a1);
    v29 = (const void *)v28[3];
    if (v29)
      CFRetain(v29);
    dispatch_async_f(*(dispatch_queue_t *)(a1 + 120), v28, (dispatch_function_t)controlServer_delegateFailureInternal);
    if (v26)
      goto LABEL_72;
  }
}

void controlServer_dataSourceCancelled(_QWORD *a1)
{
  NetSocket_Disconnect();
  if (a1[19])
  {
    NetSocket_Delete();
    a1[19] = 0;
  }
  CFRelease(a1);
}

void controlServer_delegateRequestInternal(_QWORD *a1)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;

  ((void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))*a1)(a1[1], a1[2], *((unsigned int *)a1 + 8), a1[3], a1[5], a1[6]);
  v2 = (const void *)a1[1];
  if (v2)
    CFRelease(v2);
  v3 = (const void *)a1[2];
  if (v3)
    CFRelease(v3);
  v4 = (const void *)a1[5];
  if (v4)
    CFRelease(v4);
  v5 = (const void *)a1[6];
  if (v5)
    CFRelease(v5);
  free(a1);
}

void controlServer_invokeResponse(uint64_t a1, uint64_t a2, const void *a3, int a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;

  if (!a1)
    goto LABEL_9;
  if (!a2)
    return;
  v10 = malloc_type_calloc(1uLL, 0x20uLL, 0x10E0040443F8196uLL);
  if (!v10)
  {
LABEL_9:
    APSLogErrorAt();
    return;
  }
  v11 = v10;
  *v10 = a2;
  v10[1] = a3;
  *((_DWORD *)v10 + 4) = a4;
  v10[3] = a5;
  if (a3)
    CFRetain(a3);
  dispatch_async_f(*(dispatch_queue_t *)(a1 + 120), v11, (dispatch_function_t)controlServer_invokeResponseInternal);
}

void controlServer_delegateFailureInternal(_QWORD *a1)
{
  const void *v2;
  const void *v3;

  ((void (*)(_QWORD, _QWORD, _QWORD))*a1)(a1[1], *((unsigned int *)a1 + 4), a1[3]);
  v2 = (const void *)a1[1];
  if (v2)
    CFRelease(v2);
  v3 = (const void *)a1[3];
  if (v3)
    CFRelease(v3);
  free(a1);
}

void controlServer_invokeResponseInternal(_QWORD *a1)
{
  const void *v2;

  ((void (*)(_QWORD, _QWORD, _QWORD))*a1)(a1[1], *((unsigned int *)a1 + 4), a1[3]);
  v2 = (const void *)a1[1];
  if (v2)
    CFRelease(v2);
  free(a1);
}

void controlServer_stopInternal(uint64_t *a1)
{
  uint64_t v2;
  NSObject *v3;
  NSObject *v4;

  v2 = *a1;
  if (gLogCategory_APMediaDataControlServer <= 50
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_BYTE *)(v2 + 104))
  {
    CFDictionaryApplyFunction(*(CFDictionaryRef *)(v2 + 160), (CFDictionaryApplierFunction)controlServer_cancelResponseApplier, (void *)v2);
    CFDictionaryRemoveAllValues(*(CFMutableDictionaryRef *)(v2 + 160));
    v3 = *(NSObject **)(v2 + 128);
    if (v3)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v2 + 128));
      dispatch_release(v3);
      *(_QWORD *)(v2 + 128) = 0;
    }
    v4 = *(NSObject **)(v2 + 136);
    if (v4)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(v2 + 136));
      dispatch_release(v4);
      *(_QWORD *)(v2 + 136) = 0;
    }
    *(_BYTE *)(v2 + 104) = 0;
    if (gLogCategory_APMediaDataControlServer <= 50
      && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  *((_DWORD *)a1 + 2) = 0;
}

void controlServer_cancelResponseApplier(int a1, CFArrayRef theArray, uint64_t a3)
{
  const void *ValueAtIndex;
  const void *v6;

  ValueAtIndex = CFArrayGetValueAtIndex(theArray, 0);
  v6 = CFArrayGetValueAtIndex(theArray, 1);
  controlServer_invokeResponse(a3, (uint64_t)ValueAtIndex, 0, -6723, (uint64_t)v6);
}

void APMediaDataControlServerSendRequest(dispatch_queue_t *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  _QWORD *v11;
  const void *v12;
  int v13;

  if (!a1)
  {
    v13 = -6705;
LABEL_8:
    APSLogErrorAt();
    controlServer_invokeResponse((uint64_t)a1, a4, 0, v13, a5);
    return;
  }
  v10 = malloc_type_calloc(1uLL, 0x30uLL, 0x10E0040F9530876uLL);
  if (!v10)
  {
    v13 = -6728;
    goto LABEL_8;
  }
  v11 = v10;
  *v10 = a1;
  *((_DWORD *)v10 + 2) = a2;
  v10[2] = 0;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  CFRetain(a1);
  v12 = (const void *)v11[3];
  if (v12)
    CFRetain(v12);
  dispatch_async_f(a1[14], v11, (dispatch_function_t)controlServer_sendRequestInternal);
}

void controlServer_sendRequestInternal(uint64_t *a1)
{
  const void *v2;
  const void *Int64;
  int v4;
  const __CFAllocator *v5;
  CFArrayRef v6;
  const __CFData *v7;
  const void *Empty;
  const __CFData *Data;
  uint64_t v10;
  int v11;
  const void *v12;
  int v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *values[2];
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  if (gLogCategory_APMediaDataControlServer <= 30
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(*a1 + 104))
  {
    APSLogErrorAt();
    v7 = 0;
    v6 = 0;
    Int64 = 0;
    v13 = -6718;
    goto LABEL_41;
  }
  if (!*(_QWORD *)(*a1 + 136))
  {
    APSLogErrorAt();
    v7 = 0;
    v6 = 0;
    Int64 = 0;
    v13 = -6723;
    goto LABEL_41;
  }
  v2 = (const void *)a1[3];
  if (v2 && !CFPropertyListIsValid(v2, kCFPropertyListBinaryFormat_v1_0))
  {
    APSLogErrorAt();
    v7 = 0;
    v6 = 0;
    Int64 = 0;
    v13 = -6717;
    goto LABEL_41;
  }
  if (a1[4])
  {
    Int64 = 0;
    DWORD1(v14) = 1937337955;
    do
    {
      if (Int64)
        CFRelease(Int64);
      v4 = RandomBytes();
      if (v4)
      {
        v13 = v4;
        APSLogErrorAt();
        v7 = 0;
        v6 = 0;
        Int64 = 0;
        goto LABEL_41;
      }
      Int64 = (const void *)CFNumberCreateInt64();
      if (!Int64)
      {
        APSLogErrorAt();
        v7 = 0;
        v6 = 0;
        goto LABEL_40;
      }
    }
    while (CFDictionaryContainsKey(*(CFDictionaryRef *)(*a1 + 160), Int64));
    v5 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    *(_OWORD *)values = *((_OWORD *)a1 + 2);
    v6 = CFArrayCreate(v5, (const void **)values, 2, 0);
    if (v6)
      goto LABEL_19;
    APSLogErrorAt();
    v7 = 0;
    goto LABEL_40;
  }
  v6 = 0;
  Int64 = 0;
  DWORD1(v14) = 1634957678;
  v5 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
LABEL_19:
  LODWORD(v15) = *((_DWORD *)a1 + 2);
  Empty = (const void *)a1[3];
  *((_QWORD *)&v14 + 1) = a1[2];
  if (!Empty)
    Empty = (const void *)CFDictionaryGetEmpty();
  Data = CFPropertyListCreateData(v5, Empty, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  v7 = Data;
  if (!Data)
  {
    APSLogErrorAt();
LABEL_40:
    v13 = -6728;
    goto LABEL_41;
  }
  *(_QWORD *)&v14 = _byteswap_uint64(__PAIR64__(CFDataGetLength(Data) + 32, DWORD1(v14)));
  *((_QWORD *)&v14 + 1) = bswap64(*((unint64_t *)&v14 + 1));
  LODWORD(v15) = bswap32(v15);
  *(_QWORD *)((char *)&v15 + 4) = bswap64(*(unint64_t *)((char *)&v15 + 4));
  HIDWORD(v15) = 0;
  *(_QWORD *)&v16 = &v14;
  *((_QWORD *)&v16 + 1) = 32;
  if (CFDataGetLength(Data) < 1)
  {
    v10 = 1;
  }
  else
  {
    *(_QWORD *)&v17 = CFDataGetBytePtr(v7);
    *((_QWORD *)&v17 + 1) = CFDataGetLength(v7);
    v10 = 2;
  }
  v11 = (*(uint64_t (**)(_QWORD, __int128 *, uint64_t, _QWORD))(*(_QWORD *)(*a1 + 152) + 40))(*(_QWORD *)(*a1 + 152), &v16, v10, *(unsigned int *)(*a1 + 168));
  if (!v11)
  {
    if (a1[4])
      CFDictionarySetValue(*(CFMutableDictionaryRef *)(*a1 + 160), Int64, v6);
    goto LABEL_28;
  }
  v13 = v11;
  APSLogErrorAt();
LABEL_41:
  if (gLogCategory_APMediaDataControlServer <= 90
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  controlServer_invokeResponse(*a1, a1[4], 0, v13, a1[5]);
  if (v7)
LABEL_28:
    CFRelease(v7);
  if (v6)
    CFRelease(v6);
  if (Int64)
    CFRelease(Int64);
  if (*a1)
    CFRelease((CFTypeRef)*a1);
  v12 = (const void *)a1[3];
  if (v12)
    CFRelease(v12);
  free(a1);
}

uint64_t APMediaDataControlServerSendRequestSync(dispatch_queue_t *a1, uint64_t a2, dispatch_time_t a3)
{
  dispatch_semaphore_t v6;
  NSObject *v7;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v9;
  NSObject **v10;
  NSObject **v11;
  uint64_t Int64;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  v6 = dispatch_semaphore_create(0);
  if (!v6)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v7 = v6;
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 2, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    dispatch_release(v7);
    return 4294960568;
  }
  v9 = Mutable;
  v10 = (NSObject **)malloc_type_calloc(1uLL, 0x10uLL, 0x20040A4A59CD2uLL);
  if (v10)
  {
    v11 = v10;
    dispatch_retain(v7);
    *v11 = v7;
    v11[1] = CFRetain(v9);
    APMediaDataControlServerSendRequest(a1, 1668116068, a2, (uint64_t)APMediaDataControlRequestSyncHandler, (uint64_t)v11);
    if (dispatch_semaphore_wait(v7, a3))
    {
      APSLogErrorAt();
      Int64 = 4294960574;
    }
    else if (CFDictionaryContainsKey(v9, CFSTR("Error")))
    {
      Int64 = CFDictionaryGetInt64();
      if ((_DWORD)Int64)
        APSLogErrorAt();
    }
    else
    {
      APSLogErrorAt();
      Int64 = 4294960554;
    }
  }
  else
  {
    APSLogErrorAt();
    Int64 = 4294960568;
  }
  dispatch_release(v7);
  CFRelease(v9);
  return Int64;
}

void APMediaDataControlRequestSyncHandler(void *value, uint64_t a2, uint64_t a3)
{
  const void *v4;

  if (value)
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(a3 + 8), CFSTR("Reply"), value);
  CFDictionarySetInt64();
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)a3);
  if (*(_QWORD *)a3)
    dispatch_release(*(dispatch_object_t *)a3);
  v4 = *(const void **)(a3 + 8);
  if (v4)
    CFRelease(v4);
  free((void *)a3);
}

uint64_t APMediaDataControlServerSendResponse(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _QWORD context[4];
  int v6;
  unsigned int v7;

  context[0] = result;
  context[1] = a2;
  context[2] = a3;
  context[3] = a4;
  v6 = a5;
  v7 = 0;
  if (!result)
    return APSLogErrorAt();
  if (a2)
  {
    dispatch_sync_f(*(dispatch_queue_t *)(result + 112), context, (dispatch_function_t)controlServer_sendResponseInternal);
    result = v7;
    if (v7)
      return APSLogErrorAt();
  }
  return result;
}

void controlServer_sendResponseInternal(_DWORD *a1)
{
  const void *v2;
  unint64_t v3;
  const __CFAllocator *v4;
  const void *Empty;
  const __CFData *Data;
  const __CFData *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  __int128 v12;
  __int128 v13;
  int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  v15 = 0u;
  v16 = 0u;
  if (!*((_QWORD *)a1 + 1))
    goto LABEL_21;
  if (gLogCategory_APMediaDataControlServer <= 30
    && (gLogCategory_APMediaDataControlServer != -1 || _LogCategory_Initialize()))
  {
    if (!*((_QWORD *)a1 + 3))
      CFDictionaryGetEmpty();
    LogPrintF();
  }
  if (*(_BYTE *)(*(_QWORD *)a1 + 104))
  {
    if (*(_QWORD *)(*(_QWORD *)a1 + 136))
    {
      v2 = (const void *)*((_QWORD *)a1 + 3);
      if (v2 && !CFPropertyListIsValid(v2, kCFPropertyListBinaryFormat_v1_0))
      {
        APSLogErrorAt();
        v10 = -6717;
      }
      else
      {
        v3 = CFGetInt64();
        *(_QWORD *)((char *)&v13 + 4) = v3;
        v4 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
        Empty = (const void *)*((_QWORD *)a1 + 3);
        if (!Empty)
          Empty = (const void *)CFDictionaryGetEmpty();
        Data = CFPropertyListCreateData(v4, Empty, kCFPropertyListBinaryFormat_v1_0, 0, 0);
        if (Data)
        {
          v7 = Data;
          *(_QWORD *)&v12 = bswap32(CFDataGetLength(Data) + 32) | 0x796C707200000000;
          *((_QWORD *)&v12 + 1) = bswap64(*((_QWORD *)a1 + 2));
          LODWORD(v13) = 0;
          *(_QWORD *)((char *)&v13 + 4) = bswap64(v3);
          HIDWORD(v13) = bswap32(a1[8]);
          *(_QWORD *)&v15 = &v12;
          *((_QWORD *)&v15 + 1) = 32;
          if (CFDataGetLength(v7) < 1)
          {
            v9 = 1;
          }
          else
          {
            *(_QWORD *)&v16 = CFDataGetBytePtr(v7);
            *((_QWORD *)&v16 + 1) = CFDataGetLength(v7);
            v9 = 2;
          }
          v14 = (*(uint64_t (**)(_QWORD, __int128 *, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)a1 + 152)
                                                                                        + 40))(*(_QWORD *)(*(_QWORD *)a1 + 152), &v15, v9, *(unsigned int *)(*(_QWORD *)a1 + 168), v8);
          if (v14)
            APSLogErrorAt();
          CFRelease(v7);
LABEL_21:
          v10 = v14;
          if (!v14)
            goto LABEL_26;
          goto LABEL_22;
        }
        APSLogErrorAt();
        v10 = -6728;
      }
    }
    else
    {
      APSLogErrorAt();
      v10 = -6723;
    }
  }
  else
  {
    APSLogErrorAt();
    v10 = -6718;
  }
  v14 = v10;
LABEL_22:
  if (gLogCategory_APMediaDataControlServer <= 90)
  {
    if (gLogCategory_APMediaDataControlServer != -1 || (v11 = _LogCategory_Initialize(), v10 = v14, v11))
    {
      LogPrintF();
      v10 = v14;
    }
  }
LABEL_26:
  a1[9] = v10;
}

uint64_t sbufsink_Start()
{
  uint64_t DerivedStorage;
  uint64_t result;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_BYTE *)(DerivedStorage + 72))
  {
    APSLogErrorAt();
    return 4294895164;
  }
  else
  {
    result = 0;
    *(_BYTE *)(DerivedStorage + 72) = 1;
    *(_DWORD *)(DerivedStorage + 68) = 0;
  }
  return result;
}

uint64_t sbufsink_Stop()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_BYTE *)(DerivedStorage + 72))
  {
    v1 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
      && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    APReceiverStatsCollectorDisableHUD(*(_QWORD *)v1);
    v2 = *(const void **)(v1 + 32);
    if (v2)
    {
      CFRelease(v2);
      *(_QWORD *)(v1 + 32) = 0;
    }
    v3 = *(const void **)(v1 + 40);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(v1 + 40) = 0;
    }
    v4 = *(const void **)(v1 + 48);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(v1 + 48) = 0;
    }
    v5 = *(const void **)(v1 + 56);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(v1 + 56) = 0;
    }
    *(_DWORD *)(v1 + 64) = 0;
    *(_BYTE *)(v1 + 72) = 0;
  }
  return 0;
}

uint64_t sbufsink_EnqueueFrame(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t DerivedStorage;
  uint64_t v10;
  const __CFArray *SampleAttachmentsArray;
  __CFDictionary *ValueAtIndex;
  uint64_t v13;
  CMSampleBufferRef v14;
  uint64_t (*v15)(uint64_t, CMSampleBufferRef);
  uint64_t v16;
  uint64_t v17;
  CMSampleBufferRef v18;
  uint64_t (*v19)(uint64_t);
  NSObject *v20;
  uint64_t (*v21)(uint64_t, CMSampleBufferRef);
  uint64_t v22;
  size_t sampleSizeArray;
  CMSampleTimingInfo sampleTimingArray;
  CMSampleBufferRef sbuf;
  _QWORD block[7];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  sbuf = 0;
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  sampleSizeArray = 0;
  if (!*(_BYTE *)(DerivedStorage + 72))
  {
    v22 = 4294895164;
    goto LABEL_24;
  }
  if (!*(_QWORD *)(DerivedStorage + 32))
  {
    v22 = 4294895164;
    goto LABEL_24;
  }
  if (!*(_QWORD *)(DerivedStorage + 40))
  {
    v22 = 4294895164;
    goto LABEL_24;
  }
  if (!*(_QWORD *)(DerivedStorage + 48))
  {
    v22 = 4294895164;
    goto LABEL_24;
  }
  if (!*(_QWORD *)(DerivedStorage + 56))
  {
    v22 = 4294895164;
    goto LABEL_24;
  }
  *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x24BDC0D40];
  sampleTimingArray.duration.epoch = *(_QWORD *)(MEMORY[0x24BDC0D40] + 16);
  sampleTimingArray.decodeTimeStamp = sampleTimingArray.duration;
  CMClockMakeHostTimeFromSystemUnits(&sampleTimingArray.presentationTimeStamp, a3);
  sampleSizeArray = CMBlockBufferGetDataLength(a2);
  v10 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], a2, 1u, 0, 0, *(CMFormatDescriptionRef *)(DerivedStorage + 32), 1, 1, &sampleTimingArray, 1, &sampleSizeArray, &sbuf);
  if ((_DWORD)v10)
  {
    v22 = v10;
    goto LABEL_24;
  }
  if (!a5)
  {
    SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(sbuf, 1u);
    ValueAtIndex = (__CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0);
    CFDictionarySetValue(ValueAtIndex, (const void *)*MEMORY[0x24BDC0CC8], (const void *)*MEMORY[0x24BDBD270]);
  }
  CMSetAttachment(sbuf, (CFStringRef)*MEMORY[0x24BDC1278], *(CFTypeRef *)(DerivedStorage + 40), 0);
  CMSetAttachment(sbuf, (CFStringRef)*MEMORY[0x24BDC1270], *(CFTypeRef *)(DerivedStorage + 48), 0);
  CMSetAttachment(sbuf, (CFStringRef)*MEMORY[0x24BDC1280], *(CFTypeRef *)(DerivedStorage + 56), 0);
  v13 = *(_QWORD *)(DerivedStorage + 16);
  if (v13 && *(_DWORD *)(DerivedStorage + 64) == 1869117027)
  {
    v14 = sbuf;
    v15 = *(uint64_t (**)(uint64_t, CMSampleBufferRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 32);
    if (v15)
    {
      v16 = v15(v13, v14);
      if (!(_DWORD)v16)
        goto LABEL_17;
      v22 = v16;
    }
    else
    {
      v22 = 4294954514;
    }
LABEL_24:
    APSLogErrorAt();
    goto LABEL_31;
  }
LABEL_17:
  v17 = *(_QWORD *)(DerivedStorage + 8);
  v18 = sbuf;
  v28 = 0;
  v29 = &v28;
  v30 = 0x2000000000;
  v31 = 0;
  v19 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
  if (!v19)
  {
    v20 = MEMORY[0x24BDAC9B8];
    goto LABEL_22;
  }
  v20 = v19(v17);
  if (v20)
  {
LABEL_22:
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __APReceiverSBufConsumerPushVideoSBuf_block_invoke;
    block[3] = &unk_24E21DC78;
    block[4] = &v28;
    block[5] = v17;
    block[6] = v18;
    dispatch_sync(v20, block);
    v22 = *((unsigned int *)v29 + 6);
    goto LABEL_27;
  }
  v21 = *(uint64_t (**)(uint64_t, CMSampleBufferRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 32);
  if (v21)
    v22 = v21(v17, v18);
  else
    v22 = 4294954514;
  *((_DWORD *)v29 + 6) = v22;
LABEL_27:
  _Block_object_dispose(&v28, 8);
  if ((_DWORD)v22)
    goto LABEL_24;
  *(_QWORD *)(DerivedStorage + 24) = a3;
  ++*(_DWORD *)(DerivedStorage + 68);
  if (a4)
    APReceiverStatsCollectorLogFrameStats(a4, 0);
  v22 = 0;
LABEL_31:
  if (sbuf)
    CFRelease(sbuf);
  if ((_DWORD)v22
    && gLogCategory_APReceiverScreenSinkSBufConsumer <= 60
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v22;
}

uint64_t sbufsink_UpdateH264VideoConfig(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, uint64_t a7, const __CFData *a8, int a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  const __CFAllocator *v28;
  uint64_t v29;
  int valuePtr;
  CGRect v32;
  CGRect v33;

  valuePtr = a9;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 72))
  {
    v29 = 4294895164;
LABEL_20:
    APSLogErrorAt();
    goto LABEL_21;
  }
  if (a8)
  {
    v24 = *(const void **)(DerivedStorage + 32);
    if (v24)
    {
      CFRelease(v24);
      *(_QWORD *)(DerivedStorage + 32) = 0;
    }
    v25 = *(const void **)(DerivedStorage + 40);
    if (v25)
    {
      CFRelease(v25);
      *(_QWORD *)(DerivedStorage + 40) = 0;
    }
    v26 = *(const void **)(DerivedStorage + 48);
    if (v26)
    {
      CFRelease(v26);
      *(_QWORD *)(DerivedStorage + 48) = 0;
    }
    v27 = *(const void **)(DerivedStorage + 56);
    if (v27)
    {
      CFRelease(v27);
      *(_QWORD *)(DerivedStorage + 56) = 0;
    }
    v28 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    CFDataGetBytePtr(a8);
    CFDataGetLength(a8);
    v29 = FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom();
    if (!(_DWORD)v29)
    {
      v32.origin.x = a3;
      v32.origin.y = a4;
      v32.size.width = a5;
      v32.size.height = a6;
      *(_QWORD *)(DerivedStorage + 40) = CGRectCreateDictionaryRepresentation(v32);
      v33.origin.x = a12;
      v33.origin.y = a13;
      v33.size.width = a14;
      v33.size.height = a15;
      *(_QWORD *)(DerivedStorage + 48) = CGRectCreateDictionaryRepresentation(v33);
      *(_QWORD *)(DerivedStorage + 56) = CFNumberCreate(v28, kCFNumberSInt32Type, &valuePtr);
      *(_DWORD *)(DerivedStorage + 64) = 1635148593;
      APReceiverStatsCollectorUpdateVideoSizes(*(_QWORD *)DerivedStorage, a5, a6, a14, a15, a12, a13);
      APReceiverStatsCollectorUpdateVideoFormatDescription(*(_QWORD *)DerivedStorage, *(const opaqueCMFormatDescription **)(DerivedStorage + 32));
      return v29;
    }
    goto LABEL_20;
  }
  APSLogErrorAt();
  v29 = 4294895165;
LABEL_21:
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 60
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v29;
}

uint64_t sbufsink_UpdateVideoConfig(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, uint64_t a7, uint64_t a8, int a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage;
  int v24;
  const void *v25;
  const void *v26;
  const void *v27;
  const void *v28;
  uint64_t v29;
  FourCharCode MediaSubType;
  uint64_t v31;
  int valuePtr;
  CGRect v34;
  CGRect v35;

  valuePtr = a9;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v24 = *(_DWORD *)(DerivedStorage + 64);
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 72))
  {
    v31 = 4294895164;
LABEL_26:
    APSLogErrorAt();
    goto LABEL_27;
  }
  if (a8)
  {
    v25 = *(const void **)(DerivedStorage + 32);
    if (v25)
    {
      CFRelease(v25);
      *(_QWORD *)(DerivedStorage + 32) = 0;
    }
    v26 = *(const void **)(DerivedStorage + 40);
    if (v26)
    {
      CFRelease(v26);
      *(_QWORD *)(DerivedStorage + 40) = 0;
    }
    v27 = *(const void **)(DerivedStorage + 48);
    if (v27)
    {
      CFRelease(v27);
      *(_QWORD *)(DerivedStorage + 48) = 0;
    }
    v28 = *(const void **)(DerivedStorage + 56);
    if (v28)
    {
      CFRelease(v28);
      *(_QWORD *)(DerivedStorage + 56) = 0;
    }
    v29 = APSVideoFormatDescriptionCreateFromBlockBuffer();
    if (!(_DWORD)v29)
    {
      v34.origin.x = a3;
      v34.origin.y = a4;
      v34.size.width = a5;
      v34.size.height = a6;
      *(_QWORD *)(DerivedStorage + 40) = CGRectCreateDictionaryRepresentation(v34);
      v35.origin.x = a12;
      v35.origin.y = a13;
      v35.size.width = a14;
      v35.size.height = a15;
      *(_QWORD *)(DerivedStorage + 48) = CGRectCreateDictionaryRepresentation(v35);
      *(_QWORD *)(DerivedStorage + 56) = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt32Type, &valuePtr);
      MediaSubType = CMFormatDescriptionGetMediaSubType(*(CMFormatDescriptionRef *)(DerivedStorage + 32));
      *(_DWORD *)(DerivedStorage + 64) = MediaSubType;
      if (MediaSubType != v24
        && gLogCategory_APReceiverScreenSinkSBufConsumer <= 50
        && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APReceiverStatsCollectorUpdateVideoSizes(*(_QWORD *)DerivedStorage, a5, a6, a14, a15, a12, a13);
      APReceiverStatsCollectorUpdateVideoFormatDescription(*(_QWORD *)DerivedStorage, *(const opaqueCMFormatDescription **)(DerivedStorage + 32));
      return 0;
    }
    v31 = v29;
    goto LABEL_26;
  }
  APSLogErrorAt();
  v31 = 4294895165;
LABEL_27:
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 60
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v31;
}

uint64_t sbufsink_ClearScreen()
{
  uint64_t DerivedStorage;
  int64_t v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  CMAttachmentBearerRef v5;
  uint64_t (*v6)(uint64_t);
  NSObject *v7;
  uint64_t (*v8)(uint64_t, CMAttachmentBearerRef);
  uint64_t v9;
  CMSampleTimingInfo sampleTimingArray;
  CMAttachmentBearerRef target;
  _QWORD block[7];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  target = 0;
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  if (!*(_BYTE *)(DerivedStorage + 72))
  {
    APSLogErrorAt();
    v9 = 4294895164;
    goto LABEL_19;
  }
  if (*(_QWORD *)(DerivedStorage + 24) <= mach_absolute_time())
    v1 = UpTicksToNanoseconds();
  else
    v1 = UpTicksToNanoseconds() + 10000000;
  *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x24BDC0D88];
  sampleTimingArray.duration.epoch = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
  CMTimeMake(&sampleTimingArray.presentationTimeStamp, v1, 1000000000);
  sampleTimingArray.decodeTimeStamp = *(CMTime *)*(_QWORD *)&MEMORY[0x24BDC0D40];
  v2 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, (CMSampleBufferRef *)&target);
  if (!(_DWORD)v2)
  {
    v3 = (const void *)*MEMORY[0x24BDBD270];
    CMSetAttachment(target, (CFStringRef)*MEMORY[0x24BDC0CF0], (CFTypeRef)*MEMORY[0x24BDBD270], 1u);
    CMSetAttachment(target, (CFStringRef)*MEMORY[0x24BDC0CE0], v3, 1u);
    v4 = *(_QWORD *)(DerivedStorage + 8);
    v5 = target;
    v14 = 0;
    v15 = &v14;
    v16 = 0x2000000000;
    v17 = 0;
    v6 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
    if (v6)
    {
      v7 = v6(v4);
      if (!v7)
      {
        v8 = *(uint64_t (**)(uint64_t, CMAttachmentBearerRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 32);
        if (v8)
          v9 = v8(v4, v5);
        else
          v9 = 4294954514;
        *((_DWORD *)v15 + 6) = v9;
LABEL_18:
        _Block_object_dispose(&v14, 8);
        if (!(_DWORD)v9)
          goto LABEL_19;
        goto LABEL_24;
      }
    }
    else
    {
      v7 = MEMORY[0x24BDAC9B8];
    }
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __APReceiverSBufConsumerPushVideoSBuf_block_invoke;
    block[3] = &unk_24E21DC78;
    block[4] = &v14;
    block[5] = v4;
    block[6] = v5;
    dispatch_sync(v7, block);
    v9 = *((unsigned int *)v15 + 6);
    goto LABEL_18;
  }
  v9 = v2;
LABEL_24:
  APSLogErrorAt();
LABEL_19:
  if (target)
    CFRelease(target);
  return v9;
}

uint64_t sbufsink_UpdateStats(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage;
  _QWORD *v4;
  NSObject *v5;
  uint64_t CMBaseObject;
  void (*v7)(uint64_t, const __CFString *, _QWORD, CFTypeRef *);
  CFTypeRef block[6];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_BYTE *)(DerivedStorage + 72))
  {
    v4 = *(_QWORD **)DerivedStorage;
    if (*(_QWORD *)DerivedStorage)
    {
      v5 = v4[2];
      block[0] = (CFTypeRef)MEMORY[0x24BDAC760];
      block[1] = (CFTypeRef)3221225472;
      block[2] = __APReceiverStatsCollectorUpdateSenderStats_block_invoke;
      block[3] = &__block_descriptor_48_e5_v8__0l;
      block[4] = v4;
      block[5] = a2;
      dispatch_sync(v5, block);
      if (*(_DWORD *)(DerivedStorage + 68))
      {
        block[0] = 0;
        CMBaseObject = FigValeriaGetCMBaseObject();
        v7 = *(void (**)(uint64_t, const __CFString *, _QWORD, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                                 + 8)
                                                                                     + 48);
        if (v7)
        {
          v7(CMBaseObject, CFSTR("FigVideoQueueStats"), *MEMORY[0x24BDBD240], block);
          if (block[0])
          {
            APReceiverStatsCollectorUpdateVideoPerformanceStats(*(_QWORD *)DerivedStorage, (uint64_t)block[0]);
            CFRelease(block[0]);
          }
        }
      }
      APReceiverStatsCollectorShowStats(*(_QWORD *)DerivedStorage);
    }
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294895164;
  }
}

void sbufsink_Finalize()
{
  uint64_t DerivedStorage;
  const void *v1;
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_QWORD *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(_QWORD *)DerivedStorage = 0;
  }
  v1 = *(const void **)(DerivedStorage + 8);
  if (v1)
  {
    CFRelease(v1);
    *(_QWORD *)(DerivedStorage + 8) = 0;
  }
  v2 = *(const void **)(DerivedStorage + 32);
  if (v2)
  {
    CFRelease(v2);
    *(_QWORD *)(DerivedStorage + 32) = 0;
  }
  v3 = *(const void **)(DerivedStorage + 40);
  if (v3)
  {
    CFRelease(v3);
    *(_QWORD *)(DerivedStorage + 40) = 0;
  }
  v4 = *(const void **)(DerivedStorage + 48);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(DerivedStorage + 48) = 0;
  }
  v5 = *(const void **)(DerivedStorage + 56);
  if (v5)
  {
    CFRelease(v5);
    *(_QWORD *)(DerivedStorage + 56) = 0;
  }
  v6 = *(const void **)(DerivedStorage + 16);
  if (v6)
  {
    CFRelease(v6);
    *(_QWORD *)(DerivedStorage + 16) = 0;
  }
}

CFStringRef sbufsink_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;
  CFStringRef v3;

  ASPrintF();
  v2 = CFGetAllocator(a1);
  v3 = CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverScreenSinkSBufConsumer %p %s>"), a1, 0);
  free(0);
  return v3;
}

uint64_t sbufsink_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage;
  uint64_t v6;
  uint64_t v7;
  CFTypeID v8;
  const void *v9;
  CFTypeID v10;
  _QWORD *v11;
  const void *v12;
  const void *v13;
  uint64_t v14;
  const void *v16;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
    goto LABEL_42;
  v6 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("StatsDisplayEnabled")))
  {
    if (*(_BYTE *)(v6 + 72))
    {
      v7 = *(_QWORD *)v6;
      if ((const void *)*MEMORY[0x24BDBD270] == a3)
        APReceiverStatsCollectorEnableHUD(v7, 0);
      else
        APReceiverStatsCollectorDisableHUD(v7);
      return 0;
    }
    v14 = 4294895164;
LABEL_47:
    APSLogErrorAt();
    return v14;
  }
  if (CFEqual(a2, CFSTR("StatsCollector")))
  {
    if (*(_BYTE *)(v6 + 72))
    {
      v14 = 4294895164;
      goto LABEL_47;
    }
    if (!a3)
    {
      v9 = *(const void **)v6;
      *(_QWORD *)v6 = 0;
      if (!v9)
        return 0;
LABEL_30:
      CFRelease(v9);
      return 0;
    }
    v8 = CFGetTypeID(a3);
    if (APReceiverStatsCollectorGetTypeID_once != -1)
      dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_440);
    if (v8 == APReceiverStatsCollectorGetTypeID_typeID)
    {
      v9 = *(const void **)v6;
      *(_QWORD *)v6 = a3;
      CFRetain(a3);
      if (!v9)
        return 0;
      goto LABEL_30;
    }
LABEL_42:
    APSLogErrorAt();
    return 4294895165;
  }
  if (CFEqual(a2, CFSTR("KeyExchangeReceiver")))
  {
    if (*(_BYTE *)(v6 + 72))
    {
      v14 = 4294895164;
      goto LABEL_47;
    }
    if (a3)
    {
      v10 = CFGetTypeID(a3);
      if (v10 != FigPWDKeyExchangeReceiverGetTypeID())
        goto LABEL_42;
      v13 = *(const void **)(v6 + 16);
      v11 = (_QWORD *)(v6 + 16);
      v12 = v13;
      *v11 = a3;
      CFRetain(a3);
      if (!v13)
      {
LABEL_25:
        if (*v11
          && gLogCategory_APReceiverScreenSinkSBufConsumer <= 50
          && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
    }
    else
    {
      v16 = *(const void **)(v6 + 16);
      v11 = (_QWORD *)(v6 + 16);
      v12 = v16;
      *v11 = 0;
      if (!v16)
        goto LABEL_25;
    }
    CFRelease(v12);
    goto LABEL_25;
  }
  if (gLogCategory_APReceiverScreenSinkSBufConsumer <= 30
    && (gLogCategory_APReceiverScreenSinkSBufConsumer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

void sub_21E0E959C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_21E0E96C0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_21E0E9B40(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t MRNowPlayingSessionManagerIsSilentPrimaryDidChangeFunction()
{
  return constantValMRNowPlayingSessionManagerIsSilentPrimaryDidChange;
}

uint64_t initValMRNowPlayingSessionManagerIsSilentPrimaryDidChange()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerIsSilentPrimaryDidChange");
  if (v0)
  {
    result = *v0;
    constantValMRNowPlayingSessionManagerIsSilentPrimaryDidChange = result;
  }
  else
  {
    result = constantValMRNowPlayingSessionManagerIsSilentPrimaryDidChange;
  }
  getMRNowPlayingSessionManagerIsSilentPrimaryDidChange[0] = MRNowPlayingSessionManagerIsSilentPrimaryDidChangeFunction;
  return result;
}

uint64_t MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChangeFunction()
{
  return constantValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange;
}

uint64_t initValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange");
  if (v0)
  {
    result = *v0;
    constantValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange = result;
  }
  else
  {
    result = constantValMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange;
  }
  getMRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChange[0] = MRNowPlayingSessionManagerLocalDeviceRoutingContextIDDidChangeFunction;
  return result;
}

uint64_t MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlaybackFunction()
{
  return constantValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback;
}

uint64_t initValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback");
  if (v0)
  {
    result = *v0;
    constantValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback = result;
  }
  else
  {
    result = constantValMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback;
  }
  getMRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlayback[0] = MRNowPlayingSessionManagerActiveSessionWillBeHijackedByNativePlaybackFunction;
  return result;
}

uint64_t initMRMediaRemoteRemovePlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteRemovePlayer = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteRemovePlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteRemovePlayer)(a1, a2, a3);
}

uint64_t initMRMediaRemoteSetWantsNowPlayingNotifications(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetWantsNowPlayingNotifications[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetWantsNowPlayingNotifications");
  return ((uint64_t (*)(uint64_t))softLinkMRMediaRemoteSetWantsNowPlayingNotifications[0])(a1);
}

uint64_t MRPlayerFunction()
{
  return classMRPlayer;
}

Class initMRPlayer()
{
  Class result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  result = objc_getClass("MRPlayer");
  classMRPlayer = (uint64_t)result;
  getMRPlayerClass[0] = MRPlayerFunction;
  return result;
}

uint64_t MRPlayerPathFunction()
{
  return classMRPlayerPath;
}

Class initMRPlayerPath()
{
  Class result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  result = objc_getClass("MRPlayerPath");
  classMRPlayerPath = (uint64_t)result;
  getMRPlayerPathClass[0] = MRPlayerPathFunction;
  return result;
}

uint64_t initValkMRMediaRemotePlayerPlaybackStateDidChangeNotification()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemotePlayerPlaybackStateDidChangeNotification");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemotePlayerPlaybackStateDidChangeNotification = result;
  }
  else
  {
    result = constantValkMRMediaRemotePlayerPlaybackStateDidChangeNotification;
  }
  getkMRMediaRemotePlayerPlaybackStateDidChangeNotification[0] = kMRMediaRemotePlayerPlaybackStateDidChangeNotificationFunction;
  return result;
}

uint64_t kMRMediaRemotePlayerPlaybackStateDidChangeNotificationFunction()
{
  return constantValkMRMediaRemotePlayerPlaybackStateDidChangeNotification;
}

void ___getDefaultMRSupportedCommandInfos_block_invoke()
{
  const __CFAllocator *v0;
  __CFArray *Mutable;
  uint64_t i;
  uint64_t v3;
  uint64_t v4;
  const void *v5;

  v0 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 13, MEMORY[0x24BDBD690]);
  for (i = 0; i != 13; ++i)
  {
    v3 = dword_21E1B16AC[i];
    v4 = ((uint64_t (*)(uint64_t))softLinkMRMediaRemoteCommandInfoCreate[0])((uint64_t)v0);
    if (v4)
    {
      v5 = (const void *)v4;
      ((void (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoSetCommand[0])(v4, v3);
      ((void (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoSetEnabled[0])((uint64_t)v5, 1);
      CFArrayAppendValue(Mutable, v5);
      CFRelease(v5);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  _getDefaultMRSupportedCommandInfos_s_defaultCommandInfos = (uint64_t)CFArrayCreateCopy(v0, Mutable);
  if (Mutable)
    CFRelease(Mutable);
}

uint64_t initMRMediaRemoteCommandInfoSetEnabled(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteCommandInfoSetEnabled[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoSetEnabled");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoSetEnabled[0])(a1, a2);
}

uint64_t initMRMediaRemoteCommandInfoSetCommand(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteCommandInfoSetCommand[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoSetCommand");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoSetCommand[0])(a1, a2);
}

uint64_t initMRMediaRemoteCommandInfoCreate(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteCommandInfoCreate[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoCreate");
  return ((uint64_t (*)(uint64_t))softLinkMRMediaRemoteCommandInfoCreate[0])(a1);
}

uint64_t initMRNowPlayingSessionManagerLocalDeviceRoutingContextID()
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRNowPlayingSessionManagerLocalDeviceRoutingContextID[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerLocalDeviceRoutingContextID");
  return softLinkMRNowPlayingSessionManagerLocalDeviceRoutingContextID[0]();
}

uint64_t initMRNowPlayingSessionManagerIsSilentPrimary()
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRNowPlayingSessionManagerIsSilentPrimary[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerIsSilentPrimary");
  return softLinkMRNowPlayingSessionManagerIsSilentPrimary[0]();
}

uint64_t initValkMRNowPlayingPlayerPathUserInfoKey()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRNowPlayingPlayerPathUserInfoKey");
  if (v0)
  {
    result = *v0;
    constantValkMRNowPlayingPlayerPathUserInfoKey = result;
  }
  else
  {
    result = constantValkMRNowPlayingPlayerPathUserInfoKey;
  }
  getkMRNowPlayingPlayerPathUserInfoKey[0] = kMRNowPlayingPlayerPathUserInfoKeyFunction;
  return result;
}

uint64_t kMRNowPlayingPlayerPathUserInfoKeyFunction()
{
  return constantValkMRNowPlayingPlayerPathUserInfoKey;
}

uint64_t initValkMRMediaRemotePlaybackStateUserInfoKey()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemotePlaybackStateUserInfoKey");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemotePlaybackStateUserInfoKey = result;
  }
  else
  {
    result = constantValkMRMediaRemotePlaybackStateUserInfoKey;
  }
  getkMRMediaRemotePlaybackStateUserInfoKey[0] = kMRMediaRemotePlaybackStateUserInfoKeyFunction;
  return result;
}

uint64_t kMRMediaRemotePlaybackStateUserInfoKeyFunction()
{
  return constantValkMRMediaRemotePlaybackStateUserInfoKey;
}

uint64_t initMRMediaRemoteSyncClientProperties(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSyncClientProperties[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSyncClientProperties");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteSyncClientProperties[0])(a1, a2, a3, a4, a5);
}

uint64_t initMRNowPlayingClientCreateFromExternalRepresentation(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRNowPlayingClientCreateFromExternalRepresentation[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingClientCreateFromExternalRepresentation");
  return ((uint64_t (*)(uint64_t))softLinkMRNowPlayingClientCreateFromExternalRepresentation[0])(a1);
}

uint64_t initValkMRMediaRemoteNowPlayingInfoUniqueIdentifier()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoUniqueIdentifier");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier;
  }
  getkMRMediaRemoteNowPlayingInfoUniqueIdentifier[0] = kMRMediaRemoteNowPlayingInfoUniqueIdentifierFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoUniqueIdentifierFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoUniqueIdentifier;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoMediaType()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoMediaType");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoMediaType = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoMediaType;
  }
  getkMRMediaRemoteNowPlayingInfoMediaType[0] = kMRMediaRemoteNowPlayingInfoMediaTypeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoMediaTypeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoMediaType;
}

uint64_t initValkMRMediaRemoteMediaTypeMusic()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteMediaTypeMusic");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteMediaTypeMusic = result;
  }
  else
  {
    result = constantValkMRMediaRemoteMediaTypeMusic;
  }
  getkMRMediaRemoteMediaTypeMusic[0] = kMRMediaRemoteMediaTypeMusicFunction;
  return result;
}

uint64_t kMRMediaRemoteMediaTypeMusicFunction()
{
  return constantValkMRMediaRemoteMediaTypeMusic;
}

CFDictionaryRef ___getMetadataKeyMap_block_invoke()
{
  CFDictionaryRef result;
  void *values[11];
  void *keys[2];
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  const __CFString *v7;
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  v5 = *(_OWORD *)&off_24E21DE50;
  v6 = xmmword_24E21DE60;
  v7 = CFSTR("uniqueID");
  *(_OWORD *)keys = xmmword_24E21DE20;
  v3 = *(_OWORD *)&off_24E21DE30;
  v4 = xmmword_24E21DE40;
  values[0] = (void *)getkMRMediaRemoteNowPlayingInfoAlbum[0]();
  values[1] = (void *)getkMRMediaRemoteNowPlayingInfoArtist[0]();
  values[2] = (void *)getkMRMediaRemoteNowPlayingInfoArtworkData[0]();
  values[3] = (void *)getkMRMediaRemoteNowPlayingInfoArtworkMIMEType[0]();
  values[4] = (void *)getkMRMediaRemoteNowPlayingInfoDuration[0]();
  values[5] = (void *)getkMRMediaRemoteNowPlayingInfoElapsedTime[0]();
  values[6] = (void *)getkMRMediaRemoteNowPlayingInfoPlaybackRate[0]();
  values[7] = (void *)getkMRMediaRemoteNowPlayingInfoTitle[0]();
  values[8] = (void *)getkMRMediaRemoteNowPlayingInfoTotalTrackCount[0]();
  values[9] = (void *)getkMRMediaRemoteNowPlayingInfoTrackNumber[0]();
  values[10] = (void *)getkMRMediaRemoteNowPlayingInfoUniqueIdentifier[0]();
  result = CFDictionaryCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (const void **)keys, (const void **)values, 11, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  _getMetadataKeyMap_s_metadataKeyMap = (uint64_t)result;
  return result;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoAlbum()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoAlbum");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoAlbum = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoAlbum;
  }
  getkMRMediaRemoteNowPlayingInfoAlbum[0] = kMRMediaRemoteNowPlayingInfoAlbumFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoAlbumFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoAlbum;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtist()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtist");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtist = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoArtist;
  }
  getkMRMediaRemoteNowPlayingInfoArtist[0] = kMRMediaRemoteNowPlayingInfoArtistFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtistFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtist;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtworkData()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtworkData");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtworkData = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoArtworkData;
  }
  getkMRMediaRemoteNowPlayingInfoArtworkData[0] = kMRMediaRemoteNowPlayingInfoArtworkDataFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtworkDataFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtworkData;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoArtworkMIMEType()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoArtworkMIMEType");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType;
  }
  getkMRMediaRemoteNowPlayingInfoArtworkMIMEType[0] = kMRMediaRemoteNowPlayingInfoArtworkMIMETypeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoArtworkMIMETypeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoArtworkMIMEType;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoDuration()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoDuration");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoDuration = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoDuration;
  }
  getkMRMediaRemoteNowPlayingInfoDuration[0] = kMRMediaRemoteNowPlayingInfoDurationFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoDurationFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoDuration;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoElapsedTime()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoElapsedTime");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoElapsedTime = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoElapsedTime;
  }
  getkMRMediaRemoteNowPlayingInfoElapsedTime[0] = kMRMediaRemoteNowPlayingInfoElapsedTimeFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoElapsedTimeFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoElapsedTime;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoPlaybackRate()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoPlaybackRate");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoPlaybackRate = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoPlaybackRate;
  }
  getkMRMediaRemoteNowPlayingInfoPlaybackRate[0] = kMRMediaRemoteNowPlayingInfoPlaybackRateFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoPlaybackRateFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoPlaybackRate;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTitle()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTitle");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTitle = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoTitle;
  }
  getkMRMediaRemoteNowPlayingInfoTitle[0] = kMRMediaRemoteNowPlayingInfoTitleFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTitleFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTitle;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTotalTrackCount()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTotalTrackCount");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount;
  }
  getkMRMediaRemoteNowPlayingInfoTotalTrackCount[0] = kMRMediaRemoteNowPlayingInfoTotalTrackCountFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTotalTrackCountFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTotalTrackCount;
}

uint64_t initValkMRMediaRemoteNowPlayingInfoTrackNumber()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteNowPlayingInfoTrackNumber");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteNowPlayingInfoTrackNumber = result;
  }
  else
  {
    result = constantValkMRMediaRemoteNowPlayingInfoTrackNumber;
  }
  getkMRMediaRemoteNowPlayingInfoTrackNumber[0] = kMRMediaRemoteNowPlayingInfoTrackNumberFunction;
  return result;
}

uint64_t kMRMediaRemoteNowPlayingInfoTrackNumberFunction()
{
  return constantValkMRMediaRemoteNowPlayingInfoTrackNumber;
}

uint64_t initMRMediaRemoteGetNowPlayingInfoForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteGetNowPlayingInfoForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteGetNowPlayingInfoForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteGetNowPlayingInfoForPlayer[0])(a1, a2, a3, a4);
}

uint64_t initMRMediaRemoteSetNowPlayingPlayer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetNowPlayingPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetNowPlayingPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteSetNowPlayingPlayer[0])(a1, a2, a3);
}

uint64_t initMRMediaRemoteCommandInfoCreateFromExternalRepresentation(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteCommandInfoCreateFromExternalRepresentation[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteCommandInfoCreateFromExternalRepresentation");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkMRMediaRemoteCommandInfoCreateFromExternalRepresentation[0])(a1, a2);
}

uint64_t initMRMediaRemoteSetSupportedCommandsForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetSupportedCommandsForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetSupportedCommandsForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteSetSupportedCommandsForPlayer[0])(a1, a2, a3, a4);
}

uint64_t initMRMediaRemoteRemoveCommandHandlerBlockForPlayer(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteRemoveCommandHandlerBlockForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteRemoveCommandHandlerBlockForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkMRMediaRemoteRemoveCommandHandlerBlockForPlayer[0])(a1, a2);
}

uint64_t initMRMediaRemoteAddCommandHandlerBlockForPlayer(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteAddCommandHandlerBlockForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteAddCommandHandlerBlockForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkMRMediaRemoteAddCommandHandlerBlockForPlayer[0])(a1, a2);
}

uint64_t initValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier()
{
  uint64_t *v0;
  uint64_t result;

  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  v0 = (uint64_t *)dlsym((void *)MediaRemoteLibrary_sLib, "kMRMediaRemoteOptionRemoteControlInterfaceIdentifier");
  if (v0)
  {
    result = *v0;
    constantValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier = result;
  }
  else
  {
    result = constantValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
  }
  getkMRMediaRemoteOptionRemoteControlInterfaceIdentifier[0] = kMRMediaRemoteOptionRemoteControlInterfaceIdentifierFunction;
  return result;
}

uint64_t kMRMediaRemoteOptionRemoteControlInterfaceIdentifierFunction()
{
  return constantValkMRMediaRemoteOptionRemoteControlInterfaceIdentifier;
}

uint64_t initMRMediaRemoteSetPlaybackStateForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetPlaybackStateForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetPlaybackStateForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteSetPlaybackStateForPlayer[0])(a1, a2, a3, a4);
}

uint64_t initMRMediaRemoteSetNowPlayingInfoForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetNowPlayingInfoForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetNowPlayingInfoForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteSetNowPlayingInfoForPlayer[0])(a1, a2, a3, a4, a5);
}

uint64_t initMRMediaRemoteBroadcastCommand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteBroadcastCommand[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteBroadcastCommand");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteBroadcastCommand[0])(a1, a2, a3, a4, a5, a6);
}

uint64_t initMRMediaRemoteGetLocalOrigin()
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteGetLocalOrigin[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteGetLocalOrigin");
  return softLinkMRMediaRemoteGetLocalOrigin[0]();
}

uint64_t initMRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer");
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))softLinkMRMediaRemoteSetAVAudioSessionOpaqueSessionIDForPlayer[0])(a1, a2, a3, a4);
}

uint64_t initMRNowPlayingSessionManagerStopSession()
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRNowPlayingSessionManagerStopSession[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerStopSession");
  return softLinkMRNowPlayingSessionManagerStopSession[0]();
}

uint64_t initMRMediaRemoteSetCanBeNowPlayingForPlayer(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetCanBeNowPlayingForPlayer = (uint64_t (*)(_QWORD, _QWORD))dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetCanBeNowPlayingForPlayer");
  return softLinkMRMediaRemoteSetCanBeNowPlayingForPlayer(a1, a2);
}

void sub_21E0ECA4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy_(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void __Block_byref_object_dispose_(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

uint64_t initMRNowPlayingSessionManagerStartSession(uint64_t a1, uint64_t a2)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRNowPlayingSessionManagerStartSession[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRNowPlayingSessionManagerStartSession");
  return ((uint64_t (*)(uint64_t, uint64_t))softLinkMRNowPlayingSessionManagerStartSession[0])(a1, a2);
}

uint64_t initMRMediaRemoteSetCanBeNowPlayingApplication(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetCanBeNowPlayingApplication[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetCanBeNowPlayingApplication");
  return ((uint64_t (*)(uint64_t))softLinkMRMediaRemoteSetCanBeNowPlayingApplication[0])(a1);
}

uint64_t initMRMediaRemoteSetNowPlayingApplicationOverrideEnabled(uint64_t a1)
{
  if (MediaRemoteLibrary_sOnce != -1)
    dispatch_once(&MediaRemoteLibrary_sOnce, &__block_literal_global_120);
  softLinkMRMediaRemoteSetNowPlayingApplicationOverrideEnabled[0] = (uint64_t (*)())dlsym((void *)MediaRemoteLibrary_sLib, "MRMediaRemoteSetNowPlayingApplicationOverrideEnabled");
  return ((uint64_t (*)(uint64_t))softLinkMRMediaRemoteSetNowPlayingApplicationOverrideEnabled[0])(a1);
}

uint64_t APAdvertiserGetTypeID()
{
  if (APAdvertiserGetTypeID_initOnce != -1)
    dispatch_once_f(&APAdvertiserGetTypeID_initOnce, &APAdvertiserGetTypeID_typeID, (dispatch_function_t)_APAdvertiserClassRegister);
  return APAdvertiserGetTypeID_typeID;
}

uint64_t _APAdvertiserClassRegister(uint64_t *a1)
{
  uint64_t result;

  result = _CFRuntimeRegisterClass();
  *a1 = result;
  return result;
}

void _APAdvertiserFinalize(uint64_t a1)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  NSObject *v8;
  NSObject *v9;

  _APAdvertiserDestroySubAdvertiser(a1 + 128);
  _APAdvertiserDestroySubAdvertiser(a1 + 136);
  _APAdvertiserDestroySubAdvertiser(a1 + 144);
  _APAdvertiserDestroySubAdvertiser(a1 + 152);
  _APAdvertiserDestroySubAdvertiser(a1 + 160);
  _APAdvertiserDestroySubAdvertiser(a1 + 168);
  v2 = *(const void **)(a1 + 96);
  if (v2)
  {
    CFRelease(v2);
    *(_QWORD *)(a1 + 96) = 0;
  }
  v3 = *(const void **)(a1 + 104);
  if (v3)
  {
    CFRelease(v3);
    *(_QWORD *)(a1 + 104) = 0;
  }
  v4 = *(const void **)(a1 + 216);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(a1 + 216) = 0;
  }
  v5 = *(const void **)(a1 + 40);
  if (v5)
  {
    CFRelease(v5);
    *(_QWORD *)(a1 + 40) = 0;
  }
  v6 = *(const void **)(a1 + 72);
  if (v6)
  {
    CFRelease(v6);
    *(_QWORD *)(a1 + 72) = 0;
  }
  v7 = *(const void **)(a1 + 112);
  if (v7)
  {
    CFRelease(v7);
    *(_QWORD *)(a1 + 112) = 0;
  }
  v8 = *(NSObject **)(a1 + 64);
  if (v8)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
    dispatch_release(v8);
    *(_QWORD *)(a1 + 64) = 0;
  }
  v9 = *(NSObject **)(a1 + 16);
  if (v9)
  {
    dispatch_release(v9);
    *(_QWORD *)(a1 + 16) = 0;
  }
}

void _APAdvertiserDestroySubAdvertiser(uint64_t a1)
{
  _QWORD *v2;

  v2 = *(_QWORD **)a1;
  if (v2)
  {
    if (v2[1])
    {
      BonjourAdvertiserStop();
      CFRelease(*(CFTypeRef *)(*(_QWORD *)a1 + 8));
      *(_QWORD *)(*(_QWORD *)a1 + 8) = 0;
      v2 = *(_QWORD **)a1;
    }
    if (!v2[2]
      || (BonjourAdvertiserStop(),
          CFRelease(*(CFTypeRef *)(*(_QWORD *)a1 + 16)),
          *(_QWORD *)(*(_QWORD *)a1 + 16) = 0,
          (v2 = *(_QWORD **)a1) != 0))
    {
      free(v2);
      *(_QWORD *)a1 = 0;
    }
  }
}

uint64_t APAdvertiserCreate(const __CFDictionary *a1, uint64_t *a2)
{
  _OWORD *Instance;
  uint64_t v5;
  dispatch_queue_t v6;
  uint64_t v7;
  unsigned int v8;
  const void *Value;
  char v10;
  const void *SharedHelper;
  CFTypeRef v12;
  NSObject *v13;
  uint64_t result;
  _QWORD block[6];
  char v16;
  char v17[17];
  uint64_t v18;

  v18 = *MEMORY[0x24BDAC8D0];
  if (APAdvertiserGetTypeID_initOnce != -1)
    dispatch_once_f(&APAdvertiserGetTypeID_initOnce, &APAdvertiserGetTypeID_typeID, (dispatch_function_t)_APAdvertiserClassRegister);
  Instance = (_OWORD *)_CFRuntimeCreateInstance();
  if (Instance)
  {
    v5 = (uint64_t)Instance;
    Instance[13] = 0u;
    Instance[14] = 0u;
    Instance[11] = 0u;
    Instance[12] = 0u;
    Instance[9] = 0u;
    Instance[10] = 0u;
    Instance[7] = 0u;
    Instance[8] = 0u;
    Instance[5] = 0u;
    Instance[6] = 0u;
    Instance[3] = 0u;
    Instance[4] = 0u;
    Instance[1] = 0u;
    Instance[2] = 0u;
    v6 = dispatch_queue_create("APAdvertiser", 0);
    *(_QWORD *)(v5 + 16) = v6;
    if (v6)
    {
      v7 = FigCFWeakReferenceHolderCreateWithReferencedObject();
      *(_QWORD *)(v5 + 88) = v7;
      if (v7)
      {
        *(_BYTE *)(v5 + 120) = 1;
        if (a1)
        {
          *(_BYTE *)(v5 + 180) = CFDictionaryGetInt64() != 0;
          *(_BYTE *)(v5 + 181) = CFDictionaryGetInt64() != 0;
          if (CFDictionaryGetValue(a1, CFSTR("interfaceName")))
          {
            CFGetCString();
            if (v17[0])
            {
              v8 = if_nametoindex(v17);
              if (v8)
                *(_DWORD *)(v5 + 28) = v8;
            }
          }
          *(_DWORD *)(v5 + 24) = CFDictionaryGetInt64Ranged();
          Value = CFDictionaryGetValue(a1, CFSTR("systemInfo"));
          *(_QWORD *)(v5 + 216) = Value;
          if (Value)
            CFRetain(Value);
        }
        *(_BYTE *)(v5 + 121) = IsAppleTV();
        FigCFDictionaryGetBooleanIfPresent();
        if (*(_BYTE *)(v5 + 181))
        {
          *(_BYTE *)(v5 + 120) = 0;
          _APAdvertiserEnsureAssistedModeInfoCreated(v5, 0);
          v10 = 0;
        }
        else if (*(_BYTE *)(v5 + 180))
        {
          v10 = 0;
          *(_WORD *)(v5 + 120) = 0;
        }
        else
        {
          v10 = 1;
        }
        SharedHelper = (const void *)APConnectivityHelperGetSharedHelper();
        if (SharedHelper)
        {
          v12 = CFRetain(SharedHelper);
          *(_QWORD *)(v5 + 40) = v12;
          if (v12)
          {
            if (!APConnectivityHelperRegisterEventHandler()
              || gLogCategory_APAdvertiser > 90
              || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize())
            {
              goto LABEL_31;
            }
            goto LABEL_27;
          }
        }
        else
        {
          *(_QWORD *)(v5 + 40) = 0;
        }
        if (gLogCategory_APAdvertiser > 90
          || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_31;
        }
LABEL_27:
        LogPrintF();
LABEL_31:
        v13 = *(NSObject **)(v5 + 16);
        block[0] = MEMORY[0x24BDAC760];
        block[1] = 3221225472;
        block[2] = __APAdvertiserCreate_block_invoke;
        block[3] = &__block_descriptor_49_e5_v8__0l;
        v16 = v10;
        block[4] = v5;
        block[5] = a1;
        dispatch_sync(v13, block);
        result = 0;
        *a2 = v5;
        return result;
      }
    }
    APSLogErrorAt();
    APAdvertiserInvalidate(v5);
    CFRelease((CFTypeRef)v5);
  }
  else
  {
    APSLogErrorAt();
  }
  return 4294960568;
}

uint64_t _APAdvertiserEnsureAssistedModeInfoCreated(uint64_t result, int a2)
{
  uint64_t v2;
  const char *v3;
  size_t v4;
  char v5;
  unsigned __int8 *v6;
  int v7;

  v2 = result;
  v3 = (const char *)(result + 182);
  if (a2 || !*(_BYTE *)(result + 182))
  {
    do
    {
LABEL_3:
      while (1)
      {
        RandomString();
        v4 = strlen(v3);
        if (v4 >= 0xA && v4 <= 0xF)
          break;
        APSLogErrorAt();
      }
      v5 = *v3;
      v6 = (unsigned __int8 *)(v2 + 183);
    }
    while (!*v3);
    while ((v5 - 48) < 0xA)
    {
      v7 = *v6++;
      v5 = v7;
      if (!v7)
        goto LABEL_3;
    }
    return RandomString();
  }
  return result;
}

void _APAdvertiserHandleConnectivityHelperEvent(const void *a1, int a2, uint64_t a3, _QWORD *a4)
{
  NSObject *v7;
  _QWORD block[6];
  int v9;

  CFRetain(a1);
  CFRetain(a4);
  v7 = a4[2];
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = ___APAdvertiserHandleConnectivityHelperEvent_block_invoke;
  block[3] = &__block_descriptor_52_e5_v8__0l;
  v9 = a2;
  block[4] = a4;
  block[5] = a1;
  dispatch_async(v7, block);
}

uint64_t APAdvertiserInvalidate(uint64_t a1)
{
  NSObject *v1;
  uint64_t v2;
  _QWORD block[7];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;

  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v12 = 0;
  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v8 = 0;
  v1 = *(NSObject **)(a1 + 16);
  if (v1)
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APAdvertiserInvalidate_block_invoke;
    block[3] = &unk_24E21FAD8;
    block[5] = &v5;
    block[6] = a1;
    block[4] = &v9;
    dispatch_sync(v1, block);
    v2 = *((unsigned int *)v10 + 6);
    if (!(_DWORD)v2)
      v2 = *((unsigned int *)v6 + 6);
  }
  else
  {
    v2 = 0;
  }
  _Block_object_dispose(&v5, 8);
  _Block_object_dispose(&v9, 8);
  return v2;
}

uint64_t _APAdvertiserStop(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(result + 32))
  {
    v1 = result;
    *(_BYTE *)(result + 32) = 0;
    if (*(_QWORD *)(result + 40))
    {
      _APAdvertiserStopListeningForNetwork(result, 1, *(unsigned __int8 *)(result + 48));
      _APAdvertiserStopListeningForNetwork(v1, 7, *(unsigned __int8 *)(v1 + 49));
    }
    return _APAdvertiserUpdate(v1);
  }
  return result;
}

void _APAdvertiserSetNeedsNIRangingSession(uint64_t a1, int a2)
{
  uint64_t v4;

  if (*(unsigned __int8 *)(a1 + 224) != a2)
  {
    if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
      LogPrintF();
    *(_BYTE *)(a1 + 224) = a2;
    if (*(_QWORD *)(a1 + 216))
    {
      CMNotificationCenterGetDefaultLocalCenter();
      if (a2)
        FigNotificationCenterAddWeakListener();
      else
        FigNotificationCenterRemoveWeakListener();
      _APAdvertiserUpdateNIRangingSession(a1, v4);
    }
    else if (gLogCategory_APAdvertiser <= 90
           && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

void _APAdvertiserInfoHandleBluetoothAddressChanged(int a1, NSObject **cf)
{
  NSObject *v3;
  _QWORD block[5];

  CFRetain(cf);
  v3 = cf[2];
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = ___APAdvertiserInfoHandleBluetoothAddressChanged_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = cf;
  dispatch_async(v3, block);
}

void _APAdvertiserUpdateNIRangingSession(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  const __CFData *v4;
  const __CFData *v5;
  const void *v6;
  const UInt8 *v7;
  char v8;
  UInt8 *v9;
  dispatch_semaphore_t v10;
  NSObject *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  const UInt8 *BytePtr;
  _QWORD v18[6];

  v3 = *(_QWORD *)(a1 + 216);
  if (!v3)
  {
    APSLogErrorAt();
    goto LABEL_42;
  }
  v4 = (const __CFData *)APReceiverSystemInfoCopyProperty(v3, a2, (uint64_t)CFSTR("BluetoothAddress"), 0, 0);
  if (!v4)
  {
LABEL_42:
    v6 = 0;
LABEL_44:
    v8 = 1;
    goto LABEL_12;
  }
  v5 = v4;
  BytePtr = CFDataGetBytePtr(v4);
  v6 = (const void *)CFStringCreateF();
  if (!v6)
  {
    APSLogErrorAt();
    CFRelease(v5);
    goto LABEL_44;
  }
  CFRelease(v5);
  if (*(_BYTE *)(a1 + 224))
  {
    if (*(_QWORD *)(a1 + 232))
    {
      if (!APSIsProximityReceiverEnabled())
        goto LABEL_40;
      v7 = *(const UInt8 **)(a1 + 232);
      if (!v7)
        goto LABEL_40;
      if (gLogCategory_APAdvertiser > 50)
        goto LABEL_23;
      if (gLogCategory_APAdvertiser == -1)
      {
        if (!_LogCategory_Initialize())
        {
LABEL_23:
          v10 = dispatch_semaphore_create(0);
          if (v10)
          {
            v11 = v10;
            v12 = *(void **)(a1 + 232);
            v18[0] = MEMORY[0x24BDAC760];
            v18[1] = 3221225472;
            v18[2] = ___APAdvertiserUpdateNIRangingSessionWithDeviceIdentifier_block_invoke;
            v18[3] = &unk_24E21DF50;
            v18[4] = v11;
            v18[5] = a1;
            objc_msgSend(v12, "updateResponderDeviceIdentifier:completionHandler:", v6, v18, BytePtr);
            dispatch_semaphore_wait(v11, 0xFFFFFFFFFFFFFFFFLL);
            dispatch_release(v11);
          }
          else
          {
            APSLogErrorAt();
          }
          goto LABEL_40;
        }
        v7 = *(const UInt8 **)(a1 + 232);
      }
      BytePtr = v7;
      LogPrintF();
      goto LABEL_23;
    }
    if (APSIsProximityReceiverEnabled())
    {
      if (!*(_QWORD *)(a1 + 232))
      {
        if (gLogCategory_APAdvertiser <= 50
          && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        getNISpatialBrowsingConfigurationClass[0]();
        v14 = (void *)objc_opt_new();
        v15 = v14;
        if (v14
          && (objc_msgSend(v14, "setResponder:", 1, BytePtr),
              objc_msgSend(v15, "setDeviceIdentifier:", v6),
              getNISessionClass(),
              v16 = (void *)objc_opt_new(),
              (*(_QWORD *)(a1 + 232) = v16) != 0))
        {
          objc_msgSend(v16, "runWithConfiguration:", v15);
          if (gLogCategory_APAdvertiser <= 50
            && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          APSLogErrorAt();
        }
        goto LABEL_39;
      }
      APSLogErrorAt();
    }
    v15 = 0;
LABEL_39:

LABEL_40:
    CFRelease(v6);
    return;
  }
  v8 = 0;
LABEL_12:
  if (APSIsProximityReceiverEnabled())
  {
    v9 = *(UInt8 **)(a1 + 232);
    if (v9)
    {
      if (gLogCategory_APAdvertiser <= 50)
      {
        if (gLogCategory_APAdvertiser != -1 || (v13 = _LogCategory_Initialize(), v9 = *(UInt8 **)(a1 + 232), v13))
        {
          BytePtr = v9;
          LogPrintF();
          v9 = *(UInt8 **)(a1 + 232);
        }
      }
      -[UInt8 invalidate](v9, "invalidate", BytePtr);

      *(_QWORD *)(a1 + 232) = 0;
      if (gLogCategory_APAdvertiser <= 50
        && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  if ((v8 & 1) == 0)
    goto LABEL_40;
}

uint64_t NISpatialBrowsingConfigurationFunction()
{
  return classNISpatialBrowsingConfiguration;
}

Class initNISpatialBrowsingConfiguration()
{
  Class result;

  if (NearbyInteractionLibrary_sOnce != -1)
    dispatch_once(&NearbyInteractionLibrary_sOnce, &__block_literal_global_167);
  result = objc_getClass("NISpatialBrowsingConfiguration");
  classNISpatialBrowsingConfiguration = (uint64_t)result;
  getNISpatialBrowsingConfigurationClass[0] = NISpatialBrowsingConfigurationFunction;
  return result;
}

uint64_t NISessionFunction()
{
  return classNISession;
}

Class initNISession()
{
  Class result;

  if (NearbyInteractionLibrary_sOnce != -1)
    dispatch_once(&NearbyInteractionLibrary_sOnce, &__block_literal_global_167);
  result = objc_getClass("NISession");
  classNISession = (uint64_t)result;
  getNISessionClass = NISessionFunction;
  return result;
}

uint64_t _APAdvertiserStopListeningForNetwork(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t result;

  if (!a3)
  {
    result = APConnectivityHelperDeregisterForEvent();
    if ((_DWORD)result)
    {
      result = APSLogErrorAt();
      if (gLogCategory_APAdvertiser <= 90)
      {
        if (gLogCategory_APAdvertiser != -1)
          return LogPrintF();
        result = _LogCategory_Initialize();
        if ((_DWORD)result)
          return LogPrintF();
      }
    }
  }
  return result;
}

uint64_t _APAdvertiserUpdate(uint64_t a1)
{
  unsigned int updated;
  unsigned int v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  const void *v11;
  int v12;
  int v13;
  const char *v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t Instance;
  uint64_t v22;
  APAdvertiserBTLEManager *v23;
  int v24;
  int v25;
  CFNumberRef v26;
  CFNumberRef v27;
  int v28;
  void *v29;
  NSObject *v30;
  uint64_t *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  void *v38;
  NSObject *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  dispatch_queue_t v48;
  dispatch_queue_t v49;
  NSObject *v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v57;
  int v58;
  const char *v59;
  uint64_t v60;
  __int16 v61;
  uint64_t v62;
  uint64_t block;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t *v67;
  uint64_t *v68;
  __int16 *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  int v73;

  updated = _APAdvertiserUpdateSubAdvertiserState(a1, 0, (uint64_t *)(a1 + 128));
  if (*(_BYTE *)(a1 + 121))
    v3 = 2;
  else
    v3 = 1;
  v4 = a1 + 136;
  v5 = _APAdvertiserUpdateSubAdvertiserState(a1, v3, (uint64_t *)(a1 + 136));
  if (!updated)
    updated = v5;
  v6 = _APAdvertiserUpdateSubAdvertiserState(a1, 3u, (uint64_t *)(a1 + 144));
  if (!updated)
    updated = v6;
  v7 = _APAdvertiserUpdateSubAdvertiserState(a1, 5u, (uint64_t *)(a1 + 152));
  if (!updated)
    updated = v7;
  v8 = _APAdvertiserUpdateSubAdvertiserState(a1, 4u, (uint64_t *)(a1 + 160));
  if (!updated)
    updated = v8;
  v9 = _APAdvertiserUpdateSubAdvertiserState(a1, 8u, (uint64_t *)(a1 + 168));
  if (!updated)
    updated = v9;
  if (*(_BYTE *)(a1 + 181)
    || !*(_BYTE *)(a1 + 49)
    || (*(_BYTE *)(a1 + 121) && *(_QWORD *)v4 && *(_BYTE *)(*(_QWORD *)v4 + 4) && !*(_BYTE *)(a1 + 178)
      ? (v10 = *(_BYTE *)(a1 + 179) != 0)
      : (v10 = 1),
        *(_BYTE *)(a1 + 176) && v10 == *(unsigned __int8 *)(a1 + 177)))
  {
    v13 = 0;
  }
  else
  {
    if (APSIsVirtualMachine())
    {
      if (gLogCategory_APAdvertiser > 50 || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize())
        goto LABEL_38;
      goto LABEL_36;
    }
    if ((objc_msgSend((id)objc_msgSend(MEMORY[0x24BEC2A58], "currentState"), "supportsSoloMode") & 1) != 0)
    {
      v11 = *(const void **)(a1 + 112);
      if (v10)
      {
        if (!v11)
        {
          v12 = APSWiFiTransactionCreate();
          if (v12)
          {
            v13 = v12;
            APSLogErrorAt();
            goto LABEL_39;
          }
        }
      }
      else if (v11)
      {
        CFRelease(v11);
        *(_QWORD *)(a1 + 112) = 0;
      }
      if (gLogCategory_APAdvertiser > 50 || gLogCategory_APAdvertiser == -1 && !_LogCategory_Initialize())
        goto LABEL_38;
      v14 = "Enable";
      if (!v10)
        v14 = "Disable";
      v59 = v14;
      v60 = 0;
LABEL_36:
      LogPrintF();
LABEL_38:
      v13 = 0;
      *(_BYTE *)(a1 + 177) = v10;
      *(_BYTE *)(a1 + 176) = 1;
      goto LABEL_39;
    }
    APSLogErrorAt();
    v13 = -6735;
  }
LABEL_39:
  if (updated)
    v15 = updated;
  else
    v15 = v13;
  LOWORD(v62) = 0;
  v16 = *(_DWORD *)(a1 + 56);
  if ((v16 & 2) != 0 && (*(_BYTE *)(a1 + 52) & 2) == 0 && *(_BYTE *)(a1 + 49)
    || (v16 & 8) != 0 && (*(_BYTE *)(a1 + 52) & 8) == 0 && *(_BYTE *)(a1 + 49))
  {
    v17 = 1;
  }
  else
  {
    v17 = (v16 & 0x20) != 0 && (*(_BYTE *)(a1 + 52) & 0x20) == 0 && *(_BYTE *)(a1 + 48) != 0;
  }
  if (*(_BYTE *)(a1 + 181))
    goto LABEL_126;
  v18 = *(_QWORD *)(a1 + 96);
  v19 = MEMORY[0x24BDAC760];
  if (*(_BYTE *)(a1 + 32))
  {
    v20 = (uint64_t *)MEMORY[0x24BDBD270];
    if (v18)
      goto LABEL_63;
    if (gAPAdvertiserBTLEManagerInitOnce != -1)
      dispatch_once(&gAPAdvertiserBTLEManagerInitOnce, &__block_literal_global_4847);
    Instance = _CFRuntimeCreateInstance();
    if (Instance
      && (v22 = Instance,
          *(_QWORD *)(Instance + 16) = 0,
          v23 = -[APAdvertiserBTLEManager initWithEventContext:]([APAdvertiserBTLEManager alloc], "initWithEventContext:", Instance), (*(_QWORD *)(v22 + 16) = v23) != 0))
    {
      *(_QWORD *)(a1 + 96) = v22;
      if (*(_BYTE *)(a1 + 180))
      {
        v24 = APAdvertiserBTLEManagerSetProperty(v23, (uint64_t)CFSTR("requireAltBrowser"), *v20);
        if (v24)
        {
          v34 = v24;
          goto LABEL_153;
        }
        v22 = *(_QWORD *)(a1 + 96);
      }
      v25 = objc_msgSend(*(id *)(v22 + 16), "setEventHandler:withContext:", _APAdvertiserBTLEEventHandler, *(_QWORD *)(a1 + 88), v59, v60);
      if (!v25)
      {
        v26 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt16Type, (const void *)(a1 + 24));
        if (v26)
        {
          v27 = v26;
          v28 = APAdvertiserBTLEManagerSetProperty(*(void **)(*(_QWORD *)(a1 + 96) + 16), (uint64_t)CFSTR("receiverPort"), (uint64_t)v26);
          if (!v28)
          {
            CFRelease(v27);
            v18 = *(_QWORD *)(a1 + 96);
            if (!v18)
            {
              APSLogErrorAt();
              goto LABEL_85;
            }
LABEL_63:
            v70 = 0;
            v71 = &v70;
            v72 = 0x2020000000;
            v73 = 0;
            v29 = *(void **)(v18 + 16);
            v30 = objc_msgSend(v29, "internalQueue", v59);
            block = v19;
            v64 = 3221225472;
            v65 = __APAdvertiserBTLEManagerGetBTLEMode_block_invoke;
            v66 = &unk_24E21FC78;
            v67 = (uint64_t *)v29;
            v68 = &v70;
            v69 = (__int16 *)&v62;
            dispatch_sync(v30, &block);
            _Block_object_dispose(&v70, 8);
            v31 = (uint64_t *)MEMORY[0x24BDBD268];
            if (v17)
              v31 = v20;
            v32 = APAdvertiserBTLEManagerSetProperty(*(void **)(*(_QWORD *)(a1 + 96) + 16), (uint64_t)CFSTR("isP2PAllowed"), *v31);
            if (v32)
            {
              v34 = v32;
            }
            else if ((unsigned __int16)v62 == 1)
            {
              if (!*(_QWORD *)(a1 + 72) || !*(_BYTE *)(a1 + 80))
                goto LABEL_85;
              if (gLogCategory_APAdvertiser <= 40
                && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              v37 = _APAdvertiserSetBTLEParameters(a1);
              if (!v37)
              {
                v38 = *(void **)(*(_QWORD *)(a1 + 96) + 16);
                v39 = objc_msgSend(v38, "internalQueue");
                block = v19;
                v64 = 3221225472;
                v65 = __APAdvertiserBTLEManagerRestartAdvertising_block_invoke;
                v66 = &unk_24E21FC00;
                v67 = (uint64_t *)v38;
                dispatch_sync(v39, &block);
                goto LABEL_85;
              }
              v34 = v37;
            }
            else
            {
              v36 = _APAdvertiserSetBTLEParameters(a1);
              if (v36)
              {
                v34 = v36;
              }
              else
              {
                v34 = APAdvertiserBTLEManagerSetBTLEMode(*(void **)(*(_QWORD *)(a1 + 96) + 16), 1);
                if (!v34)
                  goto LABEL_86;
              }
            }
            goto LABEL_154;
          }
          v34 = v28;
          APSLogErrorAt();
          CFRelease(v27);
        }
        else
        {
          APSLogErrorAt();
          v34 = -6728;
        }
LABEL_154:
        APSLogErrorAt();
        goto LABEL_86;
      }
      v34 = v25;
    }
    else
    {
      APSLogErrorAt();
      v34 = -72312;
    }
LABEL_153:
    APSLogErrorAt();
    goto LABEL_154;
  }
  if (!v18)
  {
LABEL_85:
    v34 = 0;
    goto LABEL_86;
  }
  v33 = APAdvertiserBTLEManagerSetBTLEMode(*(void **)(v18 + 16), 0);
  v34 = 0;
  if (v33)
  {
    v35 = v33;
    APSLogErrorAt();
    v34 = v35;
  }
LABEL_86:
  v40 = *(unsigned __int8 *)(a1 + 181);
  if (!v15)
    v15 = v34;
  v61 = 0;
  if (v40)
    goto LABEL_126;
  v41 = *(_QWORD *)(a1 + 104);
  if (!*(_BYTE *)(a1 + 32))
  {
    if (v41)
    {
      v44 = APAdvertiserRapportManagerSetMode(v41, 0);
      if (v44)
      {
        v45 = v44;
        APSLogErrorAt();
        v46 = v45;
        goto LABEL_137;
      }
    }
    goto LABEL_126;
  }
  if (v41)
  {
LABEL_111:
    v70 = 0;
    v71 = &v70;
    v72 = 0x2020000000;
    v73 = 0;
    v51 = *(NSObject **)(v41 + 40);
    block = v19;
    v64 = 3221225472;
    v65 = __APAdvertiserRapportManagerGetMode_block_invoke;
    v66 = &unk_24E21FA68;
    v67 = &v70;
    v68 = (uint64_t *)v41;
    v69 = &v61;
    dispatch_sync(v51, &block);
    _Block_object_dispose(&v70, 8);
    if (v61 != 1)
    {
      v55 = _APAdvertiserSetRapportParameters(a1, v52, v53, v54);
      if (v55)
      {
        v46 = v55;
      }
      else
      {
        v46 = APAdvertiserRapportManagerSetMode(*(_QWORD *)(a1 + 104), 1);
        if (!v46)
          goto LABEL_127;
      }
      goto LABEL_136;
    }
    if (*(_QWORD *)(a1 + 72) && *(_BYTE *)(a1 + 80))
    {
      v46 = _APAdvertiserSetRapportParameters(a1, v52, v53, v54);
      if (!v46)
        goto LABEL_127;
      goto LABEL_136;
    }
LABEL_126:
    v46 = 0;
    goto LABEL_127;
  }
  v70 = 0;
  v71 = &v70;
  v72 = 0x2020000000;
  v73 = 0;
  if (gAPAdvertiserRapportManagerInitOnce != -1)
    dispatch_once(&gAPAdvertiserRapportManagerInitOnce, &__block_literal_global_4645);
  v42 = _CFRuntimeCreateInstance();
  v43 = (uint64_t *)v42;
  if (!v42)
  {
    APSLogErrorAt();
    v46 = -72412;
    *((_DWORD *)v71 + 6) = -72412;
    _Block_object_dispose(&v70, 8);
    goto LABEL_136;
  }
  *(_OWORD *)(v42 + 16) = 0u;
  *(_QWORD *)(v42 + 80) = 0;
  *(_OWORD *)(v42 + 48) = 0u;
  *(_OWORD *)(v42 + 64) = 0u;
  *(_OWORD *)(v42 + 32) = 0u;
  if (gLogCategory_APAdvertiserRapportManager <= 50
    && (gLogCategory_APAdvertiserRapportManager != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v62 = 0;
  if (_APAdvertiserRapportManager_getActiveManagers_once != -1)
    dispatch_once(&_APAdvertiserRapportManager_getActiveManagers_once, &__block_literal_global_9);
  if (FigCFWeakReferenceTableAddValueAndGetKey())
    APSLogErrorAt();
  v47 = v62;
  v43[2] = v62;
  if (v47)
  {
    v48 = dispatch_queue_create("APAdvertiserRapportManagerInternalQueue", 0);
    v43[5] = (uint64_t)v48;
    if (v48)
    {
      v49 = dispatch_queue_create("APAdvertiserRapportManagerEventQueue", 0);
      v43[4] = (uint64_t)v49;
      if (v49)
      {
        v50 = v43[5];
        block = v19;
        v64 = 3221225472;
        v65 = __APAdvertiserRapportManagerCreate_block_invoke;
        v66 = &unk_24E21F9D0;
        v67 = &v70;
        v68 = v43;
        dispatch_sync(v50, &block);
        if (!*((_DWORD *)v71 + 6))
        {
          *(_QWORD *)(a1 + 104) = v43;
          _Block_object_dispose(&v70, 8);
          goto LABEL_110;
        }
        APSLogErrorAt();
        goto LABEL_147;
      }
    }
    APSLogErrorAt();
    v58 = -72412;
  }
  else
  {
    APSLogErrorAt();
    v58 = -6728;
  }
  *((_DWORD *)v71 + 6) = v58;
LABEL_147:
  CFRelease(v43);
  v46 = *((_DWORD *)v71 + 6);
  _Block_object_dispose(&v70, 8);
  if (!v46)
  {
LABEL_110:
    v41 = *(_QWORD *)(a1 + 104);
    if (!v41)
    {
      APSLogErrorAt();
      goto LABEL_126;
    }
    goto LABEL_111;
  }
LABEL_136:
  APSLogErrorAt();
LABEL_137:
  v57 = *(_QWORD *)(a1 + 104);
  if (v57)
    APAdvertiserRapportManagerSetMode(v57, 0);
LABEL_127:
  if (v15)
    return v15;
  else
    return v46;
}

void sub_21E0EED24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _APAdvertiserUpdateSubAdvertiserState(uint64_t a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v6;
  int v7;
  _BYTE *v9;
  int v10;
  uint64_t updated;
  BOOL v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  const char *v16;
  int v17;
  unsigned int v18;
  int v19;
  char *v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t RAOPServiceName;
  uint64_t v31;
  uint64_t v32;
  CFTypeRef v33;
  CFTypeRef cf;
  char v35[16];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  v6 = *a3;
  if (*a3)
    v7 = *(unsigned __int8 *)(v6 + 4);
  else
    v7 = 0;
  if ((*(_DWORD *)(a1 + 56) & (1 << a2)) == 0)
    goto LABEL_33;
  if ((*(_DWORD *)(a1 + 52) & (1 << a2)) != 0 || a2 > 8)
    goto LABEL_33;
  if (((1 << a2) & 0x10E) != 0)
  {
    v9 = (_BYTE *)(a1 + 49);
  }
  else
  {
    if (((1 << a2) & 0x30) == 0)
    {
      if (a2)
        goto LABEL_33;
      goto LABEL_16;
    }
    v9 = (_BYTE *)(a1 + 48);
  }
  if (!*v9)
    goto LABEL_33;
LABEL_16:
  if (*(_BYTE *)(a1 + 32))
  {
    if (*(_BYTE *)(a1 + 178))
      v10 = 1;
    else
      v10 = *(_BYTE *)(a1 + 179) != 0;
    if ((a2 & 0xFFFFFFFD) != 1)
    {
      if (a2 > 5 || ((1 << a2) & 0x2A) == 0)
      {
LABEL_25:
        if (v7)
        {
          if (*(_BYTE *)(a1 + 80))
          {
            updated = _APAdvertiserUpdateSubAdvertiserTXTRecordsAndStartIfNecessary(a1, *a3);
            if ((_DWORD)updated)
              APSLogErrorAt();
          }
          else
          {
            updated = 0;
          }
          if (v7 == 1)
            return updated;
LABEL_30:
          if (gLogCategory_APAdvertiser <= 90
            && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return updated;
        }
        if (v6)
        {
LABEL_54:
          v37 = 0u;
          v38 = 0u;
          *(_OWORD *)v35 = 0u;
          v36 = 0u;
          v33 = 0;
          cf = 0;
          if (*(_BYTE *)(v6 + 4))
          {
LABEL_97:
            updated = 0;
            goto LABEL_98;
          }
          if (!*(_QWORD *)(v6 + 8))
          {
            APSLogErrorAt();
            updated = 4294960587;
            goto LABEL_98;
          }
          LODWORD(v16) = 0;
          v17 = 0;
          v18 = *(_DWORD *)v6;
          if (*(_DWORD *)v6 > 8u)
          {
            v20 = 0;
            v23 = 0;
            v22 = 0;
            v24 = 0;
            goto LABEL_87;
          }
          v19 = 1 << v18;
          if (((1 << v18) & 0x127) != 0)
          {
            if (!*(_BYTE *)(a1 + 180))
            {
              if (v18 == 5)
              {
                v20 = "com.apple.airplay";
              }
              else if (v18 == 8)
              {
                v20 = v35;
                __sprintf_chk(v35, 0, 0x40uLL, "_%s._%s.", (const char *)(a1 + 182), "tcp");
                cf = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], (const char *)(a1 + 198), 0x8000100u);
                if (cf)
                {
LABEL_62:
                  v22 = *(_DWORD *)v6;
                  if (*(_DWORD *)v6 == 5)
                  {
                    v17 = 0;
                    v24 = 0x280000000000000;
                    v22 = 2304;
LABEL_80:
                    v23 = 1;
                    goto LABEL_86;
                  }
                  if (!v22)
                  {
                    v23 = 0;
                    v24 = 0;
                    v17 = *(_DWORD *)(a1 + 28);
LABEL_86:
                    v16 = "local.";
                    goto LABEL_87;
                  }
                  v27 = if_nametoindex("awdl0");
                  if (v27)
                  {
                    v17 = v27;
                    v22 = 0;
                    v24 = 0;
                    goto LABEL_80;
                  }
LABEL_125:
                  APSLogErrorAt();
                  updated = 4294960534;
LABEL_98:
                  if (cf)
                    CFRelease(cf);
                  if (v33)
                    CFRelease(v33);
                  if (!(_DWORD)updated)
                    return updated;
                  goto LABEL_124;
                }
              }
              else
              {
                v20 = "_airplay._tcp.";
              }
LABEL_61:
              v21 = APAdvertiserInfoCreateAirPlayServiceName(*(_QWORD *)(a1 + 72), &cf);
              if ((_DWORD)v21)
              {
                updated = v21;
                goto LABEL_120;
              }
              goto LABEL_62;
            }
            if (v18 == 1)
            {
              v20 = "_airplay-alt._tcp.";
              goto LABEL_61;
            }
          }
          else
          {
            v20 = 0;
            v23 = 0;
            v22 = 0;
            v24 = 0;
            if ((v19 & 0x18) == 0)
            {
LABEL_87:
              v29 = _APAdvertiserSetupBonjourAdvertiser(*(_QWORD *)(v6 + 8), (int)v16, v20, (CFStringRef)cf, v17, *(_DWORD *)(a1 + 24), v23, v24, v22);
              if ((_DWORD)v29)
              {
                updated = v29;
                goto LABEL_120;
              }
              if (!*(_QWORD *)(v6 + 16))
              {
LABEL_92:
                v32 = _APAdvertiserUpdateSubAdvertiserTXTRecordsAndStartIfNecessary(a1, v6);
                if (!(_DWORD)v32)
                {
                  *(_BYTE *)(v6 + 4) = 1;
                  if (gLogCategory_APAdvertiser <= 50
                    && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  goto LABEL_97;
                }
                updated = v32;
                goto LABEL_120;
              }
              if (!*(_BYTE *)(a1 + 180))
              {
                RAOPServiceName = APAdvertiserInfoCreateRAOPServiceName(*(_QWORD *)(a1 + 72), (__CFString **)&v33);
                if ((_DWORD)RAOPServiceName)
                {
                  updated = RAOPServiceName;
                }
                else
                {
                  v31 = _APAdvertiserSetupBonjourAdvertiser(*(_QWORD *)(v6 + 16), (int)"local.", "_raop._tcp.", (CFStringRef)v33, v17, *(_DWORD *)(a1 + 24), v23, 0, 0);
                  if (!(_DWORD)v31)
                    goto LABEL_92;
                  updated = v31;
                }
LABEL_120:
                APSLogErrorAt();
                goto LABEL_98;
              }
              goto LABEL_118;
            }
            if (!*(_BYTE *)(a1 + 180))
            {
              v26 = APAdvertiserInfoCreateRAOPServiceName(*(_QWORD *)(a1 + 72), (__CFString **)&cf);
              if ((_DWORD)v26)
              {
                updated = v26;
                goto LABEL_120;
              }
              if (*(_DWORD *)v6 == 4)
              {
                v17 = 0;
                v24 = 0x280000000000000;
                v22 = 2304;
              }
              else
              {
                v28 = if_nametoindex("awdl0");
                if (!v28)
                  goto LABEL_125;
                v17 = v28;
                v22 = 0;
                v24 = 0;
              }
              v23 = 1;
              v20 = "_airplay-p2p._tcp.";
              goto LABEL_86;
            }
          }
LABEL_118:
          APSLogErrorAt();
          goto LABEL_97;
        }
        v13 = malloc_type_calloc(1uLL, 0x18uLL, 0x102004069A7EC9CuLL);
        if (v13)
        {
          v6 = (uint64_t)v13;
          *v13 = a2;
          v14 = BonjourAdvertiserCreate();
          if ((_DWORD)v14)
          {
            updated = v14;
          }
          else
          {
            BonjourAdvertiserSetDispatchQueue();
            if (a2 > 2 || !*(_BYTE *)(a1 + 120))
              goto LABEL_53;
            v15 = BonjourAdvertiserCreate();
            if (!(_DWORD)v15)
            {
              BonjourAdvertiserSetDispatchQueue();
LABEL_53:
              *a3 = v6;
              goto LABEL_54;
            }
            updated = v15;
          }
          APSLogErrorAt();
          free((void *)v6);
        }
        else
        {
          APSLogErrorAt();
          updated = 4294960568;
        }
LABEL_124:
        APSLogErrorAt();
        goto LABEL_30;
      }
      v10 = *(_BYTE *)(a1 + 178) & 1;
    }
    if (v10)
      goto LABEL_25;
  }
LABEL_33:
  if (v6)
    v12 = v7 == 0;
  else
    v12 = 1;
  if (v12 || !*(_BYTE *)(v6 + 4) || !*(_QWORD *)(v6 + 8))
    return 0;
  BonjourAdvertiserStop();
  if (*(_QWORD *)(v6 + 16))
    BonjourAdvertiserStop();
  if (*(_DWORD *)v6 == 8)
    _APAdvertiserEnsureAssistedModeInfoCreated(a1, 1);
  updated = 0;
  *(_BYTE *)(v6 + 4) = 0;
  if (gLogCategory_APAdvertiser <= 50)
  {
    if (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize())
      LogPrintF();
    return 0;
  }
  return updated;
}

void _APAdvertiserBTLEEventHandler(uint64_t a1, int a2)
{
  uint64_t v3;
  const void *v4;
  NSObject *v5;
  _QWORD v6[5];
  int v7;

  v3 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (v3)
  {
    v4 = (const void *)v3;
    v5 = *(NSObject **)(v3 + 16);
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 3221225472;
    v6[2] = ___APAdvertiserBTLEEventHandler_block_invoke;
    v6[3] = &__block_descriptor_44_e5_v8__0l;
    v7 = a2;
    v6[4] = v4;
    dispatch_sync(v5, v6);
    CFRelease(v4);
  }
}

uint64_t _APAdvertiserSetBTLEParameters(uint64_t a1)
{
  uint64_t result;
  uint64_t PropertyInt64Sync;
  unsigned int v4;

  result = *(_QWORD *)(a1 + 72);
  if (result)
  {
    if (*(_QWORD *)(a1 + 96))
    {
      PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      result = APAdvertiserBTLEManagerSetProperty(*(void **)(*(_QWORD *)(a1 + 96) + 16), (uint64_t)CFSTR("accessControlType"), objc_msgSend(MEMORY[0x24BDD16E0], "numberWithUnsignedInt:", PropertyInt64Sync));
      v4 = result;
      if ((_DWORD)result)
      {
        APSLogErrorAt();
        return v4;
      }
    }
    else
    {
      APSLogErrorAt();
      return 0;
    }
  }
  return result;
}

uint64_t _APAdvertiserSetRapportParameters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  NSObject *v8;
  unsigned int v9;
  unsigned int v11;
  _QWORD block[8];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;

  v11 = 0;
  v5 = *(_QWORD *)(a1 + 72);
  if (v5)
  {
    if (*(_QWORD *)(a1 + 104))
    {
      v6 = APAdvertiserInfoCopyProperty(v5, a2, CFSTR("deviceID"), a4, (int *)&v11);
      if (v11)
      {
        APSLogErrorAt();
        v11 = -6705;
      }
      else
      {
        v7 = *(_QWORD *)(a1 + 104);
        v13 = 0;
        v14 = &v13;
        v15 = 0x2020000000;
        v16 = 0;
        v8 = *(NSObject **)(v7 + 40);
        block[0] = MEMORY[0x24BDAC760];
        block[1] = 3221225472;
        block[2] = __APAdvertiserRapportManagerSetProperty_block_invoke;
        block[3] = &unk_24E21FA18;
        block[4] = &v13;
        block[5] = v7;
        block[6] = CFSTR("deviceID");
        block[7] = v6;
        dispatch_sync(v8, block);
        v9 = *((_DWORD *)v14 + 6);
        _Block_object_dispose(&v13, 8);
        v11 = v9;
        if (v9)
          APSLogErrorAt();
      }
      if (v6)
        CFRelease(v6);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  return v11;
}

uint64_t _APAdvertiserHandleSourceDeviceNearbyEvent(uint64_t a1, char a2)
{
  uint64_t result;

  if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
    LogPrintF();
  *(_BYTE *)(a1 + 178) = a2;
  result = _APAdvertiserUpdate(a1);
  if ((_DWORD)result)
    return APSLogErrorAt();
  return result;
}

uint64_t _APAdvertiserUpdateSubAdvertiserTXTRecordsAndStartIfNecessary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  const void *BinaryTXTRecordFromTXTRecordBytes;
  uint64_t v6;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  CFTypeRef v11;
  CFTypeRef v12;
  CFTypeRef v13;
  CFTypeRef cf;
  unsigned int v15;

  v11 = 0;
  v12 = 0;
  if (!*(_QWORD *)(a2 + 8))
  {
    APSLogErrorAt();
    BinaryTXTRecordFromTXTRecordBytes = 0;
    v6 = 4294960587;
    goto LABEL_29;
  }
  v15 = 0;
  v13 = 0;
  cf = 0;
  v4 = *(_QWORD *)(a1 + 72);
  if (v4)
  {
    BinaryTXTRecordFromTXTRecordBytes = 0;
    switch(*(_DWORD *)a2)
    {
      case 0:
      case 1:
      case 2:
      case 8:
        v15 = APAdvertiserInfoCopyAirPlayDataWithNANServiceType(v4, 0, (CFDataRef *)&v12);
        if (v15)
          goto LABEL_43;
        goto LABEL_5;
      case 3:
        v15 = APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(v4, 0, (CFDataRef *)&v12);
        if (v15)
          goto LABEL_43;
        goto LABEL_5;
      case 4:
        v15 = APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(v4, 2, (CFDataRef *)&v12);
        if (v15)
          goto LABEL_43;
        goto LABEL_5;
      case 5:
        v15 = APAdvertiserInfoCopyAirPlayDataWithNANServiceType(v4, 2u, (CFDataRef *)&cf);
        if (v15
          || (v15 = APAdvertiserInfoCopyAirPlayP2PDataWithNANServiceType(*(_QWORD *)(a1 + 72), 0, (CFDataRef *)&v13)) != 0)
        {
LABEL_43:
          APSLogErrorAt();
LABEL_5:
          BinaryTXTRecordFromTXTRecordBytes = 0;
          break;
        }
        CFDataGetBytePtr((CFDataRef)cf);
        CFDataGetLength((CFDataRef)cf);
        BinaryTXTRecordFromTXTRecordBytes = (const void *)CreateBinaryTXTRecordFromTXTRecordBytes();
        if (!v15)
        {
          v12 = v13;
          v13 = 0;
          break;
        }
        APSLogErrorAt();
        if (BinaryTXTRecordFromTXTRecordBytes)
        {
          CFRelease(BinaryTXTRecordFromTXTRecordBytes);
          goto LABEL_5;
        }
        break;
      default:
        break;
    }
  }
  else
  {
    APSLogErrorAt();
    BinaryTXTRecordFromTXTRecordBytes = 0;
    v15 = -6709;
  }
  if (cf)
    CFRelease(cf);
  if (v13)
    CFRelease(v13);
  v6 = v15;
  if (v15)
    goto LABEL_42;
  updated = _APAdvertiserUpdateBonjourAdvertiser(a2, 1, (CFDataRef)v12, (const __CFData *)BinaryTXTRecordFromTXTRecordBytes);
  if ((_DWORD)updated)
  {
    v6 = updated;
LABEL_42:
    APSLogErrorAt();
    goto LABEL_29;
  }
  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_15;
  v8 = APAdvertiserInfoCopyRAOPData(*(_QWORD *)(a1 + 72), (CFDataRef *)&v11);
  if ((_DWORD)v8)
  {
    v6 = v8;
    goto LABEL_42;
  }
  v9 = _APAdvertiserUpdateBonjourAdvertiser(a2, 0, (CFDataRef)v11, 0);
  if ((_DWORD)v9)
  {
    v6 = v9;
    goto LABEL_42;
  }
LABEL_15:
  if (*(_BYTE *)(a2 + 4)
    && gLogCategory_APAdvertiser <= 50
    && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v6 = 0;
LABEL_29:
  if (v12)
    CFRelease(v12);
  if (BinaryTXTRecordFromTXTRecordBytes)
    CFRelease(BinaryTXTRecordFromTXTRecordBytes);
  if (v11)
    CFRelease(v11);
  return v6;
}

uint64_t _APAdvertiserSetupBonjourAdvertiser(int a1, int a2, const char *a3, CFStringRef theString, int a5, int a6, int a7, uint64_t a8, unsigned int a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[16];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  memset(v16, 0, sizeof(v16));
  if (!CFStringGetCString(theString, (char *)v16, 256, 0x8000100u))
  {
    APSLogErrorAt();
    return 4294960534;
  }
  v11 = BonjourAdvertiserSetDomain();
  if ((_DWORD)v11)
  {
    v14 = v11;
LABEL_18:
    APSLogErrorAt();
    return v14;
  }
  v12 = BonjourAdvertiserSetName();
  if ((_DWORD)v12)
  {
    v14 = v12;
    goto LABEL_18;
  }
  v13 = BonjourAdvertiserSetServiceType();
  if ((_DWORD)v13)
  {
    v14 = v13;
    goto LABEL_18;
  }
  v14 = a9;
  if ((a8 & 0x200000000000000) != 0)
  {
    if ((a9 >> 10) & 2 | (strcmp(a3, "com.apple.airplay") == 0))
      BonjourAdvertiserSetNANControlFlags();
  }
  else
  {
    BonjourAdvertiserSetInterfaceIndex();
  }
  BonjourAdvertiserSetPort();
  BonjourAdvertiserSetP2P();
  if (a8)
    BonjourAdvertiserSetFlags();
  if (a9)
  {
    BonjourAdvertiserSetTrafficFlags();
    return 0;
  }
  return v14;
}

uint64_t _APAdvertiserUpdateBonjourAdvertiser(uint64_t a1, int a2, CFDataRef theData, const __CFData *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (theData)
  {
    CFDataGetBytePtr(theData);
    CFDataGetLength(theData);
  }
  v7 = BonjourAdvertiserSetTXTRecord();
  if ((_DWORD)v7)
  {
    v9 = v7;
LABEL_17:
    APSLogErrorAt();
    return v9;
  }
  BonjourAdvertiserSetNANCustomData();
  if (gLogCategory_APAdvertiser <= 10 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
  {
    if (a4)
      CFDataGetLength(a4);
    LogPrintF();
  }
  if (*(_BYTE *)(a1 + 4))
    v8 = BonjourAdvertiserUpdate();
  else
    v8 = BonjourAdvertiserStart();
  v9 = v8;
  if ((_DWORD)v8)
    goto LABEL_17;
  return v9;
}

uint64_t _APAdvertiserProcessP2PConfig(uint64_t a1)
{
  int v2;
  uint64_t Int64;
  int v4;
  int v5;
  uint64_t v6;

  if (*(_BYTE *)(a1 + 181))
    return 0;
  v2 = *(unsigned __int8 *)(a1 + 121);
  Int64 = CFDictionaryGetInt64();
  if (v2)
    v4 = 4;
  else
    v4 = 2;
  if (Int64)
    v5 = *(_DWORD *)(a1 + 56) | v4;
  else
    v5 = *(_DWORD *)(a1 + 56) & ~v4;
  *(_DWORD *)(a1 + 56) = v5;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56) & 0xFFFFFFF7 | (8 * (CFDictionaryGetInt64() != 0));
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56) & 0xFFFFFFDF | (32 * (CFDictionaryGetInt64() != 0));
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a1 + 56) & 0xFFFFFFEF | (16 * (CFDictionaryGetInt64() != 0));
  v6 = _APAdvertiserUpdate(a1);
  if ((_DWORD)v6)
    APSLogErrorAt();
  return v6;
}

uint64_t APAdvertiserStart(uint64_t a1)
{
  NSObject *v1;
  uint64_t v2;
  _QWORD v4[6];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v8 = 0;
  v1 = *(NSObject **)(a1 + 16);
  v4[0] = MEMORY[0x24BDAC760];
  v4[1] = 3221225472;
  v4[2] = __APAdvertiserStart_block_invoke;
  v4[3] = &unk_24E21F9D0;
  v4[4] = &v5;
  v4[5] = a1;
  dispatch_sync(v1, v4);
  v2 = *((unsigned int *)v6 + 6);
  _Block_object_dispose(&v5, 8);
  return v2;
}

uint64_t _APAdvertiserStartListeningForNetwork(uint64_t result, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  if (!a3)
  {
    result = APConnectivityHelperRegisterForEvent();
    if ((_DWORD)result)
    {
      if (gLogCategory_APAdvertiser <= 90)
      {
        if (gLogCategory_APAdvertiser != -1)
          return LogPrintF();
        v4 = result;
        v3 = _LogCategory_Initialize();
        result = v4;
        if (v3)
          return LogPrintF();
      }
    }
  }
  return result;
}

uint64_t APAdvertiserFlushBonjourRecords(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  _QWORD block[7];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int v9;
  _QWORD v10[4];

  v10[0] = 0;
  v10[1] = v10;
  v10[2] = 0x2020000000;
  v10[3] = 0;
  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v9 = 0;
  if (gLogCategory_APAdvertiser <= 50 && (gLogCategory_APAdvertiser != -1 || _LogCategory_Initialize()))
    LogPrintF();
  v2 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __APAdvertiserFlushBonjourRecords_block_invoke;
  block[3] = &unk_24E21FAD8;
  block[5] = v10;
  block[6] = a1;
  block[4] = &v6;
  dispatch_sync(v2, block);
  v3 = *((unsigned int *)v7 + 6);
  _Block_object_dispose(&v6, 8);
  _Block_object_dispose(v10, 8);
  return v3;
}

void sub_21E0F0684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t APAdvertiserStop(uint64_t a1)
{
  NSObject *v1;
  _QWORD block[5];

  v1 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __APAdvertiserStop_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_sync(v1, block);
  return 0;
}

uint64_t APAdvertiserSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v3;
  uint64_t v4;
  _QWORD v6[8];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;

  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v10 = 0;
  if (a2 && a3)
  {
    v3 = *(NSObject **)(a1 + 16);
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 3221225472;
    v6[2] = __APAdvertiserSetProperty_block_invoke;
    v6[3] = &unk_24E21FA18;
    v6[4] = &v7;
    v6[5] = a2;
    v6[6] = a1;
    v6[7] = a3;
    dispatch_sync(v3, v6);
    v4 = *((unsigned int *)v8 + 6);
  }
  else
  {
    APSLogErrorAt();
    v4 = 4294960591;
    *((_DWORD *)v8 + 6) = -6705;
  }
  _Block_object_dispose(&v7, 8);
  return v4;
}

void sub_21E0F09B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_21E0F0DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t APAdvertiserCopyProperty(uint64_t a1, CFTypeRef cf1, CFTypeRef *a3)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD v10[6];

  if (!CFEqual(cf1, CFSTR("assistedModeInfo")))
    return 4294960569;
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 4, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (Mutable)
  {
    v6 = Mutable;
    v7 = *(NSObject **)(a1 + 16);
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 3221225472;
    v10[2] = ___APAdvertiserCopyAssistedModeInfo_block_invoke;
    v10[3] = &__block_descriptor_48_e5_v8__0l;
    v10[4] = a1;
    v10[5] = v6;
    dispatch_sync(v7, v10);
    *a3 = CFRetain(v6);
    CFRelease(v6);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    v8 = 4294960568;
    APSLogErrorAt();
  }
  return v8;
}

uint64_t APAdvertiserDebugShow(uint64_t a1, unsigned int a2, uint64_t a3)
{
  _QWORD v4[3];
  uint64_t v5;

  v4[0] = a1;
  v4[1] = a2;
  v4[2] = a3;
  v5 = 0;
  dispatch_sync_f(*(dispatch_queue_t *)(a1 + 16), v4, (dispatch_function_t)_APAdvertiserDebugShow);
  return v5;
}

void _APAdvertiserDebugShow(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const __CFString *v8;
  const char *v9;
  const char *v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v17;
  int v18;
  const char *v19;
  const char *v20;
  const char *v21;
  const __CFString *v22;
  int v23;
  uint64_t block;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int v35;

  v23 = 0;
  v2 = *a1;
  v3 = *((_DWORD *)a1 + 2);
  v4 = a1[2];
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  v7 = *(_QWORD *)(v2 + 72);
  if (v7)
  {
    v8 = (const __CFString *)APAdvertiserInfoCopyProperty(v7, v5, CFSTR("deviceID"), v6, &v23);
    FigCFStringGetCStringPtrAndBufferToFree();
    CFStringGetLength(v8);
    TextToHardwareAddressScalar();
  }
  else
  {
    v8 = 0;
  }
  v22 = v8;
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  if (*(_BYTE *)(v2 + 121))
    v9 = "yes";
  else
    v9 = "no";
  v21 = v9;
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  if (*(_BYTE *)(v2 + 181))
  {
    v22 = (const __CFString *)(v2 + 182);
    v21 = (const char *)(v2 + 198);
    DataBuffer_AppendF();
  }
  if (*(_BYTE *)(v2 + 178))
    v10 = "yes";
  else
    v10 = "no";
  if (*(_BYTE *)(v2 + 179))
    v11 = "yes";
  else
    v11 = "no";
  v19 = v10;
  v20 = v11;
  DataBuffer_AppendF();
  if (*(_QWORD *)(v2 + 72))
  {
    DataBuffer_AppendF();
    v23 = APAdvertiserInfoDebugShow(*(_QWORD *)(v2 + 72), v3, v4);
  }
  v12 = MEMORY[0x24BDAC760];
  if (*(_QWORD *)(v2 + 96))
  {
    DataBuffer_AppendF();
    v13 = *(_QWORD *)(v2 + 96);
    v32 = 0;
    v33 = &v32;
    v34 = 0x2020000000;
    v35 = 0;
    v14 = *(void **)(v13 + 16);
    v15 = objc_msgSend(v14, "internalQueue", "P2P", v19, v20, v21, v22);
    block = v12;
    v25 = 3221225472;
    v26 = __APAdvertiserBTLEManagerDebugShow_block_invoke;
    v27 = &unk_24E21FCA0;
    v28 = (uint64_t *)v14;
    v29 = &v32;
    v30 = v4;
    v31 = v3;
    dispatch_sync(v15, &block);
    LODWORD(v14) = *((_DWORD *)v33 + 6);
    _Block_object_dispose(&v32, 8);
    v23 = (int)v14;
  }
  if (*(_QWORD *)(v2 + 104))
  {
    DataBuffer_AppendF();
    v16 = *(_QWORD *)(v2 + 104);
    v32 = 0;
    v33 = &v32;
    v34 = 0x2020000000;
    v35 = 0;
    v17 = *(NSObject **)(v16 + 40);
    block = v12;
    v25 = 3221225472;
    v26 = __APAdvertiserRapportManagerDebugShow_block_invoke;
    v27 = &unk_24E21FA90;
    v28 = &v32;
    v29 = (uint64_t *)v16;
    v31 = v3;
    v30 = v4;
    dispatch_sync(v17, &block);
    v18 = *((_DWORD *)v33 + 6);
    _Block_object_dispose(&v32, 8);
    v23 = v18;
  }
  DataBuffer_AppendF();
  *((_DWORD *)a1 + 6) = v23;
  if (v8)
    CFRelease(v8);
}

void sub_21E0F1518(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 120), 8);
  _Unwind_Resume(a1);
}

uint64_t APAdvertiserReportNANIssue(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v4[6];

  if (a1 && a2)
  {
    v2 = *(NSObject **)(a1 + 16);
    v4[0] = MEMORY[0x24BDAC760];
    v4[1] = 3221225472;
    v4[2] = __APAdvertiserReportNANIssue_block_invoke;
    v4[3] = &__block_descriptor_48_e5_v8__0l;
    v4[4] = a1;
    v4[5] = a2;
    dispatch_sync(v2, v4);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
}

uint64_t APAdvertiserUpdateNANLinkStatus(uint64_t a1, int a2)
{
  NSObject *v2;
  _QWORD v4[5];
  _BOOL4 v5;

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v4[0] = MEMORY[0x24BDAC760];
    v4[1] = 3221225472;
    v4[2] = __APAdvertiserUpdateNANLinkStatus_block_invoke;
    v4[3] = &__block_descriptor_44_e5_v8__0l;
    v4[4] = a1;
    v5 = a2 != 0;
    dispatch_sync(v2, v4);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
}

uint64_t APAdvertiserCopyNANWifiStats(uint64_t a1, _QWORD *a2)
{
  const __CFArray *Mutable;
  dispatch_semaphore_t v5;
  NSObject *v6;
  NSObject *v7;
  dispatch_time_t v8;
  const void *ValueAtIndex;
  const void *v10;
  CFTypeID v11;
  CFTypeRef v12;
  uint64_t v13;
  CFTypeID v14;
  _QWORD block[8];
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v21 = 0;
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    v13 = 4294960591;
    goto LABEL_15;
  }
  Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
  if (!Mutable)
  {
    APSLogErrorAt();
    v13 = 4294960568;
    goto LABEL_15;
  }
  v5 = dispatch_semaphore_create(0);
  if (!v5)
  {
    APSLogErrorAt();
    v13 = 4294960568;
    goto LABEL_14;
  }
  v6 = v5;
  v7 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __APAdvertiserCopyNANWifiStats_block_invoke;
  block[3] = &unk_24E21FC28;
  block[6] = a1;
  block[7] = Mutable;
  block[4] = v6;
  block[5] = &v17;
  dispatch_sync(v7, block);
  if (!*((_BYTE *)v18 + 24))
  {
    v13 = 4294960561;
    goto LABEL_13;
  }
  v8 = dispatch_time(0, 1000000000);
  if (dispatch_semaphore_wait(v6, v8))
  {
    APSLogErrorAt();
    v13 = 4294960574;
    goto LABEL_13;
  }
  ValueAtIndex = CFArrayGetValueAtIndex(Mutable, 0);
  v10 = ValueAtIndex;
  if (!ValueAtIndex)
    goto LABEL_12;
  v11 = CFGetTypeID(ValueAtIndex);
  if (v11 != CFDictionaryGetTypeID())
  {
    v14 = CFGetTypeID(v10);
    if (v14 == CFNumberGetTypeID() && FigCFArrayGetInt64AtIndex())
    {
      v13 = v21;
      goto LABEL_13;
    }
LABEL_12:
    v13 = 4294960587;
    goto LABEL_13;
  }
  v12 = CFRetain(v10);
  v13 = 0;
  *a2 = v12;
LABEL_13:
  dispatch_release(v6);
LABEL_14:
  CFRelease(Mutable);
LABEL_15:
  _Block_object_dispose(&v17, 8);
  return v13;
}

void sub_21E0F1AF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t APReceiverRemoteControlSessionGetClassID()
{
  if (APReceiverRemoteControlSessionGetClassID_sRegisterOnce != -1)
    dispatch_once_f(&APReceiverRemoteControlSessionGetClassID_sRegisterOnce, &APReceiverRemoteControlSessionGetClassID_sClassID, (dispatch_function_t)rcs_getClassID);
  return APReceiverRemoteControlSessionGetClassID_sClassID;
}

uint64_t rcs_getClassID()
{
  CMBaseGetClassID();
  return FigBaseClassRegisterClass();
}

CFStringRef rcs_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, CFSTR("[APReceiverRemoteControlSession %p]"), a1);
}

uint64_t APReceiverRemoteControlSessionGetTypeID()
{
  if (APReceiverRemoteControlSessionGetClassID_sRegisterOnce != -1)
    dispatch_once_f(&APReceiverRemoteControlSessionGetClassID_sRegisterOnce, &APReceiverRemoteControlSessionGetClassID_sClassID, (dispatch_function_t)rcs_getClassID);
  return CMBaseClassGetCFTypeID();
}

uint64_t APReceiverAudioSessionRealTimeCreate(uint64_t a1, const void *a2, _OWORD *a3, const __CFDictionary *a4, uint64_t *a5)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  dispatch_queue_t v14;
  dispatch_queue_t v15;
  BOOL v16;
  uint64_t Int64;
  const __CFArray *TypedValue;
  CFIndex Count;
  __CFDictionary *v20;
  int v21;
  __CFDictionary *Mutable;
  const void **v23;
  const void *Value;
  CFTypeRef v25;
  uint64_t ASBD;
  int v27;
  int v28;
  const void *v29;
  CFTypeID v30;
  const void *v31;
  uint64_t v32;
  const void *v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  const void *v39;
  const void *v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  uint64_t v44;
  uint64_t i;
  CFDataRef v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  float v50;
  uint64_t v51;
  int v52;
  const __CFAllocator *v53;
  uint64_t v54;
  socklen_t Size;
  int v56;
  int v57;
  int v58;
  uint64_t BufferSize;
  size_t v60;
  size_t v61;
  void *v62;
  int v63;
  unint64_t v64;
  UInt32 v65;
  UInt32 v66;
  AudioConverterRef *v67;
  OSStatus v68;
  _QWORD *v69;
  uint64_t v70;
  BOOL v71;
  OSStatus v72;
  OSStatus Property;
  void *v74;
  int v75;
  OSStatus v76;
  unsigned int v77;
  OSStatus v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  _DWORD *v83;
  _DWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  int IntWithDefault;
  int v91;
  CFMutableDictionaryRef v92;
  __CFDictionary *v93;
  int v94;
  const void *v95;
  Float64 mSampleRate;
  uint64_t CMBaseObject;
  uint64_t (*v98)(uint64_t, _QWORD, _QWORD);
  Float64 v99;
  uint64_t v100;
  uint64_t (*v101)(uint64_t, _QWORD, _QWORD);
  uint64_t v102;
  uint64_t (*v103)(uint64_t, _QWORD, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), uint64_t, _QWORD);
  uint64_t v107;
  uint64_t (*v108)(uint64_t, _QWORD, _QWORD);
  uint64_t v109;
  uint64_t (*v110)(uint64_t);
  uint64_t v111;
  uint64_t (*v112)(uint64_t, _QWORD, const __CFAllocator *, uint64_t);
  uint64_t *v113;
  uint64_t v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  CFDataRef v121;
  void *v122;
  CFDataRef cf;
  __CFDictionary *v125;
  uint64_t *v126;
  __int128 v127;
  uint64_t v128;
  uint64_t AudioFormatIndex;
  _OWORD v130[2];
  uint64_t v131;
  unsigned int v132;
  const void *outPropertyData;
  char v134;
  char v135;
  __int16 v136;
  int v137;
  int v138;
  unsigned int v139;
  UInt32 ioPropertyDataSize;
  int inPropertyData;
  AudioStreamBasicDescription inDestinationFormat;
  AudioStreamBasicDescription inSourceFormat;
  uint64_t v144;

  v144 = *MEMORY[0x24BDAC8D0];
  v131 = 0;
  AudioFormatIndex = 0;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v10 = malloc_type_calloc(1uLL, 0x2470uLL, 0x10F0040E1765923uLL);
  if (!v10)
  {
    APSLogErrorAt();
    return -72150;
  }
  v11 = (uint64_t)v10;
  *v10 = a1;
  v10[4] = CFRetain(a2);
  *(_DWORD *)(v11 + 24) = 96;
  *(_BYTE *)(v11 + 96) = FigGetCFPreferenceNumberWithDefault();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(v130, 0, 28);
  v12 = FigCFWeakReferenceHolderCreateWithReferencedObject();
  *(_QWORD *)(v11 + 8) = v12;
  if (!v12)
    goto LABEL_276;
  v132 = APSRTCReportingAgentCreate();
  if (v132)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v132 = 0;
  }
  else if (gLogCategory_APReceiverAudioSessionRealTime <= 40
         && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v13 = FigSimpleMutexCreate();
  *(_QWORD *)(v11 + 2280) = v13;
  if (v13)
  {
    v14 = dispatch_queue_create("APReceiverAudioSessionPeriodicTaskQueue", 0);
    *(_QWORD *)(v11 + 8944) = v14;
    if (!v14
      || (v15 = dispatch_queue_create("APReceiverAudioSessionLogQueue", 0), (*(_QWORD *)(v11 + 9064) = v15) == 0))
    {
      APSLogErrorAt();
      v20 = 0;
      v132 = APSSignalErrorAt();
      goto LABEL_430;
    }
    if (CFDictionaryGetInt64())
      v16 = 0;
    else
      v16 = APSSettingsGetIntWithDefault() != 0;
    *(_BYTE *)(v11 + 9216) = v16;
    Int64 = CFDictionaryGetInt64();
    if (v132)
    {
      APSLogErrorAt();
      v20 = 0;
      goto LABEL_430;
    }
    if (CFDictionaryGetInt64Ranged() == 1381257248)
    {
      v126 = a5;
      if (!CFDictionaryContainsKey(a4, CFSTR("MediaDataControl")))
      {
        v125 = 0;
        goto LABEL_45;
      }
      CFArrayGetTypeID();
      TypedValue = (const __CFArray *)CFDictionaryGetTypedValue();
      Count = CFArrayGetCount(TypedValue);
      switch(Count)
      {
        case 0:
          goto LABEL_41;
        case 1:
LABEL_33:
          CFDataGetTypeID();
          CFArrayGetTypedValueAtIndex();
LABEL_41:
          Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
          v20 = Mutable;
          if (Mutable)
          {
            v23 = (const void **)MEMORY[0x24BDBD270];
            if (!Int64)
              v23 = (const void **)MEMORY[0x24BDBD268];
            CFDictionarySetValue(Mutable, CFSTR("MDC::AllowP2P"), *v23);
            FigCFDictionarySetValue();
            FigCFDictionarySetValue();
            CFDictionarySetValue(v20, CFSTR("MDC::Label"), CFSTR("RT"));
            CFDictionarySetInt64();
            FigCFDictionarySetInt32();
            *(_QWORD *)&v127 = a1;
            *((_QWORD *)&v127 + 1) = audioSession_handleMediaDataControlRequest;
            v128 = 0;
            *(_OWORD *)&inSourceFormat.mSampleRate = *a3;
            *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)((char *)a3 + 12);
            v125 = v20;
            v132 = APMediaDataControlServerCreate((uint64_t)&inSourceFormat, v20, &v127, (uint64_t *)(v11 + 40));
            if (v132)
              goto LABEL_318;
LABEL_45:
            *(_DWORD *)(v11 + 72) = CFDictionaryGetInt64();
            if (v132)
              goto LABEL_318;
            Value = CFDictionaryGetValue(a4, CFSTR("AudioFormat"));
            if (Value)
            {
              v25 = CFRetain(Value);
              *(_QWORD *)(v11 + 2288) = v25;
              if (v25)
              {
                AudioFormatIndex = APSAudioFormatDescriptionGetAudioFormatIndex();
LABEL_52:
                ASBD = APSAudioFormatDescriptionGetASBD();
                *(_DWORD *)(v11 + 92) = APAudioFormatIndexGetBitsPerChannel();
                if (!*(_DWORD *)(v11 + 72))
                  *(_DWORD *)(v11 + 72) = APAudioFormatIDToAPCompressionType();
                *(_DWORD *)(v11 + 76) = *(double *)ASBD;
                v27 = *(_DWORD *)(ASBD + 28);
                *(_DWORD *)(v11 + 80) = v27;
                v28 = *(_DWORD *)(ASBD + 24);
                *(_DWORD *)(v11 + 84) = v28;
                if (!v28)
                  *(_DWORD *)(v11 + 84) = (((*(_DWORD *)(v11 + 92) + 7) & 0xFFFFFFF8) * v27) >> 3;
                v29 = CFDictionaryGetValue(a4, CFSTR("NetworkClock"));
                *(_QWORD *)(v11 + 2296) = v29;
                if (v29)
                {
                  v30 = CFGetTypeID(v29);
                  if (v30 != APSNetworkClockGetTypeID())
                    goto LABEL_320;
                  v31 = *(const void **)(v11 + 2296);
                  if (v31)
                    CFRetain(v31);
                }
                *(_BYTE *)(v11 + 532) = 0;
                *(_DWORD *)(v11 + 528) = CFDictionaryGetInt64();
                if (!v132)
                {
                  *(_BYTE *)(v11 + 2304) = CFDictionaryGetInt64() != 0;
                  if (!v132)
                  {
                    v32 = CFDictionaryGetInt64();
                    if (!v132)
                    {
                      if (v32)
                        audioSession_updateCallDurationMetric(v11, 1);
                      v33 = CFDictionaryGetValue(a4, CFSTR("StatsCollector"));
                      *(_QWORD *)(v11 + 2336) = v33;
                      if (v33)
                        CFRetain(v33);
                      *(_QWORD *)(v11 + 9072) = (int)FigGetCFPreferenceNumberWithDefault();
                      v34 = CFDictionaryGetInt64();
                      if (v34 >= 1)
                        v35 = v34;
                      else
                        v35 = 6001;
                      *(_DWORD *)(v11 + 1568) = v35;
                      v36 = CFDictionaryGetInt64();
                      if (v36)
                      {
                        v37 = *(_DWORD *)(v11 + 76) * v36 / 0x3E8u;
                        *(_DWORD *)(v11 + 1612) = v37;
                      }
                      else
                      {
                        *(_DWORD *)(v11 + 1612) = CFDictionaryGetInt64();
                        v37 = CFDictionaryGetInt64();
                      }
                      *(_DWORD *)(v11 + 1616) = v37;
                      if (*(_BYTE *)(v11 + 2304))
                        v38 = 11;
                      else
                        v38 = 10;
                      *(_DWORD *)(v11 + 1624) = v38;
                      if (CFDictionaryContainsKey(a4, CFSTR("ClientDeviceModel")))
                      {
                        v39 = CFDictionaryGetValue(a4, CFSTR("ClientDeviceModel"));
                        *(_QWORD *)(v11 + 136) = v39;
                        if (v39)
                          CFRetain(v39);
                      }
                      if (CFDictionaryContainsKey(a4, CFSTR("ClientOSBuildVersion")))
                      {
                        v40 = CFDictionaryGetValue(a4, CFSTR("ClientOSBuildVersion"));
                        *(_QWORD *)(v11 + 144) = v40;
                        if (v40)
                          CFRetain(v40);
                      }
                      *(_DWORD *)(v11 + 156) = CFDictionaryGetInt64();
                      *(_DWORD *)(v11 + 152) = CFDictionaryGetInt64();
                      v41 = CFDictionaryGetInt64();
                      *(_DWORD *)(v11 + 88) = v41;
                      v42 = *(_DWORD *)(v11 + 76);
                      v43 = *(_DWORD *)(v11 + 84);
                      CFDictionaryGetData();
                      if (v132 == -6727)
                      {
                        v44 = Int64;
                        cf = 0;
                        v132 = 0;
                        goto LABEL_93;
                      }
                      if (!v132)
                      {
                        if (v131 == 32)
                        {
                          for (i = 160; i != 464; ++i)
                            *(_BYTE *)(v11 + i) = 0;
                          __memcpy_chk();
                          *(_BYTE *)(v11 + 160) = 1;
                          if (!*(_BYTE *)(v11 + 96))
                          {
                            v44 = Int64;
                            cf = 0;
                            goto LABEL_93;
                          }
                          v46 = CFDataCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (const UInt8 *)(v11 + 424), 32);
                          if (v46)
                          {
                            cf = v46;
                            v132 = APSCryptorChaCha20Poly1305Create();
                            if (v132)
                            {
                              APSLogErrorAt();
                              v121 = cf;
                              v20 = v125;
LABEL_428:
                              CFRelease(v121);
LABEL_429:
                              if (!v11)
                                goto LABEL_431;
                              goto LABEL_430;
                            }
                            v44 = Int64;
LABEL_93:
                            LODWORD(v47) = (v41 + v41 / (v42 / 0x3E8) + 16) * v43;
                            *(_DWORD *)(v11 + 1628) = 512;
                            if (v47 <= 0x5C0)
                              v47 = 1472;
                            else
                              v47 = v47;
                            *(_QWORD *)(v11 + 1632) = v47 + 12;
                            v48 = UpTicksPerSecond();
                            v49 = mach_absolute_time();
                            *(_QWORD *)(v11 + 1744) = SecondsToUpTicks();
                            *(_QWORD *)(v11 + 1752) = v49;
                            *(_QWORD *)(v11 + 1856) = 60 * v48;
                            *(_QWORD *)(v11 + 1848) = v49 + 60 * v48;
                            *(_QWORD *)(v11 + 1944) = v48;
                            *(_QWORD *)(v11 + 1936) = v49 + v48;
                            *(_QWORD *)(v11 + 1968) = 0x7FFFFFFFFFFFFFFFLL;
                            *(_DWORD *)(v11 + 1984) = 0;
                            *(_QWORD *)(v11 + 1976) = v49 + 8 * v48;
                            v50 = (float)((float)(unint64_t)v48
                                        * (float)FigGetCFPreferenceNumberWithDefault())
                                / 1000.0;
                            *(_QWORD *)(v11 + 9088) = (unint64_t)v50;
                            v51 = v49 + (unint64_t)v50;
                            *(_QWORD *)(v11 + 9080) = v51;
                            *(_QWORD *)(v11 + 9096) = (unint64_t)v50;
                            *(_QWORD *)(v11 + 9104) = v51;
                            *(_BYTE *)(v11 + 9113) = FigGetCFPreferenceNumberWithDefault();
                            *(_WORD *)(v11 + 9152) = 0;
                            *(_BYTE *)(v11 + 9165) = 0;
                            APSSettingsGetIntWithDefault();
                            *(_QWORD *)(v11 + 9224) = MillisecondsToUpTicks() + v49;
                            *(_BYTE *)(v11 + 9248) = 0;
                            atomic_store(0, (unsigned __int8 *)(v11 + 9264));
                            *(_DWORD *)(v11 + 9252) = APSSettingsGetIntWithDefault();
                            *(_BYTE *)(v11 + 8804) = 0;
                            *(_WORD *)(v11 + 8824) = 0;
                            *(_QWORD *)(v11 + 8848) = 0;
                            APSIOReporterCreate();
                            v132 = 0;
                            APSSettingsGetIntWithDefault();
                            *(_QWORD *)(v11 + 8920) = SecondsToUpTicks();
                            *(_QWORD *)(v11 + 8928) = mach_absolute_time();
                            *(_WORD *)(v11 + 8936) = 0;
                            *(float *)(v11 + 1620) = (float)((float)*(unsigned int *)(v11 + 1616) * 1000.0)
                                                   / (float)*(unsigned int *)(v11 + 76);
                            *(_QWORD *)(v11 + 9144) = (int)FigGetCFPreferenceNumberWithDefault();
                            *(_QWORD *)(v11 + 9136) = (int)FigGetCFPreferenceNumberWithDefault();
                            v52 = CFDictionaryGetInt64();
                            *(_QWORD *)(v11 + 1872) = v49;
                            *(_QWORD *)(v11 + 1880) = v52 * v48;
                            *(_QWORD *)(v11 + 1888) = v48;
                            *(_QWORD *)(v11 + 1896) = 0;
                            *(_QWORD *)(v11 + 1904) = v49;
                            *(_QWORD *)(v11 + 1912) = 10 * v48;
                            *(_BYTE *)(v11 + 9112) = 0;
                            v53 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
                            v132 = APSAtomicMessageQueueCreate();
                            if (v132)
                              goto LABEL_324;
                            v132 = APSAtomicMessageQueueCreate();
                            if (v132)
                              goto LABEL_324;
                            SockAddrCopy();
                            v132 = ServerSocketOpen();
                            if (v132)
                              goto LABEL_324;
                            v54 = v44;
                            if (v44)
                              SocketSetP2P();
                            SocketSetPacketTimestamps();
                            SocketSetQoS();
                            SockAddrSetPort();
                            *(_OWORD *)(v11 + 1572) = v130[0];
                            *(_OWORD *)(v11 + 1584) = *(_OWORD *)((char *)v130 + 12);
                            Size = SockAddrGetSize();
                            *(_DWORD *)(v11 + 1600) = Size;
                            v132 = connect(*(_DWORD *)(v11 + 1560), (const sockaddr *)(v11 + 1572), Size);
                            if (v132)
                            {
                              if (*__error())
                              {
                                v56 = *__error();
                                v132 = v56;
                                if (!v56)
                                  goto LABEL_115;
                              }
                              else
                              {
                                v132 = -6700;
                              }
                              if (gLogCategory_APReceiverAudioSessionRealTime >= 91)
                              {
                                *(_BYTE *)(v11 + 1604) = 0;
                                goto LABEL_119;
                              }
                              if (gLogCategory_APReceiverAudioSessionRealTime != -1
                                || (v57 = _LogCategory_Initialize(), v56 = v132, v57))
                              {
                                LogPrintF();
                                v56 = v132;
                              }
                            }
                            else
                            {
                              v56 = 0;
                              v132 = 0;
                            }
LABEL_115:
                            v58 = gLogCategory_APReceiverAudioSessionRealTime;
                            *(_BYTE *)(v11 + 1604) = v56 == 0;
                            if (v58 <= 50 && (v58 != -1 || _LogCategory_Initialize()))
                              LogPrintF();
LABEL_119:
                            if (CFDictionaryGetInt64() || *(_DWORD *)(v11 + 528))
                            {
                              *(_BYTE *)(v11 + 2160) = 1;
                            }
                            else
                            {
                              v69 = malloc_type_malloc(0x5000uLL, 0x102004012755DA7uLL);
                              *(_QWORD *)(v11 + 2136) = v69;
                              if (!v69)
                                goto LABEL_290;
                              v70 = 0x1FFFFFFFFFFFF605;
                              do
                              {
                                v69[v70 + 2555] = &v69[v70 + 2560];
                                v70 += 5;
                              }
                              while (v70 * 8);
                              v69[2555] = 0;
                              *(_QWORD *)(v11 + 2144) = v69;
                              *(_QWORD *)(v11 + 2168) = 0x7FFFFFFFFFFFFFFFLL;
                              *(_OWORD *)(v11 + 2176) = xmmword_21E1B1CC0;
                              *(_QWORD *)(v11 + 2200) = 100000000;
                              if (*(_DWORD *)(v11 + 528))
                                v71 = 1;
                              else
                                v71 = FigGetCFPreferenceNumberWithDefault() != 0;
                              *(_BYTE *)(v11 + 2160) = v71;
                              *(_QWORD *)(v11 + 2224) = -1;
                              *(_QWORD *)(v11 + 2248) = -1;
                              *(_DWORD *)(v11 + 2264) = 128;
                              v132 = APSAtomicMessageQueueCreate();
                              if (v132)
                                goto LABEL_324;
                            }
                            v132 = APSRTPPassThroughJitterBufferCreate();
                            if (v132)
                              goto LABEL_324;
                            BufferSize = APCompressionTypeGetBufferSize();
                            if (!BufferSize)
                            {
                              APSLogErrorAt();
                              v117 = -6735;
                              goto LABEL_292;
                            }
                            v60 = BufferSize;
                            *(_QWORD *)(v11 + 9008) = 0;
                            *(_QWORD *)(v11 + 9040) = 0;
                            *(_QWORD *)(v11 + 8992) = 0;
                            *(_QWORD *)(v11 + 8998) = 0;
                            v61 = (*(_DWORD *)(v11 + 84) * *(_DWORD *)(v11 + 88));
                            *(_QWORD *)(v11 + 9024) = v61;
                            *(_QWORD *)(v11 + 9032) = v61;
                            v62 = malloc_type_malloc(v61, 0xD970A78CuLL);
                            *(_QWORD *)(v11 + 9016) = v62;
                            if (v62)
                            {
                              if (*(_DWORD *)(v11 + 72) == 1)
                                goto LABEL_168;
                              memset(&inSourceFormat, 0, sizeof(inSourceFormat));
                              memset(&inDestinationFormat, 0, sizeof(inDestinationFormat));
                              inPropertyData = 3;
                              v63 = APCompressionTypeFillStreamDescription();
                              if (v63)
                              {
                                v120 = v63;
                              }
                              else
                              {
                                if (*(_DWORD *)(v11 + 88))
                                  inSourceFormat.mFramesPerPacket = *(_DWORD *)(v11 + 88);
                                LODWORD(v64) = *(_DWORD *)(v11 + 76);
                                inDestinationFormat.mSampleRate = (double)v64;
                                *(_QWORD *)&inDestinationFormat.mFormatID = 0xC6C70636DLL;
                                v65 = *(_DWORD *)(v11 + 80);
                                v66 = *(_DWORD *)(v11 + 92);
                                inDestinationFormat.mBytesPerPacket = (v66 >> 3) * v65;
                                inDestinationFormat.mFramesPerPacket = 1;
                                inDestinationFormat.mBytesPerFrame = inDestinationFormat.mBytesPerPacket;
                                inDestinationFormat.mChannelsPerFrame = v65;
                                inDestinationFormat.mBitsPerChannel = v66;
                                inDestinationFormat.mReserved = 0;
                                v67 = (AudioConverterRef *)(v11 + 1792);
                                v68 = AudioConverterNew(&inSourceFormat, &inDestinationFormat, (AudioConverterRef *)(v11 + 1792));
                                if (v68)
                                {
                                  v120 = v68;
                                }
                                else
                                {
                                  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                    && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                     || _LogCategory_Initialize()))
                                  {
                                    LogPrintF();
                                  }
                                  if (((*(_DWORD *)(v11 + 72) - 4) & 0xFFFFFFFB) != 0)
                                  {
                                    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                      && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                       || _LogCategory_Initialize()))
                                    {
                                      LogPrintF();
                                    }
                                    v74 = malloc_type_calloc(1uLL, 0x4020uLL, 0x1010040784321C2uLL);
                                    *(_QWORD *)(v11 + 8992) = v74;
                                    if (!v74)
                                    {
                                      v120 = -72150;
                                      goto LABEL_337;
                                    }
                                    APSPacketLossConcealerReset();
                                    *(_BYTE *)(v11 + 9005) = 0;
                                  }
                                  else
                                  {
                                    outPropertyData = 0;
                                    ioPropertyDataSize = 8;
                                    v72 = AudioConverterSetProperty(*v67, 0x636F6E6Du, 4u, &inPropertyData);
                                    if (v72)
                                    {
                                      v120 = v72;
                                      goto LABEL_337;
                                    }
                                    Property = AudioConverterGetProperty(*v67, 0x7072696Du, &ioPropertyDataSize, &outPropertyData);
                                    if (Property)
                                    {
                                      v120 = Property;
                                      goto LABEL_337;
                                    }
                                    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                      && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                       || _LogCategory_Initialize()))
                                    {
                                      LogPrintF();
                                    }
                                    v75 = (int)outPropertyData;
                                    if (inPropertyData == 5)
                                      v75 = 1;
                                    *(_DWORD *)(v11 + 9000) = v75;
                                    *(_BYTE *)(v11 + 9005) = 1;
                                  }
                                  *(_DWORD *)(v11 + 9008) = 0;
                                  if (*(_DWORD *)(v11 + 80) < 3u)
                                    goto LABEL_437;
                                  ioPropertyDataSize = 0;
                                  outPropertyData = 0;
                                  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                    && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                     || _LogCategory_Initialize()))
                                  {
                                    LogPrintF();
                                  }
                                  APAudioFormatGetMagicCookieForAACELD();
                                  v76 = AudioConverterSetProperty(*(AudioConverterRef *)(v11 + 1792), 0x646D6763u, ioPropertyDataSize, outPropertyData);
                                  if (v76)
                                  {
                                    v120 = v76;
                                  }
                                  else
                                  {
LABEL_437:
                                    if (inSourceFormat.mFormatID != 1634492771)
                                      goto LABEL_167;
                                    LODWORD(outPropertyData) = bswap32(inSourceFormat.mFramesPerPacket);
                                    BYTE5(outPropertyData) = *(_DWORD *)(v11 + 92);
                                    HIWORD(outPropertyData) = 2600;
                                    v134 = 14;
                                    v77 = *(_DWORD *)(v11 + 76);
                                    v135 = *(_DWORD *)(v11 + 80);
                                    v136 = -256;
                                    BYTE4(outPropertyData) = 0;
                                    v137 = 0;
                                    v138 = 0;
                                    v139 = bswap32(v77);
                                    v78 = AudioConverterSetProperty(*(AudioConverterRef *)(v11 + 1792), 0x646D6763u, 0x18u, &outPropertyData);
                                    if (!v78)
                                    {
LABEL_167:
                                      v132 = 0;
LABEL_168:
                                      *(_QWORD *)(v11 + 1664) = v60;
                                      v79 = malloc_type_malloc(v60, 0xAA25A07AuLL);
                                      *(_QWORD *)(v11 + 1656) = v79;
                                      if (v79)
                                      {
                                        *(_QWORD *)(v11 + 1680) = v60;
                                        v80 = malloc_type_malloc(v60, 0x9F72027FuLL);
                                        *(_QWORD *)(v11 + 1672) = v80;
                                        if (v80)
                                        {
                                          *(_QWORD *)(v11 + 1696) = v60;
                                          v81 = malloc_type_malloc(v60, 0xD81D2703uLL);
                                          *(_QWORD *)(v11 + 1688) = v81;
                                          if (v81)
                                          {
                                            *(_QWORD *)(v11 + 1712) = v60;
                                            v82 = malloc_type_malloc(v60, 0x56CF42B1uLL);
                                            *(_QWORD *)(v11 + 1704) = v82;
                                            if (v82)
                                            {
                                              gAirPlayAudioStats = xmmword_21E1B1CD0;
                                              byte_2553CE9F0 = 0;
                                              qword_2553CE9F8 = 0;
                                              dword_2553CEA00 = 0;
                                              *(_QWORD *)(v11 + 9300) = 0;
                                              *(_DWORD *)(v11 + 9296) = 16842752;
                                              v83 = CFDictionaryGetValue(a4, CFSTR("ReceiverSession"));
                                              if (v83)
                                              {
                                                *(_DWORD *)(v11 + 9312) = v83[124];
                                                APSCopyClusterInfo();
                                                v84 = &unk_2553CC000;
                                                if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                                                  && (gLogCategory_APReceiverAudioSessionRealTime != -1
                                                   || _LogCategory_Initialize()))
                                                {
                                                  LogPrintF();
                                                }
                                                v85 = FigCFWeakReferenceHolderCreateWithReferencedObject();
                                                *(_QWORD *)(v11 + 16) = v85;
                                                if (v85)
                                                {
                                                  v86 = v54;
                                                  APTTrafficMetricsCreate();
                                                  v87 = nw_activity_create();
                                                  *(_QWORD *)(v11 + 104) = v87;
                                                  if (!v87)
                                                  {
                                                    APSLogErrorAt();
                                                    v132 = -6728;
                                                    if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                      || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                      && !_LogCategory_Initialize())
                                                    {
                                                      goto LABEL_325;
                                                    }
LABEL_303:
                                                    LogPrintF();
                                                    goto LABEL_325;
                                                  }
                                                  nw_activity_activate();
                                                  v88 = CFDictionaryContainsKey(a4, CFSTR("NetworkInfoRemoteRTP"));
                                                  *(_BYTE *)(v11 + 97) = v88;
                                                  if (v88)
                                                  {
                                                    CFDictionaryGetTypeID();
                                                    v89 = CFDictionaryGetTypedValue();
                                                    if (!v132)
                                                    {
                                                      LODWORD(outPropertyData) = 0;
                                                      inSourceFormat.mSampleRate = 0.0;
                                                      inDestinationFormat.mSampleRate = 0.0;
                                                      IntWithDefault = APSSettingsGetIntWithDefault();
                                                      v91 = APSSettingsGetIntWithDefault();
                                                      CFStringGetTypeID();
                                                      CFDictionaryGetTypedValue();
                                                      if ((_DWORD)outPropertyData)
                                                      {
                                                        APSLogErrorAt();
                                                      }
                                                      else
                                                      {
                                                        v92 = CFDictionaryCreateMutable(v53, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                                                        if (v92)
                                                        {
                                                          v93 = v92;
                                                          v94 = IntWithDefault | v91;
                                                          *(_QWORD *)(v11 + 112) = dispatch_queue_create("APReceiverAudioSessionRealTime.callbackQueue", 0);
                                                          v95 = (const void *)*MEMORY[0x24BDBD270];
                                                          CFDictionarySetValue(v93, (const void *)*MEMORY[0x24BDFD760], (const void *)*MEMORY[0x24BDBD270]);
                                                          CFDictionarySetInt64();
                                                          if (v94)
                                                          {
                                                            LODWORD(outPropertyData) = APSRealTimeReadableRingBufferCreate();
                                                            if ((_DWORD)outPropertyData)
                                                              goto LABEL_234;
                                                            CFDictionarySetValue(v93, (const void *)*MEMORY[0x24BDFD7E0], *(const void **)(v11 + 128));
                                                            if (IntWithDefault)
                                                              CFDictionarySetValue(v93, (const void *)*MEMORY[0x24BDFD7D8], v95);
                                                          }
                                                          if (APSGetAllowPersistentGroupsOnInfra())
                                                            CFDictionarySetValue(v93, (const void *)*MEMORY[0x24BDFD7D0], v95);
                                                          LODWORD(outPropertyData) = APTransportConnectionUDPNWCreate();
                                                          if ((_DWORD)outPropertyData)
                                                          {
                                                            APSLogErrorAt();
                                                            v84 = &unk_2553CC000;
                                                            v113 = v126;
                                                            if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                              || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                              && !_LogCategory_Initialize())
                                                            {
                                                              goto LABEL_247;
                                                            }
                                                            goto LABEL_246;
                                                          }
                                                          LODWORD(outPropertyData) = APSNetworkAddressCreateWithString();
                                                          if ((_DWORD)outPropertyData)
                                                          {
                                                            APSLogErrorAt();
                                                            v84 = &unk_2553CC000;
                                                            v113 = v126;
                                                            if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                              || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                              && !_LogCategory_Initialize())
                                                            {
                                                              goto LABEL_247;
                                                            }
                                                            goto LABEL_246;
                                                          }
                                                          LODWORD(outPropertyData) = APSNetworkAddressCopyInterfaceName();
                                                          if ((_DWORD)outPropertyData)
                                                          {
LABEL_234:
                                                            APSLogErrorAt();
                                                            v113 = v126;
                                                            v84 = (_DWORD *)&unk_2553CC000;
                                                            goto LABEL_247;
                                                          }
                                                          mSampleRate = inSourceFormat.mSampleRate;
                                                          CMBaseObject = APTransportConnectionGetCMBaseObject();
                                                          v98 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
                                                          if (v98)
                                                          {
                                                            LODWORD(outPropertyData) = v98(CMBaseObject, *MEMORY[0x24BDFD7B8], *(_QWORD *)&mSampleRate);
                                                            if (!(_DWORD)outPropertyData)
                                                            {
                                                              v99 = inDestinationFormat.mSampleRate;
                                                              if (!*(_QWORD *)&inDestinationFormat.mSampleRate)
                                                                goto LABEL_200;
                                                              v100 = APTransportConnectionGetCMBaseObject();
                                                              v101 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
                                                              if (v101)
                                                              {
                                                                LODWORD(outPropertyData) = v101(v100, *MEMORY[0x24BDFD798], *(_QWORD *)&v99);
                                                                if (!(_DWORD)outPropertyData)
                                                                {
                                                                  if (*(_QWORD *)&inDestinationFormat.mSampleRate
                                                                    && CFStringHasPrefix(*(CFStringRef *)&inDestinationFormat.mSampleRate, CFSTR("llw")))
                                                                  {
                                                                    *(_BYTE *)(v11 + 9164) = APSSettingsGetIntWithDefault() != 0;
                                                                    *(_BYTE *)(v11 + 9166) = APSSettingsGetIntWithDefault() != 0;
                                                                    APSSettingsGetIntWithDefault();
                                                                    *(_QWORD *)(v11 + 9168) = SecondsToUpTicks();
                                                                  }
LABEL_200:
                                                                  v102 = APTransportConnectionGetCMBaseObject();
                                                                  v103 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
                                                                  if (v103)
                                                                  {
                                                                    LODWORD(outPropertyData) = v103(v102, *MEMORY[0x24BDFD7C0], v89);
                                                                    if (!(_DWORD)outPropertyData)
                                                                    {
                                                                      v104 = *(_QWORD *)(v11 + 112);
                                                                      v105 = *(_QWORD *)(v11 + 120);
                                                                      v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), uint64_t, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
                                                                      if (v106)
                                                                      {
                                                                        LODWORD(outPropertyData) = v106(v105, v11, audioSession_eventCallback, v104, 0);
                                                                        if (!(_DWORD)outPropertyData)
                                                                        {
                                                                          v107 = APTransportConnectionGetCMBaseObject();
                                                                          v108 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
                                                                          if (v108)
                                                                          {
                                                                            LODWORD(outPropertyData) = v108(v107, *MEMORY[0x24BDFD7B0], *MEMORY[0x24BDFD780]);
                                                                            if (!(_DWORD)outPropertyData)
                                                                            {
                                                                              v109 = *(_QWORD *)(v11 + 120);
                                                                              v110 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
                                                                              if (v110)
                                                                              {
                                                                                LODWORD(outPropertyData) = v110(v109);
                                                                                if (!(_DWORD)outPropertyData)
                                                                                {
                                                                                  v111 = APTransportConnectionGetCMBaseObject();
                                                                                  v112 = *(uint64_t (**)(uint64_t, _QWORD, const __CFAllocator *, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 48);
                                                                                  if (!v112)
                                                                                  {
                                                                                    LODWORD(outPropertyData) = -12782;
                                                                                    v84 = &unk_2553CC000;
LABEL_244:
                                                                                    APSLogErrorAt();
                                                                                    v115 = v84[630];
                                                                                    v113 = v126;
                                                                                    if (v115 > 90
                                                                                      || v115 == -1
                                                                                      && !_LogCategory_Initialize())
                                                                                    {
                                                                                      goto LABEL_247;
                                                                                    }
                                                                                    goto LABEL_246;
                                                                                  }
                                                                                  LODWORD(outPropertyData) = v112(v111, *MEMORY[0x24BDFD7A0], v53, v11 + 520);
                                                                                  v113 = v126;
                                                                                  v84 = (_DWORD *)&unk_2553CC000;
                                                                                  if ((_DWORD)outPropertyData)
                                                                                    goto LABEL_244;
LABEL_247:
                                                                                  CFRelease(v93);
LABEL_248:
                                                                                  if (*(_QWORD *)&inSourceFormat.mSampleRate)
                                                                                    CFRelease(*(CFTypeRef *)&inSourceFormat.mSampleRate);
                                                                                  if (*(_QWORD *)&inDestinationFormat.mSampleRate)
                                                                                    CFRelease(*(CFTypeRef *)&inDestinationFormat.mSampleRate);
                                                                                  v132 = outPropertyData;
                                                                                  if (!(_DWORD)outPropertyData)
                                                                                    goto LABEL_253;
                                                                                  APSLogErrorAt();
                                                                                  v118 = v84[630];
                                                                                  if (v118 > 90
                                                                                    || v118 == -1
                                                                                    && !_LogCategory_Initialize())
                                                                                  {
                                                                                    goto LABEL_325;
                                                                                  }
                                                                                  goto LABEL_303;
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                LODWORD(outPropertyData) = -12782;
                                                                              }
                                                                              APSLogErrorAt();
                                                                              v84 = &unk_2553CC000;
                                                                              v113 = v126;
                                                                              if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                                || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                                && !_LogCategory_Initialize())
                                                                              {
                                                                                goto LABEL_247;
                                                                              }
LABEL_246:
                                                                              LogPrintF();
                                                                              goto LABEL_247;
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            LODWORD(outPropertyData) = -12782;
                                                                          }
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        LODWORD(outPropertyData) = -12782;
                                                                      }
                                                                      goto LABEL_234;
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    LODWORD(outPropertyData) = -12782;
                                                                  }
                                                                  APSLogErrorAt();
                                                                  v84 = &unk_2553CC000;
                                                                  v113 = v126;
                                                                  if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                    || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                    && !_LogCategory_Initialize())
                                                                  {
                                                                    goto LABEL_247;
                                                                  }
                                                                  goto LABEL_246;
                                                                }
                                                              }
                                                              else
                                                              {
                                                                LODWORD(outPropertyData) = -12782;
                                                              }
                                                              APSLogErrorAt();
                                                              v84 = &unk_2553CC000;
                                                              v113 = v126;
                                                              if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                                || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                                && !_LogCategory_Initialize())
                                                              {
                                                                goto LABEL_247;
                                                              }
                                                              goto LABEL_246;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            LODWORD(outPropertyData) = -12782;
                                                          }
                                                          v113 = v126;
                                                          APSLogErrorAt();
                                                          v84 = &unk_2553CC000;
                                                          if (gLogCategory_APReceiverAudioSessionRealTime > 90
                                                            || gLogCategory_APReceiverAudioSessionRealTime == -1
                                                            && !_LogCategory_Initialize())
                                                          {
                                                            goto LABEL_247;
                                                          }
                                                          goto LABEL_246;
                                                        }
                                                        APSLogErrorAt();
                                                        LODWORD(outPropertyData) = -72150;
                                                      }
                                                      v113 = v126;
                                                      v84 = (_DWORD *)&unk_2553CC000;
                                                      goto LABEL_248;
                                                    }
                                                  }
                                                  else
                                                  {
                                                    v132 = ServerSocketOpen();
                                                    if (!v132)
                                                    {
                                                      APTTrafficMetricsConnectionFormed();
                                                      v113 = v126;
                                                      if (v86)
                                                        SocketSetP2P();
                                                      v114 = CFDictionaryGetInt64();
                                                      if (!v132)
                                                      {
                                                        if (!v114)
                                                          SocketSetQoS();
LABEL_253:
                                                        v132 = OpenSelfConnectedLoopbackSocket();
                                                        if (!v132)
                                                        {
                                                          PIDInit();
                                                          *(_BYTE *)(v11 + 2040) = CFDictionaryGetInt64() != 0;
                                                          v116 = v84[630];
                                                          if (v116 <= 30
                                                            && (v116 != -1 || _LogCategory_Initialize()))
                                                          {
                                                            if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 2
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 3
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
                                                              && APSAudioFormatDescriptionGetAudioFormatIndex() != 5)
                                                            {
                                                              if (APSAudioFormatDescriptionGetAudioFormatIndex() != 7
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
                                                                && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
                                                              {
                                                                APSAudioFormatDescriptionGetAudioFormatIndex();
                                                              }
                                                              v113 = v126;
                                                            }
                                                            LogPrintF();
                                                          }
                                                          *(_QWORD *)(v11 + 1728) = 8;
                                                          v122 = malloc_type_calloc(1uLL, 8uLL, 0xF6E70F3FuLL);
                                                          *(_QWORD *)(v11 + 1720) = v122;
                                                          v20 = v125;
                                                          if (v122)
                                                          {
                                                            *(_BYTE *)(v11 + 2276) = 0;
                                                            if (v113)
                                                            {
                                                              *v113 = v11;
                                                              v11 = 0;
                                                            }
                                                          }
                                                          else
                                                          {
                                                            APSLogErrorAt();
                                                            v132 = -6728;
                                                          }
LABEL_427:
                                                          v121 = cf;
                                                          if (!cf)
                                                            goto LABEL_429;
                                                          goto LABEL_428;
                                                        }
                                                      }
                                                    }
                                                  }
LABEL_324:
                                                  APSLogErrorAt();
                                                  goto LABEL_325;
                                                }
                                              }
                                              APSLogErrorAt();
                                              v132 = APSSignalErrorAt();
LABEL_325:
                                              v20 = v125;
                                              goto LABEL_427;
                                            }
                                          }
                                        }
                                      }
                                      APSLogErrorAt();
                                      v117 = -72150;
LABEL_292:
                                      v132 = v117;
                                      goto LABEL_325;
                                    }
                                    v120 = v78;
                                  }
                                }
                              }
LABEL_337:
                              APSLogErrorAt();
                              v20 = v125;
                              v132 = v120;
                              APSLogErrorAt();
                              goto LABEL_427;
                            }
LABEL_290:
                            APSLogErrorAt();
                            v117 = -6728;
                            goto LABEL_292;
                          }
                          APSLogErrorAt();
                          v119 = -6728;
                          goto LABEL_327;
                        }
LABEL_320:
                        APSLogErrorAt();
                        v119 = -72151;
LABEL_327:
                        v132 = v119;
                        goto LABEL_319;
                      }
                    }
                  }
                }
LABEL_318:
                APSLogErrorAt();
LABEL_319:
                v20 = v125;
                goto LABEL_430;
              }
            }
            else
            {
              *(_QWORD *)(v11 + 2288) = 0;
            }
            v132 = APCompressionTypeToAPAudioFormatIndex();
            if (v132)
              goto LABEL_318;
            v132 = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
            if (v132)
              goto LABEL_318;
            goto LABEL_52;
          }
          APSLogErrorAt();
          v21 = -6728;
          goto LABEL_40;
        case 2:
          CFDataGetTypeID();
          CFArrayGetTypedValueAtIndex();
          goto LABEL_33;
      }
      v20 = 0;
      v21 = -6705;
    }
    else
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v20 = 0;
      v21 = -72151;
    }
  }
  else
  {
LABEL_276:
    APSLogErrorAt();
    v20 = 0;
    v21 = -72150;
  }
LABEL_40:
  v132 = v21;
LABEL_430:
  free((void *)v11);
LABEL_431:
  if (v20)
    CFRelease(v20);
  return v132;
}

uint64_t audioSession_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, int a3, uint64_t a4, const __CFDictionary *cf, uint64_t a6)
{
  unsigned __int8 *v11;
  CFTypeID v12;
  uint64_t Int64Ranged;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t Int64;
  uint64_t v21;
  uint64_t v22;
  const __CFBoolean *TypedValue;
  int v24;
  _DWORD v26[7];
  int v27;

  v27 = 0;
  v11 = *(unsigned __int8 **)(a6 + 40);
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (a3 > 1752458867)
  {
    switch(a3)
    {
      case 1752458868:
        Int64 = CFDictionaryGetInt64();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        audioSession_updateCallDurationMetric((uint64_t)v11, Int64 != 0);
        return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
      case 1936549491:
        CFBooleanGetTypeID();
        TypedValue = (const __CFBoolean *)CFDictionaryGetTypedValue();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          CFBooleanGetValue(TypedValue);
          LogPrintF();
        }
        v27 = APReceiverAudioSessionPlatformSetProperty(*(_QWORD **)v11, v21, CFSTR("RASP::MuteStream"), v22, (uint64_t)TypedValue);
        if (v27)
          goto LABEL_44;
        return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
      case 1953653603:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        audioSession_triggerCoreCapture((uint64_t)v11, cf);
        return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
    }
LABEL_31:
    v24 = -6714;
LABEL_32:
    v27 = v24;
    return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
  }
  if (a3 == 1634562925)
  {
    CFStringGetTypeID();
    v16 = CFDictionaryGetTypedValue();
    v27 = APReceiverAudioSessionPlatformSetProperty(*(_QWORD **)v11, v17, CFSTR("RASP::AudioMode"), v18, v16);
    if (v27)
      goto LABEL_44;
    return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
  }
  if (a3 == 1701733219)
  {
    if (cf)
    {
      v19 = CFDictionaryGetInt64();
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      atomic_store(v19 != 0, v11 + 9264);
    }
    return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
  }
  if (a3 != 1718383464)
    goto LABEL_31;
  if (!cf || (v12 = CFGetTypeID(cf), v12 != CFDictionaryGetTypeID()))
  {
    APSLogErrorAt();
    v24 = -6756;
    goto LABEL_32;
  }
  CFDictionaryGetInt64Ranged();
  Int64Ranged = CFDictionaryGetInt64Ranged();
  APSAudioTransportTimeMakeWithRTPTime();
  v27 = APReceiverAudioSessionRealTimeFlushAudio((uint64_t)v11, 0, v14, v15, v26, Int64Ranged, 0);
  if (v27)
LABEL_44:
    APSLogErrorAt();
  return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v27);
}

uint64_t audioSession_updateCallDurationMetric(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result;
  v3 = *(_QWORD *)(result + 9280);
  if (a2)
  {
    if (!v3)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      result = mach_absolute_time();
      *(_QWORD *)(v2 + 9280) = result;
      return result;
    }
  }
  else if (!v3)
  {
    return result;
  }
  mach_absolute_time();
  result = UpTicksToSeconds();
  *(_QWORD *)(v2 + 9272) += result;
  *(_QWORD *)(v2 + 9280) = 0;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1)
      return LogPrintF();
    result = _LogCategory_Initialize();
    if ((_DWORD)result)
      return LogPrintF();
  }
  return result;
}

NSObject *audioSession_dispatchDataRetainF(NSObject *a1)
{
  dispatch_retain(a1);
  return a1;
}

uint64_t audioSession_eventCallback(int a1, uint64_t a2, uint64_t a3)
{
  int v4;
  const void *v5;
  uint64_t (*v7)(uint64_t);
  OpaqueCMBlockBuffer *v8;
  OpaqueCMBlockBuffer *v9;
  size_t DataLength;

  if (a1 == 7)
  {
    v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (v5)
    {
      if (APSRTPPassThroughJitterBufferAcquireRelinquishedNode())
      {
        APSLogErrorAt();
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_13;
      }
      v7 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 64);
      if (v7)
      {
        v8 = (OpaqueCMBlockBuffer *)v7(a2);
        if (v8)
        {
          v9 = v8;
          DataLength = CMBlockBufferGetDataLength(v8);
          CMBlockBufferCopyDataBytes(v9, 0, DataLength, MEMORY[0x18]);
          MEMORY[0x30] = mach_absolute_time();
          if (!audioSession_processPacket(a3, 0, DataLength, 0))
          {
LABEL_18:
            CFRelease(v9);
LABEL_19:
            if (v5)
              goto LABEL_20;
            return 0;
          }
LABEL_17:
          if (!v9)
            goto LABEL_19;
          goto LABEL_18;
        }
      }
    }
    APSLogErrorAt();
    APSSignalErrorAt();
LABEL_13:
    v9 = 0;
    goto LABEL_17;
  }
  if (a1 == 6)
  {
    v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v5)
    {
      AirPlayReceiverSessionControl((uint64_t)v5, v4, CFSTR("sessionDied"), 0, 0, 0);
LABEL_20:
      CFRelease(v5);
    }
  }
  return 0;
}

uint64_t audioSession_processPacket(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int *v17;
  unsigned int v18;
  unsigned int *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v23;
  int8x8_t *v24;
  BOOL v25;
  size_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  size_t v39;
  size_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t inserted;
  unsigned int *v52;
  unsigned int v53;
  unsigned int *v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t **v59;

  v7 = a1;
  if (*(_BYTE *)(a1 + 96))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 30
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    kdebug_trace();
    v16 = APSRTPPacketProcessorProcessPacket();
    if (!(_DWORD)v16)
    {
      v17 = (unsigned int *)(v7 + 1920);
      do
        v18 = __ldaxr(v17);
      while (__stlxr(v18 + 1, v17));
      v19 = (unsigned int *)(v7 + 1924);
      do
        v20 = __ldaxr(v19);
      while (__stlxr(v20, v19));
      if (gLogCategory_APReceiverAudioSessionRealTime > 10
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_34;
      }
      goto LABEL_32;
    }
    v21 = v16;
    APSLogErrorAt();
LABEL_104:
    APSLogErrorAt();
    return v21;
  }
  kdebug_trace();
  if (a3 <= 0xB)
  {
LABEL_101:
    APSLogErrorAt();
    return 4294960553;
  }
  v8 = *(_QWORD *)(a2 + 24);
  *(_WORD *)(v8 + 2) = bswap32(*(unsigned __int16 *)(v8 + 2)) >> 16;
  *(int8x8_t *)(v8 + 4) = vrev32_s8(*(int8x8_t *)(v8 + 4));
  kdebug_trace();
  v9 = *(_BYTE *)(v8 + 1);
  if (a4)
    *(_DWORD *)(a2 + 36) |= 1u;
  audioSession_sessionLock(*(pthread_mutex_t **)(v7 + 2280));
  audioSession_processEnqueuedRetransmitCommands(v7);
  if (!audioSession_trackDups(v7, *(unsigned __int16 *)(v8 + 2)))
  {
    if (!a4)
      audioSession_trackLosses(v7, v8);
    if (!*(_BYTE *)(v7 + 2160))
      audioSession_retransmitsUpdate(v7, *(unsigned __int16 *)(v8 + 2), a4);
    v10 = v9 & 0x7F;
    if (!a4)
    {
      v11 = *(_DWORD *)(v7 + 1864);
      if ((v11 + 1) > 1)
        v12 = v11 + 1;
      else
        v12 = 1;
      *(_DWORD *)(v7 + 1864) = v12;
    }
    v13 = a3 - 12;
    audioSession_sessionUnlock(*(pthread_mutex_t **)(v7 + 2280));
    if (v10 == 97)
    {
      v14 = 0;
      v15 = 0;
      while (*(char *)(v8 + 12 + v14) < 0)
      {
        v14 += 4;
        ++v15;
        if (v14 > v13)
          goto LABEL_101;
      }
      v23 = v14 | 1;
      if ((v14 | 1) > v13)
        goto LABEL_101;
    }
    else
    {
      v23 = 0;
      v15 = 0;
    }
    v56 = v7;
    if (!*(_QWORD *)(v7 + 504) && !*(_BYTE *)(v7 + 160))
    {
LABEL_57:
      *(_QWORD *)a2 = v8;
      *(_QWORD *)(a2 + 8) = v8 + v23 + 12;
      *(_QWORD *)(a2 + 16) = v13;
      *(_DWORD *)(a2 + 32) = *(_DWORD *)(v8 + 4);
      if (v10 == 97)
      {
        v57 = v13 + v23;
        if (v15)
        {
          v35 = v15 - 1;
          v36 = 12;
          v59 = (uint64_t **)a2;
          while (1)
          {
            v37 = v23;
            v38 = bswap32(*(_DWORD *)(*(_QWORD *)a2 + v36));
            v39 = v38 & 0x3FF;
            v40 = v23 + v39;
            if (v40 > v57)
              goto LABEL_101;
            v41 = APSRTPPassThroughJitterBufferAcquireRelinquishedNode();
            if ((_DWORD)v41)
            {
              v21 = v41;
              goto LABEL_104;
            }
            v42 = v7;
            MEMORY[0x24] |= 2u;
            v43 = (v38 >> 10) & 0x3FFF;
            MEMORY[0x28] = v43 / *(_DWORD *)(v42 + 88);
            if (gLogCategory_APReceiverAudioSessionRealTime <= 30)
            {
              if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize())
              {
                v42 = v56;
                LogPrintF();
              }
              else
              {
                v42 = v56;
              }
            }
            v58 = v40;
            v44 = MEMORY[0x18];
            v45 = *((_DWORD *)*v59 + 2);
            v46 = **v59;
            *MEMORY[0x18] = v46;
            *(_BYTE *)(v44 + 1) = BYTE1(v46) & 0x80 | HIBYTE(v38) & 0x7F;
            v47 = *(_DWORD *)(v44 + 4) - v43;
            *(_DWORD *)(v44 + 4) = v47;
            *(_DWORD *)(v44 + 8) = v45;
            memcpy((void *)(v44 + 12), (char *)*v59 + v37 + 12, v39);
            MEMORY[0] = v44;
            MEMORY[8] = v44 + 12;
            MEMORY[0x10] = v39;
            MEMORY[0x20] = v47;
            v48 = atomic_load((unint64_t *)(v42 + 1768));
            v7 = v42;
            if ((v48 & 0xFF000000000000) != 0 && MEMORY[0x20] - (int)v48 < 1
              || APSRTPPassThroughJitterBufferInsertNode())
            {
              APSRTPPassThroughJitterBufferRelinquishNode();
              a2 = (uint64_t)v59;
            }
            else
            {
              a2 = (uint64_t)v59;
              if (gLogCategory_APReceiverAudioSessionRealTime <= 10
                && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
            --v35;
            v36 += 4;
            v23 = v58;
            if (v35 == -1)
            {
              v8 = *(_QWORD *)a2;
              break;
            }
          }
        }
        v49 = *(_QWORD *)(a2 + 24);
        *(_BYTE *)(v49 + 1) = *(_BYTE *)(v49 + 1) & 0x80 | *(_BYTE *)(v8 + 4 * v15 + 12) & 0x7F;
        *(_QWORD *)(a2 + 8) = v49 + 12;
        *(_QWORD *)(a2 + 16) = v57 - v23;
        memmove((void *)(v49 + 12), (const void *)(v49 + 12 + v23), v57 - v23);
      }
      audioSession_estimateRenderDeadline(v7, a2);
      v50 = atomic_load((unint64_t *)(v7 + 1768));
      if ((v50 & 0xFF000000000000) != 0 && *(_DWORD *)(a2 + 32) - (int)v50 < 1)
        return 4294960539;
      inserted = APSRTPPassThroughJitterBufferInsertNode();
      if ((_DWORD)inserted)
        return inserted;
      v52 = (unsigned int *)(v7 + 1920);
      do
        v53 = __ldaxr(v52);
      while (__stlxr(v53 + 1, v52));
      v54 = (unsigned int *)(v7 + 1924);
      do
        v55 = __ldaxr(v54);
      while (__stlxr(v55 + v15, v54));
      if (gLogCategory_APReceiverAudioSessionRealTime > 10
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_34;
      }
LABEL_32:
      LogPrintF();
LABEL_34:
      kdebug_trace();
      return 0;
    }
    if (v13 > *(_QWORD *)(v7 + 1680))
      goto LABEL_101;
    v24 = *(int8x8_t **)(v7 + 1720);
    if (!v24)
    {
      APSLogErrorAt();
      v21 = 4294960591;
      goto LABEL_104;
    }
    *v24 = vrev32_s8(*(int8x8_t *)(v8 + 4));
    v25 = a3 >= v23 + 12;
    v26 = a3 - (v23 + 12);
    if (!v25)
      goto LABEL_101;
    v27 = (void *)(v8 + v23 + 12);
    v28 = v7;
    if (*(_BYTE *)(v7 + 160))
    {
      if (v26 <= 0x17)
      {
        APSLogErrorAt();
        v21 = 4294960553;
      }
      else
      {
        chacha20_poly1305_init_64x64();
        chacha20_poly1305_add_aad();
        v26 -= 24;
        v29 = chacha20_poly1305_decrypt();
        if (chacha20_poly1305_verify() + v29 == v26)
        {
          v30 = 0;
          v31 = v7 + 456;
          v27 = (void *)(v8 + v23 + 12);
          do
          {
            if (++*(_BYTE *)(v31 + v30))
              v33 = 1;
            else
              v33 = v30 == 7;
            ++v30;
          }
          while (!v33);
          v28 = v7;
          goto LABEL_56;
        }
        APSLogErrorAt();
        v21 = 4294960534;
      }
    }
    else
    {
      v34 = AES_CBCFrame_Update();
      if (!(_DWORD)v34)
      {
LABEL_56:
        bzero(*(void **)(v28 + 1720), *(_QWORD *)(v28 + 1728));
        v13 = v26;
        memcpy(v27, *(const void **)(v28 + 1672), v26);
        v7 = v28;
        goto LABEL_57;
      }
      v21 = v34;
      APSLogErrorAt();
    }
    bzero(*(void **)(v56 + 1720), *(_QWORD *)(v56 + 1728));
    goto LABEL_104;
  }
  APSRTPPassThroughJitterBufferRelinquishNode();
  audioSession_sessionUnlock(*(pthread_mutex_t **)(v7 + 2280));
  return 0;
}

uint64_t audioSession_shouldProcessPacketCallback(uint64_t a1, int a2, uint64_t a3, uint64_t *a4, _BYTE *a5)
{
  uint64_t v7;
  uint64_t v8;
  int v10;
  int v11;

  v7 = *a4;
  v8 = *(_QWORD *)(a1 + 24);
  audioSession_sessionLock(*(pthread_mutex_t **)(*a4 + 2280));
  audioSession_processEnqueuedRetransmitCommands(v7);
  if (audioSession_trackDups(v7, *(unsigned __int16 *)(v8 + 2)))
  {
    *a5 = 0;
  }
  else
  {
    if (!a2)
      audioSession_trackLosses(v7, v8);
    if (*(_BYTE *)(v7 + 2160))
    {
      if (a2)
        goto LABEL_7;
    }
    else
    {
      audioSession_retransmitsUpdate(v7, *(unsigned __int16 *)(v8 + 2), a2);
      if (a2)
        goto LABEL_7;
    }
    v10 = *(_DWORD *)(v7 + 1864);
    if ((v10 + 1) > 1)
      v11 = v10 + 1;
    else
      v11 = 1;
    *(_DWORD *)(v7 + 1864) = v11;
  }
LABEL_7:
  audioSession_sessionUnlock(*(pthread_mutex_t **)(v7 + 2280));
  return 0;
}

uint64_t audioSession_enqueueNodeCallback(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a3;
  v5 = atomic_load((unint64_t *)(*a3 + 1768));
  audioSession_estimateRenderDeadline(v4, a2);
  if ((v5 & 0xFF000000000000) != 0 && *(_DWORD *)(a2 + 32) - (int)v5 < 1)
    return 4294960539;
  else
    return APSRTPPassThroughJitterBufferInsertNode();
}

uint64_t audioSession_sessionLock(pthread_mutex_t *a1)
{
  uint64_t result;

  if (!a1)
    return APSLogErrorAt();
  result = pthread_mutex_lock(a1);
  if ((_DWORD)result)
    return APSLogErrorAt();
  return result;
}

uint64_t audioSession_processEnqueuedRetransmitCommands(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 2128);
  if (result)
  {
    while (1)
    {
      result = APSAtomicMessageQueueReadMessage();
      if (!(_DWORD)result)
        break;
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  return result;
}

uint64_t audioSession_trackDups(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int16x8_t v7;
  uint64_t result;

  if (!*(_BYTE *)(a1 + 532))
  {
    v6 = 0;
    v7 = vdupq_n_s16(a2);
    do
    {
      *(int16x8_t *)(a1 + 536 + v6) = v7;
      v6 += 16;
    }
    while (v6 != 1024);
    *(_BYTE *)(a1 + 532) = 1;
    goto LABEL_14;
  }
  v3 = *(unsigned __int16 *)(a1 + 534);
  v4 = (__int16)(a2 - v3);
  if (v4 > 0 || a2 != v3 && v4 >= -511)
  {
    v5 = a1 + 2 * (a2 & 0x1FF);
    if (*(unsigned __int16 *)(v5 + 536) != a2)
    {
      *(_WORD *)(v5 + 536) = a2;
LABEL_14:
      result = 0;
      *(_WORD *)(a1 + 534) = a2;
      return result;
    }
  }
  if (!*(_DWORD *)(a1 + 528)
    && gLogCategory_APReceiverAudioSessionRealTimeStats <= 40
    && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 1;
}

uint64_t audioSession_trackLosses(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int v4;
  int v5;
  __int16 v6;
  __int16 v7;
  unsigned __int16 v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int *v11;
  unsigned int v12;
  _QWORD *v13;
  _QWORD *v14;
  unsigned __int16 v15;
  uint64_t v16;

  v3 = result;
  v4 = *(unsigned __int16 *)(a2 + 2);
  if (!*(_DWORD *)(result + 1864)
    || (v5 = *(unsigned __int16 *)(result + 1760), v6 = v5 + 1, v4 == (unsigned __int16)(v5 + 1)))
  {
LABEL_37:
    *(_WORD *)(v3 + 1760) = v4;
    *(_DWORD *)(v3 + 1764) = *(_DWORD *)(a2 + 4);
    return result;
  }
  v7 = v5 + 1;
  v8 = v4 - v6;
  if ((__int16)(v4 - v6) >= 1)
  {
    v9 = (unsigned __int16)(v4 - v6);
    LODWORD(qword_2553CE9F8) = qword_2553CE9F8 + v8;
    v10 = *(_QWORD *)(result + 2336);
    if (v10)
    {
      v11 = (unsigned int *)(v10 + 60);
      do
        v12 = __ldxr(v11);
      while (__stxr(v12 + v9, v11));
    }
    if (*(_DWORD *)(result + 2268) < v9)
      *(_DWORD *)(result + 2268) = v9;
    if (*(_DWORD *)(result + 2264) >= v9)
    {
      if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 30)
      {
        if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1
          || (result = _LogCategory_Initialize(), (_DWORD)result))
        {
          result = LogPrintF();
        }
      }
      if (!*(_BYTE *)(v3 + 2160))
      {
        v13 = (_QWORD *)(v3 + 2152);
        do
        {
          v14 = v13;
          v13 = (_QWORD *)*v13;
        }
        while (v13);
        mach_absolute_time();
        result = UpTicksToNanoseconds();
        v15 = 0;
        while (1)
        {
          v16 = *(_QWORD *)(v3 + 2144);
          if (!v16)
            break;
          *(_QWORD *)(v3 + 2144) = *(_QWORD *)v16;
          *(_QWORD *)v16 = 0;
          *(_WORD *)(v16 + 8) = v15 + v7;
          *(_WORD *)(v16 + 10) = 0;
          *(_QWORD *)(v16 + 16) = result;
          *(_QWORD *)(v16 + 32) = result;
          *v14 = v16;
          ++v15;
          v14 = (_QWORD *)v16;
          if (v15 >= v8)
            goto LABEL_37;
        }
        if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 60)
        {
          if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1
            || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            result = LogPrintF();
          }
        }
      }
    }
    else
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 30
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      ++*(_DWORD *)(v3 + 2272);
      result = audioSession_retransmitsAbortAll(v3);
    }
    goto LABEL_37;
  }
  if (v4 != v5 && !*(_DWORD *)(result + 528) && gLogCategory_APReceiverAudioSessionRealTime <= 30)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1)
      return LogPrintF();
    result = _LogCategory_Initialize();
    if ((_DWORD)result)
      return LogPrintF();
  }
  return result;
}

uint64_t audioSession_retransmitsUpdate(uint64_t a1, int a2, int a3)
{
  uint64_t result;
  unint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  int v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  unsigned int v30;
  int v31;
  int v32;
  __int16 v33;
  __int16 v34;
  uint64_t v35;

  mach_absolute_time();
  result = UpTicksToNanoseconds();
  v7 = result;
  v8 = (uint64_t *)(a1 + 2152);
  while (1)
  {
    v9 = v8;
    v8 = (uint64_t *)*v8;
    if (!v8)
      break;
    if (*((unsigned __int16 *)v8 + 4) == a2)
    {
      if (!a3)
        goto LABEL_36;
      v10 = result - v8[2];
      v11 = *(_QWORD *)(a1 + 2224);
      if (v10 < v11)
      {
        *(_QWORD *)(a1 + 2224) = v10;
        v11 = v10;
      }
      v12 = *(_QWORD *)(a1 + 2232);
      if (v10 <= v12)
      {
        if (v10 > v11 && v10 < v12)
          *(_QWORD *)(a1 + 2240) = (v10 - *(_QWORD *)(a1 + 2240) + (*(_QWORD *)(a1 + 2240) << 6)) >> 6;
      }
      else
      {
        *(_QWORD *)(a1 + 2232) = v10;
      }
      if (*((unsigned __int16 *)v8 + 5) > 1u)
        goto LABEL_36;
      v14 = result - v8[3];
      if (v14 >= *(_QWORD *)(a1 + 2168))
      {
        if (v14 <= *(_QWORD *)(a1 + 2176))
        {
          v15 = *(_QWORD *)(a1 + 2184);
          v16 = __OFSUB__(v14, v15);
          v17 = v14 - v15;
          if (v17 >= 0)
            v18 = v17;
          else
            v18 = -v17;
          if (v17 < 0 != v16)
            v17 += 7;
          v19 = v15 + (v17 >> 3);
          *(_QWORD *)(a1 + 2184) = v19;
          v20 = *(_QWORD *)(a1 + 2192);
          v21 = v18 < v20;
          v22 = v18 - v20;
          if (v21)
            v22 += 3;
          v23 = v20 + (v22 >> 2);
          *(_QWORD *)(a1 + 2192) = v23;
          v24 = 4 * v23 + 2 * v19;
          if (v24 >= 100000000)
            v24 = 100000000;
          *(_QWORD *)(a1 + 2200) = v24;
          goto LABEL_36;
        }
      }
      else
      {
        *(_QWORD *)(a1 + 2168) = v14;
        if (v14 <= *(_QWORD *)(a1 + 2176))
          goto LABEL_36;
      }
      *(_QWORD *)(a1 + 2176) = v14;
LABEL_36:
      *v9 = *v8;
      *v8 = *(_QWORD *)(a1 + 2144);
      *(_QWORD *)(a1 + 2144) = v8;
      goto LABEL_37;
    }
  }
  if (a3)
  {
    if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 40)
    {
      if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1
        || (result = _LogCategory_Initialize(), (_DWORD)result))
      {
        result = LogPrintF();
      }
    }
    ++*(_DWORD *)(a1 + 2220);
  }
LABEL_37:
  v25 = *(uint64_t **)(a1 + 2152);
  if (v25)
  {
    v26 = 3;
    do
    {
      if (v7 >= v25[4])
      {
        v27 = v25[2];
        v28 = *((unsigned __int16 *)v25 + 5);
        *((_WORD *)v25 + 5) = v28 + 1;
        if (v28)
        {
          v29 = v7 - v27;
          if (v29 < *(_QWORD *)(a1 + 2248))
            *(_QWORD *)(a1 + 2248) = v29;
          if (v29 > *(_QWORD *)(a1 + 2256))
            *(_QWORD *)(a1 + 2256) = v29;
        }
        v25[3] = v7;
        v25[4] = *(_QWORD *)(a1 + 2200) + v7;
        v30 = *((unsigned __int16 *)v25 + 4);
        v35 = 0;
        v32 = 16831872;
        v33 = bswap32(v30) >> 16;
        v34 = 256;
        v31 = *(_DWORD *)(a1 + 1560);
        result = *(_BYTE *)(a1 + 1604)
               ? send(v31, &v32, 8uLL, 0)
               : sendto(v31, &v32, 8uLL, 0, (const sockaddr *)(a1 + 1572), *(_DWORD *)(a1 + 1600));
        if (result == 8 || *__error() && (result = *__error(), !(_DWORD)result))
          ++*(_DWORD *)(a1 + 2208);
        else
          result = APSLogErrorAt();
        if (!--v26)
          break;
      }
      v25 = (uint64_t *)*v25;
    }
    while (v25);
  }
  return result;
}

uint64_t audioSession_sessionUnlock(pthread_mutex_t *a1)
{
  uint64_t result;

  if (!a1)
    return APSLogErrorAt();
  result = pthread_mutex_unlock(a1);
  if ((_DWORD)result)
    return APSLogErrorAt();
  return result;
}

uint64_t audioSession_estimateRenderDeadline(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned __int128 *v7;
  int v8;
  unsigned __int128 v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  const void *v15;

  result = mach_absolute_time();
  v6 = result;
  v7 = (unsigned __int128 *)(a1 + 1776);
  v8 = *(_DWORD *)(a2 + 32);
  do
    v9 = __ldaxp(v7);
  while (__stlxp(v9, v7));
  if ((*((_QWORD *)&v9 + 1) & 0xFF00000000) != 0)
  {
    if (v8 - DWORD2(v9) < 0)
    {
      v11 = DWORD2(v9) - v8;
      if (v11 < 0)
        v11 = -v11;
      LODWORD(v5) = *(_DWORD *)(a1 + 76);
      v10 = v9 - UpTicksPerSecond() * (unint64_t)((double)v11 / (double)v5);
    }
    else
    {
      LODWORD(v5) = *(_DWORD *)(a1 + 76);
      v10 = (unint64_t)((double)(v8 - DWORD2(v9))
                             / (double)v5
                             * (double)(unint64_t)UpTicksPerSecond())
          + v9;
    }
    if (v10 <= *(_QWORD *)(a2 + 48))
      v12 = -UpTicksToMilliseconds();
    else
      v12 = UpTicksToMilliseconds();
    v13 = (uint64_t)*(float *)(a1 + 1620) - v12;
    result = APSAtomicMessageQueueSendMessage();
    if (*(_BYTE *)(a1 + 9153))
    {
      if (v13 >= *(_QWORD *)(a1 + 9136))
      {
        v14 = *(const void **)(a1 + 32);
        if (v14)
          CFRetain(v14);
        APSAsyncLoggerGetSharedLogger();
        APSAsyncLoggerLogMessage();
      }
      result = UpTicksToMilliseconds();
      if (result >= *(_QWORD *)(a1 + 9144))
      {
        v15 = *(const void **)(a1 + 32);
        if (v15)
          CFRetain(v15);
        APSAsyncLoggerGetSharedLogger();
        result = APSAsyncLoggerLogMessage();
      }
    }
    *(_BYTE *)(a1 + 9153) = 1;
    *(_QWORD *)(a1 + 9120) = v6;
    *(_DWORD *)(a1 + 9128) = *(unsigned __int16 *)(*(_QWORD *)a2 + 2);
  }
  return result;
}

void audioSession_endToEndLogger(CFTypeRef *a1)
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*a1)
    CFRelease(*a1);
}

void audioSession_receiverLogger(CFTypeRef *a1)
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*a1)
    CFRelease(*a1);
}

uint64_t audioSession_retransmitsAbortAll(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = *(_QWORD **)(a1 + 2152);
  if (v2)
  {
    if (gLogCategory_APReceiverAudioSessionRealTimeStats > 40)
      goto LABEL_7;
    if (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize())
      LogPrintF();
    v2 = *(_QWORD **)(a1 + 2152);
    if (v2)
    {
LABEL_7:
      v3 = *(_QWORD **)(a1 + 2144);
      do
      {
        v4 = v2;
        v2 = (_QWORD *)*v2;
        *v4 = v3;
        v3 = v4;
      }
      while (v2);
      *(_QWORD *)(a1 + 2152) = 0;
      *(_QWORD *)(a1 + 2144) = v4;
    }
  }
  return audioSession_processEnqueuedRetransmitCommands(a1);
}

uint64_t APReceiverAudioSessionRealTimeFlushAudio(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5, uint64_t a6, _OWORD *a7)
{
  BOOL v9;
  uint64_t v10;
  OpaqueAudioConverter *v11;
  uint64_t v12;
  _BYTE v14[28];

  if (*a5 != 1)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
  APReceiverAudioSessionPlatformControl(*(_QWORD **)a1, CFSTR("RASP::FlushAudio"));
  *(_QWORD *)(a1 + 1752) = mach_absolute_time();
  atomic_load((unint64_t *)(a1 + 1768));
  atomic_store(0, (unint64_t *)(a1 + 1768));
  while (!APSAtomicMessageQueueSendMessage())
    usleep(1u);
  if (*(_DWORD *)(a1 + 528))
    v9 = 1;
  else
    v9 = FigGetCFPreferenceNumberWithDefault() != 0;
  *(_BYTE *)(a1 + 2160) = v9;
  *(_DWORD *)(a1 + 1864) = 0;
  v10 = APSRTPPassThroughJitterBufferFlush();
  if ((_DWORD)v10)
  {
    v12 = v10;
    APSLogErrorAt();
    goto LABEL_18;
  }
  audioSession_retransmitsAbortAll(a1);
  v11 = *(OpaqueAudioConverter **)(a1 + 1792);
  if (v11)
  {
    v12 = AudioConverterReset(v11);
    if (!a7)
      goto LABEL_18;
    goto LABEL_17;
  }
  v12 = 0;
  if (a7)
  {
LABEL_17:
    APSAudioTransportTimeMakeWithRTPTime();
    *a7 = *(_OWORD *)v14;
    *(_OWORD *)((char *)a7 + 12) = *(_OWORD *)&v14[12];
  }
LABEL_18:
  audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
  return v12;
}

void audioSession_triggerCoreCapture(uint64_t a1, const __CFDictionary *a2)
{
  _BYTE *v4;
  const void *v5;
  int v6;

  v4 = (_BYTE *)(a1 + 8936);
  v5 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
  if (!APSSettingsGetIntWithDefault())
  {
    *v4 = 0;
    if (gLogCategory_APReceiverAudioSessionRealTime > 50
      || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_17;
    }
LABEL_6:
    LogPrintF();
    goto LABEL_17;
  }
  if (v4[228])
  {
    CFDictionaryGetInt64Ranged();
    CFDictionaryGetInt64Ranged();
  }
  *v4 = 1;
  if (v5)
  {
    ++*(_QWORD *)(a1 + 8888);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverSessionControl((uint64_t)v5, v6, CFSTR("reportIssue"), 0, a2, 0);
  }
  if (!v4[228])
    goto LABEL_16;
  if (CFAppendPrintF())
  {
    APSLogErrorAt();
    if (gLogCategory_APReceiverAudioSessionRealTime > 90
      || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_17;
    }
    goto LABEL_6;
  }
  APSW5LogCollect();
LABEL_16:
  atomic_store(0, v4 + 328);
LABEL_17:
  if (v5)
    CFRelease(v5);
}

void APReceiverAudioSessionRealTimeFinalize(uint64_t a1)
{
  int v2;
  const void *v3;
  uint64_t CMBaseObject;
  uint64_t v5;
  void (*v6)(uint64_t);
  const void *v7;
  int v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  int v19;
  const void *v20;
  const void *v21;
  const void *v22;
  void *v23;
  const void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  OpaqueAudioConverter *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  NSObject *v34;
  NSObject *v35;
  void *v36;
  void *v37;
  void *v38;
  const void *v39;
  const void *v40;
  const void *v41;
  const void *v42;
  const void *v43;

  if (*(_BYTE *)(a1 + 8984))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(0);
  }
  if (*(_QWORD *)(a1 + 64))
  {
    SendSelfConnectedLoopbackMessage();
    pthread_join(*(pthread_t *)(a1 + 56), 0);
    *(_QWORD *)(a1 + 64) = 0;
  }
  v2 = *(_DWORD *)(a1 + 48);
  if ((v2 & 0x80000000) == 0)
  {
    if (close(v2) && *__error())
      __error();
    *(_DWORD *)(a1 + 48) = -1;
  }
  if (*(_QWORD *)(a1 + 104))
  {
    nw_activity_complete_with_reason();
    nw_release(*(void **)(a1 + 104));
    *(_QWORD *)(a1 + 104) = 0;
  }
  if (*(_BYTE *)(a1 + 97))
  {
    v3 = *(const void **)(a1 + 112);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(a1 + 112) = 0;
    }
    if (*(_QWORD *)(a1 + 120))
    {
      CMBaseObject = APTransportConnectionGetCMBaseObject();
      if (CMBaseObject)
      {
        v5 = CMBaseObject;
        v6 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 24);
        if (v6)
          v6(v5);
      }
      v7 = *(const void **)(a1 + 120);
      if (v7)
      {
        CFRelease(v7);
        *(_QWORD *)(a1 + 120) = 0;
      }
    }
  }
  else
  {
    v8 = *(_DWORD *)(a1 + 52);
    if ((v8 & 0x80000000) == 0)
    {
      if (close(v8) && *__error())
        __error();
      *(_DWORD *)(a1 + 52) = -1;
    }
    APTTrafficMetricsConnectionClosed();
  }
  if (*(_QWORD *)(a1 + 2280))
  {
    FigSimpleMutexDestroy();
    *(_QWORD *)(a1 + 2280) = 0;
  }
  v9 = *(const void **)(a1 + 8);
  if (v9)
  {
    CFRelease(v9);
    *(_QWORD *)(a1 + 8) = 0;
  }
  v10 = *(const void **)(a1 + 128);
  if (v10)
  {
    CFRelease(v10);
    *(_QWORD *)(a1 + 128) = 0;
  }
  v11 = *(const void **)(a1 + 1992);
  if (v11)
  {
    CFRelease(v11);
    *(_QWORD *)(a1 + 1992) = 0;
  }
  v12 = *(const void **)(a1 + 40);
  if (v12)
  {
    CFRelease(v12);
    *(_QWORD *)(a1 + 40) = 0;
  }
  v13 = *(const void **)(a1 + 2296);
  if (v13)
  {
    CFRelease(v13);
    *(_QWORD *)(a1 + 2296) = 0;
  }
  v14 = *(const void **)(a1 + 2336);
  if (v14)
  {
    CFRelease(v14);
    *(_QWORD *)(a1 + 2336) = 0;
  }
  v15 = *(const void **)(a1 + 2344);
  if (v15)
  {
    CFRelease(v15);
    *(_QWORD *)(a1 + 2344) = 0;
  }
  v16 = *(const void **)(a1 + 16);
  if (v16)
  {
    CFRelease(v16);
    *(_QWORD *)(a1 + 16) = 0;
  }
  audioSession_logHistograms(a1);
  v17 = *(const void **)(a1 + 2360);
  if (v17)
  {
    CFRelease(v17);
    *(_QWORD *)(a1 + 2360) = 0;
  }
  v18 = *(const void **)(a1 + 2352);
  if (v18)
  {
    CFRelease(v18);
    *(_QWORD *)(a1 + 2352) = 0;
  }
  *(_DWORD *)(a1 + 512) = 0;
  v19 = *(_DWORD *)(a1 + 1560);
  if ((v19 & 0x80000000) == 0)
  {
    if (close(v19) && *__error())
      __error();
    *(_DWORD *)(a1 + 1560) = -1;
  }
  v20 = *(const void **)(a1 + 520);
  if (v20)
  {
    CFRelease(v20);
    *(_QWORD *)(a1 + 520) = 0;
  }
  v21 = *(const void **)(a1 + 2128);
  if (v21)
  {
    CFRelease(v21);
    *(_QWORD *)(a1 + 2128) = 0;
  }
  v22 = *(const void **)(a1 + 9048);
  if (v22)
  {
    CFRelease(v22);
    *(_QWORD *)(a1 + 9048) = 0;
  }
  v23 = *(void **)(a1 + 2136);
  if (v23)
  {
    free(v23);
    *(_QWORD *)(a1 + 2136) = 0;
  }
  v24 = *(const void **)(a1 + 1640);
  if (v24)
  {
    CFRelease(v24);
    *(_QWORD *)(a1 + 1640) = 0;
  }
  v25 = *(void **)(a1 + 1656);
  if (v25)
  {
    free(v25);
    *(_QWORD *)(a1 + 1656) = 0;
  }
  v26 = *(void **)(a1 + 1672);
  if (v26)
  {
    free(v26);
    *(_QWORD *)(a1 + 1672) = 0;
  }
  v27 = *(void **)(a1 + 1688);
  if (v27)
  {
    free(v27);
    *(_QWORD *)(a1 + 1688) = 0;
  }
  v28 = *(void **)(a1 + 1704);
  if (v28)
  {
    free(v28);
    *(_QWORD *)(a1 + 1704) = 0;
  }
  v29 = *(OpaqueAudioConverter **)(a1 + 1792);
  if (v29)
  {
    AudioConverterDispose(v29);
    *(_QWORD *)(a1 + 1792) = 0;
  }
  *(_DWORD *)(a1 + 1864) = 0;
  v30 = *(const void **)(a1 + 2288);
  if (v30)
  {
    CFRelease(v30);
    *(_QWORD *)(a1 + 2288) = 0;
  }
  if (*(_DWORD *)(a1 + 24))
  {
    *(_DWORD *)(a1 + 24) = 0;
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  AES_CBCFrame_Final();
  v31 = *(const void **)(a1 + 472);
  if (v31)
  {
    CFRelease(v31);
    *(_QWORD *)(a1 + 472) = 0;
  }
  v32 = *(const void **)(a1 + 9200);
  if (v32)
    CFRelease(v32);
  v33 = *(const void **)(a1 + 9208);
  if (v33)
    CFRelease(v33);
  v34 = *(NSObject **)(a1 + 8944);
  if (v34)
  {
    dispatch_release(v34);
    *(_QWORD *)(a1 + 8944) = 0;
  }
  v35 = *(NSObject **)(a1 + 9064);
  if (v35)
  {
    dispatch_release(v35);
    *(_QWORD *)(a1 + 9064) = 0;
  }
  v36 = *(void **)(a1 + 1720);
  if (v36)
    free(v36);
  v37 = *(void **)(a1 + 8992);
  if (v37)
    free(v37);
  v38 = *(void **)(a1 + 9016);
  if (v38)
    free(v38);
  v39 = *(const void **)(a1 + 136);
  if (v39)
  {
    CFRelease(v39);
    *(_QWORD *)(a1 + 136) = 0;
  }
  v40 = *(const void **)(a1 + 144);
  if (v40)
  {
    CFRelease(v40);
    *(_QWORD *)(a1 + 144) = 0;
  }
  v41 = *(const void **)(a1 + 9288);
  if (v41)
  {
    CFRelease(v41);
    *(_QWORD *)(a1 + 9288) = 0;
  }
  v42 = *(const void **)(a1 + 8864);
  if (v42)
    CFRelease(v42);
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v43 = *(const void **)(a1 + 32);
  if (v43)
    CFRelease(v43);
  free((void *)a1);
}

uint64_t audioSession_logHistograms(uint64_t a1)
{
  uint64_t result;

  audioSession_flushHistogramMessageQueue(a1);
  result = *(_QWORD *)(a1 + 2352);
  if (result)
    return CFDictionaryApplyBlock();
  return result;
}

uint64_t audioSession_flushHistogramMessageQueue(uint64_t a1)
{
  uint64_t result;

  if (!a1)
    return APSLogErrorAt();
  result = *(_QWORD *)(a1 + 2360);
  if (result)
  {
    while (1)
    {
      result = APSAtomicMessageQueueReadMessage();
      if (!(_DWORD)result)
        break;
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  return result;
}

void __audioSession_logHistograms_block_invoke()
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

const __CFDictionary *audioSession_addHistogramValue(const __CFDictionary *result, const void *a2)
{
  if (result)
  {
    result = (const __CFDictionary *)CFDictionaryGetValue(result, a2);
    if (result)
      return (const __CFDictionary *)APSStatsHistogramAddValue();
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeInvalidate(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  result = *(_QWORD *)(a1 + 120);
  if (result)
  {
    result = APTransportConnectionGetCMBaseObject();
    if (result)
    {
      v2 = result;
      result = CMBaseObjectGetVTable();
      v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 8) + 24);
      if (v3)
        result = v3(v2);
    }
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1)
      return LogPrintF();
    result = _LogCategory_Initialize();
    if ((_DWORD)result)
      return LogPrintF();
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeReadAudio(uint64_t a1, int a2, unint64_t a3, char *a4, unint64_t a5)
{
  unsigned __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  unsigned int *v14;
  _BYTE *v15;
  _BYTE *v16;
  unint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  unsigned __int16 v32;
  uint64_t v33;
  unsigned int *v34;
  unsigned int v35;
  uint64_t v36;
  int v37;
  unint64_t v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  unint64_t v44;
  size_t v45;
  size_t v46;
  unint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v57;
  int v58;
  uint64_t v59;
  unsigned int *v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  int v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  unsigned int v73;
  int *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  int *v78;
  _DWORD *v79;
  int v80;
  unsigned int v81;
  int64_t v82;
  unint64_t v83;
  int v84;
  int v85;
  int v86;
  size_t v87;
  unsigned int v88;
  uint64_t v89;
  unsigned int v90;
  int v91;
  char *v92;
  unint64_t v93;
  int v94;
  signed int v95;
  size_t v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  unint64_t v103;
  int v104;
  double v105;
  double v106;
  uint64_t v107;
  unsigned int v108;
  unint64_t v109;
  unsigned int *v110;
  unsigned int v111;
  const void *v112;
  uint64_t result;
  unsigned int *v114;
  char *v115;
  unsigned int *v116;
  uint64_t v117;
  uint64_t v118;
  int32x2_t *v119;
  _BYTE *v120;
  int v121;
  uint64_t v122;
  signed int v123;
  char *__dst;
  unint64_t v125;
  int v127;
  int v128;
  int v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  size_t v135[2];

  kdebug_trace();
  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  if (*(_DWORD *)(a1 + 2000))
  {
    v9 = (unsigned __int128 *)(a1 + 1776);
    v10 = (a2 - *(_DWORD *)(a1 + 2004)) | 0x100000000;
    do
      __ldaxp(v9);
    while (__stlxp(__PAIR128__(v10, a3), v9));
  }
  __dst = a4;
  v125 = a5;
  v131 = 0;
  v11 = *(_QWORD *)(a1 + 120);
  if (v11)
  {
    v12 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 96);
    if (v12)
      v12(v11);
  }
  if (*(_QWORD *)(a1 + 128)
    && (APSRTPPassThroughJitterBufferAcquireRelinquishedNode()
     || APSRealTimeReadableRingBufferRead()))
  {
    APSLogErrorAt();
  }
  v119 = (int32x2_t *)(a1 + 2004);
  v120 = (_BYTE *)(a1 + 1836);
  v131 = 0;
  v132 = 0;
  v133 = 0;
  while (APSAtomicMessageQueueReadMessage())
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 90
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  v13 = mach_absolute_time();
  v130 = *(unsigned int *)(a1 + 84);
  v134 = 0;
  v131 = 0;
  v132 = 0;
  v14 = (unsigned int *)(a1 + 8784);
  v15 = (_BYTE *)(a1 + 8825);
  v16 = (_BYTE *)(a1 + 2012);
LABEL_19:
  v17 = *v14;
  do
  {
    v18 = __ldaxr(v14);
    if (v18 != (_DWORD)v17)
    {
      __clrex();
      goto LABEL_19;
    }
  }
  while (__stlxr(v17 | 1, v14));
  v19 = a1 + 3208 * ((v17 >> 1) & 1);
  v122 = v19;
  v123 = *(_DWORD *)(v19 + 5568) % 0xC8u;
  v20 = a2 - *(_DWORD *)(a1 + 464);
  v21 = v20 + v125 / v130;
  if (!*(_DWORD *)(a1 + 2000))
  {
    if ((int)(v125 / v130 - 1) < 0)
    {
      v95 = *(_DWORD *)(v19 + 5568) % 0xC8u;
      goto LABEL_213;
    }
    v117 = v19 + 2368;
    v118 = v13;
    v94 = 0;
    v22 = 0;
    v95 = *(_DWORD *)(v19 + 5568) % 0xC8u;
    goto LABEL_197;
  }
  v117 = v19 + 2368;
  v118 = v13;
  v22 = 0;
  v121 = 0;
  v127 = v21 + 441000;
  v128 = v20 + v125 / v130;
  v115 = &__dst[v125];
  v23 = *(_QWORD *)(a1 + 1648);
  v134 = v23;
  v116 = (unsigned int *)(a1 + 1928);
  v114 = (unsigned int *)(a1 + 1932);
  do
  {
    v129 = v20;
    while (1)
    {
LABEL_27:
      if (!v23)
      {
        APSRTPPassThroughJitterBufferAcquireLowestInsertedNode();
        v23 = v134;
        if (!v134)
        {
          v28 = 0;
          goto LABEL_193;
        }
      }
      v15[179] = 0;
      v24 = *(unsigned int *)(v23 + 32);
      v25 = *v16;
      if (*v16)
      {
        if ((int)v24 - *(_DWORD *)(a1 + 2016) < 0)
        {
          v25 = 1;
        }
        else
        {
          if (gLogCategory_APReceiverAudioSessionRealTime <= 30
            && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v25 = 0;
          *(_DWORD *)(a1 + 2004) = *(_DWORD *)(a1 + 2008);
          *(_BYTE *)(a1 + 2012) = 0;
          *(_BYTE *)(a1 + 1836) = 1;
        }
      }
      v26 = *(_DWORD *)(a1 + 2004) + v24 + *(_DWORD *)(a1 + 1736);
      if (v25 && v26 - v127 >= 1)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 30
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v27 = *(_DWORD *)(a1 + 2008);
        *(_DWORD *)(a1 + 2004) = v27;
        *(_BYTE *)(a1 + 2012) = 0;
        *(_BYTE *)(a1 + 1836) = 1;
        v26 = v27 + v24 + *(_DWORD *)(a1 + 1736);
      }
      v28 = v134;
      if (v26 - v21 >= 0)
        goto LABEL_192;
      v29 = *(unsigned __int16 *)(*(_QWORD *)v134 + 2);
      v30 = atomic_load((unint64_t *)(a1 + 1768));
      if ((v30 & 0xFF000000000000) != 0)
      {
        v31 = v29 - WORD2(v30);
        if (v31 << 16 > 0x10000)
        {
          v32 = v31 - 1;
          HIDWORD(qword_2553CE9F8) += v32;
          v33 = *(_QWORD *)(a1 + 2336);
          if (v33)
          {
            v34 = (unsigned int *)(v33 + 64);
            do
              v35 = __ldxr(v34);
            while (__stxr(v35 + v32, v34));
          }
          if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 30
            && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
      }
      atomic_store(v30 & 0xFF00000000000000 | (v29 << 32) | v24 | 0x1000000000000, (unint64_t *)(a1 + 1768));
      v36 = v134;
      v20 = v129;
      v37 = *(_DWORD *)(a1 + 72);
      if (v37 != 1 && *(_QWORD *)(v134 + 8) == *(_QWORD *)v134 + 12)
        LODWORD(v38) = *(_DWORD *)(a1 + 88);
      else
        v38 = *(_QWORD *)(v134 + 16) / v130;
      v39 = v26 - v129;
      if ((int)v38 + v26 - v129 <= 0)
      {
        v22 = 1;
        audioSession_discardLatePacket(a1);
        v23 = 0;
        v134 = 0;
        v21 = v128;
        continue;
      }
      v40 = *(_QWORD **)(v134 + 8);
      if (v40 != (_QWORD *)(*(_QWORD *)v134 + 12))
        goto LABEL_59;
      v43 = *(_QWORD *)(v134 + 16);
      v44 = *(_QWORD *)(a1 + 1632) - 12;
      if (v37 == 1)
      {
        if (v43 > v44)
          goto LABEL_124;
        Swap16Mem();
        v135[0] = v43;
        v45 = v43;
      }
      else
      {
        v135[0] = 0;
        if (audioSession_audioDecoderDecodeFrame((void *)a1, (uint64_t)v40, v43, *(void **)(a1 + 1656), *(_QWORD *)(a1 + 1664), v135)|| (*(_QWORD *)(a1 + 9032) = *(_QWORD *)(a1 + 9024), v45 = v135[0], v135[0] > v44))
        {
LABEL_124:
          APSLogErrorAt();
          v15 = (_BYTE *)(a1 + 8825);
          v20 = v129;
          goto LABEL_106;
        }
        memcpy(v40, *(const void **)(a1 + 1656), v135[0]);
      }
      v15 = (_BYTE *)(a1 + 8825);
      if (!*(_BYTE *)(a1 + 9113))
        goto LABEL_87;
      if (v45 < 8 || *(_BYTE *)(a1 + 9112))
        goto LABEL_86;
      v46 = v45 >> 3;
      while (!*v40)
      {
LABEL_85:
        ++v40;
        if (!--v46)
          goto LABEL_86;
      }
      *(_BYTE *)(a1 + 9112) = 1;
      if (*(_QWORD *)(a1 + 9048))
      {
        if (!APSAtomicMessageQueueSendMessage()
          && gLogCategory_APReceiverAudioSessionRealTime <= 90
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        mach_absolute_time();
        if (!APSAtomicMessageQueueSendMessage()
          && gLogCategory_APReceiverAudioSessionRealTime <= 90
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_85;
      }
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
LABEL_86:
      v45 = v135[0];
LABEL_87:
      v20 = v129;
      if (v45)
        v47 = 10000 * v43 / v45;
      else
        LODWORD(v47) = 0;
      *(_DWORD *)(a1 + 1832) = (v47 - *(_DWORD *)(a1 + 1832) + (*(_DWORD *)(a1 + 1832) << 6)) >> 6;
      *(_QWORD *)(v36 + 16) = v45;
      v48 = v134;
      if (*(_QWORD *)(v134 + 16))
        break;
LABEL_106:
      v21 = v128;
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APSRTPPassThroughJitterBufferRelinquishNode();
      v23 = 0;
      v134 = 0;
      v22 = 1;
      v16 = (_BYTE *)(a1 + 2012);
    }
    ++*(_QWORD *)(a1 + 8848);
    v16 = (_BYTE *)(a1 + 2012);
    if ((*(_BYTE *)(v48 + 36) & 2) == 0)
    {
      v49 = *(unsigned __int16 *)(*(_QWORD *)v48 + 2);
      v50 = *(_DWORD *)(v48 + 32);
      v51 = *(unsigned __int16 *)(a1 + 8832);
      v52 = *(_DWORD *)(a1 + 8836);
      v53 = v49 - v51;
      if (v49 - v51 < 0)
        v53 = v51 - v49;
      v54 = v50 - v52;
      if (v50 - v52 < 0)
        v54 = v52 - v50;
      *(_BYTE *)(a1 + 8825) = 1;
      *(_WORD *)(a1 + 8826) = v51;
      *(_DWORD *)(a1 + 8828) = v52;
      *(_WORD *)(a1 + 8832) = v49;
      *(_DWORD *)(a1 + 8836) = v50;
      if (v49 != v51 && v50 != v52 && v54 >= v53)
      {
        v57 = v54 / v53;
        *(_DWORD *)(a1 + 8840) = v57;
        if (v57 != *(_DWORD *)(a1 + 88)
          && gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(_DWORD *)(a1 + 8840) = *(_DWORD *)(a1 + 88);
      }
    }
LABEL_59:
    v41 = v134;
    v42 = v26 + *(_QWORD *)(v134 + 16) / v130;
    if (v42 - v20 <= 0)
    {
      audioSession_discardLatePacket(a1);
      v23 = 0;
      v134 = 0;
      v22 = 1;
      v21 = v128;
      goto LABEL_27;
    }
    v58 = v20 - v26;
    if (v20 - v26 < 0)
    {
      if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 20
        && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (*(_QWORD *)(a1 + 8848) >= 2uLL)
      {
        kdebug_trace();
        if (!v15[340])
        {
          v15[340] = 1;
          audioSession_triggerAsyncGlitchLog(a1);
        }
        v63 = v117 + 16 * v123;
        *(_QWORD *)v63 = v118;
        *(_DWORD *)(v63 + 8) = v20 - (*(_DWORD *)(a1 + 2004) + *(_DWORD *)(a1 + 1736));
        *(_DWORD *)(v63 + 12) = v39;
        ++v123;
      }
      audioSession_enqueueRetransmitCommand(a1);
      audioSession_plc(a1, *(_QWORD *)(v134 + 8), (v39 * v130), __dst);
      __dst += (v39 * v130);
      ++v121;
      v41 = v134;
      v129 = v26;
LABEL_145:
      v62 = v128;
      goto LABEL_148;
    }
    if ((v39 & 0x80000000) == 0)
      goto LABEL_145;
    ++dword_2553CEA00;
    v59 = *(_QWORD *)(a1 + 2336);
    if (v59)
    {
      v60 = (unsigned int *)(v59 + 68);
      do
        v61 = __ldxr(v60);
      while (__stxr(v61 + 1, v60));
    }
    v62 = v128;
    if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 20
      && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    audioSession_enqueueRetransmitCommand(a1);
    v26 = v129;
    v64 = (v58 * v130);
    v41 = v134;
    v65 = *(_QWORD *)(v134 + 16);
    *(_QWORD *)(v134 + 8) += v64;
    *(_QWORD *)(v41 + 16) = v65 - v64;
    *(_DWORD *)(v41 + 32) += v58;
    ++v121;
LABEL_148:
    if (*(_BYTE *)(a1 + 2041))
    {
      v66 = *(char **)(v41 + 8);
      if (v66 == (char *)(*(_QWORD *)v41 + 12))
      {
        v67 = *(_DWORD *)(a1 + 2112);
        if (v67 < 1)
        {
          if (v67 < 0)
          {
            v74 = *(int **)(a1 + 1704);
            memcpy(v74, v66, *(_QWORD *)(v41 + 16));
            v75 = *(unsigned int *)(a1 + 84);
            v77 = *(_QWORD *)(v41 + 8);
            v76 = *(_QWORD *)(v41 + 16);
            if ((uint64_t)(v76 / v75) < 1)
            {
              v79 = *(_DWORD **)(v41 + 8);
            }
            else
            {
              v78 = &v74[v76 / v75];
              v79 = *(_DWORD **)(v41 + 8);
              do
              {
                v80 = *v74;
                v81 = *(_DWORD *)(a1 + 2116) + 1;
                *(_DWORD *)(a1 + 2116) = v81;
                if (v81 >= *(_DWORD *)(a1 + 2120))
                {
                  *(_DWORD *)(a1 + 2116) = 0;
                  *v79++ = v80;
                }
                *v79++ = v80;
                ++v74;
              }
              while (v74 < v78);
              v75 = *(unsigned int *)(a1 + 84);
            }
            v92 = (char *)v79 - v77;
            v93 = (unint64_t)&v92[-v76] / v75;
            *(_QWORD *)(v41 + 16) = v92;
            *(_DWORD *)(v41 + 32) -= v93;
            *v119 = vadd_s32(*v119, vdup_n_s32(v93));
            v41 = v134;
          }
        }
        else
        {
          v68 = *(_QWORD *)(v41 + 16);
          v69 = *(unsigned int *)(a1 + 84);
          if ((uint64_t)(v68 / v69) < 1)
          {
            v71 = *(char **)(v41 + 8);
          }
          else
          {
            v70 = &v66[4 * (v68 / v69)];
            v71 = *(char **)(v41 + 8);
            v72 = v71;
            do
            {
              v73 = *(_DWORD *)(a1 + 2116) + 1;
              *(_DWORD *)(a1 + 2116) = v73;
              if (v73 >= *(_DWORD *)(a1 + 2120))
              {
                *(_DWORD *)(a1 + 2116) = 0;
              }
              else
              {
                *(_DWORD *)v71 = *(_DWORD *)v72;
                v71 += 4;
              }
              v72 += 4;
            }
            while (v72 < v70);
            v69 = *(unsigned int *)(a1 + 84);
          }
          v82 = v71 - v66;
          v83 = (v68 - v82) / v69;
          *(_QWORD *)(v41 + 16) = v82;
          *(_DWORD *)(v41 + 32) += v83;
          *v119 = vsub_s32(*v119, vdup_n_s32(v83));
        }
        v42 = v26 + *(_QWORD *)(v41 + 16) / v130;
      }
    }
    v84 = v42 - v62;
    if (v42 - v62 <= 0)
      v85 = v42;
    else
      v85 = v62;
    v86 = v85 - v26;
    v87 = ((v85 - v26) * v130);
    memcpy(__dst, *(const void **)(v41 + 8), v87);
    kdebug_trace();
    if (v15[340] == 1)
    {
      v15[340] = 0;
      audioSession_triggerAsyncGlitchLog(a1);
    }
    if ((v58 & 0x80000000) == 0)
      APSPacketLossConcealerSaveData();
    v129 += v86;
    __dst += v87;
    if (v84 > 0)
    {
      v28 = v134;
      v96 = *(_QWORD *)(v134 + 16) - v87;
      *(_QWORD *)(v134 + 8) += v87;
      *(_QWORD *)(v28 + 16) = v96;
      *(_DWORD *)(v28 + 32) += v86;
      v22 = 1;
      v21 = v128;
LABEL_192:
      v20 = v129;
      break;
    }
    do
      v88 = __ldaxr(v116);
    while (__stlxr(v88 + 1, v116));
    v89 = v134;
    v16 = (_BYTE *)(a1 + 2012);
    v21 = v128;
    v20 = v129;
    if ((*(_BYTE *)(v134 + 36) & 2) != 0)
    {
      do
        v90 = __ldaxr(v114);
      while (__stlxr(v90 + 1, v114));
      v89 = v134;
    }
    if (*(_QWORD *)(a1 + 2360))
    {
      v91 = *(_DWORD *)(v89 + 40);
      LODWORD(v131) = 1919247468;
      LODWORD(v132) = v91;
      APSAtomicMessageQueueSendMessage();
    }
    APSRTPPassThroughJitterBufferRelinquishNode();
    v23 = 0;
    v28 = 0;
    v134 = 0;
    v22 = 1;
  }
  while (__dst < v115);
LABEL_193:
  *(_QWORD *)(a1 + 1648) = v28;
  if (v20 - v21 >= 0)
  {
    v95 = v123;
    v97 = v121;
    if (!v22)
      goto LABEL_213;
    goto LABEL_208;
  }
  v95 = v123;
  v94 = v121;
LABEL_197:
  v98 = v20;
  v99 = v21 - v20;
  if (*v15)
  {
    v100 = *(_DWORD *)(a1 + 2004) + *(_DWORD *)(a1 + 1736);
    v101 = v98;
    if (v15[159] == 1)
    {
      if (!v15[340])
      {
        *(_BYTE *)(a1 + 9165) = 1;
        audioSession_triggerAsyncGlitchLog(a1);
        v100 = *(_DWORD *)(a1 + 2004) + *(_DWORD *)(a1 + 1736);
      }
      v102 = v117 + 16 * v95;
      *(_QWORD *)v102 = v118;
      *(_DWORD *)(v102 + 8) = v101 - v100;
      *(_DWORD *)(v102 + 12) = v99;
      ++v95;
      kdebug_trace();
    }
  }
  audioSession_plc(a1, (uint64_t)__dst, (v99 * v130), __dst);
  if (gLogCategory_APReceiverAudioSessionRealTime <= 10
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!v22)
  {
    v15 = (_BYTE *)(a1 + 8825);
    goto LABEL_213;
  }
  v97 = v94 + 1;
  audioSession_enqueueRetransmitCommand(a1);
  v15 = (_BYTE *)(a1 + 8825);
LABEL_208:
  if (!APSRTPPassThroughJitterBufferIsFlushing() && v97 >= 1 && *v120)
    *v120 = 0;
LABEL_213:
  if (*v15)
    *(_DWORD *)(v122 + 5568) = v95;
  v103 = atomic_load((unint64_t *)(a1 + 1768));
  if ((v103 & 0xFF000000000000) != 0
    && gLogCategory_APReceiverAudioSessionRealTimeStats <= 50
    && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
  {
    v104 = *(_DWORD *)(a1 + 1764) - v103;
    if (byte_2553CE9F0)
    {
      v105 = *((double *)&gAirPlayAudioStats + 1)
           + *(double *)&gAirPlayAudioStats * ((double)v104 - *((double *)&gAirPlayAudioStats + 1));
    }
    else
    {
      v105 = (double)v104;
      byte_2553CE9F0 = 1;
    }
    *((double *)&gAirPlayAudioStats + 1) = v105;
    v106 = ((double)(*(_DWORD *)(a1 + 76) >> 1) + v105 * 1000.0) / (double)*(unsigned int *)(a1 + 76);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 10
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v107 = *(_QWORD *)(a1 + 2336);
    if (v107)
      *(_DWORD *)(v107 + 56) = (int)v106;
  }
  v108 = *v14 & 0xFFFFFFFE;
  do
    __ldaxr(v14);
  while (__stlxr(v108, v14));
  v109 = v125 / *(unsigned int *)(a1 + 84);
  if (v15[327] && *(_DWORD *)(a1 + 9160) + *(_DWORD *)(a1 + 9156) != a2)
  {
    v110 = (unsigned int *)(a1 + 8856);
    do
      v111 = __ldaxr(v110);
    while (__stlxr(v111 + 1, v110));
    v112 = *(const void **)(a1 + 32);
    if (v112)
      CFRetain(v112);
    APSAsyncLoggerGetSharedLogger();
    APSAsyncLoggerLogMessage();
  }
  kdebug_trace();
  result = 0;
  v15[327] = 1;
  *(_DWORD *)(a1 + 9156) = a2;
  *(_DWORD *)(a1 + 9160) = v109;
  return result;
}

uint64_t audioSession_consumeNetworkDataBufferPacket(uint64_t result, int a2, NSObject *a3)
{
  uint64_t v3;
  size_t size;
  size_t v6;
  int v7;

  v3 = result;
  if (a2)
  {
    *(_QWORD *)(*(_QWORD *)(result + 8) + 48) = mach_absolute_time();
    size = dispatch_data_get_size(a3);
    if (size > *(_QWORD *)(*(_QWORD *)v3 + 1632))
    {
      result = APSLogErrorAt();
      v7 = -6743;
    }
    else
    {
      v6 = size;
      result = APSDispatchDataCopyBytes();
      v7 = result;
      if ((_DWORD)result)
        result = APSLogErrorAt();
      else
        *(_QWORD *)(v3 + 16) = v6;
    }
  }
  else
  {
    v7 = 0;
    *(_QWORD *)(result + 16) = 0;
  }
  *(_DWORD *)(v3 + 24) = v7;
  return result;
}

uint64_t audioSession_discardLatePacket(uint64_t a1)
{
  uint64_t v2;
  unsigned int *v3;
  unsigned int v4;

  ++dword_2553CEA00;
  v2 = *(_QWORD *)(a1 + 2336);
  if (v2)
  {
    v3 = (unsigned int *)(v2 + 68);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  if (gLogCategory_APReceiverAudioSessionRealTimeStats <= 30
    && (gLogCategory_APReceiverAudioSessionRealTimeStats != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  kdebug_trace();
  audioSession_enqueueRetransmitCommand(a1);
  return APSRTPPassThroughJitterBufferRelinquishNode();
}

uint64_t audioSession_audioDecoderDecodeFrame(void *inInputDataProcUserData, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, _QWORD *a6)
{
  UInt32 v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  AudioBufferList v13;
  UInt32 ioOutputDataPacketSize;

  if (!a2 || !a4)
    goto LABEL_13;
  v7 = *((_DWORD *)inInputDataProcUserData + 22);
  v8 = *((_DWORD *)inInputDataProcUserData + 21) * v7;
  if (v8 > a5)
  {
    APSLogErrorAt();
    return 4294960553;
  }
  if (!a6)
  {
LABEL_13:
    APSLogErrorAt();
    return 4294960591;
  }
  *(_QWORD *)&v13.mNumberBuffers = 1;
  *((_QWORD *)inInputDataProcUserData + 225) = a2;
  *((_QWORD *)inInputDataProcUserData + 226) = a2 + a3;
  ioOutputDataPacketSize = v7;
  v13.mBuffers[0].mNumberChannels = *((_DWORD *)inInputDataProcUserData + 20);
  v13.mBuffers[0].mDataByteSize = v8;
  v13.mBuffers[0].mData = a4;
  v10 = AudioConverterFillComplexBuffer(*((AudioConverterRef *)inInputDataProcUserData + 224), (AudioConverterComplexInputDataProc)audioSession_audioDecoderDecodeCallback, inInputDataProcUserData, &ioOutputDataPacketSize, &v13, 0);
  if ((_DWORD)v10 != -6750 && (v11 = v10, (_DWORD)v10))
  {
    APSLogErrorAt();
  }
  else
  {
    v11 = 0;
    *a6 = *((_DWORD *)inInputDataProcUserData + 21) * ioOutputDataPacketSize;
  }
  return v11;
}

uint64_t audioSession_triggerAsyncGlitchLog(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 8);
  if (v1)
    CFRetain(v1);
  APSAsyncLoggerGetSharedLogger();
  return APSAsyncLoggerLogMessage();
}

uint64_t audioSession_enqueueRetransmitCommand(uint64_t result)
{
  if (*(_QWORD *)(result + 2128))
  {
    if (*(_QWORD *)(result + 2152)
      && gLogCategory_APReceiverAudioSessionRealTime <= 40
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    mach_absolute_time();
    UpTicksToNanoseconds();
    result = APSAtomicMessageQueueSendMessage();
    if (!(_DWORD)result)
      return APSLogErrorAt();
  }
  return result;
}

void audioSession_plc(uint64_t a1, uint64_t a2, size_t a3, char *a4)
{
  _BYTE *v8;
  size_t v9;
  size_t v10;
  uint64_t v11;
  size_t v12;
  size_t v13;
  uint64_t v14;

  v8 = (_BYTE *)(a1 + 9004);
  v14 = 0;
  ++*(_DWORD *)(a1 + 9040);
  *(_DWORD *)(a1 + 9044) += a3 / *(unsigned int *)(a1 + 84);
  bzero(a4, a3);
  *v8 = 1;
  if (((*(_DWORD *)(a1 + 72) - 4) & 0xFFFFFFFB) != 0 || !v8[1])
  {
    *(_DWORD *)(a1 + 9012) = APSPacketLossConcealerConceal();
    return;
  }
  if (a3)
  {
    v9 = 0;
    v10 = *(_QWORD *)(a1 + 9032);
    do
    {
      v11 = *(_QWORD *)(a1 + 9024);
      if (v10 == v11)
      {
        bzero(*(void **)(a1 + 9016), v10);
        if (audioSession_audioDecoderDecodeFrame((void *)a1, a2, 0, *(void **)(a1 + 9016), *(_QWORD *)(a1 + 9024), &v14))
        {
          APSLogErrorAt();
          return;
        }
        v10 = 0;
        *(_QWORD *)(a1 + 9032) = 0;
        v11 = *(_QWORD *)(a1 + 9024);
      }
      v12 = v11 - v10;
      if (a3 - v9 >= v12)
        v13 = v12;
      else
        v13 = a3 - v9;
      memcpy(&a4[v9], (const void *)(*(_QWORD *)(a1 + 9016) + v10), v13);
      v9 += v13;
      v10 = *(_QWORD *)(a1 + 9032) + v13;
      *(_QWORD *)(a1 + 9032) = v10;
    }
    while (v9 < a3);
  }
  *(_DWORD *)(a1 + 9012) = *(_DWORD *)(a1 + 9008);
}

void audioSession_ioDiscontinuityLogger(CFTypeRef *a1)
{
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*a1)
    CFRelease(*a1);
}

void audioSession_glitchLogger(uint64_t a1)
{
  uint64_t v2;
  __CFDictionary *v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  const void *v8;
  const char *v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  __CFDictionary *v14;
  __CFDictionary *Mutable;
  const void *v16;
  const void *v17;
  const void *v18;
  unsigned __int8 v19;
  const void *v20;
  unint64_t v21;
  unint64_t v22;
  dispatch_queue_t *v23;
  dispatch_queue_t *v24;
  unint64_t v25;
  int v26;

  v2 = mach_absolute_time();
  v3 = *(__CFDictionary **)a1;
  if (!*(_QWORD *)a1)
    return;
  v4 = v2;
  v5 = FigCFWeakReferenceHolderCopyReferencedObject();
  if (!v5)
  {
    v14 = v3;
LABEL_25:
    CFRelease(v14);
    return;
  }
  v6 = (const void *)v5;
  v7 = *(_QWORD *)(v5 + 40);
  v8 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v9 = *(const char **)(a1 + 8);
  if (strcmp(v9, "[Glitch Gap Start]") && strcmp(v9, "[Glitch Underrun Start]"))
    goto LABEL_21;
  if (*(_BYTE *)(v7 + 9216))
    notify_post("com.apple.airplay.AmbientAudioGlitched");
  if (!*(_BYTE *)(v7 + 9166) || *(_BYTE *)(v7 + 8936) || v4 < *(_QWORD *)(v7 + 9224))
    goto LABEL_21;
  if (*(_BYTE *)(v7 + 9248)
    || (v10 = *(_DWORD *)(v7 + 8788), v10 < *(_DWORD *)(v7 + 9252))
    || ((v11 = UpTicksToSeconds()) == 0 ? (v12 = 0) : (v12 = 3600 * (int)v10 / v11),
        v12 < *(unsigned int *)(v7 + 9252)))
  {
    v13 = atomic_load(&audioSession_glitchLogger_sNextIssueReportTicks);
    if (v4 < v13)
    {
LABEL_21:
      v14 = 0;
      goto LABEL_22;
    }
    v25 = v13;
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v26 = 1;
  }
  else
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v26 = 0;
    v25 = 0;
  }
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v14 = Mutable;
  if (!Mutable
    || (CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x24BE03898], (const void *)*MEMORY[0x24BE038A0]),
        CFDictionarySetInt64())
    || CFDictionarySetInt64())
  {
    APSLogErrorAt();
    goto LABEL_22;
  }
  v16 = (const void *)*MEMORY[0x24BDBD270];
  v17 = (const void *)*MEMORY[0x24BDBD268];
  if (v26)
    v18 = (const void *)*MEMORY[0x24BDBD268];
  else
    v18 = (const void *)*MEMORY[0x24BDBD270];
  CFDictionarySetValue(v14, (const void *)*MEMORY[0x24BE03880], v18);
  v19 = atomic_load((unsigned __int8 *)(v7 + 9264));
  v20 = (const void *)*MEMORY[0x24BE03878];
  if ((v19 & 1) == 0)
  {
    CFDictionarySetValue(v14, v20, v17);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v23 = *(dispatch_queue_t **)(v7 + 40);
    if (v23)
      APMediaDataControlServerSendRequest(v23, 1919513459, (uint64_t)v14, 0, 0);
    goto LABEL_22;
  }
  CFDictionarySetValue(v14, v20, v16);
  if ((v26 & 1) == 0)
  {
    *(_BYTE *)(v7 + 9248) = 1;
LABEL_52:
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v24 = *(dispatch_queue_t **)(v7 + 40);
    if (v24)
      APMediaDataControlServerSendRequest(v24, 1919513459, (uint64_t)v14, 0, 0);
    audioSession_triggerCoreCapture(v7, v14);
    goto LABEL_22;
  }
  if (APSSettingsGetIntWithDefault())
    goto LABEL_52;
  v21 = *(_QWORD *)(v7 + 9168) + v4;
  while (1)
  {
    v22 = __ldaxr(&audioSession_glitchLogger_sNextIssueReportTicks);
    if (v22 != v25)
      break;
    if (!__stlxr(v21, &audioSession_glitchLogger_sNextIssueReportTicks))
      goto LABEL_52;
  }
  __clrex();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_22:
  CFRelease(v3);
  CFRelease(v6);
  if (v8)
    CFRelease(v8);
  if (v14)
    goto LABEL_25;
}

uint64_t audioSession_audioDecoderDecodeCallback(uint64_t a1, _DWORD *a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *(_QWORD *)(a5 + 1800);
  v6 = *(_QWORD *)(a5 + 1808);
  if (v5 == v6 && !*(_BYTE *)(a5 + 9004))
  {
    *a2 = 0;
    return 4294960546;
  }
  else
  {
    result = 0;
    *a2 = 1;
    *(_DWORD *)a3 = 1;
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(a5 + 80);
    *(_DWORD *)(a3 + 12) = v6 - v5;
    *(_QWORD *)(a3 + 16) = v5;
    *(_QWORD *)(a5 + 1800) = v6;
    *(_QWORD *)(a5 + 1816) = 0;
    *(_DWORD *)(a5 + 1824) = 0;
    *(_DWORD *)(a5 + 1828) = v6 - v5;
    *a4 = a5 + 1816;
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeConvertProgressRTPTimeToSecond(uint64_t a1, int a2, int a3, int a4, double *a5, double *a6, double a7, double a8)
{
  unint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t result;

  if (a1)
  {
    v10 = atomic_load((unint64_t *)(a1 + 1768));
    if ((v10 & 0xFF000000000000) == 0)
      LODWORD(v10) = a3;
    LODWORD(a8) = *(_DWORD *)(a1 + 76);
    v11 = (double)*(unint64_t *)&a8;
    v12 = (double)((int)v10 - a2) / v11;
    v13 = (double)(a4 - a2) / v11;
    if (gLogCategory_APReceiverAudioSessionRealTime <= 40
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a5)
      *a5 = v12;
    result = 0;
    if (a6)
      *a6 = v13;
  }
  else
  {
    APSLogErrorAt();
    return 4294895144;
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeSetSecurityInfo(uint64_t a1, const UInt8 *a2, const UInt8 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const __CFAllocator *v9;
  CFDataRef v10;
  CFDataRef v11;
  CFDataRef v12;
  CFDataRef v13;
  const void *v14;

  if (!a1)
    return 4294895144;
  v6 = a1 + 480;
  AES_CBCFrame_Final();
  *(_QWORD *)(a1 + 504) = 0;
  v7 = AES_CBCFrame_Init();
  if ((_DWORD)v7)
  {
    v8 = v7;
    APSLogErrorAt();
    return v8;
  }
  *(_QWORD *)(a1 + 504) = v6;
  if (!*(_BYTE *)(a1 + 96))
    return 0;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v9 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v10 = CFDataCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], a2, 16);
  if (!v10)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v11 = v10;
  v12 = CFDataCreate(v9, a3, 16);
  if (!v12)
  {
    APSLogErrorAt();
    CFRelease(v11);
    return 4294960568;
  }
  v13 = v12;
  v8 = APSCryptorCBCCreate();
  if ((_DWORD)v8)
  {
    APSLogErrorAt();
  }
  else
  {
    v14 = *(const void **)(a1 + 472);
    *(_QWORD *)(a1 + 472) = 0;
    if (v14)
      CFRelease(v14);
  }
  CFRelease(v11);
  CFRelease(v13);
  return v8;
}

uint64_t APReceiverAudioSessionRealTimeStartPacketProcesser(_QWORD **a1)
{
  _WORD *v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  dispatch_time_t v6;
  NSObject *v7;
  const __CFAllocator *v8;
  const CFDictionaryKeyCallBacks *v9;
  const CFDictionaryValueCallBacks *v10;
  __CFDictionary *Mutable;
  __CFDictionary *v12;
  _QWORD *v13;
  _QWORD *v14;
  const void *v15;
  const void **v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  NSObject *v28;
  NSObject *v29;
  dispatch_time_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _WORD *v35;
  _QWORD *context;
  uint64_t v37;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  v2 = a1 + 1103;
  if (*((_BYTE *)a1 + 8984))
  {
    v32 = 4294895143;
    goto LABEL_55;
  }
  if (a1[8])
    return 0;
  a1[1119] = (_QWORD *)mach_absolute_time();
  v3 = pthread_create((pthread_t *)a1 + 7, 0, (void *(__cdecl *)(void *))audioSession_networkThread, a1);
  if ((_DWORD)v3)
  {
    v32 = v3;
    goto LABEL_55;
  }
  a1[8] = a1 + 7;
  a1[238] = a1[1119];
  v4 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, (dispatch_queue_t)a1[1118]);
  a1[1121] = &v4->isa;
  if (!v4)
    goto LABEL_49;
  v5 = v4;
  dispatch_set_context(v4, a1);
  dispatch_source_set_event_handler_f(v5, (dispatch_function_t)audioSession_performPeriodicTasks);
  v6 = dispatch_time(0, 250000000);
  dispatch_source_set_timer(v5, v6, 0xEE6B280uLL, 0xEE6B280uLL);
  dispatch_resume(v5);
  v7 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, (dispatch_queue_t)a1[1133]);
  a1[1132] = &v7->isa;
  if (!v7)
  {
LABEL_49:
    APSLogErrorAt();
    return 4294960596;
  }
  dispatch_set_context(v7, a1);
  dispatch_source_set_event_handler_f((dispatch_source_t)a1[1132], (dispatch_function_t)audioSession_log);
  dispatch_source_set_timer((dispatch_source_t)a1[1132], 0, 1000000 * (_QWORD)a1[1134], 0);
  dispatch_resume((dispatch_object_t)a1[1132]);
  *((_DWORD *)a1 + 2198) = 0;
  *((_DWORD *)a1 + 2200) = 0;
  a1[1098] = 0;
  a1[1106] = 0;
  *v2 = 0;
  v35 = v2;
  v2[56] = 0;
  a1[1111] = 0;
  bzero(a1 + 296, 0xC84uLL);
  bzero(a1 + 697, 0xC84uLL);
  APSIOReporterGetCoreCaptureCount();
  a1[1148] = (_QWORD *)mach_absolute_time();
  a1[1149] = (_QWORD *)(int)FigGetCFPreferenceNumberWithDefault();
  v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v9 = (const CFDictionaryKeyCallBacks *)MEMORY[0x24BDBD6A0];
  v10 = (const CFDictionaryValueCallBacks *)MEMORY[0x24BDBD6B0];
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v12 = CFDictionaryCreateMutable(v8, 0, v9, v10);
  v13 = a1[294];
  if (v13)
  {
    CFRelease(v13);
    a1[294] = 0;
  }
  v14 = a1[295];
  if (v14)
  {
    CFRelease(v14);
    a1[295] = 0;
  }
  v15 = (const void *)*MEMORY[0x24BE038F8];
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x24BE038F8], CFSTR("ms"));
  FigCFDictionarySetDouble();
  FigCFDictionarySetInt32();
  if (Mutable && v12)
  {
    v16 = (const void **)MEMORY[0x24BE038F0];
    v17 = (const void *)*MEMORY[0x24BE038F0];
    CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x24BE038F0], CFSTR("Histogram_GlitchDuration"));
    v18 = (const void *)APSStatsHistogramCreate();
    if (v18)
    {
      v19 = v18;
      CFDictionarySetValue(v12, CFSTR("Histogram_GlitchDuration"), v18);
      CFRelease(v19);
    }
    CFDictionarySetValue(Mutable, v17, CFSTR("Histogram_StartupGlitchDuration"));
    v20 = (const void *)APSStatsHistogramCreate();
    if (v20)
    {
      v21 = v20;
      CFDictionarySetValue(v12, CFSTR("Histogram_StartupGlitchDuration"), v20);
      CFRelease(v21);
    }
    CFDictionarySetValue(Mutable, v17, CFSTR("Histogram_NonStartupGlitchDuration"));
    v22 = (const void *)APSStatsHistogramCreate();
    if (v22)
    {
      v23 = v22;
      CFDictionarySetValue(v12, CFSTR("Histogram_NonStartupGlitchDuration"), v22);
      CFRelease(v23);
    }
  }
  else
  {
    v16 = (const void **)MEMORY[0x24BE038F0];
    APSLogErrorAt();
    APSLogErrorAt();
    APSLogErrorAt();
  }
  FigCFDictionarySetDouble();
  FigCFDictionarySetDouble();
  FigCFDictionarySetInt32();
  if (Mutable && v12)
  {
    CFDictionarySetValue(Mutable, *v16, CFSTR("Histogram_NetworkTransitTime"));
    v24 = (const void *)APSStatsHistogramCreate();
    if (v24)
    {
      v25 = v24;
      CFDictionarySetValue(v12, CFSTR("Histogram_NetworkTransitTime"), v24);
      CFRelease(v25);
    }
  }
  else
  {
    APSLogErrorAt();
  }
  CFDictionaryRemoveValue(Mutable, v15);
  FigCFDictionarySetDouble();
  FigCFDictionarySetDouble();
  FigCFDictionarySetInt32();
  if (Mutable && v12)
  {
    CFDictionarySetValue(Mutable, *v16, CFSTR("Histogram_RenderRedundancyLevel"));
    v26 = (const void *)APSStatsHistogramCreate();
    if (v26)
    {
      v27 = v26;
      CFDictionarySetValue(v12, CFSTR("Histogram_RenderRedundancyLevel"), v26);
      CFRelease(v27);
    }
  }
  else
  {
    APSLogErrorAt();
  }
  APSAtomicMessageQueueCreate();
  CFRelease(Mutable);
  a1[294] = v12;
  v28 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, (dispatch_queue_t)a1[1118]);
  a1[1122] = &v28->isa;
  if (!v28)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  dispatch_set_context(v28, a1);
  dispatch_source_set_event_handler_f((dispatch_source_t)a1[1122], (dispatch_function_t)audioSession_performGlitchCollection);
  v29 = a1[1122];
  v30 = dispatch_time(0, 1000000000);
  dispatch_source_set_timer(v29, v30, 0x3B9ACA00uLL, 0x3B9ACA00uLL);
  dispatch_resume((dispatch_object_t)a1[1122]);
  v31 = a1[5];
  if (v31)
  {
    context = a1[5];
    v37 = 0;
    dispatch_sync_f((dispatch_queue_t)v31[14], &context, (dispatch_function_t)controlServer_startInternal);
    v32 = v37;
    if ((_DWORD)v37)
    {
LABEL_55:
      APSLogErrorAt();
      return v32;
    }
  }
  APSCopyTightSyncInfo();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *((_BYTE *)v35 + 160) = 1;
  if (!*((_BYTE *)a1 + 2304) && (int)*((float *)a1 + 405) < 151)
    return 0;
  v33 = FigCFWeakReferenceHolderCopyReferencedObject();
  v32 = v33;
  if (v33)
  {
    if (*(_BYTE *)(v33 + 729))
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APReceiverAudioSessionPlatformControl(*a1, CFSTR("RASP::HandleAudioInterruptionBegan"));
    }
    CFRelease((CFTypeRef)v32);
    return 0;
  }
  return v32;
}

uint64_t audioSession_networkThread(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v6;
  int v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  unsigned int *v11;
  unsigned int *v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  size_t v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v23;
  unint64_t v24;
  int v25;
  int v26;
  int v27;
  fd_set v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unsigned int v37;
  unint64_t v38;
  uint64_t v39;

  v39 = *MEMORY[0x24BDAC8D0];
  if (*(_BYTE *)(a1 + 97))
    v26 = 0;
  else
    v26 = *(_DWORD *)(a1 + 52);
  v2 = *(int *)(a1 + 1560);
  v3 = *(int *)(a1 + 48);
  pthread_setname_np("AirPlayAudioReceiver");
  if (*(_BYTE *)(a1 + 97))
    FigThreadGetMachThreadPriorityValue();
  SetCurrentThreadPriority();
  v4 = *(unsigned __int8 *)(a1 + 97);
  if (v26 > -1 && v4 == 0)
    v6 = v26;
  else
    v6 = -1;
  if ((int)v2 > v6)
    v6 = v2;
  if ((int)v3 > v6)
    v6 = v3;
  v7 = v6 + 1;
  memset(&v28, 0, sizeof(v28));
  v25 = 1 << v26;
  v24 = (unint64_t)v26 >> 5;
  v27 = 1 << v2;
  v8 = v2 >> 5;
  v9 = 1 << v3;
  v10 = v3 >> 5;
  v11 = (unsigned int *)(a1 + 1952);
  v12 = (unsigned int *)(a1 + 1956);
  v23 = v6 + 1;
  if (!v4)
  {
LABEL_17:
    if (__darwin_check_fd_set_overflow(v26, &v28, 0))
      v28.fds_bits[v24] |= v25;
    goto LABEL_19;
  }
  while (1)
  {
LABEL_19:
    if (__darwin_check_fd_set_overflow(v2, &v28, 0))
      v28.fds_bits[v8] |= v27;
    if (__darwin_check_fd_set_overflow(v3, &v28, 0))
      v28.fds_bits[v10] |= v9;
    v13 = select(v7, &v28, 0, 0, 0);
    if (v13 > 0)
      break;
    if (!v13 || !*__error())
      goto LABEL_44;
    v18 = *__error();
    if (!v18)
      break;
    if (v18 != 4)
LABEL_44:
      usleep(0x186A0u);
LABEL_75:
    if (!*(_BYTE *)(a1 + 97))
      goto LABEL_17;
  }
  if (!*(_BYTE *)(a1 + 97) && __darwin_check_fd_set_overflow(v26, &v28, 0) && (v28.fds_bits[v24] & v25) != 0)
  {
    v35 = 0;
    *(_QWORD *)&v29 = 0;
    if (!APSRTPPassThroughJitterBufferAcquireRelinquishedNode())
    {
      APTTrafficMetricsMessageReadStarted();
      v19 = SocketRecvFrom();
      APTTrafficMetricsMessageReadFinished();
      if (v19 == 35)
      {
LABEL_54:
        APTTrafficMetricsMessageProcessed();
        v7 = v23;
        if (v35)
          APSRTPPassThroughJitterBufferRelinquishNode();
        APSNetworkClockLogCurrentNetworkTime();
        goto LABEL_25;
      }
      if (!v19)
      {
        v20 = v29;
        do
          v21 = __ldaxr(v11);
        while (__stlxr(v21 + v20, v11));
        if (!audioSession_processPacket(a1, v35, v29, 0))
          v35 = 0;
        goto LABEL_54;
      }
    }
    APSLogErrorAt();
    goto LABEL_54;
  }
LABEL_25:
  if (__darwin_check_fd_set_overflow(v2, &v28, 0) && (v28.fds_bits[v8] & v27) != 0)
  {
    bzero(&v35, 0x5A4uLL);
    v32 = 0;
    v33 = 0;
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
    APTTrafficMetricsMessageReadStarted();
    v14 = SocketRecvFrom();
    APTTrafficMetricsMessageReadFinished();
    if (v14 == 35)
      goto LABEL_72;
    if (v14)
      goto LABEL_77;
    v15 = v33;
    do
      v16 = __ldaxr(v12);
    while (__stlxr(v16 + v15, v12));
    v17 = v33 - 4;
    if (v33 < 4 || (v35 & 0xC0) != 0x80)
      goto LABEL_72;
    if (BYTE1(v35) == 215)
    {
      if (v33 > 0x1B)
      {
        LODWORD(v29) = 2;
        BYTE8(v29) = v35;
        *((double *)&v30 + 1) = (double)bswap64(v36) / 1000000000.0;
        HIDWORD(v29) = bswap32(HIDWORD(v35));
        LODWORD(v30) = bswap32(v37);
        v31 = bswap64(v38);
        while (!APSAtomicMessageQueueSendMessage())
          usleep(1u);
        goto LABEL_61;
      }
LABEL_77:
      APSLogErrorAt();
      goto LABEL_72;
    }
    if (BYTE1(v35) != 214)
    {
      if (BYTE1(v35) == 212)
      {
        if (v33 > 0x13)
        {
          BYTE8(v29) = v35;
          LODWORD(v29) = 1;
          *((double *)&v30 + 1) = (double)bswap32(v36) + (double)bswap32(HIDWORD(v36)) * 2.32830644e-10 + -2208988800.0;
          HIDWORD(v29) = bswap32(HIDWORD(v35));
          LODWORD(v30) = bswap32(v37);
          v31 = 0;
          while (!APSAtomicMessageQueueSendMessage())
            usleep(1u);
LABEL_61:
          audioSession_logTimeAnnounce(a1, &v29);
          kdebug_trace();
          goto LABEL_72;
        }
        goto LABEL_77;
      }
LABEL_72:
      APTTrafficMetricsMessageProcessed();
      v7 = v23;
      goto LABEL_73;
    }
    if (v33 == 8)
    {
      WORD2(v35) = bswap32(WORD2(v35)) >> 16;
      audioSession_enqueueRetransmitCommand(a1);
      ++*(_DWORD *)(a1 + 2216);
      goto LABEL_72;
    }
    if (v33 < 0x10)
      goto LABEL_72;
    v34 = 0;
    if (*(_BYTE *)(a1 + 2160))
    {
      if (gLogCategory_APReceiverAudioSessionRealTime > 90
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_88;
      }
    }
    else
    {
      if (!*(_BYTE *)(a1 + 97))
      {
        if (APSRTPPassThroughJitterBufferAcquireRelinquishedNode() || *(_QWORD *)(a1 + 1632) < v17)
        {
          APSLogErrorAt();
        }
        else
        {
          memcpy(*(void **)(v34 + 24), (char *)&v35 + 4, v17);
          if (!audioSession_processPacket(a1, v34, v17, 1))
          {
            v34 = 0;
LABEL_71:
            APSNetworkClockLogCurrentNetworkTime();
            ++*(_DWORD *)(a1 + 2212);
            goto LABEL_72;
          }
        }
LABEL_88:
        if (v34)
          APSRTPPassThroughJitterBufferRelinquishNode();
        goto LABEL_71;
      }
      if (gLogCategory_APReceiverAudioSessionRealTime > 90
        || gLogCategory_APReceiverAudioSessionRealTime == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_88;
      }
    }
    LogPrintF();
    goto LABEL_88;
  }
LABEL_73:
  if (!__darwin_check_fd_set_overflow(v3, &v28, 0) || (v28.fds_bits[v10] & v9) == 0)
    goto LABEL_75;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

void audioSession_performPeriodicTasks(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unsigned int *v8;
  unsigned int *v9;
  unsigned int *v10;
  unsigned int *v11;
  unsigned int v12;
  unsigned int *v13;
  unsigned int *v14;
  unsigned int v15;
  unsigned int *v16;
  const __CFDictionary *v17;
  CFMutableDictionaryRef Mutable;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, CFTypeRef *);
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, CFTypeRef *);
  double v28;
  uint64_t v29;
  int v30;
  const void *v31;
  CFTypeRef v32;
  const void *v33;
  CFTypeRef v34;
  CFTypeRef cf[3];
  uint64_t v36;
  uint64_t v37;

  v34 = 0;
  if (!a1)
    return;
  audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
  audioSession_processEnqueuedRetransmitCommands(a1);
  audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
  audioSession_flushHistogramMessageQueue(a1);
  v2 = mach_absolute_time();
  if (*(_DWORD *)(a1 + 1864) == *(_DWORD *)(a1 + 1868))
  {
    v3 = v2;
    v4 = v2 - *(_QWORD *)(a1 + 1872);
    if (v2 - *(_QWORD *)(a1 + 1904) > *(_QWORD *)(a1 + 1912))
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 40
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        UpTicksPerSecond();
        LogPrintF();
      }
      *(_QWORD *)(a1 + 1904) = v3;
    }
    if (v4 > *(_QWORD *)(a1 + 1880))
      goto LABEL_111;
  }
  v5 = mach_absolute_time();
  if (v5 >= *(_QWORD *)(a1 + 1848))
  {
    ++*(_DWORD *)(a1 + 1840);
    v6 = *(_DWORD *)(a1 + 8788);
    v7 = v6 - *(_DWORD *)(a1 + 8792);
    *(_DWORD *)(a1 + 8792) = v6;
    if (v7 < 1)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize())
          goto LABEL_17;
        goto LABEL_21;
      }
    }
    else
    {
      ++*(_DWORD *)(a1 + 8800);
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize())
LABEL_17:
          LogPrintF();
LABEL_21:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    *(_QWORD *)(a1 + 1848) = *(_QWORD *)(a1 + 1856) + v5;
  }
  if (v5 >= *(_QWORD *)(a1 + 1936))
  {
    v8 = (unsigned int *)(a1 + 1952);
    do
      __ldaxr(v8);
    while (__stlxr(0, v8));
    v9 = (unsigned int *)(a1 + 1956);
    do
      __ldaxr(v9);
    while (__stlxr(0, v9));
    v10 = (unsigned int *)(a1 + 1960);
    do
      __ldaxr(v10);
    while (__stlxr(0, v10));
    v11 = (unsigned int *)(a1 + 1920);
    do
      v12 = __ldaxr(v11);
    while (__stlxr(0, v11));
    v13 = (unsigned int *)(a1 + 1924);
    do
      __ldaxr(v13);
    while (__stlxr(0, v13));
    v14 = (unsigned int *)(a1 + 1928);
    do
      v15 = __ldaxr(v14);
    while (__stlxr(0, v14));
    v16 = (unsigned int *)(a1 + 1932);
    do
      __ldaxr(v16);
    while (__stlxr(0, v16));
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v12
      && gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v15
      && gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_QWORD *)(a1 + 1936) = *(_QWORD *)(a1 + 1944) + v5;
  }
  if (v5 >= *(_QWORD *)(a1 + 9080))
  {
    audioSession_logHistograms(a1);
    *(_QWORD *)(a1 + 9080) = *(_QWORD *)(a1 + 9088) + v5;
  }
  if (v5 < *(_QWORD *)(a1 + 1976))
    goto LABEL_74;
  cf[0] = 0;
  v17 = *(const __CFDictionary **)(a1 + 2352);
  if (v17)
  {
    if (*(_QWORD *)(a1 + 40)
      && *(_QWORD *)(a1 + 1968) != 0x7FFFFFFFFFFFFFFFLL
      && CFDictionaryGetValue(v17, CFSTR("Histogram_NonStartupGlitchDuration")))
    {
      if (!APSStatsHistogramCreateSerializedDictionary())
      {
        mach_absolute_time();
        UpTicksToSeconds();
        Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        if (Mutable
          && !FigCFDictionarySetInt32()
          && !CFDictionarySetInt64()
          && !CFDictionarySetInt64())
        {
          FigCFDictionarySetValue();
          APMediaDataControlServerSendRequest(*(dispatch_queue_t **)(a1 + 40), 1918989680, (uint64_t)Mutable, 0, 0);
          goto LABEL_69;
        }
        APSLogErrorAt();
LABEL_119:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 90
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_69;
      }
      APSLogErrorAt();
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize())
          LogPrintF();
        Mutable = 0;
        goto LABEL_119;
      }
    }
    Mutable = 0;
LABEL_69:
    if (Mutable)
      CFRelease(Mutable);
  }
  v19 = *(_DWORD *)(a1 + 1984);
  if ((v19 + 1) <= 4)
    *(_DWORD *)(a1 + 1984) = ++v19;
  v20 = kAirPlayReportRenderDeadlineBackoffSec[v19];
  *(_QWORD *)(a1 + 1976) = v5 + UpTicksPerSecond() * v20;
LABEL_74:
  if (v5 < *(_QWORD *)(a1 + 9104))
    goto LABEL_104;
  memset(cf, 0, sizeof(cf));
  if (!*(_QWORD *)(a1 + 9048))
    goto LABEL_103;
  v21 = 0;
  v36 = 0;
  v37 = 0;
  while (1)
  {
    if (!APSAtomicMessageQueueReadMessage())
      goto LABEL_103;
    if ((_DWORD)v37 != 1)
      break;
    v25 = *(_QWORD *)(a1 + 2296);
    v26 = v36;
    v27 = *(unsigned int (**)(uint64_t, uint64_t, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
    if (!v27 || v27(v25, v26, cf))
    {
      APSLogErrorAt();
      if (gLogCategory_APReceiverAudioSessionRealTime <= 90
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_99;
      }
      goto LABEL_103;
    }
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
LABEL_89:
      mach_absolute_time();
      UpTicksToMilliseconds();
      LogPrintF();
    }
LABEL_93:
    ++v21;
  }
  if ((_DWORD)v37 != 2)
    goto LABEL_93;
  v22 = *(_QWORD *)(a1 + 2296);
  v23 = v36;
  v24 = *(unsigned int (**)(uint64_t, uint64_t, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v24 && !v24(v22, v23, cf))
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50
      && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_89;
    }
    goto LABEL_93;
  }
  APSLogErrorAt();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 90
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
LABEL_99:
    LogPrintF();
  }
LABEL_103:
  *(_QWORD *)(a1 + 9104) = *(_QWORD *)(a1 + 9096) + v5;
LABEL_104:
  UpTicksToSecondsF();
  if (*(_QWORD *)(a1 + 9192) <= (unint64_t)v28
    && (*(_QWORD *)(a1 + 9184) = v5, (v29 = FigCFWeakReferenceHolderCopyReferencedObject()) != 0))
  {
    v31 = (const void *)v29;
    AirPlayReceiverSessionControl(v29, v30, CFSTR("nanWifiStats"), 0, 0, (__CFDictionary **)&v34);
    v32 = v34;
    if (v34)
    {
      v33 = *(const void **)(a1 + 9208);
      CFRetain(v34);
      *(_QWORD *)(a1 + 9208) = v32;
      if (v33)
        CFRelease(v33);
    }
    APSNetworkClockLogCurrentNetworkTime();
    CFRelease(v31);
  }
  else
  {
    APSNetworkClockLogCurrentNetworkTime();
  }
LABEL_111:
  if (v34)
    CFRelease(v34);
}

uint64_t audioSession_log(uint64_t a1)
{
  uint64_t result;

  result = APSRTPPassThroughJitterBufferGetInsertedNodeCount();
  if (*(int *)(a1 + 1628) <= 0 || !*(_DWORD *)(a1 + 76))
    return APSLogErrorAt();
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
    {
      APSSGetGasGaugeStringForPercent();
      return LogPrintF();
    }
  }
  return result;
}

uint64_t audioSession_performGlitchCollection(uint64_t result)
{
  uint64_t v1;
  char *v2;
  BOOL v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int *v6;
  unsigned int v7;
  unsigned int v8;
  _OWORD *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  _DWORD *v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  _BOOL4 v27;
  unsigned int v28;
  BOOL v29;
  _DWORD *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  __CFNotificationCenter *DarwinNotifyCenter;
  __CFString *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _DWORD *v43;

  if (result)
  {
    v1 = result;
    v2 = (char *)(result + 8804);
    APSAsyncLoggerGetSharedLogger();
    result = APSAsyncLoggerLogMessage();
    v3 = 0;
    v4 = 0;
    v5 = 0;
    v6 = (unsigned int *)(v1 + 8784);
    do
    {
      v7 = *v6;
      if ((*v6 & 1) == 0)
      {
        v4 = (v7 >> 1) & 1;
        while (1)
        {
          v8 = __ldaxr(v6);
          if (v8 != v7)
            break;
          if (!__stlxr((v7 & 0xFFFFFFFD | (2 * ((v7 >> 1) & 1))) ^ 2, v6))
            goto LABEL_10;
        }
        __clrex();
      }
      result = usleep(0xAu);
      v3 = v5++ > 0x62;
    }
    while (v5 != 100);
LABEL_10:
    v9 = (_OWORD *)(v1 + 2368 + 3208 * v4);
    v10 = v3;
    v11 = v10 ? 0 : v1 + 2368 + 3208 * v4;
    if (!v10)
    {
      v12 = v1 + 2368 + 3208 * v4;
      v13 = *(_DWORD *)(v12 + 3200);
      v14 = v2[20];
      result = mach_absolute_time();
      v15 = result;
      if (v13 > 0xC8)
        goto LABEL_73;
      v16 = v13;
      if (v13 != 200)
        goto LABEL_22;
      if (*v2 == 1)
      {
LABEL_73:
        if (gLogCategory_APReceiverAudioSessionRealTime <= 90)
        {
          if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
            result = LogPrintF();
        }
      }
      v16 = 200;
LABEL_22:
      if (*v2 == 1)
      {
        result = (uint64_t)memmove(v9 + 1, (const void *)(v1 + 2368 + 3208 * v4), 16 * v16);
        *v9 = *(_OWORD *)(v1 + 8808);
        ++v13;
      }
      if (v13 < 2)
      {
        v17 = 0;
        if (v14)
        {
LABEL_31:
          if (v16 || *v2)
          {
            v24 = 0;
            v25 = v17 + 1;
            goto LABEL_48;
          }
          v24 = 0;
          goto LABEL_47;
        }
      }
      else
      {
        v17 = 0;
        v18 = v13 - 1;
        v19 = (_DWORD *)(v11 + 28);
        do
        {
          v20 = v11 + 16 * v17;
          v23 = *(_DWORD *)(v20 + 12);
          v21 = (_DWORD *)(v20 + 12);
          v22 = v23;
          if (v23 + *(v21 - 1) == *(v19 - 1))
            *v21 = *v19 + v22;
          else
            *(_OWORD *)(v11 + 16 * ++v17) = *(_OWORD *)(v19 - 3);
          v19 += 4;
          --v18;
        }
        while (v18);
        if (v14)
          goto LABEL_31;
      }
      if (!v16)
      {
        v26 = *v2;
        v27 = v26 != 1;
        if (v26 == 1)
          v28 = v17 + 1;
        else
          v28 = v17;
        v29 = v26 == 0;
        if (*v2)
          v25 = v28;
        else
          v25 = v17;
        v24 = !v29 && v27;
LABEL_48:
        v30 = (_DWORD *)(v12 + 3200);
        if (v2[133])
        {
          if (v15 < *(_QWORD *)(v1 + 8928))
          {
LABEL_70:
            *v30 = 0;
            return result;
          }
          *((_WORD *)v2 + 66) = 0;
        }
        v42 = v24;
        v43 = (_DWORD *)(v12 + 3200);
        v41 = v11;
        if (v25)
        {
          v40 = v15;
          v31 = 0;
          v32 = v25;
          v33 = v11 + 8;
          v34 = v2;
          while (1)
          {
            if (v2[21])
            {
              v35 = *(_QWORD *)(v33 - 8);
              v36 = *(_QWORD *)(v1 + 9224);
              if (gLogCategory_APReceiverAudioSessionRealTime <= 50
                && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
              CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("com.apple.airplay.realTimeAudioUnderrun"), 0, 0, 1u);
              audioSession_addHistogramValue(*(const __CFDictionary **)(v1 + 2352), CFSTR("Histogram_GlitchDuration"));
              v38 = v35 >= v36 ? CFSTR("Histogram_NonStartupGlitchDuration") : CFSTR("Histogram_StartupGlitchDuration");
              result = (uint64_t)audioSession_addHistogramValue(*(const __CFDictionary **)(v1 + 2352), v38);
              ++v31;
              v2 = v34;
              if (v34[132])
                break;
            }
            v33 += 16;
            if (!--v32)
              goto LABEL_66;
          }
          v39 = 0;
          *(_QWORD *)(v1 + 8928) = *(_QWORD *)(v1 + 8920) + v40;
          v34[133] = 1;
          *(_DWORD *)(v1 + 8788) += v31;
        }
        else
        {
          v31 = 0;
LABEL_66:
          *(_DWORD *)(v1 + 8788) += v31;
          v39 = v42;
          if (v42)
          {
            *(_OWORD *)(v1 + 8808) = *(_OWORD *)(v41 + 16 * v17);
            v39 = 1;
          }
        }
        v30 = v43;
        *v2 = v39;
        goto LABEL_70;
      }
      v24 = 1;
LABEL_47:
      v25 = v17;
      goto LABEL_48;
    }
  }
  return result;
}

uint64_t audioSession_logTimeAnnounce(uint64_t result, _DWORD *a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD *);
  _QWORD v4[3];

  if ((*a2 - 3) >= 0xFFFFFFFE)
  {
    memset(v4, 0, sizeof(v4));
    v2 = *(_QWORD *)(result + 2296);
    result = CMBaseObjectGetVTable();
    v3 = *(uint64_t (**)(uint64_t, _QWORD *))(*(_QWORD *)(result + 16) + 8);
    if (v3)
      result = v3(v2, v4);
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1)
        return LogPrintF();
      result = _LogCategory_Initialize();
      if ((_DWORD)result)
        return LogPrintF();
    }
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeStopPacketProcesser(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  const void *v10;
  const void *Value;
  const void *v12;
  void (*v13)(uint64_t, _QWORD);
  _QWORD v15[5];
  _QWORD v16[5];
  _QWORD block[5];
  CFTypeRef v18;
  _QWORD context[2];

  v2 = a1;
  v18 = 0;
  if (!a1)
    return v2;
  v3 = (_BYTE *)(a1 + 8824);
  if (*(_BYTE *)(a1 + 8984))
  {
    if (*(_QWORD *)(a1 + 64) && *(_DWORD *)(a1 + 48))
    {
      v5 = *(_QWORD *)(a1 + 40);
      if (v5)
      {
        context[0] = *(_QWORD *)(a1 + 40);
        context[1] = 0;
        dispatch_sync_f(*(dispatch_queue_t *)(v5 + 112), context, (dispatch_function_t)controlServer_stopInternal);
      }
      SendSelfConnectedLoopbackMessage();
      pthread_join(*(pthread_t *)(v2 + 56), 0);
      *(_QWORD *)(v2 + 64) = 0;
      *v3 = 1;
      audioSession_performGlitchCollection(v2);
      *(_BYTE *)(v2 + 8825) = 0;
      APSIOReporterGetCoreCaptureCount();
      v6 = MEMORY[0x24BDAC760];
      v7 = *(NSObject **)(v2 + 8944);
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 0x40000000;
      block[2] = __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke;
      block[3] = &__block_descriptor_tmp_392;
      block[4] = v2;
      dispatch_sync(v7, block);
      v8 = *(NSObject **)(v2 + 9064);
      v16[0] = v6;
      v16[1] = 0x40000000;
      v16[2] = __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke_2;
      v16[3] = &__block_descriptor_tmp_150;
      v16[4] = v2;
      dispatch_sync(v8, v16);
      v9 = *(NSObject **)(v2 + 8944);
      v15[0] = v6;
      v15[1] = 0x40000000;
      v15[2] = __APReceiverAudioSessionRealTimeStopPacketProcesser_block_invoke_3;
      v15[3] = &__block_descriptor_tmp_151;
      v15[4] = v2;
      dispatch_sync(v9, v15);
      APSCopyTightSyncInfo();
      if (v18)
        *(_BYTE *)(v2 + 9297) = 1;
      if (a2)
      {
        *(_QWORD *)(v2 + 8896) = CFDictionaryGetInt64();
        *(_QWORD *)(v2 + 8904) = CFDictionaryGetInt64();
        *(_QWORD *)(v2 + 8912) = CFDictionaryGetInt64();
        *(_QWORD *)(v2 + 9232) = CFDictionaryGetInt64();
        *(_QWORD *)(v2 + 9240) = CFDictionaryGetInt64();
        v10 = *(const void **)(v2 + 9200);
        Value = CFDictionaryGetValue(a2, CFSTR("senderNANWifiStats"));
        v12 = Value;
        if (Value)
          CFRetain(Value);
        *(_QWORD *)(v2 + 9200) = v12;
        if (v10)
          CFRelease(v10);
      }
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_QWORD *)(v2 + 8960) = mach_absolute_time();
      *(_BYTE *)(v2 + 8984) = 0;
      v2 = *(_QWORD *)(v2 + 120);
      if (!v2)
        goto LABEL_22;
      v13 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
      if (v13)
        v13(v2, 0);
    }
    v2 = 0;
  }
  else
  {
    APSLogErrorAt();
    v2 = 4294895143;
  }
LABEL_22:
  if (v18)
    CFRelease(v18);
  return v2;
}

uint64_t APReceiverAudioSessionRealTimeUpdateLatency(_DWORD *a1)
{
  int v2;
  int v3;
  BOOL v4;
  int v5;
  uint64_t result;
  int v7;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294895144;
  }
  v2 = a1[403];
  v3 = a1[402];
  v4 = __OFSUB__(v2, v3);
  v5 = v2 - v3;
  if (v5 < 0 != v4)
  {
    if (v3 < 22051)
    {
      v5 = -v3;
    }
    else
    {
      v5 = -441000;
      a1[434] = -441000;
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
      {
        if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (v7 = _LogCategory_Initialize(), v5 = a1[434], v7))
        {
          LogPrintF();
          v5 = a1[434];
        }
      }
    }
  }
  a1[434] = v5 - a1[2250] * a1[22] + gAirTunesRelativeTimeOffset;
  if (gLogCategory_APReceiverAudioSessionRealTime > 50)
    return 0;
  if (gLogCategory_APReceiverAudioSessionRealTime != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
  {
    LogPrintF();
    return 0;
  }
  return result;
}

uint64_t APReceiverAudioSessionRealTimeCopyMetrics(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1)
  {
    if (a2)
    {
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      return 0;
    }
    else
    {
      APSLogErrorAt();
      return 4294895145;
    }
  }
  else
  {
    v2 = 4294895144;
    APSLogErrorAt();
  }
  return v2;
}

uint64_t APReceiverAudioSessionRealTimeLogEnded(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __CFDictionary *Mutable;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  const __CFDictionary *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const __CFAllocator *v25;
  int v26;
  const char *v27;
  CFStringRef v28;
  int v29;
  const char *v30;
  CFStringRef v31;
  const void *v32;
  const void *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  const __CFString *v40;
  const __CFString *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if (!result)
    return result;
  if (!a2)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  v2 = result;
  v3 = *(_QWORD *)(result + 2240);
  if (v3 == -1)
    v4 = 0;
  else
    v4 = (v3 / 0xF4240);
  v5 = *(_QWORD *)(result + 2248);
  if (v5 == -1)
    v6 = 0;
  else
    v6 = (v5 / 0xF4240);
  v7 = *(_QWORD *)(result + 2256);
  if (v7 == -1)
    v8 = 0;
  else
    v8 = (v7 / 0xF4240);
  v9 = UpTicksToSeconds();
  DataBuffer_AppendF();
  *((_QWORD *)&v47 + 1) = v6;
  v48 = v8;
  *(_QWORD *)&v47 = v4;
  DataBuffer_AppendF();
  v43 = dword_2553CEA00;
  v44 = *(unsigned int *)(v2 + 2268);
  v45 = *(unsigned int *)(v2 + 2272);
  v46 = *(unsigned int *)(v2 + 1832) / 0x64uLL;
  DataBuffer_AppendF();
  v42 = *(unsigned int *)(v2 + 2036);
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v11 = *(_QWORD *)(v2 + 8880);
  v12 = *(_QWORD *)(v2 + 8872);
  if (v11 >= v12)
    v13 = v11 - v12;
  else
    v13 = 0;
  v14 = *(_QWORD *)(v2 + 8888);
  if (v13 >= v14)
    v15 = v13 - v14;
  else
    v15 = 0;
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime != -1)
    {
LABEL_20:
      v50 = *(_QWORD *)(v2 + 9232);
      v51 = *(_QWORD *)(v2 + 9240);
      v48 = *(_QWORD *)(v2 + 8912);
      v49 = *(unsigned int *)(v2 + 8856);
      v47 = *(_OWORD *)(v2 + 8896);
      v45 = v14;
      v46 = v15;
      v43 = v11;
      v44 = v13;
      v42 = v12;
      LogPrintF();
      goto LABEL_22;
    }
    if (_LogCategory_Initialize())
    {
      v12 = *(_QWORD *)(v2 + 8872);
      v11 = *(_QWORD *)(v2 + 8880);
      v14 = *(_QWORD *)(v2 + 8888);
      goto LABEL_20;
    }
  }
LABEL_22:
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  audioSession_updateCallDurationMetric(v2, 0);
  FigCFDictionarySetInt64();
  v16 = *(_QWORD *)(v2 + 9200);
  if (v16)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1
        || (v17 = _LogCategory_Initialize(), v16 = *(_QWORD *)(v2 + 9200), v17))
      {
        v42 = v16;
        LogPrintF();
      }
    }
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFBooleanGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
  }
  v18 = *(_QWORD *)(v2 + 9208);
  if (v18)
  {
    if (gLogCategory_APReceiverAudioSessionRealTime <= 50)
    {
      if (gLogCategory_APReceiverAudioSessionRealTime != -1
        || (v19 = _LogCategory_Initialize(), v18 = *(_QWORD *)(v2 + 9208), v19))
      {
        v42 = v18;
        LogPrintF();
      }
    }
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFBooleanGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFNumberGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
    CFStringGetTypeID();
    CFDictionaryGetTypedValue();
    FigCFDictionarySetValue();
  }
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  v20 = *(const __CFDictionary **)(v2 + 2352);
  if (v20)
  {
    CFDictionaryGetValue(v20, CFSTR("Histogram_GlitchDuration"));
    v21 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, CFSTR("glitchDurationHistogram"), v21);
    if (v21)
      CFRelease(v21);
    CFDictionaryGetValue(*(CFDictionaryRef *)(v2 + 2352), CFSTR("Histogram_StartupGlitchDuration"));
    v22 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, CFSTR("startupGlitchDurationHistogram"), v22);
    if (v22)
      CFRelease(v22);
    CFDictionaryGetValue(*(CFDictionaryRef *)(v2 + 2352), CFSTR("Histogram_NetworkTransitTime"));
    v23 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, CFSTR("receiverRenderDeadlineHistogram"), v23);
    if (v23)
      CFRelease(v23);
    CFDictionaryGetValue(*(CFDictionaryRef *)(v2 + 2352), CFSTR("Histogram_RenderRedundancyLevel"));
    v24 = (const void *)APSStatsHistogramCopyValuesAsRTCString();
    APSStatsHistogramGetTotalSampleCount();
    FigCFDictionarySetInt64();
    CFDictionarySetValue(Mutable, CFSTR("renderRedundancyLevelHistogram"), v24);
    if (v24)
      CFRelease(v24);
  }
  v25 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v26 = *(_DWORD *)(v2 + 156);
  if (v26 > 31)
  {
    if (v26 > 127)
    {
      if (v26 == 128)
      {
        v27 = "NAN";
        goto LABEL_62;
      }
      if (v26 == 256)
      {
        v27 = "IPsecBT";
        goto LABEL_62;
      }
    }
    else
    {
      if (v26 == 32)
      {
        v27 = "BTLE";
        goto LABEL_62;
      }
      if (v26 == 64)
      {
        v27 = "WFD";
        goto LABEL_62;
      }
    }
LABEL_55:
    v27 = "?";
    if (v26 == 512)
      v27 = "IPSecWiFi";
  }
  else
  {
    v27 = "Enet";
    switch(v26)
    {
      case 1:
        break;
      case 2:
        v27 = "WiFi";
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_55;
      case 4:
        v27 = "AWDL";
        break;
      case 8:
        v27 = "USB";
        break;
      default:
        if (v26 != 16)
          goto LABEL_55;
        v27 = "Direct";
        break;
    }
  }
LABEL_62:
  v28 = CFStringCreateWithFormat(v25, 0, CFSTR("%s"), v27, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51);
  v29 = *(_DWORD *)(v2 + 72);
  if (v29 <= 63)
  {
    v30 = "PCM";
    switch(v29)
    {
      case 1:
        goto LABEL_86;
      case 2:
        v30 = "ALAC";
        goto LABEL_86;
      case 3:
      case 5:
      case 6:
      case 7:
        goto LABEL_76;
      case 4:
        v30 = "AAC-LC";
        goto LABEL_86;
      case 8:
        v30 = "AAC-ELD";
        goto LABEL_86;
      default:
        if (v29 == 16)
        {
          v30 = "H.264";
        }
        else
        {
          if (v29 != 32)
            goto LABEL_76;
          v30 = "Opus";
        }
        break;
    }
    goto LABEL_86;
  }
  if (v29 <= 255)
  {
    if (v29 == 64)
    {
      v30 = "HEVC";
      goto LABEL_86;
    }
    if (v29 == 128)
    {
      v30 = "DDPLUS";
      goto LABEL_86;
    }
LABEL_76:
    if (v29 == 2048)
    {
      v30 = "QLAC";
    }
    else
    {
      v30 = "?";
      if (v29 == 4096)
        v30 = "APAC";
    }
    goto LABEL_86;
  }
  if (v29 == 256)
  {
    v30 = "QC3";
    goto LABEL_86;
  }
  if (v29 == 512)
  {
    v30 = "QAAC-HE";
    goto LABEL_86;
  }
  if (v29 != 1024)
    goto LABEL_76;
  v30 = "QAAC-LC";
LABEL_86:
  v31 = CFStringCreateWithFormat(v25, 0, CFSTR("%s"), v30);
  v32 = *(const void **)(v2 + 136);
  if (v32)
    CFDictionarySetValue(Mutable, CFSTR("clientDeviceModel"), v32);
  v33 = *(const void **)(v2 + 144);
  if (v33)
    CFDictionarySetValue(Mutable, CFSTR("clientOSBuildVersionNumber"), v33);
  CFDictionarySetValue(Mutable, CFSTR("transportType"), v28);
  CFDictionarySetValue(Mutable, CFSTR("codecType"), v31);
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  v35 = 600;
  if (v9 > 0x258)
    v35 = v9;
  LODWORD(v34) = *(_DWORD *)(v2 + 76);
  v36 = (unint64_t)((double)v34 * 0.1 * (double)v35);
  v37 = 2 * v35;
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt64();
  v38 = *(unsigned int *)(v2 + 9040);
  if (v37 <= v38)
    LODWORD(v38) = v37;
  *(_DWORD *)(v2 + 9040) = v38;
  FigCFDictionarySetInt64();
  v39 = *(unsigned int *)(v2 + 9044);
  if (v39 >= v36)
    LODWORD(v39) = v36;
  *(_DWORD *)(v2 + 9044) = v39;
  FigCFDictionarySetInt64();
  FigCFDictionarySetInt32();
  FigCFDictionarySetInt32();
  CFDictionarySetValue(Mutable, CFSTR("sessionType"), CFSTR("AudioRealTime"));
  v40 = (const __CFString *)CFPreferencesCopyValue(CFSTR("ExperimentGroup"), CFSTR("com.apple.da"), CFSTR("mobile"), (CFStringRef)*MEMORY[0x24BDBD570]);
  v41 = v40;
  if (v40 && CFStringCompare(v40, CFSTR("carry"), 0) == kCFCompareEqualTo)
    FigCFDictionarySetInt64();
  APSRTCReportingAgentSendMediaEvent();
  APSRTCReportingAgentSendEvent();
  if (Mutable)
    CFRelease(Mutable);
  if (v28)
    CFRelease(v28);
  if (v31)
    CFRelease(v31);
  if (v41)
    CFRelease(v41);
  return 0;
}

CFMutableDictionaryRef APReceiverAudioSessionRealTimeCopyAudioBufferInfo(uint64_t a1, int *a2)
{
  CFMutableDictionaryRef Mutable;
  CFMutableArrayRef v4;
  int v5;

  if (a1)
  {
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (Mutable)
    {
      v4 = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
      if (v4)
      {
        CFRelease(v4);
        v5 = 0;
      }
      else
      {
        v5 = -72150;
        APSLogErrorAt();
        CFRelease(Mutable);
        Mutable = 0;
      }
    }
    else
    {
      v5 = -72150;
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    Mutable = 0;
    v5 = -72152;
  }
  if (a2)
    *a2 = v5;
  return Mutable;
}

uint64_t APReceiverAudioSessionRealTimeCopyProperty(uint64_t a1, CFTypeRef cf1, int *a3)
{
  const void *v6;
  uint64_t result;
  const __CFAllocator *v8;
  int *v9;
  int v10;
  const void **v11;
  int v12;
  int v13;

  v13 = 0;
  if (!a1)
    goto LABEL_30;
  if (!cf1)
  {
    APSLogErrorAt();
    result = 0;
    v10 = -72151;
    goto LABEL_32;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, CFSTR("AudioFormat")))
  {
    v6 = *(const void **)(a1 + 2288);
    goto LABEL_9;
  }
  if (CFEqual(cf1, CFSTR("CompressionType")))
  {
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 72);
    goto LABEL_13;
  }
  if (CFEqual(cf1, CFSTR("MediaDataControlPort")))
  {
    result = CFNumberCreateInt64();
    if (a3)
      goto LABEL_20;
    return result;
  }
  if (CFEqual(cf1, CFSTR("MaximumLatency")))
  {
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 1616);
    goto LABEL_13;
  }
  if (CFEqual(cf1, CFSTR("MinimumLatency")))
  {
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 1612);
    goto LABEL_13;
  }
  if (CFEqual(cf1, CFSTR("NumberOfChannels")))
  {
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 80);
    goto LABEL_13;
  }
  if (CFEqual(cf1, CFSTR("PlatformAudioLatency")))
  {
    audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
    v12 = *(_DWORD *)(a1 + 1608);
    audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = &v12;
    goto LABEL_13;
  }
  if (CFEqual(cf1, CFSTR("RTCPPort")))
  {
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 1564);
    goto LABEL_13;
  }
  if (CFEqual(cf1, CFSTR("RTCPPortRemote")))
  {
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 1568);
    goto LABEL_13;
  }
  if (!CFEqual(cf1, CFSTR("AudioPort")))
  {
    if (CFEqual(cf1, CFSTR("AudioNetworkInfo")))
    {
      v6 = *(const void **)(a1 + 520);
      if (!v6)
      {
LABEL_30:
        APSLogErrorAt();
        result = 0;
        v10 = -72152;
        goto LABEL_32;
      }
    }
    else
    {
      if (CFEqual(cf1, CFSTR("SampleRate")))
      {
        v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
        v9 = (int *)(a1 + 76);
LABEL_13:
        result = (uint64_t)CFNumberCreate(v8, kCFNumberSInt32Type, v9);
        if (!a3)
          return result;
        goto LABEL_20;
      }
      if (!CFEqual(cf1, CFSTR("IsUsingScreen")))
      {
        if (gLogCategory_APReceiverAudioSessionRealTime <= 50
          && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        result = 0;
        v10 = -72154;
        goto LABEL_32;
      }
      v11 = (const void **)MEMORY[0x24BDBD270];
      if (!*(_BYTE *)(a1 + 2304))
        v11 = (const void **)MEMORY[0x24BDBD268];
      v6 = *v11;
    }
LABEL_9:
    result = (uint64_t)CFRetain(v6);
    if (!a3)
      return result;
    goto LABEL_20;
  }
  if (!*(_BYTE *)(a1 + 97))
  {
LABEL_40:
    v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    v9 = (int *)(a1 + 512);
    goto LABEL_13;
  }
  if (*(_QWORD *)(a1 + 520))
  {
    *(_DWORD *)(a1 + 512) = CFDictionaryGetInt64();
    goto LABEL_40;
  }
  APSLogErrorAt();
  result = 0;
  v10 = -72153;
LABEL_32:
  v13 = v10;
  if (a3)
LABEL_20:
    *a3 = v13;
  return result;
}

uint64_t APReceiverAudioSessionRealTimeSetProperty(uint64_t a1, CFTypeRef cf1, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v10;
  unsigned int v12;

  v12 = 0;
  if (!a1)
  {
    APSLogErrorAt();
    return -72152;
  }
  if (!cf1 || !a3)
  {
    APSLogErrorAt();
    return -72151;
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 30
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(cf1, CFSTR("VolumeLinear")))
  {
    if (CFEqual(cf1, CFSTR("PlatformAudioLatency")))
    {
      v8 = CFGetInt64Ranged();
      audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
      *(_DWORD *)(a1 + 1608) = v8;
LABEL_14:
      audioSession_sessionUnlock(*(pthread_mutex_t **)(a1 + 2280));
      return v12;
    }
    if (CFEqual(cf1, CFSTR("RTCMetadata")))
    {
      APSRTCReportingAgentSendMediaEvent();
      return v12;
    }
    if (CFEqual(cf1, CFSTR("timelineOffset")))
    {
      v10 = CFGetInt64();
      if ((v10 - 251) > 0xFFFFFE0A)
      {
        audioSession_sessionLock(*(pthread_mutex_t **)(a1 + 2280));
        gAirTunesRelativeTimeOffset = v10;
        goto LABEL_14;
      }
      APSLogErrorAt();
      return -6710;
    }
    else
    {
      if (gLogCategory_APReceiverAudioSessionRealTime <= 50
        && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return -72154;
    }
  }
  if (gLogCategory_APReceiverAudioSessionRealTime <= 50
    && (gLogCategory_APReceiverAudioSessionRealTime != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v12 = APReceiverAudioSessionPlatformSetProperty(*(_QWORD **)a1, v6, CFSTR("RASP::VolumeLinear"), v7, a3);
  if (v12)
    APSLogErrorAt();
  return v12;
}

uint64_t APReceiverStatsCollectorGetTypeID()
{
  if (APReceiverStatsCollectorGetTypeID_once != -1)
    dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_440);
  return APReceiverStatsCollectorGetTypeID_typeID;
}

double aprstats_Init(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 272) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

void aprstats_Finalize(_QWORD *a1)
{
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  NSObject *v8;

  if (gLogCategory_APReceiverStatsCollector <= 30
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APReceiverStatsCollectorDisableHUD((uint64_t)a1);
  v2 = (const void *)a1[25];
  if (v2)
  {
    CFRelease(v2);
    a1[25] = 0;
  }
  v3 = (const void *)a1[6];
  if (v3)
  {
    CFRelease(v3);
    a1[6] = 0;
  }
  v4 = (const void *)a1[15];
  if (v4)
  {
    CFRelease(v4);
    a1[15] = 0;
  }
  v5 = (const void *)a1[16];
  if (v5)
  {
    CFRelease(v5);
    a1[16] = 0;
  }
  v6 = (const void *)a1[17];
  if (v6)
  {
    CFRelease(v6);
    a1[17] = 0;
  }
  v7 = (const void *)a1[34];
  if (v7)
  {
    CFRelease(v7);
    a1[34] = 0;
  }
  v8 = a1[2];
  if (v8)
  {
    dispatch_release(v8);
    a1[2] = 0;
  }
}

CFStringRef aprstats_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;
  CFStringRef v3;

  ASPrintF();
  v2 = CFGetAllocator(a1);
  v3 = CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverStatsCollector %p %s>"), a1, 0);
  free(0);
  return v3;
}

void APReceiverStatsCollectorDisableHUD(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[5];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    if (v2)
    {
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = __APReceiverStatsCollectorDisableHUD_block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0l;
      block[4] = a1;
      dispatch_sync(v2, block);
    }
  }
}

uint64_t APReceiverStatsCollectorCreate()
{
  uint64_t Instance;
  dispatch_queue_t v1;

  if (!IsAppleInternalBuild() || !FigGetCFPreferenceNumberWithDefault())
    return 0;
  if (gLogCategory_APReceiverStatsCollector <= 30
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APReceiverStatsCollectorGetTypeID_once != -1)
    dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_440);
  Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    v1 = dispatch_queue_create("com.apple.airplay.receiver.statscollector", 0);
    *(_QWORD *)(Instance + 16) = v1;
    if (v1)
    {
      *(_DWORD *)(Instance + 260) = 0;
      *(_DWORD *)(Instance + 88) = APSScreenLatencyMs();
      *(_OWORD *)(Instance + 96) = xmmword_21E1B1CE0;
      *(_BYTE *)(Instance + 112) = 0;
      if (gLogCategory_APReceiverStatsCollector <= 30
        && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return Instance;
    }
  }
  APSLogErrorAt();
  if (gLogCategory_APReceiverStatsCollector <= 90
    && (gLogCategory_APReceiverStatsCollector != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (Instance)
  {
    CFRelease((CFTypeRef)Instance);
    return 0;
  }
  return Instance;
}

void APReceiverStatsCollectorSetScreenOptions(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    if (a2)
    {
      v2 = *(NSObject **)(a1 + 16);
      v3[0] = MEMORY[0x24BDAC760];
      v3[1] = 3221225472;
      v3[2] = __APReceiverStatsCollectorSetScreenOptions_block_invoke;
      v3[3] = &__block_descriptor_48_e5_v8__0l;
      v3[4] = a1;
      v3[5] = a2;
      dispatch_sync(v2, v3);
    }
  }
}

void APReceiverStatsCollectorSetIfName(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetIfName_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void APReceiverStatsCollectorSetHUDOptions(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetHUDOptions_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void APReceiverStatsCollectorEnableLogging(uint64_t a1)
{
  aprstats_logEnable(a1, 1);
}

void aprstats_logEnable(uint64_t a1, char a2)
{
  NSObject *v2;
  _QWORD v3[5];
  char v4;

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __aprstats_logEnable_block_invoke;
    v3[3] = &__block_descriptor_41_e5_v8__0l;
    v3[4] = a1;
    v4 = a2;
    dispatch_sync(v2, v3);
  }
}

uint64_t __aprstats_logEnable_block_invoke(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 257) = *(_BYTE *)(result + 40);
  return result;
}

void APReceiverStatsCollectorDisableLogging(uint64_t a1)
{
  aprstats_logEnable(a1, 0);
}

void APReceiverStatsCollectorEnableHUD(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorEnableHUD_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a2;
    v3[5] = a1;
    dispatch_sync(v2, v3);
  }
}

double aprstats_getSynchronizedNetworkTime(uint64_t a1)
{
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t *);
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 272);
  if (v1)
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    v2 = *(unsigned int (**)(uint64_t, uint64_t *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
    if (v2)
    {
      if (!v2(v1, &v4))
        return (double)(int)v6 + (double)v5 * 5.42101086e-20;
    }
  }
  APSLogErrorAt();
  return 0.0;
}

void APReceiverStatsCollectorSetMirroringMode(uint64_t a1, int a2)
{
  NSObject *v2;
  _QWORD v3[5];
  int v4;

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetMirroringMode_block_invoke;
    v3[3] = &__block_descriptor_44_e5_v8__0l;
    v3[4] = a1;
    v4 = a2;
    dispatch_sync(v2, v3);
  }
}

void APReceiverStatsCollectorShowStats(uint64_t a1)
{
  NSObject *v1;
  _QWORD block[5];

  if (a1)
  {
    v1 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APReceiverStatsCollectorShowStats_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = a1;
    dispatch_sync(v1, block);
  }
}

uint64_t aprstats_createAWDLSequenceLines(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;

  result = AirPlayCreateAWDLChannelSequenceString();
  if (a3 >= 9)
    return AirPlayCreateAWDLChannelSequenceString();
  return result;
}

uint64_t APReceiverStatsCollectorUpdateAudioBufferDuration(uint64_t result, int a2)
{
  if (result)
    *(_DWORD *)(result + 56) = a2;
  return result;
}

uint64_t APReceiverStatsCollectorAddAudioLostPacketCount(uint64_t result, int a2)
{
  unsigned int *v2;
  unsigned int v3;

  if (result)
  {
    v2 = (unsigned int *)(result + 60);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + a2, v2));
  }
  return result;
}

uint64_t APReceiverStatsCollectorAddAudioUnrecoveredPacketCount(uint64_t result, int a2)
{
  unsigned int *v2;
  unsigned int v3;

  if (result)
  {
    v2 = (unsigned int *)(result + 64);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + a2, v2));
  }
  return result;
}

uint64_t APReceiverStatsCollectorAddAudioLatePacketCount(uint64_t result, int a2)
{
  unsigned int *v2;
  unsigned int v3;

  if (result)
  {
    v2 = (unsigned int *)(result + 68);
    do
      v3 = __ldxr(v2);
    while (__stxr(v3 + a2, v2));
  }
  return result;
}

void APReceiverStatsCollectorUpdateVideoSizes(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7)
{
  NSObject *v7;
  _QWORD block[11];

  if (a1)
  {
    v7 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APReceiverStatsCollectorUpdateVideoSizes_block_invoke;
    block[3] = &__block_descriptor_88_e5_v8__0l;
    block[4] = a1;
    *(double *)&block[5] = a2;
    *(double *)&block[6] = a3;
    *(double *)&block[7] = a4;
    *(double *)&block[8] = a5;
    *(double *)&block[9] = a6;
    *(double *)&block[10] = a7;
    dispatch_sync(v7, block);
  }
}

void APReceiverStatsCollectorUpdateVideoCodec(uint64_t a1, int a2)
{
  NSObject *v2;
  _QWORD v3[5];
  int v4;

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorUpdateVideoCodec_block_invoke;
    v3[3] = &__block_descriptor_44_e5_v8__0l;
    v3[4] = a1;
    v4 = a2;
    dispatch_sync(v2, v3);
  }
}

void APReceiverStatsCollectorUpdateVideoFormatDescription(uint64_t a1, const opaqueCMFormatDescription *a2)
{
  __CFString *Mutable;
  const __CFDictionary *Extension;
  const __CFDictionary *v6;
  const __CFData *Value;
  int v8;
  uint64_t v9;
  NSObject *v10;
  _QWORD block[7];
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;

  if (a1 && a2)
  {
    Mutable = CFStringCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0);
    Extension = (const __CFDictionary *)CMFormatDescriptionGetExtension(a2, (CFStringRef)*MEMORY[0x24BDC0B80]);
    v15 = 0;
    if (Extension)
    {
      v6 = Extension;
      if (CFDictionaryGetValue(Extension, CFSTR("hvcC")))
      {
        v13 = 0;
        v14 = 0;
        v12 = 0;
        if (!FigHEVCBridge_GetHEVCParameterSetAtIndex()
          && !FigHEVCBridge_GetSPSChromaFormatAndBitDepths())
        {
          if (v15 > 3uLL)
            CFStringAppendFormat(Mutable, 0, CFSTR("??? (%d)"), v15);
          else
            CFStringAppendFormat(Mutable, 0, CFSTR("%s"), off_24E21E140[v15]);
          if (HIBYTE(v12) == v12)
            CFStringAppendFormat(Mutable, 0, CFSTR(" (%d-bit)"), HIBYTE(v12));
          else
            CFStringAppendFormat(Mutable, 0, CFSTR(" (%d-bit luma %d-bit chroma)"), HIBYTE(v12), v12);
        }
        goto LABEL_22;
      }
      Value = (const __CFData *)CFDictionaryGetValue(v6, CFSTR("avcC"));
      if (Value)
      {
        v8 = CFDataGetBytePtr(Value)[1];
        switch(v8)
        {
          case 100:
            v9 = 1;
            goto LABEL_20;
          case 244:
            v9 = 3;
            goto LABEL_20;
          case 122:
            v9 = 2;
LABEL_20:
            CFStringAppendFormat(Mutable, 0, CFSTR("%s"), off_24E21E140[v9]);
            goto LABEL_22;
        }
        CFStringAppendFormat(Mutable, 0, CFSTR("???"));
      }
    }
LABEL_22:
    v10 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APReceiverStatsCollectorUpdateVideoFormatDescription_block_invoke;
    block[3] = &__block_descriptor_56_e5_v8__0l;
    block[4] = a1;
    block[5] = Mutable;
    block[6] = a2;
    dispatch_sync(v10, block);
    if (Mutable)
      CFRelease(Mutable);
  }
}

void APReceiverStatsCollectorUpdateVideoPerformanceStats(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorUpdateVideoPerformanceStats_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void APReceiverStatsCollectorUpdateSenderStats(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorUpdateSenderStats_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void APReceiverStatsCollectorGetFrameCounters(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v4;
  _QWORD v5[8];

  if (a1)
  {
    v4 = *(NSObject **)(a1 + 16);
    v5[0] = MEMORY[0x24BDAC760];
    v5[1] = 3221225472;
    v5[2] = __APReceiverStatsCollectorGetFrameCounters_block_invoke;
    v5[3] = &__block_descriptor_64_e5_v8__0l;
    v5[4] = a2;
    v5[5] = a1;
    v5[6] = a3;
    v5[7] = a4;
    dispatch_sync(v4, v5);
  }
}

uint64_t APReceiverStatsCollectorLogFrameStats(uint64_t result, const __CFDictionary *a2)
{
  const __CFDictionary *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  if (!result)
    return result;
  v3 = (const __CFDictionary *)result;
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  FigCFDictionaryGetInt32IfPresent();
  v15 = 0;
  if (a2)
  {
    v14 = 0;
    v12 = 0u;
    v13 = 0u;
    FigCFDictionaryGetInt64IfPresent();
    v11 = 0;
    if (CFDictionaryGetValue(a2, (const void *)*MEMORY[0x24BDDCF48]))
      FigGetIOSurfaceTimingStatsFromTimingInfoDictionary();
    v4 = 0;
    v5 = 0;
    do
    {
      v6 = *(uint64_t *)((char *)&v11 + v4);
      if (!v6)
      {
        *(uint64_t *)((char *)&v11 + v4) = v5;
        v6 = v5;
      }
      v4 += 8;
      v5 = v6;
    }
    while (v4 != 48);
    FigCFDictionaryGetInt64IfPresent();
    if (v11)
      v7 = UpTicksToMilliseconds();
    else
      v7 = 0;
    snprintf_add();
    v8 = 0;
    v10 = v7;
    do
    {
      if (*(uint64_t *)((char *)&v11 + v8 + 8) <= *(unint64_t *)((char *)&v11 + v8))
        v9 = 0;
      else
        v9 = UpTicksToMilliseconds();
      snprintf_add();
      v10 += v9;
      v8 += 8;
    }
    while (v8 != 32);
  }
  snprintf_add();
  snprintf_add();
  snprintf_add();
  snprintf_add();
  result = (uint64_t)CFDictionaryGetValue(v3, CFSTR("header"));
  if (!result)
    goto LABEL_31;
  if (gLogCategory_APReceiverStatsCollector <= 50)
  {
    if (gLogCategory_APReceiverStatsCollector != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
      result = LogPrintF();
    if (gLogCategory_APReceiverStatsCollector <= 50)
    {
      if (gLogCategory_APReceiverStatsCollector != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
        result = LogPrintF();
      if (gLogCategory_APReceiverStatsCollector <= 50)
      {
        if (gLogCategory_APReceiverStatsCollector != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
          result = LogPrintF();
LABEL_31:
        if (gLogCategory_APReceiverStatsCollector <= 50)
        {
          if (gLogCategory_APReceiverStatsCollector != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            CFDictionaryGetValue(v3, CFSTR("preLine"));
            CFDictionaryGetValue(v3, CFSTR("deltasMs"));
            return LogPrintF();
          }
        }
      }
    }
  }
  return result;
}

void APReceiverStatsCollectorSetNetworkClock(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 16);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = __APReceiverStatsCollectorSetNetworkClock_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void AirPlayManagedDefaultsLogging_HandleReceiverManagedDefaultsLoggingChanged()
{
  const __CFString *v0;
  const __CFString *v1;
  CFTypeID v2;
  void (*v3)(const __CFString *);
  const __CFString *v4;
  CFTypeID v5;

  CFPreferencesAppSynchronize(CFSTR("com.apple.airplay"));
  v0 = (const __CFString *)APSSettingsCopyValue();
  if (v0)
  {
    v1 = v0;
    v2 = CFGetTypeID(v0);
    if (v2 != CFStringGetTypeID() || CFStringGetLength(v1) < 1)
    {
      ___HandleManagedDefaultsLoggingChanged_block_invoke();
LABEL_11:
      CFRelease(v1);
      return;
    }
    LogControlCF();
    v3 = (void (*)(const __CFString *))dlsym((void *)0xFFFFFFFFFFFFFFFFLL, "MediaControlSenderLogControlCF");
    if (v3)
      v3(v1);
    CFRelease(v1);
    v4 = (const __CFString *)APSSettingsCopyValue();
    if (v4)
    {
      v1 = v4;
      v5 = CFGetTypeID(v4);
      if (v5 == CFStringGetTypeID() && CFStringGetLength(v1) >= 1)
        LogControlCF();
      goto LABEL_11;
    }
  }
  else
  {
    ___HandleManagedDefaultsLoggingChanged_block_invoke();
  }
}

uint64_t APReceiverScreenSinkCreateFileWriter(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  if (!IsAppleInternalBuild())
    return 4294954514;
  if (a2)
  {
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (APReceiverScreenSinkGetClassID_once != -1)
      dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_4896);
    v3 = CMDerivedObjectCreate();
    if ((_DWORD)v3)
    {
      v4 = v3;
      APSLogErrorAt();
    }
    else
    {
      if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
        && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v4 = 0;
      *a2 = 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895165;
  }
  return v4;
}

uint64_t fwsink_Start(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  const void *Value;
  const void *v7;
  CFTypeID v8;
  uint64_t v9;
  uint64_t CMBaseObject;
  uint64_t (*v11)(uint64_t, _QWORD, const void *);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, _QWORD, _QWORD);
  uint64_t v15;
  void (*v16)(uint64_t);

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    v15 = 4294895165;
    goto LABEL_18;
  }
  v5 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Value = CFDictionaryGetValue(a2, CFSTR("FilePath"));
  if (!Value || (v7 = Value, v8 = CFGetTypeID(Value), v8 != CFStringGetTypeID()))
  {
    v15 = 4294895165;
LABEL_18:
    APSLogErrorAt();
    goto LABEL_19;
  }
  if (!*(_BYTE *)(v5 + 16))
  {
    *(_BYTE *)(v5 + 16) = 1;
    v9 = FigVirtualDisplaySinkFileWriterCreate();
    if ((_DWORD)v9)
    {
      v15 = v9;
    }
    else
    {
      CMBaseObject = FigVirtualDisplaySinkGetCMBaseObject();
      v11 = *(uint64_t (**)(uint64_t, _QWORD, const void *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
      if (v11)
      {
        v12 = v11(CMBaseObject, *MEMORY[0x24BDDD068], v7);
        if ((_DWORD)v12)
        {
          v15 = v12;
        }
        else
        {
          v13 = *(_QWORD *)v5;
          v14 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
          if (v14)
          {
            v15 = v14(v13, 0, 0);
            if (!(_DWORD)v15)
              return v15;
          }
          else
          {
            v15 = 4294954514;
          }
        }
      }
      else
      {
        v15 = 4294954514;
      }
    }
    goto LABEL_18;
  }
  APSLogErrorAt();
  v15 = 4294895164;
LABEL_19:
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 90
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v16 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v16)
    v16(a1);
  return v15;
}

uint64_t fwsink_Stop()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  CFTypeRef v2;
  void (*v3)(CFTypeRef, _QWORD);
  const void *v4;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_BYTE *)(DerivedStorage + 16))
  {
    v1 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v2 = *(CFTypeRef *)v1;
    if (*(_QWORD *)v1)
    {
      v3 = *(void (**)(CFTypeRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
      if (v3)
        v3(v2, 0);
      if (*(_QWORD *)v1)
      {
        CFRelease(*(CFTypeRef *)v1);
        *(_QWORD *)v1 = 0;
      }
    }
    v4 = *(const void **)(v1 + 8);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(v1 + 8) = 0;
    }
    *(_BYTE *)(v1 + 16) = 0;
  }
  return 0;
}

uint64_t fwsink_enqueueFrame(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t DerivedStorage;
  uint64_t v9;
  const __CFArray *SampleAttachmentsArray;
  __CFDictionary *ValueAtIndex;
  uint64_t v12;
  CMSampleBufferRef v13;
  uint64_t (*v14)(uint64_t, CMSampleBufferRef, _QWORD, double, double, double, double, double, double, double, double);
  uint64_t v15;
  uint64_t v16;
  size_t sampleSizeArray;
  CMSampleTimingInfo sampleTimingArray;
  CMSampleBufferRef v20;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v20 = 0;
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  sampleSizeArray = 0;
  if (*(_BYTE *)(DerivedStorage + 16))
  {
    if (*(_QWORD *)(DerivedStorage + 8))
    {
      *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x24BDC0D40];
      sampleTimingArray.duration.epoch = *(_QWORD *)(MEMORY[0x24BDC0D40] + 16);
      sampleTimingArray.decodeTimeStamp = sampleTimingArray.duration;
      CMClockMakeHostTimeFromSystemUnits(&sampleTimingArray.presentationTimeStamp, a3);
      sampleSizeArray = CMBlockBufferGetDataLength(a2);
      v9 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], a2, 1u, 0, 0, *(CMFormatDescriptionRef *)(DerivedStorage + 8), 1, 1, &sampleTimingArray, 1, &sampleSizeArray, &v20);
      if ((_DWORD)v9)
      {
        v16 = v9;
      }
      else
      {
        if (!a5)
        {
          SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(v20, 1u);
          ValueAtIndex = (__CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0);
          CFDictionarySetValue(ValueAtIndex, (const void *)*MEMORY[0x24BDC0CC8], (const void *)*MEMORY[0x24BDBD270]);
        }
        v12 = *(_QWORD *)DerivedStorage;
        v13 = v20;
        v14 = *(uint64_t (**)(uint64_t, CMSampleBufferRef, _QWORD, double, double, double, double, double, double, double, double))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
        if (v14)
        {
          v15 = v14(v12, v13, 0, *MEMORY[0x24BDBF090], *(double *)(MEMORY[0x24BDBF090] + 8), *(double *)(MEMORY[0x24BDBF090] + 16), *(double *)(MEMORY[0x24BDBF090] + 24), *MEMORY[0x24BDBF090], *(double *)(MEMORY[0x24BDBF090] + 8), *(double *)(MEMORY[0x24BDBF090] + 16), *(double *)(MEMORY[0x24BDBF090] + 24));
          v16 = 0;
          if (!(_DWORD)v15)
            goto LABEL_15;
          v16 = v15;
        }
        else
        {
          v16 = 4294954514;
        }
      }
    }
    else
    {
      v16 = 4294895164;
    }
  }
  else
  {
    v16 = 4294895164;
  }
  APSLogErrorAt();
LABEL_15:
  if (v20)
    CFRelease(v20);
  if ((_DWORD)v16
    && gLogCategory_APReceiverScreenSinkFileWriter <= 60
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v16;
}

uint64_t fwsink_updateH264VideoConfig(uint64_t a1, const __CFData *a2)
{
  uint64_t DerivedStorage;
  const void *v4;
  _QWORD *v5;
  const void *v6;
  uint64_t v7;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 16))
  {
    v7 = 4294895164;
    goto LABEL_13;
  }
  if (!a2)
  {
    APSLogErrorAt();
    v7 = 4294895165;
LABEL_14:
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 60
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v7;
  }
  v6 = *(const void **)(DerivedStorage + 8);
  v5 = (_QWORD *)(DerivedStorage + 8);
  v4 = v6;
  if (v6)
  {
    CFRelease(v4);
    *v5 = 0;
  }
  CFDataGetBytePtr(a2);
  CFDataGetLength(a2);
  v7 = FigVideoFormatDescriptionCreateWithSampleDescriptionExtensionAtom();
  if ((_DWORD)v7)
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  return v7;
}

uint64_t fwsink_updateVideoConfig(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage;
  const void *v4;
  _QWORD *v5;
  const void *v6;
  uint64_t v7;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 16))
  {
    v7 = 4294895164;
    goto LABEL_13;
  }
  if (!a2)
  {
    APSLogErrorAt();
    v7 = 4294895165;
LABEL_14:
    if (gLogCategory_APReceiverScreenSinkFileWriter <= 60
      && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v7;
  }
  v6 = *(const void **)(DerivedStorage + 8);
  v5 = (_QWORD *)(DerivedStorage + 8);
  v4 = v6;
  if (v6)
  {
    CFRelease(v4);
    *v5 = 0;
  }
  v7 = APSVideoFormatDescriptionCreateFromBlockBuffer();
  if ((_DWORD)v7)
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  return v7;
}

uint64_t fwsink_Finalize(uint64_t a1)
{
  uint64_t result;
  uint64_t (*v3)(uint64_t);

  if (gLogCategory_APReceiverScreenSinkFileWriter <= 30
    && (gLogCategory_APReceiverScreenSinkFileWriter != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  result = CMBaseObjectGetVTable();
  v3 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(result + 16) + 16);
  if (v3)
    return v3(a1);
  return result;
}

CFStringRef fwsink_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;
  CFStringRef v3;

  ASPrintF();
  v2 = CFGetAllocator(a1);
  v3 = CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverScreenSinkFileWriter %p %s>"), a1, 0);
  free(0);
  return v3;
}

uint64_t _APReceiverNTPClientGetTypeID()
{
  uint64_t result;

  result = _CFRuntimeRegisterClass();
  gAPReceiverNTPClientTypeID = result;
  return result;
}

void _APReceiverNTPClientFinalize(uint64_t a1)
{
  const void *v2;

  APReceiverNTPClientStop(a1);
  v2 = *(const void **)(a1 + 16);
  if (v2)
  {
    CFRelease(v2);
    *(_QWORD *)(a1 + 16) = 0;
  }
  if (gLogCategory_APReceiverNTPClient <= 40
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t APReceiverNTPClientStop(uint64_t a1)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(a1 + 24);
  if (*(_QWORD *)(a1 + 88))
  {
    SendSelfConnectedLoopbackMessage();
    v3 = pthread_join(*(pthread_t *)(a1 + 80), 0);
    *(_QWORD *)(a1 + 88) = 0;
  }
  else
  {
    v3 = 0;
  }
  v4 = *(_DWORD *)(a1 + 72);
  if ((v4 & 0x80000000) == 0)
  {
    if (close(v4) && *__error())
      __error();
    *(_DWORD *)(a1 + 72) = -1;
  }
  v5 = *(_DWORD *)(a1 + 24);
  if ((v5 & 0x80000000) == 0)
  {
    if (close(v5) && *__error())
      __error();
    *(_DWORD *)(a1 + 24) = -1;
  }
  if ((v2 & 0x80000000) == 0
    && gLogCategory_APReceiverNTPClient <= 50
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v3;
}

uint64_t ntpClient_sendRequest(uint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  ssize_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;

  v10 = 0;
  v11 = 0;
  v12 = 117494400;
  v14 = 0;
  v13 = 0;
  v15 = 0;
  AirTunesClock_GetSynchronizedTime(*(_QWORD *)(a1 + 16), (int *)&v10);
  v2 = HIDWORD(v11);
  v3 = v10 - 2085978496;
  *(_DWORD *)(a1 + 96) = v10 - 2085978496;
  *(_DWORD *)(a1 + 100) = v2;
  v16 = bswap32(v3);
  v17 = bswap32(v2);
  v4 = *(_DWORD *)(a1 + 24);
  if (*(_BYTE *)(a1 + 68))
    v5 = send(v4, &v12, 0x20uLL, 0);
  else
    v5 = sendto(v4, &v12, 0x20uLL, 0, (const sockaddr *)(a1 + 36), *(_DWORD *)(a1 + 64));
  if (v5 == 32)
  {
LABEL_7:
    v6 = 0;
    v7 = *(_DWORD *)(a1 + 104);
    if ((v7 + 1) > 1)
      v8 = v7 + 1;
    else
      v8 = 1;
    *(_DWORD *)(a1 + 104) = v8;
    return v6;
  }
  if (*__error())
  {
    v6 = *__error();
    if (!(_DWORD)v6)
      goto LABEL_7;
  }
  else
  {
    v6 = 4294960596;
  }
  if (gLogCategory_APReceiverNTPClient <= 50
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v6;
}

uint64_t ntpClient_receiveResponse()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;

  v37 = *MEMORY[0x24BDAC8D0];
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v5 = 0u;
  v6 = 0u;
  v3 = 0;
  v4 = 0;
  v0 = SocketRecvFrom();
  v1 = v0;
  if ((_DWORD)v0 != 35)
  {
    if ((_DWORD)v0)
      APSLogErrorAt();
    else
      return 4294960553;
  }
  return v1;
}

uint64_t ntpClient_thread(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;
  int v9;
  int v10;
  timeval v13;
  fd_set v14;

  v1 = *(int *)(a1 + 24);
  v2 = *(int *)(a1 + 72);
  pthread_setname_np("AirPlayTimeSyncClient");
  SetCurrentThreadPriority();
  if (gLogCategory_APReceiverNTPClient <= 30
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v13.tv_sec = 0;
  *(_QWORD *)&v13.tv_usec = 0;
  memset(&v14, 0, 32);
  if ((int)v1 <= (int)v2)
    v3 = v2;
  else
    v3 = v1;
  memset(&v14.fds_bits[8], 0, 32);
  if (v3 < 0)
    v3 = -1;
  v4 = v3 + 1;
  v5 = 1 << v1;
  memset(&v14.fds_bits[16], 0, 64);
  v6 = v1 >> 5;
  v7 = 1 << v2;
  v8 = v2 >> 5;
  do
  {
    while (1)
    {
      if (__darwin_check_fd_set_overflow(v1, &v14, 0))
        v14.fds_bits[v6] |= v5;
      if (__darwin_check_fd_set_overflow(v2, &v14, 0))
        v14.fds_bits[v8] |= v7;
      v13.tv_sec = 2;
      v13.tv_usec = arc4random() % 0xF4240;
      v9 = select(v4, &v14, 0, 0, &v13);
      if (v9 > 0)
        break;
      if (!v9)
        goto LABEL_27;
      if (*__error())
      {
        v10 = *__error();
        if (v10 != 4)
        {
          if (!v10)
            break;
          if (v10 != -6722)
            goto LABEL_28;
LABEL_27:
          ntpClient_sendRequest(a1);
        }
      }
      else
      {
LABEL_28:
        usleep(0x186A0u);
      }
    }
    if (__darwin_check_fd_set_overflow(v1, &v14, 0) && (v14.fds_bits[v6] & v5) != 0)
      ntpClient_receiveResponse();
  }
  while (!__darwin_check_fd_set_overflow(v2, &v14, 0) || (v14.fds_bits[v8] & v7) == 0);
  if (gLogCategory_APReceiverNTPClient <= 30
    && (gLogCategory_APReceiverNTPClient != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t APReceiverScreenSessionGetClassID()
{
  if (APReceiverScreenSessionGetClassID_once != -1)
    dispatch_once(&APReceiverScreenSessionGetClassID_once, &__block_literal_global_774);
  return APReceiverScreenSessionGetClassID_classID;
}

uint64_t APReceiverScreenSessionGetTypeID()
{
  if (APReceiverScreenSessionGetClassID_once != -1)
    dispatch_once(&APReceiverScreenSessionGetClassID_once, &__block_literal_global_774);
  return CMBaseClassGetCFTypeID();
}

uint64_t APReceiverScreenSessionCreate(uint64_t a1, const void *a2, const __CFDictionary *a3, CFTypeRef *a4)
{
  uint64_t v7;
  uint64_t DerivedStorage;
  uint64_t v9;
  const void *Value;
  const void *v11;
  CFTypeID v12;
  const void *v13;
  CFTypeID v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, const __CFString *, uint64_t);
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  _QWORD block[6];
  int v24;
  char v25;
  CFTypeRef cf;
  _QWORD v27[5];

  cf = 0;
  v25 = 1;
  if (a2)
  {
    if (a4)
    {
      if (gLogCategory_APReceiverScreenSession <= 30
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (APReceiverScreenSessionGetClassID_once != -1)
        dispatch_once(&APReceiverScreenSessionGetClassID_once, &__block_literal_global_774);
      v7 = CMDerivedObjectCreate();
      if ((_DWORD)v7)
      {
        v21 = v7;
      }
      else
      {
        DerivedStorage = CMBaseObjectGetDerivedStorage();
        *(_DWORD *)(DerivedStorage + 228) = -1;
        *(_QWORD *)(DerivedStorage + 144) = CFRetain(a2);
        *(_QWORD *)(DerivedStorage + 200) = FigSimpleMutexCreate();
        *(_QWORD *)(DerivedStorage + 208) = FigSimpleMutexCreate();
        *(_QWORD *)(DerivedStorage + 240) = FigSimpleMutexCreate();
        v9 = FigDispatchQueueCreateWithPriority();
        *(_QWORD *)(DerivedStorage + 216) = v9;
        if (!v9)
        {
          APSLogErrorAt();
          v21 = 4294895176;
          goto LABEL_51;
        }
        *(_WORD *)(DerivedStorage + 186) = 256;
        *(_DWORD *)(DerivedStorage + 192) = -1;
        if (!a3)
          goto LABEL_22;
        FigCFDictionaryGetInt32IfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        FigCFDictionaryGetBooleanIfPresent();
        Value = CFDictionaryGetValue(a3, CFSTR("NetworkClock"));
        *(_QWORD *)(DerivedStorage + 128) = Value;
        if (Value
          && (CFRetain(Value), (v11 = *(const void **)(DerivedStorage + 128)) != 0)
          && (v12 = CFGetTypeID(v11), v12 != APSNetworkClockGetTypeID()))
        {
          v21 = 4294895175;
        }
        else
        {
          v13 = CFDictionaryGetValue(a3, CFSTR("StatsCollector"));
          *(_QWORD *)(DerivedStorage + 136) = v13;
          if (!v13)
            goto LABEL_21;
          CFRetain(v13);
          v13 = *(const void **)(DerivedStorage + 136);
          if (!v13)
            goto LABEL_21;
          v14 = CFGetTypeID(v13);
          if (APReceiverStatsCollectorGetTypeID_once != -1)
            dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_440);
          if (v14 == APReceiverStatsCollectorGetTypeID_typeID)
          {
            v13 = *(const void **)(DerivedStorage + 136);
LABEL_21:
            APReceiverStatsCollectorSetNetworkClock((uint64_t)v13, *(_QWORD *)(DerivedStorage + 128));
LABEL_22:
            if (!v25)
            {
LABEL_28:
              v16 = *(_QWORD *)(DerivedStorage + 136);
              v17 = *(_QWORD *)(DerivedStorage + 144);
              v18 = *(void (**)(uint64_t, const __CFString *, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                                + 56);
              if (v18)
                v18(v17, CFSTR("StatsCollector"), v16);
              if (introspector_getCollectionOfScreenSessions_once != -1)
                dispatch_once(&introspector_getCollectionOfScreenSessions_once, &__block_literal_global_89);
              v19 = MEMORY[0x24BDAC760];
              if (introspector_getCollectionOfScreenSessions_coll)
              {
                v20 = *(NSObject **)introspector_getCollectionOfScreenSessions_coll;
                block[0] = MEMORY[0x24BDAC760];
                block[1] = 0x40000000;
                block[2] = __APReceiverScreenSessionCreate_block_invoke;
                block[3] = &__block_descriptor_tmp_40;
                block[4] = introspector_getCollectionOfScreenSessions_coll;
                block[5] = cf;
                dispatch_sync(v20, block);
                if (introspector_getCollectionOfScreenSessions_once != -1)
                  dispatch_once(&introspector_getCollectionOfScreenSessions_once, &__block_literal_global_89);
              }
              v27[0] = v19;
              v27[1] = 0x40000000;
              v27[2] = __aprscreen_captureAddIntrospectorCmd_block_invoke;
              v27[3] = &__block_descriptor_tmp_100;
              v27[4] = introspector_getCollectionOfScreenSessions_coll;
              if (aprscreen_captureAddIntrospectorCmd_once != -1)
                dispatch_once(&aprscreen_captureAddIntrospectorCmd_once, v27);
              APTTrafficMetricsCreate();
              if (gLogCategory_APReceiverScreenSession <= 30
                && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              v21 = 0;
              *a4 = cf;
              return v21;
            }
            LODWORD(v27[0]) = 0;
            v24 = 2;
            FigCFDictionaryGetInt32IfPresent();
            FigCFDictionaryGetInt32IfPresent();
            v15 = ServerSocketOpen();
            if (!(_DWORD)v15)
            {
              if (*(_BYTE *)(DerivedStorage + 186))
                SocketSetP2P();
              if (*(_BYTE *)(DerivedStorage + 187))
                SocketSetQoS();
              goto LABEL_28;
            }
            v21 = v15;
            goto LABEL_50;
          }
          v21 = 4294895175;
        }
      }
    }
    else
    {
      v21 = 4294895175;
    }
  }
  else
  {
    v21 = 4294895175;
  }
LABEL_50:
  APSLogErrorAt();
LABEL_51:
  if (gLogCategory_APReceiverScreenSession <= 90
    && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (cf)
    CFRelease(cf);
  return v21;
}

uint64_t __aprscreen_captureAddIntrospectorCmd_block_invoke(uint64_t result)
{
  if (*(_QWORD *)(result + 32))
    return APSIntrospectorAddCommand();
  return result;
}

void aprscreen_captureIntrospectorCmd(NSObject **a1, uint64_t a2, int a3, uint64_t a4)
{
  const char *v8;
  uint64_t v9;
  char v10;
  NSObject *v11;
  _QWORD block[7];
  char v13;

  if (a3 < 2)
    goto LABEL_4;
  v8 = *(const char **)(a4 + 8);
  if (!strcmp(v8, "start"))
  {
    if (a3 < 3)
      v9 = 0;
    else
      v9 = *(_QWORD *)(a4 + 16);
    v10 = 1;
  }
  else
  {
    if (strcmp(v8, "stop"))
    {
LABEL_4:
      FPrintF();
      return;
    }
    v9 = 0;
    v10 = 0;
  }
  v11 = *a1;
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __aprscreen_captureIntrospectorCmd_block_invoke;
  block[3] = &__block_descriptor_tmp_113;
  v13 = v10;
  block[4] = a1;
  block[5] = v9;
  block[6] = a2;
  dispatch_sync(v11, block);
}

uint64_t __aprscreen_captureIntrospectorCmd_block_invoke(uint64_t a1)
{
  if (CFSetGetCount(*(CFSetRef *)(*(_QWORD *)(a1 + 32) + 8)) < 1)
    return FPrintF();
  else
    return CFSetApplyBlock();
}

void __aprscreen_captureIntrospectorCmd_block_invoke_2(uint64_t a1, uint64_t a2)
{
  int v2;
  CFTypeRef cf;

  if (*(_BYTE *)(a1 + 48))
  {
    cf = 0;
    v2 = aprscreen_captureStart(a2, *(const char **)(a1 + 32), (CFStringRef *)&cf);
    if (!v2)
    {
      FPrintF();
      CFRelease(cf);
    }
  }
  else
  {
    v2 = aprscreen_captureStop();
  }
  if (v2)
    FPrintF();
}

uint64_t aprscreen_captureStart(uint64_t a1, const char *a2, CFStringRef *a3)
{
  uint64_t DerivedStorage;
  CFTypeRef *v7;
  const __CFAllocator *v8;
  uint64_t FileWriter;
  __CFDictionary *Mutable;
  CFStringRef v11;
  _BOOL4 v12;
  uint64_t v13;
  uint64_t TempDirectory;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  CFStringRef v18;
  CFTypeRef v19;
  uint64_t (*v20)(CFTypeRef, __CFDictionary *);
  uint64_t v21;
  void (*v22)(uint64_t, const __CFString *, _QWORD, _QWORD);

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 208));
  v7 = (CFTypeRef *)(DerivedStorage + 168);
  if (*(_QWORD *)(DerivedStorage + 168))
  {
    if (gLogCategory_APReceiverScreenSession > 90)
    {
      Mutable = 0;
      v12 = 0;
      v13 = 4294895173;
    }
    else
    {
      if (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize())
        LogPrintF();
      Mutable = 0;
      v12 = 0;
      v13 = 4294895173;
    }
    goto LABEL_38;
  }
  if (*(_QWORD *)(DerivedStorage + 344))
  {
    if (!*(_BYTE *)(DerivedStorage + 706))
    {
      v13 = 4294895172;
      if (gLogCategory_APReceiverScreenSession <= 90
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      goto LABEL_35;
    }
    if (!*(_QWORD *)(DerivedStorage + 152))
    {
      if (gLogCategory_APReceiverScreenSession > 90)
      {
        Mutable = 0;
        v12 = 0;
        v13 = 4294895175;
      }
      else
      {
        if (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize())
          LogPrintF();
        Mutable = 0;
        v12 = 0;
        v13 = 4294895175;
      }
      goto LABEL_38;
    }
  }
  v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  FileWriter = APReceiverScreenSinkCreateFileWriter(*MEMORY[0x24BDBD240], (_QWORD *)(DerivedStorage + 168));
  if ((_DWORD)FileWriter)
  {
    v13 = FileWriter;
    APSLogErrorAt();
LABEL_35:
    Mutable = 0;
    v12 = 0;
    goto LABEL_38;
  }
  Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (a2)
  {
    v11 = CFStringCreateWithCString(v8, a2, 0x8000100u);
  }
  else
  {
    TempDirectory = FVDUtilsGetTempDirectory();
    v15 = getpid();
    do
    {
      v16 = __ldxr((unsigned int *)&aprscreen_captureStart_count);
      v17 = v16 + 1;
    }
    while (__stxr(v17, (unsigned int *)&aprscreen_captureStart_count));
    v11 = CFStringCreateWithFormat(v8, 0, CFSTR("%@aprcapture-%d-%d.mov"), TempDirectory, v15, v17);
  }
  v18 = v11;
  CFDictionarySetValue(Mutable, CFSTR("FilePath"), v11);
  v19 = *v7;
  v20 = *(uint64_t (**)(CFTypeRef, __CFDictionary *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
  if (!v20)
  {
    v13 = 4294954514;
    goto LABEL_25;
  }
  v21 = v20(v19, Mutable);
  if ((_DWORD)v21)
  {
    v13 = v21;
LABEL_25:
    APSLogErrorAt();
    if (*v7)
    {
      CFRelease(*v7);
      v12 = 0;
      *v7 = 0;
    }
    else
    {
      v12 = 0;
    }
    goto LABEL_31;
  }
  *(_WORD *)(DerivedStorage + 176) = 0;
  v12 = *(_QWORD *)(DerivedStorage + 344) != 0;
  v13 = 0;
  if (a3)
  {
    *a3 = v18;
LABEL_38:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 208));
    goto LABEL_39;
  }
LABEL_31:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 208));
  if (v18)
    CFRelease(v18);
LABEL_39:
  if (Mutable)
    CFRelease(Mutable);
  if (v12)
  {
    v22 = *(void (**)(uint64_t, const __CFString *, _QWORD, _QWORD))(DerivedStorage + 152);
    if (v22)
      v22(a1, CFSTR("ForceKeyFrameNeeded"), 0, *(_QWORD *)(DerivedStorage + 160));
  }
  return v13;
}

uint64_t aprscreen_captureStop()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  void (*v2)(uint64_t);
  const void *v3;
  uint64_t v4;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 208));
  v1 = *(_QWORD *)(DerivedStorage + 168);
  if (v1)
  {
    v2 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
    if (v2)
      v2(v1);
    v3 = *(const void **)(DerivedStorage + 168);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(DerivedStorage + 168) = 0;
    }
    v4 = 0;
    *(_WORD *)(DerivedStorage + 176) = 0;
  }
  else
  {
    v4 = 4294895173;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 208));
  return v4;
}

uint64_t __introspector_getCollectionOfScreenSessions_block_invoke()
{
  uint64_t result;
  CFMutableSetRef Mutable;
  uint64_t v2;

  result = IsAppleInternalBuild();
  if ((_DWORD)result)
  {
    introspector_getCollectionOfScreenSessions_coll = (uint64_t)malloc_type_calloc(1uLL, 0x18uLL, 0x70040EA3A3B56uLL);
    *(_QWORD *)introspector_getCollectionOfScreenSessions_coll = dispatch_queue_create("CollectionOfScreenSessions", 0);
    Mutable = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, 0);
    v2 = introspector_getCollectionOfScreenSessions_coll;
    *(_QWORD *)(introspector_getCollectionOfScreenSessions_coll + 8) = Mutable;
    *(_QWORD *)(v2 + 16) = "ScreenSessions";
    return APSIntrospectorAddCommand();
  }
  return result;
}

uint64_t aprscreen_Start(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  NSObject *v6;
  _QWORD block[6];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSession <= 30
    && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
  if (*(_BYTE *)(DerivedStorage + 185))
  {
    v5 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
LABEL_12:
      LogPrintF();
    }
  }
  else if (*(_BYTE *)(DerivedStorage + 184))
  {
    v5 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_12;
    }
  }
  else
  {
    if (a2)
      CFRetain(a2);
    v6 = *(NSObject **)(DerivedStorage + 216);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __aprscreen_Start_block_invoke;
    block[3] = &__block_descriptor_tmp_57;
    block[4] = a1;
    block[5] = a2;
    dispatch_async(v6, block);
    v5 = 0;
    *(_BYTE *)(DerivedStorage + 184) = 1;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  return v5;
}

uint64_t aprscreen_Shutdown(uint64_t a1)
{
  uint64_t DerivedStorage;
  NSObject *v3;
  pthread_mutex_t *v4;
  int v5;
  uint64_t v6;
  pthread_mutex_t *v7;
  _QWORD block[6];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (introspector_getCollectionOfScreenSessions_once != -1)
    dispatch_once(&introspector_getCollectionOfScreenSessions_once, &__block_literal_global_89);
  if (introspector_getCollectionOfScreenSessions_coll)
  {
    v3 = *(NSObject **)introspector_getCollectionOfScreenSessions_coll;
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __aprscreen_Shutdown_block_invoke;
    block[3] = &__block_descriptor_tmp_81;
    block[4] = introspector_getCollectionOfScreenSessions_coll;
    block[5] = a1;
    dispatch_sync(v3, block);
  }
  v4 = *(pthread_mutex_t **)(DerivedStorage + 200);
  if (v4)
  {
    pthread_mutex_lock(v4);
    if (!*(_BYTE *)(DerivedStorage + 185))
    {
      if (gLogCategory_APReceiverScreenSession <= 30
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v5 = *(_DWORD *)(DerivedStorage + 228);
      if ((v5 & 0x80000000) == 0)
      {
        if (close(v5) && *__error())
          __error();
        *(_DWORD *)(DerivedStorage + 228) = -1;
      }
      v6 = CMBaseObjectGetDerivedStorage();
      v7 = *(pthread_mutex_t **)(v6 + 240);
      if (v7)
      {
        pthread_mutex_lock(v7);
        *(_BYTE *)(v6 + 248) = 1;
        if (*(_QWORD *)(v6 + 232))
          NetSocket_Cancel();
        pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 240));
      }
      if (*(_BYTE *)(DerivedStorage + 184))
        dispatch_sync(*(dispatch_queue_t *)(DerivedStorage + 216), &__block_literal_global_84);
      *(_BYTE *)(DerivedStorage + 185) = 1;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  }
  return 0;
}

uint64_t aprscreen_SetEventHandler(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t DerivedStorage;
  uint64_t v6;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
  if (*(_BYTE *)(DerivedStorage + 185) || *(_BYTE *)(DerivedStorage + 184))
  {
    v6 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    v6 = 0;
    *(_QWORD *)(DerivedStorage + 152) = a2;
    *(_QWORD *)(DerivedStorage + 160) = a3;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  return v6;
}

uint64_t aprscreen_SetSecurityInfoChaCha(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t DerivedStorage;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  __int128 v9;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 && a3 == 32)
  {
    v6 = DerivedStorage;
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
    if (*(_BYTE *)(v6 + 185) || *(_BYTE *)(v6 + 184))
    {
      v7 = 4294895173;
      if (gLogCategory_APReceiverScreenSession <= 90
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      for (i = 0; i != 304; ++i)
        *(_BYTE *)(v6 + 352 + i) = 0;
      v7 = 0;
      v9 = a2[1];
      *(_OWORD *)(v6 + 616) = *a2;
      *(_OWORD *)(v6 + 632) = v9;
      *(_BYTE *)(v6 + 352) = 1;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v6 + 200));
  }
  else
  {
    APSLogErrorAt();
    return 4294895175;
  }
  return v7;
}

uint64_t aprscreen_SetSecurityInfoAES()
{
  uint64_t DerivedStorage;
  uint64_t v1;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 200));
  if (*(_BYTE *)(DerivedStorage + 185) || *(_BYTE *)(DerivedStorage + 184))
  {
    v1 = 4294895173;
    if (gLogCategory_APReceiverScreenSession <= 90
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    if (*(_BYTE *)(DerivedStorage + 704))
    {
      AES_CTR_Final();
      *(_BYTE *)(DerivedStorage + 704) = 0;
    }
    v1 = AES_CTR_Init();
    *(_BYTE *)(DerivedStorage + 704) = (_DWORD)v1 == 0;
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 200));
  return v1;
}

uint64_t aprscreen_ntpTimestamp()
{
  uint64_t DerivedStorage;
  void (*v1)(uint64_t, uint64_t *);
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t *);
  uint64_t v8;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v6 = 0;
  v7 = 0;
  v8 = 0;
  v1 = *(void (**)(uint64_t, uint64_t *))(DerivedStorage + 136);
  if (!v1)
    goto LABEL_6;
  v2 = *(_QWORD *)(DerivedStorage + 128);
  if (!v2)
  {
    v1 = 0;
    goto LABEL_6;
  }
  v1 = *(void (**)(uint64_t, uint64_t *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
  if (!v1)
  {
LABEL_6:
    v3 = 0;
    goto LABEL_7;
  }
  v1(v2, &v6);
  v3 = v8;
  v1 = v7;
LABEL_7:
  *((_QWORD *)&v5 + 1) = v3;
  *(_QWORD *)&v5 = v1;
  return v5 >> 32;
}

uint64_t aprscreen_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage;
  void (*v3)(uint64_t);
  int v4;
  const void *v5;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  uint64_t v10;
  NSObject *v11;
  uint64_t result;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSession <= 30
    && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v3 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v3)
    v3(a1);
  v4 = *(_DWORD *)(DerivedStorage + 228);
  if ((v4 & 0x80000000) == 0)
  {
    if (close(v4) && *__error())
      __error();
    *(_DWORD *)(DerivedStorage + 228) = -1;
  }
  if (*(_QWORD *)(DerivedStorage + 232))
  {
    NetSocket_Delete();
    *(_QWORD *)(DerivedStorage + 232) = 0;
  }
  v5 = *(const void **)(DerivedStorage + 144);
  if (v5)
  {
    CFRelease(v5);
    *(_QWORD *)(DerivedStorage + 144) = 0;
  }
  v6 = *(const void **)(DerivedStorage + 168);
  if (v6)
  {
    CFRelease(v6);
    *(_QWORD *)(DerivedStorage + 168) = 0;
  }
  v7 = *(const void **)(DerivedStorage + 136);
  if (v7)
  {
    CFRelease(v7);
    *(_QWORD *)(DerivedStorage + 136) = 0;
  }
  v8 = *(const void **)(DerivedStorage + 128);
  if (v8)
  {
    CFRelease(v8);
    *(_QWORD *)(DerivedStorage + 128) = 0;
  }
  v9 = *(const void **)(DerivedStorage + 712);
  if (v9)
  {
    CFRelease(v9);
    *(_QWORD *)(DerivedStorage + 712) = 0;
  }
  if (*(_BYTE *)(DerivedStorage + 352))
  {
    v10 = 0;
    *(_BYTE *)(DerivedStorage + 352) = 0;
    do
      *(_BYTE *)(DerivedStorage + 352 + v10++) = 0;
    while (v10 != 304);
  }
  if (*(_BYTE *)(DerivedStorage + 704))
  {
    *(_BYTE *)(DerivedStorage + 704) = 0;
    AES_CTR_Final();
  }
  v11 = *(NSObject **)(DerivedStorage + 216);
  if (v11)
  {
    dispatch_release(v11);
    *(_QWORD *)(DerivedStorage + 216) = 0;
  }
  if (*(_QWORD *)(DerivedStorage + 240))
  {
    FigSimpleMutexDestroy();
    *(_QWORD *)(DerivedStorage + 240) = 0;
  }
  if (*(_QWORD *)(DerivedStorage + 208))
  {
    FigSimpleMutexDestroy();
    *(_QWORD *)(DerivedStorage + 208) = 0;
  }
  result = *(_QWORD *)(DerivedStorage + 200);
  if (result)
  {
    result = FigSimpleMutexDestroy();
    *(_QWORD *)(DerivedStorage + 200) = 0;
  }
  return result;
}

CFStringRef aprscreen_CopyDebugDescription(const void *a1)
{
  uint64_t DerivedStorage;
  int v3;
  int v4;
  const __CFAllocator *v5;
  const char *v6;
  const char *v7;
  const char *v8;
  const char *v9;
  const char *v10;
  const char *v11;
  CFStringRef v12;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v3 = *(unsigned __int8 *)(DerivedStorage + 352);
  v4 = *(unsigned __int8 *)(DerivedStorage + 704);
  ASPrintF();
  ASPrintF();
  v5 = CFGetAllocator(a1);
  v6 = "yes";
  if (*(_BYTE *)(DerivedStorage + 185))
    v7 = "yes";
  else
    v7 = "no";
  if (*(_BYTE *)(DerivedStorage + 184))
    v8 = "yes";
  else
    v8 = "no";
  if (*(_BYTE *)(DerivedStorage + 186))
    v9 = "yes";
  else
    v9 = "no";
  if (*(_BYTE *)(DerivedStorage + 188))
    v10 = "yes";
  else
    v10 = "no";
  if (v3)
    v11 = "yes";
  else
    v11 = "no";
  if (!v4)
    v6 = "no";
  v12 = CFStringCreateWithFormat(v5, 0, CFSTR("<APReceiverScreenSession %p %s>{\n\tShut down:          %s\n\tStarted:            %s\n\tAllow P2P:          %s\n\tIgnore timestamps:  %s\n\tPeer address:       %s\n\tConfigs processed:  %u\n\tFrames processed:   %u\n\tChaCha used:        %s\n\tAES used:           %s\n\tNetworkClock:      %p\n\tSink:               %@\n}"), a1, 0, v7, v8, v9, v10, 0, *(_QWORD *)(DerivedStorage + 344), *(_QWORD *)(DerivedStorage + 336), v11, v6, *(_QWORD *)(DerivedStorage + 128), *(_QWORD *)(DerivedStorage + 144));
  free(0);
  free(0);
  return v12;
}

uint64_t aprscreen_CopyProperty(uint64_t a1, const void *a2, const __CFAllocator *a3, CFNumberRef *a4)
{
  uint64_t DerivedStorage;
  uint64_t v8;
  CFNumberRef v9;
  uint64_t v10;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2 && a4)
  {
    v8 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSession <= 30
      && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (CFEqual(a2, CFSTR("ListenPort")))
    {
      v9 = CFNumberCreate(a3, kCFNumberSInt32Type, (const void *)(v8 + 224));
      *a4 = v9;
      if (v9)
      {
        return 0;
      }
      else
      {
        APSLogErrorAt();
        return 4294895176;
      }
    }
    else
    {
      v10 = 4294895174;
      if (gLogCategory_APReceiverScreenSession <= 50
        && (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895175;
  }
  return v10;
}

uint64_t aprscreen_SetProperty(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;

  v2 = 4294895174;
  if (a2)
  {
    v3 = gLogCategory_APReceiverScreenSession;
    if (gLogCategory_APReceiverScreenSession <= 30)
    {
      if (gLogCategory_APReceiverScreenSession != -1 || _LogCategory_Initialize())
        LogPrintF();
      v3 = gLogCategory_APReceiverScreenSession;
    }
    if (v3 <= 50 && (v3 != -1 || _LogCategory_Initialize()))
      LogPrintF();
  }
  else
  {
    APSLogErrorAt();
    return 4294895175;
  }
  return v2;
}

uint64_t mcProcessor_initOnce()
{
  uint64_t result;

  result = APSSettingsGetInt64();
  gMediaControlVideoDisabled = result != 0;
  return result;
}

uint64_t mcProcessor_Start()
{
  CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

uint64_t mcProcessor_handleStop()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, CFMutableDictionaryRef);
  CFMutableDictionaryRef v10;
  uint64_t v11;
  void (*v12)(uint64_t, CFMutableDictionaryRef);
  uint64_t v13;
  int v14;
  uint64_t v15;
  const void *v16;
  const void *v17;
  IOPMAssertionID v19;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v1 = CMBaseObjectGetDerivedStorage();
  v2 = *(NSObject **)(v1 + 264);
  if (v2)
  {
    v3 = v1;
    dispatch_source_cancel(*(dispatch_source_t *)(v1 + 264));
    dispatch_release(v2);
    *(_QWORD *)(v3 + 264) = 0;
  }
  if (!*(_BYTE *)(DerivedStorage + 384))
    return 0;
  v4 = CMBaseObjectGetDerivedStorage();
  if (*(double *)(v4 + 200) != 0.0)
    *(_QWORD *)(v4 + 200) = 0;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_QWORD *)(DerivedStorage + 392))
  {
    if (*(_BYTE *)(DerivedStorage + 408))
    {
      Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (!Mutable)
      {
        APSLogErrorAt();
        return 4294960568;
      }
      v7 = Mutable;
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      v8 = *(_QWORD *)(DerivedStorage + 392);
      v9 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 56);
      if (v9)
      {
        v5 = v9(v8, v7);
        v10 = 0;
      }
      else
      {
        v10 = 0;
        v5 = 4294954514;
      }
    }
    else
    {
      v10 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      v11 = *(_QWORD *)(DerivedStorage + 392);
      v12 = *(void (**)(uint64_t, CFMutableDictionaryRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 96);
      if (v12)
        v12(v11, v10);
      v5 = 0;
      v7 = 0;
    }
    v13 = *(_QWORD *)(DerivedStorage + 128);
    v14 = *(_DWORD *)(v13 + 204) - 1;
    *(_DWORD *)(v13 + 204) = v14;
    if (!v14)
    {
      v19 = *(_DWORD *)(v13 + 208);
      if (v19)
      {
        IOPMAssertionRelease(v19);
        *(_DWORD *)(v13 + 208) = 0;
        if (gLogCategory_AirPlayReceiverServer <= 40
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
    }
    v15 = CMBaseObjectGetDerivedStorage();
    v16 = *(const void **)(v15 + 160);
    if (v16)
    {
      CFRelease(v16);
      *(_QWORD *)(v15 + 160) = 0;
    }
    v17 = *(const void **)(v15 + 168);
    if (v17)
    {
      CFRelease(v17);
      *(_QWORD *)(v15 + 168) = 0;
    }
    *(_BYTE *)(DerivedStorage + 384) = 0;
    if (v7)
      CFRelease(v7);
    if (v10)
      CFRelease(v10);
  }
  else
  {
    v5 = 4294960534;
    APSLogErrorAt();
  }
  return v5;
}

uint64_t mcProcessor_HandleRequest()
{
  uint64_t v0;
  CFMutableDictionaryRef *v1;
  const __CFDictionary *v2;
  const __CFDictionary *v3;
  int v4;
  int v5;
  void *v6;
  uint64_t v7;
  uint64_t DerivedStorage;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, const __CFString *, _QWORD, CMTime *);
  int v12;
  uint64_t v13;
  const __CFString *v14;
  const __CFString *v15;
  const __CFString *v16;
  const __CFString *v17;
  int v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, const __CFString *, _QWORD, CMTime *);
  double v21;
  double v22;
  float v23;
  double v24;
  float v25;
  const __CFData *v26;
  const __CFData *v27;
  const __CFDictionary *v28;
  const __CFDictionary *v29;
  CFTypeID v30;
  double Current;
  const char *v32;
  char *v33;
  uint64_t v34;
  const void *v35;
  const __CFData *v36;
  const __CFData *v37;
  const __CFData *v38;
  CFTypeID v39;
  const void *v40;
  const void *v41;
  uint64_t v42;
  const __CFData *v43;
  const __CFData *v44;
  const __CFNumber *v45;
  __CFDictionary *v46;
  int v47;
  uint64_t v48;
  const __CFData *TypedValue;
  const __CFData *v50;
  const __CFDictionary *v51;
  const __CFString *v52;
  const void *v53;
  uint64_t v54;
  const __CFDictionary *v55;
  int Int64;
  uint64_t v57;
  uint64_t v58;
  __CFDictionary *v59;
  __CFDictionary *v60;
  uint64_t v61;
  CMTimeValue v62;
  uint64_t (*v63)(uint64_t, CMTimeValue, CFMutableDictionaryRef *);
  const __CFDictionary *v64;
  __CFDictionary *v65;
  __CFDictionary *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  const char *v71;
  int v72;
  uint64_t v74;
  const void *v75;
  const __CFData *v76;
  const __CFData *v77;
  const __CFDictionary *v78;
  const void *v79;
  uint64_t v80;
  const __CFNumber *v81;
  const __CFNumber *v82;
  uint64_t v83;
  const __CFString *v84;
  const __CFAllocator *v85;
  __CFDictionary *MutableCopy;
  __CFDictionary *v87;
  __CFDictionary *v88;
  __CFDictionary *v89;
  uint64_t (*v90)(__CFDictionary *, const __CFString *, _QWORD, CFDictionaryRef *);
  double v91;
  double v92;
  __CFDictionary *v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __CFDictionary *v98;
  const void *v99;
  char *v100;
  size_t v101;
  uint64_t v102;
  CFMutableDictionaryRef v103;
  CMTimeValue v104;
  const __CFData *v105;
  const __CFData *v106;
  CFMutableDictionaryRef v107;
  __CFDictionary *v108;
  const __CFString *v109;
  size_t Length;
  const void *v111;
  uint64_t v112;
  int v113;
  CFMutableDictionaryRef v114;
  uint64_t v115;
  void (*v116)(uint64_t, _QWORD);
  uint64_t v117;
  __CFDictionary *v118;
  __CFDictionary *v119;
  CFTypeID v120;
  int v121;
  BOOL v122;
  CFTypeID v123;
  uint64_t v124;
  CFMutableDictionaryRef v125;
  uint64_t (*v126)(uint64_t, CFMutableDictionaryRef, CMTime *);
  int v127;
  uint64_t (*v128)(uint64_t, const void *, const __CFData *, CFDictionaryRef *);
  int v129;
  uint64_t v130;
  unsigned int (*v131)(uint64_t, CFMutableDictionaryRef, CFDictionaryRef *);
  const __CFDictionary *v132;
  const char *v133;
  const void *v134;
  const void *v135;
  CFTypeID v136;
  const char *v137;
  CFTypeID v138;
  CFMutableDictionaryRef v139;
  uint64_t v140;
  CMTimeValue v141;
  uint64_t timescale;
  double v143;
  CFDateRef v144;
  const void *v145;
  uint64_t v146;
  uint64_t (*v147)(uint64_t, _QWORD, _QWORD);
  _QWORD *v148;
  int v149;
  uint64_t v150;
  unsigned int (*v151)(uint64_t, const __CFString *, _QWORD, const __CFNumber *);
  uint64_t v152;
  CFMutableDictionaryRef v153;
  CFTypeID v154;
  uint64_t v155;
  CFDictionaryRef v156;
  uint64_t (*v157)(uint64_t, CFDictionaryRef, _QWORD);
  int v158;
  uint64_t (*v159)(uint64_t, const void *, const void *, const void *);
  int v160;
  BOOL v161;
  CFTypeID v162;
  uint64_t v163;
  __CFDictionary *v164;
  NSObject *v165;
  CFMutableDictionaryRef v166;
  const char *v167;
  char *v168;
  int v169;
  CFDictionaryRef value;
  int v171;
  CFMutableDictionaryRef v172;
  const void *v173;
  CFTypeID v174;
  void *v175;
  void *v176;
  unsigned int v177;
  CFDictionaryRef v178;
  int v179;
  __CFDictionary *v180;
  uint64_t v181;
  const __CFAllocator *v182;
  __CFDictionary *v183;
  CFDictionaryRef v184;
  uint64_t v185;
  CFMutableDictionaryRef v186;
  uint64_t (*v187)(uint64_t, CFMutableDictionaryRef, _QWORD);
  int v188;
  uint64_t (*v189)(uint64_t, const __CFString *, const __CFData *, __CFDictionary *);
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t (*v193)(uint64_t, uint64_t (*)(dispatch_queue_t *, const void *), uint64_t, __CFDictionary *, CFTypeRef *);
  int v194;
  int v195;
  __CFDictionary *Mutable;
  CFTypeID v197;
  uint64_t v198;
  uint64_t v199;
  const void *UInt64;
  int v201;
  const void *v202;
  uint64_t v203;
  CFDictionaryRef v204;
  uint64_t (*v205)(uint64_t, CFDictionaryRef, _QWORD);
  __CFDictionary *v206;
  CFTypeID v207;
  uint64_t v208;
  CFMutableDictionaryRef v209;
  uint64_t (*v210)(uint64_t, CFMutableDictionaryRef, _QWORD);
  CFTypeID v211;
  const void *v212;
  int v213;
  const __CFString *v214;
  CFTypeID v215;
  uint64_t v216;
  uint64_t (*v217)(uint64_t, const __CFString *, const void *, CMTime *);
  int inserted;
  const __CFDictionary *v219;
  uint64_t v220;
  const void *v221;
  CFTypeRef v222;
  _QWORD *cf1;
  const __CFString *cf1a;
  CFMutableDictionaryRef *v225;
  int v226;
  CFTypeRef cf;
  const char *v228;
  CFDictionaryRef v229;
  int started;
  CMTime number;
  void *v232;
  CFMutableDictionaryRef *v233;
  uint64_t v234;
  CFMutableDictionaryRef valuePtr;
  CFMutableDictionaryRef *p_valuePtr;
  uint64_t v237;
  uint64_t v238;
  CFDictionaryRef theDict[2];
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  uint64_t v255;

  v0 = MEMORY[0x24BDAC7A8]();
  v225 = v1;
  v3 = v2;
  v5 = v4;
  v6 = (void *)v0;
  v255 = *MEMORY[0x24BDAC8D0];
  v7 = 4294895362;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(_QWORD *)(DerivedStorage + 272) = mach_absolute_time();
  v9 = 4294895361;
  if (v5 <= 1886283374)
  {
    if (v5 <= 1735616869)
    {
      if (v5 <= 1735422065)
      {
        if (v5 != 1633907822)
        {
          if (v5 != 1735222134)
            return v9;
          LODWORD(valuePtr) = 0;
          v253 = 0u;
          v254 = 0u;
          v251 = 0u;
          v252 = 0u;
          v249 = 0u;
          v250 = 0u;
          v247 = 0u;
          v248 = 0u;
          v245 = 0u;
          v246 = 0u;
          v243 = 0u;
          v244 = 0u;
          v241 = 0u;
          v242 = 0u;
          v240 = 0u;
          *(_OWORD *)theDict = 0u;
          number.value = 0;
          v10 = *(_QWORD *)(CMBaseObjectGetDerivedStorage() + 392);
          if (v10)
          {
            v11 = *(unsigned int (**)(uint64_t, const __CFString *, _QWORD, CMTime *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                               + 112);
            if (v11 && !v11(v10, CFSTR("volume"), 0, &number))
            {
              CFNumberGetValue((CFNumberRef)number.value, kCFNumberFloatType, &valuePtr);
              if (gLogCategory_APReceiverRequestProcessorMediaControl <= 20
                && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
              v169 = snprintf((char *)theDict, 0x100uLL, "volume: %f\n", *(float *)&valuePtr);
              if (!APReceiverRequestProcessorPrepareBinaryDataResponse((uint64_t)theDict, v169, v225))
              {
                v9 = 0;
LABEL_337:
                value = (CFDictionaryRef)number.value;
                if (!number.value)
                  return v9;
LABEL_627:
                CFRelease(value);
                return v9;
              }
            }
            APSLogErrorAt();
          }
          else
          {
            APSLogErrorAt();
          }
          v9 = 4294895362;
          goto LABEL_337;
        }
        v48 = CMBaseObjectGetDerivedStorage();
        LODWORD(v229) = 0;
        number.value = 0;
        valuePtr = 0;
        CFDataGetTypeID();
        TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
        v50 = TypedValue;
        if (!TypedValue)
          goto LABEL_156;
        CFDataGetBytePtr(TypedValue);
        CFDataGetLength(v50);
        CFDictionaryGetTypeID();
        v51 = (const __CFDictionary *)CFCreateWithPlistBytes();
        v50 = v51;
        if (!v51)
        {
          APSLogErrorAt();
          v107 = 0;
          v108 = 0;
          v9 = 4294895354;
          goto LABEL_618;
        }
        v52 = (const __CFString *)CFDictionaryGetValue(v51, CFSTR("type"));
        v53 = CFDictionaryGetValue(v50, CFSTR("params"));
        if (v52)
        {
          if (CFEqual(v52, CFSTR("playlistInsert")))
          {
            CFDictionaryGetTypeID();
            if (CFDictionaryGetTypedValue())
            {
              CFDictionaryGetTypeID();
              v54 = CFDictionaryGetTypedValue();
              if (v54)
              {
                v55 = (const __CFDictionary *)v54;
                Int64 = CFDictionaryGetInt64();
                switch(Int64)
                {
                  case 0:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v55, CFSTR("uuid"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      CFDictionaryGetValue(v55, CFSTR("path"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v48 + 244);
                    break;
                  case 1:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v55, CFSTR("uuid"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      CFDictionaryGetValue(v55, CFSTR("Content-Location"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v48 + 252);
                    break;
                  case 2:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v55, CFSTR("uuid"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      CFDictionaryGetValue(v55, CFSTR("path"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v48 + 248);
                    break;
                  case 3:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      CFDictionaryGetValue(v55, CFSTR("uuid"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      CFDictionaryGetValue(v55, CFSTR("Content-Location"));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
                        _LogCategory_Initialize();
                      LogPrintF();
                    }
                    ++*(_DWORD *)(v48 + 256);
                    break;
                  default:
                    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                       || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                    break;
                }
                v195 = *(_DWORD *)(v48 + 24);
                if (v195 == 4 || v195 == 128 || v195 == 64)
                  CFDictionarySetValue(v55, CFSTR("allowP2P"), (const void *)*MEMORY[0x24BDBD270]);
                LODWORD(v229) = mcProcessor_addTLSInfo();
                if ((_DWORD)v229)
                {
                  APSLogErrorAt();
                  v107 = 0;
                  v108 = 0;
                  v9 = 4294895353;
                  goto LABEL_618;
                }
                if (*(_QWORD *)(v48 + 120))
                  CFDictionaryGetInt64();
                mcProcessor_fixIPAddressURL();
                LODWORD(v229) = APReceiverFairPlayHelperProcessFPInfo(*(_QWORD *)(v48 + 400), v55, 0);
                if ((_DWORD)v229)
                {
                  APSLogErrorAt();
                  v107 = 0;
                  v108 = 0;
                  v9 = 4294895352;
                  goto LABEL_618;
                }
              }
            }
          }
          if (!*(_BYTE *)(v48 + 408))
          {
            v211 = CFGetTypeID(v52);
            if (v211 == CFStringGetTypeID())
            {
              if (CFEqual(v52, CFSTR("requestForStreamingKey")))
              {
                cf1a = CFSTR("requestForStreamingKey");
              }
              else
              {
                v213 = CFEqual(v52, CFSTR("unhandledURLResponse"));
                v214 = v52;
                if (v213)
                  v214 = CFSTR("failedURLResponse");
                cf1a = v214;
              }
              if (!v53 || (v215 = CFGetTypeID(v53), v215 == CFDictionaryGetTypeID()))
              {
                v216 = *(_QWORD *)(v48 + 392);
                if (!v216)
                {
                  APSLogErrorAt();
                  v107 = 0;
                  v108 = 0;
                  goto LABEL_720;
                }
                v217 = *(uint64_t (**)(uint64_t, const __CFString *, const void *, CMTime *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 104);
                if (!v217)
                {
                  v201 = -12782;
                  goto LABEL_585;
                }
                inserted = v217(v216, cf1a, v53, &number);
LABEL_583:
                v201 = inserted;
LABEL_585:
                v108 = 0;
                goto LABEL_603;
              }
            }
LABEL_156:
            APSLogErrorAt();
            v107 = 0;
            v108 = 0;
            v9 = 4294895366;
            goto LABEL_618;
          }
        }
        else if (!*(_BYTE *)(v48 + 408))
        {
          goto LABEL_156;
        }
        if (FigCFEqual())
        {
          Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
          v108 = Mutable;
          if (Mutable)
          {
            CFDictionarySetValue(Mutable, CFSTR("kind"), CFSTR("request"));
            CFDictionarySetValue(v108, CFSTR("type"), CFSTR("streamingKey"));
            FigCFDictionarySetValue();
            if (v53)
            {
              v197 = CFGetTypeID(v53);
              if (v197 == CFDictionaryGetTypeID())
                FigCFDictionarySetValueFromKeyInDict();
            }
            v198 = CMBaseObjectGetDerivedStorage();
            v199 = v198;
            theDict[0] = 0;
            if (*(_BYTE *)(v198 + 384))
            {
              ++*(_QWORD *)(v198 + 424);
              UInt64 = (const void *)FigCFNumberCreateUInt64();
              if (UInt64)
              {
                CFDictionarySetValue(v108, CFSTR("messageID"), UInt64);
                v201 = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v108, 0, theDict);
                if (v201)
                {
                  APSLogErrorAt();
                  v204 = theDict[0];
                }
                else
                {
                  v202 = (const void *)FigSemaphoreCreate();
                  pthread_mutex_lock(*(pthread_mutex_t **)(v199 + 432));
                  CFDictionarySetValue(*(CFMutableDictionaryRef *)(v199 + 416), UInt64, v202);
                  pthread_mutex_unlock(*(pthread_mutex_t **)(v199 + 432));
                  v203 = *(_QWORD *)(v199 + 392);
                  v204 = theDict[0];
                  v205 = *(uint64_t (**)(uint64_t, CFDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                                + 16)
                                                                                    + 64);
                  if (v205)
                  {
                    v201 = v205(v203, v204, 0);
                    if (!v201)
                    {
                      v201 = FigSemaphoreWaitRelative();
                      if (v201)
                      {
                        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 90
                          && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                           || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                        pthread_mutex_lock(*(pthread_mutex_t **)(v199 + 432));
                        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v199 + 416), UInt64);
                        pthread_mutex_unlock(*(pthread_mutex_t **)(v199 + 432));
                      }
                      pthread_mutex_lock(*(pthread_mutex_t **)(v199 + 448));
                      v221 = CFDictionaryGetValue(*(CFDictionaryRef *)(v199 + 440), UInt64);
                      if (v221)
                        v222 = CFRetain(v221);
                      else
                        v222 = 0;
                      CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(v199 + 440), UInt64);
                      pthread_mutex_unlock(*(pthread_mutex_t **)(v199 + 448));
                      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
                        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                         || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      number.value = (CMTimeValue)v222;
                      goto LABEL_601;
                    }
                  }
                  else
                  {
                    v201 = -12782;
                  }
                  APSLogErrorAt();
                }
LABEL_601:
                FigSemaphoreDestroy();
                CFRelease(UInt64);
                if (v204)
                  CFRelease(v204);
                goto LABEL_603;
              }
              v201 = -6728;
            }
            else
            {
              v201 = -6709;
            }
            APSLogErrorAt();
            FigSemaphoreDestroy();
LABEL_603:
            LODWORD(v229) = v201;
            goto LABEL_604;
          }
          goto LABEL_734;
        }
        if (FigCFEqual())
        {
          v206 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
          v108 = v206;
          if (v206)
          {
            CFDictionarySetValue(v206, CFSTR("kind"), CFSTR("request"));
            CFDictionarySetValue(v108, CFSTR("type"), CFSTR("unhandledURL"));
            CFDictionarySetValue(v108, CFSTR("response"), v53);
            if (v53)
            {
              v207 = CFGetTypeID(v53);
              if (v207 == CFDictionaryGetTypeID())
                FigCFDictionarySetValueFromKeyInDict();
            }
            LODWORD(v229) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v108, 0, &valuePtr);
            if (!(_DWORD)v229)
            {
              v208 = *(_QWORD *)(v48 + 392);
              v209 = valuePtr;
              v210 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                       + 64);
              if (v210)
                goto LABEL_574;
              goto LABEL_586;
            }
            goto LABEL_736;
          }
          goto LABEL_734;
        }
        if (FigCFEqual())
        {
          CFDictionaryGetTypeID();
          CFDictionaryGetTypedValue();
          v108 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
          if (v108)
          {
            CFDictionaryGetTypeID();
            v212 = (const void *)CFDictionaryGetTypedValue();
            if (!v212)
            {
              APSLogErrorAt();
LABEL_663:
              v107 = 0;
LABEL_720:
              v9 = 4294895362;
              goto LABEL_618;
            }
            CFDictionarySetValue(v108, CFSTR("item"), v212);
            CFDictionarySetValue(v108, CFSTR("type"), CFSTR("removePlayQueueItem"));
            FigCFDictionarySetValueFromKeyInDict();
            LODWORD(v229) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v108, 0, &valuePtr);
            if (!(_DWORD)v229)
            {
              v208 = *(_QWORD *)(v48 + 392);
              v209 = valuePtr;
              v210 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                       + 64);
              if (v210)
              {
LABEL_574:
                v201 = v210(v208, v209, 0);
                goto LABEL_603;
              }
LABEL_586:
              v201 = -12782;
              goto LABEL_603;
            }
LABEL_736:
            APSLogErrorAt();
            v107 = 0;
            goto LABEL_737;
          }
LABEL_734:
          APSLogErrorAt();
          v107 = 0;
          v108 = 0;
LABEL_737:
          v9 = 4294895350;
LABEL_618:
          if (number.value)
            CFRelease((CFTypeRef)number.value);
          if (v107)
            CFRelease(v107);
          if (v50)
            CFRelease(v50);
          if (v108)
            CFRelease(v108);
          value = valuePtr;
          if (!valuePtr)
            return v9;
          goto LABEL_627;
        }
        if (!FigCFEqual())
        {
          v108 = 0;
          v201 = (int)v229;
LABEL_604:
          if (v201 && gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
          {
            if (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize())
              LogPrintF();
            if (gLogCategory_APReceiverRequestProcessorMediaControl <= 10
              && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
          }
          v107 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
          if (v107)
          {
            CFDictionarySetNumber();
            if (number.value)
              CFDictionarySetValue(v107, CFSTR("params"), (const void *)number.value);
            if (!APReceiverRequestProcessorPreparePlistResponse(v107, v225))
            {
              v9 = 0;
              goto LABEL_618;
            }
            APSLogErrorAt();
            goto LABEL_720;
          }
          APSLogErrorAt();
          goto LABEL_663;
        }
        CFDictionaryGetTypeID();
        if (CFDictionaryGetTypedValue())
        {
          CFDictionaryGetTypeID();
          v219 = (const __CFDictionary *)CFDictionaryGetTypedValue();
          if (v219)
          {
            CFDictionaryGetTypeID();
            v220 = CFDictionaryGetTypedValue();
            inserted = mcProcessor_insertPlayQueueItemV2((uint64_t)v6, v219, v220, 0);
            goto LABEL_583;
          }
        }
        goto LABEL_156;
      }
      if (v5 != 1735422066)
      {
        if (v5 != 1735615346)
          return v9;
        v245 = 0u;
        v246 = 0u;
        v243 = 0u;
        v244 = 0u;
        v241 = 0u;
        v242 = 0u;
        v240 = 0u;
        *(_OWORD *)theDict = 0u;
        number.value = 0;
        v19 = *(_QWORD *)(CMBaseObjectGetDerivedStorage() + 392);
        if (v19)
        {
          v20 = *(unsigned int (**)(uint64_t, const __CFString *, _QWORD, CMTime *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                             + 112);
          if (v20 && !v20(v19, CFSTR("playbackInfo"), 0, &number))
          {
            CFDictionaryGetDouble();
            v22 = v21;
            CFDictionaryGetDouble();
            v23 = v22;
            v25 = v24;
            if (gLogCategory_APReceiverRequestProcessorMediaControl <= 10
              && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v171 = snprintf((char *)theDict, 0x80uLL, "duration: %f\nposition: %f\n", v25, v23);
            if (!APReceiverRequestProcessorPrepareBinaryDataResponse((uint64_t)theDict, v171, v225))
            {
              v9 = 0;
LABEL_342:
              value = (CFDictionaryRef)number.value;
              if (!number.value)
                return v9;
              goto LABEL_627;
            }
          }
          APSLogErrorAt();
        }
        else
        {
          APSLogErrorAt();
        }
        v9 = 4294895362;
        goto LABEL_342;
      }
      v74 = CMBaseObjectGetDerivedStorage();
      LODWORD(v229) = 0;
      theDict[0] = 0;
      number.value = 0;
      valuePtr = 0;
      CFStringGetTypeID();
      v75 = (const void *)CFDictionaryGetTypedValue();
      if (!v75)
      {
        APSLogErrorAt();
        v9 = 4294895362;
        goto LABEL_426;
      }
      CFDataGetTypeID();
      v76 = (const __CFData *)CFDictionaryGetTypedValue();
      v77 = v76;
      if (v76)
      {
        if (CFDataGetLength(v76) >= 1)
        {
          v78 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v77, 0, 0, 0);
          v77 = v78;
          if (!v78)
          {
            APSLogErrorAt();
            v9 = 4294895354;
            goto LABEL_426;
          }
          v79 = CFDictionaryGetValue(v78, CFSTR("qualifier"));
LABEL_184:
          v117 = *(_QWORD *)(v74 + 392);
          if (!v117)
          {
            APSLogErrorAt();
            goto LABEL_710;
          }
          if (*(_BYTE *)(v74 + 408))
          {
            v118 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
            v119 = v118;
            if (v118)
            {
              CFDictionarySetValue(v118, CFSTR("kind"), CFSTR("request"));
              CFDictionarySetValue(v119, CFSTR("type"), CFSTR("property"));
              CFDictionarySetValue(v119, CFSTR("property"), v75);
              if (v79 && (v120 = CFGetTypeID(v79), v120 == CFDictionaryGetTypeID()))
              {
                mcProcessor_qualifierToRendererParameters((uint64_t)v79, v119);
                FigCFDictionarySetValueFromKeyInDict();
                FigCFDictionarySetValueFromKeyInDict();
              }
              else
              {
                v121 = FigCFEqual();
                v122 = v79 == 0;
                if (!v121)
                  v122 = 1;
                if (!v122)
                {
                  v123 = CFGetTypeID(v79);
                  if (v123 == CFNumberGetTypeID())
                    FigCFDictionarySetValue();
                }
              }
              LODWORD(v229) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v119, 1, &valuePtr);
              if (!(_DWORD)v229)
              {
                v124 = *(_QWORD *)(v74 + 392);
                v125 = valuePtr;
                v126 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, CMTime *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                           + 64);
                if (v126)
                {
                  v127 = v126(v124, v125, &number);
                  LODWORD(v229) = v127;
                  if (v127 == -6727 || !v127)
                  {
LABEL_382:
                    if (v127)
                      goto LABEL_665;
                    v180 = (__CFDictionary *)number.value;
                    goto LABEL_419;
                  }
                }
                else
                {
                  LODWORD(v229) = -12782;
                }
                if (gLogCategory_APReceiverRequestProcessorMediaControl > 50)
                  goto LABEL_665;
                if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                  || (v179 = _LogCategory_Initialize(), v127 = (int)v229, v179))
                {
                  LogPrintF();
                  v127 = (int)v229;
                }
                goto LABEL_382;
              }
              APSLogErrorAt();
            }
            else
            {
              APSLogErrorAt();
              v119 = 0;
            }
            v7 = 4294895350;
            goto LABEL_421;
          }
          v128 = *(uint64_t (**)(uint64_t, const void *, const __CFData *, CFDictionaryRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 112);
          if (v128)
          {
            v129 = v128(v117, v75, v77, theDict);
            LODWORD(v229) = v129;
            if (v129 == -6727 || !v129)
            {
LABEL_415:
              v180 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
              if (v180)
              {
                CFDictionarySetNumber();
                if (theDict[0])
                  CFDictionarySetValue(v180, CFSTR("value"), theDict[0]);
                v119 = 0;
                number.value = (CMTimeValue)v180;
LABEL_419:
                if (!APReceiverRequestProcessorPreparePlistResponse(v180, v225))
                {
                  v7 = 0;
LABEL_421:
                  if (v77)
                    CFRelease(v77);
                  if (v119)
                    CFRelease(v119);
                  v9 = v7;
LABEL_426:
                  if (valuePtr)
                    CFRelease(valuePtr);
                  if (number.value)
                    CFRelease((CFTypeRef)number.value);
                  value = theDict[0];
                  if (!theDict[0])
                    return v9;
                  goto LABEL_627;
                }
LABEL_665:
                APSLogErrorAt();
                goto LABEL_421;
              }
              APSLogErrorAt();
LABEL_710:
              v119 = 0;
              goto LABEL_421;
            }
          }
          else
          {
            LODWORD(v229) = -12782;
          }
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          goto LABEL_415;
        }
        v77 = 0;
      }
      v79 = 0;
      goto LABEL_184;
    }
    if (v5 <= 1885435251)
    {
      if (v5 != 1735616870)
      {
        v12 = 1735684980;
LABEL_26:
        if (v5 != v12)
          return v9;
LABEL_254:
        *v225 = 0;
        return v9;
      }
      v68 = CMBaseObjectGetDerivedStorage();
      LODWORD(v228) = 0;
      v69 = CFDictionaryCopyCString();
      v70 = (void *)v69;
      if (v69)
        v71 = (const char *)v69;
      else
        v71 = "00000000-0000-0000-0000-000000000000";
      strlen(v71);
      v72 = StringToUUID();
      LODWORD(v228) = v72;
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30)
      {
        if (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize())
          LogPrintF();
        v72 = (int)v228;
      }
      if (v72
        && gLogCategory_APReceiverRequestProcessorMediaControl <= 60
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v163 = *(_QWORD *)(*(_QWORD *)(v68 + 128) + 160);
      v253 = 0u;
      v254 = 0u;
      v251 = 0u;
      v252 = 0u;
      v249 = 0u;
      v250 = 0u;
      v247 = 0u;
      v248 = 0u;
      v245 = 0u;
      v246 = 0u;
      v243 = 0u;
      v244 = 0u;
      v241 = 0u;
      v242 = 0u;
      v240 = 0u;
      *(_OWORD *)theDict = 0u;
      v164 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (v164)
      {
        CFObjectGetPropertyInt64Sync();
        FigCFDictionarySetInt64();
        LODWORD(v229) = *(_DWORD *)(v163 + 96);
        WORD2(v229) = *(_WORD *)(v163 + 100);
        HardwareAddressToCString();
        CFDictionarySetCString();
        valuePtr = 0;
        p_valuePtr = &valuePtr;
        v237 = 0x2020000000;
        v238 = 0;
        v165 = *(NSObject **)(v163 + 16);
        number.value = MEMORY[0x24BDAC760];
        *(_QWORD *)&number.timescale = 3221225472;
        number.epoch = (CMTimeEpoch)__APReceiverSystemInfoCopyFeatures_block_invoke;
        v232 = &unk_24E21F9D0;
        v233 = &valuePtr;
        v234 = v163;
        dispatch_sync(v165, &number);
        v166 = p_valuePtr[3];
        _Block_object_dispose(&valuePtr, 8);
        if (v166 && APSFeaturesGetLegacyFlags())
          CFDictionarySetInt64();
        LOBYTE(theDict[0]) = 0;
        GetDeviceModelString();
        CFDictionarySetCString();
        if (IsAppleInternalBuild())
        {
          LOBYTE(theDict[0]) = 0;
          GetDeviceInternalModelString();
          CFDictionarySetCString();
        }
        LOBYTE(theDict[0]) = 0;
        GetSystemBuildVersionString();
        CFDictionarySetCString();
        LOBYTE(theDict[0]) = 0;
        HardwareAddressToCString();
        CFDictionarySetCString();
        CFDictionarySetValue(v164, CFSTR("protovers"), CFSTR("1.0"));
        APSVersionUtilsGetShortVersionLength();
        CFDictionarySetCString();
        if (IsAppleInternalBuild())
        {
          LOBYTE(theDict[0]) = 0;
          GetDeviceUniqueID();
          CFDictionarySetCString();
        }
        if (v166)
          CFRelease(v166);
        LODWORD(v228) = 0;
        v167 = (const char *)CFDictionaryCopyCString();
        v168 = (char *)v167;
        if (v167)
          strlen(v167);
        LODWORD(theDict[0]) = 0;
        SNScanF();
        LODWORD(theDict[0]) = wmhYOjgJkR();
        CFDictionarySetInt64();
        if (!APReceiverRequestProcessorPrepareXMLPlistResponse(v164, v225))
        {
          v9 = 0;
          if (!v70)
            goto LABEL_332;
          goto LABEL_331;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        LODWORD(v228) = -6728;
        APSLogErrorAt();
        v168 = 0;
      }
      v9 = 4294895362;
      if (!v70)
      {
LABEL_332:
        free(v168);
        if (v164)
          CFRelease(v164);
        return v9;
      }
LABEL_331:
      free(v70);
      goto LABEL_332;
    }
    if (v5 != 1885435252)
    {
      if (v5 != 1886151033)
        return v9;
      cf1 = (_QWORD *)CMBaseObjectGetDerivedStorage();
      started = 0;
      number.value = 0;
      *(_QWORD *)&number.timescale = 0;
      v228 = 0;
      v229 = 0;
      v241 = 0u;
      v242 = 0u;
      v240 = 0u;
      *(_OWORD *)theDict = 0u;
      cf = 0;
      Current = CFAbsoluteTimeGetCurrent();
      gettimeofday((timeval *)&number, 0);
      v32 = (const char *)CFDictionaryCopyCString();
      v33 = (char *)v32;
      if (v32)
        strlen(v32);
      if (strnicmpx())
      {
        v226 = 0;
        valuePtr = 0;
        v98 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        if (!v98)
        {
          APSLogErrorAt();
          v100 = 0;
LABEL_713:
          v144 = 0;
          v9 = v7;
          goto LABEL_489;
        }
        CFStringGetTypeID();
        v99 = (const void *)CFDictionaryGetTypedValue();
        CFDictionarySetValue(v98, CFSTR("Content-Location"), v99);
        v100 = (char *)CFDictionaryCopyCString();
        if (v100)
        {
          v101 = strlen(v100);
          if (v101 >= 0x40)
          {
            APSLogErrorAt();
LABEL_712:
            v7 = 4294895366;
            goto LABEL_713;
          }
        }
        else
        {
          v101 = 0;
        }
        __memcpy_chk();
        *((_BYTE *)theDict + v101) = 0;
        if (sscanf((const char *)theDict, "%f", &v226) != 1)
          goto LABEL_711;
        started = CFDictionarySetNumber();
        if (started)
        {
LABEL_684:
          APSLogErrorAt();
          goto LABEL_713;
        }
        free(v100);
        v133 = (const char *)CFDictionaryCopyCString();
        v100 = (char *)v133;
        if (v133)
          strlen(v133);
        if (!started)
        {
          started = Base64DecodeCopy();
          if (started)
            goto LABEL_711;
          CFDictionarySetData();
        }
        started = 0;
      }
      else
      {
        CFDataGetTypeID();
        v105 = (const __CFData *)CFDictionaryGetTypedValue();
        v106 = v105;
        if (!v105)
        {
          APSLogErrorAt();
          v100 = 0;
          v98 = 0;
          v144 = 0;
          goto LABEL_488;
        }
        CFDataGetBytePtr(v105);
        CFDataGetLength(v106);
        CFDictionaryGetTypeID();
        v98 = (__CFDictionary *)CFCreateWithPlistBytes();
        if (!v98)
        {
          APSLogErrorAt();
          v100 = 0;
          v98 = 0;
          goto LABEL_707;
        }
        v100 = 0;
      }
      v134 = CFDictionaryGetValue(v98, CFSTR("Start-Estimated-Date"));
      v135 = v134;
      if (!v134)
        goto LABEL_235;
      v136 = CFGetTypeID(v134);
      if (v136 == CFDateGetTypeID())
      {
        free(v33);
        v137 = (const char *)CFDictionaryCopyCString();
        v33 = (char *)v137;
        if (v137)
        {
          strlen(v137);
          valuePtr = 0;
          p_valuePtr = 0;
          v138 = CFGetTypeID(v135);
          if (v138 == CFDateGetTypeID())
          {
            started = ParseFractionalDateString();
            if (!started)
            {
              v139 = valuePtr;
              v140 = (int)p_valuePtr;
              v141 = number.value;
              timescale = number.timescale;
              v143 = MEMORY[0x2207AA3F4](v135);
              v144 = CFDateCreate(0, v143 + (double)(1000000 * (v141 - (uint64_t)v139) - v140 + timescale) / 1000000.0);
              if (v144)
              {
                CFDictionarySetValue(v98, CFSTR("Start-Estimated-Date"), v144);
LABEL_236:
                v145 = CFDictionaryGetValue(v98, CFSTR("Start-Position"));
                if (!v145)
                {
                  v145 = CFDictionaryGetValue(v98, CFSTR("Start-Date"));
                  if (!v145)
                    v145 = CFDictionaryGetValue(v98, CFSTR("Start-Estimated-Date"));
                }
                if (gMediaControlVideoDisabled)
                {
                  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                     || _LogCategory_Initialize()))
                  {
                    LogPrintF();
                  }
                  goto LABEL_488;
                }
                v146 = cf1[49];
                v147 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                         + 72);
                if (v147)
                {
                  started = v147(v146, 0, 0);
                  if (!started)
                  {
                    v148 = cf1;
                    v149 = *((_DWORD *)cf1 + 6);
                    if (v149 == 4 || v149 == 128 || v149 == 64)
                    {
                      CFDictionarySetValue(v98, CFSTR("allowP2P"), (const void *)*MEMORY[0x24BDBD270]);
                      v148 = cf1;
                    }
                    if (v148[15])
                      CFDictionaryGetInt64();
                    mcProcessor_fixIPAddressURL();
                    v173 = CFDictionaryGetValue(v98, CFSTR("Content-Location"));
                    if (v173)
                    {
                      v174 = CFGetTypeID(v173);
                      if (v174 == CFStringGetTypeID())
                      {
                        if (CFDictionaryGetValue(v98, CFSTR("cookies")) && !*((_BYTE *)cf1 + 176))
                        {
                          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
                            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                             || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          CFDictionaryRemoveValue(v98, CFSTR("cookies"));
                        }
                        if (CFDictionaryGetValue(v98, CFSTR("purchaseBundle")) && !*((_BYTE *)cf1 + 176))
                        {
                          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
                            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                             || _LogCategory_Initialize()))
                          {
                            LogPrintF();
                          }
                          CFDictionaryRemoveValue(v98, CFSTR("purchaseBundle"));
                        }
                        if (IsAppleInternalBuild() && CFDictionaryGetInt64())
                          APReceiverSystemInfoClearVideoCache();
                        started = mcProcessor_addTLSInfo();
                        if (started)
                        {
                          APSLogErrorAt();
                          v9 = 4294895353;
                          goto LABEL_489;
                        }
                        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                          && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                           || _LogCategory_Initialize()))
                        {
                          CFDictionaryGetValue(v98, CFSTR("uuid"));
                          v190 = gLogCategory_APReceiverRequestProcessorMediaControl;
                          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 10)
                          {
                            if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                              || (_LogCategory_Initialize(),
                                  v190 = gLogCategory_APReceiverRequestProcessorMediaControl,
                                  gLogCategory_APReceiverRequestProcessorMediaControl <= 10))
                            {
                              if (v190 == -1)
                                _LogCategory_Initialize();
                            }
                          }
                          LogPrintF();
                        }
                        CFDictionarySetInt64();
                        if (cf1[49])
                        {
                          if (*((_BYTE *)cf1 + 408))
                          {
                            started = mcProcessor_startVideoPlaybackV2((uint64_t)v6);
                            if (!started)
                            {
                              started = mcProcessor_insertPlayQueueItemV2((uint64_t)v6, v98, 0, (uint64_t)v145);
                              if (!started)
                                goto LABEL_475;
                            }
                          }
                          else
                          {
                            v228 = "?";
                            started = APReceiverFairPlayHelperProcessFPInfo(cf1[50], v98, &v228);
                            if (started)
                            {
                              APSLogErrorAt();
                              v9 = 4294895352;
                              goto LABEL_489;
                            }
                            v191 = cf1[49];
                            v192 = cf1[16];
                            v193 = *(uint64_t (**)(uint64_t, uint64_t (*)(dispatch_queue_t *, const void *), uint64_t, __CFDictionary *, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 88);
                            if (v193)
                            {
                              v194 = v193(v191, mcProcessor_handleMediaControlEvent, v192, v98, &cf);
                              started = v194;
                              v9 = 4294895359;
                              if (v194 <= 452)
                              {
                                if (v194 == -6721)
                                  goto LABEL_489;
                                if (!v194)
                                {
                                  if (!cf)
                                  {
                                    APSLogErrorAt();
                                    v9 = 4294960534;
                                    goto LABEL_489;
                                  }
                                  *((_DWORD *)cf1 + 94) = CFDictionaryGetInt64();
LABEL_475:
                                  mcProcessor_addTrafficRegistration();
                                  if (!*((_BYTE *)cf1 + 384))
                                    mcProcessor_logVideoStarted(Current, (uint64_t)v6, v98);
                                  _mcProcessor_StartKeepAliveTimer(v6);
                                  *((_BYTE *)cf1 + 384) = 1;
                                  AirPlayReceiverServerHoldPowerAssertion(cf1[16]);
                                  v9 = 0;
                                  if (v225)
                                    *v225 = 0;
                                  goto LABEL_489;
                                }
                              }
                              else if (v194 == 453 || v194 == 200453)
                              {
                                goto LABEL_489;
                              }
                            }
                            else
                            {
                              started = -12782;
                            }
                          }
                        }
                        goto LABEL_487;
                      }
                    }
                    APSLogErrorAt();
LABEL_708:
                    v9 = 4294895366;
                    goto LABEL_489;
                  }
                }
                else
                {
                  started = -12782;
                }
LABEL_487:
                APSLogErrorAt();
LABEL_488:
                v9 = 4294895362;
LABEL_489:
                free(v100);
                free(v229);
                free(v33);
                if (v144)
                  CFRelease(v144);
                if (v98)
                  CFRelease(v98);
                if (cf)
                  CFRelease(cf);
                return v9;
              }
              goto LABEL_684;
            }
          }
LABEL_711:
          APSLogErrorAt();
          goto LABEL_712;
        }
LABEL_235:
        v144 = 0;
        goto LABEL_236;
      }
      APSLogErrorAt();
LABEL_707:
      v144 = 0;
      goto LABEL_708;
    }
    LODWORD(v228) = 0;
    v83 = CMBaseObjectGetDerivedStorage();
    number.value = 0;
    bzero(theDict, 0x1E000uLL);
    valuePtr = 0;
    v229 = 0;
    CFStringGetTypeID();
    v84 = (const __CFString *)CFDictionaryGetTypedValue();
    if (!*(_BYTE *)(v83 + 408))
    {
      v102 = APReceiverFairPlayHelperCopyAuthorizeItemResponseIntoBuffer(*(_QWORD *)(v83 + 400), v3, v84, (char *)theDict, 0x1E000uLL, &number);
      if ((_DWORD)v102)
      {
        v9 = v102;
        APSLogErrorAt();
        goto LABEL_379;
      }
      v103 = 0;
      v84 = 0;
      v89 = 0;
      v87 = 0;
      v104 = number.value;
LABEL_368:
      if (APReceiverRequestProcessorPrepareBinaryDataResponse((uint64_t)theDict, v104, v225))
        APSLogErrorAt();
      else
        v7 = 0;
      if (!v87)
        goto LABEL_372;
      goto LABEL_371;
    }
    LODWORD(v228) = mcProcessor_startVideoPlaybackV2((uint64_t)v6);
    if ((_DWORD)v228)
    {
      APSLogErrorAt();
      v9 = 4294895362;
      goto LABEL_379;
    }
    v85 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, v3);
    v87 = MutableCopy;
    if (!MutableCopy)
    {
      APSLogErrorAt();
      v9 = 4294895350;
      goto LABEL_379;
    }
    CFDictionarySetValue(MutableCopy, CFSTR("type"), CFSTR("authorizeItem"));
    CFDictionarySetValue(v87, CFSTR("kind"), CFSTR("request"));
    if (v84)
    {
      v88 = CFDictionaryCreateMutable(v85, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      v89 = v88;
      if (!v88)
      {
        APSLogErrorAt();
        v84 = 0;
        v89 = 0;
        goto LABEL_694;
      }
      CFDictionarySetValue(v88, CFSTR("uuid"), v84);
      CFDictionarySetValue(v87, CFSTR("item"), v89);
      v84 = (const __CFString *)CFDictionaryGetValue(v3, CFSTR("PIC-Request"));
      if (v84)
      {
        v84 = (const __CFString *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCE50]), "initWithBase64EncodedString:options:", v84, 0);
        FigCFDictionarySetValue();
      }
      FigCFDictionarySetValueFromKeyInDict();
    }
    else
    {
      v89 = 0;
    }
    LODWORD(v228) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v87, 1, &valuePtr);
    if (!(_DWORD)v228)
    {
      v130 = *(_QWORD *)(v83 + 392);
      v103 = valuePtr;
      v131 = *(unsigned int (**)(uint64_t, CFMutableDictionaryRef, CFDictionaryRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                               + 64);
      if (v131)
      {
        if (!v131(v130, v103, &v229))
        {
          v132 = v229;
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (v132)
          {
            v175 = (void *)CFDictionaryGetValue(v132, CFSTR("PIC-Data"));
            v176 = (void *)CFDictionaryGetValue(v132, CFSTR("playerGUID"));
            v177 = snprintf((char *)theDict, 0x1E000uLL, "%s: %s\n%s: %s\n", "PIC-Data", (const char *)objc_msgSend((id)objc_msgSend(v175, "base64EncodedStringWithOptions:", 0), "cStringUsingEncoding:", 4), "Player-GUID", (const char *)objc_msgSend(v176, "cStringUsingEncoding:", 4));
            if (v177 - 122880 >= 0xFFFE2001)
            {
              v104 = v177;
              number.value = v177;
              goto LABEL_368;
            }
          }
          APSLogErrorAt();
          APSLogErrorAt();
LABEL_371:
          CFRelease(v87);
          v103 = valuePtr;
LABEL_372:
          if (v103)
            CFRelease(v103);
          if (v89)
            CFRelease(v89);
          if (v84)
            CFRelease(v84);
          v9 = v7;
LABEL_379:
          v178 = v229;
          if (!v229)
            return v9;
LABEL_380:
          CFRelease(v178);
          return v9;
        }
      }
      else
      {
        LODWORD(v228) = -12782;
      }
      APSLogErrorAt();
      goto LABEL_371;
    }
    APSLogErrorAt();
LABEL_694:
    v7 = 4294895350;
    goto LABEL_371;
  }
  if (v5 <= 1918989412)
  {
    if (v5 > 1886809963)
    {
      if (v5 == 1886809964)
      {
        v80 = CMBaseObjectGetDerivedStorage();
        LODWORD(theDict[0]) = 0;
        v81 = (const __CFNumber *)CFDictionaryGetValue(v3, CFSTR("volume"));
        if (v81)
        {
          v82 = v81;
          CFNumberGetValue(v81, kCFNumberFloatType, theDict);
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v150 = *(_QWORD *)(v80 + 392);
          if (v150)
          {
            v151 = *(unsigned int (**)(uint64_t, const __CFString *, _QWORD, const __CFNumber *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 120);
            if (v151 && !v151(v150, CFSTR("volume"), 0, v82))
            {
              v7 = 0;
              *v225 = 0;
            }
          }
          else
          {
            APSLogErrorAt();
          }
        }
        else
        {
          APSLogErrorAt();
          return 4294895366;
        }
        return v7;
      }
      else if (v5 == 1918984564)
      {
        CFDataGetTypeID();
        v26 = (const __CFData *)CFDictionaryGetTypedValue();
        if (v26
          && (v27 = v26, CFDataGetLength(v26) > 0)
          && (v28 = (const __CFDictionary *)CFPropertyListCreateWithData(0, v27, 0, 0, 0)) != 0)
        {
          v29 = v28;
          v30 = CFGetTypeID(v28);
          if (v30 == CFDictionaryGetTypeID())
          {
            v9 = mcProcessor_processSetRateInternal(v6, v29, v225);
          }
          else
          {
            APSLogErrorAt();
            v9 = 4294895354;
          }
          CFRelease(v29);
        }
        else
        {
          APSLogErrorAt();
          return 4294895354;
        }
      }
      return v9;
    }
    if (v5 != 1886283375)
    {
      v12 = 1886679924;
      goto LABEL_26;
    }
    v57 = CMBaseObjectGetDerivedStorage();
    v58 = v57;
    LODWORD(v229) = 0;
    theDict[0] = 0;
    number.value = 0;
    valuePtr = 0;
    if (*(_BYTE *)(v57 + 408))
    {
      v59 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      v60 = v59;
      if (!v59
        || (CFDictionarySetValue(v59, CFSTR("type"), CFSTR("playbackInfo")),
            CFDictionarySetValue(v60, CFSTR("kind"), CFSTR("request")),
            LODWORD(v229) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v60, 1, (CFMutableDictionaryRef *)&number), (_DWORD)v229))
      {
        APSLogErrorAt();
        v66 = 0;
        v9 = 4294895350;
        goto LABEL_294;
      }
      v61 = *(_QWORD *)(v58 + 392);
      v62 = number.value;
      v63 = *(uint64_t (**)(uint64_t, CMTimeValue, CFMutableDictionaryRef *))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                                 + 16)
                                                                                     + 64);
      if (v63)
      {
        LODWORD(v229) = v63(v61, v62, &valuePtr);
        if (!(_DWORD)v229)
        {
          v64 = (const __CFDictionary *)FigCFDictionaryGetValue();
          if (v64)
          {
            v65 = CFDictionaryCreateMutableCopy(0, 0, v64);
            v66 = v65;
            if (v65)
            {
              mcProcessor_replaceV2RangeKeysWithV1(v65, (const void *)*MEMORY[0x24BDC10A8]);
              mcProcessor_replaceV2RangeKeysWithV1(v66, (const void *)*MEMORY[0x24BDC1070]);
              v67 = APReceiverRequestProcessorPrepareXMLPlistResponse(v66, v225);
LABEL_138:
              LODWORD(v229) = v67;
              if (!v67)
              {
                v9 = 0;
LABEL_294:
                if (theDict[0])
                  CFRelease(theDict[0]);
                if (v60)
                  CFRelease(v60);
                if (number.value)
                  CFRelease((CFTypeRef)number.value);
                if (valuePtr)
                  CFRelease(valuePtr);
                if (v66)
                  CFRelease(v66);
                return v9;
              }
              APSLogErrorAt();
LABEL_293:
              v9 = 4294895362;
              goto LABEL_294;
            }
          }
        }
      }
      else
      {
        LODWORD(v229) = -12782;
      }
      APSLogErrorAt();
LABEL_292:
      v66 = 0;
      goto LABEL_293;
    }
    v60 = *(__CFDictionary **)(v57 + 392);
    if (!v60)
    {
      APSLogErrorAt();
      goto LABEL_292;
    }
    v90 = *(uint64_t (**)(__CFDictionary *, const __CFString *, _QWORD, CFDictionaryRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 112);
    if (v90)
    {
      LODWORD(v229) = v90(v60, CFSTR("playbackInfo"), 0, theDict);
      if (theDict[0])
      {
        CFDictionaryGetDouble();
        if ((_DWORD)v229)
        {
LABEL_129:
          v94 = CFDictionaryGetInt64();
          if (!(_DWORD)v229)
            *(_DWORD *)(v58 + 212) = v94;
          CFDictionaryGetDouble();
          if (!(_DWORD)v229)
            *(_QWORD *)(v58 + 216) = v95;
          CFDictionaryGetDouble();
          if (!(_DWORD)v229)
            *(_QWORD *)(v58 + 224) = v96;
          CFDictionaryGetDouble();
          if (!(_DWORD)v229)
            *(_QWORD *)(v58 + 232) = v97;
          v67 = APReceiverRequestProcessorPrepareXMLPlistResponse(theDict[0], v225);
          v60 = 0;
          v66 = 0;
          goto LABEL_138;
        }
        v92 = v91;
        v93 = CFDictionaryCreateMutableCopy(0, 0, theDict[0]);
        if (v93)
        {
          if (theDict[0])
          {
            CFRelease(theDict[0]);
            theDict[0] = 0;
          }
          CFDictionaryRemoveValue(v93, CFSTR("playbackLikelyToKeepUpTime"));
          if (!*(_DWORD *)(v58 + 208))
          {
            *(_DWORD *)(v58 + 208) = ((v92 - *(double *)(v58 + 200)) * 1000.0);
            CFDictionarySetInt64();
          }
          theDict[0] = v93;
          goto LABEL_129;
        }
      }
    }
    else
    {
      LODWORD(v229) = -12782;
    }
    APSLogErrorAt();
    v60 = 0;
    goto LABEL_292;
  }
  if (v5 <= 1936748657)
  {
    if (v5 == 1918989413)
      return mcProcessor_processSetRateInternal(v6, v3, v225);
    if (v5 != 1920365171)
      return v9;
    LODWORD(number.value) = 0;
    theDict[0] = 0;
    v13 = CMBaseObjectGetDerivedStorage();
    CFStringGetTypeID();
    v14 = (const __CFString *)CFDictionaryGetTypedValue();
    if (!v14)
      goto LABEL_657;
    LODWORD(number.value) = CFStringCopyUTF8CString();
    if (!LODWORD(number.value))
    {
      CFStringGetLength(v14);
      if (strnicmpx())
        goto LABEL_657;
      theDict[0] = 0;
      CFStringGetTypeID();
      v15 = (const __CFString *)CFDictionaryGetTypedValue();
      if (!v15)
        goto LABEL_657;
      LODWORD(number.value) = CFStringCopyUTF8CString();
      if (!LODWORD(number.value))
      {
        CFStringGetLength(v15);
        if (strnicmpx())
          goto LABEL_657;
        theDict[0] = 0;
        CFStringGetTypeID();
        v16 = (const __CFString *)CFDictionaryGetTypedValue();
        if (!v16)
          goto LABEL_657;
        LODWORD(number.value) = CFStringCopyUTF8CString();
        if (!LODWORD(number.value))
        {
          CFStringGetLength(v16);
          if (strncasestr())
            *(_BYTE *)(v13 + 313) = 1;
          if (theDict[0])
            free(theDict[0]);
          theDict[0] = 0;
          if (*(_OWORD *)(v13 + 104) != 0)
            goto LABEL_657;
          CFStringGetTypeID();
          v17 = (const __CFString *)CFDictionaryGetTypedValue();
          if (v17)
          {
            LODWORD(number.value) = CFStringCopyUTF8CString();
            if (LODWORD(number.value))
              goto LABEL_686;
            CFStringGetLength(v17);
            v18 = StringToUUID();
            LODWORD(number.value) = v18;
            theDict[0] = 0;
          }
          else
          {
            v18 = StringToUUID();
            LODWORD(number.value) = v18;
          }
          if (v18)
            goto LABEL_657;
          CFStringGetTypeID();
          v109 = (const __CFString *)CFDictionaryGetTypedValue();
          if (!v109)
          {
            *(_BYTE *)(v13 + 301) = 116;
            *(_DWORD *)(v13 + 297) = 1852143205;
            Length = 5;
            goto LABEL_164;
          }
          LODWORD(number.value) = CFStringCopyUTF8CString();
          if (!LODWORD(number.value))
          {
            Length = CFStringGetLength(v109);
            if (Length < 0x10)
            {
              memcpy((void *)(v13 + 297), theDict[0], Length);
              theDict[0] = 0;
LABEL_164:
              *(_BYTE *)(v13 + Length + 297) = 0;
              v111 = *(const void **)(v13 + 128);
              v112 = *(_QWORD *)(v13 + 32);
              CFObjectSetValue();
              CFRetain(v111);
              dispatch_retain(*(dispatch_object_t *)(v112 + 120));
              CFRetain(v6);
              v113 = HTTPConnectionDetach();
              if (v113)
                APSLogErrorAt();
              LODWORD(number.value) = v113;
              goto LABEL_167;
            }
LABEL_657:
            APSLogErrorAt();
LABEL_167:
            v114 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
            if (!v114)
            {
              APSLogErrorAt();
              v114 = 0;
              LODWORD(number.value) = -71950;
              goto LABEL_171;
            }
            LODWORD(number.value) = CFDictionarySetInt64();
            if (LODWORD(number.value))
            {
              APSLogErrorAt();
              goto LABEL_171;
            }
            *v225 = v114;
LABEL_170:
            v114 = 0;
LABEL_171:
            v115 = *(_QWORD *)(v13 + 392);
            v116 = *(void (**)(uint64_t, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 80);
            if (v116)
              v116(v115, 0);
            if (theDict[0])
              free(theDict[0]);
            if (v114)
              CFRelease(v114);
            return LODWORD(number.value);
          }
        }
      }
    }
LABEL_686:
    APSLogErrorAt();
    goto LABEL_170;
  }
  switch(v5)
  {
    case 1936748658:
      v34 = CMBaseObjectGetDerivedStorage();
      LODWORD(number.value) = 0;
      theDict[0] = 0;
      CFStringGetTypeID();
      v35 = (const void *)CFDictionaryGetTypedValue();
      if (v35)
      {
        CFDataGetTypeID();
        v36 = (const __CFData *)CFDictionaryGetTypedValue();
        v37 = v36;
        if (!v36)
        {
          v40 = 0;
          v41 = 0;
          goto LABEL_179;
        }
        if (CFDataGetLength(v36) < 1)
        {
          v40 = 0;
          v41 = 0;
          v37 = 0;
          goto LABEL_179;
        }
        v38 = (const __CFData *)CFPropertyListCreateWithData(0, v37, 0, 0, 0);
        v37 = v38;
        if (v38)
        {
          v39 = CFGetTypeID(v38);
          if (v39 != CFDictionaryGetTypeID())
          {
            APSLogErrorAt();
            v153 = 0;
            v9 = 4294895354;
LABEL_350:
            CFRelease(v37);
LABEL_351:
            if (v153)
              CFRelease(v153);
            goto LABEL_353;
          }
          v40 = CFDictionaryGetValue(v37, CFSTR("qualifier"));
          v41 = CFDictionaryGetValue(v37, CFSTR("value"));
LABEL_179:
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v152 = *(_QWORD *)(v34 + 392);
          if (!v152)
          {
            APSLogErrorAt();
            v153 = 0;
            goto LABEL_349;
          }
          if (!*(_BYTE *)(v34 + 408))
          {
            v159 = *(uint64_t (**)(uint64_t, const void *, const void *, const void *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                               + 120);
            if (v159)
              v158 = v159(v152, v35, v40, v41);
            else
              v158 = -12782;
            v153 = 0;
            goto LABEL_310;
          }
          v153 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
          if (v153)
          {
            if (v40)
            {
              v154 = CFGetTypeID(v40);
              if (v154 == CFDictionaryGetTypeID())
              {
                mcProcessor_qualifierToRendererParameters((uint64_t)v40, v153);
                FigCFDictionarySetValueFromKeyInDict();
                FigCFDictionarySetValueFromKeyInDict();
              }
            }
            if (FigCFEqual())
            {
              CFDictionarySetValue(v153, CFSTR("type"), CFSTR("seek"));
              FigCFDictionarySetValue();
              LODWORD(number.value) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v153, 0, theDict);
              if (!LODWORD(number.value))
              {
                v155 = *(_QWORD *)(v34 + 392);
                v156 = theDict[0];
                v157 = *(uint64_t (**)(uint64_t, CFDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                              + 16)
                                                                                  + 64);
                if (v157)
                {
LABEL_279:
                  v158 = v157(v155, v156, 0);
                  goto LABEL_310;
                }
LABEL_289:
                v158 = -12782;
LABEL_310:
                LODWORD(number.value) = v158;
                if (v158
                  && gLogCategory_APReceiverRequestProcessorMediaControl <= 50
                  && (gLogCategory_APReceiverRequestProcessorMediaControl != -1
                   || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                v172 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                if (v172)
                {
                  CFDictionarySetNumber();
                  if (APReceiverRequestProcessorPreparePlistResponse(v172, v225))
                    APSLogErrorAt();
                  else
                    v7 = 0;
                  CFRelease(v172);
                }
                else
                {
                  APSLogErrorAt();
                }
LABEL_349:
                v9 = v7;
                if (!v37)
                  goto LABEL_351;
                goto LABEL_350;
              }
            }
            else
            {
              CFDictionarySetValue(v153, CFSTR("type"), CFSTR("setProperty"));
              CFDictionarySetValue(v153, CFSTR("kind"), CFSTR("request"));
              CFDictionarySetValue(v153, CFSTR("property"), v35);
              CFDictionarySetValue(v153, CFSTR("value"), v41);
              v160 = FigCFEqual();
              v161 = v40 == 0;
              if (!v160)
                v161 = 1;
              if (!v161)
              {
                v162 = CFGetTypeID(v40);
                if (v162 == CFNumberGetTypeID())
                  FigCFDictionarySetValue();
              }
              CFDictionaryGetValue(v37, CFSTR("item"));
              FigCFDictionarySetValue();
              LODWORD(number.value) = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v153, 0, theDict);
              if (!LODWORD(number.value))
              {
                v155 = *(_QWORD *)(v34 + 392);
                v156 = theDict[0];
                v157 = *(uint64_t (**)(uint64_t, CFDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                              + 16)
                                                                                  + 64);
                if (v157)
                  goto LABEL_279;
                goto LABEL_289;
              }
            }
            APSLogErrorAt();
          }
          else
          {
            APSLogErrorAt();
            v153 = 0;
          }
          v7 = 4294895350;
          goto LABEL_349;
        }
        APSLogErrorAt();
        v9 = 4294895354;
      }
      else
      {
        APSLogErrorAt();
        v9 = 4294895362;
      }
LABEL_353:
      if (theDict[0])
        CFRelease(theDict[0]);
      return v9;
    case 1936941938:
      v42 = CMBaseObjectGetDerivedStorage();
      LODWORD(v229) = 0;
      valuePtr = 0;
      CFDataGetTypeID();
      v43 = (const __CFData *)CFDictionaryGetTypedValue();
      v44 = v43;
      if (v43)
      {
        CFDataGetBytePtr(v43);
        CFDataGetLength(v44);
        CFDictionaryGetTypeID();
        v44 = (const __CFData *)CFCreateWithPlistBytes();
        if (!v44)
        {
          APSLogErrorAt();
          v9 = 4294895366;
          goto LABEL_405;
        }
      }
      v45 = (const __CFNumber *)CFDictionaryGetValue(v3, CFSTR("position"));
      v46 = v45;
      if (!v45)
      {
        APSLogErrorAt();
        v184 = 0;
        v7 = 4294895366;
        goto LABEL_398;
      }
      CFNumberGetValue(v45, kCFNumberFloatType, &v229);
      v47 = gLogCategory_APReceiverRequestProcessorMediaControl;
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
      {
        if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
        {
          if (!_LogCategory_Initialize())
            goto LABEL_387;
          v47 = gLogCategory_APReceiverRequestProcessorMediaControl;
        }
        if (v47 == -1)
          _LogCategory_Initialize();
        LogPrintF();
      }
LABEL_387:
      v181 = *(_QWORD *)(v42 + 392);
      if (!v181)
      {
        APSLogErrorAt();
        v46 = 0;
        v184 = 0;
        goto LABEL_398;
      }
      if (*(_BYTE *)(v42 + 408))
      {
        v182 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
        v183 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        v46 = v183;
        if (!v183)
        {
          APSLogErrorAt();
          v46 = 0;
          v184 = 0;
          v7 = 4294895350;
          goto LABEL_398;
        }
        CFDictionarySetValue(v183, CFSTR("type"), CFSTR("seek"));
        CFDictionarySetValue(v46, CFSTR("kind"), CFSTR("request"));
        theDict[0] = 0;
        theDict[1] = 0;
        *(_QWORD *)&v240 = 0;
        CMTimeMakeWithSeconds((CMTime *)theDict, *(float *)&v229, 10000);
        *(_OWORD *)&number.value = *(_OWORD *)theDict;
        number.epoch = v240;
        v184 = CMTimeCopyAsDictionary(&number, v182);
        FigCFDictionarySetValue();
        FigCFDictionarySetValueFromKeyInDict();
        FigCFDictionarySetValue();
        FigCFDictionarySetValueFromKeyInDict();
        if (mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v46, 0, &valuePtr))
          goto LABEL_408;
        v185 = *(_QWORD *)(v42 + 392);
        v186 = valuePtr;
        v187 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                             + 16)
                                                                                 + 64);
        if (v187)
          v188 = v187(v185, v186, 0);
        else
          v188 = -12782;
      }
      else
      {
        v189 = *(uint64_t (**)(uint64_t, const __CFString *, const __CFData *, __CFDictionary *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 120);
        if (!v189)
        {
          v184 = 0;
          v46 = 0;
          goto LABEL_408;
        }
        v188 = v189(v181, CFSTR("position"), v44, v46);
        v46 = 0;
        v184 = 0;
      }
      if (!v188)
      {
        v7 = 0;
        *v225 = 0;
LABEL_398:
        if (v44)
          CFRelease(v44);
        if (v184)
          CFRelease(v184);
        if (v46)
          CFRelease(v46);
        v9 = v7;
LABEL_405:
        v178 = valuePtr;
        if (!valuePtr)
          return v9;
        goto LABEL_380;
      }
LABEL_408:
      APSLogErrorAt();
      goto LABEL_398;
    case 1937010544:
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (mcProcessor_handleStop())
      {
        APSLogErrorAt();
        return 4294895362;
      }
      v9 = 0;
      goto LABEL_254;
  }
  return v9;
}

uint64_t mcProcessor_SetTransportDelegate(uint64_t a1, __int128 *a2)
{
  uint64_t DerivedStorage;
  __int128 v4;
  __int128 v5;
  char v6;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    v4 = *a2;
    v5 = a2[1];
    *(_QWORD *)(DerivedStorage + 352) = *((_QWORD *)a2 + 4);
    *(_OWORD *)(DerivedStorage + 320) = v4;
    *(_OWORD *)(DerivedStorage + 336) = v5;
    v6 = 1;
  }
  else
  {
    v6 = 0;
  }
  *(_BYTE *)(DerivedStorage + 360) = v6;
  return 0;
}

uint64_t mcProcessor_GetTransportDelegate(uint64_t a1, uint64_t *a2)
{
  uint64_t DerivedStorage;
  uint64_t v4;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_BYTE *)(DerivedStorage + 360))
    v4 = DerivedStorage + 320;
  else
    v4 = 0;
  *a2 = v4;
  return 0;
}

void *mcProcessor_CopyProperty(uint64_t a1, const void *a2, int *a3)
{
  uint64_t DerivedStorage;
  uint64_t v6;
  CFTypeRef *v7;
  int v8;
  void *result;
  int v10;
  const void *v11;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    result = 0;
    v10 = -71951;
    goto LABEL_17;
  }
  v6 = DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("rp_startedVideo")))
  {
    v7 = (CFTypeRef *)MEMORY[0x24BDBD270];
    v8 = *(unsigned __int8 *)(v6 + 384);
LABEL_8:
    if (!v8)
      v7 = (CFTypeRef *)MEMORY[0x24BDBD268];
    result = (void *)CFRetain(*v7);
    goto LABEL_16;
  }
  if (!CFEqual(a2, CFSTR("rp_clientDeviceID")))
  {
    if (CFEqual(a2, CFSTR("rp_videoSessionID")))
    {
      result = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt32Type, (const void *)(v6 + 376));
      if (!result)
      {
        v10 = -71950;
        goto LABEL_48;
      }
    }
    else
    {
      if (CFEqual(a2, CFSTR("rp_beingReversed")))
      {
        v7 = (CFTypeRef *)MEMORY[0x24BDBD270];
        v8 = *(unsigned __int8 *)(v6 + 385);
        goto LABEL_8;
      }
      if (CFEqual(a2, CFSTR("rp_oldClient")))
      {
        v7 = (CFTypeRef *)MEMORY[0x24BDBD270];
        v8 = *(unsigned __int8 *)(v6 + 313);
        goto LABEL_8;
      }
      if (CFEqual(a2, CFSTR("rp_sessionUUID")))
      {
        result = CFDataCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], (const UInt8 *)(v6 + 104), 16);
        if (!result)
        {
          v10 = -71950;
          goto LABEL_48;
        }
      }
      else if (CFEqual(a2, CFSTR("rp_sessionToken")))
      {
        result = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt64Type, (const void *)(v6 + 96));
        if (!result)
        {
          v10 = -71950;
          goto LABEL_48;
        }
      }
      else if (CFEqual(a2, CFSTR("rp_purpose")))
      {
        result = (void *)CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], (const char *)(v6 + 297), 0x8000100u);
        if (!result)
        {
          v10 = -71950;
          goto LABEL_48;
        }
      }
      else
      {
        if (CFEqual(a2, CFSTR("rp_encrypted")))
        {
          v7 = (CFTypeRef *)MEMORY[0x24BDBD270];
          v8 = *(unsigned __int8 *)(v6 + 260);
          goto LABEL_8;
        }
        if (CFEqual(a2, CFSTR("rp_authenticated")))
        {
          v7 = (CFTypeRef *)MEMORY[0x24BDBD270];
          v8 = *(unsigned __int8 *)(v6 + 176);
          goto LABEL_8;
        }
        if (!CFEqual(a2, CFSTR("rp_receiverUI")))
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
            && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v10 = -71954;
          goto LABEL_48;
        }
        v11 = *(const void **)(v6 + 392);
        if (!v11 || (result = (void *)CFRetain(v11)) == 0)
        {
          APSLogErrorAt();
          result = 0;
          v10 = -71952;
          goto LABEL_17;
        }
      }
    }
LABEL_16:
    v10 = 0;
    goto LABEL_17;
  }
  result = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt64Type, (const void *)(v6 + 144));
  if (result)
    goto LABEL_16;
  v10 = -71950;
LABEL_48:
  APSLogErrorAt();
  result = 0;
LABEL_17:
  if (a3)
    *a3 = v10;
  return result;
}

uint64_t mcProcessor_SetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t DerivedStorage;
  uint64_t v6;
  CFTypeID v8;
  const UInt8 *BytePtr;
  uint64_t v10;
  __int128 v11;
  CFTypeID v12;
  const UInt8 *v13;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    a3 = 4294895345;
    goto LABEL_51;
  }
  v6 = DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("rp_startedVideo")))
  {
    if (a3)
    {
      a3 = 0;
      *(_BYTE *)(v6 + 384) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
LABEL_51:
    APSLogErrorAt();
    return a3;
  }
  if (CFEqual(a2, CFSTR("rp_clientDeviceID")))
  {
    if (a3)
    {
      a3 = 0;
      *(_QWORD *)(v6 + 144) = CFGetInt64();
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_videoSessionID")))
  {
    if (a3)
    {
      a3 = 0;
      *(_DWORD *)(v6 + 376) = CFGetInt64();
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_transportDelegate")))
  {
    if (!a3)
    {
      *(_OWORD *)(v6 + 320) = 0u;
      *(_OWORD *)(v6 + 336) = 0u;
      *(_OWORD *)(v6 + 345) = 0u;
      return a3;
    }
    v8 = CFGetTypeID((CFTypeRef)a3);
    if (v8 == CFDataGetTypeID())
    {
      if (CFDataGetLength((CFDataRef)a3) == 40)
      {
        BytePtr = CFDataGetBytePtr((CFDataRef)a3);
        a3 = 0;
        v10 = *((_QWORD *)BytePtr + 4);
        v11 = *((_OWORD *)BytePtr + 1);
        *(_OWORD *)(v6 + 320) = *(_OWORD *)BytePtr;
        *(_OWORD *)(v6 + 336) = v11;
        *(_QWORD *)(v6 + 352) = v10;
        *(_BYTE *)(v6 + 360) = 1;
        return a3;
      }
      a3 = 4294895345;
    }
    else
    {
      a3 = 4294895345;
    }
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_beingReversed")))
  {
    if (a3)
    {
      a3 = 0;
      *(_BYTE *)(v6 + 385) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_oldClient")))
  {
    if (a3)
    {
      a3 = 0;
      *(_BYTE *)(v6 + 313) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_sessionUUID")))
  {
    if (!a3)
    {
      *(_QWORD *)(v6 + 104) = 0;
      *(_QWORD *)(v6 + 112) = 0;
      return a3;
    }
    v12 = CFGetTypeID((CFTypeRef)a3);
    if (v12 == CFDataGetTypeID())
    {
      if (CFDataGetLength((CFDataRef)a3) == 16)
      {
        v13 = CFDataGetBytePtr((CFDataRef)a3);
        a3 = 0;
        *(_OWORD *)(v6 + 104) = *(_OWORD *)v13;
        return a3;
      }
      a3 = 4294895345;
    }
    else
    {
      a3 = 4294895345;
    }
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_sessionToken")))
  {
    if (a3)
    {
      a3 = 0;
      *(_QWORD *)(v6 + 96) = CFGetInt64();
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_purpose")))
  {
    if (a3)
    {
      a3 = CFStringCopyUTF8CString();
      if (!(_DWORD)a3)
      {
        *(_OWORD *)(v6 + 297) = MEMORY[0];
        free(0);
        return a3;
      }
    }
    else
    {
      a3 = 4294895345;
    }
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_encrypted")))
  {
    if (a3)
    {
      a3 = 0;
      *(_BYTE *)(v6 + 260) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  if (CFEqual(a2, CFSTR("rp_authenticated")))
  {
    if (a3)
    {
      a3 = 0;
      *(_BYTE *)(v6 + 176) = CFGetInt64() != 0;
      return a3;
    }
    a3 = 4294895345;
    goto LABEL_51;
  }
  a3 = 4294895342;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return a3;
}

uint64_t mcProcessor_addTLSInfo()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, const char *, uint64_t, _QWORD, _QWORD, uint64_t, _BYTE *);
  uint64_t v4;
  uint64_t v5;
  char __s[128];
  _BYTE v8[16];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(_QWORD *)(DerivedStorage + 120) || (v1 = DerivedStorage, !CFDictionaryGetInt64()))
  {
    if (gLogCategory_APReceiverRequestProcessorMediaControl > 50
      || gLogCategory_APReceiverRequestProcessorMediaControl == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
LABEL_10:
    LogPrintF();
    return 0;
  }
  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(uint64_t (**)(uint64_t, const char *, uint64_t, _QWORD, _QWORD, uint64_t, _BYTE *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                                                  + 24);
  if (v3)
  {
    v4 = v3(v2, "Pair-TLS-PSK", 12, 0, 0, 16, v8);
    if (!(_DWORD)v4)
    {
      CFDictionarySetData();
      __s[0] = 0;
      SockAddrToString();
      strlen(__s);
      CFDictionarySetData();
      if (gLogCategory_APReceiverRequestProcessorMediaControl > 50
        || gLogCategory_APReceiverRequestProcessorMediaControl == -1 && !_LogCategory_Initialize())
      {
        return 0;
      }
      goto LABEL_10;
    }
    v5 = v4;
  }
  else
  {
    v5 = 4294954514;
  }
  APSLogErrorAt();
  return v5;
}

uint64_t mcProcessor_fixIPAddressURL()
{
  CMBaseObjectGetDerivedStorage();
  return CFDictionaryGetCString();
}

uint64_t mcProcessor_createAndWrapDataDictionaryForV2(uint64_t a1, int a2, CFMutableDictionaryRef *a3)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v6;
  uint64_t CFDataFromCFPropertyList;
  uint64_t v8;

  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (Mutable)
  {
    v6 = Mutable;
    CFDataFromCFPropertyList = FigCreateCFDataFromCFPropertyList();
    if ((_DWORD)CFDataFromCFPropertyList)
    {
      v8 = CFDataFromCFPropertyList;
      APSLogErrorAt();
      CFRelease(v6);
    }
    else
    {
      CFDictionarySetValue(v6, CFSTR("data"), 0);
      if (a2)
        CFDictionarySetValue(v6, CFSTR("PerformSync"), (const void *)*MEMORY[0x24BDBD270]);
      v8 = 0;
      *a3 = v6;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895346;
  }
  return v8;
}

uint64_t mcProcessor_insertPlayQueueItemV2(uint64_t a1, const __CFDictionary *a2, uint64_t a3, uint64_t a4)
{
  uint64_t DerivedStorage;
  const __CFAllocator *v8;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v10;
  CFMutableDictionaryRef MutableCopy;
  CFMutableDictionaryRef v12;
  CFDictionaryRef v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  CFTypeRef v17;
  uint64_t (*v18)(uint64_t, CFTypeRef, _QWORD);
  uint64_t v19;
  uint64_t Int64;
  CMTime v22;
  CMTime v23;
  CFTypeRef cf;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  cf = 0;
  v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v10 = Mutable;
  MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, a2);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    CFRelease(v10);
    return 4294960568;
  }
  v12 = MutableCopy;
  if (a4 || CFDictionaryGetValue(a2, CFSTR("Start-Position")))
  {
    v13 = 0;
  }
  else if (CFDictionaryGetValue(a2, CFSTR("Start-Date")) || CFDictionaryGetValue(a2, CFSTR("Start-Estimated-Date")))
  {
    v13 = 0;
  }
  else
  {
    Int64 = CFDictionaryGetInt64();
    memset(&v23, 0, sizeof(v23));
    CMTimeMakeWithSeconds(&v23, (double)(unint64_t)Int64, 10000);
    v22 = v23;
    v13 = CMTimeCopyAsDictionary(&v22, v8);
  }
  CFDictionaryGetValue(a2, CFSTR("uuid"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("Content-Location"));
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("HLS-Content-Location"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("textMarkupArray"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("referenceRestrictions"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("outOfBandAlternateTracks"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("inheritURIQueryComponentFromReferencingURI"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("audioOnly"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("tlsPSKEnabled"));
  FigCFDictionarySetValue();
  v14 = (const void *)*MEMORY[0x24BDC0FD0];
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x24BDC0FD0]);
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("buyParams"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("dsid"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("itemID"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("itemType"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("PD-Info"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("Play-Info"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("fpSessionID"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("mz_at"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("purchasedMediaKind"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("userAgent"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("audioMode"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x24BDC0F90]);
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x24BDC0F98]);
  FigCFDictionarySetValue();
  CFDictionarySetValue(v10, CFSTR("type"), CFSTR("insertPlayQueueItem"));
  FigCFDictionarySetValue();
  if (a3)
    FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, CFSTR("tlsPSKEnabled"));
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, v14);
  FigCFDictionarySetValue();
  CFDictionaryGetValue(a2, (const void *)*MEMORY[0x24BDC0FB0]);
  FigCFDictionarySetValue();
  v15 = mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v10, 0, (CFMutableDictionaryRef *)&cf);
  if ((_DWORD)v15)
  {
    v19 = v15;
    APSLogErrorAt();
  }
  else
  {
    v16 = *(_QWORD *)(DerivedStorage + 392);
    v17 = cf;
    v18 = *(uint64_t (**)(uint64_t, CFTypeRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 64);
    if (v18)
      v19 = v18(v16, v17, 0);
    else
      v19 = 4294954514;
  }
  CFRelease(v10);
  if (v13)
    CFRelease(v13);
  CFRelease(v12);
  if (cf)
    CFRelease(cf);
  return v19;
}

uint64_t APReceiverRequestProcessorPreparePlistResponse(const void *a1, CFMutableDictionaryRef *a2)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v5;
  const __CFData *Data;
  const __CFData *v7;
  uint64_t v8;
  uint64_t v9;
  const __CFData *v10;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294895345;
  }
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895346;
  }
  v5 = Mutable;
  Data = CFPropertyListCreateData(0, a1, kCFPropertyListBinaryFormat_v1_0, 0, 0);
  if (!Data)
  {
    v9 = 4294895344;
    APSLogErrorAt();
LABEL_14:
    v10 = v5;
    goto LABEL_7;
  }
  v7 = Data;
  CFDataGetBytePtr(Data);
  CFDataGetLength(v7);
  v8 = CFDictionarySetData();
  if ((_DWORD)v8)
  {
    v9 = v8;
    goto LABEL_13;
  }
  v9 = CFDictionarySetCString();
  if ((_DWORD)v9)
  {
LABEL_13:
    APSLogErrorAt();
    CFRelease(v7);
    goto LABEL_14;
  }
  *a2 = v5;
  v10 = v7;
LABEL_7:
  CFRelease(v10);
  return v9;
}

uint64_t mcProcessor_startVideoPlaybackV2(uint64_t a1)
{
  uint64_t DerivedStorage;
  uint64_t v3;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  BOOL v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, void (*)(uint64_t, const void *, const __CFDictionary *), uint64_t (*)(uint64_t, uint64_t, CFMutableDictionaryRef *), uint64_t, CFMutableDictionaryRef);
  uint64_t v12;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_BYTE *)(DerivedStorage + 384))
    return 0;
  v3 = DerivedStorage;
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v5 = Mutable;
  do
  {
    do
    {
      v6 = __ldxr((unsigned int *)&mcProcessor_getUniqueSessionID_sessionID);
      v7 = __stxr(v6 + 1, (unsigned int *)&mcProcessor_getUniqueSessionID_sessionID);
      v8 = v6 + 1;
      v9 = v6 == -1;
    }
    while (v7);
  }
  while (v9);
  *(_DWORD *)(v3 + 376) = v8;
  CFDictionarySetInt64();
  CFDictionarySetNumber();
  FigCFDictionarySetValue();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v10 = *(_QWORD *)(v3 + 392);
  v11 = *(uint64_t (**)(uint64_t, void (*)(uint64_t, const void *, const __CFDictionary *), uint64_t (*)(uint64_t, uint64_t, CFMutableDictionaryRef *), uint64_t, CFMutableDictionaryRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 48);
  if (!v11)
  {
    v12 = 4294954514;
    goto LABEL_14;
  }
  v12 = v11(v10, mcProcessor_UIControllerVideoPlaybackCallback, mcProcessor_UIControllerCopyTLSInfoCallback, a1, v5);
  if ((_DWORD)v12)
  {
LABEL_14:
    APSLogErrorAt();
    goto LABEL_15;
  }
  *(_BYTE *)(v3 + 384) = 1;
LABEL_15:
  CFRelease(v5);
  return v12;
}

uint64_t APReceiverRequestProcessorPrepareBinaryDataResponse(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v5;
  uint64_t v6;
  uint64_t v7;

  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895346;
  }
  v5 = Mutable;
  v6 = CFDictionarySetData();
  if ((_DWORD)v6)
  {
    v7 = v6;
    goto LABEL_8;
  }
  v7 = CFDictionarySetCString();
  if ((_DWORD)v7)
  {
LABEL_8:
    APSLogErrorAt();
    CFRelease(v5);
    return v7;
  }
  *a3 = v5;
  return v7;
}

void mcProcessor_qualifierToRendererParameters(uint64_t a1, __CFDictionary *a2)
{
  uint64_t Value;
  const void *v4;
  __CFDictionary *Mutable;

  Value = FigCFDictionaryGetValue();
  if (Value)
  {
    v4 = (const void *)Value;
    Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    CFDictionarySetValue(Mutable, CFSTR("uuid"), v4);
    CFDictionarySetValue(a2, CFSTR("item"), Mutable);
    if (Mutable)
      CFRelease(Mutable);
  }
}

uint64_t mcProcessor_handleMediaControlEvent(dispatch_queue_t *a1, const void *a2)
{
  uint64_t result;

  result = AirPlayReceiverServerPostMediaControlEvent(a1, a2);
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30)
  {
    if (gLogCategory_APReceiverRequestProcessorMediaControl != -1)
      return LogPrintF();
    result = _LogCategory_Initialize();
    if ((_DWORD)result)
      return LogPrintF();
  }
  return result;
}

void mcProcessor_addTrafficRegistration()
{
  uint64_t DerivedStorage;
  uint64_t CMBaseObject;
  uint64_t (*v2)(uint64_t, _QWORD, _QWORD, CFTypeRef *);
  int v3;
  uint64_t Int64;
  const void *v5;
  const void *v6;
  _QWORD *v7;
  const void *v8;
  CFTypeRef cf;
  int v10;
  __int16 v11;
  int PeerMACAddress;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v11 = 0;
  v10 = 0;
  cf = 0;
  APTransportGetSharedTransport();
  CMBaseObject = FigTransportGetCMBaseObject();
  v2 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 48);
  if (!v2)
  {
    PeerMACAddress = -12782;
    goto LABEL_11;
  }
  PeerMACAddress = v2(CMBaseObject, *MEMORY[0x24BDFD7E8], *MEMORY[0x24BDBD240], &cf);
  if (PeerMACAddress)
  {
LABEL_11:
    APSLogErrorAt();
    goto LABEL_21;
  }
  v3 = *(_DWORD *)(DerivedStorage + 24);
  if (v3 != 4 && v3 != 128 && v3 != 64)
  {
LABEL_18:
    v8 = *(const void **)(DerivedStorage + 168);
    v7 = (_QWORD *)(DerivedStorage + 168);
    v6 = v8;
    if (v8)
    {
      CFRelease(v6);
      *v7 = 0;
    }
    PeerMACAddress = APTransportTrafficRegistrarInfraTransactionCreate();
    if (!PeerMACAddress)
      goto LABEL_21;
    goto LABEL_11;
  }
  CFDictionaryGetHardwareAddress();
  if (!PeerMACAddress)
    goto LABEL_14;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 40
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  PeerMACAddress = GetPeerMACAddress();
  if (!PeerMACAddress)
  {
LABEL_14:
    Int64 = CFDictionaryGetInt64();
    v5 = *(const void **)(DerivedStorage + 160);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(DerivedStorage + 160) = 0;
    }
    PeerMACAddress = APTransportTrafficRegistrarAWDLTrafficRegistrationCreate();
    if (PeerMACAddress)
      goto LABEL_11;
    if ((Int64 & 0xFFFFFFFFFFFFFFFDLL) != 1)
      goto LABEL_21;
    goto LABEL_18;
  }
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_21:
  if (cf)
    CFRelease(cf);
}

uint64_t mcProcessor_logVideoStarted(double a1, uint64_t a2, const __CFDictionary *a3)
{
  uint64_t result;
  _DWORD *v6;
  _DWORD *v7;

  result = CMBaseObjectGetDerivedStorage();
  if (*(double *)(result + 200) == 0.0)
  {
    v6 = (_DWORD *)result;
    *(_QWORD *)(result + 244) = 0;
    v7 = (_DWORD *)(result + 244);
    *(double *)(result + 200) = a1;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_QWORD *)(result + 252) = 0;
    UUIDGet();
    CFDictionaryGetInt64();
    if (!CFDictionaryGetValue(a3, CFSTR("Start-Position")) && !CFDictionaryGetValue(a3, CFSTR("Start-Date")))
      CFDictionaryGetValue(a3, CFSTR("Start-Estimated-Date"));
    result = CFDictionaryGetInt64();
    switch((int)result)
    {
      case 0:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            CFDictionaryGetValue(a3, CFSTR("uuid"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            CFDictionaryGetValue(a3, CFSTR("path"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            result = LogPrintF();
          }
        }
        ++*v7;
        break;
      case 1:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            CFDictionaryGetValue(a3, CFSTR("uuid"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            CFDictionaryGetValue(a3, CFSTR("Content-Location"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            result = LogPrintF();
          }
        }
        ++v6[63];
        break;
      case 2:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            CFDictionaryGetValue(a3, CFSTR("uuid"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            CFDictionaryGetValue(a3, CFSTR("path"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            result = LogPrintF();
          }
        }
        ++v6[62];
        break;
      case 3:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            CFDictionaryGetValue(a3, CFSTR("uuid"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            CFDictionaryGetValue(a3, CFSTR("Content-Location"));
            if (gLogCategory_APReceiverRequestProcessorMediaControl == -1)
              _LogCategory_Initialize();
            result = LogPrintF();
          }
        }
        ++v6[64];
        break;
      default:
        if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50)
        {
          if (gLogCategory_APReceiverRequestProcessorMediaControl != -1
            || (result = _LogCategory_Initialize(), (_DWORD)result))
          {
            result = LogPrintF();
          }
        }
        break;
    }
  }
  return result;
}

void _mcProcessor_StartKeepAliveTimer(void *a1)
{
  uint64_t DerivedStorage;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  NSObject *v6;
  dispatch_time_t v7;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v3 = DerivedStorage;
  v4 = *(NSObject **)(DerivedStorage + 264);
  if (v4)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 264));
    dispatch_release(v4);
    *(_QWORD *)(v3 + 264) = 0;
  }
  v5 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, *(dispatch_queue_t *)(v3 + 152));
  *(_QWORD *)(v3 + 264) = v5;
  if (v5)
  {
    dispatch_set_context(v5, a1);
    dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v3 + 264), (dispatch_function_t)_mcProcessor_KeepAliveTimer);
    v6 = *(NSObject **)(v3 + 264);
    v7 = dispatch_time(0, 10000000000);
    dispatch_source_set_timer(v6, v7, 0x2540BE400uLL, 0x5F5E100uLL);
    dispatch_resume(*(dispatch_object_t *)(v3 + 264));
  }
  else
  {
    APSLogErrorAt();
  }
}

void mcProcessor_replaceV2RangeKeysWithV1(__CFDictionary *a1, const void *a2)
{
  const __CFArray *TypedValue;
  uint64_t Count;
  const __CFAllocator *v6;
  CFMutableArrayRef Mutable;
  CFMutableArrayRef v8;
  uint64_t v9;
  const void *v10;
  const void *v11;
  const __CFDictionary *TypedValueAtIndex;
  const __CFDictionary *v13;
  CFMutableDictionaryRef MutableCopy;
  __CFDictionary *v15;
  const void *Value;
  const void *v17;
  __CFDictionary *v18;

  CFArrayGetTypeID();
  TypedValue = (const __CFArray *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    Count = CFArrayGetCount(TypedValue);
    v6 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
    Mutable = CFArrayCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], Count, MEMORY[0x24BDBD690]);
    if (Mutable)
    {
      v8 = Mutable;
      v18 = a1;
      if (Count < 1)
      {
LABEL_12:
        CFDictionarySetValue(v18, a2, v8);
      }
      else
      {
        v9 = 0;
        v10 = (const void *)*MEMORY[0x24BDC1140];
        v11 = (const void *)*MEMORY[0x24BDC1138];
        while (1)
        {
          CFDictionaryGetTypeID();
          TypedValueAtIndex = (const __CFDictionary *)CFArrayGetTypedValueAtIndex();
          if (!TypedValueAtIndex)
            break;
          v13 = TypedValueAtIndex;
          MutableCopy = CFDictionaryCreateMutableCopy(v6, 0, TypedValueAtIndex);
          if (!MutableCopy)
            break;
          v15 = MutableCopy;
          Value = CFDictionaryGetValue(v13, v10);
          if (Value)
          {
            CFDictionarySetValue(v15, CFSTR("startCMTime"), Value);
            CFDictionaryRemoveValue(v15, v10);
          }
          v17 = CFDictionaryGetValue(v13, v11);
          if (v17)
          {
            CFDictionarySetValue(v15, CFSTR("durationCMTime"), v17);
            CFDictionaryRemoveValue(v15, v11);
          }
          CFArrayAppendValue(v8, v15);
          CFRelease(v15);
          if (Count == ++v9)
            goto LABEL_12;
        }
        APSLogErrorAt();
      }
      CFRelease(v8);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

uint64_t APReceiverRequestProcessorPrepareXMLPlistResponse(const void *a1, CFMutableDictionaryRef *a2)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v5;
  const __CFData *Data;
  const __CFData *v7;
  uint64_t v8;
  uint64_t v9;
  const __CFData *v10;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294895345;
  }
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    v9 = 4294895346;
    APSLogErrorAt();
    return v9;
  }
  v5 = Mutable;
  Data = CFPropertyListCreateData(0, a1, kCFPropertyListXMLFormat_v1_0, 0, 0);
  if (!Data)
  {
    v9 = 4294895346;
    APSLogErrorAt();
LABEL_14:
    v10 = v5;
    goto LABEL_7;
  }
  v7 = Data;
  CFDataGetBytePtr(Data);
  CFDataGetLength(v7);
  v8 = CFDictionarySetData();
  if ((_DWORD)v8)
  {
    v9 = v8;
    goto LABEL_13;
  }
  v9 = CFDictionarySetCString();
  if ((_DWORD)v9)
  {
LABEL_13:
    APSLogErrorAt();
    CFRelease(v7);
    goto LABEL_14;
  }
  *a2 = v5;
  v10 = v7;
LABEL_7:
  CFRelease(v10);
  return v9;
}

uint64_t mcProcessor_processSetRateInternal(void *a1, const __CFDictionary *a2, _QWORD *a3)
{
  uint64_t DerivedStorage;
  const __CFNumber *Value;
  const __CFNumber *v8;
  NSObject *v9;
  uint64_t v10;
  __CFDictionary *Mutable;
  __CFDictionary *v12;
  uint64_t v13;
  CFMutableDictionaryRef v14;
  uint64_t (*v15)(uint64_t, CFMutableDictionaryRef, _QWORD);
  int v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, const __CFString *, const __CFDictionary *, const __CFNumber *);
  CFMutableDictionaryRef v20;
  float valuePtr;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  valuePtr = 0.0;
  v20 = 0;
  Value = (const __CFNumber *)CFDictionaryGetValue(a2, CFSTR("rate"));
  if (!Value)
  {
    v10 = 4294895362;
LABEL_32:
    APSLogErrorAt();
    return v10;
  }
  v8 = Value;
  CFNumberGetValue(Value, kCFNumberFloatType, &valuePtr);
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_QWORD *)(DerivedStorage + 392))
  {
    v10 = 4294895362;
    goto LABEL_32;
  }
  v9 = *(NSObject **)(DerivedStorage + 264);
  if (valuePtr == 0.0)
  {
    if (v9)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 264));
      dispatch_release(v9);
      *(_QWORD *)(DerivedStorage + 264) = 0;
    }
  }
  else if (!v9)
  {
    _mcProcessor_StartKeepAliveTimer(a1);
  }
  v10 = 4294895362;
  if (*(_BYTE *)(DerivedStorage + 408))
  {
    Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (!Mutable)
    {
      APSLogErrorAt();
      return 4294895350;
    }
    v12 = Mutable;
    CFDictionarySetValue(Mutable, CFSTR("type"), CFSTR("setRate"));
    FigCFDictionarySetFloat32();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    if (mcProcessor_createAndWrapDataDictionaryForV2((uint64_t)v12, 0, &v20))
    {
      APSLogErrorAt();
      goto LABEL_27;
    }
    v13 = *(_QWORD *)(DerivedStorage + 392);
    v14 = v20;
    v15 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                            + 64);
    if (!v15)
      goto LABEL_26;
    v16 = v15(v13, v14, 0);
  }
  else
  {
    v17 = *(_QWORD *)(DerivedStorage + 392);
    v18 = *(uint64_t (**)(uint64_t, const __CFString *, const __CFDictionary *, const __CFNumber *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 120);
    if (!v18)
    {
      v14 = 0;
      v12 = 0;
      goto LABEL_26;
    }
    v16 = v18(v17, CFSTR("rate"), a2, v8);
    v14 = 0;
    v12 = 0;
  }
  if (v16 == -6745)
    goto LABEL_22;
  if (!v16)
  {
    v10 = 0;
    *a3 = 0;
LABEL_22:
    if (!v12)
      goto LABEL_23;
    goto LABEL_27;
  }
LABEL_26:
  APSLogErrorAt();
  if (!v12)
  {
LABEL_23:
    if (!v14)
      return v10;
    goto LABEL_28;
  }
LABEL_27:
  CFRelease(v12);
  v14 = v20;
  if (v20)
LABEL_28:
    CFRelease(v14);
  return v10;
}

void _mcProcessor_KeepAliveTimer()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  NSObject *v2;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v1 = mach_absolute_time() - *(_QWORD *)(DerivedStorage + 272);
  if (v1 <= SecondsToUpTicks())
  {
    if (v1 > SecondsToUpTicks()
      && gLogCategory_APReceiverRequestProcessorMediaControl <= 50
      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
    {
      UpTicksToSeconds();
      LogPrintF();
    }
  }
  else
  {
    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 60
      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
    {
      UpTicksToSeconds();
      LogPrintF();
    }
    v2 = *(NSObject **)(DerivedStorage + 264);
    if (v2)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(DerivedStorage + 264));
      dispatch_release(v2);
      *(_QWORD *)(DerivedStorage + 264) = 0;
    }
  }
}

void mcProcessor_UIControllerVideoPlaybackCallback(uint64_t a1, const void *a2, const __CFDictionary *a3)
{
  uint64_t DerivedStorage;
  const __CFData *Value;
  const __CFAllocator *v8;
  const __CFDictionary *v9;
  const __CFDictionary *v10;
  const void *v11;
  const void *v12;
  __CFDictionary *MutableCopy;
  const void *v14;
  const __CFDictionary *v15;
  const void *v16;
  const void *v17;
  CFMutableDictionaryRef Mutable;
  const void *v19;
  const void *v20;
  __CFDictionary *v21;
  pthread_mutex_t **v22;
  const __CFDictionary *v23;
  __CFDictionary *v24;
  __CFDictionary *v25;
  __CFDictionary *v26;
  const __CFDictionary *v27;
  const void *v28;
  const __CFString *v29;
  __CFDictionary *v30;
  const void *v31;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1
    || !a3
    || (Value = (const __CFData *)CFDictionaryGetValue(a3, CFSTR("data"))) == 0
    || (v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240],
        (v9 = (const __CFDictionary *)CFPropertyListCreateWithData((CFAllocatorRef)*MEMORY[0x24BDBD240], Value, 0, 0, 0)) == 0))
  {
    APSLogErrorAt();
    return;
  }
  v10 = v9;
  CFDictionaryGetValue(v9, CFSTR("kind"));
  CFDictionaryGetValue(v10, CFSTR("type"));
  if (!FigCFEqual())
  {
    MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, v10);
    v14 = CFDictionaryGetValue(v10, CFSTR("name"));
    CFDictionarySetValue(MutableCopy, CFSTR("sessionID"), a2);
    CFDictionaryGetValue(MutableCopy, CFSTR("type"));
    if (FigCFEqual())
    {
      v15 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, CFSTR("item"));
      if (v15)
        v16 = CFDictionaryGetValue(v15, CFSTR("uuid"));
      else
        v16 = 0;
      CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x24BDC0F10], v14);
      CFDictionaryRemoveValue(MutableCopy, CFSTR("kind"));
      CFDictionaryRemoveValue(MutableCopy, CFSTR("name"));
      if (v16)
        CFDictionarySetValue(MutableCopy, CFSTR("uuid"), v16);
      v23 = (const __CFDictionary *)CFDictionaryGetValue(v10, CFSTR("params"));
      if (v23)
      {
        v24 = CFDictionaryCreateMutableCopy(v8, 0, v23);
        v21 = v24;
        if (v24)
        {
          mcProcessor_replaceV2RangeKeysWithV1(v24, (const void *)*MEMORY[0x24BDC10A8]);
          mcProcessor_replaceV2RangeKeysWithV1(v21, (const void *)*MEMORY[0x24BDC1070]);
          CFDictionarySetValue(MutableCopy, CFSTR("params"), v21);
        }
        goto LABEL_54;
      }
LABEL_53:
      v21 = 0;
LABEL_54:
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      AirPlayReceiverServerPostMediaControlEvent(*(dispatch_queue_t **)(DerivedStorage + 128), MutableCopy);
      Mutable = 0;
      v20 = 0;
      goto LABEL_62;
    }
    CFDictionaryGetValue(MutableCopy, CFSTR("type"));
    if (!FigCFEqual())
    {
      CFDictionaryGetValue(MutableCopy, CFSTR("type"));
      if (FigCFEqual())
      {
        CFDictionaryRemoveValue(MutableCopy, CFSTR("type"));
        CFDictionarySetValue(MutableCopy, (const void *)*MEMORY[0x24BDC0F18], (const void *)*MEMORY[0x24BDC0F68]);
      }
      goto LABEL_53;
    }
    if (FigCFEqual()
      || FigCFEqual()
      || FigCFEqual()
      || FigCFEqual()
      || FigCFEqual())
    {
      if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
        && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      Mutable = 0;
      v20 = 0;
      v21 = 0;
LABEL_62:
      CFRelease(v10);
      if (MutableCopy)
        CFRelease(MutableCopy);
      if (v20)
        CFRelease(v20);
      if (Mutable)
        CFRelease(Mutable);
      if (v21)
      {
        v25 = v21;
LABEL_70:
        CFRelease(v25);
        return;
      }
      return;
    }
    v27 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, CFSTR("item"));
    if (v27 || (v27 = (const __CFDictionary *)CFDictionaryGetValue(MutableCopy, CFSTR("itemCurrent"))) != 0)
    {
      v28 = CFDictionaryGetValue(v27, CFSTR("uuid"));
      CFDictionarySetValue(MutableCopy, CFSTR("type"), v14);
      if (!v28)
      {
LABEL_83:
        CFDictionaryRemoveValue(MutableCopy, CFSTR("kind"));
        CFDictionaryRemoveValue(MutableCopy, CFSTR("name"));
        goto LABEL_53;
      }
      v29 = CFSTR("uuid");
      v30 = MutableCopy;
      v31 = v28;
    }
    else
    {
      v29 = CFSTR("type");
      v30 = MutableCopy;
      v31 = v14;
    }
    CFDictionarySetValue(v30, v29, v31);
    goto LABEL_83;
  }
  v11 = CFDictionaryGetValue(v10, CFSTR("messageID"));
  if (!v11
    || (v12 = v11, !FigCFEqual())
    && (pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 432)),
        v17 = CFDictionaryGetValue(*(CFDictionaryRef *)(DerivedStorage + 416), v12),
        CFDictionaryRemoveValue(*(CFMutableDictionaryRef *)(DerivedStorage + 416), v12),
        pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 432)),
        !v17))
  {
    APSLogErrorAt();
    v25 = v10;
    goto LABEL_70;
  }
  if (FigCFEqual())
  {
    Mutable = CFDictionaryCreateMutable(v8, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (!Mutable)
    {
      MutableCopy = 0;
      v20 = 0;
      v21 = 0;
      goto LABEL_38;
    }
    v19 = CFDictionaryGetValue(v10, CFSTR("key"));
    if (v19)
    {
      v20 = (const void *)objc_msgSend(objc_alloc(MEMORY[0x24BDBCE50]), "initWithBase64EncodedString:options:", v19, 0);
      FigCFDictionarySetValue();
    }
    else
    {
      v20 = 0;
    }
    CFDictionaryGetValue(v10, CFSTR("error"));
    FigCFDictionarySetValue();
    v22 = (pthread_mutex_t **)(DerivedStorage + 448);
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 448));
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 440), v12, Mutable);
    MutableCopy = 0;
    goto LABEL_36;
  }
  if (FigCFEqual())
  {
    CFDictionaryGetValue(v10, CFSTR("info"));
    v21 = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
    if (!v21)
    {
      MutableCopy = 0;
      Mutable = 0;
      v20 = 0;
LABEL_38:
      if (FigSemaphoreSignal())
        APSLogErrorAt();
      goto LABEL_62;
    }
    CFDictionaryGetValue(v10, CFSTR("error"));
    FigCFDictionarySetValue();
    v22 = (pthread_mutex_t **)(DerivedStorage + 448);
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 448));
    FigCFDictionarySetValue();
    MutableCopy = 0;
    Mutable = 0;
    v20 = 0;
LABEL_37:
    pthread_mutex_unlock(*v22);
    goto LABEL_38;
  }
  if (!FigCFEqual())
  {
    MutableCopy = CFDictionaryCreateMutableCopy(v8, 0, v10);
    CFDictionaryRemoveValue(MutableCopy, CFSTR("type"));
    CFDictionaryRemoveValue(MutableCopy, CFSTR("kind"));
    v22 = (pthread_mutex_t **)(DerivedStorage + 448);
    pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 448));
    CFDictionarySetValue(*(CFMutableDictionaryRef *)(DerivedStorage + 440), v12, MutableCopy);
    Mutable = 0;
    v20 = 0;
LABEL_36:
    v21 = 0;
    goto LABEL_37;
  }
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v26 = (__CFDictionary *)FigCFDictionaryCreateMutableCopy();
  CFDictionarySetValue(v26, CFSTR("sessionID"), a2);
  AirPlayReceiverServerPostMediaControlEvent(*(dispatch_queue_t **)(DerivedStorage + 128), v26);
  CFRelease(v10);
  if (v26)
  {
    v25 = v26;
    goto LABEL_70;
  }
}

uint64_t mcProcessor_UIControllerCopyTLSInfoCallback(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  uint64_t (*v6)(uint64_t, const char *, uint64_t, _QWORD, _QWORD, uint64_t, char *);
  uint64_t v7;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v9;
  char __s[128];
  char v12[16];
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 30
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    return a1;
  }
  a1 = *(_QWORD *)(DerivedStorage + 120);
  if (a1)
  {
    v6 = *(uint64_t (**)(uint64_t, const char *, uint64_t, _QWORD, _QWORD, uint64_t, char *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
    if (v6)
    {
      v7 = v6(a1, "Pair-TLS-PSK", 12, 0, 0, 16, v12);
      if (!(_DWORD)v7)
      {
        Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        if (Mutable)
        {
          v9 = Mutable;
          CFDictionarySetData();
          __s[0] = 0;
          SockAddrToString();
          strlen(__s);
          CFDictionarySetData();
          a1 = 0;
          *a3 = v9;
          return a1;
        }
        APSLogErrorAt();
        a1 = 4294960568;
        goto LABEL_13;
      }
      a1 = v7;
    }
    else
    {
      a1 = 4294954514;
    }
    APSLogErrorAt();
LABEL_13:
    if (gLogCategory_APReceiverRequestProcessorMediaControl <= 90
      && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return a1;
}

uint64_t mcProcessor_Finalize()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  __int128 v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  uint64_t result;
  uint64_t (*v15)(_QWORD);

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v1 = CMBaseObjectGetDerivedStorage();
  *(_BYTE *)(v1 + 176) = 0;
  APReceiverFairPlayHelperRemoveAllFPSessions(*(_QWORD *)(v1 + 400));
  *(_QWORD *)(v1 + 185) = 0;
  *(_QWORD *)(v1 + 177) = 0;
  v2 = 0uLL;
  *(_OWORD *)(v1 + 200) = 0u;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_OWORD *)(v1 + 225) = 0u;
  *(_QWORD *)(v1 + 252) = 0;
  *(_QWORD *)(v1 + 244) = 0;
  *(_DWORD *)(v1 + 16) = 0;
  *(_WORD *)(v1 + 20) = 0;
  *(_QWORD *)(v1 + 144) = 0;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_OWORD *)(v1 + 72) = 0u;
  *(_OWORD *)(v1 + 88) = 0u;
  *(_OWORD *)(v1 + 104) = 0u;
  v3 = *(const void **)(v1 + 152);
  if (v3)
  {
    CFRelease(v3);
    v2 = 0uLL;
  }
  *(_BYTE *)(v1 + 176) = 0;
  *(_WORD *)(v1 + 260) = 0;
  *(_BYTE *)(v1 + 360) = 0;
  *(_OWORD *)(v1 + 272) = v2;
  *(_OWORD *)(v1 + 288) = v2;
  *(_OWORD *)(v1 + 299) = v2;
  v4 = *(const void **)(v1 + 368);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(v1 + 368) = 0;
  }
  *(_WORD *)(v1 + 384) = 0;
  *(_QWORD *)(v1 + 376) = 0;
  if (gLogCategory_APReceiverRequestProcessorMediaControl <= 50
    && (gLogCategory_APReceiverRequestProcessorMediaControl != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v5 = *(const void **)(DerivedStorage + 120);
  if (v5)
    CFRelease(v5);
  v6 = *(const void **)(DerivedStorage + 392);
  if (v6)
  {
    CFRelease(v6);
    *(_QWORD *)(DerivedStorage + 392) = 0;
  }
  v7 = *(const void **)(DerivedStorage + 400);
  if (v7)
  {
    CFRelease(v7);
    *(_QWORD *)(DerivedStorage + 400) = 0;
  }
  v8 = *(const void **)(DerivedStorage + 128);
  if (v8)
  {
    CFRelease(v8);
    *(_QWORD *)(DerivedStorage + 128) = 0;
  }
  v9 = *(const void **)(DerivedStorage + 136);
  if (v9)
  {
    CFRelease(v9);
    *(_QWORD *)(DerivedStorage + 136) = 0;
  }
  v10 = *(const void **)(DerivedStorage + 416);
  if (v10)
  {
    CFRelease(v10);
    *(_QWORD *)(DerivedStorage + 416) = 0;
  }
  v11 = *(const void **)(DerivedStorage + 440);
  if (v11)
  {
    CFRelease(v11);
    *(_QWORD *)(DerivedStorage + 440) = 0;
  }
  v12 = *(const void **)(DerivedStorage + 160);
  if (v12)
  {
    CFRelease(v12);
    *(_QWORD *)(DerivedStorage + 160) = 0;
  }
  v13 = *(const void **)(DerivedStorage + 168);
  if (v13)
  {
    CFRelease(v13);
    *(_QWORD *)(DerivedStorage + 168) = 0;
  }
  FigSimpleMutexDestroy();
  result = FigSimpleMutexDestroy();
  if (*(_BYTE *)(DerivedStorage + 360))
  {
    v15 = *(uint64_t (**)(_QWORD))(DerivedStorage + 336);
    if (v15)
      result = v15(*(_QWORD *)(DerivedStorage + 320));
  }
  *(_BYTE *)(DerivedStorage + 360) = 0;
  return result;
}

CFStringRef mcProcessor_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;

  v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverRequestProcessorMediaControl %p>"), a1);
}

uint64_t _APReceiverAudioSessionGetTypeID()
{
  uint64_t result;

  result = _CFRuntimeRegisterClass();
  gAPReceiverAudioSessionTypeID = result;
  return result;
}

void _APReceiverAudioSessionFinalize(uint64_t a1)
{
  const void *v2;
  CFTypeRef v3;
  NSObject *v4;
  NSObject *v5;
  const void *v6;
  const void *v7;
  _QWORD *v8;
  void (*v9)(_QWORD);

  v2 = *(const void **)(a1 + 32);
  if (v2)
    v3 = CFRetain(v2);
  else
    v3 = 0;
  APReceiverAudioSessionInvalidate(a1);
  v4 = *(NSObject **)(a1 + 296);
  if (v4)
    dispatch_release(v4);
  v5 = *(NSObject **)(a1 + 288);
  if (v5)
    dispatch_release(v5);
  v6 = *(const void **)(a1 + 320);
  if (v6)
    CFRelease(v6);
  v7 = *(const void **)(a1 + 32);
  if (v7)
  {
    CFRelease(v7);
    *(_QWORD *)(a1 + 32) = 0;
  }
  v8 = *(_QWORD **)(a1 + 216);
  if (v8)
  {
    APReceiverAudioSessionPlatformFinalize(v8);
    *(_QWORD *)(a1 + 216) = 0;
  }
  v9 = *(void (**)(_QWORD))(a1 + 48);
  if (v9)
    v9(*(_QWORD *)(a1 + 40));
  if (*(_DWORD *)(a1 + 24))
  {
    *(_DWORD *)(a1 + 24) = 0;
    if (gLogCategory_APReceiverAudioSession > 50)
      goto LABEL_25;
    if (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize())
      LogPrintF();
  }
  if (gLogCategory_APReceiverAudioSession <= 50
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_25:
  if (v3)
    CFRelease(v3);
}

void APReceiverAudioSessionInvalidate(uint64_t a1)
{
  unsigned int *v2;
  unsigned int v3;
  const void *v4;
  NSObject *v5;
  void (*v6)(_QWORD);

  if (a1)
  {
    v2 = (unsigned int *)(a1 + 16);
    do
      v3 = __ldaxr(v2);
    while (__stlxr(1u, v2));
    if (!v3)
    {
      v4 = *(const void **)(a1 + 280);
      if (v4)
      {
        CFRelease(v4);
        *(_QWORD *)(a1 + 280) = 0;
      }
      if (*(_QWORD *)(a1 + 272))
      {
        FigPKDStopAirPlayReceiverSession();
        *(_QWORD *)(a1 + 272) = 0;
      }
      v5 = *(NSObject **)(a1 + 296);
      if (v5)
      {
        dispatch_source_cancel(v5);
        dispatch_sync_f(*(dispatch_queue_t *)(a1 + 288), 0, (dispatch_function_t)audioSession_sinkFlush);
      }
      if (*(_QWORD *)(a1 + 216))
      {
        APReceiverAudioSessionPlatformControl((_QWORD *)a1, CFSTR("RASP::FlushAudio"));
        APReceiverAudioSessionPlatformControl((_QWORD *)a1, CFSTR("RASP::StopAudioIO"));
      }
      v6 = *(void (**)(_QWORD))(a1 + 56);
      if (v6)
        v6(*(_QWORD *)(a1 + 40));
      if (gLogCategory_APReceiverAudioSession <= 50
        && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
}

uint64_t APReceiverAudioSessionCreate(int a1, char *a2, const void *a3, uint64_t *a4)
{
  uint64_t Instance;
  uint64_t v8;
  int Int64Ranged;
  uint64_t Int64;
  uint64_t v11;
  const __CFAllocator *v12;
  __CFDictionary *Mutable;
  const void *v14;
  int v15;
  BOOL v16;
  int v17;
  int v18;
  unsigned int v19;
  char v20;
  char v21;
  const void *v22;
  _QWORD *v23;
  _QWORD *v24;
  const void *v25;
  uint64_t v26;
  dispatch_queue_t v27;
  dispatch_queue_t v28;
  const __CFArray *v29;
  CFIndex v30;
  __CFDictionary *v31;
  int v32;
  char v33;
  const void *v34;
  _QWORD *v35;
  uint64_t v36;
  const void *v37;
  const void *v38;
  CFTypeRef v39;
  CFTypeID v40;
  const void *v41;
  CFTypeRef v42;
  _DWORD *v43;
  const void *v44;
  __CFDictionary *v45;
  __CFDictionary *v46;
  __CFDictionary *v47;
  int v48;
  __CFDictionary *v49;
  const void **v50;
  const void *v51;
  CFTypeRef v52;
  CFTypeRef *v53;
  uint64_t ASBD;
  int v55;
  int v56;
  const void *v57;
  CFTypeID v58;
  const void *v59;
  const void *v60;
  int v61;
  int v62;
  uint64_t i;
  uint64_t v64;
  uint64_t v65;
  int CFPreferenceNumberWithDefault;
  uint64_t v67;
  void (*v68)(uint64_t, _QWORD, const __CFAllocator *, AudioStreamBasicDescription *);
  Float64 mSampleRate;
  const void *v70;
  _BOOL4 v71;
  int v72;
  int v73;
  const __CFDictionary *v74;
  int v75;
  uint64_t v76;
  CFNumberRef v77;
  void *v78;
  uint64_t v79;
  void (*v80)(uint64_t, _QWORD, const __CFAllocator *, void **);
  void *v81;
  const void *v82;
  const __CFString *v83;
  const void *v84;
  CFTypeRef v85;
  NSObject *v86;
  NSObject *v87;
  NSObject *v88;
  double v89;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  CFMutableDictionaryRef v95;
  const __CFArray *TypedValue;
  CFIndex Count;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  int v102;
  void *v103;
  int v104;
  int v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  int v111;
  size_t BufferSize;
  OSStatus v113;
  unint64_t v114;
  UInt32 v115;
  unsigned int v116;
  OSStatus v117;
  unsigned int v118;
  OSStatus v119;
  void *v120;
  void *v121;
  void *v122;
  _DWORD *v123;
  __CFDictionary *v124;
  const void **v125;
  __CFDictionary *v126;
  uint64_t *v127;
  int v128;
  uint64_t CMBaseObject;
  uint64_t (*v130)(uint64_t, _QWORD, uint64_t);
  uint64_t v131;
  uint64_t DefaultAirPlayMallocZoneCFAllocator;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, _QWORD, uint64_t);
  uint64_t v135;
  uint64_t (*v136)(uint64_t, _QWORD, _QWORD);
  uint64_t v137;
  uint64_t (*v138)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), _QWORD, _QWORD);
  uint64_t v139;
  uint64_t (*v140)(uint64_t);
  unsigned int v141;
  uint64_t v142;
  unsigned int v143;
  int v144;
  OSStatus v145;
  void *v146;
  uint64_t v147;
  uint64_t v148;
  __CFDictionary *v149;
  uint64_t v150;
  uint64_t ProtocolVTable;
  uint64_t v152;
  uint64_t (*v153)(uint64_t, void *, const void *);
  NSObject *v154;
  NSObject *v155;
  NSObject *v156;
  NSObject *v157;
  void *v158;
  int v159;
  __CFDictionary *v160;
  char v161;
  __CFDictionary *v162;
  int v164;
  CFNumberRef cf;
  void *value;
  unsigned int v167;
  __int128 v168;
  uint64_t v169;
  uint64_t AudioFormatIndex;
  uint64_t v171;
  int v172;
  unsigned int inPropertyData;
  char v174;
  char v175;
  __int16 v176;
  char v177;
  char v178;
  __int16 v179;
  int v180;
  int v181;
  unsigned int v182;
  AudioStreamBasicDescription inSourceFormat;
  CFTypeRef v184[4];
  __int128 v185;
  uint64_t v186;
  AudioStreamBasicDescription inDestinationFormat;
  uint64_t v188;

  v188 = *MEMORY[0x24BDAC8D0];
  v167 = 0;
  cf = 0;
  value = 0;
  if (gLogCategory_APReceiverAudioSession <= 30
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (gAPReceiverAudioSessionInitOnce != -1)
    dispatch_once_f(&gAPReceiverAudioSessionInitOnce, 0, (dispatch_function_t)_APReceiverAudioSessionGetTypeID);
  Instance = _CFRuntimeCreateInstance();
  v8 = Instance;
  if (!Instance)
  {
    APSLogErrorAt();
    Mutable = 0;
LABEL_421:
    v167 = -6728;
    goto LABEL_244;
  }
  *(_QWORD *)(Instance + 320) = 0;
  *(_OWORD *)(Instance + 288) = 0u;
  *(_OWORD *)(Instance + 304) = 0u;
  *(_OWORD *)(Instance + 256) = 0u;
  *(_OWORD *)(Instance + 272) = 0u;
  *(_OWORD *)(Instance + 224) = 0u;
  *(_OWORD *)(Instance + 240) = 0u;
  *(_OWORD *)(Instance + 192) = 0u;
  *(_OWORD *)(Instance + 208) = 0u;
  *(_OWORD *)(Instance + 160) = 0u;
  *(_OWORD *)(Instance + 176) = 0u;
  *(_OWORD *)(Instance + 128) = 0u;
  *(_OWORD *)(Instance + 144) = 0u;
  *(_OWORD *)(Instance + 96) = 0u;
  *(_OWORD *)(Instance + 112) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 80) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 16) = 0u;
  Int64Ranged = CFDictionaryGetInt64Ranged();
  Int64 = CFDictionaryGetInt64();
  v11 = CFDictionaryGetInt64();
  *(_QWORD *)(v8 + 216) = 0;
  *(_BYTE *)(v8 + 20) = v11 != 0;
  *(_DWORD *)(v8 + 24) = a1;
  v12 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
LABEL_420:
    APSLogErrorAt();
    goto LABEL_421;
  }
  if (Int64)
  {
    v14 = (const void *)CFStringCreateF();
    *(_QWORD *)(v8 + 32) = v14;
    if (v167)
      goto LABEL_450;
  }
  else if (v11)
  {
    v14 = (const void *)CFStringCreateF();
    *(_QWORD *)(v8 + 32) = v14;
    if (v167)
      goto LABEL_450;
  }
  else
  {
    v14 = (const void *)CFStringCreateF();
    *(_QWORD *)(v8 + 32) = v14;
    if (v167)
      goto LABEL_450;
  }
  CFDictionarySetValue(Mutable, CFSTR("RASP::LogPrefix"), v14);
  v15 = APSIsATVInHTGroup();
  if (Int64)
    v16 = 1;
  else
    v16 = v15 == 0;
  v17 = !v16;
  v164 = v17;
  if (v16)
  {
    if (Int64Ranged)
      goto LABEL_34;
    goto LABEL_29;
  }
  if (gLogCategory_APReceiverAudioSession <= 50)
  {
    if (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize())
      LogPrintF();
LABEL_29:
    if (gLogCategory_APReceiverAudioSession <= 50
      && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  CFDictionarySetValue(Mutable, CFSTR("RASP::DisablePlatformRendering"), (const void *)*MEMORY[0x24BDBD270]);
LABEL_34:
  v18 = *(_DWORD *)(v8 + 24);
  if (v18 == 103)
  {
    if (!Int64Ranged)
    {
      *(_OWORD *)&inSourceFormat.mSampleRate = *(_OWORD *)a2;
      *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)(a2 + 12);
      v167 = audioSession_setupGhostAudio(v8, &inSourceFormat, a3);
      if (v167)
        goto LABEL_450;
      goto LABEL_194;
    }
    if ((v164 & 1) == 0 && APSSettingsGetIntWithDefault())
    {
      if (gLogCategory_APReceiverAudioSession <= 50
        && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("PKDDeviceContext")))
      {
        v167 = FigPKDStartAirPlayReceiverSession();
        if (v167)
          goto LABEL_450;
        *(_QWORD *)(v8 + 272) = 0;
        *(_QWORD *)(v8 + 280) = CFRetain(0);
      }
      v33 = *a2;
      v161 = a2[1];
      *(_OWORD *)&inDestinationFormat.mSampleRate = *(_OWORD *)(a2 + 2);
      *(_OWORD *)((char *)&inDestinationFormat.mFormatID + 2) = *(_OWORD *)(a2 + 12);
      v34 = *(const void **)(v8 + 32);
      inPropertyData = 0;
      v184[0] = 0;
      if (gLogCategory_APReceiverAudioSessionBufferedHose <= 30
        && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v35 = malloc_type_calloc(1uLL, 0x140uLL, 0x1060040F4D3EFBAuLL);
      if (!v35)
      {
        APSLogErrorAt();
        v47 = 0;
        v46 = 0;
        v45 = 0;
        v44 = 0;
        inPropertyData = -72150;
        goto LABEL_116;
      }
      v36 = (uint64_t)v35;
      *v35 = v8;
      v35[3] = CFRetain(v34);
      *(_DWORD *)(v36 + 16) = 103;
      v37 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("ClientID"));
      if (v37)
        v37 = CFRetain(v37);
      *(_DWORD *)(v36 + 64) = -1;
      *(_QWORD *)(v36 + 32) = v37;
      *(_DWORD *)(v36 + 80) = -1;
      v38 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("NetworkClock"));
      if (v38)
      {
        v39 = CFRetain(v38);
        *(_QWORD *)(v36 + 168) = v39;
        if (v39)
        {
          v40 = CFGetTypeID(v39);
          if (v40 == APSNetworkClockGetTypeID())
          {
            v41 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("AudioFormat"));
            if (v41)
            {
              v42 = CFRetain(v41);
              *(_QWORD *)(v36 + 152) = v42;
              if (v42)
              {
                *(_BYTE *)(v36 + 116) = CFDictionaryGetInt64() != 0;
                if (inPropertyData)
                  goto LABEL_485;
                v43 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("ReceiverSession"));
                if (!v43)
                {
                  APSLogErrorAt();
                  v44 = 0;
                  v45 = 0;
                  v46 = 0;
                  v47 = 0;
                  inPropertyData = APSSignalErrorAt();
                  goto LABEL_115;
                }
                *(_DWORD *)(v36 + 236) = v43[124];
                APSCopyClusterInfo();
                if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                  && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                v92 = FigCFWeakReferenceHolderCreateWithReferencedObject();
                *(_QWORD *)(v36 + 8) = v92;
                if (!v92)
                {
LABEL_477:
                  APSLogErrorAt();
                  v44 = 0;
                  v45 = 0;
LABEL_478:
                  v46 = 0;
LABEL_479:
                  v47 = 0;
                  v48 = -6728;
                  goto LABEL_114;
                }
                v93 = CFDictionaryGetInt64Ranged();
                *(_DWORD *)(v36 + 40) = v93;
                if (v93 == 1095778640 || v93 == 1381257248)
                {
                  v94 = FigSimpleMutexCreate();
                  *(_QWORD *)(v36 + 192) = v94;
                  if (v94)
                  {
                    *(_QWORD *)(v36 + 216) = 0;
                    *(_QWORD *)(v36 + 200) = 0;
                    v95 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                    *(_QWORD *)(v36 + 208) = v95;
                    if (v95)
                    {
                      if (!CFDictionaryContainsKey((CFDictionaryRef)a3, CFSTR("MediaDataControl")))
                      {
                        v45 = 0;
LABEL_354:
                        v160 = v45;
                        if (APSSettingsIsFeatureEnabled())
                        {
                          v126 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                          v47 = v126;
                          if (!v126)
                          {
                            APSLogErrorAt();
                            v44 = 0;
                            v46 = 0;
                            goto LABEL_841;
                          }
                          CFDictionarySetValue(v126, (const void *)*MEMORY[0x24BDFD760], (const void *)*MEMORY[0x24BDBD270]);
                          CFDictionarySetInt64();
                          FigCFDictionaryGetValue();
                          FigCFDictionarySetValue();
                          v127 = (uint64_t *)(v36 + 56);
                          v162 = v47;
                          inPropertyData = APTransportConnectionTCPUnbufferedNWCreate();
                          if (!inPropertyData)
                          {
                            v128 = *(_DWORD *)(v36 + 40);
                            CMBaseObject = APTransportConnectionGetCMBaseObject();
                            v130 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                                  + 8)
                                                                                      + 56);
                            if (v130)
                            {
                              if (v128 == 1095778640)
                                v131 = *MEMORY[0x24BDFD778];
                              else
                                v131 = *MEMORY[0x24BDFD788];
                              inPropertyData = v130(CMBaseObject, *MEMORY[0x24BDFD7B0], v131);
                              if (!inPropertyData)
                              {
                                DefaultAirPlayMallocZoneCFAllocator = APSAllocatorGetDefaultAirPlayMallocZoneCFAllocator();
                                v133 = APTransportConnectionGetCMBaseObject();
                                v134 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                                          + 56);
                                v45 = v160;
                                if (v134)
                                {
                                  inPropertyData = v134(v133, *MEMORY[0x24BDFD790], DefaultAirPlayMallocZoneCFAllocator);
                                  if (!inPropertyData)
                                  {
                                    v135 = APTransportConnectionGetCMBaseObject();
                                    v136 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                                             + 56);
                                    if (v136)
                                    {
                                      inPropertyData = v136(v135, *MEMORY[0x24BDFD7C8], *MEMORY[0x24BDBD268]);
                                      if (!inPropertyData)
                                      {
                                        v137 = *v127;
                                        v138 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)(int, uint64_t, uint64_t), _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
                                        if (v138)
                                        {
                                          inPropertyData = v138(v137, v36, audioSessionBufferedHose_handleAudioDataConnectionEvent, 0, 0);
                                          if (!inPropertyData)
                                          {
                                            v139 = *v127;
                                            v140 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                                 + 16)
                                                                                     + 8);
                                            v46 = v162;
                                            if (!v140)
                                            {
                                              inPropertyData = -12782;
                                              goto LABEL_409;
                                            }
                                            inPropertyData = v140(v139);
                                            if (inPropertyData)
                                              goto LABEL_409;
                                            *(_DWORD *)(v36 + 108) = APSGetFBOPropertyInt64();
                                            if (inPropertyData)
                                              goto LABEL_409;
                                            goto LABEL_811;
                                          }
                                        }
                                        else
                                        {
                                          inPropertyData = -12782;
                                        }
                                      }
                                    }
                                    else
                                    {
                                      inPropertyData = -12782;
                                    }
                                  }
                                }
                                else
                                {
                                  inPropertyData = -12782;
                                }
                                APSLogErrorAt();
                                v44 = 0;
                                v47 = 0;
LABEL_390:
                                v46 = v162;
                                goto LABEL_115;
                              }
                            }
                            else
                            {
                              inPropertyData = -12782;
                            }
                          }
                          APSLogErrorAt();
                          v44 = 0;
                          v47 = 0;
LABEL_378:
                          v45 = v160;
                          v46 = v162;
                          goto LABEL_115;
                        }
                        *(_DWORD *)(v36 + 120) = FigGetCFPreferenceNumberWithDefault();
                        *(_BYTE *)(v36 + 124) = 0;
                        if (FigGetCFPreferenceNumberWithDefault())
                        {
                          v141 = ServerSocketOpen();
                          inPropertyData = v141;
                          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50)
                          {
                            if (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                              || _LogCategory_Initialize())
                            {
                              LogPrintF();
                            }
                            v141 = inPropertyData;
                          }
                        }
                        else
                        {
                          v141 = ServerSocketOpen();
                          inPropertyData = v141;
                        }
                        if (!v141)
                        {
                          inPropertyData = SocketSetP2P();
                          if (!inPropertyData)
                          {
                            *(_DWORD *)(v36 + 112) = 0;
                            v142 = CFDictionaryGetInt64();
                            *(_BYTE *)(v36 + 117) = v142 != 0;
                            if (!inPropertyData)
                            {
                              if (!v142)
                                SocketSetQoS();
                              if (gLogCategory_APReceiverAudioSessionBufferedHose <= 30
                                && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                                 || _LogCategory_Initialize()))
                              {
                                if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 2
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 3
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 5
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 7
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
                                  && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
                                {
                                  APSAudioFormatDescriptionGetAudioFormatIndex();
                                }
                                LogPrintF();
                              }
                              inPropertyData = OpenSelfConnectedLoopbackSocket();
                              if (!inPropertyData)
                              {
                                v147 = FigSimpleMutexCreate();
                                *(_QWORD *)(v36 + 88) = v147;
                                if (v147)
                                {
                                  v46 = 0;
                                  *(_DWORD *)(v36 + 104) = 36;
LABEL_811:
                                  v148 = FigSimpleMutexCreate();
                                  *(_QWORD *)(v36 + 136) = v148;
                                  if (v148)
                                  {
                                    CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("EncryptionKey"));
                                    inPropertyData = APSCryptorChaCha20Poly1305Create();
                                    if (!inPropertyData)
                                    {
                                      v149 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                                      v47 = v149;
                                      if (v149)
                                      {
                                        CFDictionarySetValue(v149, (const void *)*MEMORY[0x24BE03820], (const void *)*MEMORY[0x24BDBD270]);
                                        inPropertyData = APSEndpointStreamAudioHoseSBARCreate();
                                        if (!inPropertyData)
                                        {
                                          v162 = v46;
                                          v44 = (const void *)FigCFWeakReferenceHolderCreateWithReferencedObject();
                                          if (v44)
                                          {
                                            v150 = *(_QWORD *)(v36 + 128);
                                            APSEndpointStreamAudioHoseProtocolGetProtocolID();
                                            ProtocolVTable = CMBaseObjectGetProtocolVTable();
                                            if (ProtocolVTable)
                                            {
                                              v152 = *(_QWORD *)(ProtocolVTable + 16);
                                              v45 = v160;
                                              if (v152)
                                              {
                                                v153 = *(uint64_t (**)(uint64_t, void *, const void *))(v152 + 56);
                                                if (v153)
                                                {
                                                  inPropertyData = v153(v150, &gHoseRegistrarCallbacks, v44);
                                                  if (!inPropertyData)
                                                  {
                                                    if (!*(_QWORD *)(v36 + 56)
                                                      && (CMNotificationCenterGetDefaultLocalCenter(),
                                                          (inPropertyData = FigNotificationCenterAddWeakListener()) != 0)
                                                      || (CMNotificationCenterGetDefaultLocalCenter(),
                                                          (inPropertyData = FigNotificationCenterAddWeakListener()) != 0)
                                                      || (CMNotificationCenterGetDefaultLocalCenter(),
                                                          (inPropertyData = FigNotificationCenterAddWeakListener()) != 0)
                                                      || !*(_QWORD *)(v36 + 56)
                                                      && (inPropertyData = audioSessionBufferedHose_updateNetworkThreadPriority(v36)) != 0)
                                                    {
                                                      APSLogErrorAt();
                                                    }
                                                    else
                                                    {
                                                      SNPrintF();
                                                      v154 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
                                                      v155 = dispatch_queue_create((const char *)&inSourceFormat, v154);
                                                      *(_QWORD *)(v36 + 240) = v155;
                                                      if (v155)
                                                      {
                                                        v156 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, v155);
                                                        *(_QWORD *)(v36 + 248) = v156;
                                                        if (v156)
                                                        {
                                                          dispatch_source_set_timer(v156, 0, 0x3B9ACA00uLL, 0x5F5E100uLL);
                                                          v157 = *(NSObject **)(v36 + 248);
                                                          v158 = (void *)CFRetain(v44);
                                                          dispatch_set_context(v157, v158);
                                                          dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v36 + 248), (dispatch_function_t)audioSessionBufferedHose_glitchMonitorTimerFire);
                                                          dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(v36 + 248), (dispatch_function_t)MEMORY[0x24BDBC298]);
                                                          dispatch_resume(*(dispatch_object_t *)(v36 + 248));
                                                          CMNotificationCenterGetDefaultLocalCenter();
                                                          FigNotificationCenterAddWeakListener();
                                                          CMNotificationCenterGetDefaultLocalCenter();
                                                          FigNotificationCenterAddWeakListener();
                                                          APSRTCReportingAgentCreate();
                                                          inPropertyData = 0;
                                                          if (gLogCategory_APReceiverAudioSessionBufferedHose <= 50
                                                            && (gLogCategory_APReceiverAudioSessionBufferedHose != -1
                                                             || _LogCategory_Initialize()))
                                                          {
                                                            APSAudioFormatDescriptionGetSampleRate();
                                                            v45 = v160;
                                                            LogPrintF();
                                                          }
                                                          *(_QWORD *)(v8 + 40) = v36;
                                                          v46 = v162;
                                                          goto LABEL_116;
                                                        }
                                                      }
                                                      APSLogErrorAt();
                                                      inPropertyData = -6728;
                                                    }
                                                    goto LABEL_390;
                                                  }
LABEL_835:
                                                  v46 = v162;
                                                  APSLogErrorAt();
                                                  goto LABEL_115;
                                                }
                                                v159 = -12782;
                                              }
                                              else
                                              {
                                                v159 = -12788;
                                              }
                                            }
                                            else
                                            {
                                              v159 = -12788;
                                              v45 = v160;
                                            }
                                            inPropertyData = v159;
                                            goto LABEL_835;
                                          }
                                          APSLogErrorAt();
                                          inPropertyData = -6728;
                                          goto LABEL_378;
                                        }
                                        APSLogErrorAt();
                                        v44 = 0;
LABEL_843:
                                        v45 = v160;
                                        goto LABEL_115;
                                      }
                                      APSLogErrorAt();
                                      v44 = 0;
LABEL_841:
                                      inPropertyData = -6728;
                                      goto LABEL_843;
                                    }
LABEL_409:
                                    APSLogErrorAt();
                                    v44 = 0;
LABEL_410:
                                    v47 = 0;
                                    goto LABEL_115;
                                  }
                                  APSLogErrorAt();
                                  v44 = 0;
                                  goto LABEL_479;
                                }
                                goto LABEL_847;
                              }
                            }
                          }
                        }
LABEL_845:
                        APSLogErrorAt();
                        v44 = 0;
                        goto LABEL_846;
                      }
                      CFArrayGetTypeID();
                      TypedValue = (const __CFArray *)CFDictionaryGetTypedValue();
                      if (!inPropertyData)
                      {
                        Count = CFArrayGetCount(TypedValue);
                        switch(Count)
                        {
                          case 0:
                            goto LABEL_350;
                          case 1:
LABEL_274:
                            CFDataGetTypeID();
                            CFArrayGetTypedValueAtIndex();
LABEL_350:
                            v124 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                            v45 = v124;
                            if (!v124)
                            {
LABEL_847:
                              APSLogErrorAt();
                              v44 = 0;
                              goto LABEL_478;
                            }
                            v125 = (const void **)MEMORY[0x24BDBD270];
                            if (!*(_BYTE *)(v36 + 116))
                              v125 = (const void **)MEMORY[0x24BDBD268];
                            CFDictionarySetValue(v124, CFSTR("MDC::AllowP2P"), *v125);
                            FigCFDictionarySetValue();
                            FigCFDictionarySetValue();
                            CFDictionarySetValue(v45, CFSTR("MDC::Label"), CFSTR("BUF"));
                            CFDictionarySetInt64();
                            FigCFDictionarySetInt32();
                            *(_QWORD *)&v185 = v8;
                            *((_QWORD *)&v185 + 1) = audioSessionBufferedHose_handleMediaDataControlRequest;
                            v186 = 0;
                            LOBYTE(inSourceFormat.mSampleRate) = v33;
                            BYTE1(inSourceFormat.mSampleRate) = v161;
                            *(_OWORD *)((char *)&inSourceFormat.mSampleRate + 2) = *(_OWORD *)&inDestinationFormat.mSampleRate;
                            *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)((char *)&inDestinationFormat.mFormatID
                                                                                + 2);
                            inPropertyData = APMediaDataControlServerCreate((uint64_t)&inSourceFormat, v45, &v185, (uint64_t *)(v36 + 48));
                            if (inPropertyData)
                              goto LABEL_845;
                            goto LABEL_354;
                          case 2:
                            CFDataGetTypeID();
                            CFArrayGetTypedValueAtIndex();
                            goto LABEL_274;
                        }
                        goto LABEL_113;
                      }
LABEL_485:
                      APSLogErrorAt();
                      v44 = 0;
                      v45 = 0;
LABEL_846:
                      v46 = 0;
                      goto LABEL_410;
                    }
                  }
                  goto LABEL_477;
                }
                if (gLogCategory_APReceiverAudioSessionBufferedHose <= 90
                  && (gLogCategory_APReceiverAudioSessionBufferedHose != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
LABEL_110:
                v44 = 0;
                v45 = 0;
                v46 = 0;
                v47 = 0;
                v48 = -72151;
LABEL_114:
                inPropertyData = v48;
LABEL_115:
                free((void *)v36);
LABEL_116:
                if (v184[0])
                  CFRelease(v184[0]);
                if (v44)
                  CFRelease(v44);
                if (v46)
                  CFRelease(v46);
                if (v45)
                  CFRelease(v45);
                if (v47)
                  CFRelease(v47);
                if (inPropertyData)
                {
                  APSLogErrorAt();
                  v167 = inPropertyData;
                  goto LABEL_450;
                }
                *(_QWORD *)(v8 + 64) = 0;
                *(_QWORD *)(v8 + 72) = APReceiverAudioSessionBufferedHoseStartPacketProcesser;
                *(_QWORD *)(v8 + 80) = APReceiverAudioSessionBufferedHoseStopPacketProcesser;
                *(_QWORD *)(v8 + 88) = APReceiverAudioSessionBufferedHoseFlushAudio;
                *(_QWORD *)(v8 + 96) = APReceiverAudioSessionBufferedHoseGetAnchor;
                *(_QWORD *)(v8 + 104) = APReceiverAudioSessionBufferedHoseSetRate;
                *(_QWORD *)(v8 + 112) = APReceiverAudioSessionBufferedHoseSetRateAndAnchorTime;
                *(_QWORD *)(v8 + 120) = APReceiverAudioSessionBufferedHoseConvertProgressRTPTimeToSecond;
                *(_QWORD *)(v8 + 144) = APReceiverAudioSessionBufferedHoseCopyProperty;
                *(_QWORD *)(v8 + 152) = APReceiverAudioSessionBufferedHoseSetProperty;
                *(_QWORD *)(v8 + 160) = APReceiverAudioSessionBufferedHoseCopyMetrics;
                *(_QWORD *)(v8 + 168) = APReceiverAudioSessionBufferedHoseLogEnded;
                *(_QWORD *)(v8 + 128) = 0;
                *(_QWORD *)(v8 + 136) = 0;
                *(_QWORD *)(v8 + 48) = APReceiverAudioSessionBufferedHoseFinalize;
                *(_QWORD *)(v8 + 56) = APReceiverAudioSessionBufferedHoseInvalidate;
                *(_QWORD *)(v8 + 176) = 0;
                *(_QWORD *)(v8 + 184) = APReceiverAudioSessionBufferedHoseApplyVolumeFade;
                *(_QWORD *)(v8 + 192) = 0;
                *(_QWORD *)(v8 + 200) = 0;
                *(_QWORD *)(v8 + 208) = 0;
                if (gLogCategory_APReceiverAudioSession <= 50
                  && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
                {
                  LogPrintF();
                }
                v167 = 0;
                CFDictionarySetValue(Mutable, CFSTR("RASP::DisablePlatformRendering"), (const void *)*MEMORY[0x24BDBD270]);
                goto LABEL_194;
              }
            }
            else
            {
              *(_QWORD *)(v36 + 152) = 0;
            }
            APSLogErrorAt();
LABEL_113:
            v44 = 0;
            v45 = 0;
            v46 = 0;
            v47 = 0;
            v48 = -6705;
            goto LABEL_114;
          }
        }
      }
      else
      {
        *(_QWORD *)(v36 + 168) = 0;
      }
      APSLogErrorAt();
      goto LABEL_110;
    }
    v20 = *a2;
    v21 = a2[1];
    *(_OWORD *)v184 = *(_OWORD *)(a2 + 2);
    *(_OWORD *)((char *)&v184[1] + 2) = *(_OWORD *)(a2 + 12);
    v22 = *(const void **)(v8 + 32);
    AudioFormatIndex = 0;
    v171 = 0;
    if (gLogCategory_APReceiverAudioSessionBuffered <= 30
      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v23 = malloc_type_calloc(1uLL, 0x508uLL, 0x10F0040D1BE82D6uLL);
    if (!v23)
    {
      v73 = -72150;
      APSLogErrorAt();
LABEL_433:
      APSLogErrorAt();
      v167 = v73;
      goto LABEL_450;
    }
    v24 = v23;
    *v23 = v8;
    v23[3] = CFRetain(v22);
    *((_DWORD *)v24 + 4) = 103;
    v25 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("ClientID"));
    if (v25)
      v25 = CFRetain(v25);
    v24[4] = v25;
    v172 = APSRTCReportingAgentCreate();
    if (v172)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 90
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v172 = 0;
    }
    else if (gLogCategory_APReceiverAudioSessionBuffered <= 40
           && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v26 = FigSimpleMutexCreate();
    v24[141] = v26;
    if (!v26)
    {
      APSLogErrorAt();
      v31 = 0;
LABEL_461:
      v32 = -72150;
      goto LABEL_186;
    }
    v27 = dispatch_queue_create("APReceiverAudioSessionQueue", 0);
    v24[149] = v27;
    if (!v27 || (v28 = dispatch_queue_create("APReceiverAudioSessionLogQueue", 0), (v24[155] = v28) == 0))
    {
      APSLogErrorAt();
      v144 = APSSignalErrorAt();
      v31 = 0;
LABEL_436:
      v172 = v144;
      goto LABEL_187;
    }
    *((_BYTE *)v24 + 1225) = CFDictionaryGetInt64() != 0;
    if (v172)
    {
      APSLogErrorAt();
      v31 = 0;
      goto LABEL_187;
    }
    if (CFDictionaryGetInt64Ranged() != 1381257248)
    {
      if (gLogCategory_APReceiverAudioSessionBuffered <= 90
        && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v31 = 0;
      goto LABEL_86;
    }
    if (CFDictionaryContainsKey((CFDictionaryRef)a3, CFSTR("MediaDataControl")))
    {
      CFArrayGetTypeID();
      v29 = (const __CFArray *)CFDictionaryGetTypedValue();
      v30 = CFArrayGetCount(v29);
      if (v30)
      {
        if (v30 != 1)
        {
          if (v30 != 2)
          {
            v31 = 0;
            goto LABEL_185;
          }
          CFDataGetTypeID();
          CFArrayGetTypedValueAtIndex();
        }
        CFDataGetTypeID();
        CFArrayGetTypedValueAtIndex();
      }
      v49 = CFDictionaryCreateMutable(v12, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      v31 = v49;
      if (!v49)
        goto LABEL_803;
      v50 = (const void **)MEMORY[0x24BDBD270];
      if (!*((_BYTE *)v24 + 1225))
        v50 = (const void **)MEMORY[0x24BDBD268];
      CFDictionarySetValue(v49, CFSTR("MDC::AllowP2P"), *v50);
      FigCFDictionarySetValue();
      FigCFDictionarySetValue();
      CFDictionarySetValue(v31, CFSTR("MDC::Label"), CFSTR("BUF"));
      CFDictionarySetInt64();
      FigCFDictionarySetInt32();
      *(_QWORD *)&v168 = v8;
      *((_QWORD *)&v168 + 1) = audioSession_handleMediaDataControlRequest_4922;
      v169 = 0;
      LOBYTE(inSourceFormat.mSampleRate) = v20;
      BYTE1(inSourceFormat.mSampleRate) = v21;
      *(_OWORD *)((char *)&inSourceFormat.mSampleRate + 2) = *(_OWORD *)v184;
      *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)((char *)&v184[1] + 2);
      v172 = APMediaDataControlServerCreate((uint64_t)&inSourceFormat, v31, &v168, v24 + 5);
      if (v172)
      {
LABEL_488:
        APSLogErrorAt();
LABEL_187:
        free(v24);
        if (!v31)
          goto LABEL_189;
        goto LABEL_188;
      }
    }
    else
    {
      v31 = 0;
    }
    *((_DWORD *)v24 + 22) = CFDictionaryGetInt64();
    if (v172)
      goto LABEL_488;
    v51 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("AudioFormat"));
    if (v51)
    {
      v52 = CFRetain(v51);
      v24[142] = v52;
      if (v52)
      {
        v53 = (CFTypeRef *)(v24 + 142);
        AudioFormatIndex = APSAudioFormatDescriptionGetAudioFormatIndex();
        if (!AudioFormatIndex)
        {
          v172 = APCompressionTypeToAPAudioFormatIndex();
          if (v172)
            goto LABEL_488;
          if (*v53)
          {
            CFRelease(*v53);
            *v53 = 0;
          }
          v172 = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
          if (v172)
            goto LABEL_488;
        }
        ASBD = APSAudioFormatDescriptionGetASBD();
        if (v172)
          goto LABEL_488;
        *((_DWORD *)v24 + 27) = APAudioFormatIndexGetBitsPerChannel();
        if (!*((_DWORD *)v24 + 22))
          *((_DWORD *)v24 + 22) = APAudioFormatIDToAPCompressionType();
        *((_DWORD *)v24 + 23) = *(double *)ASBD;
        v55 = *(_DWORD *)(ASBD + 28);
        *((_DWORD *)v24 + 24) = v55;
        v56 = *(_DWORD *)(ASBD + 24);
        *((_DWORD *)v24 + 25) = v56;
        if (!v56)
          *((_DWORD *)v24 + 25) = (((*((_DWORD *)v24 + 27) + 7) & 0xFFFFFFF8) * v55) >> 3;
        v57 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("NetworkClock"));
        v24[143] = v57;
        if (v57)
        {
          v58 = CFGetTypeID(v57);
          if (v58 != APSNetworkClockGetTypeID())
          {
LABEL_474:
            APSLogErrorAt();
LABEL_86:
            v32 = -72151;
            goto LABEL_186;
          }
          v59 = (const void *)v24[143];
          if (v59)
            CFRetain(v59);
        }
        *((_BYTE *)v24 + 1152) = CFDictionaryGetInt64() != 0;
        if (v172)
          goto LABEL_488;
        v60 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("StatsCollector"));
        v24[148] = v60;
        if (v60)
          CFRetain(v60);
        APTTrafficMetricsCreate();
        v61 = CFDictionaryGetInt64();
        if (v61)
        {
          v62 = *((_DWORD *)v24 + 23) * v61 / 0x3E8u;
          *((_DWORD *)v24 + 116) = v62;
        }
        else
        {
          *((_DWORD *)v24 + 116) = CFDictionaryGetInt64();
          v62 = CFDictionaryGetInt64();
        }
        *((_DWORD *)v24 + 117) = v62;
        *((_DWORD *)v24 + 118) = 0;
        *((_DWORD *)v24 + 26) = CFDictionaryGetInt64();
        CFDictionaryGetData();
        if (v172 == -6727)
        {
          v172 = 0;
          goto LABEL_168;
        }
        if (v172)
          goto LABEL_488;
        if (v171 == 32)
        {
          for (i = 112; i != 416; ++i)
            *((_BYTE *)v24 + i) = 0;
          __memcpy_chk();
          *((_BYTE *)v24 + 112) = 1;
LABEL_168:
          v64 = UpTicksPerSecond();
          v65 = mach_absolute_time();
          v24[86] = SecondsToUpTicks();
          v24[87] = v65;
          v24[100] = 60 * v64;
          v24[99] = v65 + 60 * v64;
          CFPreferenceNumberWithDefault = FigGetCFPreferenceNumberWithDefault();
          *((_DWORD *)v24 + 216) = CFPreferenceNumberWithDefault;
          v24[102] = v65;
          v24[103] = v64 * CFPreferenceNumberWithDefault;
          v24[104] = v64;
          v24[105] = 0;
          v24[106] = v65;
          v24[107] = 10 * v64;
          inSourceFormat.mSampleRate = 0.0;
          v67 = APSNetworkClockGetCMBaseObject();
          v68 = *(void (**)(uint64_t, _QWORD, const __CFAllocator *, AudioStreamBasicDescription *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 48);
          if (v68)
          {
            v68(v67, *MEMORY[0x24BE038B0], v12, &inSourceFormat);
            mSampleRate = inSourceFormat.mSampleRate;
          }
          else
          {
            mSampleRate = 0.0;
          }
          v70 = (const void *)*MEMORY[0x24BE038C0];
          if (*(_QWORD *)&mSampleRate == *MEMORY[0x24BE038C0])
          {
            v71 = 1;
          }
          else
          {
            v71 = 0;
            if (mSampleRate != 0.0 && v70)
            {
              v71 = CFEqual(*(CFTypeRef *)&mSampleRate, v70) != 0;
              mSampleRate = inSourceFormat.mSampleRate;
            }
          }
          if (mSampleRate != 0.0)
            CFRelease(*(CFTypeRef *)&mSampleRate);
          if (v71)
            v72 = -1;
          else
            v72 = 4410;
          *((_DWORD *)v24 + 219) = v72;
          *((_DWORD *)v24 + 219) = FigGetCFPreferenceNumberWithDefault();
          if (gLogCategory_APReceiverAudioSessionBuffered <= 50
            && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          *((_BYTE *)v24 + 1224) = 1;
          if (!v172)
          {
            if (FigGetCFPreferenceNumberWithDefault())
            {
              v91 = ServerSocketOpen();
              v172 = v91;
              if (gLogCategory_APReceiverAudioSessionBuffered <= 50)
              {
                if (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize())
                  LogPrintF();
                v91 = v172;
              }
            }
            else
            {
              v91 = ServerSocketOpen();
              v172 = v91;
            }
            if (!v91)
            {
              if (*((_BYTE *)v24 + 1225))
                SocketSetP2P();
              v98 = CFDictionaryGetInt64();
              *((_BYTE *)v24 + 1226) = v98 != 0;
              if (!v172)
              {
                if (!v98)
                  SocketSetQoS();
                v172 = OpenSelfConnectedLoopbackSocket();
                if (!v172)
                {
                  v99 = FigGetCFPreferenceNumberWithDefault();
                  if (v99)
                  {
                    *((_DWORD *)v24 + 119) = v99;
                    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                  }
                  else
                  {
                    v100 = *((_DWORD *)v24 + 22);
                    if (v100 == 8 || v100 == 4)
                      v101 = 5200;
                    else
                      v101 = 15034;
                    *((_DWORD *)v24 + 119) = v101;
                  }
                  v102 = FigGetCFPreferenceNumberWithDefault();
                  if (v102)
                  {
                    v24[60] = v102;
                    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                  }
                  else
                  {
                    v24[60] = 0xFFFFLL;
                  }
                  v103 = malloc_type_calloc(1uLL, v24[60], 0x94EA02F4uLL);
                  v24[61] = v103;
                  if (!v103)
                    goto LABEL_803;
                  v104 = FigGetCFPreferenceNumberWithDefault();
                  if (v104)
                  {
                    v24[62] = v104;
                    if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                      && (gLogCategory_APReceiverAudioSessionBuffered != -1 || _LogCategory_Initialize()))
                    {
                      LogPrintF();
                    }
                  }
                  else
                  {
                    v105 = *((_DWORD *)v24 + 22);
                    if (v105 == 8 || v105 == 4)
                      v106 = 5000000;
                    else
                      v106 = 21168000;
                    v24[62] = v106;
                  }
                  v24[63] = 12;
                  APSAllocatorGetDefaultAirPlayMallocZone();
                  v172 = APSContiguousAllocatorCreate();
                  if (!v172)
                  {
                    v107 = malloc_type_malloc((unint64_t)*((unsigned int *)v24 + 119) << 6, 0x10700404D6600FEuLL);
                    v24[64] = v107;
                    if (v107)
                    {
                      v108 = (*((_DWORD *)v24 + 119) - 1);
                      if (*((_DWORD *)v24 + 119) != 1)
                      {
                        v109 = (char *)(v107 + 8);
                        v110 = (*((_DWORD *)v24 + 119) - 1);
                        do
                        {
                          *((_QWORD *)v109 - 8) = v109;
                          v109 += 64;
                          --v110;
                        }
                        while (v110);
                      }
                      v107[8 * v108] = 0;
                      v24[74] = v107;
                      *((_DWORD *)v24 + 150) = 0;
                      v24[66] = v24 + 65;
                      v24[65] = v24 + 65;
                      v24[73] = v24 + 65;
                      v111 = FigGetCFPreferenceNumberWithDefault();
                      if (v111)
                      {
                        BufferSize = v111;
                        if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                          && (gLogCategory_APReceiverAudioSessionBuffered != -1
                           || _LogCategory_Initialize()))
                        {
                          LogPrintF();
                        }
                        goto LABEL_327;
                      }
                      BufferSize = APCompressionTypeGetBufferSize();
                      if (BufferSize)
                      {
LABEL_327:
                        if (*((_DWORD *)v24 + 22) == 1)
                          goto LABEL_333;
                        memset(&inSourceFormat, 0, sizeof(inSourceFormat));
                        v113 = APCompressionTypeFillStreamDescription();
                        if (v113)
                        {
                          v145 = v113;
                        }
                        else
                        {
                          LODWORD(v114) = *((_DWORD *)v24 + 23);
                          inDestinationFormat.mSampleRate = (double)v114;
                          *(_QWORD *)&inDestinationFormat.mFormatID = 0xC6C70636DLL;
                          v115 = *((_DWORD *)v24 + 24);
                          v116 = *((_DWORD *)v24 + 27);
                          inDestinationFormat.mBytesPerPacket = (v116 >> 3) * v115;
                          inDestinationFormat.mFramesPerPacket = 1;
                          inDestinationFormat.mBytesPerFrame = inDestinationFormat.mBytesPerPacket;
                          inDestinationFormat.mChannelsPerFrame = v115;
                          *(_QWORD *)&inDestinationFormat.mBitsPerChannel = v116;
                          v117 = AudioConverterNew(&inSourceFormat, &inDestinationFormat, (AudioConverterRef *)v24 + 91);
                          if (v117)
                          {
                            v145 = v117;
                          }
                          else
                          {
                            if (inSourceFormat.mFormatID != 1634492771)
                              goto LABEL_332;
                            inPropertyData = bswap32(inSourceFormat.mFramesPerPacket);
                            v175 = *((_DWORD *)v24 + 27);
                            v176 = 2600;
                            v177 = 14;
                            v118 = *((_DWORD *)v24 + 23);
                            v178 = *((_DWORD *)v24 + 24);
                            v179 = -256;
                            v174 = 0;
                            v180 = 0;
                            v181 = 0;
                            v182 = bswap32(v118);
                            v119 = AudioConverterSetProperty((AudioConverterRef)v24[91], 0x646D6763u, 0x18u, &inPropertyData);
                            if (!v119)
                            {
LABEL_332:
                              v172 = 0;
LABEL_333:
                              v24[77] = BufferSize;
                              v120 = malloc_type_malloc(BufferSize, 0x96C36513uLL);
                              v24[76] = v120;
                              if (v120)
                              {
                                v121 = malloc_type_malloc(v24[77], 0xD3634418uLL);
                                v24[80] = v121;
                                if (v121)
                                {
                                  v24[79] = BufferSize;
                                  v122 = malloc_type_malloc(BufferSize, 0xB3D0097AuLL);
                                  v24[78] = v122;
                                  if (v122)
                                  {
                                    gAirPlayAudioStats = xmmword_21E1B1CD0;
                                    byte_2553CE9F0 = 0;
                                    qword_2553CE9F8 = 0;
                                    dword_2553CEA00 = 0;
                                    v123 = CFDictionaryGetValue((CFDictionaryRef)a3, CFSTR("ReceiverSession"));
                                    if (v123)
                                    {
                                      *((_DWORD *)v24 + 319) = v123[124];
                                      APSCopyClusterInfo();
                                      if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                                        && (gLogCategory_APReceiverAudioSessionBuffered != -1
                                         || _LogCategory_Initialize()))
                                      {
                                        LogPrintF();
                                      }
                                      v24[1] = FigCFWeakReferenceHolderCreateWithReferencedObject();
                                      PIDInit();
                                      *((_BYTE *)v24 + 1036) = CFDictionaryGetInt64() != 0;
                                      if (gLogCategory_APReceiverAudioSessionBuffered <= 30
                                        && (gLogCategory_APReceiverAudioSessionBuffered != -1
                                         || _LogCategory_Initialize()))
                                      {
                                        if (APSAudioFormatDescriptionGetAudioFormatIndex() != 6
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 10
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 11
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 15
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 18
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 22
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 24
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 2
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 3
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 4
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 5
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 7
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 8
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 9
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 12
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 13
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 14
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 16
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 17
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 45
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 46
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 44
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 38
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 78
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 80
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 82
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 84
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 47
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 48
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 79
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 81
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 83
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 69
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 85
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 19
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 20
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 86
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 21
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 40
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 39
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 90
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 23
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 42
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 41
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 25
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 26
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 27
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 28
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 29
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 30
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 31
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 32
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 43
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 49
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 50
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 51
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 52
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 53
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 54
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 55
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 56
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 57
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 58
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 60
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 89
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 61
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 62
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 63
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 33
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 34
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 35
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 87
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 88
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 64
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 65
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 66
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 67
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 76
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 77
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 68
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 70
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 71
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 72
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 73
                                          && APSAudioFormatDescriptionGetAudioFormatIndex() != 74)
                                        {
                                          APSAudioFormatDescriptionGetAudioFormatIndex();
                                        }
                                        LogPrintF();
                                      }
                                      v24[83] = 8;
                                      v146 = malloc_type_calloc(1uLL, 8uLL, 0x103FD484uLL);
                                      v24[82] = v146;
                                      if (v146)
                                      {
                                        *((_BYTE *)v24 + 1228) = CFPrefs_GetInt64() != 0;
                                        *((_BYTE *)v24 + 1124) = 0;
                                        if (gLogCategory_APReceiverAudioSessionBuffered <= 50
                                          && (gLogCategory_APReceiverAudioSessionBuffered != -1
                                           || _LogCategory_Initialize()))
                                        {
                                          LogPrintF();
                                        }
                                        APTTrafficMetricsConnectionFormed();
                                        *(_QWORD *)(v8 + 40) = v24;
                                        if (!v31)
                                        {
LABEL_189:
                                          v73 = v172;
                                          if (!v172)
                                          {
                                            *(_QWORD *)(v8 + 64) = APReceiverAudioSessionBufferedSetSecurityInfo;
                                            *(_QWORD *)(v8 + 72) = APReceiverAudioSessionBufferedStartPacketProcesser;
                                            *(_QWORD *)(v8 + 80) = APReceiverAudioSessionBufferedStopPacketProcesser;
                                            *(_QWORD *)(v8 + 88) = APReceiverAudioSessionBufferedFlushAudio;
                                            *(_QWORD *)(v8 + 96) = 0;
                                            *(_QWORD *)(v8 + 104) = 0;
                                            *(_QWORD *)(v8 + 112) = APReceiverAudioSessionBufferedSetRateAndAnchorTime;
                                            *(_QWORD *)(v8 + 120) = APReceiverAudioSessionBufferedConvertProgressRTPTimeToSecond;
                                            *(_QWORD *)(v8 + 128) = APReceiverAudioSessionBufferedReadAudio;
                                            *(_QWORD *)(v8 + 136) = APReceiverAudioSessionBufferedUpdateLatency;
                                            *(_QWORD *)(v8 + 144) = APReceiverAudioSessionBufferedCopyProperty;
                                            *(_QWORD *)(v8 + 152) = APReceiverAudioSessionBufferedSetProperty;
                                            *(_QWORD *)(v8 + 160) = APReceiverAudioSessionBufferedCopyMetrics;
                                            *(_QWORD *)(v8 + 168) = APReceiverAudioSessionBufferedLogEnded;
                                            *(_QWORD *)(v8 + 48) = APReceiverAudioSessionBufferedFinalize;
                                            *(_QWORD *)(v8 + 56) = 0;
                                            *(_QWORD *)(v8 + 176) = APReceiverAudioSessionBufferedCopyAudioBufferInfo;
                                            *(_OWORD *)(v8 + 184) = 0u;
                                            *(_OWORD *)(v8 + 200) = 0u;
                                            if (gLogCategory_APReceiverAudioSession > 50
                                              || gLogCategory_APReceiverAudioSession == -1
                                              && !_LogCategory_Initialize())
                                            {
                                              goto LABEL_193;
                                            }
LABEL_192:
                                            LogPrintF();
LABEL_193:
                                            v167 = 0;
                                            goto LABEL_194;
                                          }
                                          goto LABEL_433;
                                        }
LABEL_188:
                                        CFRelease(v31);
                                        goto LABEL_189;
                                      }
                                      goto LABEL_803;
                                    }
                                    APSLogErrorAt();
                                    v144 = APSSignalErrorAt();
                                    goto LABEL_436;
                                  }
                                }
                              }
                              APSLogErrorAt();
                              goto LABEL_461;
                            }
                            v145 = v119;
                          }
                        }
                        APSLogErrorAt();
                        v172 = v145;
                        goto LABEL_488;
                      }
                      APSLogErrorAt();
                      v32 = -6735;
LABEL_186:
                      v172 = v32;
                      goto LABEL_187;
                    }
LABEL_803:
                    APSLogErrorAt();
                    v32 = -6728;
                    goto LABEL_186;
                  }
                }
              }
            }
          }
          goto LABEL_488;
        }
        goto LABEL_474;
      }
    }
    else
    {
      v24[142] = 0;
    }
    APSLogErrorAt();
LABEL_185:
    v32 = -6705;
    goto LABEL_186;
  }
  if (v18 == 96)
  {
    if (Int64Ranged)
    {
      *(_OWORD *)&inSourceFormat.mSampleRate = *(_OWORD *)a2;
      *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)(a2 + 12);
      v19 = APReceiverAudioSessionRealTimeCreate(v8, *(const void **)(v8 + 32), &inSourceFormat, (const __CFDictionary *)a3, (uint64_t *)(v8 + 40));
      if (!v19)
      {
        *(_QWORD *)(v8 + 64) = APReceiverAudioSessionRealTimeSetSecurityInfo;
        *(_QWORD *)(v8 + 72) = APReceiverAudioSessionRealTimeStartPacketProcesser;
        *(_QWORD *)(v8 + 80) = APReceiverAudioSessionRealTimeStopPacketProcesser;
        *(_QWORD *)(v8 + 88) = APReceiverAudioSessionRealTimeFlushAudio;
        *(_QWORD *)(v8 + 96) = 0;
        *(_QWORD *)(v8 + 104) = 0;
        *(_QWORD *)(v8 + 112) = 0;
        *(_QWORD *)(v8 + 120) = APReceiverAudioSessionRealTimeConvertProgressRTPTimeToSecond;
        *(_QWORD *)(v8 + 128) = APReceiverAudioSessionRealTimeReadAudio;
        *(_QWORD *)(v8 + 136) = APReceiverAudioSessionRealTimeUpdateLatency;
        *(_QWORD *)(v8 + 144) = APReceiverAudioSessionRealTimeCopyProperty;
        *(_QWORD *)(v8 + 152) = APReceiverAudioSessionRealTimeSetProperty;
        *(_QWORD *)(v8 + 160) = APReceiverAudioSessionRealTimeCopyMetrics;
        *(_QWORD *)(v8 + 168) = APReceiverAudioSessionRealTimeLogEnded;
        *(_QWORD *)(v8 + 48) = APReceiverAudioSessionRealTimeFinalize;
        *(_QWORD *)(v8 + 56) = APReceiverAudioSessionRealTimeInvalidate;
        *(_QWORD *)(v8 + 176) = APReceiverAudioSessionRealTimeCopyAudioBufferInfo;
        *(_OWORD *)(v8 + 184) = 0u;
        *(_OWORD *)(v8 + 200) = 0u;
        if (gLogCategory_APReceiverAudioSession > 50
          || gLogCategory_APReceiverAudioSession == -1 && !_LogCategory_Initialize())
        {
          goto LABEL_193;
        }
        goto LABEL_192;
      }
      v143 = v19;
      APSLogErrorAt();
      v167 = v143;
LABEL_450:
      APSLogErrorAt();
      goto LABEL_244;
    }
    *(_OWORD *)&inSourceFormat.mSampleRate = *(_OWORD *)a2;
    *(_OWORD *)&inSourceFormat.mFormatFlags = *(_OWORD *)(a2 + 12);
    v167 = audioSession_setupGhostAudio(v8, &inSourceFormat, a3);
    if (v167)
      goto LABEL_450;
  }
LABEL_194:
  if (gLogCategory_APReceiverAudioSession <= 50
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDictionaryGetTypeID();
  v74 = (const __CFDictionary *)CFDictionaryGetTypedValue();
  CFDictionarySetInt64();
  v77 = APReceiverAudioSessionCopyProperty((const __CFNumber *)v8, v75, CFSTR("AudioFormat"), v76, &v167);
  cf = v77;
  if (v167)
    goto LABEL_450;
  CFDictionarySetValue(Mutable, CFSTR("RASP::AudioFormat"), v77);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, CFSTR("ReceiverSession"), (const void **)&value))
    CFDictionarySetValue(Mutable, CFSTR("RASP::ReceiverSession"), value);
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, CFSTR("IsMedia"), (const void **)&value))
    CFDictionarySetValue(Mutable, CFSTR("RASP::IsMedia"), value);
  if (!CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, CFSTR("NetworkClock"), (const void **)&value))
  {
    v78 = 0;
    goto LABEL_221;
  }
  v78 = value;
  v79 = APSNetworkClockGetCMBaseObject();
  v80 = *(void (**)(uint64_t, _QWORD, const __CFAllocator *, void **))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                               + 48);
  if (v80)
    v80(v79, *MEMORY[0x24BE038B0], v12, &value);
  v81 = value;
  v82 = (const void *)*MEMORY[0x24BE038B8];
  if (value == (void *)*MEMORY[0x24BE038B8])
    goto LABEL_210;
  if (value && v82)
  {
    if (CFEqual(value, v82))
    {
LABEL_210:
      v83 = CFSTR("NTP");
LABEL_218:
      CFDictionarySetValue(Mutable, CFSTR("RASP::TimingProtocol"), v83);
      goto LABEL_219;
    }
    v81 = value;
  }
  v84 = (const void *)*MEMORY[0x24BE038C0];
  if (v81 == (void *)*MEMORY[0x24BE038C0] || v81 && v84 && CFEqual(v81, v84))
  {
    v83 = CFSTR("PTP");
    goto LABEL_218;
  }
LABEL_219:
  if (value)
    CFRelease(value);
LABEL_221:
  if (CFDictionaryGetValueIfPresent((CFDictionaryRef)a3, CFSTR("UsingScreen"), (const void **)&value))
    CFDictionarySetValue(Mutable, CFSTR("RASP::UsingScreen"), value);
  if (CFDictionaryGetValueIfPresent(v74, CFSTR("audioLoopback"), (const void **)&value))
    CFDictionarySetValue(Mutable, CFSTR("RASP::AudioLookback"), value);
  if (CFDictionaryGetValueIfPresent(v74, CFSTR("audioType"), (const void **)&value))
    CFDictionarySetValue(Mutable, CFSTR("RASP::AudioType"), value);
  if (CFDictionaryGetValueIfPresent(v74, CFSTR("audioMode"), (const void **)&value))
    CFDictionarySetValue(Mutable, CFSTR("RASP::AudioMode"), value);
  if (!APSAudioFormatDescriptionGetAudioFormatIndex())
  {
    if (v77)
    {
      CFRelease(v77);
      cf = 0;
    }
    v167 = APSAudioFormatDescriptionCreateWithAudioFormatIndex();
    if (v167)
      goto LABEL_450;
  }
  APSAudioFormatDescriptionGetAudioFormatIndex();
  v167 = APAudioFormatIndexToPCMASBD();
  if (v167)
    goto LABEL_450;
  v167 = APReceiverAudioSessionPlatformCreate((const void *)v8, Mutable, (uint64_t *)(v8 + 216));
  if (v167)
    goto LABEL_450;
  if (v164)
  {
    if (v78)
      v85 = CFRetain(v78);
    else
      v85 = 0;
    *(_QWORD *)(v8 + 320) = v85;
    v86 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_UTILITY, 0);
    v87 = dispatch_queue_create("APReceiverAudioSessionSink", v86);
    *(_QWORD *)(v8 + 288) = v87;
    if (v87)
    {
      v88 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, v87);
      *(_QWORD *)(v8 + 296) = v88;
      if (v88)
      {
        dispatch_set_context(v88, (void *)v8);
        dispatch_source_set_event_handler_f(*(dispatch_source_t *)(v8 + 296), (dispatch_function_t)audioSession_sinkTimer);
        dispatch_source_set_timer(*(dispatch_source_t *)(v8 + 296), 0, 0x1312D00uLL, 0);
        v89 = audioSession_getCurrentNetworkTime(v8, 0) * *(double *)(v8 + 224);
        *(_QWORD *)(v8 + 304) = (unint64_t)v89;
        *(_QWORD *)(v8 + 312) = (unint64_t)v89;
        dispatch_resume(*(dispatch_object_t *)(v8 + 296));
        goto LABEL_242;
      }
    }
    goto LABEL_420;
  }
LABEL_242:
  if (a4)
  {
    *a4 = v8;
    v8 = 0;
  }
LABEL_244:
  if (cf)
    CFRelease(cf);
  if (v8)
    CFRelease((CFTypeRef)v8);
  if (Mutable)
    CFRelease(Mutable);
  return v167;
}

uint64_t audioSession_setupGhostAudio(uint64_t a1, _OWORD *a2, CFTypeRef cf)
{
  const void *v3;
  CFTypeID v6;
  _QWORD *v7;
  _QWORD *v8;
  const void *Value;
  uint64_t Int64;
  const __CFArray *TypedValue;
  CFIndex Count;
  __CFDictionary *v13;
  __CFDictionary *Mutable;
  const void **v15;
  uint64_t v16;
  int v18;
  _BYTE v19[28];
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  unsigned int v23;

  v3 = *(const void **)(a1 + 32);
  *(_OWORD *)v19 = *a2;
  *(_OWORD *)&v19[12] = *(_OWORD *)((char *)a2 + 12);
  v23 = 0;
  if (!v3)
  {
    v16 = 4294960591;
LABEL_31:
    APSLogErrorAt();
    goto LABEL_32;
  }
  v6 = CFGetTypeID(cf);
  if (v6 != CFDictionaryGetTypeID())
  {
    v16 = 4294960591;
    goto LABEL_31;
  }
  v7 = malloc_type_calloc(1uLL, 0x30uLL, 0x1060040987D7E9EuLL);
  if (!v7)
  {
    v16 = 4294895146;
    goto LABEL_31;
  }
  v8 = v7;
  *((_BYTE *)v7 + 32) = 0;
  *(_DWORD *)v7 = CFDictionaryGetInt64Ranged();
  if (v23)
    goto LABEL_47;
  v8[1] = a1;
  v8[2] = CFRetain(v3);
  Value = CFDictionaryGetValue((CFDictionaryRef)cf, CFSTR("AudioFormat"));
  if (!Value)
  {
    APSLogErrorAt();
    goto LABEL_35;
  }
  v8[3] = CFRetain(Value);
  if (CFDictionaryGetInt64Ranged())
  {
    APSLogErrorAt();
    v23 = -72151;
    if (gLogCategory_APReceiverAudioSessionGhost <= 90
      && (gLogCategory_APReceiverAudioSessionGhost != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_48;
  }
  if (!CFDictionaryContainsKey((CFDictionaryRef)cf, CFSTR("MediaDataControl")))
  {
    v13 = 0;
    goto LABEL_19;
  }
  Int64 = CFDictionaryGetInt64();
  CFArrayGetTypeID();
  TypedValue = (const __CFArray *)CFDictionaryGetTypedValue();
  if (v23)
  {
LABEL_47:
    APSLogErrorAt();
LABEL_48:
    v13 = 0;
    goto LABEL_37;
  }
  Count = CFArrayGetCount(TypedValue);
  if (!Count)
    goto LABEL_15;
  if (Count != 1)
  {
    if (Count == 2)
    {
      CFDataGetTypeID();
      CFArrayGetTypedValueAtIndex();
      goto LABEL_13;
    }
LABEL_35:
    v13 = 0;
    v18 = -6705;
LABEL_36:
    v23 = v18;
    goto LABEL_37;
  }
LABEL_13:
  CFDataGetTypeID();
  CFArrayGetTypedValueAtIndex();
LABEL_15:
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v13 = Mutable;
  if (!Mutable)
  {
    APSLogErrorAt();
    v18 = -6728;
    goto LABEL_36;
  }
  v15 = (const void **)MEMORY[0x24BDBD270];
  if (!Int64)
    v15 = (const void **)MEMORY[0x24BDBD268];
  CFDictionarySetValue(Mutable, CFSTR("MDC::AllowP2P"), *v15);
  FigCFDictionarySetValue();
  FigCFDictionarySetValue();
  CFDictionarySetValue(v13, CFSTR("MDC::Label"), CFSTR("GHOST"));
  CFDictionarySetInt64();
  FigCFDictionarySetInt32();
  *(_QWORD *)&v21 = a1;
  *((_QWORD *)&v21 + 1) = audioSession_handleMediaDataControlRequest_3144;
  v22 = 0;
  v20[0] = *(_OWORD *)v19;
  *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)&v19[12];
  v23 = APMediaDataControlServerCreate((uint64_t)v20, v13, &v21, v8 + 5);
  if (!v23)
  {
LABEL_19:
    *(_QWORD *)(a1 + 40) = v8;
    if (!v13)
      goto LABEL_21;
    goto LABEL_20;
  }
  APSLogErrorAt();
LABEL_37:
  APReceiverAudioSessionGhostFinalize(v8);
  if (v13)
LABEL_20:
    CFRelease(v13);
LABEL_21:
  v16 = v23;
  if (v23)
  {
LABEL_32:
    APSLogErrorAt();
    return v16;
  }
  *(_QWORD *)(a1 + 48) = APReceiverAudioSessionGhostFinalize;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = APReceiverAudioSessionGhostSetSecurityInfo;
  *(_QWORD *)(a1 + 72) = APReceiverAudioSessionGhostStartPacketProcesser;
  *(_QWORD *)(a1 + 80) = APReceiverAudioSessionGhostStopPacketProcesser;
  *(_QWORD *)(a1 + 88) = APReceiverAudioSessionGhostFlushAudio;
  *(_QWORD *)(a1 + 112) = APReceiverAudioSessionGhostSetRateAndAnchorTime;
  *(_QWORD *)(a1 + 120) = APReceiverAudioSessionGhostConvertProgressRTPTimeToSecond;
  *(_QWORD *)(a1 + 128) = APReceiverAudioSessionGhostReadAudio;
  *(_QWORD *)(a1 + 136) = APReceiverAudioSessionGhostUpdateLatency;
  *(_QWORD *)(a1 + 144) = APReceiverAudioSessionGhostCopyProperty;
  *(_QWORD *)(a1 + 152) = APReceiverAudioSessionGhostSetProperty;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 160) = APReceiverAudioSessionGhostCopyMetrics;
  *(_QWORD *)(a1 + 168) = APReceiverAudioSessionGhostLogEnded;
  *(_QWORD *)(a1 + 176) = APReceiverAudioSessionGhostCopyAudioBufferInfo;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  if (gLogCategory_APReceiverAudioSession <= 50
    && (gLogCategory_APReceiverAudioSession != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 0;
}

CFNumberRef APReceiverAudioSessionCopyProperty(const __CFNumber *a1, int a2, const __CFString *cf1, uint64_t a4, _DWORD *a5)
{
  CFNumberRef v6;
  int IntWithDefault;
  const void **v10;
  const void *v11;
  const __CFNumber *v12;
  unsigned int v13;
  int v14;
  uint64_t (*v15)(_QWORD, const __CFString *, int *);
  int v16;
  unsigned int valuePtr;
  int v18;

  v6 = a1;
  v18 = 0;
  if (a1)
  {
    if (cf1)
    {
      if (cf1 == CFSTR("AirPlayArrivalToRenderLatencyMs") || CFEqual(cf1, CFSTR("AirPlayArrivalToRenderLatencyMs")))
      {
        valuePtr = 0;
        v18 = audioSession_airPlayArrivalToRenderLatencyMs((uint64_t)v6, &valuePtr);
        if (!v18)
        {
          v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt32Type, &valuePtr);
          if (v6)
            goto LABEL_7;
LABEL_38:
          APSLogErrorAt();
          v14 = -6728;
          goto LABEL_39;
        }
LABEL_36:
        APSLogErrorAt();
LABEL_37:
        v6 = 0;
        goto LABEL_7;
      }
      if (cf1 == CFSTR("WifiArrivalToRenderLatencyMs") || CFEqual(cf1, CFSTR("WifiArrivalToRenderLatencyMs")))
      {
        valuePtr = 0;
        IntWithDefault = APSSettingsGetIntWithDefault();
        v18 = audioSession_airPlayArrivalToRenderLatencyMs((uint64_t)v6, &valuePtr);
        if (!v18)
        {
          v16 = valuePtr + IntWithDefault;
          v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt32Type, &v16);
          if (v6)
            goto LABEL_7;
          goto LABEL_38;
        }
        goto LABEL_36;
      }
      if (cf1 == CFSTR("IsMedia") || CFEqual(cf1, CFSTR("IsMedia")))
      {
        v10 = (const void **)MEMORY[0x24BDBD270];
        if (!*((_BYTE *)v6 + 20))
          v10 = (const void **)MEMORY[0x24BDBD268];
        v11 = *v10;
      }
      else
      {
        if (cf1 == CFSTR("PlatformIOBufferSize") || CFEqual(cf1, CFSTR("PlatformIOBufferSize")))
        {
          valuePtr = 0;
          v13 = atomic_load((unsigned int *)v6 + 66);
          valuePtr = v13;
          v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt32Type, &valuePtr);
          if (v6)
            goto LABEL_7;
          goto LABEL_38;
        }
        if (cf1 == CFSTR("StreamType") || CFEqual(cf1, CFSTR("StreamType")))
        {
          v6 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberSInt32Type, (char *)v6 + 24);
          if (v6)
            goto LABEL_7;
          goto LABEL_38;
        }
        if (cf1 != CFSTR("PKDReceiverContext") && !CFEqual(cf1, CFSTR("PKDReceiverContext")))
        {
          v15 = (uint64_t (*)(_QWORD, const __CFString *, int *))*((_QWORD *)v6 + 18);
          if (!v15)
          {
            APSLogErrorAt();
            v6 = 0;
            v14 = -12782;
            goto LABEL_39;
          }
          v12 = (const __CFNumber *)v15(*((_QWORD *)v6 + 5), cf1, &v18);
LABEL_21:
          v6 = v12;
          goto LABEL_7;
        }
        v11 = (const void *)*((_QWORD *)v6 + 35);
        if (!v11)
          goto LABEL_37;
      }
      v12 = (const __CFNumber *)CFRetain(v11);
      goto LABEL_21;
    }
    APSLogErrorAt();
    v6 = 0;
    v14 = -72151;
  }
  else
  {
    APSLogErrorAt();
    v14 = -72152;
  }
LABEL_39:
  v18 = v14;
LABEL_7:
  if (a5)
    *a5 = v18;
  return v6;
}

void audioSession_sinkTimer(uint64_t a1)
{
  double CurrentNetworkTime;
  double v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  void *v9;
  void *v10;
  unsigned int (*v11)(_QWORD, _QWORD, uint64_t, void *, size_t);
  uint64_t v12;

  v12 = 0;
  CurrentNetworkTime = audioSession_getCurrentNetworkTime(a1, &v12);
  v3 = *(double *)(a1 + 224);
  v4 = *(_QWORD *)(a1 + 312);
  v5 = *(_DWORD *)(a1 + 304);
  v6 = *(unsigned int *)(a1 + 248);
  if (dispatch_source_get_data(*(dispatch_source_t *)(a1 + 296)))
  {
    v7 = (unint64_t)(CurrentNetworkTime * v3);
    v8 = (v7 - v4) * v6;
    v9 = malloc_type_malloc(v8, 0xE205A16FuLL);
    if (v9)
    {
      v10 = v9;
      v11 = *(unsigned int (**)(_QWORD, _QWORD, uint64_t, void *, size_t))(a1 + 128);
      if (!v11 || v11(*(_QWORD *)(a1 + 40), (v4 - v5), v12, v9, v8))
        APSLogErrorAt();
      else
        *(_QWORD *)(a1 + 312) = v7;
      free(v10);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

double audioSession_getCurrentNetworkTime(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, __int128 *);
  __int128 v10;
  uint64_t v11;

  v4 = mach_absolute_time();
  v10 = *MEMORY[0x24BE038C8];
  v11 = *(_QWORD *)(MEMORY[0x24BE038C8] + 16);
  UpTicksToSecondsF();
  v6 = v5;
  v7 = *(_QWORD *)(a1 + 320);
  if (v7)
  {
    v8 = *(unsigned int (**)(uint64_t, uint64_t, __int128 *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
    if (!v8 || v8(v7, v4, &v10))
    {
      APSLogErrorAt();
      if (!a2)
        return v6;
      goto LABEL_6;
    }
    v6 = (double)(int)v11 + (double)*((unint64_t *)&v10 + 1) * 5.42101086e-20;
  }
  if (a2)
LABEL_6:
    *a2 = v4;
  return v6;
}

uint64_t APReceiverAudioSessionReadAudio(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  if (a1)
  {
    v1 = *(uint64_t (**)(_QWORD))(a1 + 128);
    if (v1)
      return v1(*(_QWORD *)(a1 + 40));
    else
      return 4294954514;
  }
  else
  {
    APSLogErrorAt();
    return 4294895144;
  }
}

uint64_t audioSession_airPlayArrivalToRenderLatencyMs(uint64_t a1, _DWORD *a2)
{
  int PropertyInt64Sync;

  PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  *a2 = ((*(double *)(a1 + 224) * 0.5
                      + (double)(1000 * (CFObjectGetPropertyInt64Sync() + PropertyInt64Sync)))
                     / *(double *)(a1 + 224));
  return 0;
}

uint64_t APReceiverAudioSessionApplyVolumeFade(uint64_t a1, uint64_t a2, CMTime *a3)
{
  uint64_t result;
  uint64_t (*v7)(uint64_t, uint64_t, CMTime *);
  uint64_t v8;
  CMTime v9;
  CMTime time1;

  if (!a1)
    return APSLogErrorAt();
  time1 = *a3;
  v9 = *(CMTime *)*(_QWORD *)&MEMORY[0x24BDC0D88];
  result = CMTimeCompare(&time1, &v9);
  if ((int)result <= 0)
    return APSLogErrorAt();
  v7 = *(uint64_t (**)(uint64_t, uint64_t, CMTime *))(a1 + 184);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 40);
    time1 = *a3;
    return v7(v8, a2, &time1);
  }
  return result;
}

uint64_t APReceiverAudioSessionSetProperty(uint64_t a1, const __CFString *cf1, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v8)(_QWORD, const __CFString *, uint64_t);

  if (!a1)
  {
    v6 = 4294895144;
    APSLogErrorAt();
    return v6;
  }
  if (!cf1)
  {
    APSLogErrorAt();
    return 4294895145;
  }
  if (cf1 == CFSTR("PlatformIOBufferSize") || CFEqual(cf1, CFSTR("PlatformIOBufferSize")))
  {
    v6 = 0;
    atomic_store(CFGetInt64Ranged(), (unsigned int *)(a1 + 264));
    return v6;
  }
  v8 = *(uint64_t (**)(_QWORD, const __CFString *, uint64_t))(a1 + 152);
  if (!v8)
  {
    APSLogErrorAt();
    return 4294954514;
  }
  return v8(*(_QWORD *)(a1 + 40), cf1, a3);
}

void _NotifyIsPlayingAmbientAudio(int a1)
{
  uint64_t v1;
  uint32_t v2;
  uint32_t v3;
  _QWORD block[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v8 = 0;
  v1 = a1 != 0;
  if (APSIsAPMSpeaker())
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ___NotifyIsPlayingAmbientAudio_block_invoke;
    block[3] = &unk_24E21E7E8;
    block[4] = &v5;
    if (_NotifyIsPlayingAmbientAudio_sTokenOnce != -1)
      dispatch_once(&_NotifyIsPlayingAmbientAudio_sTokenOnce, block);
    if (*((_DWORD *)v6 + 6))
    {
      APSLogErrorAt();
      if (gLogCategory_AirPlayReceiverPlatform <= 90
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        goto LABEL_9;
      }
    }
    else
    {
      v2 = notify_set_state(_NotifyIsPlayingAmbientAudio_sToken, v1);
      *((_DWORD *)v6 + 6) = v2;
      if (v2)
      {
        APSLogErrorAt();
        if (gLogCategory_AirPlayReceiverPlatform <= 90
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_9;
        }
      }
      else
      {
        v3 = notify_post("com.apple.airplay.isPlayingAmbientAudioChanged");
        *((_DWORD *)v6 + 6) = v3;
        if (!v3)
        {
          if (gLogCategory_AirPlayReceiverPlatform > 50
            || gLogCategory_AirPlayReceiverPlatform == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_11;
          }
LABEL_9:
          LogPrintF();
          goto LABEL_11;
        }
        APSLogErrorAt();
        if (gLogCategory_AirPlayReceiverPlatform <= 90
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_9;
        }
      }
    }
  }
LABEL_11:
  _Block_object_dispose(&v5, 8);
}

void sub_21E1191F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

float _GetHWVolumeSliderValue()
{
  float v1;

  v1 = 0.0;
  if ((objc_msgSend((id)objc_msgSend(MEMORY[0x24BE15888], "sharedAVSystemController"), "getVolume:forCategory:", &v1, CFSTR("Audio/Video")) & 1) != 0)
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      APSVolumeConvertSliderValueToDB();
LABEL_7:
      LogPrintF();
    }
  }
  else if (gLogCategory_AirPlayReceiverPlatform <= 90
         && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_7;
  }
  return v1;
}

void AirPlayReceiverServerPlatformFinalize(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  const void *v13;

  if (a1)
  {
    v1 = (void *)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    objc_msgSend(v1, "removeObserver:name:object:", a1, *MEMORY[0x24BDB15D8], 0);
    v2 = (void *)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    objc_msgSend(v2, "removeObserver:name:object:", a1, *MEMORY[0x24BDB1610], 0);
    v3 = (void *)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
    objc_msgSend(v3, "removeObserver:name:object:", a1, *MEMORY[0x24BDB1608], 0);
    objc_msgSend((id)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter"), "removeObserver:name:object:", a1, CFSTR("APReceiverMediaRemoteHelperNowPlayingAppStartedPlayingNotification"), 0);
    v4 = *(const void **)(a1 + 16);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(a1 + 16) = 0;
    }
    v5 = *(const void **)(a1 + 24);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(a1 + 24) = 0;
    }
    v6 = *(const void **)(a1 + 32);
    if (v6)
    {
      CFRelease(v6);
      *(_QWORD *)(a1 + 32) = 0;
    }
    v7 = *(const void **)(a1 + 40);
    if (v7)
    {
      CFRelease(v7);
      *(_QWORD *)(a1 + 40) = 0;
    }
    objc_msgSend((id)a1, "_unregisterAVSystemControllerNotifications");
    objc_msgSend(*(id *)(a1 + 144), "invalidate");

    *(_QWORD *)(a1 + 144) = 0;
    v8 = *(_DWORD *)(a1 + 120);
    if (v8 != -1)
    {
      notify_cancel(v8);
      *(_DWORD *)(a1 + 120) = -1;
    }
    v9 = *(_DWORD *)(a1 + 124);
    if (v9 != -1)
    {
      notify_cancel(v9);
      *(_DWORD *)(a1 + 124) = -1;
    }
    v10 = *(_DWORD *)(a1 + 128);
    if (v10 != -1)
    {
      notify_cancel(v10);
      *(_DWORD *)(a1 + 128) = -1;
    }
    v11 = *(_DWORD *)(a1 + 132);
    if (v11 != -1)
    {
      notify_cancel(v11);
      *(_DWORD *)(a1 + 132) = -1;
    }
    v12 = *(_DWORD *)(a1 + 136);
    if (v12 != -1)
    {
      notify_cancel(v12);
      *(_DWORD *)(a1 + 136) = -1;
    }
    objc_msgSend(*(id *)(a1 + 160), "setDelegate:", 0);
    v13 = *(const void **)(a1 + 112);
    if (v13)
    {
      CFRelease(v13);
      *(_QWORD *)(a1 + 112) = 0;
    }

    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 64) = 0;

    *(_QWORD *)(a1 + 56) = 0;
  }
}

uint64_t AirPlayReceiverServerPlatformControl(uint64_t a1, CFTypeRef cf1, const void *a3, const __CFDictionary *a4)
{
  int *v8;
  int Int64;
  const void *Value;
  const void *v11;
  uint64_t v12;
  CFTypeID v14;

  v8 = *(int **)(a1 + 16);
  if (CFEqual(cf1, CFSTR("dacpStatus")))
  {
    if (*(_BYTE *)(a1 + 250))
    {
      Int64 = CFDictionaryGetInt64();
      if (Int64)
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        notify_set_state(v8[30], Int64);
        notify_post("com.apple.airplay.dacp.error");
      }
    }
    return 0;
  }
  if (!CFEqual(cf1, CFSTR("updatePrefs")))
  {
    if (CFEqual(cf1, CFSTR("updateActiveSessionRegistration")))
    {
      Value = CFDictionaryGetValue(a4, CFSTR("session"));
      if (Value)
      {
        v11 = Value;
        v12 = CFDictionaryGetInt64();
        objc_msgSend(v8, "updateActiveSessionRegistration:regType:regOp:", v11, v12, CFDictionaryGetInt64());
        return 0;
      }
    }
    else if (CFEqual(cf1, CFSTR("updateHijackID")))
    {
      if (CFDictionaryGetValue(a4, CFSTR("hijackID")))
        return 0;
    }
    else
    {
      if (CFEqual(cf1, CFSTR("reportSessionStall")))
      {
        _TriggerWiFiDECaptureIfNeeded((_QWORD *)a1);
        return 0;
      }
      if (!CFEqual(cf1, CFSTR("triggerStackShot")))
        return -6714;
      if (!a3 || (v14 = CFGetTypeID(a3), v14 == CFStringGetTypeID()))
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        WriteStackshotReport_async();
        return 0;
      }
    }
    APSLogErrorAt();
    return -6705;
  }
  return 0;
}

void _TriggerWiFiDECaptureIfNeeded(_QWORD *a1)
{
  int Int64Ranged;
  NSObject *v3;
  _QWORD block[5];
  int v5;
  int v6;

  v6 = 0;
  Int64Ranged = CFDictionaryGetInt64Ranged();
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a1);
  v3 = a1[11];
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = ___TriggerWiFiDECaptureIfNeeded_block_invoke;
  block[3] = &__block_descriptor_44_e5_v8__0l;
  v5 = Int64Ranged;
  block[4] = a1;
  dispatch_async(v3, block);
}

const __CFString *AirPlayReceiverServerPlatformCopyProperty(int a1, int a2, CFTypeRef cf1, uint64_t a4, int *a5)
{
  const __CFString *v7;
  int v8;

  if (CFEqual(cf1, CFSTR("audioJackStatus")))
  {
    v7 = CFSTR("connected");
  }
  else
  {
    if (!CFEqual(cf1, CFSTR("skewCompensation")))
    {
      v7 = 0;
      v8 = -6714;
      if (!a5)
        return v7;
      goto LABEL_6;
    }
    v7 = (const __CFString *)*MEMORY[0x24BDBD270];
  }
  CFRetain(v7);
  v8 = 0;
  if (a5)
LABEL_6:
    *a5 = v8;
  return v7;
}

uint64_t AirPlayReceiverServerPlatformSetProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, const void *a5)
{
  void *v7;
  CFTypeID v8;
  CFTypeID v9;
  uint64_t result;
  CFTypeID v11;
  int Value;

  if (!cf1)
    goto LABEL_21;
  v7 = *(void **)(a1 + 16);
  if (CFEqual(cf1, CFSTR("receiverSessionCount")))
  {
    if (a5)
    {
      v8 = CFGetTypeID(a5);
      if (v8 == CFNumberGetTypeID())
      {
        objc_msgSend(v7, "setReceiverSessionCountAndUpdateStateIfNeeded:", CFGetInt64());
        return 0;
      }
    }
LABEL_21:
    APSLogErrorAt();
    return 4294960591;
  }
  if (CFEqual(cf1, CFSTR("mainMediaReceiverSession")))
  {
    if (!APSMultiPrimariesEnabled())
      goto LABEL_24;
    if (a5)
    {
      v9 = CFGetTypeID(a5);
      if (APReceiverRequestProcessorGetClassID_once != -1)
        dispatch_once(&APReceiverRequestProcessorGetClassID_once, &__block_literal_global_203);
      if (v9 != CMBaseClassGetCFTypeID())
      {
LABEL_24:
        APSLogErrorAt();
        return 4294960561;
      }
    }
    objc_msgSend(v7, "setMainMediaReceiverSession:", a5);
    return 0;
  }
  if (!CFEqual(cf1, CFSTR("isMuted")))
    return 4294960582;
  if (!a5)
    goto LABEL_21;
  v11 = CFGetTypeID(a5);
  if (v11 != CFBooleanGetTypeID())
    goto LABEL_21;
  result = APSIsAPMSpeaker();
  if ((_DWORD)result)
  {
    Value = CFBooleanGetValue((CFBooleanRef)a5);
    _SetHWIsMuted((uint64_t)v7, 0, Value);
    return 0;
  }
  return result;
}

uint64_t _SetHWIsMuted(uint64_t a1, uint64_t a2, int a3)
{
  const char *v6;
  const char *v7;
  uint64_t v8;
  const char *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  const char *v14;
  const char *v15;

  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    v6 = "yes";
    if (*(_BYTE *)(a1 + 88))
      v7 = "yes";
    else
      v7 = "no";
    if (!a3)
      v6 = "no";
    v14 = v7;
    v15 = v6;
    LogPrintF();
  }
  if (*(unsigned __int8 *)(a1 + 88) != a3)
  {
    *(_BYTE *)(a1 + 88) = a3;
    if (a2)
    {
      v8 = AirPlayReceiverSessionAddMuteRequest(a2, a3);
      if ((_DWORD)v8)
      {
        v12 = v8;
        APSLogErrorAt();
        return v12;
      }
    }
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      if (*(_BYTE *)(a1 + 88))
        v9 = "yes";
      else
        v9 = "no";
      v14 = v9;
      LogPrintF();
    }
    v10 = (void *)objc_msgSend(MEMORY[0x24BE15888], "sharedAVSystemController", v14, v15);
    v11 = objc_msgSend(MEMORY[0x24BDD16E0], "numberWithBool:", *(_BYTE *)(a1 + 88) != 0);
    objc_msgSend(v10, "setAttribute:forKey:error:", v11, *MEMORY[0x24BE15840], 0);
  }
  return 0;
}

void _HandleReceiverUINotification(int a1, _QWORD *a2, CFTypeRef cf1, uint64_t a4, uint64_t a5)
{
  int Int64;
  uint64_t v9;
  NSObject *v10;
  uint64_t TypedValue;
  uint64_t v12;
  _QWORD block[5];

  if (CFEqual(cf1, CFSTR("stopAudio")))
  {
    if (a5)
    {
      Int64 = CFDictionaryGetInt64();
      v9 = a2[6];
      if (v9)
      {
        if (*(_DWORD *)(v9 + 28) == Int64)
        {
          CFRetain(a2);
          v10 = a2[2];
          block[0] = MEMORY[0x24BDAC760];
          block[1] = 3221225472;
          block[2] = ___HandleReceiverUINotification_block_invoke;
          block[3] = &__block_descriptor_40_e5_v8__0l;
          block[4] = a2;
          dispatch_async(v10, block);
          return;
        }
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_10;
        }
      }
    }
    else
    {
      APSLogErrorAt();
    }
  }
  else if (CFEqual(cf1, CFSTR("startPlayingOverP2P")) || CFEqual(cf1, CFSTR("stopPlayingOverP2P")))
  {
    CFObjectControlAsync();
  }
  else if (CFEqual(cf1, CFSTR("startingVideo")) || CFEqual(cf1, CFSTR("updateAudioMode")))
  {
    CFStringGetTypeID();
    TypedValue = CFDictionaryGetTypedValue();
    _UpdateAVAudioSessionAudioMode(TypedValue);
  }
  else if (CFEqual(cf1, CFSTR("MakeNowPlayingSession")))
  {
    v12 = a2[6];
    if (v12)
    {
      objc_msgSend(*(id *)(v12 + 48), "makeNowPlayingPlayer");
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
LABEL_10:
        LogPrintF();
      }
    }
  }
}

void _AirPlayReceiverSessionPlatformInvalidate(_QWORD *a1)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  CFMutableDictionaryRef Mutable;
  uint64_t v6;
  void (*v7)(uint64_t, CFMutableDictionaryRef);
  _QWORD *v8;
  IOPMAssertionID v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  id v15;

  v2 = (_BYTE *)a1[6];
  if (v2)
  {
    v3 = a1[3];
    v4 = *(_QWORD *)(v3 + 16);
    v15 = v2;
    if (*(_BYTE *)(v3 + 249) && v2[24])
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterRemoveListener();
      Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      CFDictionarySetNumber();
      *((_BYTE *)v15 + 24) = 0;
      *((_DWORD *)v15 + 7) = 0;
      v6 = a1[75];
      v7 = *(void (**)(uint64_t, CFMutableDictionaryRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 80);
      if (v7)
        v7(v6, Mutable);
      if (Mutable)
        CFRelease(Mutable);
    }
    _ClearMRNowPlayingInfoForSession((uint64_t)a1);
    if (*(_BYTE *)(v4 + 152))
      objc_msgSend(*((id *)v15 + 6), "setDelegate:", 0);

    v8 = v15;
    *((_QWORD *)v15 + 6) = 0;
    v9 = *((_DWORD *)v15 + 11);
    if (v9)
    {
      IOPMAssertionRelease(v9);
      v8 = v15;
      *((_DWORD *)v15 + 11) = 0;
      if (gLogCategory_AirPlayReceiverPlatform <= 40)
      {
        if (gLogCategory_AirPlayReceiverPlatform != -1 || (v10 = _LogCategory_Initialize(), v8 = v15, v10))
        {
          LogPrintF();
          v8 = v15;
        }
      }
    }
    v11 = v8[1];
    if (v11)
    {
      v12 = *(_QWORD *)(v11 + 32);
      v13 = *(_QWORD *)(*(_QWORD *)(a1[3] + 216) + 48);
      if (v13)
        v14 = v13 == v12;
      else
        v14 = 0;
      if (v14)
      {
        if (APSIsMemberOfHTGroup())
          -[APAVAudioSessionManager setDuckOthers:error:](+[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager"), "setDuckOthers:error:", 0, 0);
      }
    }
    a1[6] = 0;
    *((_QWORD *)v15 + 1) = 0;

  }
}

uint64_t _ClearMRNowPlayingInfoForSession(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  const char *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 48);
  result = CFDictionaryGetEmpty();
  if (v1)
  {
    v3 = result;
    if (gLogCategory_AirPlayReceiverPlatform <= 30
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      v4 = "_ClearMRNowPlayingInfoForSession";
      v5 = v3;
      LogPrintF();
    }
    result = objc_msgSend(*(id *)(v1 + 48), "setMRNowPlayingInfo:withMergePolicy:", v3, 1, v4, v5);
    if (gLogCategory_AirPlayReceiverPlatform <= 50)
    {
      if (gLogCategory_AirPlayReceiverPlatform != -1)
        return LogPrintF();
      result = _LogCategory_Initialize();
      if ((_DWORD)result)
        return LogPrintF();
    }
  }
  return result;
}

uint64_t _UpdateAVAudioSessionAudioMode(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  v2 = 0;
  result = -[APAVAudioSessionManager setAudioMode:isLongForm:error:](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "setAudioMode:isLongForm:error:", a1, 1, &v2);
  if ((_DWORD)result)
  {
    if (gLogCategory_AirPlayReceiverPlatform <= 50)
    {
      if (gLogCategory_AirPlayReceiverPlatform != -1)
        return LogPrintF();
      result = _LogCategory_Initialize();
      if ((_DWORD)result)
        return LogPrintF();
    }
  }
  else if (gLogCategory_AirPlayReceiverPlatform <= 60)
  {
    if (gLogCategory_AirPlayReceiverPlatform != -1)
      return LogPrintF();
    result = _LogCategory_Initialize();
    if ((_DWORD)result)
      return LogPrintF();
  }
  return result;
}

uint64_t AirPlayReceiverSessionPlatformControl(_QWORD *a1, CFTypeRef cf1)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  if (CFEqual(cf1, CFSTR("duckAudio")))
  {
    v15 = 0;
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (a1)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a1[3] + 216) + 48);
      v8 = v7 && v7 == a1[4];
      if (v8 && APSIsMemberOfHTGroup())
      {
        -[APAVAudioSessionManager setDuckOthers:error:](+[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager"), "setDuckOthers:error:", 1, &v15);
        v9 = NSErrorToOSStatus();
        if ((_DWORD)v9)
        {
          APSLogErrorAt();
          if (gLogCategory_AirPlayReceiverPlatform <= 90
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        return v9;
      }
    }
LABEL_67:
    APSLogErrorAt();
    return 4294960587;
  }
  if (!CFEqual(cf1, CFSTR("unduckAudio")))
  {
    if (CFEqual(cf1, CFSTR("handleMediaAudioStartingForSession")))
    {
      v4 = a1[6];
      if (v4)
      {
        v5 = a1[3];
        if (*(_BYTE *)(v5 + 249))
        {
          v6 = *(_QWORD *)(v5 + 16);
          if (gLogCategory_AirPlayReceiverPlatform <= 50
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          if (*(_BYTE *)(v6 + 152))
            objc_msgSend(*(id *)(v4 + 48), "setDelegate:", v4);
        }
        if (a1[6] && !APSIsAPMSpeaker())
        {
          if (gLogCategory_AirPlayReceiverPlatform <= 50
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          _SetSessionSoftwareVolumeSliderValue((uint64_t)a1);
        }
      }
    }
    else if (CFEqual(cf1, CFSTR("handleMediaAudioStoppingForSession")))
    {
      if (a1[6])
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 50
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _ClearMRNowPlayingInfoForSession((uint64_t)a1);
      }
    }
    else if (!CFEqual(cf1, CFSTR("startSession")))
    {
      if (!CFEqual(cf1, CFSTR("stopSession")))
      {
        if (gLogCategory_AirPlayReceiverPlatform <= 90
          && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 4294960582;
      }
      _AirPlayReceiverSessionPlatformInvalidate(a1);
    }
    return 0;
  }
  v15 = 0;
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
    goto LABEL_67;
  v10 = *(_QWORD *)(*(_QWORD *)(a1[3] + 216) + 48);
  v11 = v10 && v10 == a1[4];
  if (!v11 || !APSIsMemberOfHTGroup())
    goto LABEL_67;
  -[APAVAudioSessionManager setDuckOthers:error:](+[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager"), "setDuckOthers:error:", 0, &v15);
  v12 = NSErrorToOSStatus();
  v9 = 0;
  if ((_DWORD)v12)
  {
    v13 = v12;
    APSLogErrorAt();
    if (gLogCategory_AirPlayReceiverPlatform <= 90
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return v13;
  }
  return v9;
}

uint64_t _SetSessionSoftwareVolumeSliderValue(uint64_t a1)
{
  int v2;
  const __CFAllocator *v3;
  CFNumberRef v4;
  CFNumberRef v5;
  __CFDictionary *Mutable;
  __CFDictionary *v7;
  int v8;
  uint64_t v9;
  void (*v10)(uint64_t, const __CFString *, CFNumberRef);
  int valuePtr;

  APSVolumeConvertSliderValueToLinearGain();
  valuePtr = v2;
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v3 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v4 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberFloat32Type, &valuePtr);
  if (!v4)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v5 = v4;
  Mutable = CFDictionaryCreateMutable(v3, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    CFRelease(v5);
    return 4294960568;
  }
  v7 = Mutable;
  CFDictionarySetValue(Mutable, CFSTR("volumeLinear"), v5);
  AirPlayReceiverSessionControl(a1, v8, CFSTR("volumeChanged"));
  v9 = *(_QWORD *)(a1 + 600);
  if (v9)
  {
    v10 = *(void (**)(uint64_t, const __CFString *, CFNumberRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                          + 56);
    if (v10)
      v10(v9, CFSTR("Volume"), v5);
  }
  CFRelease(v5);
  CFRelease(v7);
  return 0;
}

CFNumberRef AirPlayReceiverSessionPlatformCopyProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, int *a5)
{
  CFNumberRef result;
  int v8;
  float v9;
  double valuePtr;

  if (CFEqual(cf1, CFSTR("volume")))
  {
    if (a1)
    {
      if (APSIsAPMSpeaker())
        _GetHWVolumeSliderValue();
      else
        _GetSWVolumeSliderValue(*(float *)(*(_QWORD *)(a1 + 48) + 32));
      APSVolumeConvertSliderValueToDB();
      valuePtr = v9;
      result = CFNumberCreate(0, kCFNumberDoubleType, &valuePtr);
      if (result)
      {
        v8 = 0;
        if (!a5)
          return result;
        goto LABEL_10;
      }
      APSLogErrorAt();
      v8 = -6728;
    }
    else
    {
      APSLogErrorAt();
      v8 = -6705;
      APSLogErrorAt();
    }
    result = 0;
    if (!a5)
      return result;
  }
  else
  {
    result = 0;
    v8 = -6714;
    if (!a5)
      return result;
  }
LABEL_10:
  *a5 = v8;
  return result;
}

float _GetSWVolumeSliderValue(float a1)
{
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return a1;
}

uint64_t AirPlayReceiverSessionPlatformSetProperty(_QWORD *a1, int a2, CFTypeRef cf1, __CFString *a4, const __CFArray *a5)
{
  uint64_t v5;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, const __CFString *, const __CFArray *);
  uint64_t v14;
  void (*v15)(uint64_t, const __CFString *, const __CFArray *);
  uint64_t IsMuted;
  float v18;
  uint64_t v19;
  CFTypeID v20;
  uint64_t v21;
  CFIndex Count;
  CFTypeID v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;

  v5 = a1[6];
  if (!v5)
    return 0;
  if (CFEqual(cf1, CFSTR("mrNowPlayingInfo")))
  {
    if (a4 == CFSTR("replace") || a4 && CFEqual(a4, CFSTR("replace")))
    {
      v10 = 1;
      v11 = "Replace";
    }
    else
    {
      v10 = 0;
      v11 = "Update";
    }
    if (gLogCategory_AirPlayReceiverPlatform <= 30
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
      objc_msgSend(*(id *)(v5 + 48), "setMRNowPlayingInfo:withMergePolicy:", a5, v10, "AirPlayReceiverSessionPlatformSetProperty", v11, a5);
    }
    else
    {
      objc_msgSend(*(id *)(v5 + 48), "setMRNowPlayingInfo:withMergePolicy:", a5, v10, v24, v25, v26);
    }
    return 0;
  }
  if (CFEqual(cf1, CFSTR("metaData")))
  {
    if (*(_BYTE *)(a1[3] + 249))
    {
      objc_msgSend(*(id *)(v5 + 48), "setAPNowPlayingInfo:", a5);
      if (*(_BYTE *)(v5 + 24))
      {
        v12 = a1[75];
        v13 = *(void (**)(uint64_t, const __CFString *, const __CFArray *))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                                + 8)
                                                                                    + 56);
        if (v13)
          v13(v12, CFSTR("AudioMetadata"), a5);
      }
    }
    return 0;
  }
  if (CFEqual(cf1, CFSTR("progress")))
  {
    if (*(_BYTE *)(a1[3] + 249) && *(_BYTE *)(v5 + 24))
    {
      v14 = a1[75];
      v15 = *(void (**)(uint64_t, const __CFString *, const __CFArray *))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                              + 8)
                                                                                  + 56);
      if (v15)
        v15(v14, CFSTR("AudioProgress"), a5);
      objc_msgSend(*(id *)(v5 + 48), "setAPNowPlayingInfo:", a5);
      if (gLogCategory_AirPlayReceiverPlatform <= 10
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    return 0;
  }
  if (CFEqual(cf1, CFSTR("timingProtocol")))
    return 0;
  if (CFEqual(cf1, CFSTR("volume")))
  {
    CFGetDouble();
    APSVolumeConvertDBToClampedSliderValue();
    IsMuted = _SetVolumeSliderValue((uint64_t)a1, v18);
    if (!(_DWORD)IsMuted)
      return IsMuted;
    goto LABEL_52;
  }
  if (!CFEqual(cf1, CFSTR("isMuted")))
  {
    if (CFEqual(cf1, CFSTR("mrPlaybackState")))
    {
      v21 = CFGetInt64Ranged();
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        v24 = a1;
        v25 = v21;
        LogPrintF();
      }
      objc_msgSend(*(id *)(v5 + 48), "setMRPlaybackState:", v21, v24, v25);
    }
    else if (CFEqual(cf1, CFSTR("mrSupportedCommandsFromSender")))
    {
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        if (a5)
          Count = CFArrayGetCount(a5);
        else
          Count = 0;
        v24 = a1;
        v25 = Count;
        LogPrintF();
      }
      objc_msgSend(*(id *)(v5 + 48), "setMRSupportedCommandsFromSerializedArray:", a5, v24, v25);
    }
    else
    {
      if (!CFEqual(cf1, CFSTR("mrNowPlayingClient")))
        return 4294960582;
      if (a5 && (v23 = CFGetTypeID(a5), v23 == CFDataGetTypeID()))
        objc_msgSend(*(id *)(v5 + 48), "setMRNowPlayingClient:", a5);
      else
        APSLogErrorAt();
    }
    return 0;
  }
  v19 = CFGetInt64();
  if (a4)
  {
    v20 = CFGetTypeID(a4);
    if (v20 == CFDictionaryGetTypeID())
      FigCFDictionaryGetBooleanIfPresent();
  }
  if (gLogCategory_AirPlayReceiverPlatform <= 40
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  IsMuted = _SetIsMuted((uint64_t)a1, v19 != 0);
  if ((_DWORD)IsMuted)
LABEL_52:
    APSLogErrorAt();
  return IsMuted;
}

uint64_t _SetVolumeSliderValue(uint64_t a1, float a2)
{
  uint64_t v4;
  float v5;
  CFNumberRef v7;
  CFNumberRef v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  float valuePtr;

  if (!a1)
    goto LABEL_26;
  if (!APSIsAPMSpeaker())
    return _SetSWVolumeSliderValue(a1, 0, a2);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 16);
  if (!v4)
  {
LABEL_26:
    APSLogErrorAt();
    return 4294960591;
  }
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertSliderValueToDB();
    v14 = v5;
    v15 = a2;
    LogPrintF();
  }
  if (APSVolumeSliderValuesAreNoticeablyDifferent() || *(_BYTE *)(v4 + 88) != (a2 == 0.0))
  {
    valuePtr = a2;
    v7 = CFNumberCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], kCFNumberFloatType, &valuePtr);
    if (v7)
    {
      v8 = v7;
      v9 = _AddVolumeOrMuteRequest(a1, v7);
      if ((_DWORD)v9)
      {
        v13 = v9;
        APSLogErrorAt();
        CFRelease(v8);
      }
      else
      {
        *(float *)(a1 + 688) = valuePtr;
        CFRelease(v8);
        if (!*(_BYTE *)(v4 + 88)
          || (*(_BYTE *)(v4 + 88) = 0, v10 = AirPlayReceiverSessionAddMuteRequest(a1, 0), !(_DWORD)v10))
        {
          *(float *)(v4 + 84) = a2;
          if (gLogCategory_AirPlayReceiverPlatform <= 40)
          {
            if (gLogCategory_AirPlayReceiverPlatform == -1)
            {
              if (!_LogCategory_Initialize())
                goto LABEL_19;
              a2 = *(float *)(v4 + 84);
            }
            v14 = a2;
            LogPrintF();
          }
LABEL_19:
          v11 = (void *)objc_msgSend(MEMORY[0x24BE15888], "sharedAVSystemController", *(_QWORD *)&v14, *(_QWORD *)&v15);
          LODWORD(v12) = *(_DWORD *)(v4 + 84);
          if ((objc_msgSend(v11, "setVolumeTo:forCategory:", CFSTR("Audio/Video"), v12) & 1) == 0
            && gLogCategory_AirPlayReceiverPlatform <= 90
            && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return 0;
        }
        v13 = v10;
      }
    }
    else
    {
      APSLogErrorAt();
      v13 = 4294960568;
    }
    APSLogErrorAt();
    return v13;
  }
  return 0;
}

uint64_t _SetIsMuted(uint64_t a1, int a2)
{
  uint64_t v5;
  float v6;
  float v7;
  float v8;
  uint64_t v9;

  if (a1)
  {
    if (APSIsAPMSpeaker())
      return _SetHWIsMuted(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16), a1, a2);
    APSVolumeConvertDBToSliderValue();
    APSVolumeConvertDBToSliderValue();
    v5 = *(_QWORD *)(a1 + 48);
    if (gLogCategory_AirPlayReceiverPlatform <= 50
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      APSVolumeConvertSliderValueToDB();
      LogPrintF();
    }
    if (*(unsigned __int8 *)(v5 + 36) == a2)
    {
      return 0;
    }
    else
    {
      v6 = *(float *)(*(_QWORD *)(a1 + 48) + 32);
      _GetSWVolumeSliderValue(v6);
      v7 = *(float *)(v5 + 40);
      if (v7 <= 0.0)
      {
        *(_DWORD *)(v5 + 40) = 1045220557;
        v7 = 0.2;
      }
      APSVolumeConvertDBToSliderValue();
      if (a2 == 1)
        v7 = v8;
      else
        v6 = v8;
      *(float *)(v5 + 40) = v6;
      *(_BYTE *)(v5 + 36) = a2;
      if (gLogCategory_AirPlayReceiverPlatform <= 50
        && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v9 = _SetSWVolumeSliderValue(a1, 1, v7);
      if ((_DWORD)v9)
        APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return v9;
}

uint64_t _SetSWVolumeSliderValue(uint64_t a1, int a2, float a3)
{
  uint64_t v6;
  uint64_t result;

  v6 = *(_QWORD *)(a1 + 48);
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    APSVolumeConvertSliderValueToDB();
    LogPrintF();
  }
  result = APSVolumeSliderValuesAreNoticeablyDifferent();
  if ((_DWORD)result)
  {
    *(float *)(v6 + 32) = a3;
    if (!a2)
    {
      *(_BYTE *)(v6 + 36) = 0;
      APSVolumeConvertSliderValueToDB();
      CFObjectSetPropertyDouble();
    }
    return _SetSessionSoftwareVolumeSliderValue(a1);
  }
  return result;
}

void sysInfo_updateAdvertiserInfoAndNotify(uint64_t a1, uint64_t a2)
{
  const void *v4;
  uint64_t v5;
  int v6;
  const void *v7;
  int v8;
  int v9;
  const __CFData *v10;
  int v11;
  int DeviceNameInternal;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  const void *FeaturesInternal;
  uint64_t v19;
  uint64_t v20;
  const void *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  const void *v26;
  const void **v27;
  const void *v28;
  int v29;
  int v30;
  int v31;
  int v32;
  const void *v33;
  int v34;
  int v35;
  const void *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  const void *v40;
  const void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  const void *v50;
  int v51;
  int v52;
  const void *v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  _BOOL4 v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  const void *v68;
  int v69;
  char __str[1025];
  __int128 v71;
  __int128 v72;
  uint64_t v73;

  v73 = *MEMORY[0x24BDAC8D0];
  v4 = *(const void **)(a1 + 56);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(a1 + 56) = 0;
  }
  v5 = *MEMORY[0x24BDBD240];
  v68 = 0;
  v6 = APAdvertiserInfoCreate(v5, &v68);
  if (v6)
  {
    v52 = v6;
    APSLogErrorAt();
    v7 = v68;
    goto LABEL_86;
  }
  v7 = v68;
  v8 = CFObjectSetPropertyInt64();
  if (v8)
  {
    v52 = v8;
LABEL_124:
    APSLogErrorAt();
    goto LABEL_86;
  }
  v9 = CFObjectSetPropertyInt64();
  if (v9)
  {
    v52 = v9;
    goto LABEL_124;
  }
  __str[0] = 0;
  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    v10 = *(const __CFData **)(a1 + 720);
    if (v10)
    {
      CFDataGetBytePtr(v10);
      HardwareAddressToCString();
      v11 = CFObjectSetPropertyCString();
      if (v11)
      {
        v52 = v11;
        goto LABEL_124;
      }
    }
  }
  DeviceNameInternal = sysInfo_getDeviceNameInternal(a1, __str, 0x401uLL);
  if (DeviceNameInternal)
  {
    v52 = DeviceNameInternal;
    goto LABEL_124;
  }
  v13 = CFObjectSetPropertyCString();
  if (v13)
  {
    v52 = v13;
    goto LABEL_124;
  }
  HardwareAddressToCString();
  v14 = CFObjectSetPropertyCString();
  if (v14)
  {
    v52 = v14;
    goto LABEL_124;
  }
  v17 = *(const void **)(a1 + 120);
  if (v17)
    APAdvertiserInfoSetProperty((uint64_t)v7, v15, CFSTR("deviceEnclosureColor"), v16, v17);
  FeaturesInternal = (const void *)sysInfo_createFeaturesInternal(a1);
  if (FeaturesInternal)
  {
    v21 = FeaturesInternal;
    v22 = APAdvertiserInfoSetProperty((uint64_t)v7, v19, CFSTR("featuresEx"), v20, FeaturesInternal);
    if (v22)
    {
      v52 = v22;
      goto LABEL_116;
    }
    sysInfo_getStatusFlags((_BYTE *)a1);
    v23 = CFObjectSetPropertyInt64();
    if (v23)
    {
      v52 = v23;
      goto LABEL_116;
    }
    v26 = *(const void **)(a1 + 144);
    if (!v26)
    {
LABEL_29:
      v33 = *(const void **)(a1 + 160);
      if (v33)
      {
        v34 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, CFSTR("parentGroupID"), v25, v33);
        if (v34)
        {
          v52 = v34;
          goto LABEL_116;
        }
        v35 = CFObjectSetProperty();
        if (v35)
        {
          v52 = v35;
          goto LABEL_116;
        }
      }
      v36 = *(const void **)(a1 + 256);
      if (v36)
      {
        v37 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, CFSTR("persistentGroupUUID"), v25, v36);
        if (v37)
        {
          v52 = v37;
          goto LABEL_116;
        }
        if (*(uint64_t *)(a1 + 240) >= 1)
          CFObjectSetPropertyInt64();
        CFObjectSetPropertyInt64();
        APAdvertiserInfoSetProperty((uint64_t)v7, v38, CFSTR("persistentGroupModel"), v39, *(const void **)(a1 + 296));
        v40 = *(const void **)(a1 + 280);
        if (v40)
          APAdvertiserInfoSetProperty((uint64_t)v7, v24, CFSTR("persistentGroupMemberID"), v25, v40);
      }
      v41 = *(const void **)(a1 + 176);
      if (v41)
      {
        v42 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, CFSTR("tightSyncUUID"), v25, v41);
        if (v42)
        {
          v52 = v42;
          goto LABEL_116;
        }
        APAdvertiserInfoSetProperty((uint64_t)v7, v43, CFSTR("tightSyncGroupModel"), v44, *(const void **)(a1 + 200));
      }
      __str[0] = 0;
      sysInfo_getDeviceModel((uint64_t)__str);
      if (__str[0])
      {
        v45 = CFObjectSetPropertyCString();
        if (v45)
        {
          v52 = v45;
          goto LABEL_116;
        }
      }
      v46 = CFObjectSetPropertyInt64();
      if (v46)
      {
        v52 = v46;
        goto LABEL_116;
      }
      v47 = CFObjectSetPropertyCString();
      if (v47)
      {
        v52 = v47;
        goto LABEL_116;
      }
      v50 = *(const void **)(a1 + 464);
      if (v50)
      {
        v51 = APAdvertiserInfoSetProperty((uint64_t)v7, v48, CFSTR("publicCUAirPlayPairingIdentity"), v49, v50);
        if (v51)
        {
          v52 = v51;
          goto LABEL_116;
        }
      }
      else if (gLogCategory_APReceiverSystemInfo <= 50
             && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v53 = *(const void **)(a1 + 456);
      if (v53)
      {
        v54 = APAdvertiserInfoSetProperty((uint64_t)v7, v48, CFSTR("publicCUSystemPairingIdentity"), v49, v53);
        if (v54)
        {
          v52 = v54;
          goto LABEL_116;
        }
      }
      else if (gLogCategory_APReceiverSystemInfo <= 50
             && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (sysInfo_getPairingPublicKeyID())
      {
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      else
      {
        DataToHexCStringEx();
        v55 = CFObjectSetPropertyCString();
        if (v55)
        {
          v52 = v55;
          goto LABEL_116;
        }
      }
      APSVersionUtilsGetShortVersionLength();
      v56 = CFObjectSetPropertyCString();
      if (v56)
      {
        v52 = v56;
      }
      else
      {
        v69 = 0;
        v71 = 0u;
        v72 = 0u;
        GestaltGetCString();
        if (!v69 && (v69 = CFObjectSetPropertyCString()) == 0 || (APSLogErrorAt(), (v52 = v69) == 0))
        {
          wmhYOjgJkR();
          v57 = CFObjectSetPropertyInt64();
          if (v57)
          {
            v52 = v57;
          }
          else
          {
            snprintf(__str, 0x401uLL, "%u", 65537);
            v58 = CFObjectSetPropertyCString();
            if (v58)
            {
              v52 = v58;
            }
            else
            {
              v59 = CFObjectSetPropertyInt64();
              if (v59)
              {
                v52 = v59;
              }
              else
              {
                v60 = CFObjectSetPropertyInt64();
                if (v60)
                {
                  v52 = v60;
                }
                else
                {
                  v61 = APSFeaturesHasFeature() != 0;
                  if (APSFeaturesHasFeature())
                    v62 = (2 * v61) | 4;
                  else
                    v62 = 2 * v61;
                  if (v62 | (APSFeaturesHasFeature() != 0) && (v63 = CFObjectSetPropertyInt64()) != 0)
                  {
                    v52 = v63;
                  }
                  else
                  {
                    v64 = CFObjectSetProperty();
                    if (v64)
                    {
                      v52 = v64;
                    }
                    else
                    {
                      v65 = CFObjectSetPropertyCString();
                      if (v65)
                      {
                        v52 = v65;
                      }
                      else
                      {
                        v66 = *(_DWORD *)(a1 + 316);
                        if (v66 != 2 && !*(_BYTE *)(a1 + 424) || (v67 = CFObjectSetPropertyInt64()) == 0)
                        {
                          v52 = 0;
                          *(_QWORD *)(a1 + 56) = v7;
                          v68 = 0;
                          v7 = 0;
LABEL_85:
                          CFRelease(v21);
                          goto LABEL_86;
                        }
                        v52 = v67;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_116:
      APSLogErrorAt();
      goto LABEL_85;
    }
    if (*(_QWORD *)(a1 + 256))
    {
      v27 = (const void **)(a1 + 288);
    }
    else
    {
      if (!*(_QWORD *)(a1 + 176))
      {
        v28 = 0;
        goto LABEL_24;
      }
      v27 = (const void **)(a1 + 208);
    }
    v28 = *v27;
LABEL_24:
    v29 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, CFSTR("groupID"), v25, v26);
    if (v29)
    {
      v52 = v29;
      goto LABEL_116;
    }
    v30 = CFObjectSetProperty();
    if (v30)
    {
      v52 = v30;
      goto LABEL_116;
    }
    v31 = CFObjectSetProperty();
    if (v31)
    {
      v52 = v31;
      goto LABEL_116;
    }
    if (v28)
    {
      v32 = APAdvertiserInfoSetProperty((uint64_t)v7, v24, CFSTR("groupPublicName"), v25, v28);
      if (v32)
      {
        v52 = v32;
        goto LABEL_116;
      }
    }
    goto LABEL_29;
  }
  APSLogErrorAt();
  v52 = -6728;
LABEL_86:
  if (v7)
    CFRelease(v7);
  if (v52)
  {
    APSLogErrorAt();
  }
  else
  {
    if (a2)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
    }
    sysInfo_handleInfoDictUpdate(a1);
  }
}

uint64_t sysInfo_getDeviceNameInternal(uint64_t a1, char *__dst, size_t __size)
{
  const char *v5;
  uint64_t result;

  if (__size)
  {
    v5 = *(const char **)(a1 + 400);
    if (v5)
    {
LABEL_3:
      strlcpy(__dst, v5, __size);
      return 0;
    }
    *__dst = 0;
    strlcpy(__dst, (const char *)(a1 + 336), __size);
    result = 0;
    if (!*__dst)
    {
      v5 = "AirPlay";
      goto LABEL_3;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895275;
  }
  return result;
}

uint64_t sysInfo_createFeaturesInternal(uint64_t a1)
{
  uint64_t Mutable;

  Mutable = APSFeaturesCreateMutable();
  if (Mutable)
  {
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (!*(_DWORD *)(a1 + 568))
    {
      APSFeaturesSetFeature();
      if (!APSIsAPMSpeaker() && !APSSettingsGetInt64() && !*(_BYTE *)(a1 + 682))
      {
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        if (!APSSettingsGetIntWithDefault())
          APSFeaturesSetFeature();
        if (APSSettingsGetIntWithDefault())
          APSFeaturesSetFeature();
        if (APSSettingsGetIntWithDefault())
          APSFeaturesSetFeature();
        if (APSSettingsGetIntWithDefault())
          APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
        APSFeaturesSetFeature();
      }
    }
    if (!APSIsAPMSpeaker())
    {
      APSFeaturesSetFeature();
      APSFeaturesSetFeature();
      APSFeaturesSetFeature();
    }
    if (APSIsAPValeriaScreenSender())
      APSFeaturesSetFeature();
    if (!APSIsAPMSpeaker())
      APSFeaturesSetFeature();
    if (!APSIsAPMSpeaker() && GestaltGetBoolean())
      APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (!*(_DWORD *)(a1 + 568))
      APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (APSSettingsGetInt64())
      APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (*(_BYTE *)(a1 + 311))
    {
      APSFeaturesSetFeature();
      if (*(_BYTE *)(a1 + 311))
      {
        if (GestaltGetBoolean())
          APSFeaturesSetFeature();
      }
    }
    if (!*(_BYTE *)(a1 + 312))
      APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (APSSettingsIsFeatureEnabled())
      APSFeaturesSetFeature();
    if (APSIsAPMSpeaker())
      APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    APSFeaturesSetFeature();
    if (IsAppleTV() || APSIsAPMSpeaker())
      APSFeaturesSetFeature();
    if (IsAppleTV())
      APSFeaturesSetFeature();
    if (*(_BYTE *)(a1 + 128))
      APSFeaturesSetFeature();
    if (APSIsProximityReceiverEnabled())
      APSFeaturesSetFeature();
    if (APSSettingsGetInt64() && APSHasNANSupport())
      APSFeaturesSetFeature();
    if (APSShouldClusterEngageOnActivation())
      APSFeaturesSetFeature();
    if (!APSFeaturesIsEmpty())
      APSFeaturesClearAllFeatures();
    if (APSIsSetMRInfoCommandEnabled())
      APSFeaturesSetFeature();
    if (APSIsAPMSpeaker() && APSSettingsIsFeatureEnabled())
      APSFeaturesSetFeature();
    if (APSSettingsGetIntWithDefault())
      APSFeaturesSetFeature();
    if (APSSettingsIsFeatureEnabled() && FVDUtilsEncryptedDecodeSupported())
      APSFeaturesSetFeature();
  }
  else
  {
    APSLogErrorAt();
  }
  return Mutable;
}

uint64_t sysInfo_getStatusFlags(_BYTE *a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;

  if (a1[480])
    v2 = 8;
  else
    v2 = (a1[481] != 0) << 7;
  if (a1[433])
    v2 |= 0x200u;
  if (a1[129])
    v3 = 524292;
  else
    v3 = 4;
  v4 = v3 | v2;
  if (APSSettingsGetInt64() && a1[307])
    v4 |= 0x40u;
  if (a1[682])
    v5 = v4 | 0x40000;
  else
    v5 = v4;
  if (a1[309])
    v5 |= 0x100u;
  if (a1[310])
    v6 = v5 | 0x400;
  else
    v6 = v5;
  if (a1[169] && APSMultiPrimariesEnabled())
    v6 |= 0x800u;
  if (a1[225])
    v7 = v6 | 0x20000;
  else
    v7 = v6;
  if (a1[226])
    v8 = v7 | 0x100000;
  else
    v8 = v7;
  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    if (a1[305])
      v9 = v8 | 0x1000;
    else
      v9 = v8;
    if (a1[304])
      v9 |= 0x8000u;
    if (a1[308])
      v8 = v9 | 0x10000;
    else
      v8 = v9;
  }
  if (APSIsAPMSpeaker())
  {
    if (a1[184])
      v8 = v8 | 0x2000;
    else
      v8 = v8;
    if (a1[306])
    {
      if (APSSettingsIsFeatureEnabled())
        return v8 | 0x200000;
      else
        return v8;
    }
  }
  return v8;
}

__n128 sysInfo_getDeviceModel(uint64_t a1)
{
  __n128 result;
  __n128 *v3;

  *(_BYTE *)a1 = 0;
  GetDeviceModelString();
  if (!*(_BYTE *)a1)
  {
    if (APSIsAPMSpeaker())
    {
      *(_WORD *)(a1 + 16) = 49;
      v3 = (__n128 *)"AudioAccessory1,1";
LABEL_4:
      result = *v3;
      *(__n128 *)a1 = *v3;
      return result;
    }
    if (!*(_BYTE *)a1)
    {
      *(_WORD *)(a1 + 16) = 49;
      v3 = (__n128 *)"AirPlayGeneric1,1";
      goto LABEL_4;
    }
  }
  return result;
}

uint64_t sysInfo_getPairingPublicKeyID()
{
  uint64_t v0;
  uint64_t v1;

  v0 = gQblcfSzZBQsYCCV();
  if ((_DWORD)v0)
  {
    v1 = v0;
    goto LABEL_5;
  }
  v1 = KUY675K4ryxHGzD5GVD();
  CFRelease(0);
  if ((_DWORD)v1)
LABEL_5:
    APSLogErrorAt();
  return v1;
}

void sysInfo_handleInfoDictUpdate(uint64_t a1)
{
  const __CFAllocator *v2;
  __CFDictionary *v3;
  __CFDictionary *Mutable;
  __CFDictionary *v5;
  __CFDictionary *v6;
  CFTypeRef cf;

  v6 = 0;
  cf = 0;
  if (!IsAppleTV() && !APSIsAPMSpeaker())
  {
    v3 = 0;
    goto LABEL_23;
  }
  if (CFArrayEnsureCreatedAndAppend())
  {
    APSLogErrorAt();
    v3 = 0;
    v5 = 0;
    goto LABEL_17;
  }
  v2 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  sysInfo_copyInfoDictInternal(a1, (const __CFArray *)cf, (CFAllocatorRef)*MEMORY[0x24BDBD240], &v6);
  v3 = v6;
  if (!v6)
  {
    APSLogErrorAt();
LABEL_23:
    v5 = 0;
    goto LABEL_7;
  }
  Mutable = CFDictionaryCreateMutable(v2, 1, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v5 = Mutable;
  if (Mutable)
  {
    CFDictionarySetValue(Mutable, CFSTR("InfoDict"), v3);
    if (!APSXPCClientSendCommandCreatingReply())
      goto LABEL_7;
  }
  APSLogErrorAt();
LABEL_17:
  if (gLogCategory_APReceiverSystemInfo <= 90
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_7:
  if (cf)
    CFRelease(cf);
  if (v3)
    CFRelease(v3);
  if (v5)
    CFRelease(v5);
}

uint64_t sysInfo_copyInfoDictInternal(uint64_t a1, const __CFArray *a2, CFAllocatorRef allocator, __CFDictionary **a4)
{
  CFMutableDictionaryRef Mutable;
  __CFDictionary *v8;
  const void *FeaturesInternal;
  uint64_t v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const __CFAllocator *v18;
  CFMutableDictionaryRef v19;
  __CFDictionary *v20;
  const void *v21;
  _BOOL4 v22;
  const void *v23;
  CFMutableDictionaryRef v24;
  CFMutableDictionaryRef v25;
  const void *v26;
  __CFDictionary *v27;
  const void *v28;
  const void *v29;
  const void *v30;
  uint64_t v31;
  __CFDictionary **v33;
  char __dst[1025];
  const void *v35;
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  Mutable = CFDictionaryCreateMutable(allocator, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    v31 = 4294895276;
    APSLogErrorAt();
    return v31;
  }
  v8 = Mutable;
  HardwareAddressToCString();
  CFDictionarySetCString();
  FeaturesInternal = (const void *)sysInfo_createFeaturesInternal(a1);
  if (!APSFeaturesIsEmpty())
  {
    v35 = 0;
    v10 = APSFeaturesCopyStringRepresentation();
    if ((_DWORD)v10)
    {
      v31 = v10;
      goto LABEL_98;
    }
    CFDictionarySetValue(v8, CFSTR("featuresEx"), v35);
    CFRelease(v35);
    APSFeaturesGetLegacyFlags();
    CFDictionarySetInt64();
  }
  v11 = (const void *)*MEMORY[0x24BDBD270];
  CFDictionarySetValue(v8, CFSTR("keepAliveSendStatsAsBody"), (const void *)*MEMORY[0x24BDBD270]);
  v12 = (const void *)*MEMORY[0x24BDBD268];
  if (*(_BYTE *)(a1 + 681))
    v13 = v11;
  else
    v13 = (const void *)*MEMORY[0x24BDBD268];
  CFDictionarySetValue(v8, CFSTR("canRecordScreenStream"), v13);
  if (*(_BYTE *)(a1 + 682))
    v14 = v11;
  else
    v14 = v12;
  CFDictionarySetValue(v8, CFSTR("screenDemoMode"), v14);
  if (sysInfo_getReceiverHDRCapability_sCheckOnce != -1)
    dispatch_once(&sysInfo_getReceiverHDRCapability_sCheckOnce, &__block_literal_global_376);
  CFDictionarySetValue(v8, CFSTR("receiverHDRCapability"), (const void *)sysInfo_getReceiverHDRCapability_capability);
  if (*(_BYTE *)(a1 + 683))
    CFDictionarySetValue(v8, CFSTR("supportsSenderUIEvents"), v11);
  __dst[0] = 0;
  sysInfo_getDeviceModel((uint64_t)__dst);
  CFDictionarySetCString();
  v15 = *(const void **)(a1 + 120);
  if (v15)
    CFDictionarySetValue(v8, CFSTR("deviceEnclosureColor"), v15);
  __dst[0] = 0;
  sysInfo_getDeviceNameInternal(a1, __dst, 0x401uLL);
  CFDictionarySetCString();
  __dst[0] = 0;
  GetSystemBuildVersionString();
  CFDictionarySetCString();
  CFDictionarySetCString();
  if (sysInfo_getPairingPublicKeyID())
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    CFDictionarySetData();
  }
  v16 = *(const void **)(a1 + 464);
  if (v16)
    CFDictionarySetValue(v8, CFSTR("pi"), v16);
  v17 = *(const void **)(a1 + 456);
  if (v17)
    CFDictionarySetValue(v8, CFSTR("psi"), v17);
  APSVersionUtilsGetShortVersionLength();
  CFDictionarySetCString();
  sysInfo_getStatusFlags((_BYTE *)a1);
  CFDictionarySetInt64();
  if (a2)
  {
    CFArrayGetCount(a2);
    CFArrayApplyBlock();
  }
  wmhYOjgJkR();
  CFDictionarySetInt64();
  v18 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  v19 = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (v19)
  {
    v20 = v19;
    v33 = a4;
    if (APSFeaturesHasFeature() || APSFeaturesHasFeature())
    {
      CFDictionarySetValue(v20, CFSTR("supportsUIForAudioOnlyContent"), v11);
      CFDictionarySetValue(v20, CFSTR("supportsFPSSecureStop"), v11);
      if (APSSettingsGetIntWithDefault())
        v21 = v11;
      else
        v21 = v12;
      CFDictionarySetValue(v20, CFSTR("supportsStopAtEndOfQueue"), v21);
      v22 = APSSettingsIsFeatureEnabled() != 0;
    }
    else
    {
      CFDictionarySetValue(v20, CFSTR("supportsUIForAudioOnlyContent"), v12);
      CFDictionarySetValue(v20, CFSTR("supportsFPSSecureStop"), v12);
      if (APSSettingsGetIntWithDefault())
        v26 = v11;
      else
        v26 = v12;
      CFDictionarySetValue(v20, CFSTR("supportsStopAtEndOfQueue"), v26);
      v22 = 0;
    }
    if (gLogCategory_APReceiverSystemInfo <= 30
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v22)
      v23 = v11;
    else
      v23 = v12;
    CFDictionarySetValue(v20, CFSTR("supportsOfflineHLS"), v23);
    if (APSSettingsIsFeatureEnabled())
      CFDictionarySetValue(v20, CFSTR("supportsAirPlayVideoWithSharePlay"), v11);
    CFDictionarySetValue(v8, CFSTR("playbackCapabilities"), v20);
    CFRelease(v20);
    v24 = CFDictionaryCreateMutable(v18, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (v24)
    {
      v25 = v24;
      APAudioFormatGetSupportedTransportAudioFormatsForRealTimeReceiver();
      CFDictionarySetInt64();
      APAudioFormatGetSupportedTransportAudioFormatsForBufferedReceiver();
      CFDictionarySetInt64();
      APAudioFormatGetSupportedTransportAudioFormatsForScreenReceiver();
      CFDictionarySetInt64();
      APAudioFormatGetSupportedTransportAudioFormatsLowLatencyReceiver();
      CFDictionarySetInt64();
      CFDictionarySetValue(v8, CFSTR("supportedFormats"), v25);
      CFRelease(v25);
    }
    else if (gLogCategory_APReceiverSystemInfo <= 90
           && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v27 = CFDictionaryCreateMutable(v18, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (v27)
    {
      if (IsAppleTV() && !*(_BYTE *)(a1 + 306))
      {
        FigCFDictionaryGetValue();
        FigCFDictionaryGetValue();
      }
      v28 = (const void *)APSAudioFormatDescriptionListCreateForBufferedReceiverWithAudioCapabilities();
      if (v28)
      {
        if (APSAudioFormatDescriptionListCreateAdvertisementArray())
        {
          if (gLogCategory_APReceiverSystemInfo <= 90
            && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        else
        {
          CFDictionarySetValue(v27, CFSTR("bufferStream"), 0);
          CFDictionarySetValue(v8, CFSTR("supportedAudioFormatsExtended"), v27);
        }
        goto LABEL_78;
      }
      if (gLogCategory_APReceiverSystemInfo > 90
        || gLogCategory_APReceiverSystemInfo == -1 && !_LogCategory_Initialize())
      {
LABEL_77:
        v28 = 0;
LABEL_78:
        v29 = *(const void **)(a1 + 696);
        if (v29)
          CFDictionarySetValue(v8, CFSTR("volumeControlType"), v29);
        CFDictionarySetDouble();
        if (APSSettingsIsFeatureEnabled())
        {
          CFDictionarySetInt64();
          if (*(_BYTE *)(a1 + 713))
            v30 = v11;
          else
            v30 = v12;
          CFDictionarySetValue(v8, CFSTR("isMuted"), v30);
        }
        *v33 = v8;
        if (v28)
          CFRelease(v28);
        if (v27)
          CFRelease(v27);
        v8 = 0;
        v31 = 0;
        goto LABEL_90;
      }
    }
    else if (gLogCategory_APReceiverSystemInfo > 90
           || gLogCategory_APReceiverSystemInfo == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_77;
    }
    LogPrintF();
    goto LABEL_77;
  }
  v31 = 4294895276;
LABEL_98:
  APSLogErrorAt();
LABEL_90:
  if (v8)
    CFRelease(v8);
  if (FeaturesInternal)
    CFRelease(FeaturesInternal);
  return v31;
}

void __sysInfo_copyInfoDictInternal_block_invoke(uint64_t a1, CFTypeRef cf1)
{
  uint64_t v4;
  uint64_t v5;
  CFTypeRef cf;

  cf = 0;
  if (CFEqual(cf1, CFSTR("txtAirPlay")))
  {
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56);
    if (!v4)
      return;
    APAdvertiserInfoCopyAirPlayDataWithNANServiceType(v4, 0, (CFDataRef *)&cf);
  }
  else if (CFEqual(cf1, CFSTR("txtRAOP")))
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 56);
    if (!v5)
      return;
    APAdvertiserInfoCopyRAOPData(v5, (CFDataRef *)&cf);
  }
  else if (CFEqual(cf1, CFSTR("displayCapabilities")))
  {
    if (!APSSettingsIsFeatureEnabled())
      return;
    objc_msgSend((id)objc_msgSend(MEMORY[0x24BDE5660], "mainDisplay"), "displayId");
    APSDisplayUtilsCopyDisplayCapabilities();
  }
  FigCFDictionarySetValue();
  if (cf)
    CFRelease(cf);
}

uint64_t __sysInfo_getReceiverHDRCapability_block_invoke()
{
  uint64_t result;
  const __CFString *v2;
  _BYTE v3[11];

  result = GetDeviceModelString();
  if (*(_QWORD *)v3 == 0x355654656C707041 && *(_QWORD *)&v3[3] == 0x332C355654656CLL)
  {
    v2 = CFSTR("1080p60");
  }
  else if (*(_QWORD *)v3 ^ 0x365654656C707041 | *(_QWORD *)&v3[3] ^ 0x322C365654656CLL)
  {
    v2 = CFSTR("4k60");
  }
  else
  {
    v2 = CFSTR("4k30");
  }
  sysInfo_getReceiverHDRCapability_capability = (uint64_t)v2;
  return result;
}

void sysInfo_Finalize(uint64_t a1)
{
  void *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  const void *v28;
  const void *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  const void *v34;
  NSObject *v35;
  const void *v36;
  const void *v37;
  const void *v38;
  const void *v39;
  const void *v40;
  NSObject *v41;
  NSObject *v42;
  const void *v43;

  objc_msgSend(*(id *)(a1 + 728), "invalidate");

  *(_QWORD *)(a1 + 728) = 0;
  v2 = *(void **)(a1 + 328);
  if (v2)
  {
    objc_msgSend(v2, "invalidate");

    *(_QWORD *)(a1 + 328) = 0;
  }
  v3 = *(_DWORD *)(a1 + 36);
  if (v3 != -1)
  {
    notify_cancel(v3);
    *(_DWORD *)(a1 + 36) = -1;
  }
  v4 = *(_DWORD *)(a1 + 24);
  if (v4 != -1)
  {
    notify_cancel(v4);
    *(_DWORD *)(a1 + 24) = -1;
  }
  v5 = *(_DWORD *)(a1 + 28);
  if (v5 != -1)
  {
    notify_cancel(v5);
    *(_DWORD *)(a1 + 28) = -1;
  }
  v6 = *(_DWORD *)(a1 + 40);
  if (v6 != -1)
  {
    notify_cancel(v6);
    *(_DWORD *)(a1 + 40) = -1;
  }
  v7 = *(_DWORD *)(a1 + 44);
  if (v7 != -1)
  {
    notify_cancel(v7);
    *(_DWORD *)(a1 + 44) = -1;
  }
  v8 = *(_DWORD *)(a1 + 48);
  if (v8 != -1)
  {
    notify_cancel(v8);
    *(_DWORD *)(a1 + 48) = -1;
  }
  v9 = *(_DWORD *)(a1 + 32);
  if (v9 != -1)
  {
    notify_cancel(v9);
    *(_DWORD *)(a1 + 32) = -1;
  }
  v10 = *(void **)(a1 + 400);
  if (v10)
  {
    free(v10);
    *(_QWORD *)(a1 + 400) = 0;
  }
  v11 = *(const void **)(a1 + 120);
  if (v11)
  {
    CFRelease(v11);
    *(_QWORD *)(a1 + 120) = 0;
  }
  v12 = *(const void **)(a1 + 752);
  if (v12)
  {
    CFRelease(v12);
    *(_QWORD *)(a1 + 752) = 0;
  }
  v13 = *(const void **)(a1 + 464);
  if (v13)
  {
    CFRelease(v13);
    *(_QWORD *)(a1 + 464) = 0;
  }
  v14 = *(const void **)(a1 + 456);
  if (v14)
  {
    CFRelease(v14);
    *(_QWORD *)(a1 + 456) = 0;
  }
  v15 = *(const void **)(a1 + 56);
  if (v15)
  {
    CFRelease(v15);
    *(_QWORD *)(a1 + 56) = 0;
  }
  v16 = *(const void **)(a1 + 720);
  if (v16)
  {
    CFRelease(v16);
    *(_QWORD *)(a1 + 720) = 0;
  }
  v17 = *(const void **)(a1 + 736);
  if (v17)
  {
    CFRelease(v17);
    *(_QWORD *)(a1 + 736) = 0;
  }
  v18 = *(const void **)(a1 + 72);
  if (v18)
  {
    CFRelease(v18);
    *(_QWORD *)(a1 + 72) = 0;
  }
  *(_BYTE *)(a1 + 744) = 0;
  v19 = *(const void **)(a1 + 416);
  if (v19)
  {
    CFRelease(v19);
    *(_QWORD *)(a1 + 416) = 0;
  }
  v20 = *(const void **)(a1 + 144);
  if (v20)
  {
    CFRelease(v20);
    *(_QWORD *)(a1 + 144) = 0;
  }
  v21 = *(const void **)(a1 + 160);
  if (v21)
  {
    CFRelease(v21);
    *(_QWORD *)(a1 + 160) = 0;
  }
  v22 = *(const void **)(a1 + 176);
  if (v22)
  {
    CFRelease(v22);
    *(_QWORD *)(a1 + 176) = 0;
  }
  v23 = *(const void **)(a1 + 200);
  if (v23)
  {
    CFRelease(v23);
    *(_QWORD *)(a1 + 200) = 0;
  }
  v24 = *(const void **)(a1 + 192);
  if (v24)
  {
    CFRelease(v24);
    *(_QWORD *)(a1 + 192) = 0;
  }
  v25 = *(const void **)(a1 + 208);
  if (v25)
  {
    CFRelease(v25);
    *(_QWORD *)(a1 + 208) = 0;
  }
  v26 = *(const void **)(a1 + 216);
  if (v26)
  {
    CFRelease(v26);
    *(_QWORD *)(a1 + 216) = 0;
  }
  v27 = *(const void **)(a1 + 232);
  if (v27)
  {
    CFRelease(v27);
    *(_QWORD *)(a1 + 232) = 0;
  }
  v28 = *(const void **)(a1 + 256);
  if (v28)
  {
    CFRelease(v28);
    *(_QWORD *)(a1 + 256) = 0;
  }
  v29 = *(const void **)(a1 + 264);
  if (v29)
  {
    CFRelease(v29);
    *(_QWORD *)(a1 + 264) = 0;
  }
  v30 = *(const void **)(a1 + 280);
  if (v30)
  {
    CFRelease(v30);
    *(_QWORD *)(a1 + 280) = 0;
  }
  v31 = *(const void **)(a1 + 296);
  if (v31)
  {
    CFRelease(v31);
    *(_QWORD *)(a1 + 296) = 0;
  }
  v32 = *(const void **)(a1 + 288);
  if (v32)
  {
    CFRelease(v32);
    *(_QWORD *)(a1 + 288) = 0;
  }
  v33 = *(const void **)(a1 + 696);
  if (v33)
  {
    CFRelease(v33);
    *(_QWORD *)(a1 + 696) = 0;
  }
  v34 = *(const void **)(a1 + 704);
  if (v34)
  {
    CFRelease(v34);
    *(_QWORD *)(a1 + 704) = 0;
  }
  v35 = *(NSObject **)(a1 + 552);
  if (v35)
  {
    dispatch_release(v35);
    *(_QWORD *)(a1 + 552) = 0;
  }
  v36 = *(const void **)(a1 + 584);
  if (v36)
  {
    CFRelease(v36);
    *(_QWORD *)(a1 + 584) = 0;
  }
  v37 = *(const void **)(a1 + 640);
  if (v37)
  {
    CFRelease(v37);
    *(_QWORD *)(a1 + 640) = 0;
  }
  v38 = *(const void **)(a1 + 648);
  if (v38)
  {
    CFRelease(v38);
    *(_QWORD *)(a1 + 648) = 0;
  }
  v39 = *(const void **)(a1 + 656);
  if (v39)
  {
    CFRelease(v39);
    *(_QWORD *)(a1 + 656) = 0;
  }
  v40 = *(const void **)(a1 + 664);
  if (v40)
  {
    CFRelease(v40);
    *(_QWORD *)(a1 + 664) = 0;
  }
  v41 = *(NSObject **)(a1 + 576);
  if (v41)
  {
    dispatch_release(v41);
    *(_QWORD *)(a1 + 576) = 0;
  }
  v42 = *(NSObject **)(a1 + 16);
  if (v42)
  {
    dispatch_release(v42);
    *(_QWORD *)(a1 + 16) = 0;
  }
  v43 = *(const void **)(a1 + 88);
  if (v43)
  {
    CFRelease(v43);
    *(_QWORD *)(a1 + 88) = 0;
  }
}

uint64_t sysInfo_copyPairingIdentity(int a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = PairingSessionCreate();
  if ((_DWORD)v2)
  {
    v3 = v2;
LABEL_7:
    APSLogErrorAt();
    return v3;
  }
  if (a1)
    PairingSessionSetFlags();
  PairingSessionSetKeychainInfo();
  PairingSessionSetLogging();
  v3 = PairingSessionCopyIdentity();
  CFRelease(0);
  if ((_DWORD)v3)
    goto LABEL_7;
  return v3;
}

uint64_t __sysInfo_registerForNotificationsAsNeeded_block_invoke(uint64_t result)
{
  uint64_t v1;
  const void *v2;

  v1 = *(_QWORD *)(result + 32);
  if (!*(_BYTE *)(v1 + 153))
  {
    result = *(_QWORD *)(v1 + 144);
    if (result)
    {
      v2 = *(const void **)(v1 + 160);
      if (v2)
      {
        result = CFEqual((CFTypeRef)result, v2);
        if ((_DWORD)result)
        {
          if (gLogCategory_APReceiverSystemInfo <= 50
            && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          CMNotificationCenterGetDefaultLocalCenter();
          return CMNotificationCenterPostNotification();
        }
      }
    }
  }
  return result;
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_2(uint64_t a1, int a2)
{
  sysInfo_handleCloudConnectivityChange(*(_QWORD *)(a1 + 32), a2, 0);
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_3(uint64_t a1, int a2)
{
  sysInfo_handleConferenceRoomModeChange(*(_QWORD *)(a1 + 32), a2, 0);
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_4(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  sysInfo_updatePrefs(*(_QWORD *)(a1 + 32), 0, *(unsigned __int8 *)(a1 + 40));
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_5(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  sysInfo_updatePrefs(*(_QWORD *)(a1 + 32), 0, 1);
}

uint64_t __sysInfo_registerForNotificationsAsNeeded_block_invoke_6(uint64_t result)
{
  if (*(_QWORD *)(*(_QWORD *)(result + 32) + 176))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    return CMNotificationCenterPostNotification();
  }
  return result;
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_7(uint64_t a1)
{
  sysInfo_updateCurrentDisplayInfo(*(_QWORD *)(a1 + 32));
}

void __sysInfo_registerForNotificationsAsNeeded_block_invoke_8(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  sysInfo_updatePrefs(*(_QWORD *)(a1 + 32), 0, 0);
}

void __sysInfo_deviceNameChangeListenerStart_block_invoke(uint64_t a1)
{
  sysInfo_handleDeviceNameChanged(*(_QWORD *)(a1 + 32));
}

void sysInfo_updateAPGroupInfo(uint64_t a1)
{
  const void *v2;
  _BOOL4 v3;
  const void *v4;
  BOOL v5;
  const void *v6;
  const void *v7;
  CFTypeRef v8;
  BOOL v9;
  CFTypeRef cf;

  v2 = *(const void **)(a1 + 144);
  if (v2)
    CFRetain(*(CFTypeRef *)(a1 + 144));
  if (!*(_BYTE *)(a1 + 224))
  {
    v4 = *(const void **)(a1 + 160);
    if (v4)
    {
      if (gLogCategory_APReceiverSystemInfo >= 51)
      {
        v6 = *(const void **)(a1 + 144);
      }
      else
      {
        if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize())
          LogPrintF();
        v4 = *(const void **)(a1 + 160);
        v6 = *(const void **)(a1 + 144);
        if (!v4)
          goto LABEL_40;
      }
      CFRetain(v4);
LABEL_40:
      *(_QWORD *)(a1 + 144) = v4;
      if (v6)
        CFRelease(v6);
      *(_WORD *)(a1 + 152) = *(unsigned __int8 *)(a1 + 168);
      goto LABEL_43;
    }
  }
  if (APSIsAPMSpeaker())
    v3 = 1;
  else
    v3 = IsAppleTV() != 0;
  if (APSIsMemberOfHTGroup())
    v5 = APSIsAPMSpeaker() != 0;
  else
    v5 = 0;
  if (*(_BYTE *)(a1 + 129))
  {
    if (!*(_BYTE *)(a1 + 225) && !*(_BYTE *)(a1 + 130))
    {
      CFStringGetTypeID();
      CFDictionaryGetTypedValue();
    }
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  v7 = *(const void **)(a1 + 144);
  if (v7)
  {
    CFRelease(v7);
    *(_QWORD *)(a1 + 144) = 0;
  }
  if (IsAppleTV() || APSIsAPMSpeaker())
    APSCopyClusterInfo();
  v8 = *(CFTypeRef *)(a1 + 216);
  if (v8)
    v8 = CFRetain(v8);
  cf = v8;
  *(_QWORD *)(a1 + 144) = APSCreateGroupID();
  v9 = v3 && *(_BYTE *)(a1 + 480) == 0;
  *(_BYTE *)(a1 + 152) = v9;
  *(_BYTE *)(a1 + 153) = v3 && !v5;
  CFRelease(cf);
LABEL_43:
  if (gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize())
      LogPrintF();
    if (gLogCategory_APReceiverSystemInfo <= 50)
    {
      if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize())
        LogPrintF();
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
  }
  if (v2)
    CFRelease(v2);
}

void sysInfo_handleCloudConnectivityChange(uint64_t a1, int token, int a3)
{
  int v5;
  uint64_t state64;

  state64 = 0;
  notify_get_state(token, &state64);
  v5 = state64 != 0;
  if (*(unsigned __int8 *)(a1 + 307) != v5)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 307) = v5;
    if (!a3)
      sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("AdvertisingParameterChanged"));
  }
}

void sysInfo_handleConferenceRoomModeChange(uint64_t a1, int token, int a3)
{
  int v5;
  uint64_t state64;

  state64 = 0;
  notify_get_state(token, &state64);
  v5 = state64 != 0;
  if (*(unsigned __int8 *)(a1 + 309) != v5)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 309) = v5;
    if (!a3)
      sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("AdvertisingParameterChanged"));
  }
}

void sysInfo_updatePrefs(uint64_t a1, int a2, int a3)
{
  _BOOL4 v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  CFTypeRef v17;
  const void *v18;
  CFTypeRef v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int Int64;
  int v34;
  unsigned __int8 IntWithDefault;
  unsigned __int8 v36;
  int v37;
  const void *v38;
  const void *v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v48;
  int v49;
  int v50;
  CFTypeRef cf1[9];

  cf1[8] = *(CFTypeRef *)MEMORY[0x24BDAC8D0];
  v49 = 0;
  if (*(_DWORD *)(a1 + 568))
    return;
  APSSettingsSynchronize();
  v6 = APSSettingsGetInt64() != 0;
  objc_msgSend(MEMORY[0x24BE63CB0], "sharedConnection");
  v7 = objc_opt_respondsToSelector() ^ 1;
  v8 = v7 & v6;
  if ((v7 & 1) == 0 && v6)
    v8 = objc_msgSend((id)objc_msgSend(MEMORY[0x24BE63CB0], "sharedConnection"), "isAirPlayIncomingRequestsAllowed");
  if (*(unsigned __int8 *)(a1 + 64) != v8)
  {
    *(_BYTE *)(a1 + 64) = v8;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  v9 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 80) != v9)
  {
    *(_BYTE *)(a1 + 80) = v9;
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  v10 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 310) == v10)
  {
    v11 = 0;
  }
  else
  {
    *(_BYTE *)(a1 + 310) = v10;
    v11 = 1;
  }
  v50 = APSGetAccessControlConfig();
  if (v50)
  {
    v49 = *(_DWORD *)(a1 + 320);
    v50 = 0;
  }
  else if (*(_DWORD *)(a1 + 316))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_DWORD *)(a1 + 316) = 0;
    v11 = 1;
  }
  v12 = v49;
  if (v49 != *(_DWORD *)(a1 + 320))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50)
    {
      if (gLogCategory_APReceiverSystemInfo != -1 || (v13 = _LogCategory_Initialize(), v12 = v49, v13))
      {
        LogPrintF();
        v12 = v49;
      }
    }
    *(_DWORD *)(a1 + 320) = v12;
    v11 = 1;
  }
  if (a3)
  {
    cf1[0] = 0;
    APSCopyPersistentGroupInfo();
    v14 = 0;
    if (*(_QWORD *)(a1 + 240))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_QWORD *)(a1 + 240) = 0;
      v11 = 1;
      v14 = 1;
    }
    if (*(_DWORD *)(a1 + 248))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_DWORD *)(a1 + 248) = 0;
      v11 = 1;
      v14 = 1;
      v15 = 1;
    }
    else
    {
      v15 = 0;
    }
    v17 = *(CFTypeRef *)(a1 + 256);
    if (cf1[0] == v17)
    {
      v16 = v15;
    }
    else if (!cf1[0] || !v17 || (v16 = v15, !CFEqual(cf1[0], v17)))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v18 = *(const void **)(a1 + 256);
      v19 = cf1[0];
      *(CFTypeRef *)(a1 + 256) = cf1[0];
      if (v19)
        CFRetain(v19);
      if (v18)
        CFRelease(v18);
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      v11 = 1;
      v14 = 1;
      v16 = 1;
    }
    if (*(_QWORD *)(a1 + 264))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v20 = *(const void **)(a1 + 264);
      *(_QWORD *)(a1 + 264) = 0;
      if (v20)
        CFRelease(v20);
    }
    if (*(_QWORD *)(a1 + 280))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v21 = *(const void **)(a1 + 280);
      *(_QWORD *)(a1 + 280) = 0;
      if (v21)
        CFRelease(v21);
      v11 = 1;
      v14 = 1;
    }
    if (*(_BYTE *)(a1 + 272))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_BYTE *)(a1 + 272) = 0;
    }
    if (*(_QWORD *)(a1 + 296))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v22 = *(const void **)(a1 + 296);
      *(_QWORD *)(a1 + 296) = 0;
      if (v22)
        CFRelease(v22);
      v11 = 1;
    }
    if (*(_QWORD *)(a1 + 288))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v23 = *(const void **)(a1 + 288);
      *(_QWORD *)(a1 + 288) = 0;
      if (v23)
        CFRelease(v23);
      v11 = 1;
    }
    if (cf1[0])
    {
      CFRelease(cf1[0]);
      cf1[0] = 0;
    }
  }
  else
  {
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
  cf1[0] = 0;
  APSCopyTightSyncInfo();
  if (*(_QWORD *)(a1 + 176))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v24 = *(const void **)(a1 + 176);
    *(CFTypeRef *)(a1 + 176) = cf1[0];
    if (v24)
      CFRelease(v24);
    if (!a2)
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterPostNotification();
      if (*(_BYTE *)(a1 + 305) && *(_QWORD *)(a1 + 176) && !*(_BYTE *)(a1 + 129))
      {
        if (gLogCategory_APReceiverSystemInfo <= 50
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        notify_post("kAirPlayWHANotification_InterruptedByPreWHASender");
      }
    }
    v11 = 1;
    v14 = 1;
  }
  if (*(_QWORD *)(a1 + 192))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v25 = *(const void **)(a1 + 192);
    *(_QWORD *)(a1 + 192) = 0;
    if (v25)
      CFRelease(v25);
  }
  if (*(_BYTE *)(a1 + 184))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 184) = 0;
    v11 = 1;
    v14 = 1;
  }
  if (*(_QWORD *)(a1 + 200))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v26 = *(const void **)(a1 + 200);
    *(_QWORD *)(a1 + 200) = 0;
    if (v26)
      CFRelease(v26);
    v11 = 1;
  }
  if (*(_QWORD *)(a1 + 208))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v27 = *(const void **)(a1 + 208);
    *(_QWORD *)(a1 + 208) = 0;
    if (v27)
      CFRelease(v27);
    v11 = 1;
  }
  if (cf1[0])
  {
    CFRelease(cf1[0]);
    cf1[0] = 0;
  }
  v28 = *(_QWORD *)(a1 + 256);
  if (v28 && *(_DWORD *)(a1 + 248) == 1)
  {
    v29 = IsAppleTV();
    APSSettingsSetValue();
  }
  else if (*(_QWORD *)(a1 + 176) && !*(_DWORD *)(a1 + 248) || v28 && *(_DWORD *)(a1 + 248) <= 1u)
  {
    v29 = APSSettingsGetInt64() != 0;
  }
  else
  {
    APSSettingsRemoveValue();
    v29 = 0;
  }
  if (v29 != *(unsigned __int8 *)(a1 + 306))
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 306) = v29;
    v11 = 1;
  }
  v30 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 304) != v30)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 304) = v30;
    v11 = 1;
  }
  v31 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 308) != v31)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 308) = v31;
    v11 = 1;
  }
  v32 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 311) != v32)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 311) = v32;
    v11 = 1;
  }
  Int64 = APSSettingsGetInt64();
  if (Int64 != *(_DWORD *)(a1 + 676))
    *(_DWORD *)(a1 + 676) = Int64;
  v34 = APSGetP2PAllow();
  if (v34 != *(unsigned __int8 *)(a1 + 408))
  {
    *(_BYTE *)(a1 + 408) = v34;
    v16 = 1;
  }
  IntWithDefault = APSSettingsGetIntWithDefault();
  if (*(unsigned __int8 *)(a1 + 409) != IntWithDefault)
  {
    v36 = IntWithDefault;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 409) = v36;
    v16 = 1;
  }
  v37 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 410) != v37)
    *(_BYTE *)(a1 + 410) = v37;
  v38 = (const void *)APSSettingsCopyValue();
  v39 = *(const void **)(a1 + 416);
  if (v38 == v39)
  {
LABEL_195:
    if (!v38)
      goto LABEL_197;
    goto LABEL_196;
  }
  if (!v39 || !v38)
  {
    if (!v38)
      goto LABEL_193;
    goto LABEL_192;
  }
  if (!CFEqual(v38, *(CFTypeRef *)(a1 + 416)))
  {
    v39 = *(const void **)(a1 + 416);
LABEL_192:
    CFRetain(v38);
LABEL_193:
    *(_QWORD *)(a1 + 416) = v38;
    if (v39)
      CFRelease(v39);
    goto LABEL_195;
  }
LABEL_196:
  CFRelease(v38);
LABEL_197:
  v40 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 432) != v40)
  {
    *(_BYTE *)(a1 + 432) = v40;
    v11 = 1;
  }
  v41 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 433) != v41)
  {
    *(_BYTE *)(a1 + 433) = v41;
    v11 = 1;
  }
  v42 = APSSettingsGetInt64() != 0;
  v43 = *(unsigned __int8 *)(a1 + 480);
  if (v43 != v42)
  {
    sysInfo_deleteLegacyPairingPeers();
    *(_BYTE *)(a1 + 480) = v42;
    sysInfo_updatePINInternal(a1, v42);
    v43 = *(unsigned __int8 *)(a1 + 480);
    v11 = 1;
    v14 = 1;
  }
  *(_BYTE *)(a1 + 472) = 0;
  if (v43)
  {
    APSSettingsGetCString();
    if (*(_BYTE *)(a1 + 472))
      sysInfo_handleAuthStringUpdate((_BYTE *)(a1 + 472));
  }
  if (*(_BYTE *)(a1 + 480))
    goto LABEL_210;
  LOBYTE(cf1[0]) = 0;
  APSSettingsGetCString();
  if (strcmp((const char *)cf1, (const char *)(a1 + 481)))
  {
    __strlcpy_chk();
    sysInfo_handleAuthStringUpdate((_BYTE *)(a1 + 481));
    sysInfo_deleteLegacyPairingPeers();
    v11 = 1;
  }
  if (*(_BYTE *)(a1 + 480))
  {
LABEL_210:
    v44 = 3;
  }
  else if (*(_BYTE *)(a1 + 481))
  {
    v44 = 2;
  }
  else
  {
    if (!*(_BYTE *)(a1 + 433))
    {
      *(_DWORD *)(a1 + 428) = 0;
      goto LABEL_212;
    }
    v44 = 1;
  }
  *(_DWORD *)(a1 + 428) = v44;
LABEL_212:
  v45 = APSSettingsGetInt64() != 0;
  if (*(unsigned __int8 *)(a1 + 560) != v45)
    *(_BYTE *)(a1 + 560) = v45;
  v46 = APSSettingsGetInt64();
  if (v46 >= 1 && v50 == 0)
    v48 = v46;
  else
    v48 = 30;
  *(_DWORD *)(a1 + 564) = v48;
  if (v14)
    sysInfo_updateAPGroupInfo(a1);
  if (v16)
    sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("P2PSettingChanged"));
  if (v11)
    sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("AdvertisingParameterChanged"));
  if (v15)
    sysInfo_updatePowerAssertionState(a1);
}

uint64_t sysInfo_updatePowerAssertionState(uint64_t a1)
{
  uint64_t result;
  int v3;

  result = IsAppleTV();
  if ((_DWORD)result)
    v3 = *(_DWORD *)(a1 + 248) == 1;
  else
    v3 = 0;
  if (*(_QWORD *)(a1 + 736) && *(unsigned __int8 *)(a1 + 744) != v3)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (v3)
      result = APSPowerAssertionRaise();
    else
      result = APSPowerAssertionRelease();
    *(_BYTE *)(a1 + 744) = v3;
  }
  return result;
}

void sysInfo_handleDeviceNameChanged(uint64_t a1)
{
  char __s1[64];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  __s1[0] = 0;
  GetDeviceName();
  if (strcmp(__s1, (const char *)(a1 + 336)))
    sysInfo_setDeviceName(a1);
}

void sysInfo_setDeviceName(uint64_t a1)
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  __strlcpy_chk();
  sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("AdvertisingDeviceSettingChanged"));
}

void sysInfo_deleteLegacyPairingPeers()
{
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!gQblcfSzZBQsYCCV())
  {
    PHDcW8();
    CFRelease(0);
  }
  if (!PairingSessionCreate())
  {
    PairingSessionSetKeychainInfo();
    PairingSessionDeletePeer();
    CFRelease(0);
  }
}

void sysInfo_updatePINInternal(uint64_t a1, int a2)
{
  NSObject *v4;

  v4 = *(NSObject **)(a1 + 552);
  if (v4)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 552));
    dispatch_release(v4);
    *(_QWORD *)(a1 + 552) = 0;
  }
  if (*(_BYTE *)(a1 + 480) && (a2 || !*(_BYTE *)(a1 + 225)))
  {
    if (*(_BYTE *)(a1 + 472))
      __strlcpy_chk();
    else
      RandomString();
    sysInfo_handleAuthStringUpdate((_BYTE *)(a1 + 481));
  }
}

void sysInfo_handleAuthStringUpdate(_BYTE *a1)
{
  CFMutableDictionaryRef Mutable;

  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 1, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (Mutable
      && (!*a1 || !CFDictionarySetCString())
      && !APSXPCClientSendCommandCreatingReply())
    {
      goto LABEL_7;
    }
    APSLogErrorAt();
    if (gLogCategory_APReceiverSystemInfo <= 90
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (Mutable)
LABEL_7:
      CFRelease(Mutable);
  }
}

void sysInfo_updateCurrentDisplayInfo(uint64_t a1)
{
  void *v2;
  id v3;
  const void *v4;
  int v5;
  int v6;
  double v7;
  double v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  int v18;
  id v19;

  if (!IsAppleTV())
  {
    v3 = 0;
LABEL_34:
    v19 = 0;
    goto LABEL_32;
  }
  v2 = (void *)objc_msgSend(MEMORY[0x24BDE5660], "mainDisplay");
  v19 = (id)objc_msgSend(v2, "currentMode");
  v3 = (id)objc_msgSend(v2, "uniqueId");
  if (v3)
  {
    *(_BYTE *)(a1 + 680) = objc_msgSend(v2, "isOverscanned");
    v4 = *(const void **)(a1 + 584);
    CFRetain(v3);
    *(_QWORD *)(a1 + 584) = v3;
    if (v4)
      CFRelease(v4);
  }
  if (!v19)
    goto LABEL_34;
  v5 = objc_msgSend(v19, "width");
  v6 = objc_msgSend(v19, "height");
  objc_msgSend(v19, "refreshRate");
  v8 = v7;
  if (v5 >= 1920 && v6 >= 1080)
  {
    *(double *)(a1 + 592) = (double)v5;
    *(double *)(a1 + 600) = (double)v6;
    v9 = *(const void **)(a1 + 648);
    v10 = (const void *)objc_msgSend(v19, "hdrMode");
    v11 = v10;
    if (v10)
      CFRetain(v10);
    *(_QWORD *)(a1 + 648) = v11;
    if (v9)
      CFRelease(v9);
    v12 = *(const void **)(a1 + 664);
    v13 = (const void *)objc_msgSend(v19, "colorMode");
    v14 = v13;
    if (v13)
      CFRetain(v13);
    *(_QWORD *)(a1 + 664) = v14;
    if (v12)
      CFRelease(v12);
    v15 = *(const void **)(a1 + 656);
    v16 = (const void *)objc_msgSend(v19, "colorGamut");
    v17 = v16;
    if (v16)
      CFRetain(v16);
    *(_QWORD *)(a1 + 656) = v17;
    if (v15)
      CFRelease(v15);
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if (v8 > 0.0)
  {
    if (v8 <= 30.0)
      v18 = 30;
    else
      v18 = 60;
    *(_DWORD *)(a1 + 672) = v18;
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
LABEL_32:

}

uint64_t APReceiverSystemInfoCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _DWORD *a5)
{
  NSObject *v6;
  int v7;
  uint64_t v8;
  _QWORD block[9];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;

  v15 = 0;
  v16 = &v15;
  v17 = 0x2020000000;
  v18 = 0;
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v14 = 0;
  if (a1 && a3)
  {
    v6 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APReceiverSystemInfoCopyProperty_block_invoke;
    block[3] = &unk_24E21E890;
    block[6] = a1;
    block[7] = a3;
    block[8] = a4;
    block[4] = &v15;
    block[5] = &v11;
    dispatch_sync(v6, block);
    v7 = *((_DWORD *)v16 + 6);
    if (v7 != -72025 && v7)
      APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    *((_DWORD *)v16 + 6) = -72021;
  }
  if (a5)
    *a5 = *((_DWORD *)v16 + 6);
  v8 = v12[3];
  _Block_object_dispose(&v11, 8);
  _Block_object_dispose(&v15, 8);
  return v8;
}

void sub_21E121634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 48), 8);
  _Unwind_Resume(a1);
}

CFStringRef sysInfo_copyPasscodeString(uint64_t a1, int a2, CFAllocatorRef alloc, int *a4)
{
  const char *v7;
  CFStringRef v8;
  int v9;

  if (a2 && *(_BYTE *)(a1 + 481))
  {
    v7 = (const char *)(a1 + 481);
  }
  else
  {
    sysInfo_updatePairPINIfNeeded(a1);
    v7 = (const char *)(a1 + 434);
  }
  v8 = CFStringCreateWithCString(alloc, v7, 0x8000100u);
  if (!v8)
  {
    APSLogErrorAt();
    v9 = -72020;
    if (!a4)
      return v8;
    goto LABEL_7;
  }
  v9 = 0;
  if (a4)
LABEL_7:
    *a4 = v9;
  return v8;
}

void sysInfo_updatePairPINIfNeeded(uint64_t a1)
{
  _BYTE v2[16];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(a1 + 434) || (mach_absolute_time(), (unint64_t)UpTicksToSeconds() >= 0x1F))
  {
    if (*(_BYTE *)(a1 + 472))
      __strlcpy_chk();
    else
      RandomString();
    __strlcpy_chk();
    *(_QWORD *)(a1 + 448) = mach_absolute_time();
    if (*(_BYTE *)(a1 + 480))
      __strlcpy_chk();
    sysInfo_handleAuthStringUpdate(v2);
  }
}

uint64_t APReceiverSystemInfoSetProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSObject *v5;
  uint64_t v6;
  _QWORD v8[8];
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;

  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v12 = 0;
  if (a1 && a3)
  {
    v5 = *(NSObject **)(a1 + 16);
    v8[0] = MEMORY[0x24BDAC760];
    v8[1] = 3221225472;
    v8[2] = __APReceiverSystemInfoSetProperty_block_invoke;
    v8[3] = &unk_24E21FA18;
    v8[4] = &v9;
    v8[5] = a1;
    v8[6] = a3;
    v8[7] = a5;
    dispatch_sync(v5, v8);
    v6 = *((unsigned int *)v10 + 6);
  }
  else
  {
    APSLogErrorAt();
    v6 = 4294895275;
    *((_DWORD *)v10 + 6) = -72021;
  }
  _Block_object_dispose(&v9, 8);
  return v6;
}

void sub_21E1222B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sysInfo_updateNonMRSourcedSilentPrimaryStatusIfNeeded(uint64_t a1)
{
  uint64_t Int64;
  uint64_t v3;
  BOOL v4;
  int v5;

  v5 = *(_QWORD *)(a1 + 232)
    && ((Int64 = CFDictionaryGetInt64(), v3 = CFDictionaryGetInt64(), !Int64) ? (v4 = v3 == 0) : (v4 = 1), !v4)
    && *(_BYTE *)(a1 + 225) == 0;
  if (*(unsigned __int8 *)(a1 + 305) != v5)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 305) = v5;
    sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("AdvertisingParameterChanged"));
    if (*(_BYTE *)(a1 + 305) && *(_QWORD *)(a1 + 176) && !*(_BYTE *)(a1 + 129))
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      notify_post("kAirPlayWHANotification_InterruptedByPreWHASender");
    }
  }
}

void sysInfo_updatePINTimerFired(uint64_t a1)
{
  sysInfo_updatePINInternal(a1, 0);
}

uint64_t APReceiverSystemInfoCopyInfoDict(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  NSObject *v4;
  uint64_t v5;
  _QWORD block[9];
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v11 = 0;
  if (a1 && a4)
  {
    v4 = *(NSObject **)(a1 + 16);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APReceiverSystemInfoCopyInfoDict_block_invoke;
    block[3] = &unk_24E21E8B8;
    block[4] = &v8;
    block[5] = a1;
    block[6] = a2;
    block[7] = a3;
    block[8] = a4;
    dispatch_sync(v4, block);
    v5 = *((unsigned int *)v9 + 6);
  }
  else
  {
    APSLogErrorAt();
    v5 = 4294895275;
    *((_DWORD *)v9 + 6) = -72021;
  }
  _Block_object_dispose(&v8, 8);
  return v5;
}

void sub_21E123978(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t APReceiverSystemInfoAllowsP2PConnectionFromMACAddress(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  uint64_t v3;
  _QWORD block[7];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v9 = 1;
  v2 = *(NSObject **)(a1 + 16);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __APReceiverSystemInfoAllowsP2PConnectionFromMACAddress_block_invoke;
  block[3] = &unk_24E21FA68;
  block[4] = &v6;
  block[5] = a1;
  block[6] = a2;
  dispatch_sync(v2, block);
  v3 = *((unsigned __int8 *)v7 + 24);
  _Block_object_dispose(&v6, 8);
  return v3;
}

uint64_t APReceiverSystemInfoCopyDisplaysInfoForUserVersion(uint64_t a1, const __CFAllocator *a2, int a3, __CFArray **a4)
{
  CFMutableArrayRef Mutable;
  __CFArray *v9;
  NSObject *v10;
  double v11;
  double v12;
  __CFDictionary *v13;
  float64x2_t *v14;
  const void *v15;
  const void *v16;
  int v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  uint64_t v22;
  __CFDictionary *v23;
  uint64_t v24;
  const void *v25;
  __CFDictionary *v26;
  _QWORD block[11];
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  _QWORD v34[3];
  int v35;
  uint64_t v36;
  float64x2_t *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  float64x2_t *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;

  if (!a4)
  {
    v24 = 4294895275;
    APSLogErrorAt();
    return v24;
  }
  Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895276;
  }
  v9 = Mutable;
  v52 = 0;
  v53 = &v52;
  v54 = 0x2020000000;
  v55 = 0;
  v48 = 0;
  v49 = &v48;
  v50 = 0x2020000000;
  v51 = 0;
  v42 = 0;
  v43 = (float64x2_t *)&v42;
  v44 = 0x3010000000;
  v46 = 0;
  v47 = 0;
  v45 = &unk_21E1DFD69;
  v36 = 0;
  v37 = (float64x2_t *)&v36;
  v38 = 0x3010000000;
  v40 = 0;
  v41 = 0;
  v39 = &unk_21E1DFD69;
  v34[0] = 0;
  v34[1] = v34;
  v34[2] = 0x2020000000;
  v35 = 60;
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 0;
  v10 = *(NSObject **)(a1 + 576);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __sysInfo_copyMainDisplayInfo_block_invoke;
  block[3] = &unk_24E21E9A8;
  block[9] = &v30;
  block[10] = a1;
  v29 = a3;
  block[4] = &v42;
  block[5] = &v36;
  block[6] = &v52;
  block[7] = &v48;
  block[8] = v34;
  dispatch_sync(v10, block);
  v12 = *MEMORY[0x24BDBF148];
  v11 = *(double *)(MEMORY[0x24BDBF148] + 8);
  if (v37[2].f64[0] == *MEMORY[0x24BDBF148] && v37[2].f64[1] == v11)
    v37[2] = v43[2];
  v13 = CFDictionaryCreateMutable(a2, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (v13)
  {
    if (*(double *)(a1 + 608) != v12 || *(double *)(a1 + 616) != v11)
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v43[2] = *(float64x2_t *)(a1 + 608);
    }
    if (*(double *)(a1 + 624) == v12 && *(double *)(a1 + 632) == v11)
    {
      v14 = v37;
    }
    else
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v14 = v37;
      v37[2] = *(float64x2_t *)(a1 + 624);
    }
    v43[2] = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v14[2], v43[2]), (int8x16_t)v43[2], (int8x16_t)v14[2]);
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionarySetInt64();
    CFDictionarySetInt64();
    if (v53[3])
    {
      v15 = (const void *)CopyEDIDbyUUID();
      if (v15)
      {
        CFDictionarySetValue(v13, CFSTR("edid"), v15);
        CFRelease(v15);
      }
    }
    v16 = (const void *)v53[3];
    if (v16)
      CFRelease(v16);
    CFRetain(CFSTR("e5f7a68d-7b0f-4305-984b-974f677a150b"));
    v53[3] = (uint64_t)CFSTR("e5f7a68d-7b0f-4305-984b-974f677a150b");
    CFDictionarySetValue(v13, CFSTR("uuid"), CFSTR("e5f7a68d-7b0f-4305-984b-974f677a150b"));
    v17 = *(_DWORD *)(a1 + 676);
    if (v17 < 0)
      v17 = *((_DWORD *)v31 + 6);
    *((_DWORD *)v31 + 6) = v17;
    v18 = (const void *)*MEMORY[0x24BDBD270];
    v19 = (const void *)*MEMORY[0x24BDBD268];
    if (v17)
      v20 = (const void *)*MEMORY[0x24BDBD270];
    else
      v20 = (const void *)*MEMORY[0x24BDBD268];
    CFDictionarySetValue(v13, CFSTR("overscanned"), v20);
    CFDictionarySetInt64();
    CFDictionarySetValue(v13, CFSTR("rotation"), v18);
    if (APSSettingsGetIntWithDefault())
      v21 = v18;
    else
      v21 = v19;
    CFDictionarySetValue(v13, CFSTR("receiverSupports444"), v21);
    v22 = *(_QWORD *)(a1 + 640);
    if (v22)
    {
      v49[3] = v22;
    }
    else if (!v49[3])
    {
      goto LABEL_47;
    }
    v23 = CFDictionaryCreateMutable(a2, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    CFDictionarySetValue(v23, (const void *)*MEMORY[0x24BDDD058], (const void *)v49[3]);
    CFDictionarySetValue(v13, CFSTR("HDRInfo"), v23);
    CFRelease(v23);
LABEL_47:
    if (gLogCategory_APReceiverSystemInfo <= 30
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v24 = 0;
    goto LABEL_52;
  }
  APSLogErrorAt();
  v24 = 4294960568;
LABEL_52:
  v25 = (const void *)v53[3];
  if (v25)
    CFRelease(v25);
  _Block_object_dispose(&v30, 8);
  _Block_object_dispose(v34, 8);
  _Block_object_dispose(&v36, 8);
  _Block_object_dispose(&v42, 8);
  _Block_object_dispose(&v48, 8);
  _Block_object_dispose(&v52, 8);
  if (v13)
  {
    CFArrayAppendValue(v9, v13);
    *a4 = v9;
    v26 = v13;
  }
  else
  {
    APSLogErrorAt();
    v26 = v9;
  }
  CFRelease(v26);
  return v24;
}

void sub_21E12437C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 208), 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Block_object_dispose((const void *)(v31 - 128), 8);
  _Unwind_Resume(a1);
}

CFTypeRef __sysInfo_copyMainDisplayInfo_block_invoke(uint64_t a1)
{
  uint64_t v2;
  int v3;
  double v4;
  double v5;
  uint64_t v6;
  CFTypeRef result;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  sysInfo_updateCurrentDisplayInfo(*(_QWORD *)(a1 + 80));
  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_DWORD *)(a1 + 88);
  if (v3 < 1)
  {
    v4 = 1280.0;
    v5 = 720.0;
  }
  else if (v3 == 1)
  {
    v4 = 1920.0;
    v5 = 1080.0;
  }
  else
  {
    v4 = *(double *)(v2 + 592);
    v5 = *(double *)(v2 + 600);
    if (v4 == *MEMORY[0x24BDBF148] && v5 == *(double *)(MEMORY[0x24BDBF148] + 8))
    {
      v5 = 1080.0;
      v4 = 1920.0;
    }
  }
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  *(double *)(v6 + 32) = v4;
  *(double *)(v6 + 40) = v5;
  *(_OWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 32) = *(_OWORD *)(v2 + 592);
  result = *(CFTypeRef *)(*(_QWORD *)(a1 + 80) + 584);
  if (result)
    result = CFRetain(result);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = result;
  v8 = *(const void **)(*(_QWORD *)(a1 + 80) + 648);
  if (v8)
  {
    result = (CFTypeRef)CFEqual(v8, (CFTypeRef)*MEMORY[0x24BDE5900]);
    if ((_DWORD)result)
    {
      v9 = *MEMORY[0x24BDDD048];
    }
    else
    {
      result = (CFTypeRef)CFEqual(v8, (CFTypeRef)*MEMORY[0x24BDE58F8]);
      v9 = *MEMORY[0x24BDDD040];
      if (!(_DWORD)result)
        v9 = 0;
    }
  }
  else
  {
    v9 = 0;
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = v9;
  v10 = *(_QWORD *)(a1 + 80);
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = *(_DWORD *)(v10 + 672);
  *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = *(unsigned __int8 *)(v10 + 680);
  return result;
}

void APReceiverSystemInfoClearVideoCache()
{
  NSArray *v0;
  const char *v1;
  std::error_code *v2;
  size_t v3;
  glob_t v4;

  memset(&v4, 0, sizeof(v4));
  v0 = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  if (-[NSArray count](v0, "count"))
  {
    v1 = (const char *)objc_msgSend((id)objc_msgSend(-[NSArray objectAtIndex:](v0, "objectAtIndex:", 0), "stringByAppendingPathComponent:", CFSTR("AppleTV/Video/LocalAndRental/CachedMedia*")), "UTF8String");
    if (v1)
    {
      if (!glob(v1, 0, 0, &v4))
      {
        if (v4.gl_pathc)
        {
          v3 = 0;
          do
          {
            if (gLogCategory_APReceiverSystemInfo <= 50
              && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            if (remove((const std::__fs::filesystem::path *)v4.gl_pathv[v3], v2)
              && gLogCategory_APReceiverSystemInfo <= 50
              && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            ++v3;
          }
          while (v3 < v4.gl_pathc);
        }
        globfree(&v4);
      }
    }
  }
}

void APReceiverSystemInfoHandleAPServicesReset(_QWORD *a1)
{
  NSObject *v2;
  _QWORD block[5];

  if (IsAppleTV() || APSIsAPMSpeaker())
  {
    CFRetain(a1);
    v2 = a1[2];
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __APReceiverSystemInfoHandleAPServicesReset_block_invoke;
    block[3] = &__block_descriptor_40_e5_v8__0l;
    block[4] = a1;
    dispatch_async(v2, block);
  }
}

void sysInfo_handleLocalSenderStateChanged(uint64_t a1, const void *a2)
{
  const void *TypedValue;
  int v5;
  uint64_t Int64;
  uint64_t v7;
  const void *v8;
  int v9;
  _BOOL4 v10;
  const void *v11;

  if (a2)
  {
    CFStringGetTypeID();
    TypedValue = (const void *)CFDictionaryGetTypedValue();
    v5 = CFDictionaryGetInt64() != 0;
    Int64 = CFDictionaryGetInt64();
  }
  else
  {
    v5 = 0;
    TypedValue = 0;
    Int64 = 0;
  }
  v7 = *(_QWORD *)(a1 + 232);
  if (v7)
  {
    CFStringGetTypeID();
    v8 = (const void *)CFDictionaryGetTypedValue();
    v9 = CFDictionaryGetInt64() != 0;
    v7 = CFDictionaryGetInt64();
  }
  else
  {
    v9 = 0;
    v8 = 0;
  }
  if (v8 == TypedValue)
  {
    v10 = 0;
  }
  else
  {
    v10 = 1;
    if (v8 && TypedValue)
      v10 = CFEqual(v8, TypedValue) == 0;
  }
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v11 = *(const void **)(a1 + 232);
  *(_QWORD *)(a1 + 232) = a2;
  if (a2)
    CFRetain(a2);
  if (v11)
    CFRelease(v11);
  if (v9 != v5 || v7 != Int64)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
  }
  if (!*(_BYTE *)(a1 + 130))
  {
    sysInfo_updateNonMRSourcedSilentPrimaryStatusIfNeeded(a1);
    if (*(_BYTE *)(a1 + 129))
    {
      if (v10)
      {
        sysInfo_updateAPGroupInfo(a1);
        sysInfo_updateAdvertiserInfoAndNotify(a1, (uint64_t)CFSTR("AdvertisingParameterChanged"));
      }
    }
  }
}

uint64_t rcsMediaRemote_sendDataCallback(uint64_t a1, const __CFData *a2, uint64_t a3)
{
  const __CFAllocator *v5;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v7;
  CFMutableDictionaryRef v8;
  __CFDictionary *v9;
  uint64_t (*v10)(uint64_t, CFMutableDictionaryRef);
  uint64_t v11;

  if (!a2)
    return 0;
  v5 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v7 = Mutable;
  v8 = CFDictionaryCreateMutable(v5, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!v8)
  {
    APSLogErrorAt();
    CFRelease(v7);
    return 4294960568;
  }
  v9 = v8;
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(a2);
    LogPrintF();
  }
  CFDictionarySetValue(v9, CFSTR("data"), a2);
  CFDictionarySetValue(v7, CFSTR("params"), v9);
  v10 = *(uint64_t (**)(uint64_t, CFMutableDictionaryRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
  if (!v10)
  {
    v11 = 4294954514;
LABEL_12:
    APSLogErrorAt();
    goto LABEL_13;
  }
  v11 = v10(a3, v7);
  if ((_DWORD)v11)
    goto LABEL_12;
LABEL_13:
  CFRelease(v7);
  CFRelease(v9);
  return v11;
}

uint64_t rcsMediaRemote_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  int v12;

  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 30
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v11)
  {
    v12 = v11(a6, a5);
    if (!v12)
      return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v12);
  }
  else
  {
    v12 = -12782;
  }
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v12);
}

void rcsMediaRemote_handleMediaDataControlFailure(uint64_t a1, int a2, const void *a3)
{
  uint64_t DerivedStorage;
  NSObject *v6;
  _QWORD block[5];
  int v8;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a3);
  v6 = *(NSObject **)(DerivedStorage + 80);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __rcsMediaRemote_handleMediaDataControlFailure_block_invoke;
  block[3] = &__block_descriptor_tmp_33;
  block[4] = a3;
  v8 = a2;
  dispatch_async(v6, block);
}

void __rcsMediaRemote_handleMediaDataControlFailure_block_invoke(uint64_t a1)
{
  rcsMediaRemote_callDelegateHandleFailed(*(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 32));
}

void rcsMediaRemote_callDelegateHandleFailed(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  const void *v6;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(_QWORD *)(DerivedStorage + 56))
    return;
  v5 = DerivedStorage;
  if (*(_QWORD *)(DerivedStorage + 64))
  {
    v6 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (!v6)
    {
      if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
        && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return;
    }
  }
  else
  {
    v6 = 0;
  }
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  (*(void (**)(const void *, uint64_t, uint64_t))(v5 + 56))(v6, a1, a2);
  if (v6)
    CFRelease(v6);
}

uint64_t rcsMediaRemote_Start()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (*(_BYTE *)(DerivedStorage + 97) || *(_BYTE *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    v2 = 4294960587;
LABEL_9:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
    rcsMediaRemote_stop();
    return v2;
  }
  v1 = *(_QWORD *)(DerivedStorage + 88);
  if (v1)
  {
    v4 = *(_QWORD *)(DerivedStorage + 88);
    v5 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v4, (dispatch_function_t)controlServer_startInternal);
    v2 = v5;
    if ((_DWORD)v5)
    {
      APSLogErrorAt();
      goto LABEL_9;
    }
  }
  *(_BYTE *)(DerivedStorage + 96) = 1;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return 0;
}

uint64_t rcsMediaRemote_HandleIncomingMessage(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage;
  const __CFDictionary *Value;
  const __CFData *v5;
  const __CFData *v6;
  CFTypeRef v7;
  CFTypeRef v8;
  NSObject *v9;
  uint64_t v10;
  _QWORD block[7];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!APReceiverMediaRemoteXPCService_IsClientConnected())
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
      && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
    {
      v10 = 4294960551;
      LogPrintF();
    }
    else
    {
      v10 = 4294960551;
    }
    goto LABEL_11;
  }
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (!*(_BYTE *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    v10 = 4294960587;
    goto LABEL_11;
  }
  if (!a2)
  {
    APSLogErrorAt();
LABEL_28:
    v10 = 4294960591;
    goto LABEL_11;
  }
  Value = (const __CFDictionary *)CFDictionaryGetValue(a2, CFSTR("params"));
  if (!Value)
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote > 90
      || gLogCategory_APReceiverRemoteControlSessionMediaRemote == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_28;
    }
LABEL_22:
    LogPrintF();
    goto LABEL_28;
  }
  v5 = (const __CFData *)CFDictionaryGetValue(Value, CFSTR("data"));
  if (!v5)
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote > 90
      || gLogCategory_APReceiverRemoteControlSessionMediaRemote == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_28;
    }
    goto LABEL_22;
  }
  v6 = v5;
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(v6);
    LogPrintF();
  }
  v7 = CFRetain(*(CFTypeRef *)(DerivedStorage + 32));
  v8 = CFRetain(*(CFTypeRef *)(DerivedStorage + 24));
  CFRetain(v6);
  v9 = *(NSObject **)(DerivedStorage + 72);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __rcsMediaRemote_HandleIncomingMessage_block_invoke;
  block[3] = &__block_descriptor_tmp_1993;
  block[4] = v7;
  block[5] = v6;
  block[6] = v8;
  dispatch_async(v9, block);
  v10 = 0;
LABEL_11:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return v10;
}

uint64_t rcsMediaRemote_HandleOutgoingMessage(const void *a1, const void *a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  const void *v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  _QWORD block[6];
  _QWORD v15[8];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (!*(_BYTE *)(DerivedStorage + 96))
  {
    APSLogErrorAt();
    v12 = 4294960587;
    goto LABEL_12;
  }
  v5 = CMBaseObjectGetDerivedStorage();
  if (!*(_BYTE *)(v5 + 96))
  {
    APSLogErrorAt();
    goto LABEL_17;
  }
  v6 = v5;
  v7 = *(_QWORD *)(v5 + 48);
  if (v7)
  {
    if (!*(_QWORD *)(v5 + 64))
    {
      v9 = 0;
LABEL_9:
      CFRetain(a1);
      CFRetain(a2);
      v11 = *(NSObject **)(v6 + 80);
      v15[0] = MEMORY[0x24BDAC760];
      v15[1] = 0x40000000;
      v15[2] = __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke;
      v15[3] = &__block_descriptor_tmp_25;
      v15[4] = a1;
      v15[5] = a2;
      v15[6] = v7;
      v15[7] = v9;
      dispatch_async(v11, v15);
      if (v9)
        CFRelease(v9);
      goto LABEL_11;
    }
    v8 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (v8)
    {
      v9 = v8;
      CFRetain(v8);
      goto LABEL_9;
    }
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
      && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_17:
    v12 = 4294960587;
    APSLogErrorAt();
    goto LABEL_12;
  }
  CFRetain(a1);
  CFRetain(a2);
  v10 = *(NSObject **)(v6 + 80);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke_2;
  block[3] = &__block_descriptor_tmp_26;
  block[4] = a1;
  block[5] = a2;
  dispatch_async(v10, block);
LABEL_11:
  v12 = 0;
LABEL_12:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return v12;
}

void __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t DerivedStorage;
  dispatch_queue_t *v5;
  dispatch_time_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 40
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v5 = *(dispatch_queue_t **)(DerivedStorage + 88);
  v6 = dispatch_time(0, 10000000000);
  v7 = APMediaDataControlServerSendRequestSync(v5, v3, v6);
  if ((_DWORD)v7)
  {
    v8 = v7;
    APSLogErrorAt();
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 90
      && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    rcsMediaRemote_callDelegateHandleFailed(v2, v8);
  }
  CFRelease(*(CFTypeRef *)(a1 + 32));
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void __rcsMediaRemote_sendOutgoingMessageInternal_block_invoke(uint64_t a1)
{
  const void *v2;

  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 40
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(a1 + 48))(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  v2 = *(const void **)(a1 + 56);
  if (v2)
    CFRelease(v2);
  CFRelease(*(CFTypeRef *)(a1 + 32));
  CFRelease(*(CFTypeRef *)(a1 + 40));
}

void rcsMediaRemote_stop()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  _QWORD v2[2];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v1 = *(_QWORD *)(DerivedStorage + 88);
  if (v1)
  {
    v2[0] = *(_QWORD *)(DerivedStorage + 88);
    v2[1] = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), v2, (dispatch_function_t)controlServer_stopInternal);
  }
}

uint64_t rcsMediaRemote_Invalidate()
{
  uint64_t DerivedStorage;
  const void *v1;
  CFTypeRef *Value;
  CFTypeRef *v3;
  CFTypeRef v4;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (*(_BYTE *)(DerivedStorage + 97))
  {
    APSLogErrorAt();
    goto LABEL_20;
  }
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50
    && (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v1 = *(const void **)(DerivedStorage + 32);
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
  if (v1
    && gAPReceiverMediaRemoteService_1
    && CFDictionaryContainsKey((CFDictionaryRef)gAPReceiverMediaRemoteService_1, v1)
    && (Value = (CFTypeRef *)CFDictionaryGetValue((CFDictionaryRef)gAPReceiverMediaRemoteService_1, v1)) != 0)
  {
    v3 = Value;
    CFRelease(*Value);
    v4 = v3[2];
    if (v4)
      CFRelease(v4);
    free(v3);
    CFDictionaryRemoveValue((CFMutableDictionaryRef)gAPReceiverMediaRemoteService_1, v1);
    if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
      && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
    APReceiverMediaRemoteXPCService_PostEvent(CFSTR("didCloseCommChannel"), v1, 0);
  }
  else
  {
    APSLogErrorAt();
    pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
  }
  if (!*(_BYTE *)(DerivedStorage + 96))
  {
    *(_BYTE *)(DerivedStorage + 97) = 1;
LABEL_20:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
    return 0;
  }
  *(_WORD *)(DerivedStorage + 96) = 256;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  rcsMediaRemote_stop();
  return 0;
}

uint64_t rcsMediaRemote_Finalize()
{
  uint64_t result;
  uint64_t v1;
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  NSObject *v7;
  NSObject *v8;

  result = CMBaseObjectGetDerivedStorage();
  v1 = result;
  if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 50)
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
      || (result = _LogCategory_Initialize(), (_DWORD)result))
    {
      result = LogPrintF();
    }
  }
  if (*(_BYTE *)(v1 + 97))
  {
    v2 = *(const void **)(v1 + 16);
    if (v2)
    {
      CFRelease(v2);
      *(_QWORD *)(v1 + 16) = 0;
    }
    v3 = *(const void **)(v1 + 24);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(v1 + 24) = 0;
    }
    v4 = *(const void **)(v1 + 32);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(v1 + 32) = 0;
    }
    v5 = *(const void **)(v1 + 64);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(v1 + 64) = 0;
    }
    v6 = *(const void **)(v1 + 88);
    if (v6)
    {
      CFRelease(v6);
      *(_QWORD *)(v1 + 88) = 0;
    }
    v7 = *(NSObject **)(v1 + 72);
    if (v7)
    {
      dispatch_release(v7);
      *(_QWORD *)(v1 + 72) = 0;
    }
    v8 = *(NSObject **)(v1 + 80);
    if (v8)
    {
      dispatch_release(v8);
      *(_QWORD *)(v1 + 80) = 0;
    }
    result = FigSimpleMutexDestroy();
    *(_QWORD *)(v1 + 104) = 0;
  }
  else
  {
    if (gLogCategory_APReceiverRemoteControlSessionMediaRemote <= 100)
    {
      if (gLogCategory_APReceiverRemoteControlSessionMediaRemote != -1
        || (result = _LogCategory_Initialize(), (_DWORD)result))
      {
        result = LogPrintF();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t rcsMediaRemote_CopyDebugDescription()
{
  return CFStringCreateF();
}

uint64_t rcsMediaRemote_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t DerivedStorage;
  uint64_t SInt32;
  uint64_t v8;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 104));
  if (!a2 || !a4)
  {
    APSLogErrorAt();
    v8 = 4294960591;
    goto LABEL_7;
  }
  if (CFEqual(a2, CFSTR("RRCS::Property::SessionID")))
  {
    SInt32 = (uint64_t)CFRetain(*(CFTypeRef *)(DerivedStorage + 16));
  }
  else
  {
    if (!CFEqual(a2, CFSTR("RRCS::Property::ListenPort")))
    {
      v8 = 4294960569;
      goto LABEL_7;
    }
    if (!*(_QWORD *)(DerivedStorage + 88))
    {
      SInt32 = 0;
      v8 = 4294960561;
      goto LABEL_6;
    }
    SInt32 = FigCFNumberCreateSInt32();
    if (!SInt32)
    {
      APSLogErrorAt();
      v8 = 4294960568;
      goto LABEL_7;
    }
  }
  v8 = 0;
LABEL_6:
  *a4 = SInt32;
LABEL_7:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 104));
  return v8;
}

uint64_t rcsMediaRemote_SetProperty(uint64_t a1, uint64_t a2)
{
  if (a2)
    return 0;
  APSLogErrorAt();
  return 4294960591;
}

uint64_t CMBaseObjectNotificationBarrier(uint64_t a1)
{
  _QWORD *v2;
  uint64_t (*v3)(uint64_t);

  v2 = *(_QWORD **)(CMBaseObjectGetVTable() + 8);
  if (*v2 >= 2uLL && (v3 = (uint64_t (*)(uint64_t))v2[8]) != 0)
    return v3(a1);
  else
    return 4294954514;
}

uint64_t AirPlayReceiverServerGetTypeID()
{
  if (gAirPlayReceiverServerInitOnce != -1)
    dispatch_once_f(&gAirPlayReceiverServerInitOnce, 0, (dispatch_function_t)_GetTypeID);
  return gAirPlayReceiverServerTypeID;
}

uint64_t _GetTypeID()
{
  uint64_t result;

  result = _CFRuntimeRegisterClass();
  gAirPlayReceiverServerTypeID = result;
  return result;
}

void _Finalize(uint64_t a1)
{
  int v2;
  const void *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  NSObject *v7;
  NSObject *v8;
  NSObject *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  CMNotificationCenterGetDefaultLocalCenter();
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (IsAppleInternalBuild())
  {
    DebugIPC_EnsureFinalized();
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  v2 = *(_DWORD *)(a1 + 32);
  if (v2 != -1)
  {
    notify_cancel(v2);
    *(_DWORD *)(a1 + 32) = -1;
  }
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  CMNotificationCenterRemoveListener();
  if (APSIsAPMSpeaker())
  {
    CMNotificationCenterRemoveListener();
    CMNotificationCenterRemoveListener();
  }
  _StopServers(a1);
  AirPlayReceiverServerPlatformFinalize(*(_QWORD *)(a1 + 16));
  v3 = *(const void **)(a1 + 216);
  if (v3)
  {
    CFRelease(v3);
    *(_QWORD *)(a1 + 216) = 0;
  }
  v4 = *(const void **)(a1 + 160);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(a1 + 160) = 0;
  }
  v5 = *(const void **)(a1 + 256);
  if (v5)
  {
    CFRelease(v5);
    *(_QWORD *)(a1 + 256) = 0;
  }
  v6 = *(const void **)(a1 + 224);
  if (v6)
  {
    CFRelease(v6);
    *(_QWORD *)(a1 + 224) = 0;
  }
  v7 = *(NSObject **)(a1 + 56);
  if (v7)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 56));
    dispatch_release(v7);
    *(_QWORD *)(a1 + 56) = 0;
  }
  v8 = *(NSObject **)(a1 + 24);
  if (v8)
  {
    dispatch_release(v8);
    *(_QWORD *)(a1 + 24) = 0;
  }
  v9 = *(NSObject **)(a1 + 88);
  if (v9)
  {
    dispatch_release(v9);
    *(_QWORD *)(a1 + 88) = 0;
  }
  v10 = *(const void **)(a1 + 176);
  if (v10)
  {
    CFRelease(v10);
    *(_QWORD *)(a1 + 176) = 0;
  }
  v11 = *(const void **)(a1 + 184);
  if (v11)
  {
    CFRelease(v11);
    *(_QWORD *)(a1 + 184) = 0;
  }
  v12 = *(const void **)(a1 + 72);
  if (v12)
  {
    CFRelease(v12);
    *(_QWORD *)(a1 + 72) = 0;
  }
  gAirPlayReceiverServer = 0;
}

void _HandleSystemInfoNotification(int a1, _QWORD *a2, CFTypeRef cf1)
{
  NSObject *v5;
  void (__cdecl *v6)(void *);
  BOOL v7;
  NSObject *v8;
  _QWORD v9[5];
  BOOL v10;

  if (CFEqual(cf1, CFSTR("AdvertisingDeviceSettingChanged")))
  {
    CFRetain(a2);
    v5 = a2[3];
    v6 = (void (__cdecl *)(void *))_HandleAdvertisingDeviceSettingChanged;
LABEL_3:
    dispatch_async_f(v5, a2, v6);
    return;
  }
  if (CFEqual(cf1, CFSTR("AdvertisingParameterChanged")))
  {
    v7 = CFDictionaryGetInt64() == 0;
    CFRetain(a2);
    v8 = a2[3];
    v9[0] = MEMORY[0x24BDAC760];
    v9[1] = 3221225472;
    v9[2] = ___HandleSystemInfoNotification_block_invoke;
    v9[3] = &__block_descriptor_41_e5_v8__0l;
    v9[4] = a2;
    v10 = v7;
    dispatch_async(v8, v9);
  }
  else
  {
    if (CFEqual(cf1, CFSTR("EnableAirPlayStatusChanged")))
    {
      CFRetain(a2);
      v5 = a2[3];
      v6 = (void (__cdecl *)(void *))_HandleEnableAirPlayStatusChanged;
      goto LABEL_3;
    }
    if (CFEqual(cf1, CFSTR("DenyInterruptionsStatusChanged")))
    {
      CFRetain(a2);
      v5 = MEMORY[0x24BDAC9B8];
      v6 = (void (__cdecl *)(void *))_HandleDenyInterruptionsStatusChanged;
      goto LABEL_3;
    }
    if (CFEqual(cf1, CFSTR("SimulateUserStop")))
    {
      CFRetain(a2);
      v5 = a2[3];
      v6 = (void (__cdecl *)(void *))_HandleSimulateUserStop;
      goto LABEL_3;
    }
    if (CFEqual(cf1, CFSTR("P2PSettingChanged")))
    {
      CFRetain(a2);
      v5 = a2[3];
      v6 = (void (__cdecl *)(void *))_HandleP2PSettingChanged;
      goto LABEL_3;
    }
    if (CFEqual(cf1, CFSTR("TightSyncBuddyBecameReachable")))
    {
      CFRetain(a2);
      v5 = a2[11];
      v6 = (void (__cdecl *)(void *))_HandleTightSyncBuddyBecameReachable;
      goto LABEL_3;
    }
    if (CFEqual(cf1, CFSTR("PersistentConnectionConfigChanged")))
    {
      CFRetain(a2);
      v5 = a2[11];
      v6 = (void (__cdecl *)(void *))_HandlePersistentConnectionConfigChanged;
      goto LABEL_3;
    }
  }
}

void _StopServers(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  _QWORD block[5];

  if (*(_BYTE *)(a1 + 132))
  {
    v2 = *(_QWORD *)(a1 + 40);
    if (v2)
    {
      v3 = *(NSObject **)(v2 + 16);
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 3221225472;
      block[2] = __APAdvertiserStop_block_invoke;
      block[3] = &__block_descriptor_40_e5_v8__0l;
      block[4] = v2;
      dispatch_sync(v3, block);
      APAdvertiserInvalidate(*(_QWORD *)(a1 + 40));
      v4 = *(const void **)(a1 + 40);
      if (v4)
      {
        CFRelease(v4);
        *(_QWORD *)(a1 + 40) = 0;
      }
    }
    if (gAirTunesDACPClient)
    {
      AirTunesDACPClient_Delete((char *)gAirTunesDACPClient);
      gAirTunesDACPClient = 0;
    }
    v5 = *(const void **)(a1 + 192);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(a1 + 192) = 0;
    }
    if (*(_QWORD *)(a1 + 80))
    {
      CFObjectSetProperty();
      CFRelease(*(CFTypeRef *)(a1 + 80));
      *(_QWORD *)(a1 + 80) = 0;
    }
    if (*(_QWORD *)(a1 + 96))
    {
      CFObjectSetProperty();
      CFRelease(*(CFTypeRef *)(a1 + 96));
      *(_QWORD *)(a1 + 96) = 0;
    }
    v6 = *(const void **)(a1 + 72);
    if (v6)
    {
      CFRelease(v6);
      *(_QWORD *)(a1 + 72) = 0;
    }
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    *(_BYTE *)(a1 + 132) = 0;
  }
}

void _HandleAdvertisingDeviceSettingChanged(_QWORD *a1)
{
  NSObject *v2;
  _QWORD block[5];

  _RestartAdvertising((uint64_t)a1);
  CFRetain(a1);
  v2 = a1[11];
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = ___HandleAdvertisingDeviceSettingChanged_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_async(v2, block);
  CFRelease(a1);
}

void _HandleEnableAirPlayStatusChanged(const void *a1)
{
  _StartOrStopServersIfNeeded((uint64_t)a1);
  CFRelease(a1);
}

void _HandleDenyInterruptionsStatusChanged(_BYTE *cf)
{
  uint64_t v2;
  uint64_t PropertyInt64Sync;
  void (*v4)(uint64_t, const __CFString *, uint64_t);
  uint64_t v5;

  if (cf[249] && !*((_QWORD *)cf + 29))
  {
    if (APReceiverUIControllerGetShared_once != -1)
      dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_2783);
    v2 = APReceiverUIControllerGetShared_ui;
    if (APReceiverUIControllerGetShared_ui)
    {
      PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      v4 = *(void (**)(uint64_t, const __CFString *, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
      if (v4)
      {
        if (PropertyInt64Sync)
          v5 = *MEMORY[0x24BDBD270];
        else
          v5 = *MEMORY[0x24BDBD268];
        v4(v2, CFSTR("denyInterruptions"), v5);
      }
    }
  }
  CFRelease(cf);
}

void _HandleSimulateUserStop(const void *a1, int a2)
{
  if (!AirPlayReceiverServerControl((uint64_t)a1, a2, CFSTR("sessionDied"), 0, 0, 0))
  {
    if (!a1)
      return;
    goto LABEL_3;
  }
  APSLogErrorAt();
  if (a1)
LABEL_3:
    CFRelease(a1);
}

void _HandleP2PSettingChanged(const void *a1)
{
  _DetermineP2PSettings((uint64_t)a1);
  _ConfigureServersWithP2PSettings((uint64_t)a1);
  _RestartAdvertising((uint64_t)a1);
  CFRelease(a1);
}

void _HandleTightSyncBuddyBecameReachable(uint64_t *a1)
{
  CFTypeRef v2;
  __CFDictionary *Mutable;
  __CFDictionary *v4;
  CFTypeRef cf;

  cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1[27], 0, 0, &cf);
  v2 = cf;
  if (!cf)
    goto LABEL_13;
  if (!*((_BYTE *)cf + 659) && !*((_BYTE *)cf + 658))
  {
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (Mutable)
    {
      v4 = Mutable;
      CFDictionarySetValue(Mutable, CFSTR("type"), CFSTR("regroupTightSyncBuddy"));
      if (gLogCategory_AirPlayReceiverCore <= 50
        && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (!AirPlayReceiverSessionSendCommandForObject((uint64_t)v2, 0, v4, 0, 0))
      {
        CFRelease(v4);
        goto LABEL_11;
      }
      APSLogErrorAt();
      CFRelease(v4);
    }
    else
    {
      APSLogErrorAt();
    }
    APSLogErrorAt();
  }
LABEL_11:
  if (cf)
    CFRelease(cf);
LABEL_13:
  CFRelease(a1);
}

void _HandlePersistentConnectionConfigChanged(_QWORD *cf)
{
  uint64_t v2;
  const void *v3;

  v2 = cf[27];
  v3 = *(const void **)(v2 + 48);
  if (v3)
  {
    CFRetain(*(CFTypeRef *)(v2 + 48));
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverServerCloseConnection((uint64_t)cf, (uint64_t)v3);
    CFRelease(v3);
  }
  CFRelease(cf);
}

void AirPlayReceiverServerCloseConnection(uint64_t a1, uint64_t a2)
{
  uint64_t HTTPConnectionForSession;
  uint64_t v3;
  uint64_t v4;

  v4 = 0;
  if (a1)
  {
    if (a2)
    {
      HTTPConnectionForSession = _FindHTTPConnectionForSession(a1, a2, &v4);
      if (HTTPConnectionForSession)
      {
        v3 = HTTPConnectionForSession;
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _DestroyHTTPConnection(v4, v3);
      }
    }
  }
}

uint64_t _FindHTTPConnectionForSession(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 80);
  if (v4)
  {
    result = *(_QWORD *)(v4 + 56);
    if (result)
    {
      while (*(_QWORD *)(*(_QWORD *)(result + 40) + 280) != a2)
      {
        result = *(_QWORD *)(result + 16);
        if (!result)
          goto LABEL_5;
      }
      goto LABEL_10;
    }
  }
LABEL_5:
  v4 = *(_QWORD *)(a1 + 96);
  if (!v4)
    return 0;
  result = *(_QWORD *)(v4 + 56);
  if (result)
  {
    while (*(_QWORD *)(*(_QWORD *)(result + 40) + 280) != a2)
    {
      result = *(_QWORD *)(result + 16);
      if (!result)
        return result;
    }
LABEL_10:
    if (a3)
      *a3 = v4;
  }
  return result;
}

void _DestroyHTTPConnection(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;

  if (a1)
  {
    v3 = (uint64_t *)(a1 + 56);
    v2 = *(_QWORD *)(a1 + 56);
    if (v2)
    {
      do
      {
        if (v2 == a2)
        {
          *v3 = *(_QWORD *)(a2 + 16);
          _DestroyConnection((_BYTE *)a2);
        }
        else
        {
          v3 = (uint64_t *)(v2 + 16);
        }
        v2 = *v3;
      }
      while (*v3);
    }
  }
}

void _DestroyConnection(_BYTE *a1)
{
  HTTPConnectionStop();
  if (a1[229]
    && gLogCategory_AirPlayReceiverServer <= 40
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRelease(a1);
}

uint64_t _DetermineP2PSettings(uint64_t a1)
{
  uint64_t result;
  int v3;
  _BOOL4 v4;
  int v5;
  BOOL v6;

  result = APSIsVirtualMachine();
  if ((_DWORD)result || *(_QWORD *)(a1 + 256) || (result = CFObjectGetPropertyInt64Sync()) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
  }
  else
  {
    v3 = APSIsMemberOfHTGroup();
    if (APSSettingsIsFeatureEnabled())
      v4 = APSIsMemberOfStereoPair() != 0;
    else
      v4 = 0;
    *(_BYTE *)(a1 + 48) = CFObjectGetPropertyInt64Sync() != 0;
    *(_BYTE *)(a1 + 49) = (IsAppleTV() | v3) != 0;
    v5 = APSIsAPMSpeaker();
    v6 = (v3 | v4) != 0;
    if (!v5)
      v6 = 0;
    *(_BYTE *)(a1 + 50) = v6;
    result = IsAppleInternalBuild();
    if ((_DWORD)result)
    {
      result = APSSettingsGetInt64();
      *(_BYTE *)(a1 + 51) = result != 0;
      if (result)
      {
        if (gLogCategory_AirPlayReceiverServer <= 50)
        {
          if (gLogCategory_AirPlayReceiverServer != -1)
            return LogPrintF();
          result = _LogCategory_Initialize();
          if ((_DWORD)result)
            return LogPrintF();
        }
      }
    }
  }
  return result;
}

uint64_t _ConfigureServersWithP2PSettings(uint64_t a1)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 80))
    CFObjectSetProperty();
  result = *(_QWORD *)(a1 + 96);
  if (result)
    return CFObjectSetProperty();
  return result;
}

void _RestartAdvertising(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __CFDictionary *P2PConfigDictForAdvertiser;
  __CFDictionary *v5;

  v2 = *(_QWORD *)(a1 + 40);
  if (v2)
  {
    if (*(_BYTE *)(a1 + 133))
    {
      if (APAdvertiserFlushBonjourRecords(v2) || _UpdateAdvertiserInfo(a1, v3))
      {
LABEL_13:
        APSLogErrorAt();
        return;
      }
      if (*(_QWORD *)(a1 + 40))
      {
        P2PConfigDictForAdvertiser = _CreateP2PConfigDictForAdvertiser((_BYTE *)a1);
        if (P2PConfigDictForAdvertiser)
        {
          v5 = P2PConfigDictForAdvertiser;
          APAdvertiserSetProperty(*(_QWORD *)(a1 + 40), (uint64_t)CFSTR("P2PConfig"), (uint64_t)P2PConfigDictForAdvertiser);
          CFRelease(v5);
          return;
        }
        goto LABEL_13;
      }
    }
    else if (gLogCategory_AirPlayReceiverServer <= 50
           && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

uint64_t _UpdateAdvertiserInfo(uint64_t a1, uint64_t a2)
{
  const void *v3;
  unsigned int v5;

  v5 = 0;
  if (*(_QWORD *)(a1 + 40))
  {
    v3 = (const void *)APReceiverSystemInfoCopyProperty(*(_QWORD *)(a1 + 160), a2, (uint64_t)CFSTR("AdvertiserInfo"), 0, &v5);
    if (v5 || (v5 = APAdvertiserSetProperty(*(_QWORD *)(a1 + 40), (uint64_t)CFSTR("advertiserInfo"), (uint64_t)v3)) != 0)
    {
      APSLogErrorAt();
      if (!v3)
        return v5;
      goto LABEL_10;
    }
    notify_post("com.apple.airplay.advertisingDidChange");
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
      if (!v3)
        return v5;
      goto LABEL_10;
    }
    if (v3)
LABEL_10:
      CFRelease(v3);
  }
  return v5;
}

__CFDictionary *_CreateP2PConfigDictForAdvertiser(_BYTE *a1)
{
  __CFDictionary *Mutable;
  __CFDictionary *v3;
  const void *v4;
  const void *v5;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v3 = Mutable;
  v4 = (const void *)*MEMORY[0x24BDBD270];
  v5 = (const void *)*MEMORY[0x24BDBD268];
  if (a1[48])
    v6 = (const void *)*MEMORY[0x24BDBD270];
  else
    v6 = (const void *)*MEMORY[0x24BDBD268];
  CFDictionarySetValue(Mutable, CFSTR("allowFullBonjourAdvertisingOverAWDL"), v6);
  if (a1[49])
    v7 = v4;
  else
    v7 = v5;
  CFDictionarySetValue(v3, CFSTR("allowPartialBonjourAdvertisingOverAWDL"), v7);
  if (a1[51])
    v8 = v4;
  else
    v8 = v5;
  CFDictionarySetValue(v3, CFSTR("allowFullNANAdvertising"), v8);
  if (a1[50])
    v9 = v4;
  else
    v9 = v5;
  CFDictionarySetValue(v3, CFSTR("allowPartialNANAdvertising"), v9);
  return v3;
}

uint64_t AirPlayReceiverServerControl(uint64_t a1, int a2, CFTypeRef cf1, const void *a4, const void *a5, CFTypeRef *a6)
{
  _QWORD *v11;
  _QWORD *v12;
  NSObject *v13;
  void (__cdecl *v14)(void *);
  void *v15;
  uint64_t started;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  NSObject *v24;
  _QWORD block[8];

  if (CFEqual(cf1, CFSTR("sendVolumeUpdate")))
  {
    if (!*(_BYTE *)(a1 + 132))
      return 0;
    v11 = malloc_type_calloc(1uLL, 0x10uLL, 0x60040FAFB2B2FuLL);
    if (!v11)
    {
      APSLogErrorAt();
      return 4294960568;
    }
    v12 = v11;
    *v11 = a1;
    v11[1] = a5;
    CFRetain((CFTypeRef)a1);
    CFRetain(a5);
    v13 = *(NSObject **)(a1 + 88);
    v14 = (void (__cdecl *)(void *))_HandleVolumeUpdate;
    v15 = v12;
LABEL_5:
    dispatch_async_f(v13, v15, v14);
    return 0;
  }
  if (CFEqual(cf1, CFSTR("clearPIN")))
  {
    if (gLogCategory_AirPlayReceiverServer <= 20
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    started = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v17, (uint64_t)CFSTR("Passcode"), v18, 0);
    if (!(_DWORD)started)
      return started;
    goto LABEL_49;
  }
  if (CFEqual(cf1, CFSTR("prefsChanged")))
  {
    if (*(_BYTE *)(a1 + 133))
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      APSSettingsSynchronize();
      AirPlayReceiverServerPlatformControl(a1, CFSTR("updatePrefs"), 0, 0);
    }
    return 0;
  }
  if (CFEqual(cf1, CFSTR("startServer")))
  {
    *(_BYTE *)(a1 + 133) = 1;
    APSSettingsSynchronize();
    AirPlayReceiverServerPlatformControl(a1, CFSTR("updatePrefs"), 0, 0);
    _StartOrStopServersIfNeeded(a1);
    return 0;
  }
  if (CFEqual(cf1, CFSTR("stopServer")))
  {
    if (*(_BYTE *)(a1 + 133))
    {
      *(_BYTE *)(a1 + 133) = 0;
      _StopServers(a1);
      dispatch_sync(*(dispatch_queue_t *)(a1 + 88), &__block_literal_global_2082);
    }
    return 0;
  }
  if (CFEqual(cf1, CFSTR("startAssistedModeAdvertising")))
  {
    if (!*(_QWORD *)(a1 + 40))
      return 0;
    started = _StartAssistedModeAdvertising(a1, (uint64_t)a5, a6);
    if (!(_DWORD)started)
      return started;
LABEL_49:
    APSLogErrorAt();
    return started;
  }
  if (CFEqual(cf1, CFSTR("stopAssistedModeAdvertising")))
  {
    if (*(_QWORD *)(a1 + 40))
      _StopAssistedModeAdvertising(a1);
    return 0;
  }
  if (CFEqual(cf1, CFSTR("startedPlayingOverAWDL")))
  {
    ++*(_DWORD *)(a1 + 128);
    v20 = *(_QWORD *)(a1 + 40);
    if (v20)
    {
      v21 = APAdvertiserSetProperty(v20, (uint64_t)CFSTR("enforceSolo"), *MEMORY[0x24BDBD270]);
      if ((_DWORD)v21)
      {
        started = v21;
        goto LABEL_49;
      }
    }
    if (gLogCategory_AirPlayReceiverServer > 50
      || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
LABEL_38:
    LogPrintF();
    return 0;
  }
  if (CFEqual(cf1, CFSTR("stoppedPlayingOverAWDL")))
  {
    v22 = *(_DWORD *)(a1 + 128) - 1;
    *(_DWORD *)(a1 + 128) = v22;
    if (gLogCategory_AirPlayReceiverServer <= 50)
    {
      if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize())
        LogPrintF();
      v22 = *(_DWORD *)(a1 + 128);
    }
    if (v22 > 0)
      return 0;
    *(_DWORD *)(a1 + 128) = 0;
    v23 = *(_QWORD *)(a1 + 40);
    if (!v23)
      return 0;
    started = APAdvertiserSetProperty(v23, (uint64_t)CFSTR("enforceSolo"), *MEMORY[0x24BDBD268]);
    if (!(_DWORD)started)
      return started;
    goto LABEL_49;
  }
  if (CFEqual(cf1, CFSTR("sessionDied")))
  {
    if (a4)
    {
      _RemoveConnectionForSession(a1, (uint64_t)a4);
    }
    else
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _RemoveAllConnectionsOfType(a1);
    }
    return 0;
  }
  if (CFEqual(cf1, CFSTR("forceKeyFrame")))
  {
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!IsAppleInternalBuild())
      return 0;
    CFRetain((CFTypeRef)a1);
    v13 = *(NSObject **)(a1 + 88);
    v14 = (void (__cdecl *)(void *))_HandleForceKeyFrame;
    v15 = (void *)a1;
    goto LABEL_5;
  }
  if (CFEqual(cf1, CFSTR("sendRCSCommand")))
  {
    if (gLogCategory_AirPlayReceiverServer > 50
      || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
    {
      return 0;
    }
    goto LABEL_38;
  }
  if (CFEqual(cf1, CFSTR("audioInterruptionBegan"))
    || CFEqual(cf1, CFSTR("audioInterruptionEnded"))
    || CFEqual(cf1, CFSTR("otherProcessStartedPlaying"))
    || CFEqual(cf1, CFSTR("partnerProcessDeath")))
  {
    CFRetain((CFTypeRef)a1);
    CFRetain(cf1);
    if (a4)
      CFRetain(a4);
    if (a5)
      CFRetain(a5);
    v24 = *(NSObject **)(a1 + 88);
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = __AirPlayReceiverServerControl_block_invoke_2;
    block[3] = &__block_descriptor_64_e5_v8__0l;
    block[4] = a1;
    block[5] = cf1;
    block[6] = a4;
    block[7] = a5;
    dispatch_async(v24, block);
    return 0;
  }
  return AirPlayReceiverServerPlatformControl(a1, cf1, a4, (const __CFDictionary *)a5);
}

void _HandleVolumeUpdate(uint64_t a1)
{
  CFTypeRef v2;
  const void *v3;
  BOOL v4;
  BOOL v5;
  const void *v6;
  CFTypeRef cf;

  cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(*(_QWORD *)(*(_QWORD *)a1 + 216), 0, 0, &cf);
  if (cf)
    AirPlayReceiverSessionHandleVolumeUpdate((uint64_t)cf);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 216) + 48))
  {
    v2 = APReceiverRequestProcessorCopyReceiverSession();
    v3 = v2;
    v4 = v2 == 0;
    if (v2)
      v5 = v2 == cf;
    else
      v5 = 1;
    if (!v5)
      AirPlayReceiverSessionHandleVolumeUpdate((uint64_t)v2);
  }
  else
  {
    v3 = 0;
    v4 = 1;
  }
  if (*(_QWORD *)a1)
    CFRelease(*(CFTypeRef *)a1);
  v6 = *(const void **)(a1 + 8);
  if (v6)
    CFRelease(v6);
  if (cf)
    CFRelease(cf);
  if (!v4)
    CFRelease(v3);
  free((void *)a1);
}

void _StartOrStopServersIfNeeded(uint64_t a1)
{
  char *v2;
  _DWORD *v3;
  char *v4;
  __CFDictionary *Mutable;
  const void *v6;
  const void **v7;
  __CFDictionary *P2PConfigDictForAdvertiser;
  uint64_t v9;

  if (!CFObjectGetPropertyInt64Sync())
  {
    _StopServers(a1);
    return;
  }
  if (!*(_BYTE *)(a1 + 132))
  {
    *(_QWORD *)(a1 + 80) = _CreateHTTPServerForPort(a1, *(unsigned __int16 *)(a1 + 264));
    if (*(_BYTE *)(a1 + 252))
      *(_QWORD *)(a1 + 96) = _CreateHTTPServerForPort(a1, 5000);
    if (*(_BYTE *)(a1 + 248))
      RemovePath();
    if (!*(_BYTE *)(a1 + 250))
    {
LABEL_16:
      _DetermineP2PSettings(a1);
      _ConfigureServersWithP2PSettings(a1);
      if (!*(_QWORD *)(a1 + 72))
        APSWiFiTransactionCreate();
      if (*(_QWORD *)(a1 + 80))
      {
        CFObjectSetProperty();
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
      }
      if (*(_BYTE *)(a1 + 252))
      {
        if (*(_QWORD *)(a1 + 96))
        {
          CFObjectSetProperty();
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
      }
      if (*(_BYTE *)(a1 + 253))
      {
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        goto LABEL_45;
      }
      Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      CFDictionarySetInt64();
      v6 = *(const void **)(a1 + 256);
      if (v6)
        CFDictionarySetValue(Mutable, CFSTR("interfaceName"), v6);
      v7 = (const void **)MEMORY[0x24BDBD270];
      if (*(_BYTE *)(a1 + 64))
        CFDictionarySetValue(Mutable, CFSTR("useAltAdvertising"), (const void *)*MEMORY[0x24BDBD270]);
      if (*(_BYTE *)(a1 + 52))
        CFDictionarySetValue(Mutable, CFSTR("useAssistedModeAdvertising"), *v7);
      P2PConfigDictForAdvertiser = _CreateP2PConfigDictForAdvertiser((_BYTE *)a1);
      if (!P2PConfigDictForAdvertiser
        || (CFDictionarySetValue(Mutable, CFSTR("P2PConfig"), P2PConfigDictForAdvertiser),
            CFDictionarySetValue(Mutable, CFSTR("systemInfo"), *(const void **)(a1 + 160)),
            APAdvertiserCreate(Mutable, (uint64_t *)(a1 + 40)))
        || _UpdateAdvertiserInfo(a1, v9)
        || APAdvertiserStart(*(_QWORD *)(a1 + 40)))
      {
        APSLogErrorAt();
        if (!Mutable)
        {
LABEL_43:
          if (P2PConfigDictForAdvertiser)
            CFRelease(P2PConfigDictForAdvertiser);
LABEL_45:
          APSIntrospectorInit();
          *(_BYTE *)(a1 + 132) = 1;
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          return;
        }
      }
      else if (!Mutable)
      {
        goto LABEL_43;
      }
      CFRelease(Mutable);
      goto LABEL_43;
    }
    v2 = (char *)malloc_type_calloc(1uLL, 0xA600uLL, 0x10F0040ACF67C9AuLL);
    if (v2)
    {
      v3 = v2;
      *(_DWORD *)v2 = 1684104048;
      v4 = v2 + 8;
      if (!pthread_mutex_init((pthread_mutex_t *)(v2 + 8), 0))
      {
        *((_QWORD *)v3 + 9) = v4;
        if (!pthread_cond_init((pthread_cond_t *)(v3 + 20), 0))
        {
          *((_QWORD *)v3 + 16) = v3 + 20;
          if (!NetSocket_Create()
            && !pthread_create((pthread_t *)v3 + 17, 0, (void *(__cdecl *)(void *))_AirTunesDACPClient_Thread, v3))
          {
            *((_QWORD *)v3 + 18) = v3 + 34;
            gAirTunesDACPClient = (uint64_t)v3;
            goto LABEL_14;
          }
        }
      }
      APSLogErrorAt();
      AirTunesDACPClient_Delete((char *)v3);
    }
    else
    {
      APSLogErrorAt();
    }
    v3 = (_DWORD *)gAirTunesDACPClient;
    if (!gAirTunesDACPClient)
    {
LABEL_58:
      APSLogErrorAt();
      goto LABEL_16;
    }
LABEL_14:
    if (*v3 == 1684104048)
    {
      *((_QWORD *)v3 + 21) = _HandleDACPStatus;
      *((_QWORD *)v3 + 22) = a1;
      goto LABEL_16;
    }
    goto LABEL_58;
  }
}

uint64_t _StartAssistedModeAdvertising(uint64_t a1, uint64_t a2, CFTypeRef *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t Int64;
  dispatch_source_t v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;
  NSObject *v12;
  dispatch_time_t v13;
  uint64_t v14;
  _QWORD v16[5];
  _QWORD handler[5];

  if (!*(_BYTE *)(a1 + 52) || *(_QWORD *)(a1 + 56))
  {
    APSLogErrorAt();
    return 4294960587;
  }
  if (!CFDictionaryGetInt64())
  {
    APSLogErrorAt();
    return 4294960591;
  }
  v5 = APAdvertiserCopyProperty(*(_QWORD *)(a1 + 40), CFSTR("assistedModeInfo"), a3);
  if ((_DWORD)v5)
  {
    v14 = v5;
LABEL_16:
    APSLogErrorAt();
    return v14;
  }
  v6 = APAdvertiserSetProperty(*(_QWORD *)(a1 + 40), (uint64_t)CFSTR("allowAssistedModeAdvertisingOverAWDL"), *MEMORY[0x24BDBD270]);
  if ((_DWORD)v6)
  {
    v14 = v6;
    goto LABEL_16;
  }
  Int64 = CFDictionaryGetInt64();
  v8 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, *(dispatch_queue_t *)(a1 + 24));
  *(_QWORD *)(a1 + 56) = v8;
  if (v8)
  {
    CFRetain((CFTypeRef)a1);
    v9 = MEMORY[0x24BDAC760];
    v10 = *(NSObject **)(a1 + 56);
    handler[0] = MEMORY[0x24BDAC760];
    handler[1] = 3221225472;
    handler[2] = ___StartAssistedModeAdvertising_block_invoke;
    handler[3] = &__block_descriptor_40_e5_v8__0l;
    handler[4] = a1;
    dispatch_source_set_event_handler(v10, handler);
    v11 = *(NSObject **)(a1 + 56);
    v16[0] = v9;
    v16[1] = 3221225472;
    v16[2] = ___StartAssistedModeAdvertising_block_invoke_2;
    v16[3] = &__block_descriptor_40_e5_v8__0l;
    v16[4] = a1;
    dispatch_source_set_cancel_handler(v11, v16);
    dispatch_resume(*(dispatch_object_t *)(a1 + 56));
    v12 = *(NSObject **)(a1 + 56);
    if (Int64)
      v13 = dispatch_time(0, 1000000000 * Int64);
    else
      v13 = -1;
    dispatch_source_set_timer(v12, v13, 0xFFFFFFFFFFFFFFFFLL, 0x3B9ACA00uLL);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

void _StopAssistedModeAdvertising(uint64_t a1)
{
  NSObject *v2;

  if (*(_BYTE *)(a1 + 52))
  {
    APAdvertiserSetProperty(*(_QWORD *)(a1 + 40), (uint64_t)CFSTR("allowAssistedModeAdvertisingOverAWDL"), *MEMORY[0x24BDBD268]);
    v2 = *(NSObject **)(a1 + 56);
    if (v2)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 56));
      dispatch_release(v2);
      *(_QWORD *)(a1 + 56) = 0;
    }
  }
}

void _RemoveConnectionForSession(uint64_t a1, uint64_t a2)
{
  NSObject *v2;
  _QWORD v3[6];

  if (a1)
  {
    v2 = *(NSObject **)(a1 + 88);
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 3221225472;
    v3[2] = ___RemoveConnectionForSession_block_invoke;
    v3[3] = &__block_descriptor_48_e5_v8__0l;
    v3[4] = a1;
    v3[5] = a2;
    dispatch_sync(v2, v3);
  }
}

void _RemoveAllConnectionsOfType(uint64_t a1)
{
  _RemoveHTTPServerConnectionsOfType(a1, *(const void **)(a1 + 80));
  _RemoveHTTPServerConnectionsOfType(a1, *(const void **)(a1 + 96));
}

void _HandleForceKeyFrame(uint64_t *a1)
{
  __CFDictionary *Mutable;
  CFTypeRef cf;

  cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1[27], 2, 0, &cf);
  if (!cf)
    goto LABEL_12;
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  CFDictionarySetValue(Mutable, CFSTR("type"), CFSTR("forceKeyFrame"));
  if (AirPlayReceiverSessionSendCommandForObject((uint64_t)cf, 0, Mutable, 0, 0))
  {
    APSLogErrorAt();
    if (!Mutable)
      goto LABEL_10;
LABEL_9:
    CFRelease(Mutable);
    goto LABEL_10;
  }
  if (gLogCategory_AirPlayReceiverServer > 50
    || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
  {
    if (!Mutable)
      goto LABEL_10;
    goto LABEL_9;
  }
  LogPrintF();
  if (Mutable)
    goto LABEL_9;
LABEL_10:
  if (cf)
    CFRelease(cf);
LABEL_12:
  CFRelease(a1);
}

void _RemoveHTTPServerConnectionsOfType(uint64_t a1, const void *a2)
{
  _DWORD *v4;
  _DWORD *v5;

  if (a2)
  {
    v4 = malloc_type_calloc(1uLL, 0x10uLL, 0x10200403A5D3213uLL);
    if (v4)
    {
      v5 = v4;
      CFRetain(a2);
      *(_QWORD *)v5 = a2;
      v5[2] = 1;
      dispatch_sync_f(*(dispatch_queue_t *)(a1 + 88), v5, (dispatch_function_t)_RemoveHTTPServerConnections);
    }
    else
    {
      APSLogErrorAt();
    }
  }
}

void _RemoveHTTPServerConnections(_DWORD *a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  uint64_t v6;

  v2 = *(uint64_t **)a1;
  if (v2)
  {
    v4 = v2 + 7;
    v3 = v2[7];
    if (v3)
    {
      do
      {
        v5 = a1[2];
        v6 = *(_QWORD *)(*(_QWORD *)(v3 + 40) + 280);
        if (v6)
          LODWORD(v6) = CFObjectGetInt64();
        if ((_DWORD)v6 == v5)
        {
          *v4 = *(_QWORD *)(v3 + 16);
          _DestroyConnection((_BYTE *)v3);
        }
        else
        {
          v4 = (uint64_t *)(v3 + 16);
        }
        v3 = *v4;
      }
      while (*v4);
      v2 = *(uint64_t **)a1;
    }
    CFRelease(v2);
  }
  free(a1);
}

uint64_t APReceiverRequestProcessorCopyProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 64);
  if (v6)
    return v6(a1, a2, a3);
  else
    return 0;
}

uint64_t _CreateHTTPServerForPort(uint64_t a1, int a2)
{
  if (HTTPServerCreate())
  {
    APSLogErrorAt();
  }
  else
  {
    MEMORY[0xEC] = -a2;
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    HTTPServerSetDispatchQueue();
  }
  return 0;
}

uint64_t _HandleDACPStatus()
{
  return CFObjectControlAsyncF();
}

void _HandleHTTPConnectionCreated(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  socklen_t v7;
  sockaddr v8;
  uint64_t v9;
  int v10;
  sockaddr v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  __int128 v22;

  *(_QWORD *)&v11.sa_len = 0;
  *(_QWORD *)&v11.sa_data[6] = 0;
  v13 = 0;
  v12 = 0;
  *(_QWORD *)&v8.sa_len = 0;
  *(_QWORD *)&v8.sa_data[6] = 0;
  v10 = 0;
  v9 = 0;
  v7 = 28;
  getsockname(*(_DWORD *)(a2 + 136), &v11, &v7);
  v7 = 28;
  getpeername(*(_DWORD *)(a2 + 136), &v8, &v7);
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *a3 = a4;
  a3[1] = a2;
  a3[2] = 0;
  v14 = 0;
  v16 = 0;
  v20 = 0;
  v15 = a3;
  v22 = 0u;
  v17 = _HandleHTTPConnectionInitialize;
  v18 = _HandleHTTPConnectionFinalize;
  v19 = _HandleHTTPConnectionClose;
  v21 = _HandleHTTPConnectionMessage;
  HTTPConnectionSetDelegate();
  _UpdateIdleTimeoutTimer(a4);
}

uint64_t _HandleHTTPConnectionInitialize(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(_QWORD);
  const void *v4;

  *(_DWORD *)(a2 + 196) = 0;
  APSSettingsGetInt64();
  SocketSetKeepAlive();
  if (*(_BYTE *)(*(_QWORD *)a2 + 249))
  {
    v3 = *(uint64_t (**)(_QWORD))(*(_QWORD *)a2 + 232);
    if (v3)
    {
      *(_QWORD *)(a2 + 296) = v3(0);
    }
    else
    {
      if (APReceiverUIControllerGetShared_once != -1)
        dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_2783);
      v4 = (const void *)APReceiverUIControllerGetShared_ui;
      *(_QWORD *)(a2 + 296) = APReceiverUIControllerGetShared_ui;
      if (v4)
        CFRetain(v4);
    }
  }
  return 0;
}

void _HandleHTTPConnectionFinalize(uint64_t a1, uint64_t a2)
{
  const void *v3;
  const void *v4;

  *(_QWORD *)a2 = 0;
  if (*(_QWORD *)(a2 + 200))
  {
    IPaI1oem5iL();
    *(_QWORD *)(a2 + 200) = 0;
  }
  *(_BYTE *)(a2 + 208) = 0;
  v3 = *(const void **)(a2 + 280);
  if (v3)
  {
    CFRelease(v3);
    *(_QWORD *)(a2 + 280) = 0;
  }
  v4 = *(const void **)(a2 + 296);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(a2 + 296) = 0;
  }
}

void _HandleHTTPConnectionClose(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, const __CFString *, uint64_t *);
  uint64_t v6;

  if (a1 && a2)
  {
    if (gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v4 = *(_QWORD *)(a2 + 280);
    if (v4)
    {
      v6 = a1 + 328;
      v5 = *(unsigned int (**)(uint64_t, const __CFString *, uint64_t *))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                             + 16)
                                                                                 + 16);
      if (!v5 || v5(v4, CFSTR("HTTPConnectionClose"), &v6))
      {
        APSLogErrorAt();
      }
      else
      {
        if (*(_QWORD *)(a2 + 32))
        {
          CFObjectControlSync();
          CFRelease(*(CFTypeRef *)(a2 + 32));
          *(_QWORD *)(a2 + 32) = 0;
        }
        _UpdateIdleTimeoutTimer(*(_QWORD *)a2);
      }
    }
  }
  else
  {
    APSLogErrorAt();
  }
}

uint64_t _HandleHTTPConnectionMessage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned __int8 *v7;
  const char *v8;
  int v9;
  char v10;
  uint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t DerivedStorage;
  CFStringRef v17;
  void (*v18)(const void *, const __CFString *, _QWORD);
  int v19;
  void (*v20)(const void *, const __CFString *, _QWORD);
  __int128 v21;
  uint64_t v22;
  uint64_t Int64;
  uint64_t v24;
  const __CFDictionary *v25;
  int v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _BOOL4 v35;
  uint64_t PropertyInt64Sync;
  int v37;
  int v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  const void *Value;
  CFTypeID v42;
  const void *v43;
  CFTypeID v44;
  uint64_t v45;
  int v46;
  int v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  unsigned __int8 *v51;
  int v52;
  unsigned __int16 v56;
  unsigned __int16 v57;
  unsigned __int16 v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  _QWORD *v65;
  unsigned int inited;
  _BYTE __s[28];
  __int128 cf;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;

  v84 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a1 + 304);
  mach_absolute_time();
  if (!a3)
  {
    APSLogErrorAt();
    return -6705;
  }
  v7 = (unsigned __int8 *)(a2 + 24);
  ++*(_QWORD *)(a3 + 16);
  if (strnicmp_prefix())
    v8 = "RTSP/1.0";
  else
    v8 = "HTTP/1.1";
  *(_QWORD *)(a1 + 48) = v8;
  if (strnicmpx() && (strnicmpx() || strnicmp_suffix())
    || gLogCategory_AirPlayReceiverServerHTTP <= 10
    && (gLogCategory_AirPlayReceiverServerHTTP != -1 || _LogCategory_Initialize()))
  {
    LogHTTP();
    v64 = 0;
  }
  else
  {
    v9 = IsAppleInternalBuild();
    v10 = 1;
    v64 = 1;
    if (!v9)
      goto LABEL_19;
  }
  if (gLogCategory_AirPlayReceiverServerHTTP <= 50
    && (gLogCategory_AirPlayReceiverServerHTTP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v10 = 0;
LABEL_19:
  v63 = v10;
  HTTPGetHeaderField();
  HTTPScanFHeaderValue();
  v11 = *(_QWORD *)(a3 + 40);
  if (!v11)
  {
    v11 = SockAddrToDeviceID();
    *(_QWORD *)(a3 + 40) = v11;
  }
  if (!*(_QWORD *)(a3 + 280))
  {
    v62 = v6;
    v12 = *(const void **)(a3 + 296);
    v14 = *(_QWORD *)a3;
    v13 = *(_QWORD *)(a3 + 8);
    v59 = *(_QWORD *)(*(_QWORD *)a3 + 24);
    v60 = *(_DWORD *)(v13 + 192);
    v61 = *(_QWORD *)(*(_QWORD *)a3 + 216);
    *(_OWORD *)__s = *(_OWORD *)(v13 + 228);
    *(_OWORD *)&__s[12] = *(_OWORD *)(v13 + 240);
    *(_QWORD *)&cf = 0;
    if (APReceiverRequestProcessorGetClassID_once != -1)
      dispatch_once(&APReceiverRequestProcessorGetClassID_once, &__block_literal_global_203);
    v15 = CMDerivedObjectCreate();
    if (v15)
    {
      APSLogErrorAt();
      v6 = v62;
    }
    else
    {
      DerivedStorage = CMBaseObjectGetDerivedStorage();
      *(_QWORD *)(DerivedStorage + 8) = v12;
      *(_QWORD *)(DerivedStorage + 16) = a1;
      *(_QWORD *)DerivedStorage = v14;
      if (v12)
      {
        CFRetain(v12);
        v17 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], (const char *)(a1 + 140), 0x8000100u);
        if (APSIsDirectLinkInterface())
        {
          if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
            && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v18 = *(void (**)(const void *, const __CFString *, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                                + 56);
          if (v18)
            v18(v12, CFSTR("IsWiredLink"), *MEMORY[0x24BDBD270]);
        }
        v19 = *(_DWORD *)(a1 + 192);
        if (v19 == 4 || v19 == 128 || v19 == 64)
        {
          if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
            && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v20 = *(void (**)(const void *, const __CFString *, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                                + 56);
          if (v20)
            v20(v12, CFSTR("IsP2PWiFi"), *MEMORY[0x24BDBD270]);
        }
      }
      else
      {
        v17 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], (const char *)(a1 + 140), 0x8000100u);
      }
      *(_QWORD *)(DerivedStorage + 424) = v59;
      *(_DWORD *)(DerivedStorage + 24) = v60;
      v6 = v62;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v21 = *(_OWORD *)(a1 + 256);
      *(_OWORD *)(DerivedStorage + 288) = *(_OWORD *)(a1 + 268);
      *(_OWORD *)(DerivedStorage + 304) = *(_OWORD *)__s;
      *(_OWORD *)(DerivedStorage + 276) = v21;
      *(_OWORD *)(DerivedStorage + 316) = *(_OWORD *)&__s[12];
      *(_QWORD *)(DerivedStorage + 120) = v11;
      *(_QWORD *)(DerivedStorage + 432) = v61;
      v22 = cf;
      *(_QWORD *)(a3 + 280) = cf;
      *(_QWORD *)&cf = 0;
      if (!v17)
      {
        v7 = (unsigned __int8 *)(a2 + 24);
LABEL_52:
        if (v22)
          goto LABEL_53;
        APSLogErrorAt();
        return -6728;
      }
      CFRelease(v17);
      v7 = (unsigned __int8 *)(a2 + 24);
    }
    inited = v15;
    if (v15)
      goto LABEL_289;
    v22 = *(_QWORD *)(a3 + 280);
    goto LABEL_52;
  }
LABEL_53:
  if (!*(_BYTE *)(a3 + 48))
  {
    *(_QWORD *)&cf = 0;
    HTTPGetHeaderField();
  }
  v65 = (_QWORD *)a1;
  if (strnicmp_suffix() || !IsAppleInternalBuild())
  {
    if (!strnicmp_suffix() && IsAppleInternalBuild())
    {
      inited = HTTPHeader_InitResponse();
      if (inited)
        goto LABEL_289;
      *(_QWORD *)(v6 + 8528) = 0;
      v27 = (_QWORD *)a1;
      v28 = a3;
      v29 = a2;
      v30 = a3;
      v31 = v6;
      v32 = 1819240307;
      goto LABEL_149;
    }
    Int64 = CFObjectGetInt64();
    if (!Int64)
    {
      v35 = 1;
      if (!CFObjectGetPropertyInt64Sync())
        v35 = CFObjectGetPropertyInt64Sync() != 0;
      PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      if (!PropertyInt64Sync || v35)
      {
        if (PropertyInt64Sync)
          v38 = 1;
        else
          v38 = v35;
        if (v38 != 1)
          goto LABEL_58;
      }
      else
      {
        v37 = *(_DWORD *)(*(_QWORD *)(a3 + 8) + 192);
        if (v37 != 4 && v37 != 64 && v37 != 128)
          goto LABEL_58;
      }
      if ((strnicmpx() || strnicmp_suffix())
        && (strnicmpx()
         || strnicmp_suffix()
         && strnicmp_suffix()
         && strnicmp_suffix()
         && strnicmp_suffix()
         && strnicmp_suffix()))
      {
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(_QWORD *)&cf = 0;
        HTTPGetHeaderField();
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v34 = 403;
        goto LABEL_189;
      }
    }
LABEL_58:
    v24 = CFObjectGetInt64();
    if (Int64 && v24)
    {
LABEL_60:
      *(_BYTE *)(a3 + 193) = 1;
      goto LABEL_70;
    }
    if (*(_BYTE *)(a3 + 193))
      goto LABEL_70;
    if (strnicmpx())
    {
      if (strnicmpx())
      {
LABEL_123:
        v82 = 0u;
        v83 = 0u;
        v80 = 0u;
        v81 = 0u;
        v78 = 0u;
        v79 = 0u;
        v76 = 0u;
        v77 = 0u;
        v74 = 0u;
        v75 = 0u;
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        cf = 0u;
        v69 = 0u;
        CFObjectGetPropertyCStringSync();
        v39 = *(_QWORD *)(a3 + 296);
        if (v39)
        {
          v40 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
          if (v40)
            v40(v39);
        }
        goto LABEL_60;
      }
      if (strnicmp_suffix()
        && strnicmp_suffix()
        && strnicmp_suffix()
        && strnicmp_suffix())
      {
LABEL_156:
        if (!strnicmp_suffix())
          goto LABEL_70;
        goto LABEL_123;
      }
    }
    else if (strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix()
           && strnicmp_suffix())
    {
      goto LABEL_156;
    }
LABEL_70:
    if (*(_BYTE *)(*(_QWORD *)a3 + 250) && CFObjectGetInt64())
    {
      LODWORD(cf) = 0;
      if (HTTPScanFHeaderValue() == 1)
      {
        if (gAirTunesDACPClient && *(_DWORD *)gAirTunesDACPClient == 1684104048)
          *(_QWORD *)(gAirTunesDACPClient + 41456) = 0;
        else
          APSLogErrorAt();
      }
      if (HTTPScanFHeaderValue() == 1)
      {
        if (gAirTunesDACPClient && *(_DWORD *)gAirTunesDACPClient == 1684104048)
          *(_DWORD *)(gAirTunesDACPClient + 41464) = cf;
        else
          APSLogErrorAt();
      }
    }
    inited = HTTPHeader_InitResponse();
    if (inited)
      goto LABEL_289;
    *(_QWORD *)(v6 + 8528) = 0;
    if (strnicmpx())
    {
      if (strnicmpx())
      {
        if (strnicmpx())
        {
          if (strnicmpx())
          {
            if (strnicmpx())
            {
              if (!strnicmpx())
              {
                v33 = 1634624360;
                goto LABEL_224;
              }
              v33 = 1937012080;
              if (!strnicmpx())
              {
                v33 = 1937011316;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                v33 = 1936875892;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                v33 = 1936027749;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                v33 = 1936027768;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                v33 = 1735422573;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                v33 = 1919119972;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                v33 = 1634627171;
                goto LABEL_224;
              }
              if (!strnicmpx())
              {
                *(_QWORD *)&cf = 0;
                v7 = (unsigned __int8 *)(a2 + 24);
                HTTPGetHeaderField();
                if (!strnicmpx() || !strnicmpx())
                  goto LABEL_148;
                if (URLGetNextPathSegment())
                {
                  APSLogErrorAt();
                }
                else
                {
                  *(_QWORD *)&cf = 5;
                  URLGetNextPathSegment();
                  if (!strnicmpx())
                  {
                    v33 = 1936942192;
                    goto LABEL_148;
                  }
                }
                v34 = 400;
                goto LABEL_190;
              }
              if (strnicmpx())
              {
                if (strnicmpx())
                {
                  if (strnicmpx())
                  {
                    if (!*(_BYTE *)(*(_QWORD *)a3 + 248) || strnicmpx())
                    {
                      v34 = 501;
LABEL_189:
                      v7 = (unsigned __int8 *)(a2 + 24);
                      goto LABEL_190;
                    }
                    if (strnicmp_suffix())
                    {
                      if (strnicmp_suffix())
                      {
                        if (strnicmp_suffix())
                        {
                          if (strnicmp_suffix())
                            goto LABEL_302;
LABEL_320:
                          v33 = 1886679924;
                          goto LABEL_224;
                        }
                        v33 = 1886611505;
                      }
                      else
                      {
                        v33 = 1936748658;
                      }
                    }
                    else
                    {
                      v33 = 1886414964;
                    }
                    goto LABEL_224;
                  }
                  if (strnicmp_suffix())
                  {
                    if (!strnicmp_suffix())
                    {
                      v33 = 1668247142;
                      goto LABEL_224;
                    }
                    if (!strnicmp_suffix())
                    {
                      v33 = 1801807216;
                      goto LABEL_224;
                    }
                    if (!strnicmp_suffix())
                    {
                      v33 = 1634562925;
                      goto LABEL_224;
                    }
                    if (strnicmp_suffix())
                    {
                      if (!*(_BYTE *)(*(_QWORD *)a3 + 248) || strnicmp_suffix())
                      {
                        if (strnicmp_suffix())
                        {
                          if (!strnicmp_suffix())
                          {
                            v33 = 1836348024;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1886613612;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1702064240;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1886417780;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1885434725;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1885435493;
                            goto LABEL_224;
                          }
                          if (strnicmp_suffix())
                          {
                            if (strnicmp_suffix())
                            {
                              if (!strnicmp_suffix())
                              {
                                v33 = 1885432944;
                                goto LABEL_224;
                              }
                              if (!strnicmp_suffix())
                              {
                                v34 = 551;
                                goto LABEL_303;
                              }
                              if (!*(_BYTE *)(*(_QWORD *)a3 + 248))
                                goto LABEL_302;
                              if (!strnicmp_suffix())
                              {
                                v33 = 1633907822;
                                goto LABEL_224;
                              }
                              if (!strnicmp_suffix())
                              {
                                v33 = 1885435252;
                                goto LABEL_224;
                              }
                              if (!strnicmp_suffix())
                              {
                                v33 = 1735422066;
                                goto LABEL_224;
                              }
                              if (!strnicmp_suffix())
                              {
                                v33 = 1886151033;
                                goto LABEL_224;
                              }
                              if (!strnicmp_suffix())
                              {
                                v33 = 1886545267;
                                goto LABEL_224;
                              }
                              if (strnicmp_suffix())
                              {
                                if (strnicmp_suffix())
                                {
                                  if (!strnicmp_suffix())
                                  {
                                    v33 = 1920168547;
                                    goto LABEL_224;
                                  }
                                  if (!strnicmp_suffix())
                                  {
                                    v33 = 1920365171;
                                    goto LABEL_224;
                                  }
                                  if (!strnicmp_suffix())
                                  {
                                    v33 = 1936941938;
                                    goto LABEL_224;
                                  }
                                  if (!strnicmp_suffix())
                                  {
                                    v33 = 1937010544;
                                    goto LABEL_224;
                                  }
                                  if (!strnicmp_suffix())
                                    goto LABEL_320;
                                  if (!strnicmp_suffix())
                                  {
                                    v33 = 1886809964;
                                    goto LABEL_224;
                                  }
                                  goto LABEL_302;
                                }
                                v58 = 24948;
                              }
                              else
                              {
                                v58 = 29797;
                              }
                              v33 = v58 | 0x72610000u;
                              goto LABEL_224;
                            }
                            v57 = 29296;
                          }
                          else
                          {
                            v57 = 24944;
                          }
                          v33 = v57 | 0x70610000u;
                          goto LABEL_224;
                        }
                        goto LABEL_306;
                      }
                      v56 = 29490;
                    }
                    else
                    {
                      v56 = 12853;
                    }
                    v33 = v56 | 0x66700000u;
                    goto LABEL_224;
                  }
                  v33 = 1668246893;
                }
                else
                {
                  v33 = 1819240307;
                  if (strnicmp_suffix())
                  {
                    if (strnicmp_suffix())
                    {
                      if (strnicmp_suffix())
                      {
                        if (*(_BYTE *)(*(_QWORD *)a3 + 248))
                        {
                          v33 = 1735615346;
                          if (!strnicmp_suffix())
                          {
                            v33 = 1735616870;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1735616614;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1735616561;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1886283375;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
LABEL_224:
                            v7 = (unsigned __int8 *)(a2 + 24);
                            goto LABEL_148;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1735222134;
                            goto LABEL_224;
                          }
                          if (!strnicmp_suffix())
                          {
                            v33 = 1735684980;
                            goto LABEL_224;
                          }
                        }
LABEL_302:
                        v34 = 404;
LABEL_303:
                        v7 = (unsigned __int8 *)(a2 + 24);
                        goto LABEL_190;
                      }
LABEL_306:
                      v33 = 1768842863;
                      goto LABEL_224;
                    }
                  }
                  else
                  {
                    v33 = 1819240224;
                  }
                }
              }
              else
              {
                v33 = 1952741230;
              }
            }
            else
            {
              v33 = 1835100003;
            }
          }
          else
          {
            v33 = 1718839394;
          }
        }
        else
        {
          v33 = 1718383464;
        }
      }
      else
      {
        v33 = 1936749165;
      }
    }
    else
    {
      v33 = 1869640819;
    }
    v7 = (unsigned __int8 *)(a2 + 24);
LABEL_148:
    v27 = v65;
    v28 = a3;
    v29 = a2;
    v30 = a3;
    v31 = v6;
    v32 = v33;
LABEL_149:
    v34 = _RequestProcessorHandler(v27, v28, v29, v30, v31, v32);
    goto LABEL_150;
  }
  LODWORD(cf) = 0;
  CFDictionaryGetTypeID();
  v25 = (const __CFDictionary *)CFCreateWithPlistBytes();
  v26 = gLogCategory_AirPlayReceiverServer;
  if (gLogCategory_AirPlayReceiverServer <= 50)
  {
    if (gLogCategory_AirPlayReceiverServer == -1)
    {
      if (!_LogCategory_Initialize())
        goto LABEL_165;
      v26 = gLogCategory_AirPlayReceiverServer;
    }
    if (v26 == -1)
      _LogCategory_Initialize();
    LogPrintF();
  }
LABEL_165:
  Value = CFDictionaryGetValue(v25, CFSTR("controlCommand"));
  if (!Value || (v42 = CFGetTypeID(Value), v42 != CFStringGetTypeID()))
  {
    APSLogErrorAt();
    v34 = 400;
    if (!v25)
      goto LABEL_181;
    goto LABEL_180;
  }
  v43 = CFDictionaryGetValue(v25, CFSTR("controlParams"));
  if (v43)
  {
    v44 = CFGetTypeID(v43);
    if (v44 != CFDictionaryGetTypeID())
    {
      APSLogErrorAt();
      v34 = 400;
      goto LABEL_309;
    }
  }
  if (!*(_QWORD *)(a3 + 32) && (LODWORD(cf) = NetPerfCreate(), (_DWORD)cf)
    || (LODWORD(cf) = CFObjectControlSync(), (_DWORD)cf))
  {
    APSLogErrorAt();
    v34 = 500;
LABEL_309:
    v7 = (unsigned __int8 *)(a2 + 24);
    if (!v25)
      goto LABEL_181;
    goto LABEL_180;
  }
  v45 = *(_QWORD *)(*(_QWORD *)(a3 + 8) + 304);
  if (!*(_QWORD *)(v45 + 8216))
  {
    strnicmp_prefix();
    v46 = HTTPHeader_InitResponse();
    if (v46)
    {
      v47 = v46;
      APSLogErrorAt();
      v34 = 500;
      goto LABEL_179;
    }
    *(_QWORD *)(v45 + 8528) = 0;
  }
  v47 = HTTPMessageSetBody();
  if (v47)
  {
    APSLogErrorAt();
    v34 = 500;
  }
  else
  {
    v34 = 200;
  }
LABEL_179:
  v7 = (unsigned __int8 *)(a2 + 24);
  LODWORD(cf) = v47;
  if (v25)
LABEL_180:
    CFRelease(v25);
LABEL_181:
  if (v34 != 200
    && gLogCategory_AirPlayReceiverServer <= 60
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_150:
  if (v34 != 200)
  {
LABEL_190:
    inited = HTTPHeader_InitResponse();
    if (!inited)
    {
      *(_QWORD *)(v6 + 8528) = 0;
      inited = HTTPHeader_SetField();
      if (!inited)
        goto LABEL_192;
    }
LABEL_289:
    APSLogErrorAt();
    return inited;
  }
  v34 = 200;
LABEL_192:
  APSVersionUtilsGetShortVersionLength();
  inited = HTTPHeader_SetField();
  if (inited)
    goto LABEL_289;
  if (v34 == 401)
  {
    inited = HTTPMakeTimedNonce();
    if (inited)
      goto LABEL_289;
    inited = HTTPHeader_SetField();
    if (inited)
      goto LABEL_289;
  }
  mach_absolute_time();
  UpTicksToSecondsF();
  if (v48 > 2.0)
  {
    v49 = *(_QWORD *)(a2 + 8216);
    if (v49 >= 1)
    {
      v50 = (unint64_t)&v7[v49];
      v51 = v7;
      do
      {
        v52 = *v51;
        if (v52 == 10 || v52 == 13)
          break;
        ++v51;
      }
      while ((unint64_t)v51 < v50);
    }
    if (gLogCategory_AirPlayReceiverServer <= 60
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  if ((v64 & 1) == 0)
    LogHTTP();
  if ((v63 & 1) == 0
    && gLogCategory_AirPlayReceiverServerHTTP <= 50
    && (gLogCategory_AirPlayReceiverServerHTTP != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  HTTPHeader_SetField();
  UpTicksToMilliseconds();
  HTTPHeader_SetField();
  inited = HTTPConnectionSendResponse();
  if (inited)
    goto LABEL_289;
  ++*(_QWORD *)(a3 + 24);
  return inited;
}

void _UpdateIdleTimeoutTimer(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  dispatch_source_t v4;
  NSObject *v5;
  dispatch_time_t v6;
  NSObject *v7;

  v2 = *(_QWORD *)(a1 + 80);
  if (v2 && *(_QWORD *)(v2 + 56) || (v3 = *(_QWORD *)(a1 + 96)) != 0 && *(_QWORD *)(v3 + 56))
  {
    if (!*(_QWORD *)(a1 + 136))
    {
      v4 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, *(dispatch_queue_t *)(a1 + 88));
      *(_QWORD *)(a1 + 136) = v4;
      if (v4)
      {
        CFRetain((CFTypeRef)a1);
        dispatch_set_context(*(dispatch_object_t *)(a1 + 136), (void *)a1);
        dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 136), (dispatch_function_t)_HandleIdleTimeoutTimerFired);
        dispatch_source_set_cancel_handler_f(*(dispatch_source_t *)(a1 + 136), (dispatch_function_t)_HandleIdleTimeoutTimerCanceled);
        v5 = *(NSObject **)(a1 + 136);
        v6 = dispatch_time(0, 90000000000);
        dispatch_source_set_timer(v5, v6, 0x14F46B0400uLL, 0x53D1AC100uLL);
        dispatch_resume(*(dispatch_object_t *)(a1 + 136));
      }
      else
      {
        APSLogErrorAt();
      }
    }
  }
  else
  {
    v7 = *(NSObject **)(a1 + 136);
    if (v7)
    {
      dispatch_source_cancel(*(dispatch_source_t *)(a1 + 136));
      dispatch_release(v7);
      *(_QWORD *)(a1 + 136) = 0;
    }
  }
}

void _HandleIdleTimeoutTimerFired(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = mach_absolute_time();
  v3 = a1[10];
  if (v3)
    _TimeoutIdleHTTPConnections(v3, a1[19], v2);
  v4 = a1[12];
  if (v4)
    _TimeoutIdleHTTPConnections(v4, a1[19], v2);
}

void _TimeoutIdleHTTPConnections(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 56);
  while (v3)
  {
    v7 = v3;
    v3 = *(_QWORD *)(v3 + 16);
    if ((!*(_QWORD *)(*(_QWORD *)(v7 + 40) + 280) || !CFObjectGetInt64()) && a3 - *(_QWORD *)(v7 + 408) > a2)
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _DestroyHTTPConnection(a1, v7);
    }
  }
}

uint64_t _RequestProcessorHandler(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  const __CFDictionary *Dictionary;
  const void **v13;
  __CFDictionary *MutableCopy;
  const __CFString *v15;
  const __CFString *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, __CFDictionary *, CFTypeRef *);
  int v23;
  uint64_t v24;
  const __CFDictionary *v25;
  const __CFString *TypedValue;
  const void *Value;
  CFIndex Length;
  uint64_t Int64;
  _QWORD *v30;
  int v31;
  uint64_t v32;
  const void *Data;
  const void *v34;
  int v35;
  uint64_t v36;
  CFTypeRef cf;
  int v39;
  size_t __n;
  int inited;
  unint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD buffer[8];
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  cf = 0;
  if (!*(_QWORD *)(a2 + 280))
  {
    APSLogErrorAt();
    v32 = 400;
    goto LABEL_103;
  }
  v39 = 0;
  Dictionary = (const __CFDictionary *)HTTPMessageCreateDictionary();
  v13 = (const void **)MEMORY[0x24BE03900];
  MutableCopy = CFDictionaryCreateMutableCopy(0, 0, Dictionary);
  if (!MutableCopy)
  {
    APSLogErrorAt();
    v19 = -6728;
    v39 = -6728;
    goto LABEL_45;
  }
  CFDictionarySetData();
  CFDictionarySetCString();
  if ((int)a6 <= 1918989412)
  {
    if ((_DWORD)a6 == 1718383464)
    {
      LOWORD(v43) = 0;
      LODWORD(buffer[0]) = 0;
      v39 = HTTPParseRTPInfo();
      if (!v39)
      {
        CFDictionarySetInt64();
LABEL_43:
        CFDictionarySetInt64();
        goto LABEL_44;
      }
LABEL_140:
      APSLogErrorAt();
      goto LABEL_44;
    }
    if ((_DWORD)a6 == 1885435252)
    {
      *(_QWORD *)&buffer[0] = 0;
      *(_QWORD *)&v43 = 0;
      v39 = HTTPGetHeaderField();
      if (!v39)
      {
        v39 = CFDictionarySetCString();
        if (!v39)
          goto LABEL_44;
      }
      goto LABEL_140;
    }
    if ((_DWORD)a6 != 1886809964)
    {
LABEL_44:
      v19 = v39;
      goto LABEL_45;
    }
    _GetFloatValueFromHTTPMessageURL(a3, (uint64_t)"volume", &v39);
    if (v39)
      goto LABEL_140;
    goto LABEL_41;
  }
  if ((int)a6 > 1936941937)
  {
    if ((_DWORD)a6 != 1936941938)
    {
      if ((_DWORD)a6 != 1936942192)
        goto LABEL_44;
      v15 = CFSTR("SDPSessionType");
      v16 = CFSTR("audio");
LABEL_34:
      CFDictionarySetValue(MutableCopy, v15, v16);
      goto LABEL_44;
    }
    _GetFloatValueFromHTTPMessageURL(a3, (uint64_t)"position", &v39);
    if (v39)
      goto LABEL_140;
LABEL_41:
    CFDictionarySetDouble();
    goto LABEL_44;
  }
  if ((_DWORD)a6 != 1918989413)
  {
    if ((_DWORD)a6 == 1936749165)
    {
      *(_QWORD *)&buffer[0] = 0;
      *(_QWORD *)&v43 = 0;
      HTTPGetHeaderField();
      if (!*(_QWORD *)(a3 + 8544))
      {
        v39 = 0;
        goto LABEL_44;
      }
      if (strnicmp_prefix() && strnicmpx())
      {
        if (strnicmpx() && strnicmpx() && strnicmpx())
        {
          if (gLogCategory_AirPlayReceiverServer <= 90
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v39 = -6705;
        }
        goto LABEL_44;
      }
      LODWORD(v42) = 0;
      v39 = HTTPParseRTPInfo();
      if (!v39)
        goto LABEL_43;
      goto LABEL_140;
    }
    goto LABEL_44;
  }
  _GetFloatValueFromHTTPMessageURL(a3, (uint64_t)"value", &v39);
  if (v39)
    goto LABEL_140;
  CFDictionarySetDouble();
  v42 = 0;
  *(_QWORD *)&v43 = 0;
  __n = 0;
  inited = 0;
  v17 = HTTPMessageGetOrCopyFormVariable();
  if (v17)
  {
    v18 = v17;
    if (v17 != -6727)
      APSLogErrorAt();
  }
  else if (v42 < 0x40 && (__strlcpy_chk(), sscanf((const char *)buffer, "%d", &inited) == 1))
  {
    v18 = 0;
  }
  else
  {
    APSLogErrorAt();
    v18 = -6705;
  }
  v39 = v18;
  if (__n)
  {
    free((void *)__n);
    v18 = v39;
  }
  if (!v18 && inited >= 1)
  {
    v16 = (const __CFString *)*MEMORY[0x24BDBD270];
    v15 = CFSTR("forInterstitial");
    goto LABEL_34;
  }
  v19 = 0;
  v39 = 0;
LABEL_45:
  v20 = v19;
  if (Dictionary)
  {
    CFRelease(Dictionary);
    v20 = v39;
  }
  if (MutableCopy && v20)
  {
    CFRelease(MutableCopy);
    MutableCopy = 0;
  }
  if (v19)
  {
    APSLogErrorAt();
    v32 = 400;
    goto LABEL_101;
  }
  v21 = *(_QWORD *)(a2 + 280);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable()
                                                                                              + 16)
                                                                                  + 24);
  if (v22)
    v23 = v22(v21, a6, MutableCopy, &cf);
  else
    v23 = -71934;
  v24 = _MapReqProcReturnCodeToHTTPReturnCode(v23);
  if (gLogCategory_AirPlayReceiverServer <= 10
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if ((_DWORD)v24 != 200)
  {
    APSLogErrorAt();
    v32 = v24;
    goto LABEL_101;
  }
  v25 = (const __CFDictionary *)cf;
  inited = 0;
  __n = 0;
  if (!*(_QWORD *)(a4 + 280))
    goto LABEL_119;
  memset(buffer, 0, sizeof(buffer));
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v42 = 0;
  if (cf)
  {
    CFStringGetTypeID();
    TypedValue = (const __CFString *)CFDictionaryGetTypedValue();
    CFDictionaryGetData();
    if (TypedValue)
      CFStringGetCString(TypedValue, (char *)buffer, 128, 0x8000100u);
  }
  time(0);
  HTTPMakeDateString();
  HTTPHeader_SetField();
  if (HTTPMessageSetBody())
  {
    APSLogErrorAt();
    goto LABEL_121;
  }
  if ((int)a6 <= 1885434724)
  {
    if ((int)a6 > 1718839393)
    {
      if ((_DWORD)a6 != 1718839394)
      {
        if ((_DWORD)a6 == 1869640819)
        {
          inited = _HTTPSetField((uint64_t)v25, CFSTR("Public"));
          if (inited)
            goto LABEL_121;
        }
        goto LABEL_100;
      }
    }
    else if ((_DWORD)a6 != 1718383464)
    {
      if ((_DWORD)a6 != 1718645554)
        goto LABEL_100;
      Value = CFDictionaryGetValue(v25, *v13);
      CFRetain(Value);
      Length = CFDataGetLength((CFDataRef)Value);
      Int64 = CFDictionaryGetInt64();
      if (!inited)
      {
        CFRetain(a1);
        v30 = (_QWORD *)a1[38];
        v30[1209] = a1;
        v30[1210] = Value;
        v30[1211] = Length;
        v30[1212] = Int64;
        v30[1214] = _FPSetup2ResponseCompletionHandler;
        v31 = CFDictionaryGetInt64();
        if (inited)
          goto LABEL_121;
        v32 = _MapReqProcReturnCodeToHTTPReturnCode(v31);
        inited = HTTPHeader_InitResponse();
        inited = HTTPMessageSetBody();
        if (inited)
          goto LABEL_121;
        if ((_DWORD)v32 != 200)
          goto LABEL_122;
        goto LABEL_100;
      }
LABEL_119:
      APSLogErrorAt();
      goto LABEL_100;
    }
    if (CFDictionaryContainsKey(v25, CFSTR("RTP-Info")))
    {
      inited = _HTTPSetField((uint64_t)v25, CFSTR("RTP-Info"));
      if (inited)
        goto LABEL_121;
    }
    goto LABEL_100;
  }
  if ((int)a6 <= 1919119971)
  {
    if (((_DWORD)a6 == 1885434725 || (_DWORD)a6 == 1885435493)
      && v25
      && CFDictionaryGetValue(v25, (const void *)*MEMORY[0x24BE03908]))
    {
      Data = (const void *)CFDictionaryGetData();
      memcpy((void *)(a4 + 209), Data, __n);
      v34 = (const void *)CFDictionaryGetData();
      memcpy((void *)(a4 + 241), v34, __n);
      CFRetain(*(CFTypeRef *)(a4 + 8));
      *(_QWORD *)(a5 + 9672) = *(_QWORD *)(a4 + 8);
      *(_QWORD *)(a5 + 9712) = _HandlePairVerifyCoreUtilsCompletion;
    }
    goto LABEL_100;
  }
  if ((_DWORD)a6 == 1919119972)
  {
    CFDictionaryGetInt64();
    if (inited)
      goto LABEL_121;
    inited = HTTPHeader_SetField();
    if (inited)
      goto LABEL_121;
    goto LABEL_100;
  }
  if ((_DWORD)a6 != 1920365171)
  {
    if ((_DWORD)a6 == 1936942192)
    {
      inited = _HTTPSetField((uint64_t)v25, CFSTR("Transport"));
      if (inited)
        goto LABEL_121;
      inited = _HTTPSetField((uint64_t)v25, CFSTR("Session"));
      if (inited)
        goto LABEL_121;
      inited = _HTTPSetField((uint64_t)v25, CFSTR("Audio-Jack-Status"));
      if (inited)
        goto LABEL_121;
    }
LABEL_100:
    v32 = 200;
    goto LABEL_101;
  }
  v35 = CFDictionaryGetInt64();
  if (!inited)
  {
    v36 = _MapReqProcReturnCodeToHTTPReturnCode(v35);
    if ((_DWORD)v36 != 200)
    {
      v32 = v36;
      APSLogErrorAt();
      goto LABEL_122;
    }
    inited = HTTPHeader_InitResponse();
    if (!inited)
    {
      HTTPHeader_SetField();
      HTTPHeader_SetField();
      goto LABEL_100;
    }
  }
LABEL_121:
  APSLogErrorAt();
  v32 = 500;
LABEL_122:
  APSLogErrorAt();
LABEL_101:
  if (MutableCopy)
    CFRelease(MutableCopy);
LABEL_103:
  if (cf)
    CFRelease(cf);
  if ((_DWORD)v32 != 200
    && gLogCategory_AirPlayReceiverServer <= 90
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v32;
}

uint64_t _requestHTTPAuthorization_CopyPassword(uint64_t a1, char **a2)
{
  char *v3;
  char __s1[16];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  *(_OWORD *)__s1 = 0u;
  v6 = 0u;
  CFObjectGetPropertyCStringSync();
  v3 = strdup(__s1);
  if (v3)
  {
    *a2 = v3;
    return 200;
  }
  else
  {
    APSLogErrorAt();
    return 500;
  }
}

BOOL _requestHTTPAuthorization_IsValidNonce()
{
  return HTTPVerifyTimedNonce() == 0;
}

float _GetFloatValueFromHTTPMessageURL(uint64_t a1, uint64_t a2, int *a3)
{
  int v4;
  int v5;
  float v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11[64];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v9 = 0;
  v10 = 0;
  v8 = 0;
  v7 = 0.0;
  v4 = HTTPMessageGetOrCopyFormVariable();
  if (v4)
  {
    v5 = v4;
    if (v4 != -6727)
      APSLogErrorAt();
  }
  else
  {
    __strlcpy_chk();
    if (sscanf(v11, "%f", &v7) == 1)
    {
      v5 = 0;
    }
    else
    {
      APSLogErrorAt();
      v5 = -6705;
    }
  }
  if (a3)
    *a3 = v5;
  if (v8)
    free(v8);
  return v7;
}

uint64_t _MapReqProcReturnCodeToHTTPReturnCode(int a1)
{
  uint64_t result;
  unsigned int v3;

  result = 400;
  switch(a1)
  {
    case -71954:
    case -71951:
    case -71941:
      result = 451;
      break;
    case -71953:
      result = 472;
      break;
    case -71952:
    case -71931:
      result = 455;
      break;
    case -71950:
    case -71946:
      result = 507;
      break;
    case -71949:
    case -71948:
    case -71947:
      return result;
    case -71945:
      result = 412;
      break;
    case -71944:
      result = 471;
      break;
    case -71943:
      result = 466;
      break;
    case -71942:
      result = 422;
      break;
    case -71940:
      result = 470;
      break;
    case -71939:
      result = 520;
      break;
    case -71938:
      result = 454;
      break;
    case -71937:
      result = 453;
      break;
    case -71936:
      result = 406;
      break;
    case -71935:
      result = 501;
      break;
    case -71934:
      result = 500;
      break;
    case -71933:
      result = 403;
      break;
    case -71932:
      result = 456;
      break;
    default:
      if (a1)
        v3 = 400;
      else
        v3 = 200;
      if (a1 == 204)
        result = 204;
      else
        result = v3;
      break;
  }
  return result;
}

uint64_t _HTTPSetField(uint64_t a1, const __CFString *a2)
{
  const __CFString *TypedValue;
  unsigned int v6;
  char buffer[256];
  uint64_t v8;

  v8 = *MEMORY[0x24BDAC8D0];
  CFStringGetTypeID();
  TypedValue = (const __CFString *)CFDictionaryGetTypedValue();
  v6 = CFStringCopyUTF8CString();
  if (v6)
    goto LABEL_10;
  if (!CFStringGetLength(TypedValue))
  {
    APSLogErrorAt();
    return -6712;
  }
  if (!CFStringGetCString(a2, buffer, 256, 0x8000100u))
  {
    APSLogErrorAt();
    return -6762;
  }
  v6 = HTTPHeader_SetField();
  if (v6)
LABEL_10:
    APSLogErrorAt();
  return v6;
}

void _FPSetup2ResponseCompletionHandler(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t *);
  CFTypeID v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v1 = (_QWORD *)a1[1209];
  v2 = v1[5];
  v3 = (const void *)a1[1210];
  v4 = a1[1211];
  v12 = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0;
  v5 = a1[1212];
  v6 = *(_QWORD *)(v2 + 280);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 32);
  if (!v7 || v7(v6, v5, &v9))
    goto LABEL_13;
  if (!v9 || (v4 & 0xFFFFFFC0) == 0)
  {
LABEL_20:
    APSLogErrorAt();
    if (gLogCategory_AirPlayReceiverServer <= 60
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
LABEL_14:
    if (!v3)
      goto LABEL_18;
    goto LABEL_17;
  }
  if (!v3 || (v8 = CFGetTypeID(v3), v8 != CFDataGetTypeID()))
  {
LABEL_13:
    APSLogErrorAt();
    goto LABEL_14;
  }
  CFDataGetBytePtr((CFDataRef)v3);
  if (NetTransportGCMConfigure())
    goto LABEL_20;
  HTTPConnectionSetTransportDelegate();
  CFObjectSetValue();
  CFObjectSetValue();
  if (*(_QWORD *)(v2 + 200))
  {
    IPaI1oem5iL();
    *(_QWORD *)(v2 + 200) = 0;
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_17:
  CFRelease(v3);
LABEL_18:
  CFRelease(v1);
}

void _HandlePairVerifyCoreUtilsCompletion(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t i;

  v1 = *(_QWORD **)(a1 + 9672);
  v2 = v1[5];
  if (!NetTransportChaCha20Poly1305Configure())
  {
    for (i = 209; i != 241; ++i)
      *(_BYTE *)(v2 + i) = 0;
    do
      *(_BYTE *)(v2 + i++) = 0;
    while (i != 273);
    HTTPConnectionSetTransportDelegate();
    if (gLogCategory_AirPlayReceiverServer > 50
      || gLogCategory_AirPlayReceiverServer == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_9;
    }
LABEL_7:
    LogPrintF();
    goto LABEL_9;
  }
  APSLogErrorAt();
  if (gLogCategory_AirPlayReceiverServer < 61
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    goto LABEL_7;
  }
LABEL_9:
  CFRelease(v1);
}

uint64_t APReceiverRequestProcessorSetProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 72);
  if (v6)
    return v6(a1, a2, a3);
  else
    return 4294954514;
}

void _NotifySessionsSystemInfoChange(uint64_t a1)
{
  __CFArray *v2;
  __CFArray *v3;
  CFTypeRef cf;
  CFTypeRef v5;

  v5 = 0;
  cf = 0;
  v2 = APReceiverSessionManagerCopyAllSessions(*(_QWORD *)(a1 + 216));
  if (v2)
  {
    v3 = v2;
    if (CFArrayGetCount(v2) >= 1)
    {
      if (CFArrayEnsureCreatedAndAppend()
        || APReceiverSystemInfoCopyInfoDict(*(_QWORD *)(a1 + 160), (uint64_t)v5, 0, (uint64_t)&cf))
      {
        APSLogErrorAt();
      }
      else
      {
        CFArrayApplyBlock();
      }
    }
    CFRelease(v3);
    if (v5)
      CFRelease(v5);
    if (cf)
      CFRelease(cf);
  }
}

uint64_t AirPlayReceiverServerCreate(const __CFDictionary *a1, uint64_t *a2)
{
  uint64_t Instance;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  NSObject *v8;
  const __CFAllocator *v9;
  CFMutableDictionaryRef Mutable;
  __CFDictionary *v11;
  __int16 v12;
  int v13;
  const void *Value;
  const void *v15;
  int BooleanIfPresent;
  int v17;
  const char *v18;
  const char *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  int v23;
  int v24;
  const char *v25;
  const char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BOOL4 v32;
  const void *v33;
  const void *v34;
  CFTypeID v35;
  const __CFDictionary *v36;
  const __CFDictionary *v37;
  CFTypeID v38;
  const __CFDictionary *v39;
  const __CFDictionary *v40;
  CFTypeID v41;
  const void *v42;
  const void *v43;
  CFTypeID v44;
  int v45;
  const char *v46;
  int v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 IntWithDefault;
  int v53;
  const char *v54;
  uint64_t *v55;
  uint64_t *v56;
  const char *v57;
  uint64_t *v58;
  const char *v59;
  uint64_t v60;
  const char *v61;
  int v62;
  int v63;
  int v65;
  uint64_t v66;
  CGFloat v67;
  NSObject *v68;
  NSObject *v69;
  NSObject *v70;
  NSObject *v71;
  NSObject *v72;
  NSObject *v73;
  NSObject *v74;
  const char *v75;
  NSObject *v76;
  void *v77;
  void *v78;
  NSObject *v79;
  const __CFAllocator *v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  const CFArrayCallBacks *v85;
  AirPlayReceiverPlatform *v86;
  AirPlayReceiverPlatform *v87;
  int *p_uiErrorNotifyToken;
  int *p_playbackPreventNotifyToken;
  CFMutableSetRef v90;
  CFMutableSetRef v91;
  CFMutableSetRef v92;
  CFMutableSetRef v93;
  int *v94;
  double v95;
  NSObject *var14;
  NSObject *v97;
  uint64_t v98;
  AirPlayControllerServer *v99;
  void *v100;
  uint64_t v101;
  void *v102;
  void *v103;
  __CFDictionary *v104;
  uint64_t v105;
  __CFNotificationCenter *LocalCenter;
  const __CFString *DisconnectNotificationName;
  unsigned __int8 v108;
  AirPlayReceiverMediaRemoteHelper *v109;
  NSObject *v110;
  _DWORD *v111;
  uint64_t v112;
  int v113;
  __CFDictionary *v114;
  int v115;
  CFMutableDictionaryRef v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  uint64_t Int64;
  uint64_t width;
  const char *height;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  int v133;
  BOOL v134;
  int *out_token;
  uint64_t *v136;
  __CFDictionary *v137;
  CFAllocatorRef allocator[2];
  const __CFAllocator *allocatora;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  _QWORD v144[5];
  _QWORD v145[5];
  CGFloat v146;
  uint64_t v147;
  void *v148;
  void *v149;
  uint64_t v150;
  CGFloat v151;
  uint64_t v152;
  void *v153;
  void *v154;
  uint64_t v155;
  CGFloat v156;
  uint64_t v157;
  void *v158;
  void *v159;
  uint64_t v160;
  double v161;
  uint64_t v162;
  void *v163;
  void *v164;
  uint64_t v165;
  CGFloat v166;
  uint64_t v167;
  void (*v168)(uint64_t);
  void *v169;
  uint64_t v170;
  uint64_t v171;
  CGSize size;
  void (*v173)(uint64_t);
  void *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t handler;
  uint64_t v178;
  void *v179;
  void *v180;
  uint64_t v181;

  v140 = 1;
  if (gAirPlayReceiverInitOnce != -1)
    dispatch_once_f(&gAirPlayReceiverInitOnce, 0, (dispatch_function_t)_GlobalInitialize);
  if (gAirPlayReceiverServerInitOnce != -1)
    dispatch_once_f(&gAirPlayReceiverServerInitOnce, 0, (dispatch_function_t)_GetTypeID);
  Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    return 4294960568;
  }
  v5 = Instance;
  *(_OWORD *)(Instance + 16) = 0u;
  v6 = Instance + 16;
  *(_OWORD *)(Instance + 240) = 0u;
  *(_OWORD *)(Instance + 256) = 0u;
  *(_OWORD *)(Instance + 208) = 0u;
  *(_OWORD *)(Instance + 224) = 0u;
  *(_OWORD *)(Instance + 176) = 0u;
  *(_OWORD *)(Instance + 192) = 0u;
  *(_OWORD *)(Instance + 144) = 0u;
  *(_OWORD *)(Instance + 160) = 0u;
  *(_OWORD *)(Instance + 112) = 0u;
  *(_OWORD *)(Instance + 128) = 0u;
  *(_OWORD *)(Instance + 80) = 0u;
  *(_OWORD *)(Instance + 96) = 0u;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  v7 = (int *)(Instance + 32);
  *(_QWORD *)(Instance + 24) = dispatch_queue_create("AirPlayReceiverServerQueue", 0);
  v8 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  *(_QWORD *)(v6 + 72) = dispatch_queue_create("AirPlayReceiverServerHTTPQueue", v8);
  *v7 = -1;
  RandomBytes();
  *(_DWORD *)(v6 + 104) = 0;
  v9 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    v112 = 4294960568;
LABEL_309:
    CFRelease((CFTypeRef)v5);
    return v112;
  }
  v11 = Mutable;
  v132 = (uint64_t *)v6;
  out_token = v7;
  v136 = a2;
  if (a1)
  {
    FigCFDictionaryGetBooleanIfPresent();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    FigCFDictionarySetValueFromKeyInDict();
    if (CFDictionaryGetInt64())
      v12 = 0;
    else
      v12 = 7000;
    *(_WORD *)(v5 + 264) = v12;
    if (APSSettingsGetUInt16IfPresent()
      && gLogCategory_AirPlayReceiverServer <= 50
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      width = *(unsigned __int16 *)(v5 + 264);
      LogPrintF();
    }
    Value = CFDictionaryGetValue(a1, CFSTR("SBufConsumer"));
    *(_QWORD *)(v5 + 224) = Value;
    if (Value)
    {
      CFRetain(Value);
      v13 = 1;
    }
    else
    {
      v13 = 0;
    }
    *(_QWORD *)(v5 + 232) = CFDictionaryGetInt64();
    if (*(_BYTE *)(v5 + 52))
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v13 = 2;
    }
    *(_BYTE *)(v5 + 254) = CFDictionaryGetInt64() != 0;
    v15 = CFDictionaryGetValue(a1, CFSTR("InterfaceName"));
    *(_QWORD *)(v5 + 256) = v15;
    if (v15)
      CFRetain(v15);
    FigCFDictionaryGetBooleanIfPresent();
    FigCFDictionaryGetBooleanIfPresent();
  }
  else
  {
    v13 = 0;
  }
  BooleanIfPresent = APSSettingsGetBooleanIfPresent();
  if (gLogCategory_AirPlayReceiverServer <= 50)
  {
    v17 = BooleanIfPresent;
    if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize())
    {
      v18 = "yes";
      if (*(_BYTE *)(v5 + 64))
        v19 = "yes";
      else
        v19 = "no";
      if (!v17)
        v18 = "no";
      width = (uint64_t)v19;
      height = v18;
      LogPrintF();
    }
  }
  v20 = (const void *)*MEMORY[0x24BDBD270];
  v21 = (const void *)*MEMORY[0x24BDBD268];
  if (*(_BYTE *)(v5 + 64))
    v22 = (const void *)*MEMORY[0x24BDBD270];
  else
    v22 = (const void *)*MEMORY[0x24BDBD268];
  CFDictionarySetValue(v11, CFSTR("UseAltAdvertising"), v22);
  v23 = APSSettingsGetBooleanIfPresent();
  if (gLogCategory_AirPlayReceiverServer <= 50)
  {
    v24 = v23;
    if (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize())
    {
      v25 = "yes";
      if (*(_BYTE *)(v5 + 251))
        v26 = "yes";
      else
        v26 = "no";
      if (!v24)
        v25 = "no";
      width = (uint64_t)v26;
      height = v25;
      LogPrintF();
    }
  }
  CFDictionarySetInt64();
  if (IsAppleTV() || APSIsAPMSpeaker() || CFDictionaryGetInt64())
  {
    v134 = 1;
  }
  else
  {
    Int64 = APSSettingsGetInt64();
    v134 = Int64 != 0;
    if (!Int64)
      v20 = v21;
  }
  CFDictionarySetValue(v11, CFSTR("SupportsRemoteControl"), v20);
  if (APReceiverSystemInfoGetTypeID_once != -1)
    dispatch_once(&APReceiverSystemInfoGetTypeID_once, &__block_literal_global_1780);
  v27 = _CFRuntimeCreateInstance();
  bzero((void *)(v27 + 16), 0x2E8uLL);
  *(_QWORD *)(v27 + 16) = dispatch_queue_create("APReceiverSystemInfoQueue", 0);
  *(_QWORD *)(v27 + 576) = dispatch_queue_create("APReceiverSystemInfoDisplayQueue", 0);
  v28 = *MEMORY[0x24BDBF148];
  *(_BYTE *)(v27 + 680) = 0;
  *(_QWORD *)(v27 + 672) = -4294967236;
  *(_OWORD *)(v27 + 592) = v28;
  *(_OWORD *)(v27 + 608) = v28;
  *(_OWORD *)allocator = v28;
  *(_OWORD *)(v27 + 624) = v28;
  *(_QWORD *)(v27 + 640) = 0;
  *(_QWORD *)(v27 + 120) = 0;
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    width = (uint64_t)v11;
    LogPrintF();
  }
  *(_DWORD *)(v27 + 568) = CFDictionaryGetInt64();
  v29 = CFDictionaryGetInt64();
  *(_BYTE *)(v27 + 312) = CFDictionaryGetInt64() != 0;
  *(_QWORD *)(v27 + 400) = CFDictionaryCopyCString();
  v30 = CFDictionaryCopyCString();
  if (v30)
  {
    v31 = (void *)v30;
    v32 = TextToHardwareAddress() == 0;
    free(v31);
  }
  else
  {
    v32 = 0;
  }
  v33 = CFDictionaryGetValue(v11, CFSTR("FeatureMask"));
  if (v33)
  {
    v34 = v33;
    v35 = CFGetTypeID(v33);
    if (v35 == CFDataGetTypeID())
      *(_QWORD *)(v27 + 752) = CFRetain(v34);
  }
  v36 = (const __CFDictionary *)CFDictionaryGetValue(v11, CFSTR("DisplaySizeOverride"));
  if (v36)
  {
    v37 = v36;
    v38 = CFGetTypeID(v36);
    if (v38 == CFDictionaryGetTypeID())
    {
      size = *(CGSize *)allocator;
      CGSizeMakeWithDictionaryRepresentation(v37, &size);
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        width = (int)size.width;
        height = (const char *)(int)size.height;
        LogPrintF();
      }
      *(CGSize *)(v27 + 608) = size;
    }
  }
  v39 = (const __CFDictionary *)CFDictionaryGetValue(v11, CFSTR("DisplaySizeMaxOverride"));
  if (v39)
  {
    v40 = v39;
    v41 = CFGetTypeID(v39);
    if (v41 == CFDictionaryGetTypeID())
    {
      size = *(CGSize *)allocator;
      CGSizeMakeWithDictionaryRepresentation(v40, &size);
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        width = (int)size.width;
        height = (const char *)(int)size.height;
        LogPrintF();
      }
      *(CGSize *)(v27 + 624) = size;
    }
  }
  v42 = CFDictionaryGetValue(v11, CFSTR("DisplayHDRModeOverride"));
  if (v42)
  {
    v43 = v42;
    v44 = CFGetTypeID(v42);
    if (v44 == CFStringGetTypeID())
    {
      if (gLogCategory_APReceiverSystemInfo <= 50
        && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
      {
        width = (uint64_t)v43;
        LogPrintF();
      }
      *(_QWORD *)(v27 + 640) = CFRetain(v43);
    }
  }
  *(_BYTE *)(v27 + 424) = CFDictionaryGetInt64() != 0;
  if (!v32)
  {
    v47 = 9;
    while (!APSGetDeviceID())
    {
      sleep(1u);
      if (!--v47)
      {
        if (gLogCategory_APReceiverSystemInfo <= 90
          && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
        {
          width = 0;
          LogPrintF();
        }
        break;
      }
    }
  }
  *(_WORD *)(v27 + 110) = 0;
  *(_QWORD *)(v27 + 102) = 0;
  *(_DWORD *)(v27 + 112) = *(_DWORD *)(v27 + 96);
  *(_WORD *)(v27 + 116) = *(_WORD *)(v27 + 100);
  *(_BYTE *)(v27 + 128) = APSSettingsIsFeatureEnabledInDomain();
  *(_BYTE *)(v27 + 129) = APSMultiPrimariesEnabled();
  *(_BYTE *)(v27 + 130) = APSNowPlayingSessionDataSourceEnabled();
  if (gLogCategory_APReceiverSystemInfo <= 50
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    v45 = APSIsProximityReceiverEnabled();
    v46 = "";
    if (!v45)
      v46 = " not";
    width = (uint64_t)v46;
    LogPrintF();
  }
  *(_QWORD *)(v27 + 120) = MGCopyAnswer();
  if (!APSIsValidDeviceEnclosureColorString())
  {
    if (gLogCategory_APReceiverSystemInfo <= 60
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      width = *(_QWORD *)(v27 + 120);
      LogPrintF();
    }
    v48 = *(const void **)(v27 + 120);
    if (v48)
    {
      CFRelease(v48);
      *(_QWORD *)(v27 + 120) = 0;
    }
  }
  v49 = sysInfo_copyPairingIdentity(0);
  v141 = v49;
  if ((_DWORD)v49)
  {
    if (gLogCategory_APReceiverSystemInfo > 50)
      goto LABEL_113;
    if (gLogCategory_APReceiverSystemInfo != -1)
      goto LABEL_110;
    if (_LogCategory_Initialize())
    {
      v49 = v141;
LABEL_110:
      width = v49;
      LogPrintF();
    }
  }
  else
  {
    *(_QWORD *)(v27 + 464) = CFStringCreateWithCString(v9, 0, 0x8000100u);
    free(0);
  }
LABEL_113:
  v50 = sysInfo_copyPairingIdentity(1);
  v142 = v50;
  if ((_DWORD)v50)
  {
    if (gLogCategory_APReceiverSystemInfo <= 50)
    {
      if (gLogCategory_APReceiverSystemInfo == -1)
      {
        if (!_LogCategory_Initialize())
          goto LABEL_119;
        v50 = v142;
      }
      width = v50;
      LogPrintF();
    }
  }
  else
  {
    *(_QWORD *)(v27 + 456) = CFStringCreateWithCString(v9, 0, 0x8000100u);
    free(0);
  }
LABEL_119:
  v51 = APSPowerAssertionCreate();
  *(_QWORD *)(v27 + 736) = v51;
  if (!v51
    && gLogCategory_APReceiverSystemInfo <= 90
    && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v137 = v11;
  allocatora = v9;
  v133 = v13;
  if ((*(_DWORD *)(v27 + 568) - 1) <= 1)
  {
    *(_BYTE *)(v27 + 64) = 1;
    *(_BYTE *)(v27 + 80) = 1;
    *(_BYTE *)(v27 + 310) = 0;
    *(_QWORD *)(v27 + 316) = 0;
    *(_QWORD *)(v27 + 240) = 0;
    *(_DWORD *)(v27 + 248) = 0;
    *(_QWORD *)(v27 + 176) = 0;
    *(_QWORD *)(v27 + 192) = 0;
    *(_BYTE *)(v27 + 184) = 0;
    *(_QWORD *)(v27 + 208) = 0;
    *(_BYTE *)(v27 + 308) = 0;
    *(_QWORD *)(v27 + 256) = 0;
    *(_QWORD *)(v27 + 264) = 0;
    *(_BYTE *)(v27 + 272) = 0;
    *(_QWORD *)(v27 + 288) = 0;
    *(_QWORD *)(v27 + 296) = 0;
    *(_QWORD *)(v27 + 280) = 0;
    *(_BYTE *)(v27 + 304) = 0;
    *(_BYTE *)(v27 + 311) = 1;
    *(_BYTE *)(v27 + 408) = APSIsAPMSpeaker() == 0;
    *(_BYTE *)(v27 + 410) = 0;
    *(_QWORD *)(v27 + 416) = 0;
    *(_WORD *)(v27 + 432) = 256;
    *(_WORD *)(v27 + 480) = 0;
    *(_BYTE *)(v27 + 472) = 0;
    *(_DWORD *)(v27 + 428) = 1;
    *(_BYTE *)(v27 + 560) = 0;
    *(_DWORD *)(v27 + 564) = 30;
    goto LABEL_177;
  }
  APSSettingsSynchronize();
  IntWithDefault = APSSettingsGetIntWithDefault();
  *(_BYTE *)(v27 + 64) = IntWithDefault;
  if (gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo == -1)
    {
      if (!_LogCategory_Initialize())
        goto LABEL_134;
      v53 = *(unsigned __int8 *)(v27 + 64);
    }
    else
    {
      v53 = IntWithDefault;
    }
    if (v53)
      v54 = "yes";
    else
      v54 = "no";
    width = (uint64_t)v54;
    LogPrintF();
  }
LABEL_134:
  LODWORD(size.width) = APSGetAccessControlConfig();
  if (LODWORD(size.width))
  {
    *(_QWORD *)(v27 + 316) = 0;
    LODWORD(size.width) = 0;
  }
  *(_BYTE *)(v27 + 80) = APSSettingsGetInt64() != 0;
  *(_BYTE *)(v27 + 310) = APSSettingsGetInt64() != 0;
  v55 = (uint64_t *)(v27 + 256);
  v56 = (uint64_t *)(v27 + 288);
  APSCopyPersistentGroupInfo();
  if (*(_QWORD *)(v27 + 256))
  {
    *(_BYTE *)(v27 + 306) = IsAppleTV();
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      if (*(_BYTE *)(v27 + 272))
        v57 = "yes";
      else
        v57 = "no";
      v130 = *(_QWORD *)(v27 + 280);
      v131 = *v56;
      v128 = *(_QWORD *)(v27 + 296);
      v129 = *(_QWORD *)(v27 + 264);
      v126 = *(_QWORD *)(v27 + 240);
      v127 = *(unsigned int *)(v27 + 248);
      width = *v55;
      height = v57;
      LogPrintF();
    }
  }
  v58 = (uint64_t *)(v27 + 176);
  APSCopyTightSyncInfo();
  if (!*(_QWORD *)(v27 + 176))
    goto LABEL_153;
  if (!*v55)
    *(_BYTE *)(v27 + 306) = APSSettingsGetInt64() != 0;
  if (gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize())
    {
      v59 = "yes";
      if (!*(_BYTE *)(v27 + 184))
        v59 = "no";
      v127 = *(_QWORD *)(v27 + 192);
      v128 = *(_QWORD *)(v27 + 208);
      height = v59;
      v126 = *(_QWORD *)(v27 + 200);
      width = *v58;
      LogPrintF();
    }
LABEL_153:
    if (gLogCategory_APReceiverSystemInfo <= 50
      && (gLogCategory_APReceiverSystemInfo != -1 || _LogCategory_Initialize()))
    {
      if (*v55 || (v60 = *v58, v56 = (uint64_t *)(v27 + 208), *v58))
        v60 = *v56;
      if (*(_BYTE *)(v27 + 306))
        v61 = "yes";
      else
        v61 = "no";
      width = v60;
      height = v61;
      LogPrintF();
    }
  }
  *(_BYTE *)(v27 + 304) = APSSettingsGetInt64() != 0;
  *(_BYTE *)(v27 + 308) = APSSettingsGetInt64() != 0;
  *(_BYTE *)(v27 + 311) = APSSettingsGetIntWithDefault();
  *(_BYTE *)(v27 + 408) = APSGetP2PAllow();
  *(_BYTE *)(v27 + 409) = APSSettingsGetIntWithDefault();
  *(_BYTE *)(v27 + 410) = APSSettingsGetIntWithDefault();
  *(_QWORD *)(v27 + 416) = APSSettingsCopyValue();
  *(_BYTE *)(v27 + 432) = APSSettingsGetInt64() != 0;
  APSIsAPMSpeaker();
  *(_BYTE *)(v27 + 433) = APSSettingsGetIntWithDefault();
  *(_BYTE *)(v27 + 480) = APSSettingsGetInt64() != 0;
  *(_BYTE *)(v27 + 472) = 0;
  *(_BYTE *)(v27 + 481) = 0;
  APSSettingsGetCString();
  if (*(_BYTE *)(v27 + 480))
  {
    v62 = 3;
  }
  else if (*(_BYTE *)(v27 + 481))
  {
    v62 = 2;
  }
  else
  {
    if (!*(_BYTE *)(v27 + 433))
    {
      *(_DWORD *)(v27 + 428) = 0;
      goto LABEL_170;
    }
    v62 = 1;
  }
  *(_DWORD *)(v27 + 428) = v62;
LABEL_170:
  *(_BYTE *)(v27 + 560) = APSSettingsGetInt64() != 0;
  v63 = APSSettingsGetInt64();
  if (v63 >= 1 && LODWORD(size.width) == 0)
    v65 = v63;
  else
    v65 = 30;
  *(_DWORD *)(v27 + 564) = v65;
  *(_BYTE *)(v27 + 712) = APSSettingsGetInt64() != 0;
LABEL_177:
  *(_QWORD *)(v27 + 88) = 0;
  v66 = APSCopyBootUUID();
  v143 = v66;
  if ((_DWORD)v66 && gLogCategory_APReceiverSystemInfo <= 50)
  {
    if (gLogCategory_APReceiverSystemInfo != -1)
    {
LABEL_180:
      width = v66;
      LogPrintF();
      goto LABEL_182;
    }
    if (_LogCategory_Initialize())
    {
      v66 = v143;
      goto LABEL_180;
    }
  }
LABEL_182:
  if (IsAppleTV())
    *(_DWORD *)(v27 + 684) = 1;
  *(_QWORD *)(v27 + 24) = -1;
  *(_QWORD *)(v27 + 40) = -1;
  *(_DWORD *)(v27 + 48) = -1;
  *(_QWORD *)(v27 + 32) = -1;
  v67 = MEMORY[0x24BDAC760];
  if (!*(_DWORD *)(v27 + 568))
  {
    if (IsAppleTV() || APSIsAPMSpeaker())
    {
      *(_QWORD *)(v27 + 728) = -[BluetoothAddressMonitor initWithSystemInfo:queue:]([BluetoothAddressMonitor alloc], "initWithSystemInfo:queue:", v27, *(_QWORD *)(v27 + 16));
      v68 = *(NSObject **)(v27 + 16);
      handler = MEMORY[0x24BDAC760];
      v178 = 3221225472;
      v179 = __sysInfo_registerForNotificationsAsNeeded_block_invoke;
      v180 = &__block_descriptor_40_e8_v12__0i8l;
      v181 = v27;
      notify_register_dispatch("kAirPlayWHANotification_BreakAwayFromCurrentGroup", (int *)(v27 + 36), v68, &handler);
    }
    v69 = *(NSObject **)(v27 + 16);
    v67 = MEMORY[0x24BDAC760];
    v161 = MEMORY[0x24BDAC760];
    v162 = 3221225472;
    v163 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_2;
    v164 = &__block_descriptor_40_e8_v12__0i8l;
    v165 = v27;
    notify_register_dispatch("com.apple.airplay.cloudConnectivity", (int *)(v27 + 24), v69, &v161);
    v70 = *(NSObject **)(v27 + 16);
    v156 = v67;
    v157 = 3221225472;
    v158 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_3;
    v159 = &__block_descriptor_40_e8_v12__0i8l;
    v160 = v27;
    notify_register_dispatch("com.apple.airplay.conferenceRoomMode", (int *)(v27 + 28), v70, &v156);
    v71 = *(NSObject **)(v27 + 16);
    size.width = v67;
    *(_QWORD *)&size.height = 3221225472;
    v173 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_4;
    v174 = &__block_descriptor_41_e8_v12__0i8l;
    v175 = v27;
    LOBYTE(v176) = v29 == 0;
    notify_register_dispatch("com.apple.airplay.prefsChanged", (int *)(v27 + 40), v71, &size);
    v72 = *(NSObject **)(v27 + 16);
    v151 = v67;
    v152 = 3221225472;
    v153 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_5;
    v154 = &__block_descriptor_40_e8_v12__0i8l;
    v155 = v27;
    notify_register_dispatch("com.apple.airplay.psgInfoChanged", (int *)(v27 + 44), v72, &v151);
    if (!IsAppleTV() && APSIsAPMSpeaker())
    {
      v73 = *(NSObject **)(v27 + 16);
      v146 = v67;
      v147 = 3221225472;
      v148 = __sysInfo_registerForNotificationsAsNeeded_block_invoke_6;
      v149 = &__block_descriptor_40_e8_v12__0i8l;
      v150 = v27;
      notify_register_dispatch("kAirPlayWHANotification_GroupMemberInterruptedByPreWHASender", (int *)(v27 + 48), v73, &v146);
    }
    if (IsAppleTV())
    {
      v74 = *(NSObject **)(v27 + 576);
      *(CGFloat *)v145 = v67;
      v145[1] = 3221225472;
      v145[2] = __sysInfo_registerForNotificationsAsNeeded_block_invoke_7;
      v145[3] = &__block_descriptor_40_e8_v12__0i8l;
      v145[4] = v27;
      notify_register_dispatch("com.apple.TVSPowerManager.deviceWillChangeSleepStateNotification", (int *)(v27 + 32), v74, v145);
    }
    v75 = (const char *)objc_msgSend((id)*MEMORY[0x24BE63740], "UTF8String", width, height, v126, v127, v128, v129, v130, v131);
    v76 = *(NSObject **)(v27 + 16);
    *(CGFloat *)v144 = v67;
    v144[1] = 3221225472;
    v144[2] = __sysInfo_registerForNotificationsAsNeeded_block_invoke_8;
    v144[3] = &__block_descriptor_40_e8_v12__0i8l;
    v144[4] = v27;
    notify_register_dispatch(v75, (int *)(v27 + 40), v76, v144);
    if (!*(_QWORD *)(v27 + 328))
    {
      v77 = (void *)objc_opt_new();
      if (v77)
      {
        v78 = v77;
        objc_msgSend(v77, "setDispatchQueue:", *(_QWORD *)(v27 + 16));
        v166 = v67;
        v167 = 3221225472;
        v168 = __sysInfo_deviceNameChangeListenerStart_block_invoke;
        v169 = &__block_descriptor_40_e5_v8__0l;
        v170 = v27;
        objc_msgSend(v78, "setSystemNameChangedHandler:", &v166);
        objc_msgSend(v78, "activateWithCompletion:", 0);
        *(_QWORD *)(v27 + 328) = v78;
      }
      else
      {
        APSLogErrorAt();
      }
    }
  }
  v79 = *(NSObject **)(v27 + 16);
  size.width = v67;
  *(_QWORD *)&size.height = 3221225472;
  v173 = __APReceiverSystemInfoCreate_block_invoke;
  v174 = &__block_descriptor_40_e5_v8__0l;
  v175 = v27;
  dispatch_sync(v79, &size);
  *(_QWORD *)(v5 + 160) = v27;
  if (*(_QWORD *)(v5 + 224))
  {
    *(_BYTE *)(v5 + 253) = 1;
    v80 = v9;
  }
  else
  {
    *(_WORD *)(v5 + 248) = 257;
    v80 = v9;
    if (*(_QWORD *)(v5 + 232))
    {
      v81 = v133;
      if (!IsAppleTV())
        APSIsAPMSpeaker();
      v140 = APSSettingsGetIntWithDefault();
      FigCFDictionaryGetIntIfPresent();
    }
    else
    {
      v81 = v133;
      if (APReceiverUIControllerGetShared_once != -1)
        dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_2783);
    }
    if (v81 != 2)
    {
      *(_BYTE *)(v5 + 250) = 1;
      *(_BYTE *)(v5 + 252) = *(unsigned __int16 *)(v5 + 264) == 7000;
    }
  }
  if (APReceiverSessionManagerGetTypeID_once != -1)
    dispatch_once(&APReceiverSessionManagerGetTypeID_once, &__block_literal_global_6166);
  v82 = _CFRuntimeCreateInstance();
  if (v82)
  {
    v83 = v82;
    *(_DWORD *)(v82 + 16) = -1;
    v84 = v82 + 16;
    *(_OWORD *)(v82 + 68) = 0u;
    *(_DWORD *)(v82 + 148) = 0;
    *(_OWORD *)(v82 + 132) = 0u;
    *(_OWORD *)(v82 + 116) = 0u;
    *(_OWORD *)(v82 + 100) = 0u;
    *(_OWORD *)(v82 + 84) = 0u;
    *(_OWORD *)(v82 + 52) = 0u;
    *(_OWORD *)(v82 + 36) = 0u;
    *(_OWORD *)(v82 + 20) = 0u;
    *(_DWORD *)(v82 + 72) = v140;
    v85 = (const CFArrayCallBacks *)MEMORY[0x24BDBD690];
    *(_QWORD *)(v82 + 64) = CFArrayCreateMutable(v80, 0, MEMORY[0x24BDBD690]);
    *(_QWORD *)(v84 + 64) = CFArrayCreateMutable(0, 0, v85);
    *(_QWORD *)(v84 + 8) = v5;
    *(_BYTE *)(v84 + 24) = v134;
    if (pthread_mutex_init((pthread_mutex_t *)(v84 + 72), 0))
    {
      APSLogErrorAt();
      CFRelease((CFTypeRef)v83);
    }
    else
    {
      if (IsAppleTV() || APSIsAPMSpeaker())
      {
        notify_register_check("com.apple.airplay.active", (int *)v84);
        notify_set_state(*(_DWORD *)(v83 + 16), *(_QWORD *)(v83 + 32));
        notify_post("com.apple.airplay.active");
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterAddListener();
        sessionManager_handleSenderSessionStateChange(v83, 0);
      }
      if (gLogCategory_APReceiverSessionManager <= 10
        && (gLogCategory_APReceiverSessionManager != -1 || _LogCategory_Initialize()))
      {
        width = v83;
        LogPrintF();
      }
      *(_QWORD *)(v5 + 216) = v83;
    }
  }
  else
  {
    APSLogErrorAt();
  }
  v86 = objc_alloc_init(AirPlayReceiverPlatform);
  if (!v86)
  {
    v104 = 0;
    goto LABEL_312;
  }
  v87 = v86;
  v86->_server = (AirPlayReceiverServerPrivate *)v5;
  *(_QWORD *)(v5 + 16) = v86;
  *(_QWORD *)&v86->_uiErrorNotifyToken = -1;
  p_uiErrorNotifyToken = &v86->_uiErrorNotifyToken;
  *(_QWORD *)&v86->_playbackPreventNotifyToken = -1;
  p_playbackPreventNotifyToken = &v86->_playbackPreventNotifyToken;
  getpid();
  proc_set_wakemon_params();
  v90 = CFSetCreateMutable(v80, 0, MEMORY[0x24BDBD6B8]);
  *((_QWORD *)p_uiErrorNotifyToken - 13) = v90;
  if (!v90)
  {
    v104 = 0;
    goto LABEL_312;
  }
  v91 = CFSetCreateMutable(v80, 0, MEMORY[0x24BDBD6B8]);
  v87->_state.mediaVideoSessions = v91;
  if (!v91)
  {
    v104 = 0;
    goto LABEL_312;
  }
  v92 = CFSetCreateMutable(v80, 0, MEMORY[0x24BDBD6B8]);
  v87->_state.screenSessions = v92;
  if (!v92)
  {
    v104 = 0;
    goto LABEL_312;
  }
  v93 = CFSetCreateMutable(v80, 0, MEMORY[0x24BDBD6B8]);
  v87->_state.auxAudioSessions = v93;
  if (!v93)
  {
    v104 = 0;
    goto LABEL_312;
  }
  v94 = p_uiErrorNotifyToken + 3;
  if (*(_BYTE *)(v5 + 250))
    notify_register_check("com.apple.airplay.dacp.error", p_uiErrorNotifyToken);
  notify_register_dispatch("com.apple.ManagedConfiguration.profileListChanged", &v87->_managedDefaultsChangedNotificationToken, MEMORY[0x24BDAC9B8], &__block_literal_global_1328);
  AirPlayManagedDefaultsLogging_HandleReceiverManagedDefaultsLoggingChanged();
  v95 = MEMORY[0x24BDAC760];
  if (*(_BYTE *)(v5 + 250))
  {
    var14 = v87->_server->var14;
    *(_QWORD *)&size.width = MEMORY[0x24BDAC760];
    *(_QWORD *)&size.height = 3221225472;
    v173 = __AirPlayReceiverServerPlatformInitialize_block_invoke_2;
    v174 = &unk_24E21E740;
    v175 = (uint64_t)v87;
    v176 = v5;
    notify_register_dispatch("com.apple.airplay.playbackAllow", p_uiErrorNotifyToken + 1, var14, &size);
    v97 = v87->_server->var14;
    v166 = v95;
    v167 = 3221225472;
    v168 = __AirPlayReceiverServerPlatformInitialize_block_invoke_3;
    v169 = &unk_24E21E740;
    v170 = (uint64_t)v87;
    v171 = v5;
    notify_register_dispatch("com.apple.airplay.playbackPrevent", p_playbackPreventNotifyToken, v97, &v166);
  }
  v161 = v95;
  v162 = 3221225472;
  v163 = __AirPlayReceiverServerPlatformInitialize_block_invoke_4;
  v164 = &__block_descriptor_40_e8_v12__0i8l;
  v165 = v5;
  v98 = MEMORY[0x24BDAC9B8];
  notify_register_dispatch("com.apple.airplay.prefsChanged", v94, MEMORY[0x24BDAC9B8], &v161);
  v99 = objc_alloc_init(AirPlayControllerServer);
  v87->_controllerServer = v99;
  -[AirPlayControllerServer setDispatchQueue:](v99, "setDispatchQueue:", v98);
  v156 = v95;
  v157 = 3221225472;
  v158 = __AirPlayReceiverServerPlatformInitialize_block_invoke_5;
  v159 = &__block_descriptor_40_e28_i40__0__NSString_8_16_24__32l;
  v160 = v5;
  -[AirPlayControllerServer setPerformCommandBlock:](v87->_controllerServer, "setPerformCommandBlock:", &v156);
  v151 = v95;
  v152 = 3221225472;
  v153 = __AirPlayReceiverServerPlatformInitialize_block_invoke_6;
  v154 = &__block_descriptor_40_e25__32__0__NSString_8_16_i24l;
  v155 = v5;
  -[AirPlayControllerServer setCopyPropertyBlock:](v87->_controllerServer, "setCopyPropertyBlock:", &v151);
  v146 = v95;
  v147 = 3221225472;
  v148 = __AirPlayReceiverServerPlatformInitialize_block_invoke_7;
  v149 = &__block_descriptor_40_e24_i32__0__NSString_8_16_24l;
  v150 = v5;
  -[AirPlayControllerServer setSetPropertyBlock:](v87->_controllerServer, "setSetPropertyBlock:", &v146);
  -[AirPlayControllerServer startWithXPCName:](v87->_controllerServer, "startWithXPCName:", CFSTR("com.apple.airplay.receiver.xpc"));
  -[APAVAudioSessionManager setUpSessionWithIsMixable:](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "setUpSessionWithIsMixable:", v87->_server->var40 != 0, width);
  v100 = (void *)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  v101 = *MEMORY[0x24BDB15D8];
  objc_msgSend(v100, "addObserver:selector:name:object:", v87, sel__handleAVAudioSessionInterruption_, *MEMORY[0x24BDB15D8], -[APAVAudioSessionManager session](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "session"));
  v102 = (void *)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  objc_msgSend(v102, "addObserver:selector:name:object:", v87, sel__handleAVAudioSessionServicesReset_, *MEMORY[0x24BDB1610], -[APAVAudioSessionManager session](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "session"));
  v103 = (void *)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter");
  objc_msgSend(v103, "addObserver:selector:name:object:", v87, sel__handleAVAudioSessionServicesLost_, *MEMORY[0x24BDB1608], -[APAVAudioSessionManager session](+[APAVAudioSessionManager mediaSessionManager](APAVAudioSessionManager, "mediaSessionManager"), "session"));
  -[APAVAudioSessionManager setUpSessionWithIsMixable:](+[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager"), "setUpSessionWithIsMixable:", 1);
  objc_msgSend((id)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter"), "addObserver:selector:name:object:", v87, sel__handleAVAudioSessionInterruption_, v101, -[APAVAudioSessionManager session](+[APAVAudioSessionManager ambientSessionManager](APAVAudioSessionManager, "ambientSessionManager"), "session"));
  v104 = CFDictionaryCreateMutable(v9, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  CFDictionarySetValue(v104, (const void *)*MEMORY[0x24BE03938], CFSTR("com.apple.airplay.receiver.mediaremote.services"));
  gAPReceiverMediaRemoteService_0 = (uint64_t)CFRetain((CFTypeRef)v5);
  if (APSXPCServerStart())
  {
    APSLogErrorAt();
    v105 = MEMORY[0x24BDAC760];
  }
  else
  {
    gAPReceiverMediaRemoteService_1 = (uint64_t)CFDictionaryCreateMutable(v9, 0, MEMORY[0x24BDBD6A0], 0);
    v105 = MEMORY[0x24BDAC760];
    if (!gAPReceiverMediaRemoteService_1
      || (gAPReceiverMediaRemoteService_2 = 0, (gAPReceiverMediaRemoteService_3 = FigSimpleMutexCreate()) == 0)
      || APSXPCServerAddCommandHandler()
      || APSXPCServerAddCommandHandler()
      || (APSXPCServerAddCommandHandler(), APSXPCServerAddCommandHandler()))
    {
      APSLogErrorAt();
    }
    else
    {
      LocalCenter = CFNotificationCenterGetLocalCenter();
      DisconnectNotificationName = (const __CFString *)APSXPCServerGetDisconnectNotificationName();
      CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)aprmrc_handleClientDeath, DisconnectNotificationName, 0, CFNotificationSuspensionBehaviorDeliverImmediately);
    }
  }
  _NotifyIsPlayingAmbientAudio(0);
  -[AirPlayReceiverPlatform _registerAVSystemControllerNotifications](v87, "_registerAVSystemControllerNotifications");
  -[AirPlayReceiverPlatform _fetchInitialStates](v87, "_fetchInitialStates");
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    APSNowPlayingSessionDataSourceEnabled();
    LogPrintF();
  }
  v108 = APSSettingsGetIntWithDefault();
  v87->_useMediaRemotePerPlayerAPI = v108;
  if (!v108)
  {
    v109 = -[AirPlayReceiverMediaRemoteHelper initWithPlayerID:withSystemInfo:withReceiverServer:]([AirPlayReceiverMediaRemoteHelper alloc], "initWithPlayerID:withSystemInfo:withReceiverServer:", 0, v87->_server->var25);
    v87->_mediaRemoteHelper = v109;
    if (v109)
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x24BDD16D0], "defaultCenter"), "addObserver:selector:name:object:", v87, sel__handleNowPlayingAppStartedPlaying_, CFSTR("APReceiverMediaRemoteHelperNowPlayingAppStartedPlayingNotification"), v87->_mediaRemoteHelper);
      goto LABEL_246;
    }
LABEL_312:
    APSLogErrorAt();
    v114 = v137;
    if (gLogCategory_AirPlayReceiverPlatform <= 90
      && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    AirPlayReceiverServerPlatformFinalize(*v132);
    v113 = 0;
    v112 = 4294960568;
    v111 = (_DWORD *)&unk_2553CC000;
    if (v104)
      goto LABEL_249;
    goto LABEL_250;
  }
  if (gLogCategory_AirPlayReceiverPlatform <= 50
    && (gLogCategory_AirPlayReceiverPlatform != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_246:
  v110 = dispatch_queue_create("AirPlayReceiverServerWiFiDELoadQueue", 0);
  v111 = &unk_2553CC000;
  if (v110)
  {
    CFRetain(v87->_server);
    handler = v105;
    v178 = 3221225472;
    v179 = ___LoadWiFiDEAsync_block_invoke;
    v180 = &unk_24E21FC00;
    v181 = (uint64_t)v87;
    dispatch_async(v110, &handler);
  }
  dispatch_release(v110);
  v112 = 0;
  v113 = 1;
  v114 = v137;
  if (v104)
LABEL_249:
    CFRelease(v104);
LABEL_250:
  if (!v113)
  {
    APSLogErrorAt();
    CFRelease(v114);
    goto LABEL_309;
  }
  notify_register_check("com.apple.airplay.advertisingDidChange", out_token);
  gAirPlayReceiverServer = v5;
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  CMNotificationCenterAddListener();
  if (APSIsAPMSpeaker())
  {
    CMNotificationCenterAddListener();
    CMNotificationCenterAddListener();
  }
  *(_DWORD *)(v5 + 144) = 90;
  *(_QWORD *)(v5 + 152) = SecondsToUpTicks();
  v115 = MEMORY[0x2207A9AA0]();
  if (!IsAppleTV() && !APSIsAPMSpeaker())
  {
    v116 = 0;
    goto LABEL_274;
  }
  if (v115)
  {
    v116 = CFDictionaryCreateMutable(allocatora, 1, 0, 0);
    FigCFDictionarySetValue();
    if (APSXPCServerStart())
    {
      v117 = v111[970];
      if (v117 <= 90 && (v117 != -1 || _LogCategory_Initialize()))
        LogPrintF();
    }
  }
  else
  {
    v116 = 0;
  }
  if (IsAppleTV())
    APSXPCClientAddEventHandler();
  APSXPCClientAddEventHandler();
  if (APSXPCClientSendCommandCreatingReply())
  {
    v118 = v111[970];
    if (v118 <= 90 && (v118 != -1 || _LogCategory_Initialize()))
      LogPrintF();
  }
  if (!v115)
  {
    CMNotificationCenterGetDefaultLocalCenter();
    APSXPCServerGetDisconnectNotificationName();
    CMNotificationCenterAddListener();
    goto LABEL_274;
  }
  if (!APSXPCServerAddCommandHandler())
  {
LABEL_274:
    v120 = v111[970];
    if (v120 <= 50 && (v120 != -1 || _LogCategory_Initialize()))
      LogPrintF();
    goto LABEL_278;
  }
  v119 = v111[970];
  if (v119 <= 90)
  {
    if (v119 != -1 || _LogCategory_Initialize())
      LogPrintF();
    goto LABEL_274;
  }
LABEL_278:
  if (v116)
    CFRelease(v116);
  CFRetain((CFTypeRef)v5);
  dispatch_async_f(MEMORY[0x24BDAC9B8], (void *)v5, (dispatch_function_t)_HandleDenyInterruptionsStatusChanged);
  if (IsAppleInternalBuild())
  {
    DebugIPC_EnsureInitialized();
    v121 = v111[970];
    if (v121 <= 50 && (v121 != -1 || _LogCategory_Initialize()))
      LogPrintF();
  }
  *v136 = v5;
  CFRelease(v114);
  return 0;
}

uint64_t _GlobalInitialize()
{
  gAirPlayTransaction = os_transaction_create();
  signal(13, (void (__cdecl *)(int))1);
  LogSetAppID();
  if (IsAppleInternalBuild())
    LogControl();
  return LogControl();
}

void _handleAPReceiverServicesEvents(const __CFString *cf1, const __CFDictionary *a2)
{
  _QWORD *v2;
  _QWORD *v5;
  NSObject *v6;
  void (*Value)(uint64_t);
  CFTypeRef v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  void *v11;
  _QWORD *v12;
  const __CFDictionary *v13;

  v2 = (_QWORD *)gAirPlayReceiverServer;
  if (gAirPlayReceiverServer)
  {
    if (cf1 == CFSTR("nonPersistentReceiverSessionStartedOnHTSecondary"))
      goto LABEL_20;
    if (!cf1)
      return;
    if (CFEqual(cf1, CFSTR("nonPersistentReceiverSessionStartedOnHTSecondary")))
    {
LABEL_20:
      if (APSIsATVInHTGroup())
      {
        v9 = 0;
        v10 = 0;
        v8 = CFRetain(v2);
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        if (a2)
        {
          Value = (void (*)(uint64_t))CFDictionaryGetValue(a2, CFSTR("HijackID"));
          v10 = Value;
          if (Value)
            CFRetain(Value);
          LODWORD(v9) = CFDictionaryGetInt64();
        }
        APSDispatchAsyncFHelper();
      }
    }
    else if (cf1 == CFSTR("LocalSenderStateChanged") || CFEqual(cf1, CFSTR("LocalSenderStateChanged")))
    {
      v5 = (_QWORD *)v2[20];
      CFRetain(a2);
      CFRetain(v5);
      v6 = v5[2];
      v8 = (CFTypeRef)MEMORY[0x24BDAC760];
      v9 = 3221225472;
      v10 = __APReceiverSystemInfoHandleLocalSenderStateChanged_block_invoke;
      v11 = &__block_descriptor_48_e5_v8__0l;
      v12 = v5;
      v13 = a2;
      dispatch_async(v6, &v8);
    }
  }
}

uint64_t _handleSenderProcessDidLaunch()
{
  _QWORD *v0;
  uint64_t v1;

  if (gAirPlayReceiverServer && (v0 = *(_QWORD **)(gAirPlayReceiverServer + 160)) != 0)
  {
    APReceiverSystemInfoHandleAPServicesReset(v0);
    v1 = 0;
  }
  else
  {
    v1 = 4294960578;
    APSLogErrorAt();
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v1;
}

void _handleSenderProcessDidDisconnect()
{
  _QWORD *v0;

  if (gAirPlayReceiverServer && (v0 = *(_QWORD **)(gAirPlayReceiverServer + 160)) != 0)
    APReceiverSystemInfoHandleAPServicesReset(v0);
  else
    APSLogErrorAt();
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t _HandleDebug(const __CFDictionary *a1, CFMutableDictionaryRef *a2)
{
  uint64_t v3;
  int v5;
  uint64_t v6;
  void *v7;
  const void *Value;
  const void *v9;
  CFTypeID v10;
  const __CFString *v11;
  const __CFString *v12;
  CFIndex v13;
  char *v14;
  char *v15;
  unsigned int Int64;
  uint64_t Formatted;
  uint64_t v18;
  uint64_t v19;
  CFMutableDictionaryRef v20;
  CFTypeRef cf;
  CFMutableDictionaryRef theDict;
  _OWORD v24[3];
  uint64_t v25;
  _QWORD context[3];

  v25 = 0;
  memset(v24, 0, sizeof(v24));
  cf = 0;
  theDict = 0;
  if (gAirPlayReceiverServer && (v3 = *(_QWORD *)(gAirPlayReceiverServer + 216)) != 0)
  {
    APReceiverSessionManagerCopyAirPlaySessionWithAttribute(v3, 0, 0, &cf);
    if (cf)
      v7 = AirPlayReceiverSessionCopyProperty((uint64_t)cf, v5, CFSTR("mediaAudioSession"), v6, 0);
    else
      v7 = 0;
    DataBuffer_Init();
    Value = CFDictionaryGetValue(a1, CFSTR("command"));
    if (Value)
    {
      v9 = Value;
      v10 = CFGetTypeID(Value);
      if (v10 == CFStringGetTypeID())
      {
        v11 = (const __CFString *)CFDictionaryGetValue(a1, CFSTR("value"));
        if (v11)
        {
          v12 = v11;
          v13 = CFStringGetLength(v11) + 1;
          v14 = (char *)malloc_type_calloc(1uLL, v13, 0xD8B51AE6uLL);
          if (!v14)
          {
            APSLogErrorAt();
            v18 = 4294960568;
            goto LABEL_39;
          }
          v15 = v14;
          CFStringGetCString(v12, v14, v13, 0x8000100u);
        }
        else
        {
          v15 = 0;
        }
        if (CFEqual(v9, CFSTR("show")))
        {
          Int64 = CFDictionaryGetInt64();
          context[0] = gAirPlayReceiverServer;
          context[1] = Int64;
          context[2] = v24;
          if (gAirPlayReceiverServer)
            dispatch_sync_f(*(dispatch_queue_t *)(gAirPlayReceiverServer + 24), context, (dispatch_function_t)_AirPlayReceiverServerDebugShow);
          Formatted = CFPropertyListCreateFormatted();
          if ((_DWORD)Formatted)
          {
            v18 = Formatted;
            APSLogErrorAt();
            goto LABEL_24;
          }
          goto LABEL_20;
        }
        if (!CFEqual(v9, CFSTR("control")))
        {
          v18 = 4294960582;
          goto LABEL_24;
        }
        if (v15)
        {
          v19 = CFPropertyListCreateFormatted();
          if ((_DWORD)v19)
          {
            v18 = v19;
            APSLogErrorAt();
            DataBuffer_Free();
LABEL_25:
            free(v15);
            goto LABEL_26;
          }
LABEL_20:
          if (theDict)
          {
            CFDictionarySetValue(theDict, CFSTR("responseType"), v9);
            v20 = theDict;
          }
          else
          {
            v20 = 0;
          }
          v18 = 0;
          *a2 = v20;
          theDict = 0;
LABEL_24:
          DataBuffer_Free();
          if (!v15)
            goto LABEL_26;
          goto LABEL_25;
        }
        APSLogErrorAt();
        v18 = 0;
      }
      else
      {
        APSLogErrorAt();
        v18 = 4294960540;
      }
    }
    else
    {
      v18 = 4294960582;
    }
  }
  else
  {
    APSLogErrorAt();
    v7 = 0;
    v18 = 4294960587;
  }
LABEL_39:
  DataBuffer_Free();
LABEL_26:
  if (theDict)
    CFRelease(theDict);
  if (cf)
    CFRelease(cf);
  if (v7)
    CFRelease(v7);
  return v18;
}

void _AirPlayReceiverServerDebugShow(uint64_t a1)
{
  uint64_t v2;
  const void *v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;
  _QWORD context[4];

  v10 = 0;
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  CFObjectGetPropertyInt64Sync();
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  APSMultiPrimariesEnabled();
  DataBuffer_AppendF();
  APSNowPlayingSessionDataSourceEnabled();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  v3 = (const void *)APReceiverSystemInfoCopyProperty(*(_QWORD *)(*(_QWORD *)a1 + 160), v2, (uint64_t)CFSTR("AdvertiserInfo"), 0, &v10);
  v6 = APAdvertiserInfoCopyProperty((uint64_t)v3, v4, CFSTR("featuresEx"), v5, &v10);
  APSFeaturesCopyStringRepresentation();
  DataBuffer_AppendF();
  if (v6)
    CFRelease(v6);
  CFObjectGetPropertyInt64Sync();
  DataBuffer_AppendF();
  if (v3)
    CFRelease(v3);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  if (v7)
  {
    v8 = *(_DWORD *)(a1 + 8);
    v9 = *(_QWORD *)(a1 + 16);
    context[3] = 0;
    context[0] = v7;
    context[1] = v8;
    context[2] = v9;
    dispatch_sync_f(*(dispatch_queue_t *)(v7 + 16), context, (dispatch_function_t)_APAdvertiserDebugShow);
  }
}

void _HandleReceiverSessionStartedOnHTSecondary(uint64_t a1)
{
  uint64_t *v1;
  int v2;
  const void *v3;
  const void *v4;
  CFTypeRef v5;
  uint64_t (*v6)(CFTypeRef, const __CFString *, _QWORD);
  const void *v7;
  CFTypeRef v8;
  CFTypeRef cf;

  v1 = *(uint64_t **)a1;
  v2 = *(_DWORD *)(a1 + 8);
  v3 = *(const void **)(a1 + 16);
  v8 = 0;
  cf = 0;
  v4 = 0;
  if (!APSIsATVInHTGroup() || v2 == 2)
  {
LABEL_18:
    v5 = cf;
    goto LABEL_19;
  }
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(v1[27], 4, &cf, &v8);
  v4 = 0;
  v5 = cf;
  if (cf && v8)
  {
    v6 = *(uint64_t (**)(CFTypeRef, const __CFString *, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16)
                                                                         + 64);
    if (v6)
      v7 = (const void *)v6(v5, CFSTR("hijackID"), 0);
    else
      v7 = 0;
    v4 = v3;
    if (v7 != v3)
    {
      if (!v7 || !v3 || !CFEqual(v7, v3))
      {
        if (gLogCategory_AirPlayReceiverServer <= 50
          && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        AirPlayReceiverServerCloseConnection((uint64_t)v1, (uint64_t)cf);
      }
      v4 = v7;
    }
    goto LABEL_18;
  }
LABEL_19:
  if (v5)
    CFRelease(v5);
  if (v8)
    CFRelease(v8);
  if (v4)
    CFRelease(v4);
  if (v3)
    CFRelease(v3);
  CFRelease(v1);
}

uint64_t AirPlayReceiverServerGetDispatchQueue(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

CFTypeRef AirPlayReceiverServerCopyProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, _DWORD *a5)
{
  int v8;
  uint64_t v9;
  const void *v10;
  CFTypeRef *v11;
  const __CFAllocator *v12;
  CFIndex ShortVersionLength;
  int v14;
  uint64_t v15;
  const void *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  CFTypeRef cf;
  CFTypeRef Int64;
  int v23;
  CFPropertyListFormat format;
  CFDataRef data;
  int v26;

  v23 = 0;
  cf = 0;
  Int64 = 0;
  if (CFEqual(cf1, CFSTR("audioBufferInfo")))
  {
    APReceiverSessionManagerCopyAirPlaySessionWithAttribute(*(_QWORD *)(a1 + 216), 0, 0, &cf);
    if (cf)
    {
      v10 = AirPlayReceiverSessionCopyProperty((uint64_t)cf, v8, cf1, v9, &v23);
LABEL_4:
      Int64 = v10;
      goto LABEL_34;
    }
    APSLogErrorAt();
    v14 = -6709;
    goto LABEL_41;
  }
  if (CFEqual(cf1, CFSTR("playing")))
  {
    if (*(_BYTE *)(a1 + 124))
      v11 = (CFTypeRef *)MEMORY[0x24BDBD270];
    else
      v11 = (CFTypeRef *)MEMORY[0x24BDBD268];
    Int64 = *v11;
    CFRetain(Int64);
    goto LABEL_33;
  }
  if (!CFEqual(cf1, CFSTR("sourceVersion")))
  {
    if (!CFEqual(cf1, CFSTR("deviceInfo")))
    {
      if (CFEqual(cf1, CFSTR("listeningPort")))
      {
        Int64 = (CFTypeRef)CFNumberCreateInt64();
      }
      else
      {
        if (!CFEqual(cf1, CFSTR("assistedModeAdvertisingInfo")))
        {
          v10 = AirPlayReceiverServerPlatformCopyProperty(0, v17, cf1, v18, &v23);
          goto LABEL_4;
        }
        v19 = *(_QWORD *)(a1 + 40);
        if (v19)
        {
          v23 = APAdvertiserCopyProperty(v19, CFSTR("assistedModeInfo"), &Int64);
          if (v23)
          {
            APSLogErrorAt();
            goto LABEL_34;
          }
        }
      }
      goto LABEL_33;
    }
    v26 = 0;
    format = 0;
    data = 0;
    v16 = (const void *)APReceiverSystemInfoCopyProperty(*(_QWORD *)(a1 + 160), v15, (uint64_t)CFSTR("AdvertiserInfo"), 0, &v26);
    if (!v26)
    {
      v26 = APAdvertiserInfoCreateData((uint64_t)v16, &data);
      if (!v26)
      {
        Int64 = CFPropertyListCreateWithData((CFAllocatorRef)*MEMORY[0x24BDBD240], data, 0, &format, 0);
        if (Int64)
        {
          if (gLogCategory_AirPlayReceiverServer <= 50
            && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
            if (!v16)
              goto LABEL_30;
          }
          else if (!v16)
          {
LABEL_30:
            if (data)
              CFRelease(data);
            v23 = v26;
            goto LABEL_33;
          }
LABEL_29:
          CFRelease(v16);
          goto LABEL_30;
        }
        v26 = -6762;
      }
    }
    APSLogErrorAt();
    if (!v16)
      goto LABEL_30;
    goto LABEL_29;
  }
  v12 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  ShortVersionLength = APSVersionUtilsGetShortVersionLength();
  Int64 = CFStringCreateWithBytesNoCopy(v12, (const UInt8 *)"800.74.1.2", ShortVersionLength, 0x600u, 0, (CFAllocatorRef)*MEMORY[0x24BDBD258]);
  if (Int64)
  {
LABEL_33:
    v23 = 0;
    goto LABEL_34;
  }
  APSLogErrorAt();
  v14 = -6762;
LABEL_41:
  v23 = v14;
LABEL_34:
  if (cf)
    CFRelease(cf);
  if (a5)
    *a5 = v23;
  return Int64;
}

uint64_t AirPlayReceiverServerSetProperty(uint64_t a1, int a2, CFTypeRef cf1, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294960587;
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, CFSTR("playing")))
  {
    v8 = CFGetInt64();
    result = 0;
    *(_BYTE *)(a1 + 124) = v8 != 0;
    return result;
  }
  if (CFEqual(cf1, CFSTR("playPassword")))
  {
    APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v10, (uint64_t)CFSTR("Password"), v11, a5);
    return 0;
  }
  if (CFEqual(cf1, CFSTR("canRecordScreen")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v12, (uint64_t)CFSTR("CanRecordScreenStream"), v13, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
LABEL_32:
    APSLogErrorAt();
    return v14;
  }
  if (CFEqual(cf1, CFSTR("screenDemoMode")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v15, (uint64_t)CFSTR("ScreenDemoMode"), v16, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, CFSTR("displayHDRMode")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v17, (uint64_t)CFSTR("DisplayHDRModeOverride"), v18, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, CFSTR("displaySizeMax")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v19, (uint64_t)CFSTR("DisplaySizeMaxOverride"), v20, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, CFSTR("usePTPClock")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v21, (uint64_t)CFSTR("UsePTPClock"), v22, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, CFSTR("denyInterruptions")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v23, (uint64_t)CFSTR("DenyInterruptions"), v24, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
    goto LABEL_32;
  }
  if (CFEqual(cf1, CFSTR("supportsSenderUIEvents")))
  {
    result = APReceiverSystemInfoSetProperty(*(_QWORD *)(a1 + 160), v25, (uint64_t)CFSTR("SupportsSenderUIEvents"), v26, a5);
    if (!(_DWORD)result)
      return result;
    v14 = result;
    goto LABEL_32;
  }
  if (!CFEqual(cf1, CFSTR("forcePermissionDialog")))
    return 4294960582;
  result = 0;
  *(_BYTE *)(a1 + 255) = *MEMORY[0x24BDBD270] == a5;
  return result;
}

void AirPlayReceiverServerUpdateStatus(_QWORD *a1, CFTypeRef cf)
{
  NSObject *v4;
  _QWORD v5[6];

  CFRetain(cf);
  CFRetain(a1);
  v4 = a1[3];
  v5[0] = MEMORY[0x24BDAC760];
  v5[1] = 3221225472;
  v5[2] = __AirPlayReceiverServerUpdateStatus_block_invoke;
  v5[3] = &__block_descriptor_48_e5_v8__0l;
  v5[4] = a1;
  v5[5] = cf;
  dispatch_async(v4, v5);
}

void AirPlayReceiverServerHijackConnection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t HTTPConnectionForSession;
  uint64_t v6;
  uint64_t v7;

  v7 = 0;
  if (a1 && a2 && a3)
  {
    HTTPConnectionForSession = _FindHTTPConnectionForSession(a1, a2, &v7);
    v6 = _FindHTTPConnectionForSession(a1, a3, 0);
    if (gLogCategory_AirPlayReceiverServer <= 30
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (HTTPConnectionForSession && v6 && HTTPConnectionForSession != v6)
    {
      if (gLogCategory_AirPlayReceiverServer <= 50
        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _DestroyHTTPConnection(v7, HTTPConnectionForSession);
    }
  }
}

uint64_t AirPlayReceiverServerStoreReverseConnectionContext(uint64_t a1, uint64_t a2, const void *a3)
{
  CFMutableDictionaryRef Mutable;
  const char *v6;
  CFStringRef v7;
  __CFArray *Value;
  __CFArray *v9;
  uint64_t v10;

  if (!*(_QWORD *)(a1 + 192))
  {
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    *(_QWORD *)(a1 + 192) = Mutable;
    if (!Mutable)
    {
      APSLogErrorAt();
      return 4294960568;
    }
  }
  v6 = (const char *)UUIDtoCString();
  v7 = CFStringCreateWithCString(0, v6, 0x8000100u);
  Value = (__CFArray *)CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 192), v7);
  if (Value)
  {
    v9 = Value;
    CFRetain(Value);
  }
  else
  {
    v9 = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
    if (!v9)
    {
      APSLogErrorAt();
      v10 = 4294960568;
      if (!v7)
        return v10;
      goto LABEL_7;
    }
  }
  CFArrayAppendValue(v9, a3);
  CFDictionarySetValue(*(CFMutableDictionaryRef *)(a1 + 192), v7, v9);
  CFRelease(v9);
  v10 = 0;
  if (v7)
LABEL_7:
    CFRelease(v7);
  return v10;
}

void _HandleConnectionDetached(uint64_t a1, const void *a2, const void *a3, NSObject *a4)
{
  uint64_t Int64;
  BOOL v8;
  _OWORD *CString;
  _OWORD *Bytes;
  uint64_t (*v11)(const void *, _QWORD *);
  uint64_t v12;
  uint64_t Instance;
  uint64_t v14;
  int v15;
  uint64_t (*v16)(const void *, _QWORD);
  int v17;
  _QWORD v18[2];
  int v19;
  uint64_t v20;
  void (*v21)(uint64_t, const void *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CFTypeRef cf;
  int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v19 = 0;
  v18[0] = 0;
  v18[1] = 0;
  Int64 = CFObjectGetInt64();
  v8 = CFObjectGetInt64() != 0;
  v41 = 0u;
  v42 = 0u;
  v39 = 0u;
  v40 = 0u;
  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  CString = (_OWORD *)CFObjectGetCString();
  v33 = 0u;
  v34 = 0u;
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  Bytes = (_OWORD *)CFObjectGetBytes();
  v11 = *(uint64_t (**)(const void *, _QWORD *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 56);
  if (!v11)
  {
    v19 = -71934;
    goto LABEL_18;
  }
  v19 = v11(a3, v18);
  if (v19)
  {
LABEL_18:
    APSLogErrorAt();
    v14 = 0;
    goto LABEL_21;
  }
  v12 = v18[0];
  cf = 0;
  if (gAirPlayReceiverReverseConnectionInitOnce != -1)
    dispatch_once_f(&gAirPlayReceiverReverseConnectionInitOnce, 0, (dispatch_function_t)_AirPlayReceiverReverseConnectionGetTypeID);
  Instance = _CFRuntimeCreateInstance();
  if (!Instance)
  {
    APSLogErrorAt();
    v17 = -6728;
LABEL_32:
    v19 = v17;
    goto LABEL_18;
  }
  v14 = Instance;
  if (!Bytes || !CString || !v12)
  {
    APSLogErrorAt();
    v17 = -6705;
LABEL_31:
    CFRelease((CFTypeRef)v14);
    goto LABEL_32;
  }
  *(_QWORD *)(Instance + 80) = 0;
  *(_OWORD *)(Instance + 48) = 0u;
  *(_OWORD *)(Instance + 64) = 0u;
  *(_OWORD *)(Instance + 16) = 0u;
  *(_OWORD *)(Instance + 32) = 0u;
  dispatch_retain(a4);
  *(_QWORD *)(v14 + 72) = a4;
  v15 = HTTPClientCreateWithSocket();
  v26 = v15;
  if (v15)
  {
    v17 = v15;
    APSLogErrorAt();
    if (cf)
    {
      HTTPClientInvalidate();
      CFRelease(cf);
      cf = 0;
    }
    goto LABEL_31;
  }
  HTTPClientSetDispatchQueue();
  APSLogUtilsGetHTTPClientCoreLogCategory();
  HTTPClientSetLogging();
  APSLogUtilsGetAsyncCnxLogCategory();
  HTTPClientSetConnectionLogging();
  APSSettingsGetInt64();
  HTTPClientSetTimeout();
  if (Int64)
    HTTPClientSetTransportDelegate();
  v22 = 0;
  v23 = 0;
  v24 = 0;
  CFRetain((CFTypeRef)v14);
  v20 = v14;
  v21 = _HandleReverseConnectionInvalidated;
  HTTPClientSetDelegate();
  HTTPClientSetFlags();
  *(_QWORD *)(v14 + 64) = cf;
  *(_BYTE *)(v14 + 80) = 0;
  *(_BYTE *)(v14 + 20) = v8;
  *(_OWORD *)(v14 + 38) = *Bytes;
  *(_OWORD *)(v14 + 22) = *CString;
  v19 = 0;
  if (!Int64)
  {
LABEL_15:
    v19 = AirPlayReceiverServerStoreReverseConnectionContext((uint64_t)a2, (uint64_t)Bytes, (const void *)v14);
    if (!v19)
    {
      v19 = 0;
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  v16 = *(uint64_t (**)(const void *, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 48);
  if (v16)
  {
    v19 = v16(a3, 0);
    if (!v19)
      goto LABEL_15;
  }
  else
  {
    v19 = -71934;
  }
LABEL_20:
  APSLogErrorAt();
LABEL_21:
  CFRelease(a2);
  CFRelease(a3);
  dispatch_release(a4);
  if (v14)
    CFRelease((CFTypeRef)v14);
  if (v19
    && gLogCategory_AirPlayReceiverServer <= 60
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t _AirPlayReceiverReverseConnectionGetTypeID()
{
  uint64_t result;

  result = _CFRuntimeRegisterClass();
  gAirPlayReceiverReverseConnectionTypeID = result;
  return result;
}

void _HandleReverseConnectionInvalidated(uint64_t a1, const void *a2)
{
  const __CFArray *ReverseConnectionsForSession;
  CFIndex v4;
  CFIndex v5;
  const void *ValueAtIndex;

  if (a2)
  {
    if (*(_QWORD *)(gAirPlayReceiverServer + 192))
    {
      ReverseConnectionsForSession = (const __CFArray *)_GetReverseConnectionsForSession(gAirPlayReceiverServer);
      if (ReverseConnectionsForSession)
      {
        v4 = 0;
        do
        {
          v5 = v4;
          if (v4 >= CFArrayGetCount(ReverseConnectionsForSession))
            break;
          ValueAtIndex = CFArrayGetValueAtIndex(ReverseConnectionsForSession, v5);
          v4 = v5 + 1;
        }
        while (ValueAtIndex != a2);
        if (v5 < CFArrayGetCount(ReverseConnectionsForSession))
          CFArrayRemoveValueAtIndex(ReverseConnectionsForSession, v5);
      }
    }
    else
    {
      APSLogErrorAt();
    }
    if (gLogCategory_AirPlayReceiverServer <= 30
      && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFRelease(a2);
  }
  else if (gLogCategory_AirPlayReceiverServer <= 50
         && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

const void *_GetReverseConnectionsForSession(uint64_t a1)
{
  const char *v2;
  CFStringRef v3;
  const void *Value;

  if (!*(_QWORD *)(a1 + 192))
    return 0;
  v2 = (const char *)UUIDtoCString();
  v3 = CFStringCreateWithCString(0, v2, 0x8000100u);
  Value = CFDictionaryGetValue(*(CFDictionaryRef *)(a1 + 192), v3);
  if (v3)
    CFRelease(v3);
  return Value;
}

void _AirPlayReceiverReverseConnectionFinalize(uint64_t a1)
{
  int v2;
  const void *v3;
  NSObject *v4;

  v2 = *(unsigned __int8 *)(a1 + 80);
  v3 = *(const void **)(a1 + 64);
  if (!v2)
  {
    if (!v3)
      goto LABEL_7;
    HTTPClientInvalidate();
    v3 = *(const void **)(a1 + 64);
    goto LABEL_6;
  }
  if (v3)
  {
LABEL_6:
    CFRelease(v3);
    *(_QWORD *)(a1 + 64) = 0;
  }
LABEL_7:
  v4 = *(NSObject **)(a1 + 72);
  if (v4)
  {
    dispatch_release(v4);
    *(_QWORD *)(a1 + 72) = 0;
  }
}

uint64_t AirPlayReceiverServerHoldPowerAssertion(uint64_t result)
{
  int v1;

  v1 = *(_DWORD *)(result + 204);
  *(_DWORD *)(result + 204) = v1 + 1;
  if (!v1 && !*(_DWORD *)(result + 208))
  {
    result = IOPMAssertionCreateWithName(CFSTR("PreventUserIdleSystemSleep"), 0xFFu, CFSTR("com.apple.airplay.mediacontrol"), (IOPMAssertionID *)(result + 208));
    if (gLogCategory_AirPlayReceiverServer <= 40)
    {
      if (gLogCategory_AirPlayReceiverServer != -1)
        return LogPrintF();
      result = _LogCategory_Initialize();
      if ((_DWORD)result)
        return LogPrintF();
    }
  }
  return result;
}

uint64_t AirPlayReceiverServerPostMediaControlEvent(dispatch_queue_t *a1, const void *a2)
{
  _DWORD *v4;
  _QWORD *v5;
  CFDataRef Data;

  if (gLogCategory_AirPlayReceiverServer <= 10
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v4 = malloc_type_calloc(1uLL, 0x20uLL, 0x1060040FB77E0C5uLL);
  if (v4)
  {
    v5 = v4;
    *v4 = CFDictionaryGetInt64();
    Data = CFPropertyListCreateData(0, a2, kCFPropertyListXMLFormat_v1_0, 0, 0);
    v5[1] = Data;
    if (Data)
    {
      CFRetain(a2);
      v5[2] = a2;
      CFRetain(a1);
      v5[3] = a1;
      dispatch_async_f(a1[11], v5, (dispatch_function_t)_AirPlayReceiverServerPostMediaControlEvent);
      return 0;
    }
    else
    {
      APSLogErrorAt();
      free(v5);
      return 4294960596;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
}

void _AirPlayReceiverServerPostMediaControlEvent(unsigned int *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD *);
  const __CFArray *ReverseConnectionsForSession;
  const __CFArray *v8;
  CFIndex Count;
  CFIndex v10;
  CFIndex i;
  const void *ValueAtIndex;
  uint64_t v13;
  const void *v14;
  NSObject *v15;
  int v17;
  CFTypeRef cf;
  _QWORD block[9];
  int v20;
  _QWORD v21[2];
  int v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  cf = (CFTypeRef)*((_QWORD *)a1 + 1);
  v1 = *a1;
  v2 = *((_QWORD *)a1 + 3);
  v22 = 0;
  v21[1] = 0;
  v3 = *(_DWORD *)(v2 + 200) + 1;
  *(_DWORD *)(v2 + 200) = v3;
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 80) + 56);
  if (v4)
  {
    v17 = 0;
    do
    {
      v21[0] = 0;
      v5 = *(_QWORD *)(*(_QWORD *)(v4 + 40) + 280);
      if (v5)
      {
        v6 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 40);
        if (!v6)
        {
          v22 = -12782;
LABEL_28:
          APSLogErrorAt();
          goto LABEL_30;
        }
        v22 = v6(v5, v1, v21);
        if (v22)
          goto LABEL_28;
        if (v21[0])
        {
          CFObjectGetBytes();
          if (v22)
            goto LABEL_28;
          ReverseConnectionsForSession = (const __CFArray *)_GetReverseConnectionsForSession(v2);
          if (ReverseConnectionsForSession)
          {
            v8 = ReverseConnectionsForSession;
            if (CFArrayGetCount(ReverseConnectionsForSession))
            {
              Count = CFArrayGetCount(v8);
              if (Count >= 1)
              {
                v10 = Count;
                for (i = 0; i != v10; ++i)
                {
                  ValueAtIndex = CFArrayGetValueAtIndex(v8, i);
                  v13 = *((_QWORD *)ValueAtIndex + 8);
                  memset(&block[6], 0, 24);
                  v20 = 0;
                  if (v13)
                  {
                    v14 = ValueAtIndex;
                    if (*((_DWORD *)ValueAtIndex + 4) != v3 && !strcmp((const char *)ValueAtIndex + 22, "event"))
                    {
                      CFObjectGetInt64();
                      if (v22)
                        goto LABEL_28;
                      HTTPClientGetPeerAddress();
                      if (gLogCategory_AirPlayReceiverServer <= 50
                        && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
                      {
                        LogPrintF();
                      }
                      *((_DWORD *)v14 + 4) = v3;
                      CFRetain(cf);
                      CFRetain(v14);
                      v15 = *((_QWORD *)v14 + 9);
                      block[0] = MEMORY[0x24BDAC760];
                      block[1] = 3221225472;
                      block[2] = ___AirPlayReceiverServerPostMediaControlEvent_block_invoke;
                      block[3] = &__block_descriptor_48_e5_v8__0l;
                      block[4] = v14;
                      block[5] = cf;
                      dispatch_async(v15, block);
                      v17 = 1;
                    }
                  }
                }
              }
            }
          }
        }
      }
      v4 = *(_QWORD *)(v4 + 16);
    }
    while (v4);
    if (v17)
      goto LABEL_30;
  }
  if (gLogCategory_AirPlayReceiverServer <= 50
    && (gLogCategory_AirPlayReceiverServer != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_30:
  CFRelease(cf);
  CFRelease(*((CFTypeRef *)a1 + 2));
  CFRelease(*((CFTypeRef *)a1 + 3));
  free(a1);
}

uint64_t _DoEventTransactionCompletion(uint64_t result)
{
  int v1;
  BOOL v2;

  if (*(_DWORD *)(result + 9648)
    || ((v1 = *(_DWORD *)(result + 8456), (v1 - 300) <= 0xFFFFFF9B) ? (v2 = v1 == -200000) : (v2 = 1), !v2))
  {
    if (gLogCategory_AirPlayReceiverServer <= 60)
    {
      if (gLogCategory_AirPlayReceiverServer != -1)
        return LogPrintF();
      result = _LogCategory_Initialize();
      if ((_DWORD)result)
        return LogPrintF();
    }
  }
  return result;
}

void AirPlayReceiverServerSendMediaRemoteCommand(uint64_t a1, int a2)
{
  CFTypeRef cf;

  cf = 0;
  APReceiverSessionManagerCopyAirPlaySessionWithAttribute(a1, 0, 0, &cf);
  if (cf)
  {
    if (AirPlayReceiverSessionSendMediaRemoteCommand(cf, -1, a2, 0))
      APSLogErrorAt();
    if (cf)
      CFRelease(cf);
  }
}

uint64_t AirPlayReceiverServerSendDACPCommands()
{
  ASPrintF();
  APSLogErrorAt();
  return 4294960568;
}

void _AirPlayReceiverUI_HandleServerReset(uint64_t a1)
{
  _QWORD block[5];

  *(_BYTE *)(a1 + 24) = 0;
  dispatch_retain(*(dispatch_object_t *)a1);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = ___AirPlayReceiverUI_HandleServerReset_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  dispatch_async(MEMORY[0x24BDAC9B8], block);
}

void _AirPlayReceiverUI_CleanupPresentation(uint64_t a1, int a2, uint64_t a3)
{
  xpc_object_t v5;

  if (a2 && *(_BYTE *)(a1 + 40))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v5 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v5, "function", "stopPresentation");
    if (a3)
      xpc_dictionary_set_cf_object();
    _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v5, 0);
    xpc_release(v5);
  }
  objc_msgSend((id)objc_msgSend(*(id *)(a1 + 136), "layer"), "setContents:", 0);
  objc_msgSend(*(id *)(a1 + 136), "invalidate");

  *(_QWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 143) = 0;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t _AirPlayReceiverUI_ActiveSessionsStopped(uint64_t a1)
{
  uint64_t result;
  uint64_t **i;

  result = mach_absolute_time();
  *(_QWORD *)(a1 + 88) = result;
  for (i = *(uint64_t ***)(a1 + 48); i; i = (uint64_t **)*i)
    result = ((uint64_t (*)(const char *, _QWORD, uint64_t *))i[2])("sessionsStopped", 0, i[3]);
  return result;
}

uint64_t _AirPlayReceiverUI_SendMessageWithReplySync(NSObject **a1, uint64_t a2, _QWORD *a3)
{
  dispatch_semaphore_t v6;
  NSObject *v7;
  NSObject *v8;
  int int64;
  uint64_t *v10;
  void *v11;
  uint64_t v12;
  _QWORD block[9];
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;

  v21 = 0;
  v22 = &v21;
  v23 = 0x2020000000;
  v24 = 0;
  v15 = 0;
  v16 = &v15;
  v17 = 0x3052000000;
  v18 = __Block_byref_object_copy__2499;
  v19 = __Block_byref_object_dispose__2500;
  v20 = 0;
  v6 = dispatch_semaphore_create(0);
  if (v6)
  {
    v7 = v6;
    *((_DWORD *)v22 + 6) = -6700;
    v8 = *a1;
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 3221225472;
    block[2] = ___AirPlayReceiverUI_SendMessageWithReplySync_block_invoke;
    block[3] = &unk_24E21EDC8;
    block[7] = &v15;
    block[8] = a1;
    block[5] = v7;
    block[6] = &v21;
    block[4] = a2;
    dispatch_async(v8, block);
    dispatch_semaphore_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
    dispatch_release(v7);
    if (*((_DWORD *)v22 + 6))
    {
      APSLogErrorAt();
    }
    else if (MEMORY[0x2207ABF54](v16[5]) == MEMORY[0x24BDACFB8])
    {
      APSLogErrorAt();
      *((_DWORD *)v22 + 6) = -6753;
      if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
        && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      int64 = xpc_dictionary_get_int64((xpc_object_t)v16[5], "error");
      *((_DWORD *)v22 + 6) = int64;
      if (a3 && !int64)
      {
        v10 = v16;
        *a3 = v16[5];
        v10[5] = 0;
      }
    }
  }
  else
  {
    APSLogErrorAt();
    *((_DWORD *)v22 + 6) = -6728;
  }
  v11 = (void *)v16[5];
  if (v11)
    xpc_release(v11);
  v12 = *((unsigned int *)v22 + 6);
  _Block_object_dispose(&v15, 8);
  _Block_object_dispose(&v21, 8);
  return v12;
}

void sub_21E133C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy__2499(uint64_t a1, uint64_t a2)
{
  _Block_object_assign((void *)(a1 + 40), *(const void **)(a2 + 40), 131);
}

void __Block_byref_object_dispose__2500(uint64_t a1)
{
  _Block_object_dispose(*(const void **)(a1 + 40), 131);
}

void _AirPlayReceiverUI_HandleStateEvent(void *a1)
{
  uint64_t v2;
  void *v3;
  const char *string;
  const char *v5;
  const __CFString *v6;
  const __CFString *v7;
  const __CFDictionary *v8;
  const __CFDictionary *v9;
  CFTypeID v10;
  __CFDictionary *MutableCopy;
  const __CFDictionary *v12;
  const void *Value;
  _QWORD v14[6];

  if (AirPlayReceiverUI_GetShared_once != -1)
    dispatch_once(&AirPlayReceiverUI_GetShared_once, &__block_literal_global_2473);
  v2 = AirPlayReceiverUI_GetShared_ui;
  v3 = (void *)objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  objc_msgSend(v3, "setObject:forKey:", CFSTR("video"), CFSTR("category"));
  string = xpc_dictionary_get_string(a1, "eventType");
  if (string
    && ((v5 = string, !strcmp(string, "ended"))
      ? (objc_msgSend(v3, "setObject:forKey:", CFSTR("stopped"), CFSTR("state")),
         v6 = CFSTR("ended"),
         v7 = CFSTR("reason"))
      : (v6 = (const __CFString *)objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", v5), v7 = CFSTR("state")),
        objc_msgSend(v3, "setObject:forKey:", v6, v7),
        (v8 = (const __CFDictionary *)xpc_dictionary_copy_cf_object()) != 0))
  {
    v9 = v8;
    v10 = CFGetTypeID(v8);
    if (v10 == CFDictionaryGetTypeID())
    {
      MutableCopy = CFDictionaryCreateMutableCopy(0, 0, v9);
      if (MutableCopy)
      {
        v12 = MutableCopy;
        CFDictionaryRemoveValue(MutableCopy, CFSTR("sessionID"));
        if (CFDictionaryGetCount(v12) >= 1)
          objc_msgSend(v3, "setObject:forKey:", v12, CFSTR("params"));
        CFRelease(v12);
      }
      Value = CFDictionaryGetValue(v9, CFSTR("sessionID"));
      if (Value)
        objc_msgSend(v3, "setObject:forKey:", Value, CFSTR("sessionID"));
      v14[0] = MEMORY[0x24BDAC760];
      v14[1] = 3221225472;
      v14[2] = ___AirPlayReceiverUI_HandleStateEvent_block_invoke;
      v14[3] = &unk_24E21FD90;
      v14[4] = v3;
      v14[5] = v2;
      dispatch_async(MEMORY[0x24BDAC9B8], v14);
    }
    else
    {
      APSLogErrorAt();
    }
    CFRelease(v9);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _AirPlayReceiverUI_HandlePlaylistEvent(void *a1)
{
  uint64_t v2;
  void *v3;
  const char *string;
  const __CFDictionary *v5;
  const __CFDictionary *v6;
  CFTypeID v7;
  const void *Value;
  const void *v9;
  const void *v10;
  _QWORD v11[6];

  if (AirPlayReceiverUI_GetShared_once != -1)
    dispatch_once(&AirPlayReceiverUI_GetShared_once, &__block_literal_global_2473);
  v2 = AirPlayReceiverUI_GetShared_ui;
  v3 = (void *)objc_msgSend(MEMORY[0x24BDBCED8], "dictionary");
  objc_msgSend(v3, "setObject:forKey:", CFSTR("video"), CFSTR("category"));
  string = xpc_dictionary_get_string(a1, "eventType");
  if (string
    && (objc_msgSend(v3, "setObject:forKey:", objc_msgSend(MEMORY[0x24BDD17C8], "stringWithUTF8String:", string), CFSTR("type")), (v5 = (const __CFDictionary *)xpc_dictionary_copy_cf_object()) != 0))
  {
    v6 = v5;
    v7 = CFGetTypeID(v5);
    if (v7 == CFDictionaryGetTypeID())
    {
      Value = CFDictionaryGetValue(v6, CFSTR("item"));
      if (Value)
        objc_msgSend(v3, "setObject:forKey:", Value, CFSTR("item"));
      v9 = CFDictionaryGetValue(v6, CFSTR("sessionID"));
      if (v9)
        objc_msgSend(v3, "setObject:forKey:", v9, CFSTR("sessionID"));
      v10 = CFDictionaryGetValue(v6, CFSTR("uuid"));
      if (v10)
        objc_msgSend(v3, "setObject:forKey:", v10, CFSTR("uuid"));
      v11[0] = MEMORY[0x24BDAC760];
      v11[1] = 3221225472;
      v11[2] = ___AirPlayReceiverUI_HandlePlaylistEvent_block_invoke;
      v11[3] = &unk_24E21FD90;
      v11[4] = v3;
      v11[5] = v2;
      dispatch_async(MEMORY[0x24BDAC9B8], v11);
    }
    else
    {
      APSLogErrorAt();
    }
    CFRelease(v6);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _AirPlayReceiverUI_NotifyObserversF(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t **i;

  if (a3 && CFPropertyListCreateFormattedVAList())
  {
    APSLogErrorAt();
  }
  else
  {
    for (i = *(uint64_t ***)(a1 + 48); i; i = (uint64_t **)*i)
      ((void (*)(uint64_t, _QWORD, uint64_t *))i[2])(a2, 0, i[3]);
  }
}

NSObject **AirPlayReceiverUI_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  NSObject **v5;
  xpc_object_t v7;
  void *v8;
  int v9;
  int v11;
  xpc_object_t object;
  int v13;

  v5 = (NSObject **)a1;
  if (!a1)
  {
    APSLogErrorAt();
    v11 = -6745;
LABEL_15:
    v13 = v11;
    goto LABEL_9;
  }
  if (!*(_BYTE *)(a1 + 40))
  {
    v5 = 0;
    v13 = 0;
    goto LABEL_9;
  }
  v7 = xpc_dictionary_create(0, 0, 0);
  if (!v7)
  {
    APSLogErrorAt();
    v5 = 0;
    v11 = -6728;
    goto LABEL_15;
  }
  v8 = v7;
  xpc_dictionary_set_string(v7, "function", "getProperty");
  xpc_dictionary_set_cf_object();
  if (a3)
    xpc_dictionary_set_cf_object();
  object = 0;
  v9 = _AirPlayReceiverUI_SendMessageWithReplySync(v5, (uint64_t)v8, &object);
  v13 = v9;
  xpc_release(v8);
  if (v9)
  {
    v5 = 0;
  }
  else
  {
    v5 = (NSObject **)xpc_dictionary_copy_cf_object();
    xpc_release(object);
    if (v13)
      APSLogErrorAt();
  }
LABEL_9:
  if (a4)
    *a4 = v13;
  return v5;
}

uint64_t AirPlayReceiverUI_SetProperty(uint64_t a1, CFStringRef theString1, uint64_t a3, const void *a4)
{
  const void *v8;
  uint64_t v9;
  uint64_t result;
  double v11;
  xpc_object_t v12;
  uint64_t v13;

  if (a1)
  {
    if (!*(_BYTE *)(a1 + 40))
      return 0;
    if (CFStringCompare(theString1, CFSTR("denyInterruptions"), 0) == kCFCompareEqualTo)
    {
      v9 = CFGetInt64();
      result = 0;
      *(_BYTE *)(a1 + 56) = v9 != 0;
      return result;
    }
    if (CFStringCompare(theString1, CFSTR("rate"), 0))
    {
      if (CFStringCompare(theString1, CFSTR("audioMode"), 0) == kCFCompareEqualTo)
      {
        if (*(_DWORD *)(a1 + 160))
        {
          v8 = *(const void **)(a1 + 168);
          if (a4)
            CFRetain(a4);
          *(_QWORD *)(a1 + 168) = a4;
          if (v8)
          {
            CFRelease(v8);
            a4 = *(const void **)(a1 + 168);
          }
          if (a4)
          {
            if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
              && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"updateAudioMode", (uint64_t)"{%kO=%O}");
          }
        }
        return 0;
      }
    }
    else
    {
      CFGetDouble();
      *(float *)&v11 = v11;
      if (*(float *)&v11 == 1.0 && *(_QWORD *)(a1 + 168))
      {
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"updateAudioMode", (uint64_t)"{%kO=%O}");
      }
    }
    v12 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_string(v12, "function", "setProperty");
    xpc_dictionary_set_cf_object();
    if (a3)
      xpc_dictionary_set_cf_object();
    if (a4)
      xpc_dictionary_set_cf_object();
    v13 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v12, 0);
    xpc_release(v12);
    return v13;
  }
  else
  {
    APSLogErrorAt();
    return 4294960551;
  }
}

uint64_t AirPlayReceiverUI_Perform(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  xpc_object_t v7;
  uint64_t v8;
  xpc_object_t object;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294960551;
  }
  if (!*(_BYTE *)(a1 + 40))
    return 0;
  v7 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v7, "function", "perform");
  xpc_dictionary_set_cf_object();
  if (a3)
    xpc_dictionary_set_cf_object();
  object = 0;
  v8 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v7, &object);
  xpc_release(v7);
  if (!(_DWORD)v8)
  {
    if (a4)
      *a4 = xpc_dictionary_copy_cf_object();
    xpc_release(object);
    return 0;
  }
  return v8;
}

uint64_t AirPlayReceiverUI_StartPresentation(uint64_t a1, CFDictionaryRef theDict, __CFDictionary **a3)
{
  _DWORD *v6;
  CFMutableDictionaryRef MutableCopy;
  const __CFDictionary *v8;
  void *v9;
  const __CFDictionary *v10;
  int v11;
  uint64_t Int64;
  uint64_t v13;
  uint64_t v14;
  const __CFString *Value;
  const __CFString *v16;
  CFTypeID v17;
  _BYTE *v18;
  int v19;
  int v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  __CFDictionary *Mutable;
  int v25;
  void *CAContextForRemoteHosting;
  xpc_object_t v27;
  int v28;
  const char *string;
  double v30;
  double v31;
  double v32;
  double v33;
  int v34;
  _BYTE *v36;
  __CFDictionary **v37;
  uint64_t v38;
  uint64_t v39;
  xpc_object_t xdict;
  uint64_t v41;

  v41 = 0;
  v39 = 0;
  v6 = &unk_2553CD000;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v38 = 0;
  xdict = 0;
  if (!a1)
  {
    APSLogErrorAt();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = -6745;
    goto LABEL_36;
  }
  if (!*(_BYTE *)(a1 + 40))
  {
    APSLogErrorAt();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v11 = -6700;
LABEL_36:
    HIDWORD(v41) = v11;
LABEL_37:
    v19 = v6[46];
    if (v19 <= 60 && (v19 != -1 || _LogCategory_Initialize()))
      LogPrintF();
    goto LABEL_103;
  }
  if (theDict)
    MutableCopy = CFDictionaryCreateMutableCopy(0, 0, theDict);
  else
    MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v8 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    v9 = 0;
    v10 = 0;
    v11 = -6728;
    goto LABEL_36;
  }
  v37 = a3;
  Int64 = CFDictionaryGetInt64();
  v13 = CFDictionaryGetInt64();
  v14 = CFDictionaryGetInt64();
  Value = (const __CFString *)CFDictionaryGetValue(v8, CFSTR("presentationType"));
  if (Value)
    v16 = Value;
  else
    v16 = CFSTR("photo");
  v17 = CFGetTypeID(v16);
  if (v17 != CFStringGetTypeID())
  {
    APSLogErrorAt();
    v9 = 0;
    v10 = 0;
    v11 = -6756;
    goto LABEL_36;
  }
  if (CFStringCompare(v16, CFSTR("mirror"), 0))
  {
    if (CFStringCompare(v16, CFSTR("photo"), 0))
    {
      if (CFStringCompare(v16, CFSTR("slideshow"), 0))
      {
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v9 = 0;
        v10 = 0;
        v11 = -6705;
        goto LABEL_36;
      }
      v18 = (_BYTE *)(a1 + 146);
    }
    else
    {
      v18 = (_BYTE *)(a1 + 145);
    }
  }
  else
  {
    v18 = (_BYTE *)(a1 + 144);
  }
  if (*(_DWORD *)(a1 + 128) && *(_QWORD *)(a1 + 120) != Int64)
  {
    if (*(_BYTE *)(a1 + 56))
    {
      if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
        || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopPresentation", (uint64_t)"{%kO=%i%kO=%O}");
    _AirPlayReceiverUI_CleanupPresentation(a1, 1, 0);
  }
  if (*(_DWORD *)(a1 + 160) && !*(_BYTE *)(a1 + 164) && (!v14 || *(_QWORD *)(a1 + 152) != Int64))
  {
    if (*(_BYTE *)(a1 + 56))
    {
      if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
        || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_69;
      }
LABEL_68:
      LogPrintF();
LABEL_69:
      v10 = 0;
      v9 = 0;
      HIDWORD(v41) = 200453;
      goto LABEL_103;
    }
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopVideo", (uint64_t)"{%kO=%i%kO=%O}");
  }
  if (v13)
  {
    v20 = *(_DWORD *)(a1 + 112);
    if (v20 && *(_QWORD *)(a1 + 104) != Int64)
    {
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_70;
      goto LABEL_66;
    }
    if (*(_DWORD *)(a1 + 160) && *(_QWORD *)(a1 + 152) != Int64 && *(_BYTE *)(a1 + 164))
    {
      if (!*(_BYTE *)(a1 + 56))
      {
        if (!v20)
        {
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v21 = "stopVideo";
LABEL_82:
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)v21, (uint64_t)"{%kO=%i%kO=%O}");
          goto LABEL_83;
        }
LABEL_70:
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v21 = "stopAudio";
        goto LABEL_82;
      }
LABEL_66:
      if (gLogCategory_AirPlayReceiverUIXPCServerCore > 50
        || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
      {
        goto LABEL_69;
      }
      goto LABEL_68;
    }
  }
LABEL_83:
  v36 = v18;
  v22 = *(_QWORD *)(a1 + 136);
  v23 = Int64;
  if (v22)
  {
    v9 = 0;
    goto LABEL_85;
  }
  v25 = *(_DWORD *)(a1 + 96);
  *(_DWORD *)(a1 + 96) = v25 + 1;
  LODWORD(v41) = v25 + 1;
  if (v25 == -1)
  {
    *(_DWORD *)(a1 + 96) = 1;
    LODWORD(v41) = 1;
  }
  CFDictionarySetNumber();
  CAContextForRemoteHosting = (void *)CreateCAContextForRemoteHosting();
  v9 = CAContextForRemoteHosting;
  if (!CAContextForRemoteHosting)
  {
    APSLogErrorAt();
    v10 = 0;
    goto LABEL_119;
  }
  objc_msgSend((id)objc_msgSend(CAContextForRemoteHosting, "layer"), "setName:", CFSTR("AirPlayReceiverUI_ClientLayer"));
  objc_msgSend((id)objc_msgSend(v9, "layer"), "setEdgeAntialiasingMask:", 0);
  objc_msgSend(MEMORY[0x24BDE57D8], "flush");
  objc_msgSend(MEMORY[0x24BDE57D8], "synchronize");
  v27 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v27, "function", "startPresentation");
  xpc_dictionary_set_cf_object();
  xpc_dictionary_set_uint64(v27, "presentationContextID", objc_msgSend(v9, "contextId"));
  v28 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v27, &xdict);
  HIDWORD(v41) = v28;
  xpc_release(v27);
  if (v28)
  {
    APSLogErrorAt();
    v10 = 0;
LABEL_124:
    v6 = (_DWORD *)&unk_2553CD000;
    goto LABEL_37;
  }
  v10 = (const __CFDictionary *)xpc_dictionary_copy_cf_object();
  if (HIDWORD(v41))
  {
    APSLogErrorAt();
    v6 = (_DWORD *)&unk_2553CD000;
    if (!HIDWORD(v41))
      goto LABEL_103;
    goto LABEL_37;
  }
  string = xpc_dictionary_get_string(xdict, "presentationFrame");
  if (!string)
  {
    APSLogErrorAt();
    HIDWORD(v41) = -6712;
    goto LABEL_124;
  }
  sscanf(string, "%f,%f,%f,%f", (char *)&v39 + 4, &v39, (char *)&v38 + 4, &v38);
  v30 = *((float *)&v39 + 1);
  v31 = *(float *)&v39;
  v32 = *((float *)&v38 + 1);
  v33 = *(float *)&v38;
  objc_msgSend(MEMORY[0x24BDE57D8], "begin");
  objc_msgSend(MEMORY[0x24BDE57D8], "setDisableActions:", 1);
  objc_msgSend((id)objc_msgSend(v9, "layer"), "setFrame:", v30, v31, v32, v33);
  objc_msgSend(MEMORY[0x24BDE57D8], "commit");
  *(_QWORD *)(a1 + 136) = v9;
  *(_QWORD *)(a1 + 120) = v23;
  *(_DWORD *)(a1 + 128) = v41;
  if (v10)
  {
    Mutable = CFDictionaryCreateMutableCopy(0, 0, v10);
    v6 = (_DWORD *)&unk_2553CD000;
    if (Mutable)
      goto LABEL_86;
    goto LABEL_96;
  }
  v6 = (_DWORD *)&unk_2553CD000;
LABEL_85:
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v10 = 0;
  if (!Mutable)
  {
LABEL_96:
    APSLogErrorAt();
LABEL_119:
    HIDWORD(v41) = -6700;
    goto LABEL_37;
  }
LABEL_86:
  CFDictionarySetValue(Mutable, CFSTR("presentationContext"), *(const void **)(a1 + 136));
  CFDictionarySetNumber();
  if (v37)
    *v37 = Mutable;
  else
    CFRelease(Mutable);
  *v36 = 1;
  v34 = v6[46];
  if (v34 <= 50 && (v34 != -1 || _LogCategory_Initialize()))
    LogPrintF();
  HIDWORD(v41) = 0;
LABEL_103:

  if (xdict)
    xpc_release(xdict);
  if (v8)
    CFRelease(v8);
  if (v10)
    CFRelease(v10);
  return HIDWORD(v41);
}

uint64_t AirPlayReceiverUI_StopPresentation(uint64_t a1, const __CFDictionary *a2)
{
  int Int64;
  const __CFString *Value;
  int v6;
  const __CFString *v7;
  CFTypeID v8;
  _BYTE *v9;
  BOOL v10;
  uint64_t v11;

  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    v11 = 4294960551;
    goto LABEL_49;
  }
  if (!*(_BYTE *)(a1 + 40))
    return 0;
  if (a2)
  {
    CFDictionaryGetInt64();
    Int64 = CFDictionaryGetInt64();
    Value = (const __CFString *)CFDictionaryGetValue(a2, CFSTR("presentationType"));
    v6 = Int64;
  }
  else
  {
    v6 = 0;
    Value = 0;
  }
  if (Value)
    v7 = Value;
  else
    v7 = CFSTR("photo");
  v8 = CFGetTypeID(v7);
  if (v8 != CFStringGetTypeID())
  {
    APSLogErrorAt();
    v11 = 4294960540;
    goto LABEL_49;
  }
  if (CFStringCompare(v7, CFSTR("mirror"), 0) == kCFCompareEqualTo)
  {
    v9 = (_BYTE *)(a1 + 144);
    if (v6)
      goto LABEL_25;
    goto LABEL_26;
  }
  if (CFStringCompare(v7, CFSTR("photo"), 0) == kCFCompareEqualTo)
  {
    v9 = (_BYTE *)(a1 + 145);
    if (v6)
      goto LABEL_25;
    goto LABEL_26;
  }
  if (CFStringCompare(v7, CFSTR("slideshow"), 0) == kCFCompareEqualTo)
  {
    v9 = (_BYTE *)(a1 + 146);
    if (v6)
    {
LABEL_25:
      if (v6 != *(_DWORD *)(a1 + 128))
      {
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        return 0;
      }
    }
LABEL_26:
    v10 = !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128) && *(_DWORD *)(a1 + 160) == 0;
    *v9 = 0;
    if (!*(_BYTE *)(a1 + 144) && !*(_BYTE *)(a1 + 145) && !*(_BYTE *)(a1 + 146))
      _AirPlayReceiverUI_CleanupPresentation(a1, 1, (uint64_t)a2);
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!v10 && !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128) && !*(_DWORD *)(a1 + 160))
      _AirPlayReceiverUI_ActiveSessionsStopped(a1);
    return 0;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore > 60)
    return 4294960591;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize())
    LogPrintF();
  v11 = 4294960591;
LABEL_49:
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v11;
}

uint64_t AirPlayReceiverUI_StartAudio(uint64_t a1, CFDictionaryRef theDict, CFMutableDictionaryRef *a3)
{
  CFMutableDictionaryRef MutableCopy;
  CFMutableDictionaryRef v7;
  uint64_t Int64;
  uint64_t v9;
  uint64_t v10;
  int v11;
  const char *v12;
  int v13;
  int v14;
  xpc_object_t v15;
  const __CFDictionary *v16;
  const __CFDictionary *v17;
  CFMutableDictionaryRef Mutable;
  xpc_object_t object;
  int v21;

  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v21 = 0;
  object = 0;
  if (!a1)
  {
    APSLogErrorAt();
    v7 = 0;
    v10 = 4294960551;
    goto LABEL_89;
  }
  if (!*(_BYTE *)(a1 + 40))
  {
    v10 = 0;
    v7 = 0;
    goto LABEL_73;
  }
  if (theDict)
    MutableCopy = CFDictionaryCreateMutableCopy(0, 0, theDict);
  else
    MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v7 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    v10 = 4294960568;
    goto LABEL_89;
  }
  Int64 = CFDictionaryGetInt64();
  v9 = Int64;
  if (!*(_BYTE *)(a1 + 144) || !*(_DWORD *)(a1 + 128) || *(_QWORD *)(a1 + 120) == Int64)
  {
LABEL_25:
    if (*(_DWORD *)(a1 + 160) && *(_QWORD *)(a1 + 152) != v9 && !*(_BYTE *)(a1 + 164))
    {
      if (*(_BYTE *)(a1 + 56))
      {
        v10 = 200453;
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_54;
        }
        goto LABEL_73;
      }
      if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
        && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopVideo", (uint64_t)"{%kO=%i%kO=%O}");
    }
    v11 = *(_DWORD *)(a1 + 112);
    if (v11 && *(_QWORD *)(a1 + 104) != v9)
    {
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_42;
    }
    else
    {
      if (!*(_DWORD *)(a1 + 160) || *(_QWORD *)(a1 + 152) == v9 || !*(_BYTE *)(a1 + 164))
        goto LABEL_58;
      if (!*(_BYTE *)(a1 + 56))
      {
        if (!v11)
        {
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v12 = "stopVideo";
LABEL_57:
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)v12, (uint64_t)"{%kO=%i%kO=%O}");
LABEL_58:
          *(_QWORD *)(a1 + 104) = v9;
          v13 = *(_DWORD *)(a1 + 96);
          v14 = v13 + 1;
          *(_DWORD *)(a1 + 96) = v13 + 1;
          v21 = v13 + 1;
          if (v13 == -1)
          {
            *(_DWORD *)(a1 + 96) = 1;
            v21 = 1;
            v14 = 1;
          }
          *(_DWORD *)(a1 + 112) = v14;
          CFDictionarySetNumber();
          v15 = xpc_dictionary_create(0, 0, 0);
          xpc_dictionary_set_string(v15, "function", "startAudio");
          xpc_dictionary_set_cf_object();
          v10 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v15, &object);
          xpc_release(v15);
          if (!(_DWORD)v10)
          {
            v16 = (const __CFDictionary *)xpc_dictionary_copy_cf_object();
            if (v16)
            {
              v17 = v16;
              Mutable = CFDictionaryCreateMutableCopy(0, 0, v16);
              CFRelease(v17);
              if (!Mutable)
                goto LABEL_88;
            }
            else
            {
              Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
              if (!Mutable)
              {
LABEL_88:
                APSLogErrorAt();
                v10 = 4294960596;
                goto LABEL_89;
              }
            }
            CFDictionarySetNumber();
            if (a3)
              *a3 = Mutable;
            else
              CFRelease(Mutable);
            if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
              && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v10 = 0;
            goto LABEL_73;
          }
          APSLogErrorAt();
LABEL_89:
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            goto LABEL_54;
          }
          goto LABEL_73;
        }
LABEL_42:
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v12 = "stopAudio";
        goto LABEL_57;
      }
    }
    v10 = 200453;
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      goto LABEL_54;
    }
    goto LABEL_73;
  }
  if (!*(_BYTE *)(a1 + 56))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopPresentation", (uint64_t)"{%kO=%i%kO=%O}");
    goto LABEL_25;
  }
  v10 = 200453;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
LABEL_54:
    LogPrintF();
  }
LABEL_73:
  if (object)
    xpc_release(object);
  if (v7)
    CFRelease(v7);
  return v10;
}

uint64_t AirPlayReceiverUI_StopAudio(uint64_t a1, uint64_t a2)
{
  int Int64;
  BOOL v5;
  xpc_object_t v6;
  uint64_t v7;

  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960551;
  }
  if (!*(_BYTE *)(a1 + 40))
    return 0;
  if (!a2)
  {
    if (!*(_DWORD *)(a1 + 112))
      goto LABEL_15;
LABEL_12:
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  CFDictionaryGetInt64();
  Int64 = CFDictionaryGetInt64();
  if (*(_DWORD *)(a1 + 112) != Int64)
    goto LABEL_12;
  if (Int64)
  {
LABEL_16:
    v5 = 0;
    goto LABEL_20;
  }
LABEL_15:
  if (*(_DWORD *)(a1 + 128))
    goto LABEL_16;
  v5 = *(_DWORD *)(a1 + 160) == 0;
LABEL_20:
  v6 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v6, "function", "stopAudio");
  if (a2)
    xpc_dictionary_set_cf_object();
  v7 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v6, 0);
  xpc_release(v6);
  if ((_DWORD)v7)
  {
    APSLogErrorAt();
    return v7;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v7 = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 112) = 0;
  if (!v5)
  {
    if (!*(_DWORD *)(a1 + 128) && !*(_DWORD *)(a1 + 160))
      _AirPlayReceiverUI_ActiveSessionsStopped(a1);
    return 0;
  }
  return v7;
}

uint64_t AirPlayReceiverUI_UpdateAudioMetaData(uint64_t a1)
{
  xpc_object_t v2;
  uint64_t v3;

  if (a1)
  {
    if (*(_BYTE *)(a1 + 40))
    {
      v2 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_string(v2, "function", "updateAudioMetaData");
      xpc_dictionary_set_cf_object();
      v3 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v2, 0);
      xpc_release(v2);
      if ((_DWORD)v3)
        APSLogErrorAt();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960551;
  }
  return v3;
}

uint64_t AirPlayReceiverUI_UpdateAudioProgress(uint64_t a1, double a2, double a3)
{
  xpc_object_t v6;
  uint64_t v7;

  if (a1)
  {
    if (*(_BYTE *)(a1 + 40))
    {
      v6 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_string(v6, "function", "updateAudioProgress");
      xpc_dictionary_set_double(v6, "position", a2);
      xpc_dictionary_set_double(v6, "duration", a3);
      v7 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v6, 0);
      xpc_release(v6);
      if ((_DWORD)v7)
        APSLogErrorAt();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960551;
  }
  return v7;
}

uint64_t AirPlayReceiverUI_StartVideo(uint64_t a1, uint64_t a2, uint64_t a3, CFDictionaryRef theDict, CFMutableDictionaryRef *a5)
{
  CFMutableDictionaryRef MutableCopy;
  CFMutableDictionaryRef v10;
  uint64_t Int64;
  const __CFString *TypedValue;
  __CFString *v13;
  _BOOL4 v14;
  uint64_t v15;
  int v16;
  int v17;
  const char *v18;
  int v19;
  int v20;
  const void *v21;
  xpc_object_t v22;
  const __CFDictionary *v23;
  const __CFDictionary *v24;
  CFMutableDictionaryRef Mutable;
  uint64_t v26;
  int v27;
  uint64_t **v28;
  uint64_t v30;
  CFMutableDictionaryRef *v31;
  xpc_object_t object;
  int v33;

  v33 = 0;
  object = 0;
  if (!a1)
  {
    APSLogErrorAt();
    v10 = 0;
    v15 = 4294960551;
    goto LABEL_118;
  }
  if (!*(_BYTE *)(a1 + 40))
  {
    v15 = 0;
    v10 = 0;
    goto LABEL_104;
  }
  if (theDict)
    MutableCopy = CFDictionaryCreateMutableCopy(0, 0, theDict);
  else
    MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v10 = MutableCopy;
  if (!MutableCopy)
  {
    APSLogErrorAt();
    v15 = 4294960568;
    goto LABEL_118;
  }
  v30 = a3;
  Int64 = CFDictionaryGetInt64();
  CFStringGetTypeID();
  TypedValue = (const __CFString *)CFDictionaryGetTypedValue();
  CFStringGetTypeID();
  v13 = (__CFString *)CFDictionaryGetTypedValue();
  v31 = a5;
  if (CFDictionaryGetInt64() || v13 == CFSTR("music"))
  {
    v14 = 1;
  }
  else if (v13)
  {
    v14 = CFEqual(v13, CFSTR("music")) != 0;
  }
  else
  {
    v14 = 0;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!TypedValue || !CFEqual(CFSTR("default"), TypedValue) && !CFEqual(CFSTR("moviePlayback"), TypedValue))
  {
    if (!v14
      && (!v13
       || v13 == CFSTR("movie")
       || CFEqual(v13, CFSTR("movie"))
       || v13 == CFSTR("tvshow")
       || CFEqual(v13, CFSTR("tvshow"))))
    {
      TypedValue = CFSTR("moviePlayback");
    }
    else
    {
      TypedValue = CFSTR("default");
    }
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_DWORD *)(a1 + 128) || *(_QWORD *)(a1 + 120) == Int64 || v14)
  {
LABEL_46:
    if (*(_DWORD *)(a1 + 160) && !*(_BYTE *)(a1 + 164))
    {
      if (*(_BYTE *)(a1 + 56))
      {
        v15 = 200453;
        if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
          && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
        {
          goto LABEL_65;
        }
        goto LABEL_104;
      }
      if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
        && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopVideo", (uint64_t)"{%kO=%i%kO=%O}");
    }
    v16 = *(_DWORD *)(a1 + 112);
    if (v16 && *(_QWORD *)(a1 + 104) != Int64)
    {
      v17 = gLogCategory_AirPlayReceiverUIXPCServerCore;
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_66;
    }
    else
    {
      if (!*(_DWORD *)(a1 + 160) || *(_QWORD *)(a1 + 152) == Int64 || !*(_BYTE *)(a1 + 164))
        goto LABEL_79;
      v17 = gLogCategory_AirPlayReceiverUIXPCServerCore;
      if (!*(_BYTE *)(a1 + 56))
      {
        if (!v16)
        {
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          v18 = "stopVideo";
LABEL_78:
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)v18, (uint64_t)"{%kO=%i%kO=%O}");
LABEL_79:
          *(_QWORD *)(a1 + 184) = a2;
          *(_QWORD *)(a1 + 192) = v30;
          *(_QWORD *)(a1 + 152) = Int64;
          v19 = *(_DWORD *)(a1 + 96);
          v20 = v19 + 1;
          *(_DWORD *)(a1 + 96) = v19 + 1;
          v33 = v19 + 1;
          if (v19 == -1)
          {
            *(_DWORD *)(a1 + 96) = 1;
            v33 = 1;
            v20 = 1;
          }
          *(_DWORD *)(a1 + 160) = v20;
          *(_BYTE *)(a1 + 164) = v14;
          v21 = *(const void **)(a1 + 168);
          CFRetain(TypedValue);
          *(_QWORD *)(a1 + 168) = TypedValue;
          if (v21)
            CFRelease(v21);
          CFDictionarySetNumber();
          _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"startingVideo", (uint64_t)"{%kO=%O}");
          v22 = xpc_dictionary_create(0, 0, 0);
          xpc_dictionary_set_string(v22, "function", "startVideo");
          xpc_dictionary_set_cf_object();
          v15 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v22, &object);
          xpc_release(v22);
          if (!(_DWORD)v15)
          {
            v23 = (const __CFDictionary *)xpc_dictionary_copy_cf_object();
            if (v23)
            {
              v24 = v23;
              Mutable = CFDictionaryCreateMutableCopy(0, 0, v23);
              CFRelease(v24);
              if (!Mutable)
                goto LABEL_117;
            }
            else
            {
              Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
              if (!Mutable)
              {
LABEL_117:
                APSLogErrorAt();
                v15 = 4294960596;
                goto LABEL_118;
              }
            }
            CFDictionarySetNumber();
            if (v31)
              *v31 = Mutable;
            else
              CFRelease(Mutable);
            if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
              && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
            {
              LogPrintF();
            }
            v26 = CFDictionaryGetInt64();
            v27 = v26 != 0;
            if (*(unsigned __int8 *)(a1 + 176) == v27)
            {
              v15 = 0;
            }
            else
            {
              v28 = *(uint64_t ***)(a1 + 48);
              if (v26)
              {
                for (; v28; v28 = (uint64_t **)*v28)
                  ((void (*)(const char *, _QWORD, uint64_t *))v28[2])("startPlayingOverP2P", 0, v28[3]);
              }
              else
              {
                for (; v28; v28 = (uint64_t **)*v28)
                  ((void (*)(const char *, _QWORD, uint64_t *))v28[2])("stopPlayingOverP2P", 0, v28[3]);
              }
              v15 = 0;
              *(_BYTE *)(a1 + 176) = v27;
            }
            goto LABEL_104;
          }
          APSLogErrorAt();
LABEL_118:
          if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 60
            && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
          {
            goto LABEL_65;
          }
          goto LABEL_104;
        }
LABEL_66:
        if (v17 <= 50 && (v17 != -1 || _LogCategory_Initialize()))
          LogPrintF();
        v18 = "stopAudio";
        goto LABEL_78;
      }
    }
    v15 = 200453;
    if (v17 <= 50 && (v17 != -1 || _LogCategory_Initialize()))
      goto LABEL_65;
    goto LABEL_104;
  }
  if (!*(_BYTE *)(a1 + 56))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    _AirPlayReceiverUI_NotifyObserversF(a1, (uint64_t)"stopPresentation", (uint64_t)"{%kO=%i%kO=%O}");
    goto LABEL_46;
  }
  v15 = 200453;
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
LABEL_65:
    LogPrintF();
  }
LABEL_104:
  if (object)
    xpc_release(object);
  if (v10)
    CFRelease(v10);
  return v15;
}

uint64_t AirPlayReceiverUI_StopVideo(uint64_t a1, const __CFDictionary *a2)
{
  int Int64;
  uint64_t **i;
  BOOL v6;
  __CFDictionary *MutableCopy;
  const __CFDictionary *v8;
  xpc_object_t v9;
  uint64_t v10;
  uint64_t **j;

  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!a1)
  {
    APSLogErrorAt();
    return 4294960551;
  }
  if (!*(_BYTE *)(a1 + 40))
    return 0;
  if (a2)
  {
    CFDictionaryGetInt64();
    Int64 = CFDictionaryGetInt64();
  }
  else
  {
    Int64 = 0;
  }
  if (Int64 != *(_DWORD *)(a1 + 160))
  {
    if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
      && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 0;
  }
  for (i = *(uint64_t ***)(a1 + 48); i; i = (uint64_t **)*i)
    ((void (*)(const char *, _QWORD, uint64_t *))i[2])("stoppingVideo", 0, i[3]);
  v6 = !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128) && *(_DWORD *)(a1 + 160) == 0;
  if (*(_BYTE *)(a1 + 144))
  {
    if (a2)
      MutableCopy = CFDictionaryCreateMutableCopy(0, 0, a2);
    else
      MutableCopy = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    a2 = MutableCopy;
    if (!MutableCopy)
    {
      APSLogErrorAt();
      return 4294960568;
    }
    CFDictionarySetValue(MutableCopy, CFSTR("closeAll"), (const void *)*MEMORY[0x24BDBD270]);
    v8 = a2;
  }
  else
  {
    v8 = 0;
  }
  v9 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v9, "function", "stopVideo");
  if (a2)
    xpc_dictionary_set_cf_object();
  v10 = _AirPlayReceiverUI_SendMessageWithReplySync((NSObject **)a1, (uint64_t)v9, 0);
  xpc_release(v9);
  if ((_DWORD)v10)
  {
    APSLogErrorAt();
    if (!v8)
      return v10;
    goto LABEL_44;
  }
  if (*(_BYTE *)(a1 + 176))
  {
    for (j = *(uint64_t ***)(a1 + 48); j; j = (uint64_t **)*j)
      ((void (*)(const char *, _QWORD, uint64_t *))j[2])("stopPlayingOverP2P", 0, j[3]);
    *(_BYTE *)(a1 + 176) = 0;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(_QWORD *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 0;
  *(_BYTE *)(a1 + 164) = 0;
  if (!v6 && !*(_DWORD *)(a1 + 112) && !*(_DWORD *)(a1 + 128))
    _AirPlayReceiverUI_ActiveSessionsStopped(a1);
  if (v8)
LABEL_44:
    CFRelease(v8);
  return v10;
}

uint64_t AirPlayReceiverUI_EnsurePINVisible(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  const void *v9;
  NSObject *v10;
  NSObject *v11;
  unint64_t v12;
  NSObject *v13;
  int64_t v14;
  dispatch_time_t v15;
  uint64_t v16;

  if (!*(_BYTE *)(a1 + 40))
    return 0;
  if (!*(_BYTE *)(a1 + 56))
    goto LABEL_13;
  if (*(_DWORD *)(a1 + 112))
  {
    if (*(_QWORD *)(a1 + 104) != a3)
      goto LABEL_24;
    if (!*(_DWORD *)(a1 + 128))
      goto LABEL_11;
LABEL_8:
    if (*(_QWORD *)(a1 + 120) != a3)
      goto LABEL_24;
    goto LABEL_11;
  }
  if (*(_DWORD *)(a1 + 128))
    goto LABEL_8;
  if (!*(_DWORD *)(a1 + 160))
    goto LABEL_13;
LABEL_11:
  if (!*(_DWORD *)(a1 + 160) || *(_QWORD *)(a1 + 152) == a3)
  {
LABEL_13:
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (Mutable)
    {
      v5 = Mutable;
      CFDictionarySetCString();
      CFDictionarySetCString();
      v6 = mach_absolute_time();
      v7 = *(_QWORD *)(a1 + 88);
      v8 = SecondsToUpTicks();
      v9 = *(const void **)(a1 + 72);
      CFRetain(v5);
      *(_QWORD *)(a1 + 72) = v5;
      if (v9)
        CFRelease(v9);
      v10 = *(NSObject **)(a1 + 64);
      if (v10)
      {
        dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
        dispatch_release(v10);
        *(_QWORD *)(a1 + 64) = 0;
      }
      v11 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, MEMORY[0x24BDAC9B8]);
      *(_QWORD *)(a1 + 64) = v11;
      if (v11)
      {
        v12 = v6 - v7;
        dispatch_set_context(v11, (void *)a1);
        dispatch_source_set_event_handler_f(*(dispatch_source_t *)(a1 + 64), (dispatch_function_t)_ShowPINTimerFired);
        v13 = *(NSObject **)(a1 + 64);
        if (v12 >= v8)
          v14 = 1000000000;
        else
          v14 = 3000000000;
        v15 = dispatch_time(0, v14);
        dispatch_source_set_timer(v13, v15, 0x7FFFFFFFFFFFFFFFuLL, 0x3B9ACA00uLL);
        dispatch_resume(*(dispatch_object_t *)(a1 + 64));
        v16 = 0;
      }
      else
      {
        APSLogErrorAt();
        v16 = 4294960596;
      }
      CFRelease(v5);
    }
    else
    {
      APSLogErrorAt();
      return 4294960568;
    }
    return v16;
  }
LABEL_24:
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294960575;
}

void _ShowPINTimerFired(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;

  v2 = *(NSObject **)(a1 + 64);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
    dispatch_release(v2);
    *(_QWORD *)(a1 + 64) = 0;
  }
  v3 = *(_QWORD *)(a1 + 72);
  if (v3)
  {
    if (!AirPlayReceiverUI_Perform(a1, (uint64_t)CFSTR("showPIN"), v3, 0))
    {
      *(_BYTE *)(a1 + 80) = 1;
      *(_QWORD *)(a1 + 88) = mach_absolute_time();
    }
    CFRelease(*(CFTypeRef *)(a1 + 72));
    *(_QWORD *)(a1 + 72) = 0;
  }
}

uint64_t AirPlayReceiverUI_EnsurePINHidden(uint64_t a1)
{
  NSObject *v2;

  if (!*(_BYTE *)(a1 + 40))
    return 0;
  v2 = *(NSObject **)(a1 + 64);
  if (v2)
  {
    dispatch_source_cancel(*(dispatch_source_t *)(a1 + 64));
    dispatch_release(v2);
    *(_QWORD *)(a1 + 64) = 0;
  }
  if (!*(_BYTE *)(a1 + 80))
    return 0;
  *(_BYTE *)(a1 + 80) = 0;
  *(_QWORD *)(a1 + 88) = mach_absolute_time();
  return AirPlayReceiverUI_Perform(a1, (uint64_t)CFSTR("hidePIN"), 0, 0);
}

uint64_t AirPlayReceiverUI_UpdateStatus(uint64_t a1, unsigned __int8 a2)
{
  if (!*(_BYTE *)(a1 + 40))
    return 0;
  if (a2 < gLogCategory_AirPlayReceiverUIVisualStatus
    || gLogCategory_AirPlayReceiverUIVisualStatus == -1 && !_LogCategory_Initialize())
  {
    return 0;
  }
  VASPrintF();
  APSLogErrorAt();
  return 4294960596;
}

uint64_t APReceiverUIControllerGetShared()
{
  if (APReceiverUIControllerGetShared_once != -1)
    dispatch_once(&APReceiverUIControllerGetShared_once, &__block_literal_global_2783);
  return APReceiverUIControllerGetShared_ui;
}

uint64_t sharedUI_HandleUIEvent(char *cStr)
{
  CFStringRef v1;

  v1 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], cStr, 0x8000100u);
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 50
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterPostNotification();
  if (v1)
    CFRelease(v1);
  return 0;
}

uint64_t sharedUI_ShowPIN(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *DerivedStorage;
  uint64_t v8;
  _QWORD block[9];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;

  v11 = 0;
  v12 = &v11;
  v13 = 0x2000000000;
  v14 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (pthread_main_np())
  {
    v8 = AirPlayReceiverUI_EnsurePINVisible(*DerivedStorage, a2, a3);
    *((_DWORD *)v12 + 6) = v8;
  }
  else
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_ShowPIN_block_invoke;
    block[3] = &unk_24E21F008;
    block[4] = &v11;
    block[5] = DerivedStorage;
    block[6] = a2;
    block[7] = a3;
    block[8] = a4;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    v8 = *((unsigned int *)v12 + 6);
  }
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_HidePIN()
{
  uint64_t *DerivedStorage;
  uint64_t v1;
  _QWORD v3[6];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2000000000;
  v7 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (pthread_main_np())
  {
    v1 = AirPlayReceiverUI_EnsurePINHidden(*DerivedStorage);
    *((_DWORD *)v5 + 6) = v1;
  }
  else
  {
    v3[0] = MEMORY[0x24BDAC760];
    v3[1] = 0x40000000;
    v3[2] = __sharedUI_HidePIN_block_invoke;
    v3[3] = &unk_24E21F030;
    v3[4] = &v4;
    v3[5] = DerivedStorage;
    dispatch_sync(MEMORY[0x24BDAC9B8], v3);
    v1 = *((unsigned int *)v5 + 6);
  }
  _Block_object_dispose(&v4, 8);
  return v1;
}

uint64_t sharedUI_ShowMessage(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t *DerivedStorage;
  uint64_t updated;
  _QWORD block[7];
  int v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  int v13;

  v10 = 0;
  v11 = &v10;
  v12 = 0x2000000000;
  v13 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= a2
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (pthread_main_np())
  {
    updated = AirPlayReceiverUI_UpdateStatus(*DerivedStorage, a2);
    *((_DWORD *)v11 + 6) = updated;
  }
  else
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_ShowMessage_block_invoke;
    block[3] = &unk_24E21F058;
    block[4] = &v10;
    block[5] = DerivedStorage;
    v9 = a2;
    block[6] = a3;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    updated = *((unsigned int *)v11 + 6);
  }
  _Block_object_dispose(&v10, 8);
  return updated;
}

uint64_t sharedUI_StartScreenPresentation(uint64_t a1, const __CFDictionary *a2, __CFDictionary **a3)
{
  uint64_t *DerivedStorage;
  const __CFAllocator *v6;
  __CFDictionary *MutableCopy;
  __CFDictionary *v8;
  const void *v9;
  int started;
  uint64_t v11;
  _QWORD block[8];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;

  v14 = 0;
  v15 = &v14;
  v16 = 0x2000000000;
  v17 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  v6 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  if (a2)
    MutableCopy = CFDictionaryCreateMutableCopy(v6, 0, a2);
  else
    MutableCopy = CFDictionaryCreateMutable(v6, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v8 = MutableCopy;
  v9 = (const void *)*MEMORY[0x24BDBD270];
  CFDictionarySetValue(MutableCopy, CFSTR("hasAudio"), (const void *)*MEMORY[0x24BDBD270]);
  CFDictionarySetValue(v8, CFSTR("presentationType"), CFSTR("mirror"));
  CFDictionarySetValue(v8, CFSTR("hijackAware"), v9);
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!pthread_main_np())
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_StartScreenPresentation_block_invoke;
    block[3] = &unk_24E21F080;
    block[4] = &v14;
    block[5] = DerivedStorage;
    block[6] = v8;
    block[7] = a3;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    if (!v8)
      goto LABEL_11;
    goto LABEL_10;
  }
  started = AirPlayReceiverUI_StartPresentation(*DerivedStorage, v8, a3);
  *((_DWORD *)v15 + 6) = started;
  if (v8)
LABEL_10:
    CFRelease(v8);
LABEL_11:
  v11 = *((unsigned int *)v15 + 6);
  _Block_object_dispose(&v14, 8);
  return v11;
}

uint64_t sharedUI_StopScreenPresentation(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t *DerivedStorage;
  const __CFAllocator *v4;
  __CFDictionary *MutableCopy;
  const __CFDictionary *v6;
  int v7;
  uint64_t v8;
  _QWORD block[7];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;

  v11 = 0;
  v12 = &v11;
  v13 = 0x2000000000;
  v14 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  v4 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  if (a2)
    MutableCopy = CFDictionaryCreateMutableCopy(v4, 0, a2);
  else
    MutableCopy = CFDictionaryCreateMutable(v4, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v6 = MutableCopy;
  CFDictionarySetValue(MutableCopy, CFSTR("presentationType"), CFSTR("mirror"));
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!pthread_main_np())
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_StopScreenPresentation_block_invoke;
    block[3] = &unk_24E21F0A8;
    block[4] = &v11;
    block[5] = DerivedStorage;
    block[6] = v6;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    if (!v6)
      goto LABEL_11;
    goto LABEL_10;
  }
  v7 = AirPlayReceiverUI_StopPresentation(*DerivedStorage, v6);
  *((_DWORD *)v12 + 6) = v7;
  if (v6)
LABEL_10:
    CFRelease(v6);
LABEL_11:
  v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_StartSession(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  uint64_t *v6;
  int started;
  uint64_t v8;
  _QWORD v10[8];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;

  v11 = 0;
  v12 = &v11;
  v13 = 0x2000000000;
  v14 = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    v6 = (uint64_t *)DerivedStorage;
    if (pthread_main_np())
    {
      started = AirPlayReceiverUI_StartAudio(*v6, a2, a3);
      *((_DWORD *)v12 + 6) = started;
    }
    else
    {
      v10[0] = MEMORY[0x24BDAC760];
      v10[1] = 0x40000000;
      v10[2] = __sharedUI_StartSession_block_invoke;
      v10[3] = &unk_24E21F0D0;
      v10[4] = &v11;
      v10[5] = v6;
      v10[6] = a2;
      v10[7] = a3;
      dispatch_sync(MEMORY[0x24BDAC9B8], v10);
    }
  }
  v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_StopSession(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage;
  uint64_t *v4;
  int v5;
  uint64_t v6;
  _QWORD block[7];
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;

  v9 = 0;
  v10 = &v9;
  v11 = 0x2000000000;
  v12 = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (a2)
  {
    v4 = (uint64_t *)DerivedStorage;
    if (pthread_main_np())
    {
      v5 = AirPlayReceiverUI_StopAudio(*v4, a2);
      *((_DWORD *)v10 + 6) = v5;
    }
    else
    {
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 0x40000000;
      block[2] = __sharedUI_StopSession_block_invoke;
      block[3] = &unk_24E21F0F8;
      block[4] = &v9;
      block[5] = v4;
      block[6] = a2;
      dispatch_sync(MEMORY[0x24BDAC9B8], block);
    }
  }
  v6 = *((unsigned int *)v10 + 6);
  _Block_object_dispose(&v9, 8);
  return v6;
}

uint64_t sharedUI_StartVideoPlaybackV1(uint64_t a1, uint64_t a2, uint64_t a3, const __CFDictionary *a4, CFMutableDictionaryRef *a5)
{
  uint64_t *DerivedStorage;
  uint64_t started;
  _QWORD v12[10];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;

  v13 = 0;
  v14 = &v13;
  v15 = 0x2000000000;
  v16 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    started = AirPlayReceiverUI_StartVideo(*DerivedStorage, a2, a3, a4, a5);
    *((_DWORD *)v14 + 6) = started;
  }
  else
  {
    v12[0] = MEMORY[0x24BDAC760];
    v12[1] = 0x40000000;
    v12[2] = __sharedUI_StartVideoPlaybackV1_block_invoke;
    v12[3] = &unk_24E21F120;
    v12[4] = &v13;
    v12[5] = DerivedStorage;
    v12[6] = a2;
    v12[7] = a3;
    v12[8] = a4;
    v12[9] = a5;
    dispatch_sync(MEMORY[0x24BDAC9B8], v12);
    started = *((unsigned int *)v14 + 6);
  }
  _Block_object_dispose(&v13, 8);
  return started;
}

uint64_t sharedUI_StopVideoPlaybackV1(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t *DerivedStorage;
  uint64_t v4;
  _QWORD block[7];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;

  v7 = 0;
  v8 = &v7;
  v9 = 0x2000000000;
  v10 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    v4 = AirPlayReceiverUI_StopVideo(*DerivedStorage, a2);
    *((_DWORD *)v8 + 6) = v4;
  }
  else
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_StopVideoPlaybackV1_block_invoke;
    block[3] = &unk_24E21F148;
    block[4] = &v7;
    block[5] = DerivedStorage;
    block[6] = a2;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    v4 = *((unsigned int *)v8 + 6);
  }
  _Block_object_dispose(&v7, 8);
  return v4;
}

uint64_t sharedUI_ControlVideoPlaybackV1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *DerivedStorage;
  uint64_t v8;
  _QWORD block[9];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;

  v11 = 0;
  v12 = &v11;
  v13 = 0x2000000000;
  v14 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    v8 = AirPlayReceiverUI_Perform(*DerivedStorage, a2, a3, a4);
    *((_DWORD *)v12 + 6) = v8;
  }
  else
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_ControlVideoPlaybackV1_block_invoke;
    block[3] = &unk_24E21F170;
    block[4] = &v11;
    block[5] = DerivedStorage;
    block[6] = a2;
    block[7] = a3;
    block[8] = a4;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    v8 = *((unsigned int *)v12 + 6);
  }
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_CopyPropertyForQualifier(uint64_t a1, uint64_t a2, uint64_t a3, NSObject ***a4)
{
  uint64_t *DerivedStorage;
  uint64_t v8;
  _QWORD block[9];
  uint64_t v11;
  int *v12;
  uint64_t v13;
  int v14;

  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  v11 = 0;
  v12 = (int *)&v11;
  v13 = 0x2000000000;
  v14 = 0;
  if (pthread_main_np())
  {
    *a4 = AirPlayReceiverUI_CopyProperty(*DerivedStorage, a2, a3, v12 + 6);
  }
  else
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_CopyPropertyForQualifier_block_invoke;
    block[3] = &unk_24E21F198;
    block[6] = DerivedStorage;
    block[7] = a2;
    block[8] = a3;
    block[4] = &v11;
    block[5] = a4;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
  }
  v8 = v12[6];
  _Block_object_dispose(&v11, 8);
  return v8;
}

uint64_t sharedUI_SetPropertyWithQualifier(uint64_t a1, const __CFString *a2, uint64_t a3, const void *a4)
{
  uint64_t *DerivedStorage;
  uint64_t v8;
  _QWORD block[9];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;

  v11 = 0;
  v12 = &v11;
  v13 = 0x2000000000;
  v14 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (pthread_main_np())
  {
    v8 = AirPlayReceiverUI_SetProperty(*DerivedStorage, a2, a3, a4);
    *((_DWORD *)v12 + 6) = v8;
  }
  else
  {
    block[0] = MEMORY[0x24BDAC760];
    block[1] = 0x40000000;
    block[2] = __sharedUI_SetPropertyWithQualifier_block_invoke;
    block[3] = &unk_24E21F1C0;
    block[4] = &v11;
    block[5] = DerivedStorage;
    block[6] = a2;
    block[7] = a3;
    block[8] = a4;
    dispatch_sync(MEMORY[0x24BDAC9B8], block);
    v8 = *((unsigned int *)v12 + 6);
  }
  _Block_object_dispose(&v11, 8);
  return v8;
}

void sharedUI_Finalize()
{
  if (gLogCategory_AirPlayReceiverUIXPCServerCore > 100
    || gLogCategory_AirPlayReceiverUIXPCServerCore == -1 && !_LogCategory_Initialize())
  {
    __break(1u);
  }
  LogPrintF();
  __break(1u);
}

CFStringRef sharedUI_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;

  v2 = CFGetAllocator(a1);
  return CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverUIControllerShared %p>"), a1);
}

uint64_t sharedUI_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, _QWORD *a4)
{
  uint64_t *DerivedStorage;
  uint64_t v7;
  CFTypeRef *v8;
  void *v9;
  uint64_t v10;
  _QWORD block[8];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  int v16;

  v13 = 0;
  v14 = &v13;
  v15 = 0x2000000000;
  v16 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("SBufConsumer")))
  {
    *((_DWORD *)v14 + 6) = -12784;
  }
  else
  {
    if (CFEqual(a2, CFSTR("HasActiveSession")))
    {
      v7 = *DerivedStorage;
      if (*(_DWORD *)(*DerivedStorage + 112))
      {
        v8 = (CFTypeRef *)MEMORY[0x24BDBD270];
      }
      else
      {
        v8 = (CFTypeRef *)MEMORY[0x24BDBD270];
        if (!*(_DWORD *)(v7 + 128) && !*(_DWORD *)(v7 + 160))
          v8 = (CFTypeRef *)MEMORY[0x24BDBD268];
      }
      v9 = (void *)CFRetain(*v8);
    }
    else
    {
      if (!pthread_main_np())
      {
        block[0] = MEMORY[0x24BDAC760];
        block[1] = 0x40000000;
        block[2] = __sharedUI_CopyProperty_block_invoke;
        block[3] = &unk_24E21EF68;
        block[6] = DerivedStorage;
        block[7] = a2;
        block[4] = &v13;
        block[5] = a4;
        dispatch_sync(MEMORY[0x24BDAC9B8], block);
        goto LABEL_17;
      }
      v9 = AirPlayReceiverUI_CopyProperty(*DerivedStorage, (uint64_t)a2, 0, (int *)v14 + 6);
    }
    *a4 = v9;
  }
LABEL_17:
  v10 = *((unsigned int *)v14 + 6);
  _Block_object_dispose(&v13, 8);
  return v10;
}

uint64_t sharedUI_SetProperty(uint64_t a1, const __CFString *a2, const void *a3)
{
  uint64_t *DerivedStorage;
  uint64_t v6;
  int updated;
  double v9;
  double v10;
  double v11;
  double v12;
  NSObject *v13;
  _QWORD *v14;
  _QWORD block[8];
  _QWORD v16[8];
  _QWORD v17[7];
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  int v21;

  v18 = 0;
  v19 = &v18;
  v20 = 0x2000000000;
  v21 = 0;
  DerivedStorage = (uint64_t *)CMBaseObjectGetDerivedStorage();
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!CFEqual(a2, CFSTR("ClientName"))
    && !CFEqual(a2, CFSTR("IsWiredLink"))
    && !CFEqual(a2, CFSTR("IsP2PWiFi"))
    && !CFEqual(a2, CFSTR("SessionReceiverAddress")))
  {
    if (CFEqual(a2, CFSTR("AudioMetadata")))
    {
      if (pthread_main_np())
      {
        updated = AirPlayReceiverUI_UpdateAudioMetaData(*DerivedStorage);
LABEL_23:
        *((_DWORD *)v19 + 6) = updated;
        goto LABEL_13;
      }
      v17[0] = MEMORY[0x24BDAC760];
      v17[1] = 0x40000000;
      v17[2] = __sharedUI_SetProperty_block_invoke;
      v17[3] = &unk_24E21EF90;
      v17[4] = &v18;
      v17[5] = DerivedStorage;
      v17[6] = a3;
      v13 = MEMORY[0x24BDAC9B8];
      v14 = v17;
    }
    else if (CFEqual(a2, CFSTR("AudioProgress")))
    {
      CFDictionaryGetDouble();
      v10 = v9;
      CFDictionaryGetDouble();
      v12 = v11;
      if (pthread_main_np())
      {
        updated = AirPlayReceiverUI_UpdateAudioProgress(*DerivedStorage, v10, v12);
        goto LABEL_23;
      }
      v16[0] = MEMORY[0x24BDAC760];
      v16[1] = 0x40000000;
      v16[2] = __sharedUI_SetProperty_block_invoke_2;
      v16[3] = &unk_24E21EFB8;
      v16[4] = &v18;
      v16[5] = DerivedStorage;
      *(double *)&v16[6] = v10;
      *(double *)&v16[7] = v12;
      v13 = MEMORY[0x24BDAC9B8];
      v14 = v16;
    }
    else
    {
      if (pthread_main_np())
      {
        updated = AirPlayReceiverUI_SetProperty(*DerivedStorage, a2, 0, a3);
        goto LABEL_23;
      }
      block[0] = MEMORY[0x24BDAC760];
      block[1] = 0x40000000;
      block[2] = __sharedUI_SetProperty_block_invoke_3;
      block[3] = &unk_24E21EFE0;
      block[4] = &v18;
      block[5] = DerivedStorage;
      block[6] = a2;
      block[7] = a3;
      v13 = MEMORY[0x24BDAC9B8];
      v14 = block;
    }
    dispatch_sync(v13, v14);
    goto LABEL_13;
  }
  if (gLogCategory_AirPlayReceiverUIXPCServerCore <= 30
    && (gLogCategory_AirPlayReceiverUIXPCServerCore != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
LABEL_13:
  v6 = *((unsigned int *)v19 + 6);
  _Block_object_dispose(&v18, 8);
  return v6;
}

uint64_t rcsSenderUIEventsChannel_handleMediaDataControlRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v11)(uint64_t, uint64_t);
  int v12;

  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 30
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v11)
  {
    v12 = v11(a6, a5);
    if (!v12)
      return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v12);
  }
  else
  {
    v12 = -12782;
  }
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return APMediaDataControlServerSendResponse(a1, a2, a4, 0, v12);
}

void rcsSenderUIEventsChannel_handleMediaDataControlFailure(uint64_t a1, int a2, const void *a3)
{
  uint64_t DerivedStorage;
  NSObject *v6;
  _QWORD block[5];
  int v8;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFRetain(a3);
  v6 = *(NSObject **)(DerivedStorage + 64);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __rcsSenderUIEventsChannel_handleMediaDataControlFailure_block_invoke;
  block[3] = &__block_descriptor_tmp_27;
  block[4] = a3;
  v8 = a2;
  dispatch_async(v6, block);
}

void __rcsSenderUIEventsChannel_handleMediaDataControlFailure_block_invoke(uint64_t a1)
{
  rcsSenderUIEventsChannel_callDelegateHandleFailed(*(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 40));
  CFRelease(*(CFTypeRef *)(a1 + 32));
}

void rcsSenderUIEventsChannel_callDelegateHandleFailed(uint64_t a1, uint64_t a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  const void *v6;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(_QWORD *)(DerivedStorage + 40))
    return;
  v5 = DerivedStorage;
  if (*(_QWORD *)(DerivedStorage + 48))
  {
    v6 = (const void *)FigCFWeakReferenceHolderCopyReferencedObject();
    if (!v6)
    {
      if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90
        && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
         || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return;
    }
  }
  else
  {
    v6 = 0;
  }
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  (*(void (**)(const void *, uint64_t, uint64_t))(v5 + 40))(v6, a1, a2);
  if (v6)
    CFRelease(v6);
}

uint64_t rcsSenderUIEventsChannel_Start()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (*(_BYTE *)(DerivedStorage + 89) || *(_BYTE *)(DerivedStorage + 88))
  {
    APSLogErrorAt();
    v2 = 4294960587;
LABEL_9:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
    rcsSenderUIEventsChannel_stop();
    return v2;
  }
  v1 = *(_QWORD *)(DerivedStorage + 72);
  if (v1)
  {
    v4 = *(_QWORD *)(DerivedStorage + 72);
    v5 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v4, (dispatch_function_t)controlServer_startInternal);
    v2 = v5;
    if ((_DWORD)v5)
    {
      APSLogErrorAt();
      goto LABEL_9;
    }
  }
  *(_BYTE *)(DerivedStorage + 88) = 1;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return 0;
}

uint64_t rcsSenderUIEventsChannel_HandleIncomingMessage(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage;
  const __CFDictionary *Value;
  const __CFData *v5;
  const __CFData *v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD block[6];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (!*(_BYTE *)(DerivedStorage + 88))
  {
    APSLogErrorAt();
    v8 = 4294960587;
    goto LABEL_10;
  }
  if (!a2)
  {
    APSLogErrorAt();
LABEL_22:
    v8 = 4294960591;
    goto LABEL_10;
  }
  Value = (const __CFDictionary *)CFDictionaryGetValue(a2, CFSTR("params"));
  if (!Value)
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel > 90
      || gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel == -1
      && !_LogCategory_Initialize())
    {
      goto LABEL_22;
    }
LABEL_18:
    LogPrintF();
    goto LABEL_22;
  }
  v5 = (const __CFData *)CFDictionaryGetValue(Value, CFSTR("data"));
  if (!v5)
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel > 90
      || gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel == -1
      && !_LogCategory_Initialize())
    {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  v6 = v5;
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 30
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    CFDataGetLength(v6);
    LogPrintF();
  }
  CFRetain(v6);
  v7 = *(NSObject **)(DerivedStorage + 56);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = __rcsSenderUIEventsChannel_HandleIncomingMessage_block_invoke;
  block[3] = &__block_descriptor_tmp_2840;
  block[4] = DerivedStorage;
  block[5] = v6;
  dispatch_async(v7, block);
  v8 = 0;
LABEL_10:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return v8;
}

uint64_t rcsSenderUIEventsChannel_SendOutgoingMessage(const void *a1, const void *a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD v10[8];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  int v14;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (!*(_BYTE *)(DerivedStorage + 88))
  {
    APSLogErrorAt();
    v8 = 4294960587;
    goto LABEL_4;
  }
  v11 = 0;
  v12 = &v11;
  v13 = 0x2000000000;
  v14 = 0;
  v5 = CMBaseObjectGetDerivedStorage();
  if (!*(_BYTE *)(v5 + 88))
  {
    APSLogErrorAt();
    v8 = 4294960587;
    *((_DWORD *)v12 + 6) = -6709;
    _Block_object_dispose(&v11, 8);
    goto LABEL_7;
  }
  v6 = v5;
  CFRetain(a1);
  CFRetain(a2);
  v7 = *(NSObject **)(v6 + 64);
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 0x40000000;
  v10[2] = __rcsSenderUIEventsChannel_sendOutgoingMessageInternal_block_invoke;
  v10[3] = &unk_24E21F2A0;
  v10[6] = v6;
  v10[7] = a2;
  v10[4] = &v11;
  v10[5] = a1;
  dispatch_async(v7, v10);
  v8 = *((unsigned int *)v12 + 6);
  _Block_object_dispose(&v11, 8);
  if ((_DWORD)v8)
LABEL_7:
    APSLogErrorAt();
LABEL_4:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return v8;
}

void __rcsSenderUIEventsChannel_sendOutgoingMessageInternal_block_invoke(_QWORD *a1)
{
  uint64_t v2;
  dispatch_queue_t *v3;
  dispatch_time_t v4;
  uint64_t v5;
  int v6;

  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 40
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v2 = a1[7];
  v3 = *(dispatch_queue_t **)(a1[6] + 72);
  v4 = dispatch_time(0, 3000000000);
  *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = APMediaDataControlServerSendRequestSync(v3, v2, v4);
  if (*(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24))
  {
    APSLogErrorAt();
    v5 = a1[4];
    if (*(_DWORD *)(*(_QWORD *)(v5 + 8) + 24))
    {
      if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 90)
      {
        if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
          || (v6 = _LogCategory_Initialize(), v5 = a1[4], v6))
        {
          LogPrintF();
          v5 = a1[4];
        }
      }
      rcsSenderUIEventsChannel_callDelegateHandleFailed(a1[5], *(unsigned int *)(*(_QWORD *)(v5 + 8) + 24));
    }
  }
  CFRelease((CFTypeRef)a1[5]);
  CFRelease((CFTypeRef)a1[7]);
}

void rcsSenderUIEventsChannel_stop()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  _QWORD v2[2];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v1 = *(_QWORD *)(DerivedStorage + 72);
  if (v1)
  {
    v2[0] = *(_QWORD *)(DerivedStorage + 72);
    v2[1] = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), v2, (dispatch_function_t)controlServer_stopInternal);
  }
}

uint64_t rcsSenderUIEventsChannel_Invalidate()
{
  uint64_t DerivedStorage;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (*(_BYTE *)(DerivedStorage + 89))
  {
    APSLogErrorAt();
    goto LABEL_9;
  }
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50
    && (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 88))
  {
    *(_BYTE *)(DerivedStorage + 89) = 1;
LABEL_9:
    pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
    return 0;
  }
  *(_WORD *)(DerivedStorage + 88) = 256;
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  rcsSenderUIEventsChannel_stop();
  return 0;
}

uint64_t rcsSenderUIEventsChannel_Finalize()
{
  uint64_t result;
  uint64_t v1;
  const void *v2;
  const void *v3;
  const void *v4;
  const void *v5;
  NSObject *v6;
  NSObject *v7;

  result = CMBaseObjectGetDerivedStorage();
  v1 = result;
  if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 50)
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
      || (result = _LogCategory_Initialize(), (_DWORD)result))
    {
      result = LogPrintF();
    }
  }
  if (*(_BYTE *)(v1 + 89))
  {
    v2 = *(const void **)(v1 + 16);
    if (v2)
    {
      CFRelease(v2);
      *(_QWORD *)(v1 + 16) = 0;
    }
    v3 = *(const void **)(v1 + 48);
    if (v3)
    {
      CFRelease(v3);
      *(_QWORD *)(v1 + 48) = 0;
    }
    v4 = *(const void **)(v1 + 72);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(v1 + 72) = 0;
    }
    v5 = *(const void **)(v1 + 80);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(v1 + 80) = 0;
    }
    v6 = *(NSObject **)(v1 + 56);
    if (v6)
    {
      dispatch_release(v6);
      *(_QWORD *)(v1 + 56) = 0;
    }
    v7 = *(NSObject **)(v1 + 64);
    if (v7)
    {
      dispatch_release(v7);
      *(_QWORD *)(v1 + 64) = 0;
    }
    result = FigSimpleMutexDestroy();
    *(_QWORD *)(v1 + 96) = 0;
  }
  else
  {
    if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel <= 100)
    {
      if (gLogCategory_APReceiverRemoteControlSessionSenderUIEventsChannel != -1
        || (result = _LogCategory_Initialize(), (_DWORD)result))
      {
        result = LogPrintF();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t rcsSenderUIEventsChannel_CopyDebugDescription()
{
  return CFStringCreateF();
}

uint64_t rcsSenderUIEventsChannel_CopyProperty(uint64_t a1, const void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t DerivedStorage;
  uint64_t SInt32;
  uint64_t v8;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  pthread_mutex_lock(*(pthread_mutex_t **)(DerivedStorage + 96));
  if (!a2 || !a4)
  {
    APSLogErrorAt();
    v8 = 4294960591;
    goto LABEL_7;
  }
  if (CFEqual(a2, CFSTR("RRCS::Property::SessionID")))
  {
    SInt32 = (uint64_t)CFRetain(*(CFTypeRef *)(DerivedStorage + 16));
  }
  else
  {
    if (!CFEqual(a2, CFSTR("RRCS::Property::ListenPort")))
    {
      v8 = 4294960569;
      goto LABEL_7;
    }
    if (!*(_QWORD *)(DerivedStorage + 72))
    {
      SInt32 = 0;
      v8 = 4294960561;
      goto LABEL_6;
    }
    SInt32 = FigCFNumberCreateSInt32();
    if (!SInt32)
    {
      APSLogErrorAt();
      v8 = 4294960568;
      goto LABEL_7;
    }
  }
  v8 = 0;
LABEL_6:
  *a4 = SInt32;
LABEL_7:
  pthread_mutex_unlock(*(pthread_mutex_t **)(DerivedStorage + 96));
  return v8;
}

uint64_t rcsSenderUIEventsChannel_SetProperty(uint64_t a1, uint64_t a2)
{
  if (a2)
    return 0;
  APSLogErrorAt();
  return 4294960591;
}

uint64_t CMBaseObjectNotificationBarrier_2843(uint64_t a1)
{
  _QWORD *v2;
  uint64_t (*v3)(uint64_t);

  v2 = *(_QWORD **)(CMBaseObjectGetVTable() + 8);
  if (*v2 >= 2uLL && (v3 = (uint64_t (*)(uint64_t))v2[8]) != 0)
    return v3(a1);
  else
    return 4294954514;
}

uint64_t APReceiverScreenSinkCreateAirPlay(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t DerivedStorage;
  uint64_t v5;

  if (APReceiverScreenSinkCreateAirPlay_initOnce == -1)
  {
    if (a2)
      goto LABEL_3;
LABEL_17:
    APSLogErrorAt();
    return 4294895165;
  }
  dispatch_once(&APReceiverScreenSinkCreateAirPlay_initOnce, &__block_literal_global_2855);
  if (!a2)
    goto LABEL_17;
LABEL_3:
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (APReceiverScreenSinkGetClassID_once != -1)
    dispatch_once(&APReceiverScreenSinkGetClassID_once, &__block_literal_global_4896);
  v3 = CMDerivedObjectCreate();
  if ((_DWORD)v3)
  {
    v5 = v3;
    APSLogErrorAt();
  }
  else
  {
    DerivedStorage = CMBaseObjectGetDerivedStorage();
    *(_BYTE *)(DerivedStorage + 179) = FigSupportsIOSurfaceTimingInfo();
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v5 = 0;
    *a2 = 0;
  }
  return v5;
}

uint64_t apsink_Start(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *Value;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t CMBaseObject;
  uint64_t (*v32)(uint64_t, _QWORD, uint64_t);
  uint64_t v33;
  const void *SInt32;
  uint64_t v35;
  void (*v36)(uint64_t, _QWORD, const void *);
  CFDictionaryRef DictionaryRepresentation;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, _QWORD, CFDictionaryRef);
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, _QWORD, _QWORD);
  uint64_t v43;
  uint64_t (*v44)(uint64_t, _QWORD);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  CGRect v52;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    v27 = 4294895165;
    goto LABEL_44;
  }
  v5 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    v48 = a1;
    v49 = (uint64_t)a2;
    LogPrintF();
  }
  if (*(_BYTE *)(v5 + 176))
  {
    APSLogErrorAt();
    v27 = 4294895164;
LABEL_45:
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 90
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v46 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
    if (v46)
      v46(a1);
    return v27;
  }
  *(_BYTE *)(v5 + 176) = 1;
  *(_DWORD *)(v5 + 164) = 0;
  FigCFDictionaryGetCGSizeIfPresent();
  if (*(double *)(v5 + 64) <= 1.0 || *(double *)(v5 + 72) <= 1.0)
  {
    v27 = APSSignalErrorAt();
    if (!(_DWORD)v27)
      return v27;
    goto LABEL_45;
  }
  v6 = CMBaseObjectGetDerivedStorage();
  v7 = objc_alloc_init(MEMORY[0x24BDD1460]);
  Value = (void *)CFDictionaryGetValue(a2, CFSTR("PresentationLayer"));
  if (!Value)
  {
    v9 = (void *)CFDictionaryGetValue(a2, CFSTR("PresentationContext"));
    if (!v9 || (v10 = v9, objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
    {
      v27 = 4294895165;
      APSLogErrorAt();
      objc_msgSend(v7, "drain");
      goto LABEL_44;
    }
    v11 = v10;
    *(_QWORD *)(v6 + 8) = v11;
    Value = (void *)objc_msgSend(v11, "layer");
  }
  v12 = Value;
  *(_QWORD *)(v6 + 16) = v12;
  if (v12)
  {
    objc_msgSend(v12, "frame");
    v16 = v15;
    v18 = v17;
    *(double *)(v6 + 80) = v15;
    *(double *)(v6 + 88) = v17;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30)
    {
      v19 = v13;
      v20 = v14;
      if (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize())
      {
        v50 = v16;
        v51 = v18;
        v48 = v19;
        v49 = v20;
        LogPrintF();
      }
    }
    objc_msgSend(MEMORY[0x24BDE57D8], "begin", v48, v49, *(_QWORD *)&v50, *(_QWORD *)&v51);
    objc_msgSend(MEMORY[0x24BDE57D8], "setDisableActions:", 1);
    v21 = objc_alloc_init(MEMORY[0x24BDE56D0]);
    *(_QWORD *)(v6 + 24) = v21;
    objc_msgSend(v21, "setName:", CFSTR("VideoLayer"));
    objc_msgSend(*(id *)(v6 + 24), "setFrame:", 0.0, 0.0, v16, v18);
    objc_msgSend(*(id *)(v6 + 24), "setBackgroundColor:", CGColorGetBlack());
    objc_msgSend(*(id *)(v6 + 24), "setEdgeAntialiasingMask:", 0);
    objc_msgSend(*(id *)(v6 + 16), "addSublayer:", *(_QWORD *)(v6 + 24));
    objc_msgSend(MEMORY[0x24BDE57D8], "commit");
    objc_msgSend(v7, "drain");
    goto LABEL_19;
  }
  v27 = APSSignalErrorAt();
  objc_msgSend(v7, "drain");
  if ((_DWORD)v27)
  {
LABEL_44:
    APSLogErrorAt();
    goto LABEL_45;
  }
LABEL_19:
  v22 = CMBaseObjectGetDerivedStorage();
  v23 = (uint64_t *)(v22 + 32);
  v24 = *MEMORY[0x24BDBD240];
  v25 = 1;
  while (1)
  {
    v26 = MEMORY[0x2207AAFDC](v24, v23);
    if (!(_DWORD)v26)
      break;
    v27 = v26;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 60
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      v49 = 100;
      v50 = *(double *)&v27;
      v48 = v25;
      LogPrintF();
    }
    usleep(0x186A0u);
    v25 = (v25 + 1);
    if ((_DWORD)v25 == 101)
    {
      do
        v28 = __ldxr((unsigned int *)&sServerDisconnectCount);
      while (__stxr(v28, (unsigned int *)&sServerDisconnectCount));
      *(_DWORD *)(v22 + 168) = v28;
      goto LABEL_43;
    }
  }
  do
    v29 = __ldxr((unsigned int *)&sServerDisconnectCount);
  while (__stxr(v29, (unsigned int *)&sServerDisconnectCount));
  *(_DWORD *)(v22 + 168) = v29;
  v30 = *(_QWORD *)(v22 + 24);
  CMBaseObject = FigVideoQueueGetCMBaseObject();
  v32 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
  if (!v32)
  {
    v27 = 4294954514;
LABEL_43:
    APSLogErrorAt();
    goto LABEL_44;
  }
  v33 = v32(CMBaseObject, *MEMORY[0x24BDDD018], v30);
  if ((_DWORD)v33)
  {
    v27 = v33;
    goto LABEL_43;
  }
  SInt32 = (const void *)FigCFNumberCreateSInt32();
  v35 = FigVideoQueueGetCMBaseObject();
  v36 = *(void (**)(uint64_t, _QWORD, const void *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
  if (v36)
    v36(v35, *MEMORY[0x24BDDD008], SInt32);
  objc_msgSend(*(id *)(v22 + 24), "frame", v48, v49, *(_QWORD *)&v50);
  DictionaryRepresentation = CGRectCreateDictionaryRepresentation(v52);
  v38 = FigVideoQueueGetCMBaseObject();
  v39 = *(uint64_t (**)(uint64_t, _QWORD, CFDictionaryRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
  if (!v39)
  {
    v27 = 4294954514;
    goto LABEL_53;
  }
  v40 = v39(v38, *MEMORY[0x24BDDD010], DictionaryRepresentation);
  if ((_DWORD)v40)
  {
    v27 = v40;
    goto LABEL_53;
  }
  v41 = FigVideoQueueGetCMBaseObject();
  v42 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
  if (v42)
    v42(v41, *MEMORY[0x24BDDD020], *MEMORY[0x24BDBD270]);
  v43 = *v23;
  v44 = *(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
  if (!v44)
  {
    v27 = 4294954514;
    goto LABEL_53;
  }
  v45 = v44(v43, 0);
  if ((_DWORD)v45)
  {
    v27 = v45;
LABEL_53:
    APSLogErrorAt();
    if (!DictionaryRepresentation)
      goto LABEL_55;
    goto LABEL_54;
  }
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v27 = 0;
  if (DictionaryRepresentation)
LABEL_54:
    CFRelease(DictionaryRepresentation);
LABEL_55:
  if (SInt32)
    CFRelease(SInt32);
  if ((_DWORD)v27)
    goto LABEL_44;
  return v27;
}

uint64_t apsink_Stop(uint64_t a1)
{
  uint64_t DerivedStorage;
  uint64_t v3;
  NSObject *v4;
  uint64_t CMBaseObject;
  uint64_t v6;
  void (*v7)(uint64_t);
  const void *v8;
  id *v9;
  id v10;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_BYTE *)(DerivedStorage + 176))
  {
    v3 = DerivedStorage;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    apsink_enableHUD(a1, 0);
    apsink_enableImageInfoCollection(a1, 0);
    if (*(_QWORD *)(v3 + 24) && *(_BYTE *)(v3 + 178))
    {
      v4 = dispatch_semaphore_create(0);
      FigGetCFPreferenceDoubleWithDefault();
      FigGetCFPreferenceDoubleWithDefault();
      FigGetCFPreferenceDoubleWithDefault();
      dispatch_get_global_queue(0, 0);
      FadeOutLayerThruBlack();
      dispatch_semaphore_wait(v4, 0xFFFFFFFFFFFFFFFFLL);
      dispatch_release(v4);
    }
    if (*(_QWORD *)(v3 + 32))
    {
      CMBaseObject = FigVideoQueueGetCMBaseObject();
      if (CMBaseObject)
      {
        v6 = CMBaseObject;
        v7 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 24);
        if (v7)
          v7(v6);
      }
      v8 = *(const void **)(v3 + 32);
      if (v8)
      {
        CFRelease(v8);
        *(_QWORD *)(v3 + 32) = 0;
      }
    }
    v9 = (id *)CMBaseObjectGetDerivedStorage();
    v10 = v9[3];
    if (v10)
      objc_msgSend(v10, "removeFromSuperlayer");

    v9[1] = 0;
    v9[2] = 0;

    v9[3] = 0;
    objc_msgSend(MEMORY[0x24BDE57D8], "flush");
    *(_BYTE *)(v3 + 176) = 0;
  }
  return 0;
}

uint64_t apsink_enqueueFrame(uint64_t a1, OpaqueCMBlockBuffer *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t DerivedStorage;
  const char *v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  const __CFArray *SampleAttachmentsArray;
  __CFDictionary *ValueAtIndex;
  uint64_t v31;
  CMSampleBufferRef v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t (*v42)(uint64_t, CMSampleBufferRef, uint64_t, double, double, double, double, double, double, double, double);
  uint64_t v43;
  CMSampleTimingInfo *sampleTimingArray;
  uint64_t v46;
  size_t *sampleSizeArray;
  double v48;
  double v49;
  CMSampleBufferRef sbuf;
  size_t DataLength;
  CMSampleTimingInfo v52;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    v11 = "";
    if (!a5)
      v11 = "non-";
    sampleTimingArray = (CMSampleTimingInfo *)a1;
    v46 = a3;
    sampleSizeArray = (size_t *)v11;
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 176))
  {
    v43 = 4294895164;
LABEL_38:
    APSLogErrorAt();
    return v43;
  }
  v12 = *(_DWORD *)(DerivedStorage + 172);
  if (!v12)
  {
    v43 = 4294895164;
    goto LABEL_38;
  }
  do
    v13 = __ldxr((unsigned int *)&sServerDisconnectCount);
  while (__stxr(v13, (unsigned int *)&sServerDisconnectCount));
  if (v13 != *(_DWORD *)(DerivedStorage + 168))
  {
    APSLogErrorAt();
    return 4294895163;
  }
  if (*(_BYTE *)(DerivedStorage + 179))
  {
    apsink_enableImageInfoCollection(a1, a4 != 0);
    v12 = *(_DWORD *)(DerivedStorage + 172);
    v14 = a4;
  }
  else
  {
    v14 = 0;
  }
  if (v12 == 1)
  {
    v15 = *(_QWORD *)(DerivedStorage + 32);
    v16 = *(double *)(DerivedStorage + 80);
    v17 = *(double *)(DerivedStorage + 88);
    v18 = *(_QWORD *)(DerivedStorage + 48);
    v19 = *(unsigned int *)(DerivedStorage + 160);
    v20 = *(double *)(DerivedStorage + 112);
    v48 = *(double *)(DerivedStorage + 104);
    v49 = *(double *)(DerivedStorage + 96);
    v21 = *(double *)(DerivedStorage + 120);
    v22 = *(double *)(DerivedStorage + 128);
    v23 = *(double *)(DerivedStorage + 136);
    v24 = *(double *)(DerivedStorage + 144);
    v25 = *(double *)(DerivedStorage + 152);
    v26 = *(_QWORD *)(CMBaseObjectGetVTable() + 16);
    if (*(_QWORD *)(v26 + 24))
      v27 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, OpaqueCMBlockBuffer *, uint64_t, uint64_t, uint64_t, double, double, double, double, double, double, double, double, CMSampleTimingInfo *, uint64_t, size_t *))(v26 + 32))(v15, (int)v16, (int)v17, v18, a2, a3, v19, v14, v49, v48, v20, v21, v22, v23, v24, v25, sampleTimingArray, v46, sampleSizeArray);
    else
      v27 = 4294954514;
    goto LABEL_27;
  }
  memset(&v52.presentationTimeStamp, 0, sizeof(v52.presentationTimeStamp));
  sbuf = 0;
  if (!*(_QWORD *)(DerivedStorage + 40))
  {
    v43 = 4294895164;
    goto LABEL_38;
  }
  *(_OWORD *)&v52.duration.value = *MEMORY[0x24BDC0D40];
  v52.duration.epoch = *(_QWORD *)(MEMORY[0x24BDC0D40] + 16);
  v52.decodeTimeStamp = v52.duration;
  CMClockMakeHostTimeFromSystemUnits(&v52.presentationTimeStamp, a3);
  DataLength = CMBlockBufferGetDataLength(a2);
  v28 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], a2, 1u, 0, 0, *(CMFormatDescriptionRef *)(DerivedStorage + 40), 1, 1, &v52, 1, &DataLength, &sbuf);
  if ((_DWORD)v28)
  {
    v43 = v28;
    goto LABEL_38;
  }
  if (!a5)
  {
    SampleAttachmentsArray = CMSampleBufferGetSampleAttachmentsArray(sbuf, 1u);
    ValueAtIndex = (__CFDictionary *)CFArrayGetValueAtIndex(SampleAttachmentsArray, 0);
    CFDictionarySetValue(ValueAtIndex, (const void *)*MEMORY[0x24BDC0CC8], (const void *)*MEMORY[0x24BDBD270]);
  }
  v31 = *(_QWORD *)(DerivedStorage + 32);
  v32 = sbuf;
  v33 = *(unsigned int *)(DerivedStorage + 160);
  v34 = *(double *)(DerivedStorage + 96);
  v35 = *(double *)(DerivedStorage + 104);
  v36 = *(double *)(DerivedStorage + 112);
  v37 = *(double *)(DerivedStorage + 120);
  v38 = *(double *)(DerivedStorage + 128);
  v39 = *(double *)(DerivedStorage + 136);
  v41 = *(double *)(DerivedStorage + 144);
  v40 = *(double *)(DerivedStorage + 152);
  v42 = *(uint64_t (**)(uint64_t, CMSampleBufferRef, uint64_t, double, double, double, double, double, double, double, double))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v42)
    v27 = v42(v31, v32, v33, v34, v35, v36, v37, v38, v39, v41, v40);
  else
    v27 = 4294954514;
  if (sbuf)
    CFRelease(sbuf);
LABEL_27:
  v43 = apsink_remapEnqueueError(a1, v27);
  if ((_DWORD)v43)
    goto LABEL_38;
  *(_QWORD *)(DerivedStorage + 56) = a3;
  ++*(_DWORD *)(DerivedStorage + 164);
  if (a4 && !*(_BYTE *)(DerivedStorage + 179))
  {
    APReceiverStatsCollectorLogFrameStats(a4, 0);
    return 0;
  }
  return v43;
}

uint64_t apsink_updateH264VideoConfig(uint64_t a1, const void *a2, int a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage;
  unsigned int v28;
  int v29;
  const void *v30;
  double v31;
  double v32;
  uint64_t v33;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 176))
  {
    APSLogErrorAt();
    return 4294895164;
  }
  if (!a2)
  {
    v33 = 4294895165;
    goto LABEL_20;
  }
  do
    v28 = __ldxr((unsigned int *)&sServerDisconnectCount);
  while (__stxr(v28, (unsigned int *)&sServerDisconnectCount));
  if (v28 != *(_DWORD *)(DerivedStorage + 168))
  {
    APSLogErrorAt();
    return 4294895163;
  }
  v29 = *(_DWORD *)(DerivedStorage + 172);
  if (v29)
  {
    if (v29 == 1)
      goto LABEL_12;
    v33 = 4294895165;
LABEL_20:
    APSLogErrorAt();
    return v33;
  }
  *(_DWORD *)(DerivedStorage + 172) = 1;
LABEL_12:
  v30 = *(const void **)(DerivedStorage + 48);
  *(_QWORD *)(DerivedStorage + 48) = a2;
  CFRetain(a2);
  if (v30)
    CFRelease(v30);
  apsink_updateVideoConfigCommon(a4, a5, a6, a7, a8, a9, a1, a3, 1635148593, v31, v32, a12, a13, a14, a15);
  return 0;
}

uint64_t apsink_updateVideoConfig(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage;
  unsigned int v28;
  int v29;
  const void *v30;
  CMFormatDescriptionRef *v31;
  const void *v32;
  uint64_t v33;
  double v34;
  double v35;
  FourCharCode MediaSubType;
  uint64_t v37;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 176))
  {
    APSLogErrorAt();
    return 4294895164;
  }
  if (!a2)
  {
    v37 = 4294895165;
LABEL_25:
    APSLogErrorAt();
    return v37;
  }
  do
    v28 = __ldxr((unsigned int *)&sServerDisconnectCount);
  while (__stxr(v28, (unsigned int *)&sServerDisconnectCount));
  if (v28 != *(_DWORD *)(DerivedStorage + 168))
  {
    APSLogErrorAt();
    return 4294895163;
  }
  v29 = *(_DWORD *)(DerivedStorage + 172);
  if (v29)
  {
    if (v29 != 2)
    {
      v37 = 4294895165;
      goto LABEL_25;
    }
  }
  else
  {
    *(_DWORD *)(DerivedStorage + 172) = 2;
  }
  v32 = *(const void **)(DerivedStorage + 40);
  v31 = (CMFormatDescriptionRef *)(DerivedStorage + 40);
  v30 = v32;
  if (v32)
  {
    CFRelease(v30);
    *v31 = 0;
  }
  v33 = APSVideoFormatDescriptionCreateFromBlockBuffer();
  if ((_DWORD)v33)
  {
    v37 = v33;
    goto LABEL_25;
  }
  if (*v31)
    MediaSubType = CMFormatDescriptionGetMediaSubType(*v31);
  else
    MediaSubType = 0;
  apsink_updateVideoConfigCommon(a4, a5, a6, a7, a8, a9, a1, a3, MediaSubType, v34, v35, a12, a13, a14, a15);
  return 0;
}

uint64_t apsink_clearScreen(uint64_t a1)
{
  uint64_t DerivedStorage;
  unsigned int v3;
  int64_t v4;
  uint64_t v5;
  const void *v6;
  uint64_t v7;
  CMSampleBufferRef v8;
  uint64_t (*v9)(uint64_t, CMSampleBufferRef, _QWORD, double, double, double, double, double, double, double, double);
  uint64_t v10;
  uint64_t v11;
  CMSampleTimingInfo sampleTimingArray;
  CMSampleBufferRef v14;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v14 = 0;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  memset(&sampleTimingArray, 0, sizeof(sampleTimingArray));
  if (*(_BYTE *)(DerivedStorage + 176))
  {
    do
      v3 = __ldxr((unsigned int *)&sServerDisconnectCount);
    while (__stxr(v3, (unsigned int *)&sServerDisconnectCount));
    if (v3 == *(_DWORD *)(DerivedStorage + 168))
    {
      if (*(_QWORD *)(DerivedStorage + 56) <= mach_absolute_time())
        v4 = UpTicksToNanoseconds();
      else
        v4 = UpTicksToNanoseconds() + 10000000;
      *(_OWORD *)&sampleTimingArray.duration.value = *MEMORY[0x24BDC0D88];
      sampleTimingArray.duration.epoch = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
      CMTimeMake(&sampleTimingArray.presentationTimeStamp, v4, 1000000000);
      sampleTimingArray.decodeTimeStamp = *(CMTime *)*(_QWORD *)&MEMORY[0x24BDC0D40];
      v5 = CMSampleBufferCreate((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, 1u, 0, 0, 0, 0, 1, &sampleTimingArray, 0, 0, &v14);
      if ((_DWORD)v5)
      {
        v11 = v5;
      }
      else
      {
        v6 = (const void *)*MEMORY[0x24BDBD270];
        CMSetAttachment(v14, (CFStringRef)*MEMORY[0x24BDC0CF0], (CFTypeRef)*MEMORY[0x24BDBD270], 1u);
        CMSetAttachment(v14, (CFStringRef)*MEMORY[0x24BDC0CE0], v6, 1u);
        v7 = *(_QWORD *)(DerivedStorage + 32);
        v8 = v14;
        v9 = *(uint64_t (**)(uint64_t, CMSampleBufferRef, _QWORD, double, double, double, double, double, double, double, double))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
        if (v9)
          v10 = v9(v7, v8, 0, *MEMORY[0x24BDBF090], *(double *)(MEMORY[0x24BDBF090] + 8), *(double *)(MEMORY[0x24BDBF090] + 16), *(double *)(MEMORY[0x24BDBF090] + 24), *MEMORY[0x24BDBF090], *(double *)(MEMORY[0x24BDBF090] + 8), *(double *)(MEMORY[0x24BDBF090] + 16), *(double *)(MEMORY[0x24BDBF090] + 24));
        else
          v10 = 4294954514;
        v11 = apsink_remapEnqueueError(a1, v10);
        if (!(_DWORD)v11)
          goto LABEL_16;
      }
    }
    else
    {
      v11 = 4294895163;
    }
    APSLogErrorAt();
  }
  else
  {
    APSLogErrorAt();
    v11 = 4294895164;
  }
LABEL_16:
  if (v14)
    CFRelease(v14);
  return v11;
}

uint64_t apsink_updateStats(uint64_t a1, const void *a2)
{
  uint64_t DerivedStorage;
  unsigned int v4;
  _QWORD *v5;
  NSObject *v6;
  uint64_t CMBaseObject;
  void (*v8)(uint64_t, _QWORD, _QWORD, CFTypeRef *);
  CFTypeRef v9;
  uint64_t v10;
  CFTypeRef block[6];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (*(_BYTE *)(DerivedStorage + 176))
  {
    do
      v4 = __ldxr((unsigned int *)&sServerDisconnectCount);
    while (__stxr(v4, (unsigned int *)&sServerDisconnectCount));
    if (v4 == *(_DWORD *)(DerivedStorage + 168))
    {
      v5 = *(_QWORD **)DerivedStorage;
      if (*(_QWORD *)DerivedStorage)
      {
        v6 = v5[2];
        block[0] = (CFTypeRef)MEMORY[0x24BDAC760];
        block[1] = (CFTypeRef)3221225472;
        block[2] = __APReceiverStatsCollectorUpdateSenderStats_block_invoke;
        block[3] = &__block_descriptor_48_e5_v8__0l;
        block[4] = v5;
        block[5] = a2;
        dispatch_sync(v6, block);
        if (*(_DWORD *)(DerivedStorage + 164))
        {
          block[0] = 0;
          CMBaseObject = FigVideoQueueGetCMBaseObject();
          v8 = *(void (**)(uint64_t, _QWORD, _QWORD, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                           + 48);
          if (v8)
          {
            v8(CMBaseObject, *MEMORY[0x24BDDD028], *MEMORY[0x24BDBD240], block);
            v9 = block[0];
          }
          else
          {
            v9 = 0;
          }
          APReceiverStatsCollectorUpdateVideoPerformanceStats(*(_QWORD *)DerivedStorage, (uint64_t)v9);
          if (block[0])
            CFRelease(block[0]);
        }
        APReceiverStatsCollectorShowStats(*(_QWORD *)DerivedStorage);
      }
      return 0;
    }
    else
    {
      v10 = 4294895163;
      APSLogErrorAt();
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895164;
  }
  return v10;
}

uint64_t apsink_remapEnqueueError(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if ((_DWORD)a2 == -12083)
  {
    v2 = 4294895163;
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 90
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  else
  {
    v2 = a2;
    if ((_DWORD)a2)
    {
      if (gLogCategory_APReceiverScreenSinkAirPlay <= 60
        && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      return 0;
    }
  }
  return v2;
}

void apsink_updateVideoConfigCommon(double a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, int a8, int a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  uint64_t DerivedStorage;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  int v33;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  *(double *)(DerivedStorage + 80) = a1;
  *(double *)(DerivedStorage + 88) = a2;
  *(_DWORD *)(DerivedStorage + 160) = a8;
  *(double *)(DerivedStorage + 96) = a3;
  *(double *)(DerivedStorage + 104) = a4;
  *(double *)(DerivedStorage + 112) = a5;
  *(double *)(DerivedStorage + 120) = a6;
  objc_msgSend(*(id *)(DerivedStorage + 24), "bounds");
  v28 = v27 / *(double *)(DerivedStorage + 64);
  v30 = v29 / *(double *)(DerivedStorage + 72);
  *(double *)(DerivedStorage + 128) = a12 * v28;
  *(double *)(DerivedStorage + 136) = a13 * v30;
  v31 = a14 * v28;
  v32 = a15 * v30;
  *(double *)(DerivedStorage + 144) = a14 * v28;
  *(double *)(DerivedStorage + 152) = a15 * v30;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 50)
  {
    if (gLogCategory_APReceiverScreenSinkAirPlay != -1
      || (v33 = _LogCategory_Initialize(),
          v31 = *(double *)(DerivedStorage + 144),
          v32 = *(double *)(DerivedStorage + 152),
          v33))
    {
      LogPrintF();
      v31 = *(double *)(DerivedStorage + 144);
      v32 = *(double *)(DerivedStorage + 152);
    }
  }
  APReceiverStatsCollectorUpdateVideoSizes(*(_QWORD *)DerivedStorage, *(double *)(DerivedStorage + 112), *(double *)(DerivedStorage + 120), v31, v32, *(double *)(DerivedStorage + 128), *(double *)(DerivedStorage + 136));
  APReceiverStatsCollectorUpdateVideoCodec(*(_QWORD *)DerivedStorage, a9);
}

uint64_t apsink_enableImageInfoCollection(uint64_t a1, int a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;

  result = CMBaseObjectGetDerivedStorage();
  v4 = result;
  if (a2)
  {
    if (*(_BYTE *)(result + 180))
      return result;
    CMNotificationCenterGetDefaultLocalCenter();
    result = CMNotificationCenterAddListener();
    v5 = 1;
  }
  else
  {
    if (!*(_BYTE *)(result + 180))
      return result;
    CMNotificationCenterGetDefaultLocalCenter();
    result = CMNotificationCenterRemoveListener();
    v5 = 0;
  }
  *(_BYTE *)(v4 + 180) = v5;
  return result;
}

void apsink_handleImageRelease(int a1, int a2, int a3, int a4, CFTypeRef cf)
{
  CFTypeID v6;
  const void *Value;

  if (cf)
  {
    v6 = CFGetTypeID(cf);
    if (v6 == CFDictionaryGetTypeID())
    {
      Value = CFDictionaryGetValue((CFDictionaryRef)cf, (const void *)*MEMORY[0x24BDDCF40]);
      APReceiverStatsCollectorLogFrameStats((uint64_t)Value, (const __CFDictionary *)cf);
    }
  }
}

void apsink_enableHUD(uint64_t a1, int a2)
{
  uint64_t DerivedStorage;
  uint64_t v4;
  __CFDictionary *Mutable;
  char v6;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v4 = DerivedStorage;
  if (a2)
  {
    if (*(_BYTE *)(DerivedStorage + 177))
      return;
    Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    CFDictionarySetValue(Mutable, CFSTR("PresentationLayer"), *(const void **)(v4 + 16));
    objc_msgSend(*(id *)(v4 + 24), "zPosition");
    FigCFDictionarySetInt32();
    APReceiverStatsCollectorEnableHUD(*(_QWORD *)v4, (uint64_t)Mutable);
    CFRelease(Mutable);
    v6 = 1;
  }
  else
  {
    if (!*(_BYTE *)(DerivedStorage + 177))
      return;
    APReceiverStatsCollectorDisableHUD(*(_QWORD *)DerivedStorage);
    v6 = 0;
  }
  *(_BYTE *)(v4 + 177) = v6;
}

void apsink_Finalize(uint64_t a1)
{
  uint64_t DerivedStorage;
  void (*v3)(uint64_t);
  const void *v4;
  const void *v5;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v3 = *(void (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
  if (v3)
    v3(a1);
  v4 = *(const void **)(DerivedStorage + 48);
  if (v4)
  {
    CFRelease(v4);
    *(_QWORD *)(DerivedStorage + 48) = 0;
  }
  v5 = *(const void **)(DerivedStorage + 40);
  if (v5)
  {
    CFRelease(v5);
    *(_QWORD *)(DerivedStorage + 40) = 0;
  }
  if (*(_QWORD *)DerivedStorage)
  {
    CFRelease(*(CFTypeRef *)DerivedStorage);
    *(_QWORD *)DerivedStorage = 0;
  }
}

CFStringRef apsink_CopyDebugDescription(const void *a1)
{
  const __CFAllocator *v2;
  CFStringRef v3;

  ASPrintF();
  v2 = CFGetAllocator(a1);
  v3 = CFStringCreateWithFormat(v2, 0, CFSTR("<APReceiverScreenSinkAirPlay %p %s>"), a1, 0);
  free(0);
  return v3;
}

uint64_t apsink_CopyProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  if (!a2)
  {
    v4 = 4294895165;
LABEL_11:
    APSLogErrorAt();
    return v4;
  }
  if (!a4)
  {
    v4 = 4294895165;
    goto LABEL_11;
  }
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294954512;
}

uint64_t apsink_SetProperty(uint64_t a1, const void *a2, const void *a3)
{
  uint64_t DerivedStorage;
  uint64_t v7;
  uint64_t v8;
  CFTypeID v10;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
    goto LABEL_28;
  v7 = DerivedStorage;
  if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("StatsDisplayEnabled")))
  {
    if (*(_BYTE *)(v7 + 176))
    {
      apsink_enableHUD(a1, *MEMORY[0x24BDBD270] == (_QWORD)a3);
      return 0;
    }
    v8 = 4294895164;
LABEL_31:
    APSLogErrorAt();
    return v8;
  }
  if (CFEqual(a2, CFSTR("StatsCollector")))
  {
    if (*(_BYTE *)(v7 + 176))
    {
      v8 = 4294895164;
      goto LABEL_31;
    }
    if (!a3)
    {
      v8 = *(_QWORD *)v7;
      *(_QWORD *)v7 = 0;
      if (!v8)
        return v8;
      goto LABEL_22;
    }
    v10 = CFGetTypeID(a3);
    if (APReceiverStatsCollectorGetTypeID_once != -1)
      dispatch_once(&APReceiverStatsCollectorGetTypeID_once, &__block_literal_global_440);
    if (v10 == APReceiverStatsCollectorGetTypeID_typeID)
    {
      v8 = *(_QWORD *)v7;
      *(_QWORD *)v7 = a3;
      CFRetain(a3);
      if (!v8)
        return v8;
LABEL_22:
      CFRelease((CFTypeRef)v8);
      return 0;
    }
LABEL_28:
    APSLogErrorAt();
    return 4294895165;
  }
  if (CFEqual(a2, CFSTR("ScreenFadeOutOnStop")))
  {
    v8 = 0;
    *(_BYTE *)(v7 + 178) = *MEMORY[0x24BDBD270] == (_QWORD)a3;
  }
  else
  {
    if (gLogCategory_APReceiverScreenSinkAirPlay <= 30
      && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    return 4294954512;
  }
  return v8;
}

void apsink_handleServerDisconnect()
{
  unsigned int v0;

  if (gLogCategory_APReceiverScreenSinkAirPlay <= 60
    && (gLogCategory_APReceiverScreenSinkAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  do
    v0 = __ldxr((unsigned int *)&sServerDisconnectCount);
  while (__stxr(v0 + 1, (unsigned int *)&sServerDisconnectCount));
}

uint64_t _AirTunesDACPClient_Thread(uint64_t a1)
{
  uint64_t v2;
  const char *v3;
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int ShortVersionLength;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  void (*v27)(uint64_t, _QWORD);
  char v29;
  uint64_t v30;
  const char *v31;
  DNSServiceRef sdRef;
  char __str[2048];
  char name[1009];
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v2 = a1 + 41448;
  pthread_setname_np("AirPlayDACP");
  v3 = (const char *)(a1 + 41469);
  v4 = a1 + 200;
LABEL_2:
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 8));
  while (!*(_BYTE *)(a1 + 160))
  {
    v5 = *(_QWORD *)(a1 + 184);
    if (v5)
    {
      *(_QWORD *)(a1 + 184) = *(_QWORD *)v5;
      --*(_DWORD *)(a1 + 192);
      pthread_mutex_unlock((pthread_mutex_t *)(a1 + 8));
      v6 = *(const char **)(v5 + 16);
      if (*(_BYTE *)(v5 + 8))
      {
        if (!strcmp(*(const char **)(v5 + 16), "stopSession"))
        {
          if (*(_BYTE *)(a1 + 162))
          {
            NetSocket_Disconnect();
            *(_BYTE *)(a1 + 162) = 0;
          }
        }
        goto LABEL_78;
      }
      v31 = v3;
      if (*(_BYTE *)(a1 + 162))
      {
        if ((*(unsigned int (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 + 152) + 24))(*(_QWORD *)(a1 + 152), 1) == -6753)
        {
          NetSocket_Disconnect();
          *(_BYTE *)(a1 + 162) = 0;
          goto LABEL_15;
        }
        if (*(_BYTE *)(a1 + 162))
        {
          v30 = v4;
          v29 = 1;
          goto LABEL_35;
        }
      }
LABEL_15:
      sdRef = 0;
      *(_BYTE *)(v2 + 20) = 0;
      SNPrintF();
      v7 = DNSServiceResolve(&sdRef, 0, 0, name, "_dacp._tcp", "local.", (DNSServiceResolveReply)_AirTunesDACPClient_ResolveControllerCallBack, (void *)a1);
      if ((_DWORD)v7)
      {
        v14 = v7;
        APSLogErrorAt();
      }
      else
      {
        v8 = v4;
        if (DNSServiceRefSockFD(sdRef) < 0)
        {
          v11 = mach_absolute_time();
          v12 = UpTicksPerSecond();
          if (*(_BYTE *)(v2 + 20))
          {
LABEL_25:
            v14 = 0;
          }
          else
          {
            v13 = 5 * v12 + v11;
            while (mach_absolute_time() < v13)
            {
              usleep(0xC350u);
              if (*(_BYTE *)(v2 + 20))
                goto LABEL_25;
            }
            v14 = 4294960574;
          }
        }
        else
        {
          while (1)
          {
            v9 = NetSocket_Wait();
            if ((_DWORD)v9)
            {
              v14 = v9;
              goto LABEL_26;
            }
            v10 = DNSServiceProcessResult(sdRef);
            if ((_DWORD)v10)
              break;
            if (*(_BYTE *)(v2 + 20))
              goto LABEL_25;
          }
          v14 = v10;
          APSLogErrorAt();
        }
LABEL_26:
        v4 = v8;
        v3 = v31;
      }
      if (sdRef)
        DNSServiceRefDeallocate(sdRef);
      if ((_DWORD)v14 || (v14 = NetSocket_TCPConnect(), (_DWORD)v14))
      {
LABEL_74:
        if (*(_BYTE *)(a1 + 162))
        {
          NetSocket_Disconnect();
          *(_BYTE *)(a1 + 162) = 0;
        }
        goto LABEL_76;
      }
      v30 = v4;
      if (*(_BYTE *)(a1 + 161))
      {
        v29 = 1;
        *(_BYTE *)(a1 + 162) = 1;
      }
      else
      {
        v29 = 0;
      }
LABEL_35:
      v15 = *(_DWORD *)(v2 + 16);
      ShortVersionLength = APSVersionUtilsGetShortVersionLength();
      if ((snprintf(__str, 0x800uLL, "GET /ctrl-int/1/%s HTTP/1.1\r\nHost: %s\r\nActive-Remote: %u\r\n%s: AirPlay/%.*s\r\n\r\n", v6, v3, v15, "User-Agent", ShortVersionLength, "800.74.1.2")- 2048) <= 0xFFFFF800)
      {
        APSLogErrorAt();
        v14 = 4294960534;
        v4 = v30;
        goto LABEL_72;
      }
      NetSocket_GetNative();
      v4 = v30;
      while (1)
      {
        v17 = SocketWriteData();
        if (!(_DWORD)v17)
          break;
        v14 = v17;
        if ((_DWORD)v17 != 35)
          goto LABEL_67;
        v18 = NetSocket_Wait();
        v14 = v18;
        if ((_DWORD)v18 == -6723)
          goto LABEL_72;
        if ((_DWORD)v18)
          goto LABEL_67;
      }
      *(_QWORD *)(a1 + 8392) = 0;
      while (1)
      {
        v19 = HTTPReadHeader();
        if (!(_DWORD)v19)
          break;
        v14 = v19;
        if ((_DWORD)v19 != 35)
          goto LABEL_70;
        v20 = NetSocket_Wait();
        v14 = v20;
        if ((_DWORD)v20 == -6723)
          goto LABEL_71;
        if ((_DWORD)v20)
          goto LABEL_70;
      }
      v21 = HTTPHeader_Parse();
      if ((_DWORD)v21)
      {
        v14 = v21;
LABEL_70:
        APSLogErrorAt();
LABEL_71:
        v3 = v31;
        goto LABEL_72;
      }
      v22 = *(_DWORD *)(a1 + 8632);
      if (!v22)
      {
        APSLogErrorAt();
        v14 = 4294960584;
        goto LABEL_71;
      }
      if ((v22 - 300) <= 0xFFFFFF9B)
      {
        APSLogErrorAt();
        v14 = *(unsigned int *)(a1 + 8632);
        goto LABEL_71;
      }
      v23 = *(_QWORD *)(a1 + 8664);
      v3 = v31;
      if (v23 >= 0x8000)
      {
        APSLogErrorAt();
        v14 = 4294960553;
        goto LABEL_72;
      }
      *(_QWORD *)v2 = 0;
      if (v23)
      {
        v24 = (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 152) + 24))();
        v14 = v24;
        if ((_DWORD)v24 != -6753 && (_DWORD)v24 != -6723 && (_DWORD)v24 != 0)
LABEL_67:
          APSLogErrorAt();
LABEL_72:
        if ((v29 & 1) != 0)
        {
          if (!(_DWORD)v14)
            goto LABEL_78;
          goto LABEL_74;
        }
        NetSocket_Disconnect();
        if (!(_DWORD)v14)
          goto LABEL_78;
LABEL_76:
        v27 = *(void (**)(uint64_t, _QWORD))(a1 + 168);
        if (v27)
          v27(v14, *(_QWORD *)(a1 + 176));
      }
      else if ((v29 & 1) == 0)
      {
        NetSocket_Disconnect();
      }
LABEL_78:
      _AirTunesDACPClient_FreeRequest((_QWORD *)v5);
      goto LABEL_2;
    }
    pthread_cond_wait((pthread_cond_t *)(a1 + 80), (pthread_mutex_t *)(a1 + 8));
  }
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 8));
  return 0;
}

void AirTunesDACPClient_Delete(char *a1)
{
  pthread_mutex_t *v2;
  pthread_cond_t *v3;
  pthread_mutex_t *v4;
  _QWORD *v5;
  void *v6;

  if (*(_DWORD *)a1 == 1684104048)
  {
    v2 = (pthread_mutex_t *)*((_QWORD *)a1 + 9);
    if (v2)
    {
      pthread_mutex_lock(v2);
      a1[160] = 1;
      pthread_mutex_unlock(*((pthread_mutex_t **)a1 + 9));
    }
    if (*((_QWORD *)a1 + 19))
      NetSocket_Cancel();
    if (*((_QWORD *)a1 + 18))
    {
      pthread_cond_signal((pthread_cond_t *)(a1 + 80));
      pthread_join(*((pthread_t *)a1 + 17), 0);
      *((_QWORD *)a1 + 18) = 0;
    }
    *(_DWORD *)a1 = 1145127760;
    if (*((_QWORD *)a1 + 19))
    {
      NetSocket_Delete();
      *((_QWORD *)a1 + 19) = 0;
    }
    v3 = (pthread_cond_t *)*((_QWORD *)a1 + 16);
    if (v3)
    {
      pthread_cond_destroy(v3);
      *((_QWORD *)a1 + 16) = 0;
    }
    v4 = (pthread_mutex_t *)*((_QWORD *)a1 + 9);
    if (v4)
    {
      pthread_mutex_destroy(v4);
      *((_QWORD *)a1 + 9) = 0;
    }
    while (1)
    {
      v5 = (_QWORD *)*((_QWORD *)a1 + 23);
      if (!v5)
        break;
      *((_QWORD *)a1 + 23) = *v5;
      _AirTunesDACPClient_FreeRequest(v5);
    }
    v6 = (void *)*((_QWORD *)a1 + 5311);
    if (v6)
      free(v6);
    free(a1);
  }
  else
  {
    APSLogErrorAt();
  }
}

void _AirTunesDACPClient_FreeRequest(_QWORD *a1)
{
  void *v2;

  v2 = (void *)a1[2];
  if (v2)
    free(v2);
  free(a1);
}

uint64_t _AirTunesDACPClient_ResolveControllerCallBack(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a4 != -65791)
  {
    if (a4)
    {
      return APSLogErrorAt();
    }
    else
    {
      result = __strlcpy_chk();
      *(_WORD *)(a10 + 42478) = __rev16(a7);
      *(_BYTE *)(a10 + 41468) = 1;
    }
  }
  return result;
}

uint64_t _AirTunesDACPClient_ScheduleCommandInternal(uint64_t a1, const char *a2, int a3)
{
  pthread_mutex_t *v6;
  _QWORD *v7;
  _QWORD *v8;
  char *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  if (!a1)
  {
    APSLogErrorAt();
    return 4294960591;
  }
  if (*(_DWORD *)a1 != 1684104048)
  {
    APSLogErrorAt();
    return 4294960556;
  }
  v6 = (pthread_mutex_t *)(a1 + 8);
  pthread_mutex_lock((pthread_mutex_t *)(a1 + 8));
  if (!a3)
  {
    if (*(int *)(a1 + 192) <= 9)
    {
      if (*(_QWORD *)(a1 + 41456) && *(_DWORD *)(a1 + 41464))
        goto LABEL_4;
      v12 = 4294960574;
    }
    else
    {
      v12 = 4294960567;
    }
LABEL_14:
    pthread_mutex_unlock(v6);
    return v12;
  }
LABEL_4:
  v7 = malloc_type_calloc(1uLL, 0x18uLL, 0x1030040B4FB57C1uLL);
  if (!v7)
  {
    APSLogErrorAt();
LABEL_20:
    v12 = 4294960568;
    goto LABEL_14;
  }
  v8 = v7;
  *((_BYTE *)v7 + 8) = a3;
  v9 = strdup(a2);
  v8[2] = v9;
  if (!v9)
  {
    APSLogErrorAt();
    _AirTunesDACPClient_FreeRequest(v8);
    goto LABEL_20;
  }
  v10 = (_QWORD *)(a1 + 184);
  do
  {
    v11 = v10;
    v10 = (_QWORD *)*v10;
  }
  while (v10);
  *v11 = v8;
  ++*(_DWORD *)(a1 + 192);
  pthread_mutex_unlock((pthread_mutex_t *)(a1 + 8));
  pthread_cond_signal((pthread_cond_t *)(a1 + 80));
  return 0;
}

uint64_t pairingServices_registerBaseClass()
{
  CMBaseGetClassID();
  return FigBaseClassRegisterClass();
}

CFStringRef pairingServices_copyFormattingDesc(uint64_t a1)
{
  return CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, CFSTR("[APPairingServices %p]"), a1);
}

uint64_t APReceiverMediaRemoteXPCService_IsClientConnected()
{
  uint64_t v0;

  FigSimpleMutexCheckIsNotLockedOnThisThread();
  pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
  v0 = gAPReceiverMediaRemoteService_2;
  pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
  return v0;
}

uint64_t APReceiverMediaRemoteXPCService_CommandHandler(CFTypeRef cf1, const __CFDictionary *a2, __CFDictionary **a3)
{
  const void *Value;
  const void *v7;
  const __CFData *v8;
  const __CFData *v9;
  uint64_t v10;
  const void *v11;
  const void *v12;
  uint64_t *v13;
  CFMutableDictionaryRef Mutable;
  uint64_t v15;
  __CFDictionary *v16;
  uint64_t v17;
  const void *v18;
  const void *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(const void *, const __CFData *, const void *);
  uint64_t v23;
  const void *v24;
  const void *v26;
  const void *v27;
  const void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  const __CFString *v35;
  uint64_t v36;
  const void *v37;
  __CFDictionary *v38;
  __CFDictionary *v39;
  CFTypeRef *v40;
  NSObject *v41;
  _QWORD block[6];
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  int v50;
  int v51;

  if (gLogCategory_APReceiverMediaRemoteXPCService <= 40
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(cf1, CFSTR("sendData")))
  {
    if (a2)
    {
      Value = CFDictionaryGetValue(a2, CFSTR("objectID"));
      if (Value)
      {
        v7 = Value;
        v8 = (const __CFData *)CFDictionaryGetValue(a2, CFSTR("data"));
        if (v8)
        {
          v9 = v8;
          if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
            && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
          {
            CFDataGetLength(v9);
            LogPrintF();
          }
          FigSimpleMutexCheckIsNotLockedOnThisThread();
          pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
          if (gAPReceiverMediaRemoteService_1)
          {
            v20 = CFDictionaryGetValue((CFDictionaryRef)gAPReceiverMediaRemoteService_1, v7);
            if (v20)
            {
              v21 = v20;
              v22 = (uint64_t (*)(const void *, const __CFData *, const void *))v20[1];
              if (v22)
              {
                if (!v20[2])
                {
                  pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
                  v24 = 0;
                  goto LABEL_35;
                }
                v23 = FigCFWeakReferenceHolderCopyReferencedObject();
                if (v23)
                {
                  v24 = (const void *)v23;
                  v22 = (uint64_t (*)(const void *, const __CFData *, const void *))v21[1];
                  pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
                  if (!v22)
                  {
                    v10 = 0;
                    goto LABEL_42;
                  }
LABEL_35:
                  if (gLogCategory_APReceiverMediaRemoteXPCService <= 30
                    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
                  {
                    CFDataGetLength(v9);
                    LogPrintF();
                  }
                  v10 = v22(v7, v9, v24);
                  if ((_DWORD)v10)
                    APSLogErrorAt();
                  if (!v24)
                  {
LABEL_43:
                    if (!(_DWORD)v10)
                    {
                      *a3 = 0;
                      return v10;
                    }
LABEL_71:
                    APSLogErrorAt();
                    return v10;
                  }
LABEL_42:
                  CFRelease(v24);
                  goto LABEL_43;
                }
              }
            }
          }
          APSLogErrorAt();
          pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
          v10 = 4294960587;
          goto LABEL_71;
        }
      }
    }
LABEL_80:
    APSLogErrorAt();
    return 4294960591;
  }
  if (CFEqual(cf1, CFSTR("connect")))
  {
    aprmrc_setIsClientConnected(1);
    return 0;
  }
  if (CFEqual(cf1, CFSTR("copyProperty")))
  {
    if (!a2)
      goto LABEL_80;
    v11 = CFDictionaryGetValue(a2, CFSTR("propertyKey"));
    if (!v11)
      goto LABEL_80;
    v12 = v11;
    v47 = 0;
    v48 = &v47;
    v49 = 0x2000000000;
    v50 = 0;
    v43 = 0;
    v44 = &v43;
    v45 = 0x2000000000;
    v46 = 0;
    if (CFEqual(v11, CFSTR("AirPlaySecuritySetting")))
    {
      v13 = v44;
      v51 = 0;
      Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (!Mutable)
      {
        APSLogErrorAt();
        v51 = -6728;
LABEL_25:
        *((_DWORD *)v48 + 6) = v51;
LABEL_63:
        v10 = *((unsigned int *)v48 + 6);
        if ((_DWORD)v10 == -72025)
        {
          v10 = 4294960569;
          *((_DWORD *)v48 + 6) = -6727;
          _Block_object_dispose(&v43, 8);
          _Block_object_dispose(&v47, 8);
          return v10;
        }
        v37 = (const void *)v44[3];
        _Block_object_dispose(&v43, 8);
        _Block_object_dispose(&v47, 8);
        if ((_DWORD)v10)
        {
          if ((_DWORD)v10 == -6727)
            return v10;
          goto LABEL_71;
        }
        v38 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        if (v38)
        {
          v39 = v38;
          if (v37)
          {
            CFDictionarySetValue(v38, CFSTR("propertyValue"), v37);
            CFRelease(v37);
          }
          v10 = 0;
          *a3 = v39;
        }
        else
        {
          APSLogErrorAt();
          return 4294960568;
        }
        return v10;
      }
      v16 = Mutable;
      v18 = (const void *)APReceiverSystemInfoCopyProperty(*(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160), v15, (uint64_t)CFSTR("Password"), 0, &v51);
      if (v51)
      {
        APSLogErrorAt();
        v19 = 0;
      }
      else
      {
        v19 = (const void *)APReceiverSystemInfoCopyProperty(*(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160), v17, (uint64_t)CFSTR("SecurityMode"), 0, &v51);
        if (!v51)
        {
          CFDictionaryAddValue(v16, CFSTR("password"), v18);
          CFDictionaryAddValue(v16, CFSTR("securityMode"), v19);
          v13[3] = (uint64_t)v16;
          if (!v18)
            goto LABEL_23;
          goto LABEL_22;
        }
        APSLogErrorAt();
      }
      CFRelease(v16);
      if (!v18)
      {
LABEL_23:
        if (v19)
          CFRelease(v19);
        goto LABEL_25;
      }
LABEL_22:
      CFRelease(v18);
      goto LABEL_23;
    }
    if (CFEqual(v12, CFSTR("AirPlayGroupPublicName")))
    {
      v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
      v34 = v48 + 3;
      v35 = CFSTR("AirPlayGroupPublicName");
    }
    else if (CFEqual(v12, CFSTR("AirPlayGroupUUID")) || CFEqual(v12, CFSTR("AirPlayGroupID")))
    {
      v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
      v34 = v48 + 3;
      v35 = CFSTR("AirPlayGroupID");
    }
    else
    {
      if (CFEqual(v12, CFSTR("AirPlayedFromGroupLeader")))
      {
        if (CFObjectGetPropertyInt64Sync() && !CFObjectGetPropertyInt64Sync())
          v40 = (CFTypeRef *)MEMORY[0x24BDBD270];
        else
          v40 = (CFTypeRef *)MEMORY[0x24BDBD268];
        v36 = (uint64_t)CFRetain(*v40);
        goto LABEL_62;
      }
      if (CFEqual(v12, CFSTR("GroupContainsDiscoverableLeader")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("GroupContainsDiscoverableLeader");
      }
      else if (CFEqual(v12, CFSTR("IsAirPlayGroupLeader")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("IsAirPlayGroupLeader");
      }
      else if (CFEqual(v12, CFSTR("IsSilentPrimary")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("IsSilentPrimary");
      }
      else if (CFEqual(v12, CFSTR("ReceiverSessionIsActive")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ReceiverSessionIsActive");
      }
      else if (CFEqual(v12, CFSTR("SystemPairingIdentity")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("SystemPairingIdentity");
      }
      else if (CFEqual(v12, CFSTR("TightSyncUUID")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("TightSyncUUID");
      }
      else if (CFEqual(v12, CFSTR("IsTightSyncGroupLeader")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("IsTightSyncGroupLeader");
      }
      else if (CFEqual(v12, CFSTR("ParentGroupUUID")) || CFEqual(v12, CFSTR("ParentGroupID")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ParentGroupID");
      }
      else if (CFEqual(v12, CFSTR("ParentGroupContainsDiscoverableLeader")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ParentGroupContainsDiscoverableLeader");
      }
      else if (CFEqual(v12, CFSTR("ParentGroupLeaderSupportsRelay")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ParentGroupLeaderSupportsRelay");
      }
      else if (CFEqual(v12, CFSTR("ClusterUUID")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ClusterUUID");
      }
      else if (CFEqual(v12, CFSTR("ClusterType")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ClusterType");
      }
      else if (CFEqual(v12, CFSTR("ClusterSize")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ClusterSize");
      }
      else if (CFEqual(v12, CFSTR("IsClusterLeader")))
      {
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("IsClusterLeader");
      }
      else
      {
        if (!CFEqual(v12, CFSTR("ClusterLeaderUUID")))
        {
          if (CFEqual(v12, CFSTR("MRInfo")))
          {
            v41 = *(NSObject **)(gAPReceiverMediaRemoteService_0 + 88);
            block[0] = MEMORY[0x24BDAC760];
            block[1] = 0x40000000;
            block[2] = __APReceiverMediaRemoteXPCService_copyProperty_block_invoke;
            block[3] = &unk_24E21F3F0;
            block[4] = &v47;
            block[5] = &v43;
            dispatch_sync(v41, block);
          }
          else
          {
            *((_DWORD *)v48 + 6) = -6705;
          }
          goto LABEL_63;
        }
        v33 = *(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160);
        v34 = v48 + 3;
        v35 = CFSTR("ClusterLeaderUUID");
      }
    }
    v36 = APReceiverSystemInfoCopyProperty(v33, v32, (uint64_t)v35, 0, v34);
LABEL_62:
    v44[3] = v36;
    goto LABEL_63;
  }
  if (CFEqual(cf1, CFSTR("setProperty")))
  {
    *a3 = 0;
    if (a2)
    {
      v26 = CFDictionaryGetValue(a2, CFSTR("propertyKey"));
      if (v26)
      {
        v27 = v26;
        v28 = CFDictionaryGetValue(a2, CFSTR("propertyValue"));
        if (v28)
        {
          v29 = (uint64_t)v28;
          if (CFEqual(v27, CFSTR("IsClusterLeader")))
          {
            v10 = APReceiverSystemInfoSetProperty(*(_QWORD *)(gAPReceiverMediaRemoteService_0 + 160), v30, (uint64_t)CFSTR("IsClusterLeader"), v31, v29);
            if (!(_DWORD)v10)
              return v10;
          }
          else
          {
            v10 = 4294960591;
          }
          goto LABEL_71;
        }
      }
    }
    goto LABEL_80;
  }
  if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294960561;
}

uint64_t aprmrc_handleClientDeath()
{
  int v0;

  if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    getprogname();
    LogPrintF();
  }
  aprmrc_setIsClientConnected(0);
  return AirPlayReceiverServerControl(gAPReceiverMediaRemoteService_0, v0, CFSTR("partnerProcessDeath"), CFSTR("MediaRemoteServices"), 0, 0);
}

uint64_t aprmrc_setIsClientConnected(char a1)
{
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
  gAPReceiverMediaRemoteService_2 = a1;
  return pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
}

void APReceiverMediaRemoteXPCService_PostEvent(const void *a1, const void *a2, const __CFData *a3)
{
  CFMutableDictionaryRef Mutable;
  __CFDictionary *v7;
  CFTypeRef *Value;
  CFTypeRef v9;

  if (gLogCategory_APReceiverMediaRemoteXPCService <= 40
    && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  FigSimpleMutexCheckIsNotLockedOnThisThread();
  if (APReceiverMediaRemoteXPCService_IsClientConnected())
  {
    Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    if (Mutable)
    {
      v7 = Mutable;
      if (CFEqual(a1, CFSTR("didReceiveMediaRemoteData")))
      {
        if (a3 && a2)
        {
          FigSimpleMutexCheckIsNotLockedOnThisThread();
          pthread_mutex_lock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
          Value = (CFTypeRef *)CFDictionaryGetValue((CFDictionaryRef)gAPReceiverMediaRemoteService_1, a2);
          if (Value)
          {
            v9 = CFRetain(*Value);
            pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
            if (v9)
            {
              if (gLogCategory_APReceiverMediaRemoteXPCService <= 40
                && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
              {
                CFDataGetLength(a3);
                LogPrintF();
              }
              CFDictionarySetValue(v7, CFSTR("objectID"), a2);
              CFDictionarySetValue(v7, CFSTR("clientUUID"), v9);
              CFDictionarySetValue(v7, CFSTR("data"), a3);
              APSXPCServerPostEvent();
              CFRelease(v9);
              goto LABEL_29;
            }
          }
          else
          {
            pthread_mutex_unlock((pthread_mutex_t *)gAPReceiverMediaRemoteService_3);
          }
        }
      }
      else
      {
        if (!CFEqual(a1, CFSTR("didCloseCommChannel")))
        {
          if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
            && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          goto LABEL_29;
        }
        if (a2)
        {
          CFDictionarySetValue(v7, CFSTR("objectID"), a2);
          if (gLogCategory_APReceiverMediaRemoteXPCService <= 50
            && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
          APSXPCServerPostEvent();
          goto LABEL_29;
        }
      }
      APSLogErrorAt();
LABEL_29:
      CFRelease(v7);
      return;
    }
    APSLogErrorAt();
  }
  else if (gLogCategory_APReceiverMediaRemoteXPCService <= 90
         && (gLogCategory_APReceiverMediaRemoteXPCService != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
}

uint64_t APReceiverUIControllerGetClassID()
{
  if (APReceiverUIControllerGetClassID_once != -1)
    dispatch_once(&APReceiverUIControllerGetClassID_once, &__block_literal_global_3134);
  return APReceiverUIControllerGetClassID_classID;
}

uint64_t APReceiverUIControllerGetTypeID()
{
  if (APReceiverUIControllerGetClassID_once != -1)
    dispatch_once(&APReceiverUIControllerGetClassID_once, &__block_literal_global_3134);
  return CMBaseClassGetCFTypeID();
}

void audioSession_handleMediaDataControlRequest_3144(uint64_t a1, uint64_t a2, int a3, uint64_t a4, const void *a5, uint64_t a6)
{
  uint64_t v11;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v13;
  CFTypeID v14;
  CFTypeID v15;
  int Int64Ranged;
  CFTypeID v17;
  int v18;
  int v19;

  v19 = 0;
  v11 = *(_QWORD *)(a6 + 40);
  if (gLogCategory_APReceiverAudioSessionGhost <= 50
    && (gLogCategory_APReceiverAudioSessionGhost != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    APMediaDataControlServerSendResponse(a1, a2, a4, 0, -6728);
    return;
  }
  v13 = Mutable;
  if (a3 <= 1718839393)
  {
    if (a3 == 1634562925)
    {
      CFStringGetTypeID();
      CFDictionaryGetTypedValue();
LABEL_46:
      APMediaDataControlServerSendResponse(a1, a2, a4, (uint64_t)v13, v19);
      goto LABEL_47;
    }
    if (a3 == 1718383464)
    {
      if (a5)
      {
        v14 = CFGetTypeID(a5);
        if (v14 == CFDictionaryGetTypeID())
        {
          v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
          if (!v19)
          {
            if (APSAudioTransportTimeIsValid())
              goto LABEL_33;
            goto LABEL_52;
          }
          goto LABEL_53;
        }
      }
      goto LABEL_40;
    }
LABEL_44:
    v18 = -6714;
    goto LABEL_45;
  }
  if (a3 == 1718839394)
  {
    if (*(_DWORD *)v11 == 103)
    {
      if (a5)
      {
        v17 = CFGetTypeID(a5);
        if (v17 == CFDictionaryGetTypeID())
        {
          if (CFDictionaryContainsKey((CFDictionaryRef)a5, CFSTR("flushFromSeq")))
          {
            CFDictionaryGetInt64Ranged();
            v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
            if (v19)
              goto LABEL_53;
            APSAudioTransportTimeIsValid();
          }
          v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
          if (!v19)
          {
            if (APSAudioTransportTimeIsValid())
            {
LABEL_33:
              CFDictionaryGetInt64Ranged();
              goto LABEL_34;
            }
            goto LABEL_52;
          }
LABEL_53:
          APSLogErrorAt();
          goto LABEL_46;
        }
      }
LABEL_40:
      APSLogErrorAt();
      v18 = -6756;
LABEL_45:
      v19 = v18;
      goto LABEL_46;
    }
LABEL_43:
    APSLogErrorAt();
    goto LABEL_44;
  }
  if (a3 != 1936875892)
    goto LABEL_44;
  if (*(_DWORD *)v11 != 103)
    goto LABEL_43;
  if (!a5)
    goto LABEL_40;
  v15 = CFGetTypeID(a5);
  if (v15 != CFDictionaryGetTypeID())
    goto LABEL_40;
  Int64Ranged = CFDictionaryGetInt64Ranged();
  if (Int64Ranged != 1)
  {
    *(_BYTE *)(v11 + 32) = Int64Ranged != 0;
    v19 = 0;
    if (!Int64Ranged && APSAudioTransportTimeIsValid())
      APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    goto LABEL_46;
  }
  v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
  if (v19)
    goto LABEL_53;
  if (!APSAudioTransportTimeIsValid())
  {
LABEL_52:
    APSLogErrorAt();
    v18 = -72151;
    goto LABEL_45;
  }
  v19 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
  if (v19)
    goto LABEL_53;
  CFDictionaryGetInt64Ranged();
  CFDictionaryGetInt64();
  CFDictionaryGetInt64();
  CFDictionaryGetInt64Ranged();
  *(_BYTE *)(v11 + 32) = 1;
LABEL_34:
  APMediaDataControlServerSendResponse(a1, a2, a4, (uint64_t)v13, 0);
LABEL_47:
  CFRelease(v13);
}

void APReceiverAudioSessionGhostFinalize(_QWORD *a1)
{
  const void *v2;
  const void *v3;
  const void *v4;

  v2 = (const void *)a1[3];
  if (v2)
  {
    CFRelease(v2);
    a1[3] = 0;
  }
  v3 = (const void *)a1[5];
  if (v3)
  {
    CFRelease(v3);
    a1[5] = 0;
  }
  v4 = (const void *)a1[2];
  if (v4)
    CFRelease(v4);
  free(a1);
}

uint64_t APReceiverAudioSessionGhostSetSecurityInfo()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostStartPacketProcesser(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1)
  {
    v3 = *(_QWORD *)(a1 + 40);
    v4 = 0;
    dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v3, (dispatch_function_t)controlServer_startInternal);
    if ((_DWORD)v4)
      APSLogErrorAt();
  }
  return 0;
}

uint64_t APReceiverAudioSessionGhostStopPacketProcesser(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 40);
  if (!v1)
    return 0;
  v4 = *(_QWORD *)(a1 + 40);
  v5 = 0;
  dispatch_sync_f(*(dispatch_queue_t *)(v1 + 112), &v4, (dispatch_function_t)controlServer_stopInternal);
  v2 = v5;
  if ((_DWORD)v5)
    APSLogErrorAt();
  return v2;
}

uint64_t APReceiverAudioSessionGhostFlushAudio(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _OWORD *a7)
{
  uint64_t v7;

  if (a7)
  {
    v7 = MEMORY[0x24BE03810];
    *a7 = *MEMORY[0x24BE03810];
    *(_OWORD *)((char *)a7 + 12) = *(_OWORD *)(v7 + 12);
  }
  return 0;
}

uint64_t APReceiverAudioSessionGhostSetRateAndAnchorTime(uint64_t a1, int a2, uint64_t a3, __int128 *a4, uint64_t a5, _OWORD *a6)
{
  uint64_t result;
  __int128 v7;

  if (a1)
  {
    *(_BYTE *)(a1 + 32) = a2 != 0;
    result = 0;
    if (a6)
    {
      v7 = *a4;
      *(_OWORD *)((char *)a6 + 12) = *(__int128 *)((char *)a4 + 12);
      *a6 = v7;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APReceiverAudioSessionGhostConvertProgressRTPTimeToSecond(uint64_t a1, int a2, int a3, int a4, double *a5, double *a6)
{
  double v11;
  double v12;
  double v13;
  uint64_t result;

  if (a1)
  {
    APSAudioFormatDescriptionGetSampleRate();
    v12 = v11;
    APSAudioFormatDescriptionGetSampleRate();
    if (a5)
      *a5 = (double)(a3 - a2) / v12;
    result = 0;
    if (a6)
      *a6 = (double)(a4 - a2) / v13;
  }
  else
  {
    APSLogErrorAt();
    return 4294960591;
  }
  return result;
}

uint64_t APReceiverAudioSessionGhostReadAudio(int a1, int a2, int a3, void *a4, size_t a5)
{
  bzero(a4, a5);
  return 0;
}

uint64_t APReceiverAudioSessionGhostUpdateLatency()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostCopyProperty(uint64_t a1, CFTypeRef cf1, int *a3)
{
  CFTypeRef *v6;
  uint64_t result;
  int v8;
  const void *Object;
  const void *v10;

  if (a1)
  {
    if (CFEqual(cf1, CFSTR("MediaDataControlPort")))
    {
      result = CFNumberCreateInt64();
      if (result)
        goto LABEL_10;
      goto LABEL_20;
    }
    if (CFEqual(cf1, CFSTR("IsPlayingBufferedAudio")))
    {
      if (*(_DWORD *)a1 == 103)
      {
        v6 = (CFTypeRef *)MEMORY[0x24BDBD270];
        if (!*(_BYTE *)(a1 + 32))
          v6 = (CFTypeRef *)MEMORY[0x24BDBD268];
        result = (uint64_t)CFRetain(*v6);
        goto LABEL_10;
      }
      APSLogErrorAt();
    }
    else
    {
      if (CFEqual(cf1, CFSTR("PlatformAudioLatency")))
      {
        Object = (const void *)CFNumberGetObject();
        result = (uint64_t)CFRetain(Object);
        if (result)
        {
LABEL_10:
          v8 = 0;
          goto LABEL_11;
        }
        goto LABEL_20;
      }
      if (CFEqual(cf1, CFSTR("AudioFormat")))
      {
        v10 = *(const void **)(a1 + 24);
        if (v10)
        {
          result = (uint64_t)CFRetain(v10);
          if (result)
            goto LABEL_10;
        }
LABEL_20:
        APSLogErrorAt();
        result = 0;
        v8 = -6728;
        goto LABEL_11;
      }
      if (gLogCategory_APReceiverAudioSessionGhost <= 50
        && (gLogCategory_APReceiverAudioSessionGhost != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    result = 0;
    v8 = -72154;
  }
  else
  {
    APSLogErrorAt();
    result = 0;
    v8 = -6705;
  }
LABEL_11:
  if (a3)
    *a3 = v8;
  return result;
}

uint64_t APReceiverAudioSessionGhostSetProperty()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostCopyMetrics()
{
  return 0;
}

uint64_t APReceiverAudioSessionGhostLogEnded()
{
  return 0;
}

CFTypeRef APReceiverAudioSessionGhostCopyAudioBufferInfo(uint64_t a1, _DWORD *a2)
{
  const void *Empty;

  if (a2)
    *a2 = 0;
  Empty = (const void *)CFDictionaryGetEmpty();
  return CFRetain(Empty);
}

uint64_t APValeriaHelperGetTypeID()
{
  if (APValeriaHelperGetTypeID_once != -1)
    dispatch_once(&APValeriaHelperGetTypeID_once, &__block_literal_global_3225);
  return APValeriaHelperGetTypeID_typeID;
}

_QWORD *vhelper_finalize(_QWORD *result)
{
  _QWORD *v1;
  const void *v2;

  v1 = result;
  if (result[4])
  {
    if (gLogCategory_APValeriaHelper > 100)
      goto LABEL_23;
    if (gLogCategory_APValeriaHelper == -1)
    {
      result = (_QWORD *)_LogCategory_Initialize();
      if (!(_DWORD)result)
        goto LABEL_23;
    }
LABEL_22:
    result = (_QWORD *)LogPrintF();
LABEL_23:
    __break(1u);
    return result;
  }
  if (result[13])
  {
    if (gLogCategory_APValeriaHelper > 100)
      goto LABEL_23;
    if (gLogCategory_APValeriaHelper == -1)
    {
      result = (_QWORD *)_LogCategory_Initialize();
      if (!(_DWORD)result)
        goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (result[18])
  {
    if (gLogCategory_APValeriaHelper > 100)
      goto LABEL_23;
    if (gLogCategory_APValeriaHelper == -1)
    {
      result = (_QWORD *)_LogCategory_Initialize();
      if (!(_DWORD)result)
        goto LABEL_23;
    }
    goto LABEL_22;
  }
  v2 = (const void *)result[2];
  if (v2)
  {
    CFRelease(v2);
    v1[2] = 0;
  }
  FigSimpleMutexDestroy();
  v1[3] = 0;
  FigSimpleMutexDestroy();
  v1[12] = 0;
  result = (_QWORD *)FigSimpleMutexDestroy();
  v1[17] = 0;
  if (gLogCategory_APValeriaHelper <= 50)
  {
    if (gLogCategory_APValeriaHelper != -1)
      return (_QWORD *)LogPrintF();
    result = (_QWORD *)_LogCategory_Initialize();
    if ((_DWORD)result)
      return (_QWORD *)LogPrintF();
  }
  return result;
}

uint64_t APValeriaHelperCreate(uint64_t a1, uint64_t *a2)
{
  uint64_t Instance;
  uint64_t v4;
  uint64_t result;

  LogSetAppID();
  if (APValeriaHelperGetTypeID_once != -1)
    dispatch_once(&APValeriaHelperGetTypeID_once, &__block_literal_global_3225);
  Instance = _CFRuntimeCreateInstance();
  if (Instance)
  {
    v4 = Instance;
    *(_OWORD *)(Instance + 128) = 0u;
    *(_OWORD *)(Instance + 144) = 0u;
    *(_OWORD *)(Instance + 96) = 0u;
    *(_OWORD *)(Instance + 112) = 0u;
    *(_OWORD *)(Instance + 64) = 0u;
    *(_OWORD *)(Instance + 80) = 0u;
    *(_OWORD *)(Instance + 32) = 0u;
    *(_OWORD *)(Instance + 48) = 0u;
    *(_OWORD *)(Instance + 16) = 0u;
    *(_QWORD *)(Instance + 24) = FigSimpleMutexCreate();
    *(_QWORD *)(v4 + 96) = FigSimpleMutexCreate();
    *(_QWORD *)(v4 + 136) = FigSimpleMutexCreate();
    *(_BYTE *)(v4 + 88) = FigGetCFPreferenceNumberWithDefault() != 0;
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    result = 0;
    *a2 = v4;
  }
  else
  {
    APSLogErrorAt();
    return 4294960568;
  }
  return result;
}

uint64_t APValeriaHelperDiscoveryStart(uint64_t a1, uint64_t a2, uint64_t a3)
{
  CFMutableDictionaryRef Mutable;
  uint64_t v7;
  uint64_t active;
  uint64_t v9;
  void (*v10)(uint64_t, _QWORD, _QWORD);
  uint64_t v11;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
  if (!a2)
  {
    v11 = 4294960591;
LABEL_16:
    APSLogErrorAt();
    goto LABEL_13;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    v11 = 4294960587;
    goto LABEL_16;
  }
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  FigCFDictionarySetInt32();
  v7 = FigRouteDiscovererXPCRemoteCreate();
  if ((_DWORD)v7)
  {
    v11 = v7;
    goto LABEL_19;
  }
  active = vhelper_registerActiveHelper();
  *(_QWORD *)(a1 + 56) = active;
  if (!active)
  {
    v11 = 4294960588;
LABEL_19:
    APSLogErrorAt();
    if (!Mutable)
      goto LABEL_13;
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 40) = a2;
  *(_QWORD *)(a1 + 48) = a3;
  *(_QWORD *)(a1 + 32) = 0;
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
  if (v10)
    v10(v9, *MEMORY[0x24BE649D0], *MEMORY[0x24BE649B0]);
  if (gLogCategory_APValeriaHelper <= 50
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v11 = 0;
  if (Mutable)
LABEL_12:
    CFRelease(Mutable);
LABEL_13:
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
  return v11;
}

uint64_t vhelper_registerActiveHelper()
{
  if (vhelper_getActiveHelpers_once != -1)
    dispatch_once(&vhelper_getActiveHelpers_once, &__block_literal_global_33);
  if (FigCFWeakReferenceTableAddValueAndGetKey())
    APSLogErrorAt();
  return 0;
}

void vhelper_handleAvailableEndpointsChanged(uint64_t a1, uint64_t a2)
{
  uint64_t active;
  uint64_t v4;
  _DWORD *v5;
  void (*v6)(__CFArray *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, _QWORD, _QWORD, CFArrayRef *);
  const __CFAllocator *v10;
  int v11;
  __CFArray *Mutable;
  CFIndex Count;
  CFIndex v14;
  CFIndex v15;
  const void *ValueAtIndex;
  CFAllocatorRef v17;
  uint64_t CMBaseObject;
  void (*v19)(uint64_t, const __CFString *, CFAllocatorRef, CFTypeRef *);
  int v20;
  int v21;
  uint64_t v22;
  CFTypeRef cf;
  CFArrayRef theArray;

  active = vhelper_lookupAndRetainActiveHelperWithID();
  if (active)
  {
    v4 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 24));
    if (!*(_QWORD *)(v4 + 32) || *(_QWORD *)(v4 + 56) != a2 || !*(_QWORD *)(v4 + 40))
    {
      pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 24));
LABEL_5:
      CFRelease((CFTypeRef)v4);
      return;
    }
    v5 = &unk_2553CD000;
    if (gLogCategory_APValeriaHelper <= 30
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v6 = *(void (**)(__CFArray *, uint64_t))(v4 + 40);
    v7 = *(_QWORD *)(v4 + 48);
    theArray = 0;
    v8 = *(_QWORD *)(v4 + 32);
    v9 = *(uint64_t (**)(uint64_t, _QWORD, _QWORD, CFArrayRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                         + 48);
    if (v9)
    {
      v10 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
      v11 = v9(v8, *MEMORY[0x24BE649C8], *MEMORY[0x24BDBD240], &theArray);
      if (!v11)
      {
        Mutable = theArray;
        if (!*(_BYTE *)(v4 + 88) || !theArray)
        {
          pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 24));
          goto LABEL_34;
        }
        Count = CFArrayGetCount(theArray);
        if (Count < 1)
        {
          Mutable = 0;
          v20 = 0;
        }
        else
        {
          v14 = Count;
          v22 = v7;
          v15 = 0;
          Mutable = 0;
          do
          {
            ValueAtIndex = CFArrayGetValueAtIndex(theArray, v15);
            cf = 0;
            v17 = CFGetAllocator(ValueAtIndex);
            CMBaseObject = FigEndpointGetCMBaseObject();
            v19 = *(void (**)(uint64_t, const __CFString *, CFAllocatorRef, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                                                  + 48);
            if (v19)
              v19(CMBaseObject, CFSTR("Features"), v17, &cf);
            if (APSFeaturesHasFeature())
            {
              if (!Mutable)
                Mutable = CFArrayCreateMutable(v10, 0, MEMORY[0x24BDBD690]);
              CFArrayAppendValue(Mutable, ValueAtIndex);
            }
            if (cf)
              CFRelease(cf);
            ++v15;
          }
          while (v14 != v15);
          v20 = 0;
          v7 = v22;
          v5 = (_DWORD *)&unk_2553CD000;
        }
LABEL_31:
        if (theArray)
          CFRelease(theArray);
        pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 24));
        if (v20)
        {
          APSLogErrorAt();
          goto LABEL_44;
        }
LABEL_34:
        if (v6 && Mutable)
        {
          v21 = v5[186];
          if (v21 <= 30 && (v21 != -1 || _LogCategory_Initialize()))
          {
            CFArrayGetCount(Mutable);
            LogPrintF();
          }
          v6(Mutable, v7);
LABEL_41:
          CFRelease(Mutable);
          goto LABEL_5;
        }
LABEL_44:
        if (!Mutable)
          goto LABEL_5;
        goto LABEL_41;
      }
      v20 = v11;
    }
    else
    {
      v20 = -12782;
    }
    APSLogErrorAt();
    Mutable = 0;
    goto LABEL_31;
  }
}

uint64_t vhelper_lookupAndRetainActiveHelperWithID()
{
  if (vhelper_getActiveHelpers_once != -1)
    dispatch_once(&vhelper_getActiveHelpers_once, &__block_literal_global_33);
  return FigCFWeakReferenceTableCopyValue();
}

uint64_t __vhelper_getActiveHelpers_block_invoke()
{
  uint64_t result;

  result = FigCFWeakReferenceTableCreate();
  if ((_DWORD)result)
  {
    if (gLogCategory_APValeriaHelper <= 100)
    {
      if (gLogCategory_APValeriaHelper != -1 || (result = _LogCategory_Initialize(), (_DWORD)result))
        result = LogPrintF();
    }
    __break(1u);
  }
  return result;
}

uint64_t APValeriaHelperDiscoveryStartAndCopyMatchingEndpoint(uint64_t a1, const void *a2, unsigned int a3, _QWORD *a4)
{
  CFMutableDictionaryRef Mutable;
  uint64_t v9;
  uint64_t active;
  uint64_t v11;
  CFTypeRef v12;
  NSObject *v13;
  uint64_t v14;
  void (*v15)(uint64_t, _QWORD, _QWORD);
  uint64_t v16;
  dispatch_time_t v17;
  CFTypeRef v19;
  const void *v20;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
  if (*(_QWORD *)(a1 + 32))
  {
    v16 = 4294960587;
    APSLogErrorAt();
    v11 = 0;
    v13 = 0;
  }
  else
  {
    Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
    FigCFDictionarySetInt32();
    v9 = FigRouteDiscovererXPCRemoteCreate();
    if ((_DWORD)v9)
    {
      v16 = v9;
      APSLogErrorAt();
      v13 = 0;
      v11 = 0;
    }
    else
    {
      active = vhelper_registerActiveHelper();
      v11 = active;
      *(_QWORD *)(a1 + 56) = active;
      if (active)
      {
        *(_QWORD *)(a1 + 40) = vhelper_findMatchingEndpoint;
        *(_QWORD *)(a1 + 48) = active;
        if (a2)
          v12 = CFRetain(a2);
        else
          v12 = 0;
        *(_QWORD *)(a1 + 72) = v12;
        v13 = dispatch_semaphore_create(0);
        *(_QWORD *)(a1 + 64) = v13;
        dispatch_retain(v13);
        *(_QWORD *)(a1 + 32) = 0;
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterAddListener();
        v14 = *(_QWORD *)(a1 + 32);
        v15 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
        if (v15)
          v15(v14, *MEMORY[0x24BE649D0], *MEMORY[0x24BE649B0]);
        if (gLogCategory_APValeriaHelper <= 50
          && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v16 = 0;
      }
      else
      {
        v16 = 4294960588;
        APSLogErrorAt();
        v13 = 0;
      }
    }
    if (Mutable)
      CFRelease(Mutable);
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
  if ((_DWORD)v16)
  {
LABEL_28:
    if (!v13)
      return v16;
LABEL_29:
    dispatch_release(v13);
    return v16;
  }
  if ((a3 & 0x80000000) != 0)
    v17 = -1;
  else
    v17 = dispatch_time(0, 1000000000 * a3);
  if (!dispatch_semaphore_wait(v13, v17))
  {
    pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
    if (*(_QWORD *)(a1 + 32) && *(_QWORD *)(a1 + 56) == v11)
    {
      if (a4)
      {
        v19 = *(CFTypeRef *)(a1 + 80);
        if (v19)
          v19 = CFRetain(v19);
        *a4 = v19;
      }
      v20 = *(const void **)(a1 + 80);
      if (v20)
      {
        CFRelease(v20);
        v16 = 0;
        *(_QWORD *)(a1 + 80) = 0;
      }
      else
      {
        v16 = 0;
      }
    }
    else
    {
      v16 = 4294960573;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
    goto LABEL_28;
  }
  if (gLogCategory_APValeriaHelper <= 90
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  APValeriaHelperDiscoveryStop(a1);
  v16 = 4294960574;
  if (v13)
    goto LABEL_29;
  return v16;
}

void vhelper_findMatchingEndpoint(const __CFArray *a1, uint64_t a2)
{
  uint64_t active;
  uint64_t v5;
  CFIndex Count;
  const void *v7;
  CFIndex v8;
  const void *ValueAtIndex;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  active = vhelper_lookupAndRetainActiveHelperWithID();
  if (active)
  {
    v5 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 24));
    if (*(_QWORD *)(v5 + 32) && *(_QWORD *)(v5 + 56) == a2 && *(_QWORD *)(v5 + 40))
    {
      Count = CFArrayGetCount(a1);
      v7 = *(const void **)(v5 + 80);
      if (v7)
      {
        CFRelease(v7);
        *(_QWORD *)(v5 + 80) = 0;
      }
      if (Count >= 1)
      {
        v8 = 0;
        while (1)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(a1, v8);
          v12 = 0;
          v13 = &v12;
          v14 = 0x2000000000;
          v15 = 1;
          if (!*(_QWORD *)(v5 + 72))
            break;
          CFDictionaryApplyBlock();
          if (*((_BYTE *)v13 + 24))
            break;
          _Block_object_dispose(&v12, 8);
          if (Count == ++v8)
            goto LABEL_16;
        }
        *(_QWORD *)(v5 + 80) = CFRetain(ValueAtIndex);
        _Block_object_dispose(&v12, 8);
      }
LABEL_16:
      if (*(_QWORD *)(v5 + 80))
      {
        CMNotificationCenterGetDefaultLocalCenter();
        CMNotificationCenterRemoveListener();
        *(_QWORD *)(v5 + 40) = 0;
        v10 = *(NSObject **)(v5 + 64);
        if (v10)
        {
          dispatch_semaphore_signal(v10);
          v11 = *(NSObject **)(v5 + 64);
          if (v11)
          {
            dispatch_release(v11);
            *(_QWORD *)(v5 + 64) = 0;
          }
        }
      }
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v5 + 24));
    CFRelease((CFTypeRef)v5);
  }
}

uint64_t APValeriaHelperDiscoveryStop(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD);
  const void *v4;
  const void *v5;
  const void *v6;
  NSObject *v7;
  NSObject *v8;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 24));
  if (*(_QWORD *)(a1 + 32))
  {
    vhelper_unregisterActiveHelperWithID();
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
    v2 = *(_QWORD *)(a1 + 32);
    v3 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 8) + 56);
    if (v3)
      v3(v2, *MEMORY[0x24BE649D0], *MEMORY[0x24BE649B8]);
    v4 = *(const void **)(a1 + 32);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(a1 + 32) = 0;
    }
    v5 = *(const void **)(a1 + 80);
    if (v5)
    {
      CFRelease(v5);
      *(_QWORD *)(a1 + 80) = 0;
    }
    v6 = *(const void **)(a1 + 72);
    if (v6)
    {
      CFRelease(v6);
      *(_QWORD *)(a1 + 72) = 0;
    }
    *(_QWORD *)(a1 + 40) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *(_QWORD *)(a1 + 56) = 0;
    v7 = *(NSObject **)(a1 + 64);
    if (v7)
    {
      dispatch_semaphore_signal(v7);
      v8 = *(NSObject **)(a1 + 64);
      if (v8)
      {
        dispatch_release(v8);
        *(_QWORD *)(a1 + 64) = 0;
      }
    }
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 24));
}

uint64_t vhelper_unregisterActiveHelperWithID()
{
  if (vhelper_getActiveHelpers_once != -1)
    dispatch_once(&vhelper_getActiveHelpers_once, &__block_literal_global_33);
  return FigCFWeakReferenceTableRemoveValue();
}

void __vhelper_findMatchingEndpoint_block_invoke(uint64_t a1, uint64_t a2)
{
  uint64_t CMBaseObject;
  unsigned int (*v5)(uint64_t, uint64_t, _QWORD, CFTypeRef *);
  CFTypeRef cf;

  cf = 0;
  CMBaseObject = FigEndpointGetCMBaseObject();
  v5 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                            + 48);
  if (!v5 || v5(CMBaseObject, a2, *MEMORY[0x24BDBD240], &cf) || !FigCFEqual())
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
  if (cf)
    CFRelease(cf);
}

uint64_t APValeriaHelperReceiverStart(uint64_t a1, const void *a2, int a3)
{
  __CFDictionary *Mutable;
  __CFDictionary *v7;
  const void **v8;
  int v9;
  const void *v10;
  CFTypeRef v11;
  uint64_t active;
  CFTypeRef cf;
  unsigned int v15;

  cf = 0;
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  if (!a2)
  {
    v15 = -6705;
LABEL_22:
    APSLogErrorAt();
    goto LABEL_17;
  }
  if (*(_QWORD *)(a1 + 104))
  {
    v15 = -6709;
    goto LABEL_22;
  }
  Mutable = CFDictionaryCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  v7 = Mutable;
  v8 = (const void **)MEMORY[0x24BDBD270];
  if (!a3)
    v8 = (const void **)MEMORY[0x24BDBD268];
  CFDictionarySetValue(Mutable, CFSTR("UseDynamicPort"), *v8);
  CFDictionarySetValue(v7, CFSTR("SBufConsumer"), a2);
  v15 = AirPlayReceiverServerCreate(v7, (uint64_t *)&cf);
  if (v15)
    goto LABEL_23;
  v10 = *(const void **)(a1 + 16);
  if (v10)
  {
    CFRelease(v10);
    *(_QWORD *)(a1 + 16) = 0;
  }
  v11 = cf;
  *(_QWORD *)(a1 + 16) = AirPlayReceiverServerCopyProperty((uint64_t)cf, v9, CFSTR("deviceInfo"), 0, &v15);
  if (v15 || (v15 = CFObjectControlSync()) != 0)
  {
LABEL_23:
    APSLogErrorAt();
  }
  else
  {
    active = vhelper_registerActiveHelper();
    *(_QWORD *)(a1 + 112) = active;
    if (active)
    {
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterAddListener();
      CMNotificationCenterGetDefaultLocalCenter();
      CMNotificationCenterAddListener();
      *(_QWORD *)(a1 + 104) = v11;
      cf = 0;
      if (gLogCategory_APValeriaHelper <= 50
        && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      APSLogErrorAt();
      v15 = -6708;
      CFObjectControlSync();
    }
  }
  if (v7)
    CFRelease(v7);
LABEL_17:
  if (cf)
    CFRelease(cf);
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
  return v15;
}

void vhelper_handleClientConnected(uint64_t a1, uint64_t a2)
{
  uint64_t active;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;

  active = vhelper_lookupAndRetainActiveHelperWithID();
  if (active)
  {
    v4 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 96));
    if (*(_QWORD *)(v4 + 104) && *(_QWORD *)(v4 + 112) == a2)
    {
      if (gLogCategory_APValeriaHelper <= 50
        && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_BYTE *)(v4 + 128) = 1;
      v5 = *(NSObject **)(v4 + 120);
      if (v5)
      {
        dispatch_semaphore_signal(v5);
        v6 = *(NSObject **)(v4 + 120);
        if (v6)
        {
          dispatch_release(v6);
          *(_QWORD *)(v4 + 120) = 0;
        }
      }
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 96));
    CFRelease((CFTypeRef)v4);
  }
}

void vhelper_handleClientDisconnected(uint64_t a1, uint64_t a2)
{
  uint64_t active;
  uint64_t v4;

  active = vhelper_lookupAndRetainActiveHelperWithID();
  if (active)
  {
    v4 = active;
    pthread_mutex_lock(*(pthread_mutex_t **)(active + 96));
    if (*(_QWORD *)(v4 + 104) && *(_QWORD *)(v4 + 112) == a2)
    {
      if (gLogCategory_APValeriaHelper <= 50
        && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      *(_BYTE *)(v4 + 128) = 0;
    }
    pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 96));
    CFRelease((CFTypeRef)v4);
  }
}

uint64_t APValeriaHelperReceiverStop(uint64_t a1)
{
  const void *v2;
  NSObject *v3;
  NSObject *v4;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  if (*(_QWORD *)(a1 + 104))
  {
    vhelper_unregisterActiveHelperWithID();
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
    CFObjectControlSync();
    v2 = *(const void **)(a1 + 104);
    if (v2)
    {
      CFRelease(v2);
      *(_QWORD *)(a1 + 104) = 0;
    }
    *(_QWORD *)(a1 + 112) = 0;
    *(_BYTE *)(a1 + 128) = 0;
    v3 = *(NSObject **)(a1 + 120);
    if (v3)
    {
      dispatch_semaphore_signal(v3);
      v4 = *(NSObject **)(a1 + 120);
      if (v4)
      {
        dispatch_release(v4);
        *(_QWORD *)(a1 + 120) = 0;
      }
    }
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
  return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
}

uint64_t APValeriaHelperReceiverGetListeningPort(uint64_t a1)
{
  int v2;
  uint64_t v3;
  CFTypeRef v4;
  uint64_t v5;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  v3 = *(_QWORD *)(a1 + 104);
  if (!v3)
  {
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
    return 0;
  }
  v4 = AirPlayReceiverServerCopyProperty(v3, v2, CFSTR("listeningPort"), 0, 0);
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
  if (!v4)
    return 0;
  v5 = (unsigned __int16)CFGetInt64Ranged();
  CFRelease(v4);
  return v5;
}

uint64_t APValeriaHelperReceiverWaitForConnection(uint64_t a1, unsigned int a2)
{
  NSObject *v4;
  dispatch_time_t v5;
  uint64_t v6;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 96));
  if (!*(_QWORD *)(a1 + 104))
  {
    v6 = 4294960587;
LABEL_21:
    APSLogErrorAt();
    goto LABEL_22;
  }
  if (*(_BYTE *)(a1 + 128))
  {
    v6 = 0;
LABEL_22:
    pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
    return v6;
  }
  if (*(_QWORD *)(a1 + 120))
  {
    v6 = 4294960575;
    goto LABEL_21;
  }
  v4 = dispatch_semaphore_create(0);
  *(_QWORD *)(a1 + 120) = v4;
  dispatch_retain(v4);
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 96));
  if (!v4)
    return 0;
  if ((a2 & 0x80000000) != 0)
    v5 = -1;
  else
    v5 = dispatch_time(0, 1000000000 * a2);
  if (dispatch_semaphore_wait(v4, v5))
  {
    if (gLogCategory_APValeriaHelper <= 90
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    v6 = 4294960574;
  }
  else
  {
    v6 = 0;
  }
  dispatch_release(v4);
  return v6;
}

uint64_t APValeriaHelperActivationStart(uint64_t a1, uint64_t a2)
{
  const __CFAllocator *v4;
  uint64_t ControlChannelOnlyContext;
  uint64_t active;
  __CFDictionary *Mutable;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, __CFDictionary *);
  uint64_t v10;
  uint64_t v11;

  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 136));
  if (!a2)
  {
    v11 = 4294960591;
LABEL_25:
    APSLogErrorAt();
    goto LABEL_20;
  }
  if (*(_QWORD *)(a1 + 144))
  {
    v11 = 4294960587;
    goto LABEL_25;
  }
  if (gLogCategory_APValeriaHelper <= 50
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v4 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  ControlChannelOnlyContext = FigRoutingContextRemoteCreateControlChannelOnlyContext();
  if ((_DWORD)ControlChannelOnlyContext)
  {
    v11 = ControlChannelOnlyContext;
    goto LABEL_25;
  }
  active = vhelper_registerActiveHelper();
  *(_QWORD *)(a1 + 152) = active;
  if (!active)
  {
    v11 = 4294960588;
    goto LABEL_25;
  }
  *(_QWORD *)(a1 + 144) = 0;
  CMNotificationCenterGetDefaultLocalCenter();
  CMNotificationCenterAddListener();
  Mutable = CFDictionaryCreateMutable(v4, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  CFDictionarySetValue(Mutable, (const void *)*MEMORY[0x24BE649E0], (const void *)*MEMORY[0x24BDBD270]);
  v8 = *(_QWORD *)(a1 + 144);
  v9 = *(uint64_t (**)(uint64_t, uint64_t, __CFDictionary *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
  if (!v9)
  {
    v11 = 4294954514;
    goto LABEL_15;
  }
  v10 = v9(v8, a2, Mutable);
  if ((_DWORD)v10)
  {
    v11 = v10;
LABEL_15:
    APSLogErrorAt();
    vhelper_stopActivation(a1);
    if (!Mutable)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (gLogCategory_APValeriaHelper <= 50
    && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v11 = 0;
  if (Mutable)
LABEL_19:
    CFRelease(Mutable);
LABEL_20:
  pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 136));
  return v11;
}

void vhelper_handleCurrentEndpointChanged(uint64_t a1, uint64_t a2)
{
  uint64_t active;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, CFTypeRef *);
  CFTypeRef v7;
  CFTypeRef v8;
  uint64_t v9;
  __CFDictionary *MutableCopy;
  unsigned int (*v11)(CFTypeRef, const __CFString *, __CFDictionary *, _QWORD, _QWORD);
  uint64_t CMBaseObject;
  void (*v13)(uint64_t, _QWORD, uint64_t, CFTypeRef *);
  CFTypeRef cf;
  CFTypeRef v15;

  active = vhelper_lookupAndRetainActiveHelperWithID();
  cf = 0;
  if (!active)
    return;
  v4 = active;
  pthread_mutex_lock(*(pthread_mutex_t **)(active + 136));
  v5 = *(_QWORD *)(v4 + 144);
  if (v5 && *(_QWORD *)(v4 + 152) == a2)
  {
    v6 = *(unsigned int (**)(uint64_t, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
    if (!v6 || v6(v5, &cf))
    {
      pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 136));
      APSLogErrorAt();
      goto LABEL_5;
    }
    v7 = cf;
    v15 = 0;
    if (cf)
    {
      if (*(_QWORD *)(v4 + 16) && APValeriaHelperReceiverGetListeningPort(v4))
      {
        FigEndpointExtendedGetClassID();
        if (CMBaseObjectIsMemberOfClass())
          v8 = v7;
        else
          v8 = 0;
        v9 = *MEMORY[0x24BDBD240];
        MutableCopy = CFDictionaryCreateMutableCopy((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, *(CFDictionaryRef *)(v4 + 16));
        CFDictionarySetInt64();
        CFDictionarySetValue(MutableCopy, CFSTR("IsValeria"), (const void *)*MEMORY[0x24BDBD270]);
        v11 = *(unsigned int (**)(CFTypeRef, const __CFString *, __CFDictionary *, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 24) + 72);
        if (!v11 || v11(v8, CFSTR("APValeria"), MutableCopy, 0, 0))
        {
          APSLogErrorAt();
        }
        else
        {
          CMNotificationCenterGetDefaultLocalCenter();
          CMNotificationCenterRemoveListener();
          CMBaseObject = FigEndpointGetCMBaseObject();
          v13 = *(void (**)(uint64_t, _QWORD, uint64_t, CFTypeRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                             + 48);
          if (v13)
            v13(CMBaseObject, *MEMORY[0x24BDC11B8], v9, &v15);
          if (gLogCategory_APValeriaHelper <= 50
            && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
          {
            LogPrintF();
          }
        }
        if (MutableCopy)
          CFRelease(MutableCopy);
      }
      else
      {
        APSLogErrorAt();
      }
      if (v15)
        CFRelease(v15);
    }
    else
    {
      APSLogErrorAt();
    }
  }
  pthread_mutex_unlock(*(pthread_mutex_t **)(v4 + 136));
LABEL_5:
  if (cf)
    CFRelease(cf);
  CFRelease((CFTypeRef)v4);
}

void vhelper_stopActivation(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD);
  const void *v4;

  if (*(_QWORD *)(a1 + 144))
  {
    vhelper_unregisterActiveHelperWithID();
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterRemoveListener();
    v2 = *(_QWORD *)(a1 + 144);
    v3 = *(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
    if (v3)
      v3(v2, 0, 0);
    v4 = *(const void **)(a1 + 144);
    if (v4)
    {
      CFRelease(v4);
      *(_QWORD *)(a1 + 144) = 0;
    }
    *(_QWORD *)(a1 + 152) = 0;
    if (gLogCategory_APValeriaHelper <= 50
      && (gLogCategory_APValeriaHelper != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
}

uint64_t APValeriaHelperActivationStop(uint64_t a1)
{
  pthread_mutex_lock(*(pthread_mutex_t **)(a1 + 136));
  vhelper_stopActivation(a1);
  return pthread_mutex_unlock(*(pthread_mutex_t **)(a1 + 136));
}

uint64_t airplayReqProcessor_Start()
{
  return 0;
}

uint64_t airplayReqProcessor_Stop(void *a1, const __CFString *a2, uint64_t *a3)
{
  uint64_t DerivedStorage;
  CFStringRef v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, CFStringRef);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  const void *v14;
  const void **v15;
  const __CFDictionary *v16;
  uint64_t Count;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  const void *v21;
  uint64_t v22;
  const __CFString *v24;
  uint64_t v25;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v25 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    v24 = a2;
    LogPrintF();
  }
  if (*(_QWORD *)(DerivedStorage + 8) && (*(_BYTE *)(DerivedStorage + 45) || *(_BYTE *)(DerivedStorage + 44)))
  {
    v7 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, CFSTR("AirPlay disconnected\n%s\n"), DerivedStorage + 134, v24);
    v8 = *(_QWORD *)(DerivedStorage + 8);
    v9 = *(void (**)(uint64_t, uint64_t, CFStringRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
    if (v9)
      v9(v8, 30, v7);
    CFRelease(v7);
  }
  if (!a2 || CFStringCompare(a2, CFSTR("HTTPConnectionClose"), 1uLL))
    goto LABEL_24;
  airplayReqProcessor_GetMCRPForMCSession((uint64_t)a1, 0, &v25);
  if (v25 && CFObjectGetInt64())
  {
    if (!CFObjectGetInt64())
      goto LABEL_19;
    v10 = *a3;
    v11 = v25;
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 48);
    if (v12)
    {
      v13 = v12(v11, v10);
      if (!(_DWORD)v13)
      {
        *(_QWORD *)(v10 + 16) = 0;
LABEL_19:
        CFObjectSetValue();
        v15 = (const void **)(DerivedStorage + 104);
        v14 = *(const void **)(DerivedStorage + 104);
        if (!v14)
          goto LABEL_24;
        goto LABEL_23;
      }
      v22 = v13;
    }
    else
    {
      v22 = 4294895362;
    }
    APSLogErrorAt();
    return v22;
  }
  v15 = (const void **)(DerivedStorage + 104);
  v16 = *(const __CFDictionary **)(DerivedStorage + 104);
  if (!v16)
    goto LABEL_24;
  CFDictionaryApplyFunction(v16, (CFDictionaryApplierFunction)airplayReqProcessor_tearDownMCRPDictionaryEntry, a1);
  v14 = *v15;
  if (!*v15)
    goto LABEL_24;
LABEL_23:
  CFRelease(v14);
  *v15 = 0;
LABEL_24:
  if (*(_QWORD *)(DerivedStorage + 32))
  {
    Count = FigCFDictionaryGetCount();
    v18 = *(_QWORD *)(DerivedStorage + 32);
    v19 = 4294960543;
    if (!Count)
    {
      if (*(_QWORD *)(v18 + 616))
        v19 = 4294960543;
      else
        v19 = 0;
    }
    if (!*(_BYTE *)(DerivedStorage + 45) && !*(_BYTE *)(DerivedStorage + 44))
      v19 = 0;
    AirPlayReceiverSessionTearDown(v18, 0, v19, 0);
    v20 = *(const void **)(DerivedStorage + 32);
    if (v20)
    {
      CFRelease(v20);
      *(_QWORD *)(DerivedStorage + 32) = 0;
    }
    v21 = *(const void **)(DerivedStorage + 448);
    if (v21)
    {
      CFRelease(v21);
      *(_QWORD *)(DerivedStorage + 448) = 0;
    }
  }
  airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 0);
  airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(a1);
  return 0;
}

uint64_t airplayReqProcessor_HandleRequest(const void *a1, uint64_t a2, const __CFDictionary *a3, CFMutableDictionaryRef *a4)
{
  uint64_t DerivedStorage;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  _QWORD *v15;
  uint64_t Int64;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t Instance;
  uint64_t v23;
  const void *v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t (*v28)(uint64_t, uint64_t, const __CFDictionary *, CFMutableDictionaryRef *);
  unsigned int v29;
  const void *v30;
  uint64_t v31;
  int v32;
  const char *v34;
  char *v35;
  size_t v36;
  const __CFData *TypedValue;
  const __CFData *v38;
  uint64_t v39;
  CFMutableDictionaryRef Mutable;
  __CFDictionary *v41;
  const void *v42;
  const void *v43;
  int v45;
  uint64_t v46;
  int v47;
  unsigned int v48;
  __int128 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v9 = DerivedStorage;
  v10 = *(_QWORD *)(DerivedStorage + 32);
  if (v10)
    ++*(_DWORD *)(v10 + 500);
  if (!*(_QWORD *)(DerivedStorage + 120))
    *(_QWORD *)(DerivedStorage + 120) = CFDictionaryGetHardwareAddress();
  if (!*(_BYTE *)(v9 + 134))
  {
    CFDictionaryGetCString();
    airplayReqProcessor_updateUIClientName((uint64_t)a1, (const char *)(v9 + 134));
  }
  if (!*(_BYTE *)(v9 + 408) && *(_BYTE *)(v9 + 410))
  {
    if ((int)a2 <= 1885435492)
    {
      if ((_DWORD)a2 == 1702064240 || (_DWORD)a2 == 1768842863)
        goto LABEL_8;
      v13 = 1885434725;
    }
    else if ((int)a2 > 1886613611)
    {
      if ((_DWORD)a2 == 1886613612)
        goto LABEL_8;
      v13 = 1886614892;
    }
    else
    {
      if ((_DWORD)a2 == 1885435493)
        goto LABEL_8;
      v13 = 1886417780;
    }
    if ((_DWORD)a2 != v13)
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v34 = (const char *)CFDictionaryCopyCString();
      v35 = (char *)v34;
      if (v34)
      {
        v36 = strlen(v34);
        if (v36)
        {
          if (memchr(v35, 47, v36) && TextToSourceVersion() > 0x1E9037)
            goto LABEL_174;
        }
      }
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      if (v35)
LABEL_174:
        free(v35);
      return 4294895363;
    }
  }
LABEL_8:
  *a4 = 0;
  v11 = 4294895361;
  if ((int)a2 > 1886283374)
  {
    if ((int)a2 <= 1920365170)
    {
      if ((int)a2 <= 1886614891)
      {
        if ((int)a2 > 1886545266)
        {
          if ((_DWORD)a2 == 1886545267 || (_DWORD)a2 == 1886611505)
            goto LABEL_107;
          if ((_DWORD)a2 != 1886613612)
            return v11;
          return airplayReqProcessor_requestProcessPairSetupPINLegacy(a1, a3, a4);
        }
        else
        {
          if ((_DWORD)a2 == 1886283375 || (_DWORD)a2 == 1886414964)
            goto LABEL_107;
          if ((_DWORD)a2 != 1886417780)
            return v11;
          return airplayReqProcessor_requestProcessPairSetupPINStart(a1);
        }
      }
      if ((int)a2 <= 1918984563)
      {
        if ((_DWORD)a2 != 1886614892)
        {
          if ((_DWORD)a2 == 1886679924)
            goto LABEL_107;
          v12 = 1886809964;
          goto LABEL_106;
        }
        return airplayReqProcessor_requestProcessPairSetupUnauthenticatedLegacy((uint64_t)a1, a3, a4);
      }
      if ((int)a2 <= 1919119971)
      {
        if ((_DWORD)a2 == 1918984564)
          goto LABEL_107;
        v12 = 1918989413;
        goto LABEL_106;
      }
      if ((_DWORD)a2 == 1919119972)
        return airplayReqProcessor_requestProcessRecord((uint64_t)a1, (uint64_t)a3, a4);
      v12 = 1920168547;
LABEL_106:
      if ((_DWORD)a2 != v12)
        return v11;
LABEL_107:
      v48 = 0;
      v15 = (_QWORD *)CMBaseObjectGetDerivedStorage();
      v47 = 0;
      v46 = 0;
      if (APSIsAPMSpeaker())
      {
        APSLogErrorAt();
        return -71931;
      }
      Int64 = CFDictionaryGetInt64();
      airplayReqProcessor_GetMCRPForMCSession((uint64_t)a1, Int64, &v46);
      v47 = 0;
      v17 = v46;
      if (v46)
        goto LABEL_121;
      if (!airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v48))
      {
LABEL_194:
        APSLogErrorAt();
        return v48;
      }
      if (Int64)
      {
        *(_QWORD *)&v49 = 0;
        HIBYTE(v49) = 0;
        *(_QWORD *)((char *)&v49 + 7) = Int64;
        v47 = airplayReqProcessor_createAndStoreMediaControlRequestProcessorForMCSession((uint64_t)a1, Int64, &v49);
        if (!v47)
        {
          v18 = *(NSObject **)(*v15 + 88);
          v19 = CMBaseObjectGetDerivedStorage();
          v20 = *(_QWORD *)(v19 + 32);
          if (v20 && *(_QWORD *)(v20 + 464))
          {
            v21 = (uint64_t *)v19;
            if (gAirPlayReceiverReverseConnectionInitOnce != -1)
              dispatch_once_f(&gAirPlayReceiverReverseConnectionInitOnce, 0, (dispatch_function_t)_AirPlayReceiverReverseConnectionGetTypeID);
            Instance = _CFRuntimeCreateInstance();
            if (Instance)
            {
              v23 = Instance;
              *(_QWORD *)(Instance + 80) = 0;
              *(_OWORD *)(Instance + 48) = 0u;
              *(_OWORD *)(Instance + 64) = 0u;
              *(_OWORD *)(Instance + 16) = 0u;
              *(_OWORD *)(Instance + 32) = 0u;
              dispatch_retain(v18);
              *(_QWORD *)(v23 + 72) = v18;
              __strlcpy_chk();
              *(_OWORD *)(v23 + 38) = v49;
              *(_QWORD *)(v23 + 56) = Int64;
              v24 = *(const void **)(v21[4] + 464);
              *(_QWORD *)(v23 + 64) = v24;
              CFRetain(v24);
              *(_BYTE *)(v23 + 80) = 1;
              v25 = AirPlayReceiverServerStoreReverseConnectionContext(*v21, v23 + 38, (const void *)v23);
              if (!v25)
              {
                CFRelease((CFTypeRef)v23);
                v47 = 0;
                v26 = Int64;
LABEL_120:
                airplayReqProcessor_GetMCRPForMCSession((uint64_t)a1, v26, &v46);
                v47 = 0;
                v17 = v46;
                if (v46)
                {
LABEL_121:
                  if ((_DWORD)a2 != 1886151033 || Int64)
                    goto LABEL_125;
                  v48 = airplayReqProcessor_hijackCurrentSessionIfNeeded(a1);
                  if (!v48)
                  {
                    v17 = v46;
LABEL_125:
                    v28 = *(uint64_t (**)(uint64_t, uint64_t, const __CFDictionary *, CFMutableDictionaryRef *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
                    v29 = -71934;
                    if (v28)
                      v29 = v28(v17, a2, a3, a4);
                    v48 = v29;
                    if (!Int64)
                    {
                      if ((_DWORD)a2 != 1886151033 || v29)
                      {
                        if ((_DWORD)a2 == 1937010544)
                        {
                          airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 0);
                          airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(a1);
                        }
                      }
                      else
                      {
                        v30 = (const void *)v15[57];
                        if (v30)
                        {
                          CFRelease(v30);
                          v15[57] = 0;
                        }
                        CMBaseObjectGetDerivedStorage();
                        v15[57] = CFStringCreateF();
                        airplayReqProcessor_handleNewSessionFromHTUnawareSender();
                        v47 = airplayReqProcessor_registerReqProcWithSessionManager(a1, 0);
                        if (v47)
                        {
                          APSLogErrorAt();
                          return -71934;
                        }
                        else
                        {
                          airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 1);
                        }
                      }
                    }
                    return v48;
                  }
                  goto LABEL_194;
                }
                goto LABEL_200;
              }
              v45 = v25;
              APSLogErrorAt();
              CFRelease((CFTypeRef)v23);
            }
            else
            {
              APSLogErrorAt();
              v45 = -6728;
            }
          }
          else
          {
            APSLogErrorAt();
            v45 = -6705;
          }
          v47 = v45;
        }
LABEL_200:
        APSLogErrorAt();
        return -71946;
      }
      v27 = airplayReqProcessor_createAndStoreMediaControlRequestProcessorForMCSession((uint64_t)a1, 0, 0);
      v26 = 0;
      v47 = v27;
      if (v27)
      {
        APSLogErrorAt();
        return -71930;
      }
      goto LABEL_120;
    }
    if ((int)a2 <= 1936941937)
    {
      if ((int)a2 <= 1936027767)
      {
        if ((_DWORD)a2 == 1920365171 || (_DWORD)a2 == 1936024939)
          goto LABEL_107;
        if ((_DWORD)a2 != 1936027749)
          return v11;
      }
      else
      {
        if ((int)a2 > 1936749164)
        {
          if ((_DWORD)a2 == 1936749165)
            return airplayReqProcessor_requestProcessSetParameter((uint64_t)a1, a3);
          if ((_DWORD)a2 != 1936875892)
            return v11;
          return airplayReqProcessor_requestProcessSetRateAndAnchorTime((uint64_t)a1, (uint64_t)a3, a4);
        }
        if ((_DWORD)a2 != 1936027768)
        {
          v12 = 1936748658;
          goto LABEL_106;
        }
      }
      return airplayReqProcessor_requestProcessSetPeers();
    }
    if ((int)a2 <= 1937011315)
    {
      if ((_DWORD)a2 == 1936941938)
        goto LABEL_107;
      if ((_DWORD)a2 == 1936942192)
        return airplayReqProcessor_requestProcessSetupSDP(a1, a3, a4);
      v12 = 1937010544;
      goto LABEL_106;
    }
    if ((int)a2 <= 1952741229)
    {
      if ((_DWORD)a2 == 1937011316)
        return airplayReqProcessor_requestProcessSetRate((uint64_t)a1, (uint64_t)a3, a4);
      if ((_DWORD)a2 != 1937012080)
        return v11;
      return airplayReqProcessor_requestProcessSetupPlist(a1, (uint64_t)a3, a4);
    }
    if ((_DWORD)a2 != 1952741230 && (_DWORD)a2 != 1953719408)
      return v11;
    v31 = CMBaseObjectGetDerivedStorage();
    LOBYTE(v46) = 1;
    LODWORD(v49) = 0;
    v32 = gLogCategory_APReceiverRequestProcessorAirPlay;
    if (gLogCategory_APReceiverRequestProcessorAirPlay > 50)
      goto LABEL_178;
    if (gLogCategory_APReceiverRequestProcessorAirPlay == -1)
    {
      if (!_LogCategory_Initialize())
      {
LABEL_178:
        CFDataGetTypeID();
        TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
        v38 = TypedValue;
        if (TypedValue)
        {
          CFDataGetBytePtr(TypedValue);
          CFDataGetLength(v38);
          CFDictionaryGetTypeID();
          v38 = (const __CFData *)CFCreateWithPlistBytes();
        }
        v39 = *(_QWORD *)(v31 + 32);
        if (v39)
          AirPlayReceiverSessionTearDown(v39, (uint64_t)v38, 0, (BOOL *)&v46);
        Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        if (Mutable)
        {
          v41 = Mutable;
          if ((_BYTE)v46)
          {
            v42 = *(const void **)(v31 + 32);
            if (v42)
            {
              CFRelease(v42);
              *(_QWORD *)(v31 + 32) = 0;
            }
            v43 = *(const void **)(v31 + 448);
            if (v43)
            {
              CFRelease(v43);
              *(_QWORD *)(v31 + 448) = 0;
            }
            *(_WORD *)(v31 + 44) = 0;
            *(_BYTE *)(v31 + 46) = 0;
            airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 0);
            airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(a1);
          }
          v11 = 0;
          *a4 = v41;
        }
        else
        {
          APSLogErrorAt();
          v11 = 4294895362;
        }
        if (v38)
          CFRelease(v38);
        return v11;
      }
      v32 = gLogCategory_APReceiverRequestProcessorAirPlay;
    }
    if (v32 == -1)
      _LogCategory_Initialize();
    LogPrintF();
    goto LABEL_178;
  }
  if ((int)a2 > 1735615345)
  {
    if ((int)a2 <= 1819240223)
    {
      if ((int)a2 <= 1735616869)
      {
        if ((_DWORD)a2 == 1735615346 || (_DWORD)a2 == 1735616561)
          goto LABEL_107;
        v12 = 1735616614;
        goto LABEL_106;
      }
      if ((int)a2 <= 1768842862)
      {
        if ((_DWORD)a2 == 1735616870)
          goto LABEL_107;
        v12 = 1735684980;
        goto LABEL_106;
      }
      if ((_DWORD)a2 == 1768842863)
        return airplayReqProcessor_requestProcessGetInfo((uint64_t)a1, (uint64_t)a3, a4);
      if ((_DWORD)a2 != 1801807216)
        return v11;
      return airplayReqProcessor_requestProcessFeedback((uint64_t)a1, a3, a4);
    }
    if ((int)a2 <= 1885434724)
    {
      if ((_DWORD)a2 == 1819240224)
        return airplayReqProcessor_requestProcessGetLog((uint64_t)a1, a4);
      if ((_DWORD)a2 == 1836348024)
        return airplayReqProcessor_requestProcessMetrics((uint64_t)a1, (uint64_t)a3, a4);
      if ((_DWORD)a2 != 1869640819)
        return v11;
      return airplayReqProcessor_requestProcessOptions(a4);
    }
    if ((int)a2 > 1885435492)
    {
      if ((_DWORD)a2 == 1885435493)
        return airplayReqProcessor_requestProcessPairVerify((uint64_t)a1, a3, a4);
      v12 = 1886151033;
    }
    else
    {
      if ((_DWORD)a2 == 1885434725)
        return airplayReqProcessor_requestProcessPairSetup(a1, a3, a4);
      v12 = 1885435252;
    }
    goto LABEL_106;
  }
  if ((int)a2 > 1718383463)
  {
    if ((int)a2 <= 1718839393)
    {
      if ((_DWORD)a2 == 1718383464)
        return airplayReqProcessor_requestProcessFlush((uint64_t)a1, (uint64_t)a3, a4);
      if ((_DWORD)a2 == 1718628917)
        return airplayReqProcessor_requestProcessFPSetup();
      if ((_DWORD)a2 != 1718645554)
        return v11;
      return airplayReqProcessor_requestProcessFPSetup2();
    }
    if ((int)a2 > 1735422065)
    {
      if ((_DWORD)a2 == 1735422066)
        goto LABEL_107;
      if ((_DWORD)a2 != 1735422573)
        return v11;
      return airplayReqProcessor_requestProcessGetParameter();
    }
    if ((_DWORD)a2 == 1718839394)
      return airplayReqProcessor_requestProcessFlushBuffered((uint64_t)a1, (uint64_t)a3, a4);
    v12 = 1735222134;
    goto LABEL_106;
  }
  if ((int)a2 <= 1634627170)
  {
    if ((_DWORD)a2 == 1633907822)
      goto LABEL_107;
    if ((_DWORD)a2 == 1634562925)
      return airplayReqProcessor_requestProcessSetAudioMode();
    if ((_DWORD)a2 != 1634624360)
      return v11;
    return airplayReqProcessor_requestProcessGetAnchor((uint64_t)a1, (uint64_t)a3, a4);
  }
  switch((_DWORD)a2)
  {
    case 0x616E6E63:
      return airplayReqProcessor_requestProcessAnnounce(a1);
    case 0x636F6D6D:
      return airplayReqProcessor_requestProcessCommand(a1, (uint64_t)a3, a4);
    case 0x65737070:
      airplayReqProcessor_requestProcessEnsurePairPin();
      return 0;
  }
  return v11;
}

uint64_t airplayReqProcessor_GetMCRPForMCSession(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t DerivedStorage;
  uint64_t v5;
  const void *Int64;
  const void *Value;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(_QWORD *)(DerivedStorage + 104))
  {
    Value = 0;
    if (!a3)
      return 0;
    goto LABEL_5;
  }
  v5 = DerivedStorage;
  Int64 = (const void *)CFNumberCreateInt64();
  Value = CFDictionaryGetValue(*(CFDictionaryRef *)(v5 + 104), Int64);
  if (Int64)
    CFRelease(Int64);
  if (a3)
LABEL_5:
    *a3 = Value;
  return 0;
}

uint64_t airplayReqProcessor_GetMCRPForTargetSessionID(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  const __CFDictionary *v4;
  _QWORD v6[3];
  int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2000000000;
  v11 = 0;
  v6[0] = 0;
  v6[1] = v6;
  v6[2] = 0x2000000000;
  v7 = 0;
  v4 = *(const __CFDictionary **)(CMBaseObjectGetDerivedStorage() + 104);
  if (v4)
  {
    if (CFDictionaryGetCount(v4))
    {
      CFDictionaryApplyBlock();
      if (a3)
        *a3 = v9[3];
    }
  }
  _Block_object_dispose(v6, 8);
  _Block_object_dispose(&v8, 8);
  return 0;
}

void *apProcessor_CopyProperty(uint64_t a1, const void *a2, int *a3)
{
  uint64_t DerivedStorage;
  uint64_t v7;
  const void **v8;
  int v9;
  const void **v10;
  BOOL v11;
  const void *v12;
  int v13;
  BOOL v15;
  uint64_t PropertyInt64Sync;
  int v17;
  int v18;
  void *v19;
  void *v20;

  v20 = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    APSLogErrorAt();
    v13 = -71951;
    goto LABEL_15;
  }
  v7 = DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("pairingVerified")))
  {
    v8 = (const void **)MEMORY[0x24BDBD270];
    v9 = *(unsigned __int8 *)(v7 + 408);
LABEL_10:
    v10 = (const void **)MEMORY[0x24BDBD268];
    v11 = v9 == 0;
    goto LABEL_11;
  }
  if (CFEqual(a2, CFSTR("pairingPerformedIsSufficientForAuth")))
  {
    v8 = (const void **)MEMORY[0x24BDBD270];
    v9 = *(unsigned __int8 *)(v7 + 409);
    goto LABEL_10;
  }
  if (CFEqual(a2, CFSTR("pairingRequired")))
  {
    v15 = 1;
    if (!CFObjectGetPropertyInt64Sync())
      v15 = CFObjectGetPropertyInt64Sync() != 0;
    *(_BYTE *)(v7 + 410) = v15;
    PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
    v17 = *(unsigned __int8 *)(v7 + 410);
    if (PropertyInt64Sync)
    {
      if (*(_BYTE *)(v7 + 410))
      {
        v17 = 1;
      }
      else
      {
        v18 = *(_DWORD *)(v7 + 24);
        v17 = 1;
        if (v18 != 4 && v18 != 64)
          v17 = v18 == 128;
      }
      *(_BYTE *)(v7 + 410) = v17;
    }
    if (v17)
      v8 = (const void **)MEMORY[0x24BDBD270];
    else
      v8 = (const void **)MEMORY[0x24BDBD268];
    goto LABEL_13;
  }
  if (CFEqual(a2, CFSTR("MCActive")))
  {
    v8 = (const void **)MEMORY[0x24BDBD270];
    v10 = (const void **)MEMORY[0x24BDBD268];
    v11 = *(_QWORD *)(v7 + 104) == 0;
LABEL_11:
    if (v11)
      v8 = v10;
LABEL_13:
    v12 = *v8;
LABEL_14:
    v13 = 0;
    v20 = (void *)CFRetain(v12);
    goto LABEL_15;
  }
  if (CFEqual(a2, CFSTR("RemoteControl")))
  {
    v8 = (const void **)MEMORY[0x24BDBD270];
    v9 = *(unsigned __int8 *)(v7 + 440);
    goto LABEL_10;
  }
  if (CFEqual(a2, CFSTR("didSetup")))
  {
    v8 = (const void **)MEMORY[0x24BDBD270];
    v9 = *(unsigned __int8 *)(v7 + 45);
    goto LABEL_10;
  }
  if (CFEqual(a2, CFSTR("didRecord")))
  {
    v8 = (const void **)MEMORY[0x24BDBD270];
    v9 = *(unsigned __int8 *)(v7 + 46);
    goto LABEL_10;
  }
  if (CFEqual(a2, CFSTR("hijackID")))
  {
    v12 = *(const void **)(v7 + 456);
    if (v12)
      goto LABEL_14;
LABEL_41:
    APSLogErrorAt();
    v13 = -71955;
    goto LABEL_15;
  }
  if (CFEqual(a2, CFSTR("ClientVersion")))
  {
    v20 = CFNumberCreate(0, kCFNumberSInt32Type, (const void *)(v7 + 272));
    if (v20)
    {
LABEL_45:
      v13 = 0;
      goto LABEL_15;
    }
    APSLogErrorAt();
    v13 = -71950;
  }
  else
  {
    if (CFEqual(a2, CFSTR("parentGroupInfo")))
    {
      v19 = *(void **)(v7 + 448);
      v20 = v19;
      if (v19)
        CFRetain(v19);
      goto LABEL_45;
    }
    if (CFEqual(a2, CFSTR("senderSupportsMultiHop")))
    {
      v8 = (const void **)MEMORY[0x24BDBD270];
      v9 = *(unsigned __int8 *)(v7 + 441);
      goto LABEL_10;
    }
    if (CFEqual(a2, CFSTR("type")))
    {
      airplayReqProcessor_copyType(a1, &v20);
      goto LABEL_45;
    }
    if (CFEqual(a2, CFSTR("isMediaSession")))
    {
      if (!*(_BYTE *)(v7 + 440))
      {
        v8 = (const void **)MEMORY[0x24BDBD270];
        v9 = *(unsigned __int8 *)(v7 + 47);
        goto LABEL_10;
      }
      goto LABEL_41;
    }
    v13 = -71954;
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
  }
LABEL_15:
  if (a3)
    *a3 = v13;
  return v20;
}

uint64_t apProcessor_SetProperty(uint64_t a1, const void *a2, uint64_t a3)
{
  uint64_t DerivedStorage;
  _BYTE *v6;
  uint64_t v7;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!a2)
  {
    v7 = 4294895345;
    goto LABEL_24;
  }
  v6 = (_BYTE *)DerivedStorage;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (CFEqual(a2, CFSTR("pairingRequired")))
  {
    if (a3)
    {
      v7 = 0;
      v6[410] = CFGetInt64() != 0;
      return v7;
    }
    v7 = 4294895345;
LABEL_24:
    APSLogErrorAt();
    return v7;
  }
  if (CFEqual(a2, CFSTR("didSetup")))
  {
    if (a3)
    {
      v7 = 0;
      v6[45] = CFGetInt64() != 0;
      return v7;
    }
    v7 = 4294895345;
    goto LABEL_24;
  }
  if (CFEqual(a2, CFSTR("didRecord")))
  {
    if (a3)
    {
      v7 = 0;
      v6[46] = CFGetInt64() != 0;
      return v7;
    }
    v7 = 4294895345;
    goto LABEL_24;
  }
  v7 = 4294895342;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v7;
}

void airplayReqProcessor_copyType(uint64_t a1, _QWORD *a2)
{
  const void *Int64;

  CMBaseObjectGetDerivedStorage();
  Int64 = (const void *)CFNumberCreateInt64();
  if (a2)
  {
    *a2 = Int64;
  }
  else if (Int64)
  {
    CFRelease(Int64);
  }
}

uint64_t APReceiverRequestProcessorCopyProperty_3325(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 64);
  if (v6)
    return v6(a1, a2, a3);
  else
    return 0;
}

void airplayReqProcessor_updateUIClientName(uint64_t a1, const char *a2)
{
  uint64_t DerivedStorage;
  uint64_t v4;
  CFStringRef v5;
  uint64_t v6;
  void (*v7)(uint64_t, const __CFString *, CFStringRef);

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_QWORD *)(DerivedStorage + 8) && *a2)
  {
    v4 = DerivedStorage;
    v5 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], a2, 0x8000100u);
    v6 = *(_QWORD *)(v4 + 8);
    v7 = *(void (**)(uint64_t, const __CFString *, CFStringRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                         + 56);
    if (v7)
      v7(v6, CFSTR("ClientName"), v5);
    CFRelease(v5);
  }
}

uint64_t airplayReqProcessor_requestProcessAnnounce(const void *a1)
{
  uint64_t DerivedStorage;
  uint64_t TypedValue;
  const __CFData *v5;
  int v6;
  int v7;
  const char *v8;
  uint64_t v9;
  int v10;
  CFStringRef v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, CFStringRef);
  const void *v14;
  int v16;
  int v17;
  _OWORD *v18;
  char v19;
  _OWORD **v20;
  const char **v21;
  uint64_t *v22;
  char *v23;
  uint64_t *v24;
  char *v25;
  uint64_t *v26;
  char *v27;
  uint64_t *v28;
  int *v29;
  unsigned int v30;
  uint64_t v31;
  const char *v32;
  _OWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  CFIndex Length;
  uint64_t v48;
  const UInt8 *BytePtr;
  uint64_t v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v30 = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    APSLogErrorAt();
    return -71930;
  }
  if (!airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v30))
    goto LABEL_110;
  if (*(_BYTE *)(DerivedStorage + 44))
    return -71931;
  CFDictionaryGetData();
  CFDataGetTypeID();
  TypedValue = CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
LABEL_111:
    APSLogErrorAt();
    return -71938;
  }
  v5 = (const __CFData *)TypedValue;
  v6 = *(_DWORD *)(DerivedStorage + 24);
  if ((v6 == 4 || v6 == 128 || v6 == 64)
    && !APReceiverSystemInfoAllowsP2PConnectionFromMACAddress(*(_QWORD *)(*(_QWORD *)DerivedStorage + 160), DerivedStorage + 128))
  {
    APSLogErrorAt();
    return -71933;
  }
  v30 = airplayReqProcessor_hijackCurrentSessionIfNeeded(a1);
  if (v30)
  {
LABEL_110:
    APSLogErrorAt();
    return v30;
  }
  if (SDPFindSessionSection())
    goto LABEL_111;
  SDPFindType();
  SNScanF();
  SDPFindType();
  TruncateUTF8();
  if (SDPFindMediaSection())
    goto LABEL_106;
  if (strncmp_prefix())
    goto LABEL_19;
  v48 = 0;
  v45 = 0;
  v46 = 0;
  v43[1] = 0;
  v44 = 0;
  v42 = 0;
  v43[0] = 0;
  v40 = 0;
  v41 = 0;
  v38 = 0;
  v39 = 0;
  v9 = CMBaseObjectGetDerivedStorage();
  Length = CFDataGetLength(v5);
  BytePtr = CFDataGetBytePtr(v5);
  if (SDPFindMediaSection())
    goto LABEL_74;
  if (SNScanF() != 1)
    goto LABEL_74;
  if (SDPFindAttribute())
    goto LABEL_74;
  v20 = (_OWORD **)v43;
  if (SNScanF() != 2 || (_DWORD)v44 != HIDWORD(v44))
    goto LABEL_74;
  if (strnicmpx())
  {
    if (strnicmpx())
    {
      if (strnicmpx() && strnicmpx())
        goto LABEL_106;
      *(_QWORD *)(v9 + 84) = 0x16000000001;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
    }
    else
    {
      v50 = 0;
      v32 = 0;
      v33 = 0;
      v31 = 0;
      if (SDPFindAttribute())
        goto LABEL_74;
      v20 = &v33;
      if (SNScanF() != 2 || (_DWORD)v44 != HIDWORD(v44))
        goto LABEL_74;
      v31 = 3;
      v32 = "AAC";
      SDPFindParameter();
      if (strncmpx())
      {
        if (strncmpx())
        {
          if (gLogCategory_APReceiverRequestProcessorAirPlay > 90
            || gLogCategory_APReceiverRequestProcessorAirPlay == -1 && !_LogCategory_Initialize())
          {
            goto LABEL_106;
          }
LABEL_53:
          LogPrintF();
LABEL_106:
          APSLogErrorAt();
          return -71936;
        }
        v16 = 8;
      }
      else
      {
        v16 = 4;
      }
      *(_DWORD *)(v9 + 84) = v16;
      v31 = 4;
      v32 = "1024";
      SDPFindParameter();
      if (SNScanF() != 1)
        goto LABEL_74;
    }
  }
  else
  {
    LODWORD(v50) = 0;
    LODWORD(v33) = 0;
    LODWORD(v32) = 0;
    LODWORD(v31) = 0;
    v36 = 0;
    v37 = 0;
    v35 = 0;
    v34 = 0;
    if (SDPFindAttribute())
      goto LABEL_74;
    v28 = &v35;
    v29 = &v34;
    v26 = &v36;
    v27 = (char *)&v35 + 4;
    v24 = &v37;
    v25 = (char *)&v36 + 4;
    v22 = &v31;
    v23 = (char *)&v37 + 4;
    v20 = &v33;
    v21 = &v32;
    if (SNScanF() != 12 || (_DWORD)v44 != HIDWORD(v44))
      goto LABEL_74;
    v10 = v50;
    *(_DWORD *)(v9 + 84) = 2;
    *(_DWORD *)(v9 + 88) = v10;
  }
  v41 = 0;
  v42 = 0;
  v39 = 0;
  v40 = 0;
  SDPFindAttribute();
  if (v42)
  {
    v33 = 0;
    LODWORD(v32) = 0;
    if (Base64Decode() || v38 >= 0x101 || !*(_QWORD *)(v9 + 384))
      goto LABEL_74;
    OowSGu();
    if (v17)
    {
      if (*(_QWORD *)(v9 + 384))
      {
        IPaI1oem5iL();
        *(_QWORD *)(v9 + 384) = 0;
      }
      goto LABEL_74;
    }
    if ((_DWORD)v32 != 16)
    {
      jEHf8Xzsv8K((uint64_t)v33);
      goto LABEL_74;
    }
    v18 = v33;
    *(_OWORD *)(v9 + 48) = *v33;
    jEHf8Xzsv8K((uint64_t)v18);
    if ((*(_DWORD *)(v9 + 356) & 0xFFFFFFFE) != 2)
      goto LABEL_106;
  }
  SDPFindAttribute();
  if (v42 && v40)
  {
    if (!Base64Decode() && v38 == 16)
    {
      v19 = 1;
      goto LABEL_97;
    }
LABEL_74:
    APSLogErrorAt();
    goto LABEL_106;
  }
  if (v42 | v40)
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay > 90
      || gLogCategory_APReceiverRequestProcessorAirPlay == -1 && !_LogCategory_Initialize())
    {
      goto LABEL_106;
    }
    goto LABEL_53;
  }
  v19 = 0;
LABEL_97:
  *(_DWORD *)(v9 + 92) = 11025;
  *(_BYTE *)(v9 + 80) = v19;
  Length = 0;
  v48 = 0;
  SDPFindAttribute();
  if (Length && SNScanF() != 1)
    goto LABEL_74;
  *(_DWORD *)(v9 + 96) = 88200;
  Length = 0;
  v48 = 0;
  SDPFindAttribute();
  if (Length)
  {
    if (SNScanF() != 1)
      goto LABEL_74;
  }
LABEL_19:
  if (*(_QWORD *)(DerivedStorage + 8))
  {
    v7 = *(_DWORD *)(DerivedStorage + 24);
    if (v7 <= 31)
    {
      v8 = "Enet";
      switch(v7)
      {
        case 1:
          goto LABEL_63;
        case 2:
          v8 = "WiFi";
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_56;
        case 4:
          v8 = "AWDL";
          break;
        case 8:
          v8 = "USB";
          break;
        default:
          if (v7 != 16)
            goto LABEL_56;
          v8 = "Direct";
          break;
      }
      goto LABEL_63;
    }
    if (v7 > 127)
    {
      if (v7 == 128)
      {
        v8 = "NAN";
        goto LABEL_63;
      }
      if (v7 == 256)
      {
        v8 = "IPsecBT";
        goto LABEL_63;
      }
    }
    else
    {
      if (v7 == 32)
      {
        v8 = "BTLE";
        goto LABEL_63;
      }
      if (v7 == 64)
      {
        v8 = "WFD";
LABEL_63:
        v11 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, CFSTR("AirPlay starting...\n%s\n%s\n"), DerivedStorage + 134, v8, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
        v12 = *(_QWORD *)(DerivedStorage + 8);
        v13 = *(void (**)(uint64_t, uint64_t, CFStringRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
        if (v13)
          v13(v12, 30, v11);
        CFRelease(v11);
        goto LABEL_66;
      }
    }
LABEL_56:
    v8 = "?";
    if (v7 == 512)
      v8 = "IPSecWiFi";
    goto LABEL_63;
  }
LABEL_66:
  __strlcpy_chk();
  *(_BYTE *)(DerivedStorage + 44) = 1;
  *(_BYTE *)(DerivedStorage + 440) = 0;
  v14 = *(const void **)(DerivedStorage + 456);
  if (v14)
  {
    CFRelease(v14);
    *(_QWORD *)(DerivedStorage + 456) = 0;
  }
  CMBaseObjectGetDerivedStorage();
  *(_QWORD *)(DerivedStorage + 456) = CFStringCreateF();
  if (!airplayReqProcessor_registerReqProcWithSessionManager(a1, 0))
    return 0;
  APSLogErrorAt();
  return -71934;
}

uint64_t airplayReqProcessor_requestProcessOptions(CFMutableDictionaryRef *a1)
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v3;
  uint64_t result;

  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (Mutable)
  {
    v3 = Mutable;
    CFDictionarySetCString();
    result = 0;
    *a1 = v3;
  }
  else
  {
    APSLogErrorAt();
    return 4294895362;
  }
  return result;
}

uint64_t airplayReqProcessor_requestProcessSetParameter(uint64_t a1, const __CFDictionary *a2)
{
  uint64_t v3;
  const __CFString *TypedValue;
  const __CFData *v5;
  uint64_t v6;
  uint64_t v7;
  const __CFData *v8;
  const UInt8 *BytePtr;
  CFIndex Length;
  unint64_t v11;
  const UInt8 *v12;
  uint64_t v13;
  uint64_t v14;
  const UInt8 *v15;
  const UInt8 *v16;
  int v17;
  const UInt8 *v19;
  int64_t v20;
  int v21;
  unint64_t v23;
  CFMutableDictionaryRef v24;
  CFMutableDictionaryRef v25;
  int v26;
  int64_t v27;
  int v28;
  uint64_t DerivedStorage;
  __CFString *Value;
  __CFString *v32;
  const void *v33;
  const __CFData *v34;
  __CFDictionary *Mutable;
  __CFDictionary *v36;
  __CFDictionary *v37;
  const __CFData *v38;
  const __CFData *v39;
  CFMutableDictionaryRef v40;
  CFMutableDictionaryRef v41;
  int v42;
  const UInt8 *v44;
  unsigned int v45;
  int v46;
  int v47;
  char v48[256];
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = 4294895366;
  if (!*(_BYTE *)(CMBaseObjectGetDerivedStorage() + 45))
    return 4294895365;
  CFStringGetTypeID();
  TypedValue = (const __CFString *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    if (CFStringCopyUTF8CString())
    {
      APSLogErrorAt();
      return 0;
    }
    TypedValue = (const __CFString *)CFStringGetLength(TypedValue);
  }
  CFDataGetTypeID();
  v5 = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue && (!v5 || !CFDataGetLength(v5)))
    return 0;
  if (!strnicmp_prefix())
  {
    DerivedStorage = CMBaseObjectGetDerivedStorage();
    *(_DWORD *)v48 = 0;
    Value = (__CFString *)CFDictionaryGetValue(a2, CFSTR("applyTS"));
    if (Value)
    {
      v32 = Value;
      CFStringGetTypeID();
      v33 = (const void *)CFDictionaryGetTypedValue();
      CFDataGetTypeID();
      v34 = (const __CFData *)CFDictionaryGetTypedValue();
      Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (Mutable)
      {
        v36 = Mutable;
        CFDictionarySetValue(Mutable, CFSTR("artworkMIMEType"), v33);
        if (v34 && CFDataGetLength(v34) >= 1)
        {
          v37 = v36;
          v38 = v34;
        }
        else
        {
          v38 = (const __CFData *)*MEMORY[0x24BDBD430];
          v37 = v36;
        }
        CFDictionarySetValue(v37, CFSTR("artworkData"), v38);
        if (AirPlayReceiverSessionSetProperty(*(_QWORD *)(DerivedStorage + 32), v42, CFSTR("metaData"), v32, v36))
        {
          APSLogErrorAt();
          v6 = 4294895362;
        }
        else
        {
          v6 = 0;
        }
        CFRelease(v36);
        return v6;
      }
LABEL_81:
      APSLogErrorAt();
      return 4294895362;
    }
LABEL_80:
    APSLogErrorAt();
    return 4294895366;
  }
  if (!strnicmpx())
  {
    CMBaseObjectGetDerivedStorage();
    HIBYTE(v47) = 0;
    if (CFDictionaryGetValue(a2, CFSTR("applyTS")))
    {
      *(_QWORD *)v48 = 0;
      CFStringGetTypeID();
      CFDictionaryGetTypedValue();
      CFDataGetTypeID();
      v39 = (const __CFData *)CFDictionaryGetTypedValue();
      v40 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (v40)
      {
        v41 = v40;
        CFDataGetBytePtr(v39);
        CFDataGetLength(v39);
        CFDataGetBytePtr(v39);
        DMAPContentBlock_GetNextChunk();
        APSLogErrorAt();
        CFRelease(v41);
        return v3;
      }
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  v6 = 4294895364;
  if (strnicmpx())
    return v6;
  v7 = CMBaseObjectGetDerivedStorage();
  CFDataGetTypeID();
  v8 = (const __CFData *)CFDictionaryGetTypedValue();
  BytePtr = CFDataGetBytePtr(v8);
  Length = CFDataGetLength(v8);
  if (Length < 1)
    return 0;
  v11 = (unint64_t)&BytePtr[Length];
  v12 = &BytePtr[Length];
  v13 = 4294895355;
  while (1)
  {
    v14 = 0;
    while (1)
    {
      v15 = &BytePtr[v14];
      if (BytePtr[v14] == 58)
        break;
      if (v12 - BytePtr == ++v14)
        return v13;
    }
    if (v15 == BytePtr)
      return v13;
    v16 = v15 + 1;
    if ((unint64_t)(v15 + 1) < v11)
    {
      while (1)
      {
        v17 = *v16;
        if (v17 != 32 && v17 != 9)
          break;
        if ((unint64_t)++v16 >= v11)
        {
          v16 = (const UInt8 *)v11;
          break;
        }
      }
    }
    v19 = v16;
    if ((unint64_t)v16 < v11)
    {
      v20 = v12 - v16;
      v19 = v16;
      while (1)
      {
        v21 = *v19;
        if (v21 == 10 || v21 == 13)
          break;
        ++v19;
        if (!--v20)
        {
          v19 = (const UInt8 *)v11;
          break;
        }
      }
    }
    v44 = v12;
    v45 = v13;
    v23 = v19 - v16;
    if (strnicmpx())
    {
      if (strnicmpx())
        return v45;
      HIBYTE(v47) = 0;
      *(_DWORD *)v48 = 0;
      if (SNScanF() != 3)
      {
        v3 = 4294895364;
LABEL_84:
        APSLogErrorAt();
        return v3;
      }
      v24 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (!v24)
      {
        v3 = 4294895362;
        goto LABEL_84;
      }
      v25 = v24;
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      CFDictionarySetInt64();
      v46 = AirPlayReceiverSessionSetProperty(*(_QWORD *)(v7 + 32), v26, CFSTR("progress"), 0, v25);
      CFRelease(v25);
      if (v46)
        return 4294895354;
      goto LABEL_44;
    }
    if (v23 >= 0x100)
    {
      APSLogErrorAt();
      return 4294895364;
    }
    if (*(_BYTE *)(v7 + 440))
      break;
    __memcpy_chk();
    v48[v23] = 0;
    strtod(v48, 0);
    if (*(_QWORD *)(v7 + 32))
    {
      if (CFObjectSetPropertyDouble())
        goto LABEL_89;
    }
    else if (CFObjectSetPropertyDouble())
    {
LABEL_89:
      APSLogErrorAt();
      return 4294895362;
    }
LABEL_44:
    if ((unint64_t)v19 >= v11)
    {
      v13 = v45;
      v12 = v44;
    }
    else
    {
      v12 = v44;
      v27 = v44 - v19;
      v13 = v45;
      while (1)
      {
        v28 = *v19;
        if (v28 != 13 && v28 != 10)
          break;
        ++v19;
        if (!--v27)
        {
          v19 = (const UInt8 *)v11;
          break;
        }
      }
    }
    BytePtr = v19;
    if ((unint64_t)v19 >= v11)
      return 0;
  }
  APSLogErrorAt();
  v3 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay > 50)
    return v3;
  if (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize())
    LogPrintF();
  return 0;
}

uint64_t airplayReqProcessor_requestProcessFlush(uint64_t a1, uint64_t a2, __CFDictionary **a3)
{
  __int128 v4;
  uint64_t DerivedStorage;
  uint64_t v6;
  uint64_t v7;
  CFMutableDictionaryRef Mutable;
  __CFDictionary *v9;
  __CFString *v10;
  __CFString *v11;
  _OWORD v13[2];
  _OWORD v14[2];
  _BYTE v15[28];
  int v16;

  v16 = 0;
  *(_OWORD *)v15 = *MEMORY[0x24BE03810];
  v4 = *(_OWORD *)v15;
  *(_OWORD *)&v15[12] = *(_OWORD *)(MEMORY[0x24BE03810] + 12);
  v14[0] = v4;
  *(_OWORD *)((char *)v14 + 12) = *(_OWORD *)&v15[12];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 40
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v6 = 4294895362;
  if (!*(_BYTE *)(DerivedStorage + 46))
    return 4294895365;
  CFDictionaryGetInt64Ranged();
  v16 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
  if (v16
    || (v13[0] = *(_OWORD *)v15,
        *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)&v15[12],
        !APSAudioTransportTimeIsValid()))
  {
    APSLogErrorAt();
    return 4294895366;
  }
  v7 = *(_QWORD *)(DerivedStorage + 32);
  v13[0] = *(_OWORD *)v15;
  *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)&v15[12];
  v16 = AirPlayReceiverSessionFlushAudio(v7, 0, MEMORY[0x24BE03810], 0, v13);
  if (v16 || (Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0])) == 0)
  {
    APSLogErrorAt();
    return v6;
  }
  v9 = Mutable;
  if (LODWORD(v14[0]) == 2)
  {
    v13[0] = v14[0];
    *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)v14 + 12);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    goto LABEL_16;
  }
  if (LODWORD(v14[0]) != 1)
  {
LABEL_16:
    v6 = 0;
    *a3 = v9;
    return v6;
  }
  v10 = CFStringCreateMutable(0, 0);
  if (v10)
  {
    v11 = v10;
    CFStringAppendFormat(v10, 0, CFSTR("rtptime=%u"), DWORD1(v14[0]));
    CFDictionarySetValue(v9, CFSTR("RTP-Info"), v11);
    *a3 = v9;
    CFRelease(v11);
    return 0;
  }
  else
  {
    APSLogErrorAt();
    CFRelease(v9);
  }
  return v6;
}

uint64_t airplayReqProcessor_requestProcessFlushBuffered(uint64_t a1, uint64_t a2, __CFDictionary **a3)
{
  __int128 v4;
  uint64_t DerivedStorage;
  uint64_t v6;
  const __CFData *TypedValue;
  const __CFData *v8;
  const void *v9;
  uint64_t Int64Ranged;
  _BOOL8 v11;
  uint64_t v12;
  __CFDictionary *Mutable;
  __CFString *v14;
  __CFString *v15;
  _OWORD v17[2];
  _OWORD v18[2];
  _OWORD v19[2];
  _OWORD v20[2];
  _BYTE v21[28];
  int v22;

  v22 = 0;
  *(_OWORD *)v21 = *MEMORY[0x24BE03810];
  v4 = *(_OWORD *)v21;
  *(_OWORD *)&v21[12] = *(_OWORD *)(MEMORY[0x24BE03810] + 12);
  v20[0] = v4;
  *(_OWORD *)((char *)v20 + 12) = *(_OWORD *)&v21[12];
  v19[0] = v4;
  *(_OWORD *)((char *)v19 + 12) = *(_OWORD *)&v21[12];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v6 = 4294895366;
  if (!*(_BYTE *)(DerivedStorage + 46))
    return 4294895365;
  CFDataGetTypeID();
  TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
    APSLogErrorAt();
    return v6;
  }
  v8 = TypedValue;
  CFDataGetBytePtr(TypedValue);
  CFDataGetLength(v8);
  CFDictionaryGetTypeID();
  v9 = (const void *)CFCreateWithPlistBytes();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Int64Ranged = CFDictionaryGetInt64Ranged();
  v22 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
  if (v22
    || (v18[0] = *(_OWORD *)v21,
        *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)&v21[12],
        v11 = APSAudioTransportTimeIsValid() != 0,
        CFDictionaryGetInt64Ranged(),
        (v22 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary()) != 0))
  {
    APSLogErrorAt();
    Mutable = 0;
    v15 = 0;
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(DerivedStorage + 32);
  v18[0] = *(_OWORD *)v21;
  *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)&v21[12];
  v17[0] = v20[0];
  *(_OWORD *)((char *)v17 + 12) = *(_OWORD *)((char *)v20 + 12);
  v22 = AirPlayReceiverSessionFlushAudio(v12, v11, v18, Int64Ranged, v17);
  if (v22)
  {
    APSLogErrorAt();
    Mutable = 0;
LABEL_34:
    v15 = 0;
LABEL_35:
    v6 = 4294895362;
    goto LABEL_23;
  }
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    goto LABEL_34;
  }
  if (LODWORD(v19[0]) == 2)
  {
    v18[0] = v19[0];
    *(_OWORD *)((char *)v18 + 12) = *(_OWORD *)((char *)v19 + 12);
    APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
    goto LABEL_21;
  }
  if (LODWORD(v19[0]) != 1)
  {
LABEL_21:
    v15 = 0;
    goto LABEL_22;
  }
  v14 = CFStringCreateMutable(0, 0);
  v15 = v14;
  if (!v14)
  {
    APSLogErrorAt();
    goto LABEL_35;
  }
  CFStringAppendFormat(v14, 0, CFSTR("rtptime=%u"), DWORD1(v19[0]));
  CFDictionarySetValue(Mutable, CFSTR("RTP-Info"), v15);
LABEL_22:
  v6 = 0;
  *a3 = Mutable;
  Mutable = 0;
LABEL_23:
  if (v9)
    CFRelease(v9);
  if (Mutable)
    CFRelease(Mutable);
  if (v15)
    CFRelease(v15);
  return v6;
}

uint64_t airplayReqProcessor_requestProcessGetAnchor(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  CFMutableDictionaryRef Mutable;
  const __CFDictionary *v6;
  const __CFData *TypedValue;
  const __CFData *v8;
  const void *v9;
  uint64_t Int64Ranged;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD, uint64_t, _BYTE *, _QWORD *);
  int v14;
  int v15;
  uint64_t v16;
  _QWORD v18[3];
  _BYTE v19[28];
  int v20;

  v20 = 0;
  *(_OWORD *)v19 = *MEMORY[0x24BE03810];
  *(_OWORD *)&v19[12] = *(_OWORD *)(MEMORY[0x24BE03810] + 12);
  memset(v18, 0, sizeof(v18));
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895362;
  }
  v6 = Mutable;
  CFDataGetTypeID();
  TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    v8 = TypedValue;
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v8);
    CFDictionaryGetTypeID();
    v9 = (const void *)CFCreateWithPlistBytes();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    Int64Ranged = CFDictionaryGetInt64Ranged();
    v11 = *(_QWORD *)(DerivedStorage + 32);
    if (v11)
    {
      v12 = *(_QWORD *)(v11 + 576);
      if (v12)
      {
        v13 = *(uint64_t (**)(_QWORD, uint64_t, _BYTE *, _QWORD *))(v12 + 96);
        if (v13)
        {
          v14 = v13(*(_QWORD *)(v12 + 40), Int64Ranged, v19, v18);
          if (!v14)
          {
            v20 = 0;
            APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            goto LABEL_19;
          }
          v15 = v14;
        }
        else
        {
          v15 = -12782;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        v15 = -6718;
      }
    }
    else
    {
      APSLogErrorAt();
      v15 = -72152;
    }
    v20 = v15;
LABEL_19:
    CFDictionarySetInt64();
    if (CFDictionaryGetCount(v6) >= 1 && (v20 = airplayReqProcessor_preparePlistResponse(v6, a3)) != 0)
    {
      APSLogErrorAt();
      v16 = 4294895362;
    }
    else
    {
      v16 = 0;
    }
    if (v9)
      CFRelease(v9);
    goto LABEL_24;
  }
  v16 = 4294895366;
  APSLogErrorAt();
LABEL_24:
  CFRelease(v6);
  return v16;
}

uint64_t airplayReqProcessor_requestProcessSetRate(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  __int128 v4;
  uint64_t DerivedStorage;
  CFMutableDictionaryRef Mutable;
  const __CFDictionary *v7;
  const __CFData *TypedValue;
  const __CFData *v9;
  const void *v10;
  uint64_t Int64Ranged;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, _OWORD *, _OWORD *, _QWORD *);
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  _QWORD v20[3];
  _OWORD v21[2];
  _BYTE v22[28];
  int v23;
  _OWORD v24[2];

  v23 = 0;
  *(_OWORD *)v22 = *MEMORY[0x24BE03810];
  v4 = *(_OWORD *)v22;
  *(_OWORD *)&v22[12] = *(_OWORD *)(MEMORY[0x24BE03810] + 12);
  v21[0] = v4;
  *(_OWORD *)((char *)v21 + 12) = *(_OWORD *)&v22[12];
  memset(v20, 0, sizeof(v20));
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895362;
  }
  v7 = Mutable;
  CFDataGetTypeID();
  TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    v9 = TypedValue;
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v9);
    CFDictionaryGetTypeID();
    v10 = (const void *)CFCreateWithPlistBytes();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    Int64Ranged = CFDictionaryGetInt64Ranged();
    if ((_DWORD)Int64Ranged == 1)
    {
      v23 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
      if (v23)
      {
        v18 = 4294895366;
      }
      else
      {
        v24[0] = *(_OWORD *)v22;
        *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v22[12];
        if (APSAudioTransportTimeIsValid())
          goto LABEL_14;
        v18 = 4294895366;
      }
      APSLogErrorAt();
LABEL_25:
      if (v10)
        CFRelease(v10);
      goto LABEL_27;
    }
LABEL_14:
    v12 = *(_QWORD *)(DerivedStorage + 32);
    if (v12)
    {
      v13 = *(_QWORD *)(v12 + 576);
      if (v13)
      {
        v14 = *(uint64_t (**)(uint64_t, uint64_t, _OWORD *, _OWORD *, _QWORD *))(v13 + 104);
        if (v14)
        {
          v15 = *(_QWORD *)(v13 + 40);
          v24[0] = *(_OWORD *)v22;
          *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v22[12];
          v16 = v14(v15, Int64Ranged, v24, v21, v20);
          if (!v16)
          {
            v23 = 0;
            v24[0] = v21[0];
            *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)((char *)v21 + 12);
            APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
            CFDictionarySetInt64();
LABEL_22:
            CFDictionarySetInt64();
            if (CFDictionaryGetCount(v7) >= 1 && (v23 = airplayReqProcessor_preparePlistResponse(v7, a3)) != 0)
            {
              APSLogErrorAt();
              v18 = 4294895362;
            }
            else
            {
              v18 = 0;
            }
            goto LABEL_25;
          }
          v17 = v16;
        }
        else
        {
          v17 = -12782;
        }
        APSLogErrorAt();
      }
      else
      {
        APSLogErrorAt();
        v17 = -6718;
      }
    }
    else
    {
      APSLogErrorAt();
      v17 = -72152;
    }
    v23 = v17;
    goto LABEL_22;
  }
  v18 = 4294895366;
  APSLogErrorAt();
LABEL_27:
  CFRelease(v7);
  return v18;
}

uint64_t airplayReqProcessor_requestProcessSetRateAndAnchorTime(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  __int128 v4;
  uint64_t DerivedStorage;
  CFMutableDictionaryRef Mutable;
  const __CFDictionary *v7;
  const __CFData *TypedValue;
  const __CFData *v9;
  const void *v10;
  uint64_t Int64Ranged;
  int v12;
  uint64_t Int64;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  int v20;
  int v21;
  _OWORD v22[2];
  _OWORD v23[2];
  _OWORD v24[2];
  _OWORD v25[2];
  _BYTE v26[28];
  int v27;

  v27 = 0;
  *(_OWORD *)v26 = *MEMORY[0x24BE03810];
  v4 = *(_OWORD *)v26;
  *(_OWORD *)&v26[12] = *(_OWORD *)(MEMORY[0x24BE03810] + 12);
  v25[0] = v4;
  *(_OWORD *)((char *)v25 + 12) = *(_OWORD *)&v26[12];
  v24[0] = v4;
  *(_OWORD *)((char *)v24 + 12) = *(_OWORD *)&v26[12];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (!Mutable)
  {
    APSLogErrorAt();
    return 4294895362;
  }
  v7 = Mutable;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDataGetTypeID();
  TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
  if (TypedValue)
  {
    v9 = TypedValue;
    CFDataGetBytePtr(TypedValue);
    CFDataGetLength(v9);
    CFDictionaryGetTypeID();
    v10 = (const void *)CFCreateWithPlistBytes();
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    Int64Ranged = CFDictionaryGetInt64Ranged();
    if ((_DWORD)Int64Ranged == 1)
    {
      v27 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
      if (v27)
      {
        v17 = 4294895366;
      }
      else
      {
        v23[0] = *(_OWORD *)v26;
        *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)&v26[12];
        if (APSAudioTransportTimeIsValid())
        {
          v27 = APSAudioTransportTimeUtilsDecodeFromRequestResponseDictionary();
          if (!v27)
          {
            v12 = CFDictionaryGetInt64Ranged();
            Int64 = CFDictionaryGetInt64();
            v14 = CFDictionaryGetInt64();
            v15 = CFDictionaryGetInt64Ranged();
LABEL_21:
            v16 = *(_QWORD *)(DerivedStorage + 32);
            v23[0] = *(_OWORD *)v26;
            *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)&v26[12];
            v22[0] = v25[0];
            *(_OWORD *)((char *)v22 + 12) = *(_OWORD *)((char *)v25 + 12);
            *(_QWORD *)&v19 = v14;
            *((_QWORD *)&v19 + 1) = Int64;
            v20 = v12;
            v21 = v15;
            v27 = AirPlayReceiverSessionSetRateAndAnchorTime(v16, Int64Ranged, v23, v22, &v19);
            if (v27)
            {
              CFDictionarySetInt64();
            }
            else if (!(_DWORD)Int64Ranged)
            {
              v23[0] = v24[0];
              *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)((char *)v24 + 12);
              if (APSAudioTransportTimeIsValid())
              {
                v23[0] = v24[0];
                *(_OWORD *)((char *)v23 + 12) = *(_OWORD *)((char *)v24 + 12);
                APSAudioTransportTimeUtilsEncodeToRequestResponseDictionary();
              }
            }
            if (CFDictionaryGetCount(v7) >= 1 && (v27 = airplayReqProcessor_preparePlistResponse(v7, a3)) != 0)
            {
              APSLogErrorAt();
              v17 = 4294895362;
            }
            else
            {
              v17 = 0;
            }
            goto LABEL_29;
          }
          v17 = 4294895366;
        }
        else
        {
          v17 = 4294895366;
        }
      }
      APSLogErrorAt();
LABEL_29:
      if (v10)
        CFRelease(v10);
      goto LABEL_31;
    }
    v14 = 0;
    Int64 = 0;
    v12 = 0;
    v15 = 0;
    goto LABEL_21;
  }
  v17 = 4294895366;
  APSLogErrorAt();
LABEL_31:
  CFRelease(v7);
  return v17;
}

uint64_t airplayReqProcessor_requestProcessSetPeers()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  const __CFData *TypedValue;
  const __CFData *v3;
  const void *v4;
  uint64_t v5;
  CFStringRef v6;
  int v7;
  uint64_t v8;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_QWORD *)(DerivedStorage + 32))
  {
    v1 = DerivedStorage;
    CFDataGetTypeID();
    TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
    if (TypedValue)
    {
      v3 = TypedValue;
      CFDataGetBytePtr(TypedValue);
      CFDataGetLength(v3);
      CFArrayGetTypeID();
      v4 = (const void *)CFCreateWithPlistBytes();
      v5 = *(_QWORD *)(v1 + 32);
      if (!CFEqual(*(CFTypeRef *)(v5 + 648), CFSTR("PTP")))
        goto LABEL_24;
      v6 = CFStringCreateWithCString((CFAllocatorRef)*MEMORY[0x24BDBD240], (const char *)(v5 + 152), 0x8000100u);
      v7 = APSNetworkClockSetPeersFromSetPeersMessagePayload();
      if (v7)
        APSLogErrorAt();
      if (v6)
        CFRelease(v6);
      if (v7)
      {
        v8 = 4294895362;
        APSLogErrorAt();
      }
      else
      {
LABEL_24:
        if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
          && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        v8 = 0;
      }
      if (v4)
        CFRelease(v4);
    }
    else
    {
      APSLogErrorAt();
      return 4294895366;
    }
  }
  else
  {
    APSLogErrorAt();
    return 4294895358;
  }
  return v8;
}

uint64_t airplayReqProcessor_requestProcessGetParameter()
{
  const __CFString *TypedValue;

  if (!*(_BYTE *)(CMBaseObjectGetDerivedStorage() + 45))
    return 4294895365;
  CFStringGetTypeID();
  TypedValue = (const __CFString *)CFDictionaryGetTypedValue();
  if (CFStringCompare(TypedValue, CFSTR("text/parameters"), 0))
    return 4294895364;
  CFDictionaryGetData();
  APSLogErrorAt();
  return 4294895366;
}

uint64_t airplayReqProcessor_requestProcessRecord(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  uint64_t TypedValue;
  const __CFString *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t CMBaseObject;
  unsigned int (*v12)(uint64_t, _QWORD, _QWORD, __int128 *);
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  NSObject *v15;
  int v16;
  uint64_t (*v17)(uint64_t);
  int v18;
  int v19;
  int v20;
  NSObject *v21;
  dispatch_queue_t v22;
  NSObject *v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t);
  uint64_t v26;
  uint64_t (*v27)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, _BYTE *);
  int v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, _BYTE *);
  int v31;
  int v32;
  uint64_t i;
  uint64_t j;
  void (*v35)(uint64_t, _QWORD);
  NSObject *v36;
  NSObject *v37;
  dispatch_time_t v38;
  uint64_t v39;
  uint64_t v40;
  const void *v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD);
  int v44;
  int v45;
  int v46;
  const __CFDictionary *v47;
  CFIndex Count;
  int v49;
  CFIndex v50;
  _QWORD *ValueAtIndex;
  int v52;
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v54;
  _BYTE *v56;
  CFMutableDictionaryRef *v57;
  uint64_t v58;
  CFTypeRef v59;
  CFTypeRef cf;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  int v67;
  CFArrayRef theArray;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  _BYTE v80[32];
  _BYTE v81[32];
  __int128 block;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;

  v86 = *MEMORY[0x24BDAC8D0];
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v67 = 0;
  v65 = 0;
  v66 = 0;
  v63 = 0;
  v64 = 0;
  v61 = 0;
  v62 = 0;
  v59 = 0;
  cf = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (!*(_BYTE *)(DerivedStorage + 45))
  {
    v8 = 4294895365;
    goto LABEL_152;
  }
  CFStringGetTypeID();
  TypedValue = CFDictionaryGetTypedValue();
  v57 = a3;
  v58 = a1;
  if (TypedValue)
  {
    v7 = (const __CFString *)TypedValue;
    v67 = CFStringCopyUTF8CString();
    if (!v67)
    {
      CFStringGetLength(v7);
      v66 = v61;
      while (1)
      {
        if (HTTPParseParameter())
          goto LABEL_25;
        if (strnicmpx()
          && strnicmpx()
          && strnicmpx()
          && strnicmpx())
        {
          if (strnicmpx())
          {
            if (!strnicmpx())
              goto LABEL_16;
          }
          else
          {
            TextToInt32();
          }
        }
        else
        {
LABEL_16:
          TextToInt32();
        }
      }
    }
    goto LABEL_164;
  }
LABEL_25:
  v56 = (_BYTE *)DerivedStorage;
  v9 = *(_QWORD *)(DerivedStorage + 32);
  theArray = 0;
  *(_QWORD *)(v9 + 352) = mach_absolute_time();
  if (*(_BYTE *)(v9 + 659))
    goto LABEL_50;
  *(_QWORD *)&block = 0;
  if (*(_DWORD *)(v9 + 192) != 128)
  {
    _AirPlayReceiverSessionRemoveTrafficRegistration(v9);
    v10 = *(_DWORD *)(v9 + 192);
    APTransportGetSharedTransport();
    CMBaseObject = FigTransportGetCMBaseObject();
    v12 = *(unsigned int (**)(uint64_t, _QWORD, _QWORD, __int128 *))(*(_QWORD *)(CMBaseObjectGetVTable() + 8)
                                                                             + 48);
    if (!v12 || v12(CMBaseObject, *MEMORY[0x24BDFD7E8], *MEMORY[0x24BDBD240], &block))
      goto LABEL_31;
    if (v10 == 4)
    {
      if (APTransportTrafficRegistrarAWDLTrafficRegistrationCreate())
      {
LABEL_31:
        APSLogErrorAt();
LABEL_37:
        if ((_QWORD)block)
          CFRelease((CFTypeRef)block);
        goto LABEL_39;
      }
    }
    else if (APTransportTrafficRegistrarInfraTransactionCreate())
    {
      goto LABEL_31;
    }
    if (gLogCategory_AirPlayReceiverCore <= 50
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_37;
  }
LABEL_39:
  v13 = *(_QWORD *)(v9 + 592);
  if (v13)
  {
    *(_QWORD *)&v72 = 0;
    *((_QWORD *)&v72 + 1) = &v72;
    *(_QWORD *)&v73 = 0x2000000000;
    DWORD2(v73) = 0;
    v14 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
    v15 = (v14 ? v14(v13) : MEMORY[0x24BDAC9B8]);
    CMNotificationCenterGetDefaultLocalCenter();
    CMNotificationCenterPostNotification();
    if (v15)
    {
      *(_QWORD *)&block = MEMORY[0x24BDAC760];
      *((_QWORD *)&block + 1) = 0x40000000;
      *(_QWORD *)&v83 = __APReceiverSBufConsumerStart_block_invoke;
      *((_QWORD *)&v83 + 1) = &unk_24E21FFF8;
      *(_QWORD *)&v84 = &v72;
      *((_QWORD *)&v84 + 1) = v13;
      dispatch_sync(v15, &block);
      v16 = *(_DWORD *)(*((_QWORD *)&v72 + 1) + 24);
    }
    else
    {
      v17 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 16);
      v16 = v17 ? v17(v13) : -12782;
      *(_DWORD *)(*((_QWORD *)&v72 + 1) + 24) = v16;
    }
    _Block_object_dispose(&v72, 8);
    if (v16)
      goto LABEL_119;
  }
LABEL_50:
  if ((*(_DWORD *)(v9 + 476) & 0x80000000) != 0)
    goto LABEL_90;
  v76 = 0;
  v77 = 0;
  v79 = 0;
  v78 = 0;
  v75 = -1;
  v74 = 0;
  v72 = 0u;
  v73 = 0u;
  v84 = 0u;
  v85 = 0u;
  block = 0u;
  v83 = 0u;
  v18 = SocketAccept();
  if (v18)
  {
    v16 = v18;
    goto LABEL_123;
  }
  v19 = *(_DWORD *)(v9 + 476);
  if ((v19 & 0x80000000) == 0)
  {
    if (close(v19) && *__error())
      __error();
    *(_DWORD *)(v9 + 476) = -1;
  }
  v20 = HTTPClientCreateWithSocket();
  if (v20)
  {
    v16 = v20;
    goto LABEL_123;
  }
  v75 = -1;
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    HTTPClientGetClientID();
    LogPrintF();
  }
  SNPrintF();
  v21 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_USER_INITIATED, 0);
  v22 = dispatch_queue_create((const char *)&block, v21);
  if (!v22)
  {
    APSLogErrorAt();
    v16 = -1;
    goto LABEL_81;
  }
  v23 = v22;
  HTTPClientSetDispatchQueue();
  dispatch_release(v23);
  APSLogUtilsGetHTTPClientCoreLogCategory();
  HTTPClientSetLogging();
  APSLogUtilsGetAsyncCnxLogCategory();
  HTTPClientSetConnectionLogging();
  v73 = 0uLL;
  v74 = 0;
  CFRetain((CFTypeRef)v9);
  *(_QWORD *)&v72 = v9;
  *((_QWORD *)&v72 + 1) = _HandleEventConnectionInvalidated;
  HTTPClientSetDelegate();
  HTTPClientSetFlags();
  v24 = *(_QWORD *)(v9 + 488);
  if (v24)
  {
    v25 = *(unsigned int (**)(uint64_t))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 32);
    if (v25)
    {
      if (v25(v24))
      {
        v71 = 0;
        v69 = 0u;
        v70 = 0u;
        v26 = *(_QWORD *)(v9 + 488);
        v27 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, _BYTE *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
        if (v27)
        {
          v28 = v27(v26, "Events-Salt", 11, "Events-Read-Encryption-Key", 26, 32, v81);
          if (v28)
          {
            v16 = v28;
          }
          else
          {
            v29 = *(_QWORD *)(v9 + 488);
            v30 = *(uint64_t (**)(uint64_t, const char *, uint64_t, const char *, uint64_t, uint64_t, _BYTE *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
            if (v30)
            {
              v31 = v30(v29, "Events-Salt", 11, "Events-Write-Encryption-Key", 27, 32, v80);
              if (v31)
              {
                v16 = v31;
              }
              else
              {
                v32 = NetTransportChaCha20Poly1305Configure();
                if (!v32)
                {
                  for (i = 0; i != 32; ++i)
                    v81[i] = 0;
                  for (j = 0; j != 32; ++j)
                    v80[j] = 0;
                  HTTPClientSetTransportDelegate();
                  goto LABEL_76;
                }
                v16 = v32;
              }
            }
            else
            {
              v16 = -12782;
            }
          }
        }
        else
        {
          v16 = -12782;
        }
LABEL_123:
        APSLogErrorAt();
        goto LABEL_81;
      }
    }
  }
LABEL_76:
  if (gLogCategory_AirPlayReceiverCore <= 30
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    SockAddrGetPort();
    LogPrintF();
  }
  v16 = 0;
LABEL_81:
  if ((v75 & 0x80000000) == 0)
  {
    if (close(v75) && *__error())
      __error();
    v75 = -1;
  }
  if (v16)
  {
    if (gLogCategory_AirPlayReceiverCore <= 60
      && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    goto LABEL_119;
  }
LABEL_90:
  if (*(_BYTE *)(v9 + 659))
    goto LABEL_91;
  v42 = *(_QWORD *)(v9 + 576);
  if (v42)
  {
    v43 = *(uint64_t (**)(_QWORD))(v42 + 72);
    if (!v43)
    {
      v16 = -12782;
      goto LABEL_119;
    }
    v44 = v43(*(_QWORD *)(v42 + 40));
    if (v44)
    {
      v16 = v44;
      goto LABEL_119;
    }
  }
  if (*(_QWORD *)(v9 + 616))
  {
    v45 = _ScreenStart(v9);
    if (v45)
    {
      v16 = v45;
      goto LABEL_119;
    }
  }
  v46 = AirPlayReceiverSessionPlatformControl((_QWORD *)v9, CFSTR("startSession"));
  if (v46)
  {
    v16 = v46;
    goto LABEL_129;
  }
  v47 = *(const __CFDictionary **)(v9 + 568);
  if (v47)
  {
    Count = CFDictionaryGetCount(v47);
    v49 = _cfDictionaryCopyKeysAndValues(*(const __CFDictionary **)(v9 + 568), 0, (CFTypeRef *)&theArray);
    if (!v49)
    {
      if (Count >= 1)
      {
        v50 = 0;
        while (1)
        {
          ValueAtIndex = CFArrayGetValueAtIndex(theArray, v50);
          v52 = APReceiverAudioSessionPlatformControl(ValueAtIndex, CFSTR("RASP::StartSession"));
          if (v52)
            break;
          if (Count == ++v50)
            goto LABEL_91;
        }
        v16 = v52;
        goto LABEL_119;
      }
      goto LABEL_91;
    }
    v16 = v49;
LABEL_119:
    APSLogErrorAt();
    goto LABEL_129;
  }
LABEL_91:
  *(_BYTE *)(v9 + 458) = 1;
  v35 = *(void (**)(uint64_t, _QWORD))(v9 + 88);
  if (v35)
    v35(v9, *(_QWORD *)(v9 + 56));
  if (!*(_BYTE *)(v9 + 659))
  {
    *(_QWORD *)(v9 + 528) = *(_QWORD *)(v9 + 352);
    v36 = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, *(dispatch_queue_t *)(v9 + 16));
    *(_QWORD *)(v9 + 184) = v36;
    if (!v36)
    {
      APSLogErrorAt();
      v16 = -6700;
      goto LABEL_129;
    }
    v37 = v36;
    dispatch_set_context(v36, (void *)v9);
    dispatch_source_set_event_handler_f(v37, (dispatch_function_t)_PerformPeriodTasks);
    v38 = dispatch_time(0, 250000000);
    dispatch_source_set_timer(v37, v38, 0xEE6B280uLL, 0xEE6B280uLL);
    dispatch_resume(v37);
  }
  if (APSIsAPMSpeaker())
  {
    v40 = APReceiverSystemInfoCopyProperty(*(_QWORD *)(*(_QWORD *)(v9 + 24) + 160), v39, (uint64_t)CFSTR("TightSyncUUID"), 0, 0);
    if (v40)
    {
      v41 = (const void *)v40;
      if (!*(_BYTE *)(v9 + 659)
        && !*(_BYTE *)(v9 + 656)
        && !*(_DWORD *)(v9 + 496)
        && !APSMultiPrimariesEnabled())
      {
        if (gLogCategory_AirPlayReceiverCore <= 50
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        notify_post("kAirPlayWHANotification_InterruptedByPreWHASender");
      }
      CFRelease(v41);
    }
  }
  v16 = 0;
LABEL_129:
  if (theArray)
    CFRelease(theArray);
  *(_DWORD *)(v9 + 268) = v16;
  mach_absolute_time();
  UpTicksToMilliseconds();
  v8 = 4294895359;
  if (gLogCategory_AirPlayReceiverCore <= 50
    && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
  {
    SourceVersionToCString();
    if (*(_BYTE *)(v9 + 657))
      APSIsMemberOfHTGroup();
    LogPrintF();
    v8 = 4294895359;
  }
  v67 = v16;
  if (v16 <= 452)
  {
    if (v16 == -6721)
      goto LABEL_152;
    if (!v16)
    {
      v67 = CFArrayEnsureCreatedAndAppend();
      if (v67)
      {
LABEL_164:
        APSLogErrorAt();
        v8 = 0;
        goto LABEL_152;
      }
      APReceiverSystemInfoCopyInfoDict(*(_QWORD *)(*(_QWORD *)v56 + 160), (uint64_t)cf, *MEMORY[0x24BDBD240], (uint64_t)&v59);
      if (v59)
      {
        if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
          && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        APReceiverRequestProcessorSendSystemInfoUpdate(v58, (const __CFDictionary *)v59);
      }
      Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (Mutable)
      {
        v54 = Mutable;
        CFObjectGetPropertyInt64Sync();
        CFDictionarySetInt64();
        v8 = 0;
        v56[46] = 1;
        *v57 = v54;
        goto LABEL_152;
      }
    }
    goto LABEL_165;
  }
  if (v16 != 453 && v16 != 200453)
  {
LABEL_165:
    APSLogErrorAt();
    v8 = 4294895362;
  }
LABEL_152:
  if (v61)
    free(v61);
  if (cf)
    CFRelease(cf);
  if (v59)
    CFRelease(v59);
  return v8;
}

uint64_t airplayReqProcessor_requestProcessSetupPlist(const void *a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  _DWORD *v6;
  const __CFData *TypedValue;
  const __CFData *v8;
  const __CFDictionary *v9;
  uint64_t v10;
  int v11;
  CFTypeRef v12;
  uint64_t Int64;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  const void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  const void *Value;
  int v25;
  BOOL v26;
  const void *v27;
  int v28;
  __CFString *v29;
  unsigned int v30;
  const __CFArray *v31;
  CFIndex Count;
  CFIndex v33;
  uint64_t v34;
  const __CFDictionary *TypedValueAtIndex;
  int v36;
  __CFString *v37;
  int v38;
  unsigned int v39;
  int v40;
  BOOL v42;
  char v43;
  char v44;
  CFMutableDictionaryRef *v45;
  CFTypeRef cf;
  uint64_t v47;
  CFTypeRef v48;
  int Session;
  unsigned int v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  v50 = -71934;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  Session = 0;
  v47 = 0;
  v48 = 0;
  v55 = 0;
  v56 = 0;
  v53 = 0u;
  v54 = 0u;
  v51 = 0u;
  v52 = 0u;
  v6 = &unk_2553CD000;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  CFDataGetTypeID();
  TypedValue = (const __CFData *)CFDictionaryGetTypedValue();
  if (!TypedValue)
  {
    APSLogErrorAt();
    v29 = 0;
    v50 = -71930;
    goto LABEL_112;
  }
  v8 = TypedValue;
  CFDataGetBytePtr(TypedValue);
  CFDataGetLength(v8);
  CFDictionaryGetTypeID();
  v9 = (const __CFDictionary *)CFCreateWithPlistBytes();
  v45 = a3;
  *(_QWORD *)(DerivedStorage + 120) = CFDictionaryGetHardwareAddress();
  strncpy((char *)(DerivedStorage + 332), (const char *)(*(_QWORD *)(DerivedStorage + 16) + 140), 0x11uLL);
  CFDictionaryGetHardwareAddress();
  CFDictionaryGetCString();
  airplayReqProcessor_updateUIClientName((uint64_t)a1, (const char *)(DerivedStorage + 134));
  CFDictionaryGetData();
  if (!Session)
  {
    if (v47 != 16)
    {
      APSLogErrorAt();
      v29 = 0;
      Session = -6743;
      v30 = -71930;
      goto LABEL_69;
    }
    *(_QWORD *)(DerivedStorage + 264) = bswap64(v55);
  }
  LOBYTE(v51) = 0;
  CFDictionaryGetCString();
  if (!*(_QWORD *)(DerivedStorage + 32))
  {
    Int64 = CFDictionaryGetInt64();
    v14 = CFDictionaryGetInt64() | Int64;
    v15 = CFDictionaryGetInt64();
    v16 = v15 != 0;
    v44 = CFDictionaryGetInt64() != 0;
    v42 = CFDictionaryGetInt64() == 0;
    v43 = CFDictionaryGetInt64() != 0;
    CFStringGetTypeID();
    v17 = CFDictionaryGetTypedValue();
    if (v14 && v15)
    {
      APSLogErrorAt();
      v6 = &unk_2553CD000;
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v29 = 0;
      Session = -71951;
      v50 = -71933;
      goto LABEL_110;
    }
    if (airplayReqProcessor_isAllowedToConnectBasedOnACL())
    {
      if (v15 || v14)
      {
        if (v15)
        {
          v19 = 1;
LABEL_38:
          Session = airplayReqProcessor_requestCreateSession((uint64_t)a1, 1, v16, v44, v14 != 0, v43, v17);
          if (!Session)
          {
            __strlcpy_chk();
            *(_BYTE *)(DerivedStorage + 440) = v16;
            *(_DWORD *)(DerivedStorage + 40) = v19;
            v23 = CMBaseObjectGetDerivedStorage();
            v6 = &unk_2553CD000;
            if (v9 && *(_DWORD *)(v23 + 40) != 1 && IsAppleTV())
            {
              Value = CFDictionaryGetValue(v9, CFSTR("model"));
              v25 = MEMORY[0x2207A99F8](Value);
              v26 = (v25 - 1) < 3 || v25 == 100;
              if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
                && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
              {
                LogPrintF();
              }
            }
            else
            {
              v26 = 0;
            }
            *(_BYTE *)(DerivedStorage + 441) = v26;
            Session = airplayReqProcessor_registerReqProcWithSessionManager(a1, v19);
            if (Session)
              goto LABEL_108;
            goto LABEL_66;
          }
          APSLogErrorAt();
          v29 = 0;
          v50 = -71934;
          goto LABEL_128;
        }
        v19 = 2;
        goto LABEL_31;
      }
      if (!airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v50))
      {
LABEL_124:
        APSLogErrorAt();
        v29 = 0;
        goto LABEL_128;
      }
      v18 = *(_DWORD *)(DerivedStorage + 24);
      if (v18 != 4 && v18 != 128 && v18 != 64
        || APReceiverSystemInfoAllowsP2PConnectionFromMACAddress(*(_QWORD *)(*(_QWORD *)DerivedStorage + 160), DerivedStorage + 128))
      {
        v50 = airplayReqProcessor_hijackCurrentSessionIfNeeded(a1);
        if (!v50)
        {
          v19 = 0;
LABEL_31:
          v20 = *(const void **)(DerivedStorage + 456);
          if (v20)
          {
            CFRelease(v20);
            *(_QWORD *)(DerivedStorage + 456) = 0;
          }
          CFStringGetTypeID();
          v21 = (const void *)CFDictionaryGetTypedValue();
          *(_QWORD *)(DerivedStorage + 456) = v21;
          if (v21)
          {
            CFRetain(v21);
            if (*(_QWORD *)(DerivedStorage + 456))
              goto LABEL_37;
          }
          CFDictionaryGetInt64();
          CFDictionaryGetInt64();
          CMBaseObjectGetDerivedStorage();
          v22 = CFStringCreateF();
          *(_QWORD *)(DerivedStorage + 456) = v22;
          if (v22)
          {
            airplayReqProcessor_handleNewSessionFromHTUnawareSender();
LABEL_37:
            airplayReqProcessor_copyParentGroupInfoFromSetupRequest((uint64_t)a1, (uint64_t)v9, (__CFDictionary **)(DerivedStorage + 448));
            *(_BYTE *)(DerivedStorage + 47) = v42;
            goto LABEL_38;
          }
          APSLogErrorAt();
          v29 = 0;
          Session = -71934;
LABEL_128:
          v6 = (_DWORD *)&unk_2553CD000;
          goto LABEL_110;
        }
        goto LABEL_124;
      }
      APSLogErrorAt();
      v29 = 0;
      Session = -71951;
      v39 = -71933;
    }
    else
    {
      APSLogErrorAt();
      v29 = 0;
      v39 = -71930;
    }
    v50 = v39;
    goto LABEL_128;
  }
  if (*(_BYTE *)(DerivedStorage + 440))
  {
LABEL_66:
    v28 = AirPlayReceiverSessionSetSecurityInfo(*(_QWORD *)(DerivedStorage + 32), v9, *(CFTypeRef *)(DerivedStorage + 400), *(_QWORD *)(DerivedStorage + 384), *(unsigned int *)(DerivedStorage + 420), 0, 0);
    Session = v28;
    switch(v28)
    {
      case -6762:
LABEL_109:
        v29 = 0;
        v50 = -71934;
        goto LABEL_110;
      case -6754:
        v29 = 0;
        v30 = -71943;
LABEL_69:
        v50 = v30;
        goto LABEL_110;
      case 0:
        LODWORD(cf) = 0;
        if (*(_DWORD *)(CMBaseObjectGetDerivedStorage() + 40) == 2
          && APSIsMemberOfHTGroup()
          && (CFArrayGetTypeID(), (v31 = (const __CFArray *)CFDictionaryGetTypedValue()) != 0)
          && (Count = CFArrayGetCount(v31), Count >= 1))
        {
          v33 = Count;
          v34 = 0;
          while (1)
          {
            CFDictionaryGetTypeID();
            TypedValueAtIndex = (const __CFDictionary *)CFArrayGetTypedValueAtIndex();
            if ((_DWORD)cf)
            {
              APSLogErrorAt();
              goto LABEL_82;
            }
            v36 = CFDictionaryGetInt64();
            if ((!CFDictionaryContainsKey(TypedValueAtIndex, CFSTR("isMedia")) || CFDictionaryGetInt64())
              && (v36 == 103 || v36 == 96))
            {
              break;
            }
            if (v33 == ++v34)
              goto LABEL_82;
          }
          v37 = (__CFString *)CFDictionaryGetValue(TypedValueAtIndex, CFSTR("clientID"));
          v29 = v37;
          if (v37)
          {
            CFRetain(v37);
            v6 = (_DWORD *)&unk_2553CD000;
            if (v29 == CFSTR("com.apple.TVAirPlay"))
            {
              v29 = CFSTR("com.apple.TVAirPlay");
              goto LABEL_94;
            }
            if (CFEqual(v29, CFSTR("com.apple.TVAirPlay")))
              goto LABEL_94;
          }
          else
          {
            v6 = &unk_2553CD000;
          }
          v38 = v6[214];
          if (v38 <= 50 && (v38 != -1 || _LogCategory_Initialize()))
            LogPrintF();
          Session = APReceiverRequestProcessorHijackAndBecomeMainSession(a1);
          if (Session)
          {
LABEL_123:
            APSLogErrorAt();
            v50 = -71934;
            goto LABEL_110;
          }
        }
        else
        {
LABEL_82:
          v29 = 0;
          v6 = (_DWORD *)&unk_2553CD000;
        }
LABEL_94:
        Session = AirPlayReceiverSessionSetup(*(_QWORD *)(DerivedStorage + 32), v9, (__CFDictionary **)&v48);
        if (Session)
        {
          APSLogErrorAt();
          v30 = -71930;
          goto LABEL_69;
        }
        Session = airplayReqProcessor_preparePlistResponse(v48, v45);
        if (!Session)
        {
          if (!*(_BYTE *)(DerivedStorage + 45))
          {
            *(_WORD *)(DerivedStorage + 44) = 257;
            airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 1);
          }
          v50 = 0;
          goto LABEL_110;
        }
        goto LABEL_123;
    }
LABEL_108:
    APSLogErrorAt();
    goto LABEL_109;
  }
  cf = 0;
  v10 = CFDictionaryGetInt64();
  v11 = CFDictionaryGetInt64() == 0;
  airplayReqProcessor_copyParentGroupInfoFromSetupRequest((uint64_t)a1, (uint64_t)v9, (__CFDictionary **)&cf);
  if (v10)
  {
    v12 = cf;
    if (!FigCFEqual())
    {
      if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
        && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
      {
        LogPrintF();
      }
      v27 = *(const void **)(DerivedStorage + 448);
      *(_QWORD *)(DerivedStorage + 448) = v12;
      if (v12)
        CFRetain(v12);
      if (v27)
        CFRelease(v27);
      APReceiverSessionManagerUpdateParentGroupInfo(*(_QWORD **)(DerivedStorage + 432));
    }
  }
  if (*(unsigned __int8 *)(DerivedStorage + 47) == v11)
    goto LABEL_64;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  *(_BYTE *)(DerivedStorage + 47) = v11;
  Session = APReceiverSessionManagerUpdateAndNotifyReceiverSessionState(*(_QWORD *)(DerivedStorage + 432));
  if (!Session)
  {
LABEL_64:
    if (cf)
      CFRelease(cf);
    goto LABEL_66;
  }
  APSLogErrorAt();
  v29 = 0;
LABEL_110:
  if (v9)
    CFRelease(v9);
LABEL_112:
  if (v48)
    CFRelease(v48);
  if (v29)
    CFRelease(v29);
  if (Session)
  {
    v40 = v6[214];
    if (v40 <= 90 && (v40 != -1 || _LogCategory_Initialize()))
      LogPrintF();
  }
  return v50;
}

uint64_t airplayReqProcessor_requestProcessSetupSDP(const void *a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  const __CFString *v6;
  uint64_t v7;
  uint64_t DerivedStorage;
  char *v9;
  CFMutableDictionaryRef v10;
  unsigned int v11;
  CFMutableArrayRef Mutable;
  __CFArray *v14;
  CFMutableDictionaryRef v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  unsigned int v23;
  uint64_t v25;
  uint64_t TypedValue;
  uint64_t v27;
  const __CFArray *v28;
  CFIndex Count;
  CFIndex v30;
  CFIndex i;
  const void *ValueAtIndex;
  CFTypeID v33;
  int Int64;
  unsigned int v35;
  void *value;
  char *v37;
  uint64_t v38;
  __CFArray *v39;
  __CFDictionary *theDict;
  CFTypeRef cf;
  int Session;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  if (!*(_BYTE *)(CMBaseObjectGetDerivedStorage() + 44))
    return 4294895365;
  v6 = (const __CFString *)CFDictionaryGetValue(a2, CFSTR("SDPSessionType"));
  v7 = 4294895366;
  if (v6 && CFStringCompare(v6, CFSTR("audio"), 0) == kCFCompareEqualTo)
  {
    v43 = 0;
    DerivedStorage = CMBaseObjectGetDerivedStorage();
    Session = 0;
    cf = 0;
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
    {
      APSLogErrorAt();
      v9 = 0;
      v10 = 0;
      v11 = -71930;
      goto LABEL_14;
    }
    if (airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v43))
    {
      if (!*(_BYTE *)(DerivedStorage + 44) || *(_BYTE *)(DerivedStorage + 45))
      {
        v9 = 0;
        v10 = 0;
        v11 = -71931;
LABEL_14:
        v43 = v11;
        goto LABEL_15;
      }
      theDict = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
      if (!theDict)
      {
        APSLogErrorAt();
        v9 = 0;
        v10 = 0;
        v43 = -71934;
        goto LABEL_15;
      }
      Mutable = CFArrayCreateMutable(0, 0, MEMORY[0x24BDBD690]);
      if (Mutable)
      {
        v14 = Mutable;
        CFDictionarySetValue(theDict, CFSTR("streams"), Mutable);
        v15 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
        if (!v15)
        {
          APSLogErrorAt();
          v10 = 0;
          v9 = 0;
          v43 = -71934;
          goto LABEL_93;
        }
        CFArrayAppendValue(v14, v15);
        v9 = (char *)CFDictionaryCopyCString();
        strlen(v9);
        Session = HTTPParseParameter();
        if (Session)
        {
          APSLogErrorAt();
          goto LABEL_28;
        }
        if (strnicmpx())
        {
LABEL_28:
          v10 = 0;
          v43 = -71932;
          goto LABEL_93;
        }
        v38 = DerivedStorage;
        v39 = v14;
        v37 = v9;
        CFDictionarySetInt64();
        v16 = 0;
        value = (void *)*MEMORY[0x24BDBD270];
        while (1)
        {
          v17 = v16;
          if (HTTPParseParameter())
          {
            v23 = *(_DWORD *)(DerivedStorage + 84);
            if (v23 > 8 || ((1 << v23) & 0x116) == 0)
            {
LABEL_91:
              v10 = 0;
              v43 = -71932;
            }
            else
            {
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              CFDictionarySetInt64();
              v25 = *(_QWORD *)(DerivedStorage + 32);
              if (v25)
                goto LABEL_58;
              CFStringGetTypeID();
              TypedValue = CFDictionaryGetTypedValue();
              if (!*(_QWORD *)(v38 + 456))
              {
                CMBaseObjectGetDerivedStorage();
                v27 = CFStringCreateF();
                *(_QWORD *)(v38 + 456) = v27;
                if (!v27)
                {
                  APSLogErrorAt();
                  v10 = 0;
                  Session = -71934;
                  goto LABEL_84;
                }
              }
              airplayReqProcessor_handleNewSessionFromHTUnawareSender();
              Session = airplayReqProcessor_requestCreateSession((uint64_t)a1, v17, 0, 0, 0, 0, TypedValue);
              if (Session)
                goto LABEL_111;
              *(_BYTE *)(v38 + 440) = 0;
              Session = airplayReqProcessor_registerReqProcWithSessionManager(a1, 0);
              if (Session)
                goto LABEL_111;
              v25 = *(_QWORD *)(v38 + 32);
LABEL_58:
              if (*(_BYTE *)(v38 + 80))
              {
                Session = AirPlayReceiverSessionSetSecurityInfo(v25, theDict, *(CFTypeRef *)(v38 + 400), *(_QWORD *)(v38 + 384), *(unsigned int *)(v38 + 420), (_OWORD *)(v38 + 48), (_OWORD *)(v38 + 64));
                if (!Session)
                {
                  v25 = *(_QWORD *)(v38 + 32);
                  goto LABEL_61;
                }
LABEL_111:
                APSLogErrorAt();
                v10 = 0;
LABEL_112:
                v43 = -71934;
LABEL_84:
                v9 = v37;
                goto LABEL_93;
              }
LABEL_61:
              Session = AirPlayReceiverSessionSetup(v25, theDict, (__CFDictionary **)&cf);
              if (Session)
              {
                APSLogErrorAt();
                v10 = 0;
                if (Session == 61)
                  v35 = -71939;
                else
                  v35 = -71934;
                v43 = v35;
                goto LABEL_84;
              }
              CFArrayGetTypeID();
              v28 = (const __CFArray *)CFDictionaryGetTypedValue();
              if (!Session)
              {
                Count = CFArrayGetCount(v28);
                if (Count >= 1)
                {
                  v30 = Count;
                  for (i = 0; v30 != i; ++i)
                  {
                    ValueAtIndex = CFArrayGetValueAtIndex(v28, i);
                    if (!ValueAtIndex)
                      break;
                    v33 = CFGetTypeID(ValueAtIndex);
                    if (v33 != CFDictionaryGetTypeID())
                      break;
                    if (CFDictionaryGetInt64() == 96)
                    {
                      if ((int)CFDictionaryGetInt64() <= 0 || (int)CFDictionaryGetInt64() <= 0)
                        break;
                      v14 = v39;
                      if ((_BYTE)v17)
                      {
                        Int64 = CFDictionaryGetInt64();
                        if (Int64 <= 0)
                          goto LABEL_111;
                      }
                      else
                      {
                        Int64 = 0;
                      }
                      Session = snprintf_add();
                      if (!Session && (!Int64 || (Session = snprintf_add()) == 0))
                      {
                        v10 = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
                        if (v10)
                        {
                          Session = CFDictionarySetCString();
                          if (!Session)
                          {
                            Session = CFDictionarySetCString();
                            if (!Session)
                            {
                              v44 = 0;
                              __strlcpy_chk();
                              Session = CFDictionarySetCString();
                              if (!Session)
                              {
                                airplayReqProcessor_registerPlaybackStateWithServerIfNeeded((uint64_t)a1, 1);
                                *(_BYTE *)(v38 + 45) = 1;
                                *a3 = v10;
                                v43 = 0;
                                v10 = 0;
                                goto LABEL_84;
                              }
                            }
                          }
                        }
                        APSLogErrorAt();
                        goto LABEL_112;
                      }
                      goto LABEL_111;
                    }
                  }
                }
              }
              APSLogErrorAt();
              v10 = 0;
              v43 = -71934;
            }
            v9 = v37;
            v14 = v39;
LABEL_93:
            CFRelease(theDict);
            CFRelease(v14);
            if (v15)
              CFRelease(v15);
LABEL_15:
            if (cf)
              CFRelease(cf);
            if (v10)
              CFRelease(v10);
            if (v9)
              free(v9);
            return v43;
          }
          if (!strnicmpx())
          {
            if (SNScanF() != 1)
              goto LABEL_90;
            goto LABEL_44;
          }
          if (!strnicmpx())
            break;
          if (strnicmpx())
          {
            if (strnicmpx())
            {
              v18 = strnicmpx();
              v16 = 1;
              if (v18)
              {
                v19 = strnicmpx();
                v16 = v17;
                if (v19)
                {
                  v20 = strnicmpx();
                  v16 = v17;
                  if (v20)
                  {
                    strnicmpx();
                    v16 = v17;
                  }
                }
              }
            }
            else
            {
              v21 = strnicmpx();
              v16 = v17;
              if (v21)
              {
                v22 = strnicmpx();
                v16 = v17;
                if (!v22)
                {
                  CFDictionarySetValue(theDict, CFSTR("usingScreen"), value);
                  v16 = v17;
                }
              }
            }
          }
          else
          {
            if (SNScanF() != 1)
            {
LABEL_90:
              APSLogErrorAt();
              goto LABEL_91;
            }
LABEL_44:
            CFDictionarySetInt64();
            v16 = v17;
          }
        }
        if (SNScanF() != 1)
          goto LABEL_90;
        goto LABEL_44;
      }
      APSLogErrorAt();
      v43 = -71934;
      CFRelease(theDict);
    }
    else
    {
      APSLogErrorAt();
    }
    v9 = 0;
    v10 = 0;
    goto LABEL_15;
  }
  return v7;
}

void airplayReqProcessor_registerPlaybackStateWithServerIfNeeded(uint64_t a1, int a2)
{
  uint64_t DerivedStorage;
  uint64_t v4;
  _QWORD *v5;
  __CFString *v6;
  const __CFString *v7;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (!*(_BYTE *)(DerivedStorage + 440))
  {
    v4 = DerivedStorage;
    if (*(unsigned __int8 *)(DerivedStorage + 351) != a2)
    {
      v5 = *(_QWORD **)DerivedStorage;
      v6 = a2 ? CFSTR("StartingPlaying") : CFSTR("StoppedPlaying");
      AirPlayReceiverServerUpdateStatus(v5, v6);
      *(_BYTE *)(v4 + 351) = a2;
      if (*(unsigned __int8 *)(v4 + 350) != a2)
      {
        if (a2)
        {
          if (*(_DWORD *)(v4 + 24) != 4)
            return;
          v7 = CFSTR("StartedPlayingOverAWDL");
        }
        else
        {
          v7 = CFSTR("StoppedPlayingOverAWDL");
        }
        AirPlayReceiverServerUpdateStatus(*(_QWORD **)v4, v7);
        *(_BYTE *)(v4 + 350) = a2;
      }
    }
  }
}

void airplayReqProcessor_deregisterReqProcWithSessionManagerIfNeeded(const void *a1)
{
  uint64_t DerivedStorage;
  uint64_t v3;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (*(_BYTE *)(DerivedStorage + 352))
  {
    v3 = DerivedStorage;
    APReceiverSessionManagerRemoveSession(*(_QWORD *)(DerivedStorage + 432), a1);
    *(_BYTE *)(v3 + 352) = 0;
  }
}

uint64_t airplayReqProcessor_requestProcessGetLog(uint64_t a1, CFMutableDictionaryRef *a2)
{
  uint64_t v3;

  CMBaseObjectGetDerivedStorage();
  DataBuffer_Init();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_AppendF();
  DataBuffer_RunProcessAndAppendOutput();
  DataBuffer_AppendFile();
  if (DataBuffer_Commit())
  {
    v3 = 4294895362;
LABEL_7:
    APSLogErrorAt();
    goto LABEL_4;
  }
  if (airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"text/plain", 0, 0, 0, a2))
  {
    v3 = 4294895362;
    goto LABEL_7;
  }
  v3 = 0;
LABEL_4:
  DataBuffer_Free();
  return v3;
}

uint64_t airplayReqProcessor_requestProcessGetInfo(uint64_t a1, uint64_t a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  const void *v6;
  const void *TypedValue;
  uint64_t v8;
  const __CFString *v9;
  uint64_t v10;
  int Int64Ranged;
  uint64_t v12;
  CFTypeRef v14;
  CFTypeRef cf;
  CFTypeRef v16;
  int Variable;

  Variable = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v14 = 0;
  cf = 0;
  CFDictionaryGetData();
  CFDictionaryGetTypeID();
  v6 = (const void *)CFCreateWithPlistBytes();
  CFArrayGetTypeID();
  TypedValue = (const void *)CFDictionaryGetTypedValue();
  v16 = TypedValue;
  if (TypedValue)
    CFRetain(TypedValue);
  CFStringGetTypeID();
  v8 = CFDictionaryGetTypedValue();
  if (v8)
  {
    v9 = (const __CFString *)v8;
    Variable = CFStringCopyUTF8CString();
    if (Variable)
    {
      APSLogErrorAt();
    }
    else
    {
      CFStringGetLength(v9);
      while (1)
      {
        Variable = URLGetOrCopyNextVariable();
        if (Variable)
          break;
        Variable = CFArrayEnsureCreatedAndAppendCString();
        if (Variable)
        {
          v10 = 4294895362;
LABEL_9:
          APSLogErrorAt();
          goto LABEL_20;
        }
      }
      Int64Ranged = CFDictionaryGetInt64Ranged();
      *(_DWORD *)(DerivedStorage + 444) = Int64Ranged;
      v12 = *(_QWORD *)(DerivedStorage + 32);
      if (v12)
      {
        if (gLogCategory_AirPlayReceiverCore <= 30
          && (gLogCategory_AirPlayReceiverCore != -1 || _LogCategory_Initialize()))
        {
          LogPrintF();
        }
        *(_DWORD *)(v12 + 608) = Int64Ranged;
      }
      Variable = APReceiverSystemInfoCopyInfoDict(*(_QWORD *)(*(_QWORD *)DerivedStorage + 160), (uint64_t)v16, 0, (uint64_t)&v14);
      if (Variable)
      {
        v10 = 4294895362;
        goto LABEL_9;
      }
      Variable = airplayReqProcessor_createSessionInfoDict(a1, (const __CFDictionary *)v14, (__CFDictionary **)&cf);
      if (Variable)
      {
        v10 = 4294895362;
        goto LABEL_9;
      }
      Variable = airplayReqProcessor_preparePlistResponse(cf, a3);
      if (Variable)
      {
        v10 = 4294895362;
        goto LABEL_9;
      }
    }
    v10 = 0;
  }
  else
  {
    APSLogErrorAt();
    v10 = 4294895366;
  }
LABEL_20:
  if (cf)
    CFRelease(cf);
  if (v14)
    CFRelease(v14);
  if (v6)
    CFRelease(v6);
  if (v16)
    CFRelease(v16);
  if (Variable
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v10;
}

uint64_t airplayReqProcessor_requestProcessFPSetup()
{
  uint64_t DerivedStorage;
  int v1;
  const char *v2;
  const char *v3;
  CFStringRef v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, CFStringRef);
  int Int64Ranged;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  ++*(_DWORD *)(DerivedStorage + 396);
  if (!airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    APSLogErrorAt();
    return 4294895366;
  }
  if (*(_QWORD *)(DerivedStorage + 8))
  {
    v1 = *(_DWORD *)(*(_QWORD *)(DerivedStorage + 16) + 192);
    if (v1 <= 31)
    {
      v2 = "Enet";
      switch(v1)
      {
        case 1:
          goto LABEL_26;
        case 2:
          v2 = "WiFi";
          break;
        case 3:
        case 5:
        case 6:
        case 7:
          goto LABEL_19;
        case 4:
          v2 = "AWDL";
          break;
        case 8:
          v2 = "USB";
          break;
        default:
          if (v1 != 16)
            goto LABEL_19;
          v2 = "Direct";
          break;
      }
      goto LABEL_26;
    }
    if (v1 > 127)
    {
      if (v1 == 128)
      {
        v2 = "NAN";
        goto LABEL_26;
      }
      if (v1 == 256)
      {
        v2 = "IPsecBT";
        goto LABEL_26;
      }
    }
    else
    {
      if (v1 == 32)
      {
        v2 = "BTLE";
        goto LABEL_26;
      }
      if (v1 == 64)
      {
        v2 = "WFD";
LABEL_26:
        if (*(_BYTE *)(DerivedStorage + 408))
          v3 = " (Paired)";
        else
          v3 = "";
        v4 = CFStringCreateWithFormat((CFAllocatorRef)*MEMORY[0x24BDBD240], 0, CFSTR("AirPlay starting...\n%s\n%s%s\n"), DerivedStorage + 134, v2, v3);
        v5 = *(_QWORD *)(DerivedStorage + 8);
        v6 = *(void (**)(uint64_t, uint64_t, CFStringRef))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 24);
        if (v6)
          v6(v5, 30, v4);
        CFRelease(v4);
        goto LABEL_32;
      }
    }
LABEL_19:
    v2 = "?";
    if (v1 == 512)
      v2 = "IPSecWiFi";
    goto LABEL_26;
  }
LABEL_32:
  Int64Ranged = CFDictionaryGetInt64Ranged();
  if (Int64Ranged == 8)
  {
    v8 = 2;
LABEL_36:
    *(_DWORD *)(DerivedStorage + 356) = v8;
    v9 = *(_QWORD *)(DerivedStorage + 384);
    if (*(_BYTE *)(DerivedStorage + 392))
    {
      if (v9)
      {
        IPaI1oem5iL();
        *(_QWORD *)(DerivedStorage + 384) = 0;
        *(_BYTE *)(DerivedStorage + 392) = 0;
      }
    }
    else if (v9)
    {
LABEL_42:
      CFDictionaryGetData();
      APSLogErrorAt();
      return 4294895366;
    }
    *(_QWORD *)(DerivedStorage + 360) = 0;
    *(_QWORD *)(DerivedStorage + 368) = 0;
    *(_QWORD *)(DerivedStorage + 376) = 0;
    if (GetFairPlayHWInfo())
    {
      v11 = 4294895362;
    }
    else
    {
      cp2g1b9ro();
      if (!v10)
        goto LABEL_42;
      v11 = 4294895362;
    }
    APSLogErrorAt();
    return v11;
  }
  if (Int64Ranged == 32)
  {
    v8 = 3;
    goto LABEL_36;
  }
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 60
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return 4294895364;
}

uint64_t airplayReqProcessor_requestProcessFPSetup2()
{
  CFMutableDictionaryRef Mutable;
  CFMutableDictionaryRef v1;
  int v3;
  uint64_t v4;
  _DWORD length[3];
  uint64_t v6;
  unsigned int v7;

  v7 = 0;
  CMBaseObjectGetDerivedStorage();
  v6 = 0;
  memset(length, 0, sizeof(length));
  v4 = 0;
  Mutable = CFDictionaryCreateMutable(0, 0, MEMORY[0x24BDBD6A0], MEMORY[0x24BDBD6B0]);
  if (Mutable)
  {
    v1 = Mutable;
    if (gLogCategory_APReceiverRequestProcessorAirPlay <= 30
      && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
    {
      LogPrintF();
    }
    CFDictionaryGetData();
    APSLogErrorAt();
    v3 = -71930;
    CFRelease(v1);
  }
  else
  {
    APSLogErrorAt();
    v3 = 0;
    v7 = -71950;
  }
  if (*(_QWORD *)&length[1])
    jEHf8Xzsv8K(*(uint64_t *)&length[1]);
  if (v3
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 60
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v7;
}

void airplayReqProcessor_requestProcessEnsurePairPin()
{
  uint64_t DerivedStorage;
  uint64_t v1;
  NSObject *v2;
  _QWORD block[5];

  DerivedStorage = CMBaseObjectGetDerivedStorage();
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v1 = *(_QWORD *)(*(_QWORD *)DerivedStorage + 160);
  v2 = *(NSObject **)(v1 + 16);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 3221225472;
  block[2] = __APReceiverSystemInfoEnsurePIN_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = v1;
  dispatch_sync(v2, block);
}

uint64_t airplayReqProcessor_requestProcessPairSetupPINStart(const void *a1)
{
  uint64_t DerivedStorage;
  int PropertyInt64Sync;
  uint64_t Int64Ranged;
  int v5;
  const __CFString *v6;
  int v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  const __CFString *v12;
  int v13;
  unsigned int v14;

  v14 = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  v13 = 0;
  v12 = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  if (airplayReqProcessor_isAllowedToConnectBasedOnACL())
  {
    if (airplayReqProcessor_isAllowedToConnectBasedOnUserPermission(a1, (int *)&v14))
    {
      PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
      Int64Ranged = CFDictionaryGetInt64Ranged();
      if ((_DWORD)Int64Ranged == 5)
        v5 = 1;
      else
        v5 = PropertyInt64Sync;
      v13 = airplayReqProcessor_copyPasscodeForPairingType(*(_QWORD *)(*(_QWORD *)DerivedStorage + 160), Int64Ranged, v5, &v12);
      if (v13)
      {
        APSLogErrorAt();
        v14 = -71934;
        v6 = v12;
        if (v12)
LABEL_18:
          CFRelease(v6);
      }
      else
      {
        v6 = v12;
        v7 = airplayReqProcessor_displayPINIfNeeded(a1, v12, v5);
        v13 = v7;
        v8 = v7 == -6721 || v7 == 200453;
        if (v8 || v7 == 453)
          v14 = -71937;
        if (v6)
          goto LABEL_18;
      }
    }
    else
    {
      APSLogErrorAt();
    }
    v9 = v14;
    if (!v14)
      return v9;
    goto LABEL_20;
  }
  v9 = 4294895366;
  APSLogErrorAt();
  v14 = -71930;
LABEL_20:
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 90)
  {
    if (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || (v10 = _LogCategory_Initialize(), v9 = v14, v10))
    {
      LogPrintF();
      return v14;
    }
  }
  return v9;
}

uint64_t airplayReqProcessor_requestProcessPairSetupUnauthenticatedLegacy(uint64_t a1, const __CFDictionary *a2, CFMutableDictionaryRef *a3)
{
  uint64_t DerivedStorage;
  BOOL v6;
  uint64_t v7;
  uint64_t PropertyInt64Sync;
  int v9;
  const void *Value;
  const void *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, _QWORD, uint64_t, const void *, CFDataRef *, char *);
  int v14;
  int v15;
  int v16;
  const UInt8 *BytePtr;
  CFIndex Length;
  CFDataRef theData;
  char v21;

  v21 = 0;
  DerivedStorage = CMBaseObjectGetDerivedStorage();
  theData = 0;
  if (gLogCategory_APReceiverRequestProcessorAirPlay <= 50
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  v6 = 1;
  if (!CFObjectGetPropertyInt64Sync())
    v6 = CFObjectGetPropertyInt64Sync() != 0;
  v7 = 4294895356;
  PropertyInt64Sync = CFObjectGetPropertyInt64Sync();
  if (APSIsAPMSpeaker()
    || (v16 = *(_DWORD *)(DerivedStorage + 24), v15 = -6768, v16 != 4) && v16 != 64 && v16 != 128)
  {
    if (v6)
    {
      v15 = -6768;
      goto LABEL_27;
    }
    if (*(_QWORD *)(DerivedStorage + 400)
      || (v9 = APPairingServicesLegacyCreate(*MEMORY[0x24BDBD240], (_QWORD *)(DerivedStorage + 400))) == 0)
    {
      Value = CFDictionaryGetValue(a2, (const void *)*MEMORY[0x24BE03900]);
      if (Value)
      {
        v11 = Value;
        v12 = *(_QWORD *)(DerivedStorage + 400);
        v13 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, const void *, CFDataRef *, char *))(*(_QWORD *)(CMBaseObjectGetVTable() + 16) + 8);
        if (v13)
        {
          v14 = v13(v12, 0, PropertyInt64Sync, v11, &theData, &v21);
          v15 = v14;
          if (v14 == -72192)
          {
LABEL_14:
            v7 = 4294895362;
            goto LABEL_27;
          }
          if (!v14)
          {
            if (theData)
            {
              BytePtr = CFDataGetBytePtr(theData);
              Length = CFDataGetLength(theData);
            }
            else
            {
              BytePtr = 0;
              Length = 0;
            }
            v15 = airplayReqProcessor_prepareBinaryDataResponse((uint64_t)"application/x-apple-binary-plist", (uint64_t)BytePtr, Length, 0, a3);
            if (!v15)
            {
              v7 = 0;
              goto LABEL_27;
            }
            goto LABEL_38;
          }
        }
        else
        {
          v15 = -12782;
        }
      }
      else
      {
        APSLogErrorAt();
        v15 = 0;
      }
      v7 = 4294895366;
      goto LABEL_27;
    }
    v15 = v9;
LABEL_38:
    APSLogErrorAt();
    goto LABEL_14;
  }
LABEL_27:
  if (theData)
    CFRelease(theData);
  if (v15
    && gLogCategory_APReceiverRequestProcessorAirPlay <= 90
    && (gLogCategory_APReceiverRequestProcessorAirPlay != -1 || _LogCategory_Initialize()))
  {
    LogPrintF();
  }
  return v7;
}

