void kor_phrase_level_rules()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[2];
  uint64_t v69[2];
  _QWORD v70[4];
  _QWORD v71[6];
  _BYTE v72[192];
  uint64_t v73;

  OUTLINED_FUNCTION_180_1();
  OUTLINED_FUNCTION_22_29();
  v73 = *MEMORY[0x24BDAC8D0];
  v71[0] = 0;
  v71[1] = 0;
  memset(v70, 0, sizeof(v70));
  OUTLINED_FUNCTION_16_32(v3, v4, v5, v6, v7, v8, v9, v10, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68[0],
    v68[1],
    v69[0],
    v69[1]);
  OUTLINED_FUNCTION_88_7();
  OUTLINED_FUNCTION_49_17(v11, v12);
  if (OUTLINED_FUNCTION_48_18())
    goto LABEL_3;
  OUTLINED_FUNCTION_179_1();
  if (OUTLINED_FUNCTION_40_20(v13, v14, v15, v16, v17, (uint64_t)v72))
    goto LABEL_3;
  OUTLINED_FUNCTION_83_7(v0, (uint64_t)v71, v2, v18, v19, v20, v21, v22);
  v23 = OUTLINED_FUNCTION_145_2();
  OUTLINED_FUNCTION_83_7(v23, v24, v1, v25, v26, v27, v28, v29);
  v30 = OUTLINED_FUNCTION_78_10();
  v31 = OUTLINED_FUNCTION_69_11(v30, (uint64_t)v69);
  v32 = OUTLINED_FUNCTION_69_11(v31, (uint64_t)v68);
  v33 = OUTLINED_FUNCTION_61_13(v32, 0, (uint64_t)&null_str_14);
  v35 = OUTLINED_FUNCTION_150_2((uint64_t)v33, v34, (uint64_t)&unk_25775240C);
  OUTLINED_FUNCTION_91_7((uint64_t)v35, (uint64_t)v1);
  OUTLINED_FUNCTION_172_1();
  OUTLINED_FUNCTION_167_1();
  v36 = OUTLINED_FUNCTION_141_2();
  lpta_storep(v36, v37);
  OUTLINED_FUNCTION_175_1();
  OUTLINED_FUNCTION_167_1();
  OUTLINED_FUNCTION_159_2();
  v38 = forall_to_test(v0, (unsigned __int16 *)(v0 + 1320), (__int16 *)v70);
  if (!(_DWORD)v38)
  {
LABEL_5:
    OUTLINED_FUNCTION_58_14();
    OUTLINED_FUNCTION_68_11();
    if (!(_DWORD)v38)
    {
      v38 = OUTLINED_FUNCTION_11_33();
      if (!(_DWORD)v38)
      {
LABEL_7:
        OUTLINED_FUNCTION_45_20(v38, 4, v0 + 1336);
LABEL_8:
        OUTLINED_FUNCTION_3_34(5);
        OUTLINED_FUNCTION_68_11();
        if ((_DWORD)v39)
        {
LABEL_9:
          OUTLINED_FUNCTION_3_34(6);
          OUTLINED_FUNCTION_7_33(v40, v0 + 1336);
          if (v41)
            goto LABEL_18;
          v38 = advanc((_QWORD *)v0);
          if ((_DWORD)v38)
            goto LABEL_18;
LABEL_15:
          OUTLINED_FUNCTION_45_20(v38, 7, (uint64_t)v69);
          v38 = OUTLINED_FUNCTION_11_33();
          if (!(_DWORD)v38)
          {
LABEL_16:
            OUTLINED_FUNCTION_173_1(v38, 8);
            OUTLINED_FUNCTION_123_5();
            kor_word_init_con();
LABEL_17:
            OUTLINED_FUNCTION_123_5();
            kor_word_final_stop();
LABEL_18:
            mark_kor_stressed_syllable();
LABEL_19:
            OUTLINED_FUNCTION_3_34(3);
            OUTLINED_FUNCTION_123_5();
            v38 = kor_post_word_level_rules();
LABEL_20:
            OUTLINED_FUNCTION_178_1(v38, 1, 2, 12, 4);
            if (!(_DWORD)v38)
              goto LABEL_3;
          }
        }
        else
        {
          v38 = OUTLINED_FUNCTION_53_15(v39, 4u, 12, 5);
          if (!(_DWORD)v38)
          {
            v38 = OUTLINED_FUNCTION_11_33();
            if (!(_DWORD)v38)
              goto LABEL_18;
          }
        }
      }
    }
  }
  v42 = *(_QWORD *)(v0 + 104);
  if (v42)
    v43 = OUTLINED_FUNCTION_32_26(v42);
  else
    v43 = OUTLINED_FUNCTION_47_19(v38, 0);
  v44 = v43 - 1;
  v38 = 0;
  switch(v44)
  {
    case 1:
      goto LABEL_8;
    case 2:
      goto LABEL_20;
    case 3:
      goto LABEL_7;
    case 4:
      goto LABEL_9;
    case 5:
    case 9:
      goto LABEL_18;
    case 6:
      goto LABEL_15;
    case 7:
      goto LABEL_16;
    case 8:
      goto LABEL_17;
    case 10:
      goto LABEL_19;
    case 11:
      goto LABEL_5;
    default:
      break;
  }
LABEL_3:
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_109_6();
  OUTLINED_FUNCTION_46_19();
}

void kor_word_init_con()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  _BOOL8 v50;
  _BOOL8 v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BOOL8 v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  void *v94;
  _BOOL8 v95;
  uint64_t v96;
  unsigned int v97;
  unsigned int v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _BOOL8 v114;
  int v115;
  int v116;
  _BOOL8 v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  char v122[8];
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145[2];
  _QWORD v146[2];
  _QWORD v147[2];
  _QWORD v148[2];
  char v149[10];
  char v150[9];
  char v151[9];
  int v152[48];
  uint64_t v153;

  OUTLINED_FUNCTION_31_26();
  OUTLINED_FUNCTION_149_2();
  v153 = *MEMORY[0x24BDAC8D0];
  v148[0] = 0;
  v148[1] = 0;
  v147[0] = 0;
  v147[1] = 0;
  v146[0] = 0;
  v146[1] = 0;
  OUTLINED_FUNCTION_25_28(v5, v6, v7, v8, v9, v10, v11, v12, v121, v122[0], v123, v124, v125, v126, v127, v128, v129, v130, v131,
    v132,
    v133,
    v134,
    v135,
    v136,
    v137,
    v138,
    v139,
    v140,
    v141,
    v142,
    v143,
    v144,
    v145[0],
    v145[1]);
  OUTLINED_FUNCTION_88_7();
  bzero(v152, v13);
  v14 = setjmp(v152);
  if ((_DWORD)v14
    || OUTLINED_FUNCTION_40_20(v14, (uint64_t)v122, (uint64_t)v151, (uint64_t)v150, (uint64_t)v149, (uint64_t)v152))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_83_7(v0, (uint64_t)v148, v4, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_83_7(v0, (uint64_t)v147, v3, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_83_7(v0, (uint64_t)v146, v2, v25, v26, v27, v28, v29);
  OUTLINED_FUNCTION_83_7(v0, (uint64_t)v145, v1, v30, v31, v32, v33, v34);
  v35 = 0;
  OUTLINED_FUNCTION_43_20(v36, v37, (uint64_t)&null_str_14);
  OUTLINED_FUNCTION_3_34(1);
  lpta_loadp_setscan_r(v0, (uint64_t)v146);
  if (!(_DWORD)v38)
  {
    if (OUTLINED_FUNCTION_77_10(v38, 2u, 1))
    {
      v39 = 0;
    }
    else
    {
      bspush_ca_scan_boa(v0);
      v40 = OUTLINED_FUNCTION_161_1();
      v39 = !testFldeq(v40, v41, v42, v43);
    }
    goto LABEL_8;
  }
LABEL_29:
  OUTLINED_FUNCTION_70_11(v38, v0 + 1592);
  OUTLINED_FUNCTION_63_11();
  if (OUTLINED_FUNCTION_44_20())
  {
    v39 = v35;
  }
  else
  {
    v39 = v35;
    if (!OUTLINED_FUNCTION_73_11())
      goto LABEL_3;
  }
LABEL_32:
  OUTLINED_FUNCTION_3_34(5);
  OUTLINED_FUNCTION_30_26(v65, (uint64_t)v147);
  if (!(_DWORD)v66)
  {
    v69 = OUTLINED_FUNCTION_20_31(v66, v67, v68, (uint64_t *)&unk_257752407);
    if (!(_DWORD)v69)
    {
      OUTLINED_FUNCTION_7_33(v69, (uint64_t)v148);
      if (!(_DWORD)v70)
      {
        if (OUTLINED_FUNCTION_53_15(v70, 4u, 1, 5))
          goto LABEL_8;
        v95 = OUTLINED_FUNCTION_11_33();
        if (v95)
          goto LABEL_8;
        OUTLINED_FUNCTION_4_33(v95, (uint64_t)v146);
        if ((_DWORD)v38)
          goto LABEL_8;
        v59 = (uint64_t *)&unk_25775244A;
LABEL_25:
        v60 = OUTLINED_FUNCTION_34_25(v38, v49, v44, v59);
        if ((_DWORD)v60)
          goto LABEL_8;
        v61 = OUTLINED_FUNCTION_10_33(v60, (uint64_t)v146, v0 + 1592);
        v64 = &unk_257752410;
        goto LABEL_93;
      }
    }
  }
  v71 = v39;
LABEL_36:
  OUTLINED_FUNCTION_3_34(7);
  OUTLINED_FUNCTION_30_26(v72, (uint64_t)v147);
  if ((_DWORD)v38)
  {
LABEL_52:
    OUTLINED_FUNCTION_30_26(v38, (uint64_t)v147);
    if ((_DWORD)v88)
      goto LABEL_3;
    v91 = OUTLINED_FUNCTION_20_31(v88, v89, v90, (uint64_t *)&unk_257752407);
    if ((_DWORD)v91)
      goto LABEL_3;
    OUTLINED_FUNCTION_7_33(v91, (uint64_t)v146);
    if (v92)
      goto LABEL_3;
    v93 = OUTLINED_FUNCTION_119_5();
    if ((_DWORD)v93)
      goto LABEL_3;
    v94 = &unk_257752407;
    goto LABEL_84;
  }
  if (OUTLINED_FUNCTION_53_15(v38, 3u, 1, 10))
    goto LABEL_80;
  v73 = OUTLINED_FUNCTION_11_33();
  if (v73)
    goto LABEL_80;
  OUTLINED_FUNCTION_30_26(v73, (uint64_t)v147);
  if ((_DWORD)v74)
    goto LABEL_80;
  v77 = OUTLINED_FUNCTION_20_31(v74, v75, v76, (uint64_t *)&unk_257752407);
  if ((_DWORD)v77)
    goto LABEL_80;
  OUTLINED_FUNCTION_7_33(v77, (uint64_t)v146);
  if ((_DWORD)v78)
    goto LABEL_80;
  if (OUTLINED_FUNCTION_53_15(v78, 3u, 1, 9))
    goto LABEL_80;
  v79 = OUTLINED_FUNCTION_11_33();
  if (v79)
    goto LABEL_80;
  OUTLINED_FUNCTION_7_33(v79, (uint64_t)v146);
  if (v80)
    goto LABEL_80;
  OUTLINED_FUNCTION_5_33(8);
  v38 = OUTLINED_FUNCTION_20_31(v81, v82, v83, (uint64_t *)&unk_257752417);
  v39 = v71;
  v49 = v71;
  if ((_DWORD)v38)
    goto LABEL_8;
LABEL_46:
  v71 = v49;
  if (OUTLINED_FUNCTION_54_15(v38, v49, 1) || OUTLINED_FUNCTION_11_33())
    goto LABEL_80;
  OUTLINED_FUNCTION_3_34(13);
  OUTLINED_FUNCTION_7_33(v84, (uint64_t)v146);
  if (!(_DWORD)v38)
  {
    v38 = OUTLINED_FUNCTION_20_31(v38, v85, v86, (uint64_t *)&unk_257752417);
    if (!(_DWORD)v38)
    {
      OUTLINED_FUNCTION_30_26(v38, (uint64_t)v147);
      if (!(_DWORD)v38)
      {
        if (OUTLINED_FUNCTION_53_15(v38, 4u, 2, 3))
          goto LABEL_80;
        v117 = OUTLINED_FUNCTION_11_33();
        if (v117)
          goto LABEL_80;
        OUTLINED_FUNCTION_23_29(v117, (uint64_t)v147);
        if (v118)
          goto LABEL_80;
        OUTLINED_FUNCTION_5_33(14);
        v50 = v71;
LABEL_91:
        v39 = v50;
        v119 = OUTLINED_FUNCTION_34_25(v38, v49, v44, (uint64_t *)&unk_25775244E);
        if ((_DWORD)v119)
        {
LABEL_8:
          v44 = v39;
          while (2)
          {
            v45 = v44;
            v46 = *(_QWORD *)(v0 + 104);
            if (v46)
            {
              OUTLINED_FUNCTION_32_26(v46);
            }
            else
            {
              v47 = (_QWORD *)OUTLINED_FUNCTION_142_2();
              vback(v47, v48);
              v45 = 0;
            }
            OUTLINED_FUNCTION_106_6();
            v49 = v45;
            v50 = v45;
            v51 = v45;
            switch(v52)
            {
              case 0:
                goto LABEL_28;
              case 1:
                OUTLINED_FUNCTION_38_24();
                v38 = OUTLINED_FUNCTION_11_33();
                v44 = v45;
                if ((_DWORD)v38)
                  continue;
                goto LABEL_27;
              case 2:
LABEL_27:
                OUTLINED_FUNCTION_45_20(v38, 3, v0 + 1592);
LABEL_28:
                v35 = v45;
                goto LABEL_29;
              case 3:
                v39 = v45;
                goto LABEL_32;
              case 4:
                v71 = v45;
                goto LABEL_36;
              case 6:
                goto LABEL_52;
              case 7:
                v53 = OUTLINED_FUNCTION_123_5();
                bspush_ca_scan(v53, v54);
                v55 = OUTLINED_FUNCTION_139_3();
                v58 = (uint64_t *)&unk_257752411;
                goto LABEL_19;
              case 8:
                goto LABEL_46;
              case 9:
                OUTLINED_FUNCTION_164_1();
                v55 = OUTLINED_FUNCTION_139_3();
                v58 = (uint64_t *)&unk_257752404;
                goto LABEL_19;
              case 10:
                OUTLINED_FUNCTION_177_1();
                v55 = OUTLINED_FUNCTION_80_9();
                v58 = (uint64_t *)&unk_25775244C;
                goto LABEL_19;
              case 11:
                v55 = OUTLINED_FUNCTION_139_3();
                v58 = (uint64_t *)&unk_257752401;
LABEL_19:
                v38 = test_string_s(v55, v56, v57, v58);
                v49 = v45;
                v44 = v45;
                if (!(_DWORD)v38)
                  goto LABEL_46;
                continue;
              case 12:
                v87 = v45;
                goto LABEL_64;
              case 13:
                v38 = OUTLINED_FUNCTION_128_5();
                v50 = v45;
                v44 = v45;
                if (!(_DWORD)v38)
                  goto LABEL_91;
                continue;
              case 14:
                goto LABEL_91;
              case 16:
                v87 = v45;
                goto LABEL_69;
              case 17:
                v87 = v45;
                goto LABEL_74;
              case 18:
                goto LABEL_81;
              case 19:
                v38 = OUTLINED_FUNCTION_128_5();
                v51 = v45;
                v44 = v45;
                if (!(_DWORD)v38)
                  goto LABEL_24;
                continue;
              case 20:
                goto LABEL_24;
              default:
                goto LABEL_3;
            }
          }
        }
        v61 = OUTLINED_FUNCTION_10_33(v119, (uint64_t)v146, v0 + 1592);
        v64 = &unk_257752418;
LABEL_93:
        OUTLINED_FUNCTION_1_34(v61, v62, v63, (uint64_t)v64);
        if (!v120)
          goto LABEL_3;
        goto LABEL_8;
      }
    }
  }
  v87 = v71;
LABEL_64:
  OUTLINED_FUNCTION_7_33(v38, (uint64_t)v146);
  if ((_DWORD)v38
    || (v96 = OUTLINED_FUNCTION_133_4(), v38 = test_string_s(v96, v97, v98, v99), (_DWORD)v38)
    || (v100 = OUTLINED_FUNCTION_10_33(v38, (uint64_t)v146, v0 + 1592),
        OUTLINED_FUNCTION_1_34(v100, v101, v102, (uint64_t)&unk_25775240D),
        (_DWORD)v38))
  {
LABEL_69:
    OUTLINED_FUNCTION_7_33(v38, (uint64_t)v146);
    if (!(_DWORD)v103)
    {
      v106 = OUTLINED_FUNCTION_20_31(v103, v104, v105, (uint64_t *)&unk_257752411);
      if (!(_DWORD)v106)
      {
        v107 = OUTLINED_FUNCTION_10_33(v106, (uint64_t)v146, v0 + 1592);
        OUTLINED_FUNCTION_1_34(v107, v108, v109, (uint64_t)&unk_257752419);
        if (!v110)
          goto LABEL_3;
      }
    }
LABEL_74:
    v71 = v87;
    OUTLINED_FUNCTION_3_34(19);
    OUTLINED_FUNCTION_7_33(v111, (uint64_t)v146);
    if (!(_DWORD)v38)
    {
      v38 = OUTLINED_FUNCTION_20_31(v38, v112, v113, (uint64_t *)&unk_257752404);
      if (!(_DWORD)v38)
      {
        OUTLINED_FUNCTION_30_26(v38, (uint64_t)v147);
        if (!(_DWORD)v38)
        {
          if (OUTLINED_FUNCTION_53_15(v38, 4u, 2, 3)
            || (v114 = OUTLINED_FUNCTION_11_33())
            || (OUTLINED_FUNCTION_23_29(v114, (uint64_t)v147), v115))
          {
LABEL_80:
            v39 = v71;
            goto LABEL_8;
          }
          OUTLINED_FUNCTION_5_33(20);
          v51 = v87;
LABEL_24:
          v39 = v51;
          v59 = (uint64_t *)&unk_25775244E;
          goto LABEL_25;
        }
      }
    }
LABEL_81:
    OUTLINED_FUNCTION_7_33(v38, (uint64_t)v146);
    if (v116)
      goto LABEL_3;
    v93 = OUTLINED_FUNCTION_119_5();
    if ((_DWORD)v93)
      goto LABEL_3;
    v94 = &unk_257752414;
LABEL_84:
    OUTLINED_FUNCTION_10_33(v93, (uint64_t)v146, v0 + 1592);
    OUTLINED_FUNCTION_17_32(v0, 2, 1, (uint64_t)v94);
  }
LABEL_3:
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_109_6();
  OUTLINED_FUNCTION_6_33();
}

void kor_word_final_stop()
{
  _QWORD *v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD v120[2];
  _BYTE v121[10];
  _BYTE v122[9];
  _BYTE v123[9];
  int v124[48];
  uint64_t v125;

  OUTLINED_FUNCTION_180_1();
  OUTLINED_FUNCTION_149_2();
  v125 = *MEMORY[0x24BDAC8D0];
  v120[0] = 0;
  v120[1] = 0;
  v118 = 0;
  v119 = 0;
  OUTLINED_FUNCTION_16_32(v5, v6, v7, v8, v9, v10, v11, v12, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117);
  OUTLINED_FUNCTION_88_7();
  bzero(v124, v13);
  v14 = setjmp(v124);
  if ((_DWORD)v14
    || OUTLINED_FUNCTION_40_20(v14, (uint64_t)&v91, (uint64_t)v123, (uint64_t)v122, (uint64_t)v121, (uint64_t)v124))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_83_7((uint64_t)v0, (uint64_t)v120, v4, v15, v16, v17, v18, v19);
  v20 = OUTLINED_FUNCTION_171_1();
  OUTLINED_FUNCTION_83_7(v20, v21, v3, v22, v23, v24, v25, v26);
  OUTLINED_FUNCTION_83_7((uint64_t)v0, (uint64_t)&v116, v2, v27, v28, v29, v30, v31);
  OUTLINED_FUNCTION_83_7((uint64_t)v0, (uint64_t)&v114, v1, v32, v33, v34, v35, v36);
  OUTLINED_FUNCTION_61_13(v37, 0, (uint64_t)&null_str_14);
  v0[198] = v0[420];
  OUTLINED_FUNCTION_3_34(1);
  v38 = OUTLINED_FUNCTION_171_1();
  lpta_loadp_setscan_l(v38, v39);
  if (!(_DWORD)v40)
  {
    v41 = OUTLINED_FUNCTION_53_15(v40, 2u, 4, 1);
    if (v41 || (v41 = OUTLINED_FUNCTION_11_33()))
    {
LABEL_13:
      v44 = v0[13];
      if (v44)
        v45 = OUTLINED_FUNCTION_32_26(v44);
      else
        v45 = OUTLINED_FUNCTION_47_19(v41, 0);
      v46 = v45 - 1;
      v41 = 0;
      switch(v46)
      {
        case 0:
          goto LABEL_8;
        case 1:
          goto LABEL_7;
        case 2:
          goto LABEL_10;
        case 4:
          goto LABEL_20;
        case 6:
          goto LABEL_23;
        default:
          goto LABEL_3;
      }
      goto LABEL_3;
    }
LABEL_7:
    OUTLINED_FUNCTION_96_6(v41, 2);
  }
LABEL_8:
  OUTLINED_FUNCTION_165_1();
  OUTLINED_FUNCTION_160_1();
  if (!OUTLINED_FUNCTION_44_20() && !OUTLINED_FUNCTION_73_11())
    goto LABEL_3;
LABEL_10:
  OUTLINED_FUNCTION_3_34(4);
  OUTLINED_FUNCTION_7_33(v42, (uint64_t)&v116);
  if (v43)
    goto LABEL_3;
  v41 = OUTLINED_FUNCTION_117_6();
  if (v41)
    goto LABEL_13;
  v41 = OUTLINED_FUNCTION_11_33();
  if (v41)
    goto LABEL_13;
  OUTLINED_FUNCTION_68_11();
  if ((_DWORD)v47
    || (v50 = OUTLINED_FUNCTION_20_31(v47, v48, v49, (uint64_t *)&unk_2577523FC), (_DWORD)v50)
    || (v58 = OUTLINED_FUNCTION_105_6(v50, v51, v52, v53, v54, v55, v56, v57, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101,
                v102,
                v103,
                v104,
                v105,
                v106,
                v107,
                v108,
                v109,
                v110,
                v111,
                v112,
                v113,
                v114,
                v115,
                v116,
                v117,
                v118),
        OUTLINED_FUNCTION_1_34(v58, v59, v60, (uint64_t)&unk_257752417),
        v61))
  {
LABEL_20:
    OUTLINED_FUNCTION_68_11();
    if ((_DWORD)v62
      || (v65 = OUTLINED_FUNCTION_20_31(v62, v63, v64, (uint64_t *)&unk_25775240D), (_DWORD)v65)
      || (v73 = OUTLINED_FUNCTION_105_6(v65, v66, v67, v68, v69, v70, v71, v72, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101,
                  v102,
                  v103,
                  v104,
                  v105,
                  v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118),
          OUTLINED_FUNCTION_1_34(v73, v74, v75, (uint64_t)&unk_257752411),
          v76))
    {
LABEL_23:
      OUTLINED_FUNCTION_68_11();
      if (!(_DWORD)v77)
      {
        v80 = OUTLINED_FUNCTION_20_31(v77, v78, v79, (uint64_t *)&unk_2577523FA);
        if (!(_DWORD)v80)
        {
          v88 = OUTLINED_FUNCTION_105_6(v80, v81, v82, v83, v84, v85, v86, v87, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101,
                  v102,
                  v103,
                  v104,
                  v105,
                  v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118);
          OUTLINED_FUNCTION_1_34(v88, v89, v90, (uint64_t)&unk_257752404);
        }
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_46_19();
}

void mark_kor_stressed_syllable()
{
  _QWORD *v0;
  _QWORD *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  _BOOL8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30[23];
  uint64_t v31[2];
  uint64_t v32[2];
  _BYTE v33[10];
  _BYTE v34[9];
  _BYTE v35[9];
  int v36[48];
  uint64_t v37;

  OUTLINED_FUNCTION_31_26();
  v1 = v0;
  v37 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_16_32((int)v0, v2, v3, v4, v5, v6, v7, v8, v30[0], v30[1], v30[2], v30[3], v30[4], v30[5], v30[6], v30[7], v30[8], v30[9], v30[10],
    v30[11],
    v30[12],
    v30[13],
    v30[14],
    v30[15],
    v30[16],
    v30[17],
    v30[18],
    v30[19],
    v30[20],
    v30[21],
    v30[22],
    v31[0],
    v31[1],
    v32[0],
    v32[1]);
  OUTLINED_FUNCTION_88_7();
  bzero(v36, v9);
  v10 = setjmp(v36);
  if (!(_DWORD)v10
    && !OUTLINED_FUNCTION_40_20(v10, (uint64_t)v30, (uint64_t)v35, (uint64_t)v34, (uint64_t)v33, (uint64_t)v36))
  {
    v11 = OUTLINED_FUNCTION_90_7();
    get_parm(v11, v12, v13, v14, v15, v16, v17, v18);
    v20 = OUTLINED_FUNCTION_69_11(v19, (uint64_t)v31);
    OUTLINED_FUNCTION_43_20(v20, v21, (uint64_t)&null_str_14);
    OUTLINED_FUNCTION_3_34(1);
    OUTLINED_FUNCTION_98_6();
    if (!v22)
    {
      while (1)
      {
        test_synch(v1, 2, 1u, (unsigned __int8 *)&unk_25775240C);
        if (v23)
          goto LABEL_8;
        v23 = OUTLINED_FUNCTION_11_33();
        if (v23)
          goto LABEL_8;
        while (1)
        {
          savescptr((uint64_t)v1, 3, (uint64_t)v31);
          v24 = OUTLINED_FUNCTION_141_2();
          lpta_rpta_loadp(v24, v25, (uint64_t)v32);
          v26 = OUTLINED_FUNCTION_142_2();
          mark_i(v26, v27, 0, 1, 0);
          if (!v23)
            goto LABEL_3;
LABEL_8:
          v28 = v1[13];
          v29 = v28 ? OUTLINED_FUNCTION_32_26(v28) : OUTLINED_FUNCTION_47_19(v23, 0);
          if (v29 == 2)
            break;
          if (v29 != 3)
            goto LABEL_3;
        }
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_27_26();
  OUTLINED_FUNCTION_6_33();
}

uint64_t kor_post_word_level_rules()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 *v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int v66;
  int v67;
  uint64_t v68;
  uint64_t v69[23];
  uint64_t v70[2];
  uint64_t v71[2];
  _QWORD v72[2];
  _QWORD v73[2];
  _BYTE v74[10];
  _BYTE v75[9];
  _BYTE v76[9];
  _BYTE v77[192];
  uint64_t v78;

  OUTLINED_FUNCTION_22_29();
  v78 = *MEMORY[0x24BDAC8D0];
  v73[0] = 0;
  v73[1] = 0;
  v72[0] = 0;
  v72[1] = 0;
  OUTLINED_FUNCTION_16_32(v3, v4, v5, v6, v7, v8, v9, v10, v69[0], v69[1], v69[2], v69[3], v69[4], v69[5], v69[6], v69[7], v69[8], v69[9], v69[10],
    v69[11],
    v69[12],
    v69[13],
    v69[14],
    v69[15],
    v69[16],
    v69[17],
    v69[18],
    v69[19],
    v69[20],
    v69[21],
    v69[22],
    v70[0],
    v70[1],
    v71[0],
    v71[1]);
  OUTLINED_FUNCTION_88_7();
  OUTLINED_FUNCTION_49_17(v11, v12);
  v13 = OUTLINED_FUNCTION_48_18();
  if ((_DWORD)v13
    || OUTLINED_FUNCTION_40_20(v13, (uint64_t)v69, (uint64_t)v76, (uint64_t)v75, (uint64_t)v74, (uint64_t)v77))
  {
LABEL_3:
    OUTLINED_FUNCTION_27_26();
    return 94;
  }
  OUTLINED_FUNCTION_56_14(v0, (uint64_t)v73, v2, v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_56_14(v0, (uint64_t)v72, v1, v20, v21, v22, v23, v24);
  v25 = OUTLINED_FUNCTION_78_10();
  v26 = OUTLINED_FUNCTION_69_11(v25, (uint64_t)v70);
  v27 = 0;
  v29 = OUTLINED_FUNCTION_43_20(v26, v28, (uint64_t)&null_str_14);
  v31 = OUTLINED_FUNCTION_150_2((uint64_t)v29, v30, (uint64_t)&unk_25775240C);
  OUTLINED_FUNCTION_91_7((uint64_t)v31, (uint64_t)v1);
  v32 = OUTLINED_FUNCTION_141_2();
  lpta_loadpn(v32, v33);
  OUTLINED_FUNCTION_170_1();
  v34 = OUTLINED_FUNCTION_144_2();
  lpta_storep(v34, v35);
  OUTLINED_FUNCTION_172_1();
  OUTLINED_FUNCTION_170_1();
  OUTLINED_FUNCTION_159_2();
  v36 = OUTLINED_FUNCTION_144_2();
  v38 = forall_to_test(v36, v37, (__int16 *)v71);
  v39 = 0;
  if (!(_DWORD)v38)
  {
LABEL_5:
    OUTLINED_FUNCTION_58_14();
    OUTLINED_FUNCTION_42_20();
    LODWORD(v40) = v27;
    v39 = v27;
    if (!(_DWORD)v38)
    {
LABEL_6:
      v39 = v40;
      OUTLINED_FUNCTION_45_20(v38, 4, (uint64_t)v70);
      OUTLINED_FUNCTION_59_14();
      v38 = OUTLINED_FUNCTION_117_6();
      if (!(_DWORD)v38)
      {
        v38 = OUTLINED_FUNCTION_11_33();
        if ((_DWORD)v38)
          v39 = v40;
        else
          v39 = 1;
      }
    }
  }
  v41 = v39;
  while (2)
  {
    v42 = *(_QWORD *)(v0 + 104);
    if (v42)
    {
      OUTLINED_FUNCTION_32_26(v42);
      v40 = v43;
    }
    else
    {
      OUTLINED_FUNCTION_47_19(v38, v41);
      v40 = 0;
    }
    OUTLINED_FUNCTION_106_6();
    switch(v46)
    {
      case 0:
        goto LABEL_91;
      case 1:
        goto LABEL_25;
      case 2:
      case 15:
      case 17:
      case 20:
      case 33:
        goto LABEL_44;
      case 3:
        goto LABEL_6;
      case 4:
        v47 = OUTLINED_FUNCTION_38_24();
        OUTLINED_FUNCTION_7_33(v47, (uint64_t)v70);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_53_15(v38, 2u, 3, 0);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_59_14();
        OUTLINED_FUNCTION_154_2();
        v50 = v0;
        v51 = v49;
        goto LABEL_73;
      case 5:
        OUTLINED_FUNCTION_38_24();
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        goto LABEL_24;
      case 6:
LABEL_24:
        OUTLINED_FUNCTION_173_1(v38, 7);
LABEL_25:
        OUTLINED_FUNCTION_3_34(8);
        OUTLINED_FUNCTION_68_11();
        if ((_DWORD)v52)
          goto LABEL_26;
        v38 = OUTLINED_FUNCTION_54_15(v52, v53, 1);
        v41 = v40;
        if (!(_DWORD)v38)
        {
          v38 = OUTLINED_FUNCTION_11_33();
          v41 = v40;
          if (!(_DWORD)v38)
          {
            OUTLINED_FUNCTION_3_34(9);
            OUTLINED_FUNCTION_58_14();
            OUTLINED_FUNCTION_42_20();
            v41 = v40;
            if (!(_DWORD)v38)
              goto LABEL_68;
          }
        }
        continue;
      case 7:
LABEL_26:
        OUTLINED_FUNCTION_3_34(3);
        OUTLINED_FUNCTION_42_20();
        if ((_DWORD)v38)
          goto LABEL_44;
        v38 = OUTLINED_FUNCTION_54_15(v38, v54, 8);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_100_6();
        OUTLINED_FUNCTION_132_4();
        goto LABEL_18;
      case 8:
        goto LABEL_38;
      case 9:
        OUTLINED_FUNCTION_42_20();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_54_15(v38, v40, 8);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_53_15(v38, 2u, 4, 1);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        goto LABEL_36;
      case 10:
LABEL_68:
        OUTLINED_FUNCTION_45_20(v38, 11, (uint64_t)v70);
        OUTLINED_FUNCTION_5_33(12);
        *(_BYTE *)(v0 + 136) = 1;
        v38 = OUTLINED_FUNCTION_12_33();
        goto LABEL_69;
      case 11:
        v38 = OUTLINED_FUNCTION_20_31(v38, v44, v45, (uint64_t *)&unk_2577523FD);
LABEL_69:
        v41 = v40;
        if (!(_DWORD)v38)
          goto LABEL_70;
        continue;
      case 12:
LABEL_70:
        OUTLINED_FUNCTION_7_33(v38, (uint64_t)v70);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_59_14();
        v48 = 2;
        v49 = 11;
        v51 = 1;
        goto LABEL_72;
      case 13:
        OUTLINED_FUNCTION_38_24();
LABEL_36:
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if (!(_DWORD)v38)
          goto LABEL_37;
        continue;
      case 14:
LABEL_37:
        OUTLINED_FUNCTION_100_6();
        OUTLINED_FUNCTION_132_4();
        mark_s();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
LABEL_38:
        OUTLINED_FUNCTION_3_34(16);
        OUTLINED_FUNCTION_68_11();
        if ((_DWORD)v38)
          goto LABEL_44;
        v38 = OUTLINED_FUNCTION_77_10(v38, 2u, 5);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_3_34(17);
        OUTLINED_FUNCTION_42_20();
        if ((_DWORD)v55)
        {
LABEL_42:
          OUTLINED_FUNCTION_3_34(20);
          OUTLINED_FUNCTION_42_20();
          if (v57)
          {
LABEL_43:
            OUTLINED_FUNCTION_3_34(16);
            OUTLINED_FUNCTION_97_6();
            if ((_DWORD)v38)
              goto LABEL_44;
LABEL_85:
            OUTLINED_FUNCTION_59_14();
            v50 = OUTLINED_FUNCTION_133_4();
            goto LABEL_73;
          }
          OUTLINED_FUNCTION_154_2();
          v38 = OUTLINED_FUNCTION_53_15(v65, v66, v67, 3);
          v41 = v40;
          if (!(_DWORD)v38)
          {
            v38 = OUTLINED_FUNCTION_11_33();
            v41 = v40;
            if (!(_DWORD)v38)
            {
              OUTLINED_FUNCTION_52_16(21);
              OUTLINED_FUNCTION_58_14();
              OUTLINED_FUNCTION_98_6();
              v41 = v40;
              if (!(_DWORD)v38)
              {
LABEL_80:
                OUTLINED_FUNCTION_45_20(v38, 23, (uint64_t)v70);
                v38 = OUTLINED_FUNCTION_11_33();
                v41 = v40;
                if (!(_DWORD)v38)
                {
                  OUTLINED_FUNCTION_5_33(24);
                  v59 = 23;
LABEL_82:
                  v38 = OUTLINED_FUNCTION_53_15(v38, 2u, 10, v59);
                  v41 = v40;
                  if (!(_DWORD)v38)
                  {
LABEL_83:
                    v38 = OUTLINED_FUNCTION_11_33();
                    v41 = v40;
                    if (!(_DWORD)v38)
                    {
                      OUTLINED_FUNCTION_7_33(v38, (uint64_t)v70);
                      v41 = v40;
                      if (!(_DWORD)v38)
                        goto LABEL_85;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        v38 = OUTLINED_FUNCTION_54_15(v55, v56, 4);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_52_16(18);
        OUTLINED_FUNCTION_97_6();
        if (!(_DWORD)v38)
        {
          v38 = OUTLINED_FUNCTION_77_10(v38, 2u, 1);
          v41 = v40;
          if (!(_DWORD)v38)
          {
            OUTLINED_FUNCTION_59_14();
            OUTLINED_FUNCTION_154_2();
            v51 = 6;
LABEL_72:
            v50 = v0;
LABEL_73:
            v38 = testFldeq(v50, v48, v49, v51);
            if ((_DWORD)v38)
              v41 = v40;
            else
              v41 = 1;
          }
          continue;
        }
LABEL_44:
        OUTLINED_FUNCTION_178_1(v38, 1, 2, 38, 2);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
LABEL_91:
        v68 = *(_QWORD *)(v0 + 3360);
        *(_QWORD *)(v0 + 1584) = v68;
        *(_QWORD *)(v0 + 1600) = v68;
        OUTLINED_FUNCTION_27_26();
        return 0;
      case 16:
        goto LABEL_42;
      case 18:
      case 26:
      case 30:
        OUTLINED_FUNCTION_38_24();
        goto LABEL_16;
      case 19:
        goto LABEL_43;
      case 21:
        OUTLINED_FUNCTION_98_6();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        goto LABEL_47;
      case 22:
        goto LABEL_80;
      case 23:
        v59 = 24;
        goto LABEL_82;
      case 24:
        goto LABEL_83;
      case 25:
      case 31:
        OUTLINED_FUNCTION_38_24();
        OUTLINED_FUNCTION_59_14();
        v49 = 0;
        v48 = 2;
        v51 = 41;
        goto LABEL_72;
      case 27:
      case 35:
        goto LABEL_17;
      case 28:
LABEL_47:
        OUTLINED_FUNCTION_45_20(v38, 29, (uint64_t)v70);
        v38 = OUTLINED_FUNCTION_53_15(v58, 2u, 6, 1);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_7_33(v38, (uint64_t)v70);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_77_10(v38, 2u, 1);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_59_14();
        v51 = 0;
        v48 = 2;
        v49 = 3;
        goto LABEL_72;
      case 29:
        OUTLINED_FUNCTION_38_24();
        OUTLINED_FUNCTION_59_14();
        OUTLINED_FUNCTION_154_2();
        v51 = 5;
        goto LABEL_72;
      case 32:
        OUTLINED_FUNCTION_38_24();
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_52_16(34);
        OUTLINED_FUNCTION_58_14();
        OUTLINED_FUNCTION_42_20();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v60 = 8;
        v61 = 1;
        v62 = v0;
        goto LABEL_63;
      case 34:
        OUTLINED_FUNCTION_42_20();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        goto LABEL_59;
      case 36:
LABEL_59:
        OUTLINED_FUNCTION_45_20(v38, 37, (uint64_t)v70);
        v38 = OUTLINED_FUNCTION_54_15(v63, v64, 8);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        OUTLINED_FUNCTION_7_33(v38, (uint64_t)v70);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
        v60 = 6;
        v62 = v0;
        v61 = 2;
LABEL_63:
        v38 = testFldeq(v62, 2u, v60, v61);
        v41 = v40;
        if ((_DWORD)v38)
          continue;
LABEL_16:
        v38 = OUTLINED_FUNCTION_11_33();
        v41 = v40;
        if ((_DWORD)v38)
          continue;
LABEL_17:
        OUTLINED_FUNCTION_100_6();
LABEL_18:
        mark_s();
        v41 = v40;
        if (!(_DWORD)v38)
          goto LABEL_44;
        continue;
      case 37:
        v27 = v40;
        goto LABEL_5;
      default:
        goto LABEL_3;
    }
  }
}

uint64_t OUTLINED_FUNCTION_0_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

void OUTLINED_FUNCTION_1_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  insert_2pt_s(v4, 2, 1, a4, 0);
}

uint64_t OUTLINED_FUNCTION_2_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,char a44)
{
  uint64_t v44;

  return lpta_rpta_loadp(v44, (uint64_t)&a44, (uint64_t)&a42);
}

void OUTLINED_FUNCTION_3_34(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

void OUTLINED_FUNCTION_4_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

double OUTLINED_FUNCTION_5_33@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_7_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_8_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  starttest(v2, a2);
}

uint64_t OUTLINED_FUNCTION_9_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;

  *(_QWORD *)(v43 + 112) = a43;
  *(_QWORD *)(v43 + 128) = 0;
  return test_ptr(v43);
}

uint64_t OUTLINED_FUNCTION_10_33(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return lpta_rpta_loadp(v3, a2, a3);
}

BOOL OUTLINED_FUNCTION_11_33()
{
  return advance_tok();
}

uint64_t OUTLINED_FUNCTION_12_33()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  *(_QWORD *)(v1 + 128) = 0;
  return test_ptr(v1);
}

void OUTLINED_FUNCTION_13_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, v10, v9, 4294967290, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_14_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

void OUTLINED_FUNCTION_15_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_16_32(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  a34 = 0;
  a35 = 0;
  a32 = 0;
  a33 = 0;
  bzero(&a9, 0xB8uLL);
}

void OUTLINED_FUNCTION_17_32(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  insert_2pt_s(a1, a2, a3, a4, 0);
}

void OUTLINED_FUNCTION_18_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

double OUTLINED_FUNCTION_19_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v2, a2).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_20_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 2u, 1u, a4);
}

uint64_t OUTLINED_FUNCTION_21_30()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_23_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

void OUTLINED_FUNCTION_24_28()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_25_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  a33 = 0;
  a34 = 0;
  bzero(&a10, 0xB8uLL);
}

void OUTLINED_FUNCTION_26_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, a2, v9, v10, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_27_26()
{
  uint64_t v0;

  vretproc(v0);
}

void OUTLINED_FUNCTION_28_26(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  bzero(va, 0xB8uLL);
}

uint64_t OUTLINED_FUNCTION_29_26()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_30_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

uint64_t OUTLINED_FUNCTION_32_26@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_33_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,char a47,int a48,__int16 a49,char a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,char a56)
{
  uint64_t v56;

  return ventproc(v56, (uint64_t)&a10, (uint64_t)&a54, (uint64_t)&a50, (uint64_t)&a47, (uint64_t)&a56);
}

uint64_t OUTLINED_FUNCTION_34_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 2u, a4);
}

void OUTLINED_FUNCTION_35_25()
{
  uint64_t v0;

  npush_s(v0);
}

uint64_t OUTLINED_FUNCTION_36_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 2u, a4);
}

uint64_t OUTLINED_FUNCTION_37_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

uint64_t OUTLINED_FUNCTION_38_24()
{
  uint64_t v0;

  return bspop_boa(v0);
}

void OUTLINED_FUNCTION_39_22()
{
  uint64_t v0;

  npush_s(v0);
}

uint64_t OUTLINED_FUNCTION_40_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_41_20()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

void OUTLINED_FUNCTION_42_20()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

void *OUTLINED_FUNCTION_43_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return fence_33(v3, 0, a3);
}

BOOL OUTLINED_FUNCTION_44_20()
{
  uint64_t v0;

  return compare_ptas(v0);
}

double OUTLINED_FUNCTION_45_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = savescptr(v3, a2, a3).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_47_19(uint64_t a1, int a2)
{
  _QWORD *v2;

  return vback(v2, a2);
}

uint64_t OUTLINED_FUNCTION_48_18()
{
  int *v0;

  return setjmp(v0);
}

void OUTLINED_FUNCTION_49_17(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

void OUTLINED_FUNCTION_50_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_51_16()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_52_16(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest_l(v1, a1);
}

BOOL OUTLINED_FUNCTION_53_15(uint64_t a1, unsigned int a2, int a3, int a4)
{
  uint64_t v4;

  return testFldeq(v4, a2, a3, a4);
}

BOOL OUTLINED_FUNCTION_54_15(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;

  return testFldeq(v3, 2u, a3, 2);
}

void OUTLINED_FUNCTION_55_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  insert_2pt_s(v5, 2, 1, a4, a5);
}

void OUTLINED_FUNCTION_56_14(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_57_14(uint64_t a1, uint64_t a2)
{
  lpta_loadp_setscan_r(a1, a2);
}

void OUTLINED_FUNCTION_58_14()
{
  uint64_t v0;

  bspush_ca(v0);
}

double OUTLINED_FUNCTION_59_14()
{
  uint64_t v0;

  return bspush_ca_scan_boa(v0);
}

void *OUTLINED_FUNCTION_61_13(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return fence_33(v3, a2, a3);
}

void OUTLINED_FUNCTION_62_12()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t OUTLINED_FUNCTION_63_11()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

uint64_t OUTLINED_FUNCTION_64_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  return lpta_loadpn(v35, &a35);
}

void OUTLINED_FUNCTION_65_11()
{
  uint64_t v0;
  unsigned __int8 *v1;

  settvar_s(v0, v1, 8u);
}

void OUTLINED_FUNCTION_66_11()
{
  get_kor_right_syll_boundary();
}

void OUTLINED_FUNCTION_67_11(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  unsigned __int8 *v4;

  settvar_s(v3, v4, a3);
}

void OUTLINED_FUNCTION_68_11()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_69_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return push_ptr_init(v2, a2);
}

uint64_t OUTLINED_FUNCTION_70_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return lpta_loadpn(v2, a2);
}

void OUTLINED_FUNCTION_71_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_72_11()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_73_11()
{
  uint64_t v0;

  return testeq(v0);
}

uint64_t OUTLINED_FUNCTION_74_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

void OUTLINED_FUNCTION_75_11()
{
  uint64_t v0;
  __int16 *v1;

  insert_lv(v0, 2, v1);
}

uint64_t OUTLINED_FUNCTION_76_11()
{
  uint64_t v0;

  return startloop(v0, 1);
}

BOOL OUTLINED_FUNCTION_77_10(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v3;

  return testFldeq(v3, a2, a3, a3);
}

uint64_t OUTLINED_FUNCTION_78_10()
{
  uint64_t v0;
  uint64_t v1;

  return push_ptr_init(v0, v1);
}

void OUTLINED_FUNCTION_79_10()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_80_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_81_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

void OUTLINED_FUNCTION_82_7()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

void OUTLINED_FUNCTION_83_7(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_84_7()
{
  insert_2ptv();
}

BOOL OUTLINED_FUNCTION_86_7()
{
  uint64_t v0;

  return testneq(v0);
}

uint64_t OUTLINED_FUNCTION_87_7()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

void OUTLINED_FUNCTION_89_7(uint64_t a1, uint64_t a2, __int16 *a3)
{
  insert_lv(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_90_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_91_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return startloop(v2, a2);
}

uint64_t OUTLINED_FUNCTION_92_6()
{
  return 0;
}

void OUTLINED_FUNCTION_93_6()
{
  uint64_t v0;
  unsigned __int8 *v1;

  settvar_s(v0, v1, 0x15u);
}

void OUTLINED_FUNCTION_94_6()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

void OUTLINED_FUNCTION_95_6()
{
  uint64_t v0;

  npush_s(v0);
}

double OUTLINED_FUNCTION_96_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  *(_QWORD *)&result = savescptr(v2, a2, v3).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_97_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_98_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

void OUTLINED_FUNCTION_99_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_100_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

void OUTLINED_FUNCTION_101_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_102_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_103_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_104_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return while_iterate(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_105_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;
  uint64_t v37;

  return lpta_rpta_loadp(v36, v37, (uint64_t)&a36);
}

uint64_t OUTLINED_FUNCTION_107_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_108_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_109_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_110_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_111_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_112_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_114_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_115_6()
{
  uint64_t v0;

  return while_iterate(v0, 13, 14);
}

void OUTLINED_FUNCTION_116_6()
{
  insert_2ptv();
}

BOOL OUTLINED_FUNCTION_117_6()
{
  uint64_t v0;

  return testFldeq(v0, 2u, 2, 0);
}

void OUTLINED_FUNCTION_118_6()
{
  insert_2ptv();
}

uint64_t OUTLINED_FUNCTION_119_5()
{
  uint64_t v0;
  uint64_t *v1;

  return test_string_s(v0, 2u, 1u, v1);
}

uint64_t OUTLINED_FUNCTION_120_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_121_5()
{
  get_kor_right_syll_boundary();
}

void OUTLINED_FUNCTION_122_5()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

uint64_t OUTLINED_FUNCTION_123_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_124_5()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

uint64_t OUTLINED_FUNCTION_125_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return while_iterate(v2, a2, v3);
}

BOOL OUTLINED_FUNCTION_126_5()
{
  uint64_t v0;
  unsigned int v1;
  int v2;

  return testFldeq(v0, v1, v2, v2);
}

BOOL OUTLINED_FUNCTION_127_5()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;

  return testFldeq(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_128_5()
{
  uint64_t v0;
  uint64_t *v1;
  unsigned int v2;

  return test_string_s(v0, v2, v2, v1);
}

void OUTLINED_FUNCTION_129_5()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

void OUTLINED_FUNCTION_130_5()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

uint64_t OUTLINED_FUNCTION_132_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_133_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_134_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_135_3()
{
  get_kor_right_syll_boundary();
}

void OUTLINED_FUNCTION_137_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v42;
  char v43;

  *(_BYTE *)(v42 + 168) = v43;
  *(_QWORD *)(v42 + 144) = a42;
  *(_QWORD *)(v42 + 128) = 0;
}

uint64_t OUTLINED_FUNCTION_138_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_139_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_140_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_142_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_143_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_144_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_145_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_146_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,char a41)
{
  uint64_t v41;

  return lpta_rpta_loadp(v41, (uint64_t)&a41, (uint64_t)&a39);
}

double OUTLINED_FUNCTION_147_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = savescptr(a1, a2, v2).n128_u64[0];
  return result;
}

void *OUTLINED_FUNCTION_150_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return fence_33(v3, 1, a3);
}

uint64_t OUTLINED_FUNCTION_151_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v44;
  uint64_t v45;

  return lpta_rpta_loadp(v44, (uint64_t)&a44, v45);
}

void OUTLINED_FUNCTION_152_2()
{
  kor_find_word_to_palatalize();
}

void OUTLINED_FUNCTION_153_2()
{
  kor_find_word_to_resyllabify();
}

uint64_t OUTLINED_FUNCTION_155_2()
{
  uint64_t v0;

  return v0;
}

double OUTLINED_FUNCTION_157_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  double result;

  *(_QWORD *)&result = savescptr(a1, a2, (uint64_t)&a55).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_158_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_159_2()
{
  uint64_t v0;
  uint64_t v1;

  lpta_storep(v0, v1);
}

uint64_t OUTLINED_FUNCTION_160_1()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

uint64_t OUTLINED_FUNCTION_161_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_162_1()
{
  uint64_t v0;

  npush_s(v0);
}

double OUTLINED_FUNCTION_163_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v14, a14).n128_u64[0];
  return result;
}

double OUTLINED_FUNCTION_164_1()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v0, v1).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_165_1()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

uint64_t OUTLINED_FUNCTION_166_1()
{
  uint64_t v0;
  uint64_t v1;

  return startloop(v0, v1);
}

void OUTLINED_FUNCTION_167_1()
{
  uint64_t v0;

  lpta_mover(v0);
}

void OUTLINED_FUNCTION_168_1()
{
  uint64_t v0;

  npush_s(v0);
}

double OUTLINED_FUNCTION_169_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v12, a12).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_170_1()
{
  uint64_t v0;

  lpta_mover(v0);
}

uint64_t OUTLINED_FUNCTION_171_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_172_1()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

double OUTLINED_FUNCTION_173_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  *(_QWORD *)&result = savescptr(v2, a2, v3).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_174_1(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  unsigned __int8 *v4;

  settvar_s(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_175_1()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

uint64_t OUTLINED_FUNCTION_176_1()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

double OUTLINED_FUNCTION_177_1()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v0, v1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_178_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;

  forto_adv_upto_r(v5, a2, a3, a4, a5, v6);
}

void *fence_34(uint64_t a1, int a2, uint64_t a3)
{
  void *result;
  uint64_t i;

  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = a2;
  result = memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
  for (i = 0; a2 != i; ++i)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 248) + i) = *(_BYTE *)(a3 + i);
    *(_BYTE *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a3 + i)) = i;
  }
  return result;
}

void kor_generate_diaphones()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  unsigned __int16 *v31;
  uint64_t v32;
  unsigned __int16 *v33;
  uint64_t v34;
  unsigned __int16 *v35;
  int v36;
  int v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  uint64_t v58;
  unsigned int v59;
  int v60;
  uint64_t v61;
  _BYTE v62[184];
  _QWORD v63[2];
  _QWORD v64[2];
  _QWORD v65[2];
  _QWORD v66[2];
  char v67[10];
  char v68[9];
  char v69[9];
  char v70[192];
  uint64_t v71;

  OUTLINED_FUNCTION_26_29();
  v71 = *MEMORY[0x24BDAC8D0];
  v66[0] = 0;
  v66[1] = 0;
  v65[0] = 0;
  v65[1] = 0;
  v64[0] = 0;
  v64[1] = 0;
  v63[0] = 0;
  v63[1] = 0;
  bzero(v62, 0xB8uLL);
  OUTLINED_FUNCTION_85_8();
  OUTLINED_FUNCTION_49_18(v3, v4);
  v5 = OUTLINED_FUNCTION_48_19();
  if (!(_DWORD)v5
    && !OUTLINED_FUNCTION_45_21(v5, (uint64_t)v62, (uint64_t)v69, (uint64_t)v68, (uint64_t)v67, (uint64_t)v70))
  {
    OUTLINED_FUNCTION_66_12(v0, (uint64_t)v66, v2, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_66_12(v0, (uint64_t)v65, v1, v11, v12, v13, v14, v15);
    v16 = OUTLINED_FUNCTION_77_11();
    push_ptr_init(v16, v17);
    v18 = OUTLINED_FUNCTION_78_11();
    v20 = push_ptr_init(v18, v19);
    OUTLINED_FUNCTION_38_25(v20, v21, (uint64_t)&_MergedGlobals_1_3);
    *(_WORD *)(v0 + 6042) = 0;
    *(_WORD *)(v0 + 6046) = 0;
    *(_WORD *)(v0 + 6050) = 0;
    fence_34(v0, 1, (uint64_t)&_MergedGlobals_22);
    startloop(v0, 1);
    lpta_loadpn(v0, v66);
    OUTLINED_FUNCTION_83_8();
    OUTLINED_FUNCTION_80_10(v22, v0 + 1640);
    OUTLINED_FUNCTION_76_12();
    OUTLINED_FUNCTION_83_8();
    v23 = OUTLINED_FUNCTION_77_11();
    lpta_storep(v23, v24);
    while (1)
    {
LABEL_6:
      forall_to_test(v0, (unsigned __int16 *)(v0 + 1640), (__int16 *)v64);
      OUTLINED_FUNCTION_73_12();
      if (!v25)
      {
LABEL_9:
        LODWORD(v28) = v27;
        bspush_ca(v0);
        OUTLINED_FUNCTION_70_12();
        if (v25)
        {
LABEL_20:
          v26 = v28;
        }
        else
        {
          OUTLINED_FUNCTION_9_34();
          OUTLINED_FUNCTION_73_12();
          if (!v25)
          {
LABEL_11:
            savescptr(v0, 4, v0 + 1656);
LABEL_12:
            starttest(v0, 5);
            OUTLINED_FUNCTION_70_12();
            if (v29)
            {
LABEL_13:
              startloop(v0, 8);
              v30 = OUTLINED_FUNCTION_77_11();
              copyvar(v30, v31, (__int16 *)(v0 + 1640));
              v32 = OUTLINED_FUNCTION_78_11();
              copyvar(v32, v33, (__int16 *)(v0 + 1656));
LABEL_14:
              while (1)
              {
                v34 = OUTLINED_FUNCTION_77_11();
                forall_to_test(v34, v35, (__int16 *)v63);
                OUTLINED_FUNCTION_73_12();
                if (v25)
                  break;
LABEL_15:
                LODWORD(v28) = v36;
                bspush_ca(v0);
                OUTLINED_FUNCTION_22_30();
                if (v25)
                  goto LABEL_20;
                bspush_ca_scan(v0, 11);
                v25 = OUTLINED_FUNCTION_59_15();
                if (v25)
                  goto LABEL_20;
                v25 = OUTLINED_FUNCTION_9_34();
                v26 = v28;
                v37 = v28;
                if (v25)
                  break;
LABEL_32:
                LODWORD(v28) = v37;
                savescptr(v0, 12, v0 + 1592);
LABEL_33:
                starttest(v0, 17);
                OUTLINED_FUNCTION_22_30();
                if (v47)
                {
LABEL_34:
                  starttest(v0, 20);
                  OUTLINED_FUNCTION_22_30();
                  if (v48)
                  {
LABEL_35:
                    starttest(v0, 22);
                    OUTLINED_FUNCTION_22_30();
                    if (v49)
                    {
LABEL_36:
                      starttest(v0, 19);
                      OUTLINED_FUNCTION_22_30();
                      if (!v50)
                      {
                        v58 = OUTLINED_FUNCTION_68_12();
                        v25 = testFldeq(v58, v59, v60, 2);
                        if (v25)
                          goto LABEL_20;
                        v25 = OUTLINED_FUNCTION_9_34();
                        if (v25)
                          goto LABEL_20;
                        OUTLINED_FUNCTION_53_16();
                        kor_coda_rules();
                      }
                    }
                    else
                    {
                      v55 = OUTLINED_FUNCTION_68_12();
                      v25 = testFldeq(v55, v56, v57, 1);
                      if (v25)
                        goto LABEL_20;
                      v25 = OUTLINED_FUNCTION_9_34();
                      if (v25)
                        goto LABEL_20;
                      OUTLINED_FUNCTION_53_16();
                      kor_onset_rules();
                    }
                  }
                  else
                  {
                    v52 = OUTLINED_FUNCTION_68_12();
                    v25 = testFldeq(v52, v53, v54, v54);
                    if (v25)
                      goto LABEL_20;
                    v25 = OUTLINED_FUNCTION_9_34();
                    if (v25)
                      goto LABEL_20;
                    OUTLINED_FUNCTION_53_16();
                    kor_nucleus_rules();
                  }
                }
                else
                {
                  v25 = OUTLINED_FUNCTION_59_15();
                  if (v25)
                    goto LABEL_20;
                  v25 = OUTLINED_FUNCTION_9_34();
                  if (v25)
                    goto LABEL_20;
                  OUTLINED_FUNCTION_53_16();
                  kor_glide_rules();
                }
LABEL_37:
                forall_cont_from();
              }
            }
            else
            {
              bspush_ca_scan(v0, 6);
              v38 = v0;
              v39 = 2;
LABEL_21:
              testFldeq(v38, 3u, 3, v39);
              OUTLINED_FUNCTION_73_12();
              if (!v25)
              {
LABEL_44:
                LODWORD(v28) = v40;
                v25 = OUTLINED_FUNCTION_9_34();
                v26 = v28;
                if (!v25)
                {
LABEL_45:
                  forto_adv_upto_r(v0, 1, 2, 31, 3, v0 + 1640);
                  v26 = v28;
                  if (!v25)
                  {
LABEL_68:
                    v61 = *(_QWORD *)(v0 + 3360);
                    *(_QWORD *)(v0 + 1584) = v61;
                    *(_QWORD *)(v0 + 1600) = v61;
                    OUTLINED_FUNCTION_33_27();
                    goto LABEL_4;
                  }
                }
              }
            }
          }
        }
      }
      while (2)
      {
        v41 = *(_QWORD *)(v0 + 104);
        if (v41)
        {
          OUTLINED_FUNCTION_55_15(v41);
          v28 = v42;
        }
        else
        {
          OUTLINED_FUNCTION_54_16(v25, v26);
          v28 = 0;
        }
        OUTLINED_FUNCTION_58_15();
        v43 = v28;
        v40 = v28;
        v37 = v28;
        switch(v44)
        {
          case 0:
            goto LABEL_68;
          case 1:
            goto LABEL_12;
          case 2:
            goto LABEL_45;
          case 3:
            goto LABEL_11;
          case 4:
            goto LABEL_13;
          case 5:
            v38 = v0;
            v39 = 3;
            goto LABEL_21;
          case 6:
            goto LABEL_44;
          case 7:
            goto LABEL_27;
          case 8:
            goto LABEL_33;
          case 9:
            forto_adv_r(v0, 8, 9, 26, 1, v0 + 1576);
            v26 = v28;
            if (v25)
              continue;
LABEL_27:
            OUTLINED_FUNCTION_2_35(27);
            bspush_ca_boa(v0);
            v45 = OUTLINED_FUNCTION_44_21();
            lpta_loadp_setscan_l(v45, v0 + 1656);
            if (v25)
              v26 = v28;
            else
              v26 = 1;
            continue;
          case 10:
            OUTLINED_FUNCTION_1_35(13);
            v25 = OUTLINED_FUNCTION_18_32(v46, 1u, 4);
            v26 = v28;
            if (!v25)
            {
              v25 = OUTLINED_FUNCTION_9_34();
              v37 = v28;
              v26 = v28;
              if (!v25)
                goto LABEL_32;
            }
            continue;
          case 11:
          case 14:
            goto LABEL_32;
          case 12:
            v51 = 14;
            goto LABEL_67;
          case 13:
            while (1)
            {
              v25 = OUTLINED_FUNCTION_32_27(v43, 1u, 4, 2);
              if (v25)
                break;
              v25 = OUTLINED_FUNCTION_9_34();
              if (v25)
                break;
              OUTLINED_FUNCTION_1_35(12);
            }
            goto LABEL_20;
          case 15:
            while (1)
            {
              v25 = OUTLINED_FUNCTION_21_31();
              if (v25)
                break;
              v25 = OUTLINED_FUNCTION_9_34();
              if (v25)
                break;
              v51 = 15;
LABEL_67:
              OUTLINED_FUNCTION_1_35(v51);
            }
            goto LABEL_20;
          case 16:
            goto LABEL_34;
          case 17:
          case 18:
          case 20:
          case 22:
          case 23:
            goto LABEL_37;
          case 19:
            goto LABEL_35;
          case 21:
            goto LABEL_36;
          case 24:
            goto LABEL_14;
          case 25:
            v36 = v28;
            goto LABEL_15;
          case 26:
            goto LABEL_61;
          case 27:
            OUTLINED_FUNCTION_37_26();
            OUTLINED_FUNCTION_72_12();
            *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 1664);
            *(_QWORD *)(v0 + 128) = 0;
            proj_def(v0, 2u);
LABEL_61:
            OUTLINED_FUNCTION_76_12();
            rpta_loadpn(v0);
            if (OUTLINED_FUNCTION_69_12() || OUTLINED_FUNCTION_23_30())
              goto LABEL_63;
            goto LABEL_68;
          case 28:
LABEL_63:
            OUTLINED_FUNCTION_75_12();
            forall_cont_from();
            break;
          case 29:
            goto LABEL_6;
          case 30:
            v27 = v28;
            goto LABEL_9;
          default:
            goto LABEL_3;
        }
        break;
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_33_27();
LABEL_4:
  OUTLINED_FUNCTION_52_17();
}

void kor_glide_rules()
{
  uint64_t v0;
  __int16 *v1;
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  int v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int v57;
  uint64_t v58;
  unsigned int v59;
  char v60[184];
  _QWORD v61[2];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66[10];
  char v67[9];
  char v68[9];
  char v69[192];
  uint64_t v70;

  OUTLINED_FUNCTION_26_29();
  v70 = *MEMORY[0x24BDAC8D0];
  v64 = 0;
  v65 = 0;
  v62 = 0;
  v63 = 0;
  v61[0] = 0;
  v61[1] = 0;
  OUTLINED_FUNCTION_43_21(v2);
  OUTLINED_FUNCTION_85_8();
  OUTLINED_FUNCTION_49_18(v3, v4);
  v5 = OUTLINED_FUNCTION_48_19();
  if ((_DWORD)v5)
    goto LABEL_3;
  v6 = OUTLINED_FUNCTION_45_21(v5, (uint64_t)v60, (uint64_t)v68, (uint64_t)v67, (uint64_t)v66, (uint64_t)v69);
  if ((_DWORD)v6)
    goto LABEL_3;
  OUTLINED_FUNCTION_14_33(v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_29_27(v0, (uint64_t)&v62, v1, v14, v15, v16, v17, v18);
  v20 = OUTLINED_FUNCTION_47_20(v19, (uint64_t)v61);
  v21 = 0;
  OUTLINED_FUNCTION_38_25(v20, v22, (uint64_t)&_MergedGlobals_1_3);
  v23 = OUTLINED_FUNCTION_81_10();
  v26 = fence_34(v23, v24, v25);
  OUTLINED_FUNCTION_8_34((uint64_t)v26, 1);
  OUTLINED_FUNCTION_71_12();
  if ((_DWORD)v27)
    goto LABEL_33;
  v27 = OUTLINED_FUNCTION_0_35(v27, v28, v29, (uint64_t *)&unk_257752460);
  if ((_DWORD)v27)
  {
    v21 = 0;
LABEL_33:
    v30 = v21;
    v40 = OUTLINED_FUNCTION_3_35(v27, (uint64_t)&v64, (uint64_t)&v62);
    v43 = &unk_257752463;
LABEL_15:
    OUTLINED_FUNCTION_6_34(v40, v41, v42, (uint64_t)v43);
    v44 = v30;
    if (!(_DWORD)v27)
      goto LABEL_3;
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_8_34(v27, 2);
  lpta_loadp_setscan_l(v0, (uint64_t)&v64);
  if ((_DWORD)v27)
  {
    v30 = 0;
LABEL_9:
    if (*(_WORD *)(v0 + 6042) == 1)
    {
      v31 = OUTLINED_FUNCTION_3_35(v27, (uint64_t)&v64, (uint64_t)&v62);
      OUTLINED_FUNCTION_25_29(v31, v32, v33, (uint64_t)&unk_257752486, 0);
      if (!(_DWORD)v27)
      {
        *(_WORD *)(v0 + 6042) = 0;
        goto LABEL_3;
      }
    }
LABEL_11:
    if (*(_WORD *)(v0 + 6046) == 1)
    {
      v34 = OUTLINED_FUNCTION_3_35(v27, (uint64_t)&v64, (uint64_t)&v62);
      OUTLINED_FUNCTION_25_29(v34, v35, v36, (uint64_t)&unk_257752488, 0);
      if (!v37)
      {
        *(_WORD *)(v0 + 6046) = 0;
        goto LABEL_3;
      }
    }
LABEL_13:
    OUTLINED_FUNCTION_2_35(6);
    OUTLINED_FUNCTION_11_34(v38, (uint64_t)&v64);
    v39 = v30;
    if ((_DWORD)v27)
    {
LABEL_14:
      v40 = OUTLINED_FUNCTION_3_35(v27, (uint64_t)&v64, (uint64_t)&v62);
      v43 = &unk_257752462;
      goto LABEL_15;
    }
LABEL_35:
    OUTLINED_FUNCTION_42_21(v27, 7, (uint64_t)v61);
    OUTLINED_FUNCTION_1_35(8);
    v27 = OUTLINED_FUNCTION_21_31();
    if ((_DWORD)v27)
    {
      v44 = v39;
    }
    else
    {
      OUTLINED_FUNCTION_34_26();
      OUTLINED_FUNCTION_1_35(10);
      v27 = OUTLINED_FUNCTION_32_27(v55, 1u, 0, 24);
      v44 = v39;
      if (!(_DWORD)v27)
LABEL_38:
        v44 = 1;
    }
  }
  else
  {
    if (!OUTLINED_FUNCTION_32_27(v27, 2u, 4, 3) && !OUTLINED_FUNCTION_9_34())
    {
      *(_BYTE *)(v0 + 136) = 1;
      v56 = OUTLINED_FUNCTION_74_12(v63);
      proj_def(v56, v57);
      *(_BYTE *)(v0 + 136) = 1;
      v58 = OUTLINED_FUNCTION_74_12(v65);
      delete_1pt(v58, v59);
      goto LABEL_3;
    }
    v27 = 0;
    v44 = 0;
  }
LABEL_16:
  while (2)
  {
    v45 = *(_QWORD *)(v0 + 104);
    if (v45)
    {
      OUTLINED_FUNCTION_55_15(v45);
      v30 = v46;
    }
    else
    {
      OUTLINED_FUNCTION_54_16(v27, v44);
      v30 = 0;
    }
    OUTLINED_FUNCTION_58_15();
    switch(v47)
    {
      case 0:
        v21 = v30;
        goto LABEL_33;
      case 1:
        goto LABEL_9;
      case 3:
        goto LABEL_11;
      case 4:
        goto LABEL_13;
      case 5:
        goto LABEL_14;
      case 6:
        v39 = v30;
        goto LABEL_35;
      case 7:
        v48 = OUTLINED_FUNCTION_81_10();
        v27 = test_string_s(v48, v49, 2u, (uint64_t *)&unk_25775248A);
        goto LABEL_22;
      case 8:
        OUTLINED_FUNCTION_37_26();
        v27 = OUTLINED_FUNCTION_9_34();
LABEL_22:
        v44 = v30;
        if (!(_DWORD)v27)
          goto LABEL_23;
        continue;
      case 9:
        v52 = OUTLINED_FUNCTION_81_10();
        v27 = testFldeq(v52, v53, v54, 21);
        v44 = v30;
        if (!(_DWORD)v27)
          goto LABEL_38;
        continue;
      case 10:
        goto LABEL_38;
      case 11:
LABEL_23:
        lpta_loadp_setscan_r(v0, (uint64_t)v61);
        v44 = v30;
        if ((_DWORD)v27)
          continue;
        v27 = OUTLINED_FUNCTION_9_34();
        v44 = v30;
        if ((_DWORD)v27)
          continue;
        *(_BYTE *)(v0 + 136) = 1;
        v27 = OUTLINED_FUNCTION_12_34();
        v44 = v30;
        if ((_DWORD)v27)
          continue;
        bspush_ca_scan(v0, 13);
        v50 = v0;
        v51 = (uint64_t *)&unk_25775245E;
LABEL_30:
        v27 = test_string_s(v50, 1u, 1u, v51);
        v44 = v30;
        if ((_DWORD)v27)
          continue;
LABEL_31:
        *(_WORD *)(v0 + 6050) = 1;
        break;
      case 12:
        v50 = v0;
        v51 = (uint64_t *)&unk_257752461;
        goto LABEL_30;
      case 13:
        goto LABEL_31;
      default:
        goto LABEL_3;
    }
    break;
  }
LABEL_3:
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_52_17();
}

void kor_nucleus_rules()
{
  uint64_t v0;
  __int16 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  _BYTE v64[184];
  __int128 v65;
  __int128 v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _BYTE v69[10];
  _BYTE v70[9];
  _BYTE v71[9];
  _BYTE v72[192];
  uint64_t v73;

  OUTLINED_FUNCTION_26_29();
  v73 = *MEMORY[0x24BDAC8D0];
  v68[0] = 0;
  v68[1] = 0;
  v67[0] = 0;
  v67[1] = 0;
  v65 = 0u;
  v66 = 0u;
  OUTLINED_FUNCTION_43_21(v2);
  OUTLINED_FUNCTION_40_21();
  v3 = OUTLINED_FUNCTION_48_19();
  if ((_DWORD)v3)
    goto LABEL_3;
  v4 = OUTLINED_FUNCTION_45_21(v3, (uint64_t)v64, (uint64_t)v71, (uint64_t)v70, (uint64_t)v69, (uint64_t)v72);
  if ((_DWORD)v4)
    goto LABEL_3;
  OUTLINED_FUNCTION_14_33(v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_29_27(v0, (uint64_t)v67, v1, v12, v13, v14, v15, v16);
  v66 = 0uLL;
  LODWORD(v65) = -65534;
  fence_34(v0, 0, (uint64_t)&_MergedGlobals_1_3);
  OUTLINED_FUNCTION_64_12();
  if ((_DWORD)v17 || (v17 = OUTLINED_FUNCTION_0_35(v17, v18, v19, (uint64_t *)&unk_25775245A), (_DWORD)v17))
  {
LABEL_16:
    OUTLINED_FUNCTION_5_34(v17, (uint64_t)v68);
    if ((_DWORD)v26 || (v17 = OUTLINED_FUNCTION_0_35(v26, v27, v28, (uint64_t *)&_MergedGlobals_22), (_DWORD)v17))
    {
LABEL_18:
      if (*(_WORD *)(v0 + 6050) == 1)
      {
        OUTLINED_FUNCTION_2_35(16);
        OUTLINED_FUNCTION_5_34(v29, (uint64_t)v68);
        if ((_DWORD)v17 || (v17 = OUTLINED_FUNCTION_0_35(v17, v30, v31, (uint64_t *)&unk_25775245E), (_DWORD)v17))
        {
LABEL_21:
          v32 = OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
          v34 = 33;
        }
        else
        {
          v32 = OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
          v34 = 32;
        }
        OUTLINED_FUNCTION_63_12(v32, v33, v34);
        OUTLINED_FUNCTION_62_13();
        WORD1(v65) = 12;
        OUTLINED_FUNCTION_20_32(v35, v36, v37, v38, v39, v40, v41, v42);
        OUTLINED_FUNCTION_81_10();
        insert_2ptv();
        if (!(_DWORD)v17)
        {
LABEL_23:
          *(_WORD *)(v0 + 6050) = 0;
          goto LABEL_3;
        }
        goto LABEL_12;
      }
    }
    else
    {
      if (*(_WORD *)(v0 + 6042) == 1)
      {
        v57 = OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
        OUTLINED_FUNCTION_25_29(v57, v58, v59, (uint64_t)&unk_257752482, 0);
        if (!(_DWORD)v17)
        {
          *(_WORD *)(v0 + 6042) = 0;
          goto LABEL_3;
        }
      }
LABEL_41:
      if (*(_WORD *)(v0 + 6046) == 1)
      {
        v60 = OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
        OUTLINED_FUNCTION_25_29(v60, v61, v62, (uint64_t)&unk_257752484, 0);
        if (!v63)
        {
          *(_WORD *)(v0 + 6046) = 0;
          goto LABEL_3;
        }
      }
    }
LABEL_43:
    kor_insert_vowels();
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_2_35(2);
  OUTLINED_FUNCTION_11_34(v20, (uint64_t)v68);
  if ((_DWORD)v17)
  {
LABEL_25:
    OUTLINED_FUNCTION_5_34(v17, (uint64_t)v67);
    if ((_DWORD)v43 || OUTLINED_FUNCTION_0_35(v43, v44, v45, (uint64_t *)&unk_25775245A))
    {
LABEL_27:
      OUTLINED_FUNCTION_2_35(7);
      OUTLINED_FUNCTION_11_34(v46, (uint64_t)v68);
      if ((_DWORD)v17 || (v17 = OUTLINED_FUNCTION_0_35(v17, v47, v48, (uint64_t *)&unk_25775245A), (_DWORD)v17))
      {
LABEL_29:
        OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
        v21 = &unk_257752480;
        v23 = v0;
        v22 = 2;
LABEL_11:
        insert_2pt_s(v23, 2, v22, (uint64_t)v21, 0);
        if (!(_DWORD)v17)
          goto LABEL_3;
        goto LABEL_12;
      }
      OUTLINED_FUNCTION_2_35(8);
      OUTLINED_FUNCTION_11_34(v53, (uint64_t)v68);
      if (!(_DWORD)v17)
      {
        v17 = OUTLINED_FUNCTION_9_34();
        if (!(_DWORD)v17)
        {
          OUTLINED_FUNCTION_72_12();
          v17 = OUTLINED_FUNCTION_12_34();
          if (!(_DWORD)v17)
          {
            v54 = OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
            OUTLINED_FUNCTION_6_34(v54, v55, v56, (uint64_t)&unk_25775245B);
            if (!(_DWORD)v17)
              goto LABEL_3;
          }
        }
      }
LABEL_38:
      OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
      v21 = &unk_25775245D;
LABEL_10:
      v22 = 1;
      v23 = v0;
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_2_35(5);
    OUTLINED_FUNCTION_60_15(v49, (uint64_t)v68);
    OUTLINED_FUNCTION_82_8();
    v17 = OUTLINED_FUNCTION_69_12();
    if (!(_DWORD)v17)
    {
      v17 = OUTLINED_FUNCTION_23_30();
      if (!(_DWORD)v17)
      {
        v50 = OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
        OUTLINED_FUNCTION_6_34(v50, v51, v52, (uint64_t)&unk_25775245C);
        if (!(_DWORD)v17)
          goto LABEL_3;
      }
    }
LABEL_9:
    OUTLINED_FUNCTION_3_35(v17, (uint64_t)v68, (uint64_t)v67);
    v21 = &unk_25775245B;
    goto LABEL_10;
  }
  v17 = OUTLINED_FUNCTION_21_31();
  if (!(_DWORD)v17)
  {
    v17 = OUTLINED_FUNCTION_9_34();
    if (!(_DWORD)v17)
      goto LABEL_9;
  }
LABEL_12:
  v24 = *(_QWORD *)(v0 + 104);
  if (v24)
    OUTLINED_FUNCTION_55_15(v24);
  else
    OUTLINED_FUNCTION_54_16(v17, 0);
  OUTLINED_FUNCTION_58_15();
  switch(v25)
  {
    case 0:
      goto LABEL_16;
    case 1:
      goto LABEL_25;
    case 3:
      goto LABEL_27;
    case 4:
      goto LABEL_9;
    case 6:
      goto LABEL_29;
    case 7:
      goto LABEL_38;
    case 10:
      goto LABEL_18;
    case 11:
      goto LABEL_41;
    case 13:
    case 14:
      goto LABEL_43;
    case 15:
      goto LABEL_21;
    case 16:
      goto LABEL_23;
    default:
      break;
  }
LABEL_3:
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_31_27();
}

uint64_t kor_onset_rules()
{
  _QWORD *v0;
  __int16 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  __int16 *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  unsigned __int8 *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  int v254;
  int v255;
  uint64_t *v256;
  uint64_t v257;
  unsigned int v258;
  unsigned int v259;
  uint64_t *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unsigned int v266;
  unsigned int v267;
  uint64_t *v268;
  uint64_t *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char v278[184];
  _QWORD v279[2];
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  _QWORD v284[2];
  _QWORD v285[2];
  char v286[10];
  char v287[9];
  char v288[9];
  char v289[192];
  uint64_t v290;

  OUTLINED_FUNCTION_26_29();
  v290 = *MEMORY[0x24BDAC8D0];
  v285[0] = 0;
  v285[1] = 0;
  v284[0] = 0;
  v284[1] = 0;
  v282 = 0u;
  v283 = 0u;
  v280 = 0u;
  v281 = 0u;
  v279[0] = 0;
  v279[1] = 0;
  OUTLINED_FUNCTION_43_21(v3);
  OUTLINED_FUNCTION_85_8();
  OUTLINED_FUNCTION_49_18(v4, v5);
  v6 = OUTLINED_FUNCTION_48_19();
  if ((_DWORD)v6)
    goto LABEL_3;
  v7 = OUTLINED_FUNCTION_45_21(v6, (uint64_t)v278, (uint64_t)v288, (uint64_t)v287, (uint64_t)v286, (uint64_t)v289);
  if ((_DWORD)v7)
    goto LABEL_3;
  OUTLINED_FUNCTION_14_33(v7, v8, v9, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_29_27((uint64_t)v0, (uint64_t)v284, v1, v18, v19, v20, v21, v22);
  v283 = 0uLL;
  LODWORD(v282) = -65534;
  v281 = 0uLL;
  LODWORD(v280) = -65534;
  v24 = OUTLINED_FUNCTION_47_20(v23, (uint64_t)v279);
  v25 = 0;
  v27 = OUTLINED_FUNCTION_38_25(v24, v26, (uint64_t)&_MergedGlobals_1_3);
  OUTLINED_FUNCTION_8_34((uint64_t)v27, 1);
  OUTLINED_FUNCTION_71_12();
  if (!(_DWORD)v15)
  {
    OUTLINED_FUNCTION_1_35(2);
    v15 = OUTLINED_FUNCTION_0_35(v87, v88, v89, (uint64_t *)&unk_257752464);
    LODWORD(v43) = 0;
    v90 = 0;
    if (!(_DWORD)v15)
    {
LABEL_50:
      LODWORD(v43) = v90;
      OUTLINED_FUNCTION_34_26();
      v15 = OUTLINED_FUNCTION_21_31();
      if (!(_DWORD)v15)
      {
        v15 = OUTLINED_FUNCTION_9_34();
        if (!(_DWORD)v15)
          LODWORD(v43) = 1;
      }
    }
    goto LABEL_107;
  }
  while (2)
  {
    v28 = v25;
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v29, v30, (uint64_t *)&unk_25775248C);
      if (!(_DWORD)v15)
      {
        v31 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_6_34(v31, v32, v33, (uint64_t)&unk_25775245E);
        if (!(_DWORD)v15)
          goto LABEL_81;
      }
    }
LABEL_9:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v34, v35, (uint64_t *)&unk_25775248E);
      if (!(_DWORD)v15)
      {
        v36 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_6_34(v36, v37, v38, (uint64_t)&unk_257752461);
        if (!(_DWORD)v15)
          goto LABEL_81;
      }
    }
LABEL_12:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if ((_DWORD)v39 || (v42 = OUTLINED_FUNCTION_10_34(v39, v40, v41, (uint64_t *)&unk_257752490), (_DWORD)v42))
    {
      v43 = v28;
    }
    else
    {
      v160 = OUTLINED_FUNCTION_3_35(v42, (uint64_t)v285, (uint64_t)v284);
      OUTLINED_FUNCTION_6_34(v160, v161, v162, (uint64_t)&unk_257752469);
      v43 = v28;
      if (!v163)
        goto LABEL_81;
    }
LABEL_15:
    OUTLINED_FUNCTION_2_35(13);
    OUTLINED_FUNCTION_5_34(v44, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v45, v46, (uint64_t *)&unk_257752492);
      if (!(_DWORD)v15)
      {
        v91 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_79_11(v91, v92, 7u);
        OUTLINED_FUNCTION_46_20();
        v2 = 4;
        WORD1(v282) = 4;
        OUTLINED_FUNCTION_19_32(v93, v94, v95, v96, v97, v98, v99, v100);
        OUTLINED_FUNCTION_46_20();
        WORD1(v282) = 5;
        OUTLINED_FUNCTION_19_32(v101, v102, v103, v104, v105, v106, v107, v108);
        OUTLINED_FUNCTION_46_20();
        WORD1(v282) = 8;
        OUTLINED_FUNCTION_19_32(v109, v110, v111, v112, v113, v114, v115, v116);
        OUTLINED_FUNCTION_39_23();
        WORD1(v282) = 10;
        OUTLINED_FUNCTION_19_32(v117, v118, v119, v120, v121, v122, v123, v124);
        insert_2ptv();
        if ((_DWORD)v15)
          goto LABEL_107;
        OUTLINED_FUNCTION_79_11(v15, v125, 0x15u);
        OUTLINED_FUNCTION_39_23();
        WORD1(v280) = 4;
        OUTLINED_FUNCTION_19_32(v126, v127, v128, v129, v130, v131, v132, v133);
        OUTLINED_FUNCTION_39_23();
        WORD1(v280) = 2;
        OUTLINED_FUNCTION_19_32(v134, v135, v136, v137, v138, v139, v140, v141);
        OUTLINED_FUNCTION_46_20();
        WORD1(v280) = 8;
        OUTLINED_FUNCTION_19_32(v142, v143, v144, v145, v146, v147, v148, v149);
        OUTLINED_FUNCTION_39_23();
        WORD1(v280) = 10;
        OUTLINED_FUNCTION_19_32(v150, v151, v152, v153, v154, v155, v156, v157);
        v158 = (uint64_t)v0;
        v159 = (__int16 *)&v280;
        goto LABEL_63;
      }
    }
    v47 = v43;
LABEL_18:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v48, v49, (uint64_t *)&unk_257752494);
      if (!(_DWORD)v15)
      {
        OUTLINED_FUNCTION_2_35(15);
        OUTLINED_FUNCTION_5_34(v166, (uint64_t)v284);
        if ((_DWORD)v15)
        {
LABEL_60:
          LODWORD(v43) = v47;
          v167 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
          v170 = &unk_25775246B;
        }
        else
        {
          OUTLINED_FUNCTION_1_35(16);
          v15 = OUTLINED_FUNCTION_0_35(v237, v238, v239, (uint64_t *)&_MergedGlobals_22);
          LODWORD(v240) = v47;
          LODWORD(v43) = v47;
          if ((_DWORD)v15)
            goto LABEL_107;
LABEL_73:
          LODWORD(v43) = v240;
          v167 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
          v170 = &unk_25775246A;
        }
        goto LABEL_78;
      }
    }
    v50 = v47;
LABEL_21:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v51, v52, (uint64_t *)&unk_257752498);
      if (!(_DWORD)v15)
      {
        v53 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_6_34(v53, v54, v55, (uint64_t)&unk_25775246C);
        if (!(_DWORD)v15)
          goto LABEL_81;
      }
    }
LABEL_24:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v56, v57, (uint64_t *)&unk_25775249A);
      if (!(_DWORD)v15)
      {
        v58 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_6_34(v58, v59, v60, (uint64_t)&unk_25775246D);
        if (!(_DWORD)v15)
        {
LABEL_81:
          v15 = 0;
          goto LABEL_4;
        }
      }
    }
LABEL_27:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if ((_DWORD)v61 || (v64 = OUTLINED_FUNCTION_10_34(v61, v62, v63, (uint64_t *)&unk_25775249C), (_DWORD)v64))
    {
      v43 = v50;
    }
    else
    {
      v230 = OUTLINED_FUNCTION_3_35(v64, (uint64_t)v285, (uint64_t)v284);
      OUTLINED_FUNCTION_6_34(v230, v231, v232, (uint64_t)&unk_25775246E);
      v43 = v50;
      if (!v233)
        goto LABEL_81;
    }
LABEL_30:
    OUTLINED_FUNCTION_2_35(23);
    OUTLINED_FUNCTION_5_34(v65, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_10_34(v15, v66, v67, (uint64_t *)&unk_25775249E);
      if (!(_DWORD)v15)
      {
        v171 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_63_12(v171, v172, 7u);
        OUTLINED_FUNCTION_62_13();
        v2 = 4;
        WORD1(v280) = 4;
        OUTLINED_FUNCTION_20_32(v173, v174, v175, v176, v177, v178, v179, v180);
        OUTLINED_FUNCTION_62_13();
        WORD1(v280) = 5;
        OUTLINED_FUNCTION_20_32(v181, v182, v183, v184, v185, v186, v187, v188);
        OUTLINED_FUNCTION_39_23();
        WORD1(v280) = 8;
        OUTLINED_FUNCTION_20_32(v189, v190, v191, v192, v193, v194, v195, v196);
        OUTLINED_FUNCTION_39_23();
        WORD1(v280) = 10;
        OUTLINED_FUNCTION_20_32(v197, v198, v199, v200, v201, v202, v203, v204);
        insert_2ptv();
        if ((_DWORD)v15)
          goto LABEL_107;
        OUTLINED_FUNCTION_63_12(v15, v205, 0x14u);
        OUTLINED_FUNCTION_39_23();
        WORD1(v282) = 4;
        OUTLINED_FUNCTION_20_32(v206, v207, v208, v209, v210, v211, v212, v213);
        OUTLINED_FUNCTION_39_23();
        WORD1(v282) = 8;
        OUTLINED_FUNCTION_20_32(v214, v215, v216, v217, v218, v219, v220, v221);
        OUTLINED_FUNCTION_39_23();
        WORD1(v282) = 10;
        OUTLINED_FUNCTION_20_32(v222, v223, v224, v225, v226, v227, v228, v229);
        v158 = (uint64_t)v0;
        v159 = (__int16 *)&v282;
LABEL_63:
        insert_lv(v158, 2, v159);
        goto LABEL_77;
      }
    }
    v68 = v43;
LABEL_33:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_0_35(v15, v69, v70, (uint64_t *)&unk_25775246F);
      if (!(_DWORD)v15)
      {
        OUTLINED_FUNCTION_2_35(25);
        OUTLINED_FUNCTION_16_33(v234, (uint64_t)v285);
        if ((_DWORD)v235)
        {
LABEL_95:
          OUTLINED_FUNCTION_2_35(27);
          OUTLINED_FUNCTION_16_33(v246, (uint64_t)v285);
          if (!(_DWORD)v15)
          {
            v15 = OUTLINED_FUNCTION_17_33(v15, 2u, 1u, (uint64_t *)&unk_257752468);
            if (!(_DWORD)v15)
            {
              v247 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
              OUTLINED_FUNCTION_6_34(v247, v248, v249, (uint64_t)&unk_257752468);
              if (!(_DWORD)v15)
                goto LABEL_81;
            }
          }
LABEL_100:
          v242 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
          v245 = &unk_257752465;
        }
        else
        {
          v15 = OUTLINED_FUNCTION_32_27(v235, 2u, 4, 5);
          if ((_DWORD)v15 || (v15 = OUTLINED_FUNCTION_9_34(), (_DWORD)v15))
          {
            LODWORD(v43) = v68;
            goto LABEL_107;
          }
          v242 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
          v245 = &unk_257752470;
        }
        OUTLINED_FUNCTION_6_34(v242, v243, v244, (uint64_t)v245);
        LODWORD(v43) = v68;
        if ((_DWORD)v15)
          goto LABEL_107;
        goto LABEL_81;
      }
    }
    v71 = v68;
LABEL_36:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_0_35(v15, v72, v73, (uint64_t *)&unk_257752471);
      if (!(_DWORD)v15)
      {
        OUTLINED_FUNCTION_2_35(29);
        OUTLINED_FUNCTION_16_33(v236, (uint64_t)v285);
        if (!(_DWORD)v15)
        {
          OUTLINED_FUNCTION_34_26();
LABEL_103:
          v164 = (unsigned __int8 *)&unk_25775245F;
          v165 = 31;
          goto LABEL_104;
        }
LABEL_149:
        LODWORD(v43) = v71;
        v167 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        v170 = &unk_257752470;
LABEL_78:
        OUTLINED_FUNCTION_6_34(v167, v168, v169, (uint64_t)v170);
        if ((_DWORD)v15)
          goto LABEL_107;
        goto LABEL_81;
      }
    }
    v74 = v71;
LABEL_39:
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v15)
    {
      v15 = OUTLINED_FUNCTION_0_35(v15, v75, v76, (uint64_t *)&unk_257752472);
      if (!(_DWORD)v15)
      {
        v77 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
        OUTLINED_FUNCTION_6_34(v77, v78, v79, (uint64_t)&unk_257752464);
        if (!(_DWORD)v15)
          goto LABEL_81;
      }
    }
LABEL_42:
    LODWORD(v71) = v74;
    OUTLINED_FUNCTION_5_34(v15, (uint64_t)v285);
    if (!(_DWORD)v80 && !OUTLINED_FUNCTION_0_35(v80, v81, v82, (uint64_t *)&unk_257752473))
    {
      OUTLINED_FUNCTION_2_35(35);
      OUTLINED_FUNCTION_11_34(v83, (uint64_t)v285);
      v2 = v74;
      if ((_DWORD)v15)
      {
LABEL_45:
        OUTLINED_FUNCTION_2_35(44);
        OUTLINED_FUNCTION_16_33(v84, (uint64_t)v285);
        if (v85)
        {
LABEL_46:
          OUTLINED_FUNCTION_2_35(51);
          OUTLINED_FUNCTION_56_15();
          OUTLINED_FUNCTION_16_33(v86, (uint64_t)v285);
          if ((_DWORD)v15 || (v15 = testFldeq((uint64_t)v0, 2u, 2, 0), (_DWORD)v15))
          {
            LODWORD(v43) = v71;
LABEL_107:
            v250 = v43;
LABEL_108:
            v251 = v0[13];
            if (v251)
            {
              OUTLINED_FUNCTION_84_8(v251);
            }
            else
            {
              OUTLINED_FUNCTION_54_16(v15, v250);
              v2 = 0;
            }
            OUTLINED_FUNCTION_58_15();
            v254 = v253;
            v15 = 0;
            v90 = v2;
            v240 = v2;
            v255 = v2;
            v241 = v2;
            switch(v254)
            {
              case 0:
                v25 = v2;
                continue;
              case 1:
                OUTLINED_FUNCTION_1_35(4);
                v256 = (uint64_t *)&unk_257752465;
                goto LABEL_116;
              case 2:
                goto LABEL_50;
              case 3:
                OUTLINED_FUNCTION_1_35(5);
                v256 = (uint64_t *)&unk_257752466;
                goto LABEL_116;
              case 4:
                OUTLINED_FUNCTION_1_35(6);
                v256 = (uint64_t *)&unk_257752467;
                goto LABEL_116;
              case 5:
                v256 = (uint64_t *)&unk_257752468;
LABEL_116:
                v15 = OUTLINED_FUNCTION_0_35(v15, v252, v240, v256);
                v90 = v2;
                v250 = v2;
                if (!(_DWORD)v15)
                  goto LABEL_50;
                goto LABEL_108;
              case 6:
                OUTLINED_FUNCTION_37_26();
                OUTLINED_FUNCTION_72_12();
                v15 = OUTLINED_FUNCTION_12_34();
                v250 = v2;
                if ((_DWORD)v15)
                  goto LABEL_108;
                OUTLINED_FUNCTION_65_12();
                kor_lenis_obstruents_rules();
                goto LABEL_77;
              case 7:
              case 8:
              case 18:
              case 25:
              case 31:
              case 41:
              case 42:
              case 49:
                goto LABEL_4;
              case 9:
                v28 = v2;
                goto LABEL_9;
              case 10:
                v28 = v2;
                goto LABEL_12;
              case 11:
                v43 = v2;
                goto LABEL_15;
              case 12:
                v47 = v2;
                goto LABEL_18;
              case 13:
                v50 = v2;
                goto LABEL_21;
              case 14:
                LODWORD(v47) = v2;
                goto LABEL_60;
              case 15:
                OUTLINED_FUNCTION_1_35(18);
                v257 = OUTLINED_FUNCTION_51_17();
                goto LABEL_122;
              case 16:
                goto LABEL_73;
              case 17:
                v257 = OUTLINED_FUNCTION_44_21();
LABEL_122:
                v15 = test_string_s(v257, v258, v259, v260);
                LODWORD(v240) = v2;
                v250 = v2;
                if (!(_DWORD)v15)
                  goto LABEL_73;
                goto LABEL_108;
              case 19:
                v50 = v2;
                goto LABEL_24;
              case 20:
                v50 = v2;
                goto LABEL_27;
              case 21:
                v43 = v2;
                goto LABEL_30;
              case 22:
                v68 = v2;
                goto LABEL_33;
              case 23:
                v71 = v2;
                goto LABEL_36;
              case 24:
                LODWORD(v68) = v2;
                goto LABEL_95;
              case 26:
                LODWORD(v68) = v2;
                goto LABEL_100;
              case 27:
                v74 = v2;
                goto LABEL_39;
              case 28:
                LODWORD(v71) = v2;
                goto LABEL_149;
              case 29:
                v261 = OUTLINED_FUNCTION_37_26();
                v15 = OUTLINED_FUNCTION_17_33(v261, 2u, 1u, (uint64_t *)&unk_257752468);
                v250 = v2;
                if ((_DWORD)v15)
                  goto LABEL_108;
                v262 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
                OUTLINED_FUNCTION_6_34(v262, v263, v264, (uint64_t)&unk_257752468);
                v250 = v2;
                if ((_DWORD)v15)
                  goto LABEL_108;
                v15 = 0;
                goto LABEL_4;
              case 30:
                LODWORD(v71) = v2;
                goto LABEL_103;
              case 32:
                v74 = v2;
                goto LABEL_42;
              case 34:
                LODWORD(v71) = v2;
                goto LABEL_45;
              case 35:
                goto LABEL_141;
              case 36:
                OUTLINED_FUNCTION_1_35(39);
                v265 = OUTLINED_FUNCTION_51_17();
                goto LABEL_129;
              case 37:
                goto LABEL_142;
              case 38:
                v265 = OUTLINED_FUNCTION_44_21();
LABEL_129:
                v15 = test_string_s(v265, v266, v267, v268);
                v255 = v2;
                v250 = v2;
                if (!(_DWORD)v15)
                  goto LABEL_142;
                goto LABEL_108;
              case 39:
                v15 = OUTLINED_FUNCTION_0_35(0, v252, v2, (uint64_t *)&unk_257752460);
                v250 = v2;
                if (!(_DWORD)v15)
                  goto LABEL_145;
                goto LABEL_108;
              case 40:
                goto LABEL_145;
              case 43:
                LODWORD(v71) = v2;
                goto LABEL_46;
              case 44:
                OUTLINED_FUNCTION_37_26();
                OUTLINED_FUNCTION_1_35(47);
                v269 = (uint64_t *)&_MergedGlobals_22;
                goto LABEL_136;
              case 45:
                LODWORD(v71) = v2;
                goto LABEL_58;
              case 46:
                OUTLINED_FUNCTION_1_35(49);
                v269 = (uint64_t *)&unk_257752476;
                goto LABEL_136;
              case 47:
                goto LABEL_146;
              case 48:
                v269 = (uint64_t *)&unk_257752477;
LABEL_136:
                v15 = OUTLINED_FUNCTION_17_33(v15, 2u, 1u, v269);
                v250 = v2;
                if ((_DWORD)v15)
                  goto LABEL_108;
LABEL_146:
                OUTLINED_FUNCTION_65_12();
                kor_aspirate();
                break;
              case 51:
                lpta_loadpn(v0, v0 + 165);
                OUTLINED_FUNCTION_82_8();
                v15 = OUTLINED_FUNCTION_69_12();
                v250 = v2;
                if (!(_DWORD)v15)
                {
                  v15 = OUTLINED_FUNCTION_23_30();
                  v241 = v2;
                  v250 = v2;
                  if (!(_DWORD)v15)
                    goto LABEL_140;
                }
                goto LABEL_108;
              case 52:
                goto LABEL_140;
              default:
                goto LABEL_3;
            }
            goto LABEL_77;
          }
          v15 = OUTLINED_FUNCTION_9_34();
          LODWORD(v43) = v71;
          v241 = v71;
          if ((_DWORD)v15)
            goto LABEL_107;
LABEL_140:
          LODWORD(v43) = v241;
          v167 = OUTLINED_FUNCTION_3_35(v15, (uint64_t)v285, (uint64_t)v284);
          v170 = &unk_257752460;
          goto LABEL_78;
        }
        OUTLINED_FUNCTION_34_26();
LABEL_58:
        v164 = (unsigned __int8 *)&unk_25775246D;
        v165 = 46;
LABEL_104:
        test_synch(v0, v165, 1u, v164);
        if ((_DWORD)v15)
          LODWORD(v43) = v71;
        else
          LODWORD(v43) = 1;
        goto LABEL_107;
      }
LABEL_141:
      OUTLINED_FUNCTION_42_21(v15, 36, (uint64_t)v279);
      OUTLINED_FUNCTION_1_35(37);
      v15 = OUTLINED_FUNCTION_0_35(v270, v271, v272, (uint64_t *)&unk_257752474);
      LODWORD(v43) = v2;
      v255 = v2;
      if ((_DWORD)v15)
        goto LABEL_107;
LABEL_142:
      LODWORD(v43) = v255;
      OUTLINED_FUNCTION_5_34(v15, (uint64_t)v279);
      if ((_DWORD)v15)
        goto LABEL_107;
      v15 = OUTLINED_FUNCTION_0_35(v15, v273, v274, (uint64_t *)&unk_257752473);
      if ((_DWORD)v15)
        goto LABEL_107;
      OUTLINED_FUNCTION_1_35(40);
      v15 = OUTLINED_FUNCTION_0_35(v275, v276, v277, (uint64_t *)&_MergedGlobals_22);
      if ((_DWORD)v15)
        goto LABEL_107;
LABEL_145:
      OUTLINED_FUNCTION_65_12();
      kor_palatalize();
LABEL_77:
      v15 = 0;
      goto LABEL_4;
    }
    break;
  }
LABEL_3:
  v15 = 94;
LABEL_4:
  v16 = v15;
  OUTLINED_FUNCTION_33_27();
  return v16;
}

void kor_coda_rules()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t *v123;
  unsigned int v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  unsigned int v129;
  uint64_t *v130;
  uint64_t *v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155[23];
  uint64_t v156[2];
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[2];
  _BYTE v160[10];
  _BYTE v161[9];
  _BYTE v162[9];
  _BYTE v163[192];
  uint64_t v164;

  OUTLINED_FUNCTION_26_29();
  v164 = *MEMORY[0x24BDAC8D0];
  v159[0] = 0;
  v159[1] = 0;
  OUTLINED_FUNCTION_27_27(v3, v4, v5, v6, v7, v8, v9, v10, v155[0], v155[1], v155[2], v155[3], v155[4], v155[5], v155[6], v155[7], v155[8], v155[9], v155[10],
    v155[11],
    v155[12],
    v155[13],
    v155[14],
    v155[15],
    v155[16],
    v155[17],
    v155[18],
    v155[19],
    v155[20],
    v155[21],
    v155[22],
    v156[0],
    v156[1],
    v157,
    v158);
  OUTLINED_FUNCTION_40_21();
  v11 = OUTLINED_FUNCTION_48_19();
  if (!(_DWORD)v11
    && !OUTLINED_FUNCTION_45_21(v11, (uint64_t)v155, (uint64_t)v162, (uint64_t)v161, (uint64_t)v160, (uint64_t)v163))
  {
    OUTLINED_FUNCTION_66_12(v0, (uint64_t)v159, v2, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_66_12(v0, (uint64_t)&v157, (__int16 *)v1, v17, v18, v19, v20, v21);
    v23 = OUTLINED_FUNCTION_47_20(v22, (uint64_t)v156);
    v24 = 0;
    v26 = OUTLINED_FUNCTION_38_25(v23, v25, (uint64_t)&_MergedGlobals_1_3);
    v27 = 1;
    OUTLINED_FUNCTION_8_34((uint64_t)v26, 1);
    v28 = OUTLINED_FUNCTION_78_11();
    lpta_loadp_setscan_r(v28, v29);
    if (v30)
    {
LABEL_5:
      OUTLINED_FUNCTION_2_35(26);
      OUTLINED_FUNCTION_11_34(v31, (uint64_t)&v157);
      v27 = v24;
      v33 = v24;
      if (!(_DWORD)v32)
      {
LABEL_6:
        OUTLINED_FUNCTION_42_21(v32, 27, (uint64_t)v156);
        OUTLINED_FUNCTION_1_35(28);
        v32 = OUTLINED_FUNCTION_0_35(v34, v35, v36, (uint64_t *)&unk_257752479);
        LODWORD(v37) = v27;
        v33 = v27;
        if (!(_DWORD)v32)
        {
LABEL_7:
          v33 = v37;
          OUTLINED_FUNCTION_5_34(v32, (uint64_t)v156);
          if (!(_DWORD)v32)
          {
            v32 = OUTLINED_FUNCTION_0_35(v32, v38, v39, (uint64_t *)&unk_257752473);
            if (!(_DWORD)v32)
            {
              OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
              if ((_DWORD)v32
                || (v32 = OUTLINED_FUNCTION_0_35(v32, v40, v41, (uint64_t *)&unk_257752479), (_DWORD)v32)
                || (v42 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157),
                    OUTLINED_FUNCTION_4_34(v42, v43, v44, (uint64_t)&unk_257752464, 0),
                    (_DWORD)v32))
              {
LABEL_12:
                OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
                if ((_DWORD)v32
                  || (v32 = OUTLINED_FUNCTION_0_35(v32, v45, v46, (uint64_t *)&unk_25775247A), (_DWORD)v32)
                  || (v47 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157),
                      OUTLINED_FUNCTION_4_34(v47, v48, v49, (uint64_t)&unk_257752470, 0),
                      (_DWORD)v32))
                {
LABEL_15:
                  OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
                  if ((_DWORD)v32
                    || (v32 = OUTLINED_FUNCTION_10_34(v32, v50, v51, (uint64_t *)&unk_25775248A), (_DWORD)v32)
                    || (v52 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157),
                        OUTLINED_FUNCTION_4_34(v52, v53, v54, (uint64_t)&unk_25775246F, 0),
                        (_DWORD)v32))
                  {
LABEL_18:
                    OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
                    if (!(_DWORD)v55)
                    {
                      v58 = OUTLINED_FUNCTION_0_35(v55, v56, v57, (uint64_t *)&unk_257752478);
                      if (!(_DWORD)v58)
                      {
                        v59 = OUTLINED_FUNCTION_3_35(v58, (uint64_t)v159, (uint64_t)&v157);
                        OUTLINED_FUNCTION_4_34(v59, v60, v61, (uint64_t)&unk_257752465, 0);
                      }
                    }
                  }
                }
              }
              goto LABEL_124;
            }
          }
        }
        goto LABEL_52;
      }
LABEL_47:
      OUTLINED_FUNCTION_2_35(36);
      OUTLINED_FUNCTION_56_15();
      OUTLINED_FUNCTION_5_34(v93, (uint64_t)v159);
      if ((_DWORD)v32)
        goto LABEL_52;
      OUTLINED_FUNCTION_1_35(38);
      v32 = OUTLINED_FUNCTION_0_35(v94, v95, v96, (uint64_t *)&unk_257752478);
      v97 = v33;
      if ((_DWORD)v32)
        goto LABEL_52;
LABEL_49:
      v33 = v97;
      OUTLINED_FUNCTION_72_12();
      v32 = OUTLINED_FUNCTION_12_34();
      if ((_DWORD)v32)
        goto LABEL_52;
      OUTLINED_FUNCTION_1_35(41);
      v32 = OUTLINED_FUNCTION_0_35(v98, v99, v100, (uint64_t *)&unk_257752472);
      v101 = v33;
      if ((_DWORD)v32)
        goto LABEL_52;
LABEL_51:
      v33 = v101;
      v102 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157);
      OUTLINED_FUNCTION_4_34(v102, v103, v104, (uint64_t)&unk_257752468, 0);
      if ((_DWORD)v32)
        goto LABEL_52;
LABEL_124:
      *(_QWORD *)(v1 + 8) = v158;
      goto LABEL_3;
    }
    OUTLINED_FUNCTION_1_35(2);
    v32 = OUTLINED_FUNCTION_18_32(v62, 1u, 4);
    v33 = 0;
    v63 = 0;
    if ((_DWORD)v32)
      goto LABEL_52;
    while (2)
    {
      v33 = v63;
      v32 = OUTLINED_FUNCTION_9_34();
      if ((_DWORD)v32)
      {
LABEL_52:
        LODWORD(v105) = v33;
LABEL_53:
        v106 = *(_QWORD *)(v0 + 104);
        if (v106)
        {
          OUTLINED_FUNCTION_84_8(v106);
        }
        else
        {
          OUTLINED_FUNCTION_54_16(v32, v105);
          v27 = 0;
        }
        OUTLINED_FUNCTION_58_15();
        v63 = v27;
        v37 = v27;
        v97 = v27;
        v101 = v27;
        switch(v107)
        {
          case 0:
            v24 = v27;
            goto LABEL_5;
          case 1:
            v32 = OUTLINED_FUNCTION_32_27(v32, 1u, 4, 3);
            v63 = v27;
            LODWORD(v105) = v27;
            if (!(_DWORD)v32)
              continue;
            goto LABEL_53;
          case 2:
            continue;
          case 3:
            goto LABEL_25;
          case 4:
          case 15:
            goto LABEL_29;
          case 5:
          case 8:
          case 14:
          case 16:
          case 19:
            goto LABEL_30;
          case 6:
          case 7:
          case 13:
          case 17:
          case 18:
          case 24:
          case 32:
          case 49:
          case 50:
          case 64:
            goto LABEL_124;
          case 9:
          case 20:
            goto LABEL_34;
          case 10:
          case 21:
            goto LABEL_41;
          case 11:
          case 22:
            goto LABEL_37;
          case 12:
          case 23:
            goto LABEL_40;
          case 25:
            v33 = v27;
            goto LABEL_47;
          case 26:
            goto LABEL_6;
          case 27:
            OUTLINED_FUNCTION_1_35(30);
            goto LABEL_61;
          case 28:
            goto LABEL_7;
          case 29:
            OUTLINED_FUNCTION_1_35(31);
            v108 = OUTLINED_FUNCTION_44_21();
            goto LABEL_62;
          case 30:
LABEL_61:
            v108 = OUTLINED_FUNCTION_51_17();
LABEL_62:
            v32 = test_string_s(v108, v109, v110, v111);
            LODWORD(v37) = v27;
            LODWORD(v105) = v27;
            if (!(_DWORD)v32)
              goto LABEL_7;
            goto LABEL_53;
          case 31:
            goto LABEL_12;
          case 33:
            goto LABEL_15;
          case 34:
            goto LABEL_18;
          case 35:
            OUTLINED_FUNCTION_5_34(v32, (uint64_t)&v157);
            if ((_DWORD)v112)
              goto LABEL_66;
            v115 = OUTLINED_FUNCTION_0_35(v112, v113, v114, (uint64_t *)&unk_25775246F);
            if ((_DWORD)v115)
              goto LABEL_66;
            OUTLINED_FUNCTION_5_34(v115, (uint64_t)v159);
            if ((_DWORD)v32)
              goto LABEL_115;
            v32 = OUTLINED_FUNCTION_35_26(v32, v134, v135, (uint64_t *)&unk_25775247A);
            if ((_DWORD)v32)
              goto LABEL_115;
            *(_BYTE *)(v0 + 136) = v33;
            v32 = OUTLINED_FUNCTION_12_34();
            if ((_DWORD)v32)
              goto LABEL_115;
            OUTLINED_FUNCTION_2_35(49);
            OUTLINED_FUNCTION_41_21();
            kor_find_word_to_lateralize();
            if ((_DWORD)v32)
              goto LABEL_111;
            v136 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157);
            OUTLINED_FUNCTION_4_34(v136, v137, v138, (uint64_t)&unk_257752468, 0);
            if ((_DWORD)v32)
              goto LABEL_111;
            goto LABEL_124;
          case 36:
            OUTLINED_FUNCTION_5_34(v32, (uint64_t)v159);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
            v32 = OUTLINED_FUNCTION_57_15(v32, v27, v122, (uint64_t *)&unk_2577524A4);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
            *(_BYTE *)(v0 + 136) = v33;
            v32 = OUTLINED_FUNCTION_12_34();
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
            OUTLINED_FUNCTION_1_35(45);
            goto LABEL_83;
          case 37:
            OUTLINED_FUNCTION_1_35(40);
            v123 = (uint64_t *)&unk_2577524A2;
            v124 = 2;
            goto LABEL_78;
          case 38:
            goto LABEL_49;
          case 39:
            v123 = (uint64_t *)&unk_2577524AA;
            v124 = 3;
LABEL_78:
            v32 = OUTLINED_FUNCTION_17_33(v32, 1u, v124, v123);
            v97 = v27;
            LODWORD(v105) = v27;
            if (!(_DWORD)v32)
              goto LABEL_49;
            goto LABEL_53;
          case 40:
            OUTLINED_FUNCTION_1_35(43);
            v125 = (uint64_t *)&unk_257752471;
            goto LABEL_84;
          case 41:
          case 43:
            goto LABEL_51;
          case 42:
            v125 = (uint64_t *)&unk_25775246F;
            goto LABEL_84;
          case 44:
            v32 = OUTLINED_FUNCTION_0_35(v32, v105, v27, (uint64_t *)&unk_25775247B);
            v105 = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
            goto LABEL_83;
          case 45:
LABEL_83:
            v125 = (uint64_t *)&unk_257752472;
LABEL_84:
            v32 = OUTLINED_FUNCTION_0_35(v32, v105, v37, v125);
            v101 = v27;
            LODWORD(v105) = v27;
            if (!(_DWORD)v32)
              goto LABEL_51;
            goto LABEL_53;
          case 46:
LABEL_66:
            OUTLINED_FUNCTION_2_35(54);
            OUTLINED_FUNCTION_11_34(v116, (uint64_t)&v157);
            if ((_DWORD)v32)
              goto LABEL_67;
            goto LABEL_71;
          case 47:
LABEL_115:
            OUTLINED_FUNCTION_5_34(v32, (uint64_t)v159);
            if ((_DWORD)v32)
              goto LABEL_119;
            v32 = OUTLINED_FUNCTION_35_26(v32, v142, v143, (uint64_t *)&unk_257752479);
            if ((_DWORD)v32)
              goto LABEL_119;
            *(_BYTE *)(v0 + 136) = v33;
            v32 = OUTLINED_FUNCTION_12_34();
            if ((_DWORD)v32)
              goto LABEL_119;
            v144 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157);
            OUTLINED_FUNCTION_4_34(v144, v145, v146, (uint64_t)&unk_257752464, 0);
            if ((_DWORD)v32)
              goto LABEL_119;
            goto LABEL_124;
          case 48:
LABEL_111:
            v139 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157);
            OUTLINED_FUNCTION_4_34(v139, v140, v141, (uint64_t)&unk_257752470, 0);
            goto LABEL_112;
          case 51:
LABEL_119:
            OUTLINED_FUNCTION_5_34(v32, (uint64_t)v159);
            if ((_DWORD)v147)
              goto LABEL_123;
            if (OUTLINED_FUNCTION_57_15(v147, v148, v149, (uint64_t *)&unk_2577524A6))
              goto LABEL_123;
            *(_BYTE *)(v0 + 136) = v33;
            v150 = OUTLINED_FUNCTION_12_34();
            if ((_DWORD)v150)
              goto LABEL_123;
            v151 = OUTLINED_FUNCTION_3_35(v150, (uint64_t)v159, (uint64_t)&v157);
            OUTLINED_FUNCTION_4_34(v151, v152, v153, (uint64_t)&unk_25775246F, 0);
            if (v154)
              goto LABEL_123;
            goto LABEL_124;
          case 52:
          case 63:
            goto LABEL_123;
          case 53:
LABEL_67:
            OUTLINED_FUNCTION_2_35(66);
            OUTLINED_FUNCTION_5_34(v117, (uint64_t)v159);
            if ((_DWORD)v118)
              goto LABEL_114;
            if (OUTLINED_FUNCTION_35_26(v118, v119, v120, (uint64_t *)&unk_25775247C))
              goto LABEL_114;
            *(_BYTE *)(v0 + 136) = v33;
            if (OUTLINED_FUNCTION_12_34())
              goto LABEL_114;
            OUTLINED_FUNCTION_1_35(67);
            v121 = (uint64_t *)&unk_257752464;
            goto LABEL_101;
          case 54:
LABEL_71:
            OUTLINED_FUNCTION_42_21(v32, 55, (uint64_t)v156);
            OUTLINED_FUNCTION_34_26();
            OUTLINED_FUNCTION_1_35(57);
            goto LABEL_90;
          case 55:
            v126 = OUTLINED_FUNCTION_37_26();
            OUTLINED_FUNCTION_5_34(v126, (uint64_t)v156);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
            OUTLINED_FUNCTION_1_35(61);
            goto LABEL_94;
          case 56:
            OUTLINED_FUNCTION_1_35(59);
            goto LABEL_90;
          case 57:
            goto LABEL_92;
          case 58:
            OUTLINED_FUNCTION_1_35(60);
            v127 = OUTLINED_FUNCTION_44_21();
            goto LABEL_91;
          case 59:
LABEL_90:
            v127 = OUTLINED_FUNCTION_51_17();
LABEL_91:
            v32 = test_string_s(v127, v128, v129, v130);
            LODWORD(v105) = v27;
            if (!(_DWORD)v32)
LABEL_92:
              LODWORD(v105) = 1;
            goto LABEL_53;
          case 60:
            v32 = OUTLINED_FUNCTION_0_35(v32, v105, v27, (uint64_t *)&unk_25775247B);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
            goto LABEL_94;
          case 61:
LABEL_94:
            OUTLINED_FUNCTION_1_35(63);
            v131 = (uint64_t *)&unk_257752472;
            goto LABEL_96;
          case 62:
            v131 = (uint64_t *)&unk_257752471;
LABEL_96:
            v32 = OUTLINED_FUNCTION_0_35(v32, v105, v37, v131);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
LABEL_123:
            OUTLINED_FUNCTION_67_12();
            goto LABEL_124;
          case 65:
LABEL_114:
            OUTLINED_FUNCTION_41_21();
            kor_neutralize();
            goto LABEL_124;
          case 66:
            OUTLINED_FUNCTION_1_35(69);
            v121 = (uint64_t *)&unk_257752465;
            goto LABEL_101;
          case 67:
            goto LABEL_102;
          case 68:
            OUTLINED_FUNCTION_1_35(70);
            v121 = (uint64_t *)&unk_257752466;
            goto LABEL_101;
          case 69:
            v121 = (uint64_t *)&unk_257752467;
LABEL_101:
            v32 = OUTLINED_FUNCTION_0_35(v32, v105, v37, v121);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
LABEL_102:
            OUTLINED_FUNCTION_1_35(71);
            v132 = v0;
            v133 = 4;
LABEL_104:
            v32 = testFldeq(v132, 1u, 4, v133);
            LODWORD(v105) = v27;
            if ((_DWORD)v32)
              goto LABEL_53;
LABEL_105:
            v32 = OUTLINED_FUNCTION_9_34();
LABEL_112:
            LODWORD(v105) = v27;
            if (!(_DWORD)v32)
              goto LABEL_124;
            goto LABEL_53;
          case 70:
            v133 = 3;
            v132 = v0;
            goto LABEL_104;
          case 71:
            goto LABEL_105;
          default:
            goto LABEL_3;
        }
      }
      break;
    }
    OUTLINED_FUNCTION_5_34(v32, (uint64_t)&v157);
    if ((_DWORD)v32 || (v32 = OUTLINED_FUNCTION_0_35(v32, v64, v65, (uint64_t *)&unk_257752460), (_DWORD)v32))
    {
LABEL_25:
      OUTLINED_FUNCTION_5_34(v32, (uint64_t)&v157);
      if ((_DWORD)v66 || (v32 = OUTLINED_FUNCTION_0_35(v66, v67, v68, (uint64_t *)&_MergedGlobals_22), (_DWORD)v32))
      {
LABEL_30:
        OUTLINED_FUNCTION_41_21();
        kor_resyllabify();
        goto LABEL_124;
      }
    }
    OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
    if ((_DWORD)v69 || OUTLINED_FUNCTION_0_35(v69, v70, v71, (uint64_t *)&unk_257752478))
    {
LABEL_29:
      OUTLINED_FUNCTION_41_21();
      kor_find_word_to_insert_n();
      if (!(_DWORD)v72)
      {
        OUTLINED_FUNCTION_11_34(v72, (uint64_t)&v157);
        if ((_DWORD)v32
          || (v32 = OUTLINED_FUNCTION_0_35(v32, v73, v74, (uint64_t *)&unk_257752479), (_DWORD)v32)
          || (v75 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157),
              OUTLINED_FUNCTION_4_34(v75, v76, v77, (uint64_t)&unk_257752464, 0),
              (_DWORD)v32))
        {
LABEL_34:
          OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
          if ((_DWORD)v32
            || (v32 = OUTLINED_FUNCTION_0_35(v32, v78, v79, (uint64_t *)&unk_25775247A), (_DWORD)v32)
            || (v80 = OUTLINED_FUNCTION_3_35(v32, (uint64_t)v159, (uint64_t)&v157),
                OUTLINED_FUNCTION_4_34(v80, v81, v82, (uint64_t)&unk_257752470, 0),
                (_DWORD)v32))
          {
LABEL_37:
            OUTLINED_FUNCTION_11_34(v32, (uint64_t)&v157);
            if ((_DWORD)v83
              || (v86 = OUTLINED_FUNCTION_10_34(v83, v84, v85, (uint64_t *)&unk_25775248A), (_DWORD)v86)
              || (v87 = OUTLINED_FUNCTION_3_35(v86, (uint64_t)v159, (uint64_t)&v157),
                  OUTLINED_FUNCTION_4_34(v87, v88, v89, (uint64_t)&unk_25775246F, 0),
                  v90))
            {
LABEL_40:
              OUTLINED_FUNCTION_67_12();
            }
          }
        }
LABEL_41:
        *(_WORD *)(v0 + 6046) = 1;
        goto LABEL_124;
      }
    }
    else
    {
      OUTLINED_FUNCTION_41_21();
      kor_find_word_to_insert_l();
      if (!(_DWORD)v91)
      {
        OUTLINED_FUNCTION_3_35(v91, (uint64_t)v159, (uint64_t)&v157);
        insert_2pt_s(v0, 2, 1, (uint64_t)&unk_257752468, 0);
        if (!v92)
        {
          *(_WORD *)(v0 + 6042) = 1;
          goto LABEL_124;
        }
      }
    }
    goto LABEL_30;
  }
LABEL_3:
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_31_27();
}

void kor_insert_vowels()
{
  uint64_t v0;
  __int16 *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _BOOL8 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BOOL8 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BOOL8 v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _BOOL8 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136[23];
  uint64_t v137[2];
  uint64_t v138[2];
  _BYTE v139[10];
  _BYTE v140[9];
  _BYTE v141[9];
  _BYTE v142[192];
  uint64_t v143;

  OUTLINED_FUNCTION_26_29();
  v143 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_27_27(v2, v3, v4, v5, v6, v7, v8, v9, v136[0], v136[1], v136[2], v136[3], v136[4], v136[5], v136[6], v136[7], v136[8], v136[9], v136[10],
    v136[11],
    v136[12],
    v136[13],
    v136[14],
    v136[15],
    v136[16],
    v136[17],
    v136[18],
    v136[19],
    v136[20],
    v136[21],
    v136[22],
    v137[0],
    v137[1],
    v138[0],
    v138[1]);
  OUTLINED_FUNCTION_85_8();
  OUTLINED_FUNCTION_49_18(v10, v11);
  v12 = OUTLINED_FUNCTION_48_19();
  if (!(_DWORD)v12)
  {
    v13 = OUTLINED_FUNCTION_45_21(v12, (uint64_t)v136, (uint64_t)v141, (uint64_t)v140, (uint64_t)v139, (uint64_t)v142);
    if (!(_DWORD)v13)
    {
      OUTLINED_FUNCTION_14_33(v13, v14, v15, v16, v17, v18, v19, v20);
      OUTLINED_FUNCTION_29_27(v0, (uint64_t)v137, v1, v21, v22, v23, v24, v25);
      fence_34(v0, 0, (uint64_t)&_MergedGlobals_1_3);
      OUTLINED_FUNCTION_64_12();
      if (!(_DWORD)v26)
      {
        v26 = OUTLINED_FUNCTION_9_34();
        if (!(_DWORD)v26)
          v26 = savetok(v0, (__int16 *)(v0 + 1808));
      }
      OUTLINED_FUNCTION_13_33(v26, v27, v28, v29, v30, v31, v32, v33);
      OUTLINED_FUNCTION_36_26(v34, 3u);
      v35 = OUTLINED_FUNCTION_23_30();
      if (v35
        || (v43 = OUTLINED_FUNCTION_3_35(v35, (uint64_t)v138, (uint64_t)v137),
            OUTLINED_FUNCTION_4_34(v43, v44, v45, (uint64_t)&unk_25775245B, 0),
            v35))
      {
        OUTLINED_FUNCTION_13_33(v35, v36, v37, v38, v39, v40, v41, v42);
        OUTLINED_FUNCTION_36_26(v46, 2u);
        v47 = OUTLINED_FUNCTION_23_30();
        if (v47
          || (v55 = OUTLINED_FUNCTION_3_35(v47, (uint64_t)v138, (uint64_t)v137),
              OUTLINED_FUNCTION_4_34(v55, v56, v57, (uint64_t)&unk_25775245D, 0),
              v47))
        {
          OUTLINED_FUNCTION_13_33(v47, v48, v49, v50, v51, v52, v53, v54);
          OUTLINED_FUNCTION_36_26(v58, 6u);
          v59 = OUTLINED_FUNCTION_23_30();
          if (v59
            || (v67 = OUTLINED_FUNCTION_3_35(v59, (uint64_t)v138, (uint64_t)v137),
                OUTLINED_FUNCTION_4_34(v67, v68, v69, (uint64_t)&unk_257752474, 0),
                v59))
          {
            OUTLINED_FUNCTION_13_33(v59, v60, v61, v62, v63, v64, v65, v66);
            OUTLINED_FUNCTION_36_26(v70, 0xAu);
            v71 = OUTLINED_FUNCTION_23_30();
            if (v71
              || (v79 = OUTLINED_FUNCTION_3_35(v71, (uint64_t)v138, (uint64_t)v137),
                  OUTLINED_FUNCTION_4_34(v79, v80, v81, (uint64_t)&unk_25775245C, 0),
                  v71))
            {
              OUTLINED_FUNCTION_13_33(v71, v72, v73, v74, v75, v76, v77, v78);
              OUTLINED_FUNCTION_36_26(v82, 7u);
              v83 = OUTLINED_FUNCTION_23_30();
              if (v83
                || (v91 = OUTLINED_FUNCTION_3_35(v83, (uint64_t)v138, (uint64_t)v137),
                    OUTLINED_FUNCTION_4_34(v91, v92, v93, (uint64_t)&unk_25775247D, 0),
                    v83))
              {
                OUTLINED_FUNCTION_13_33(v83, v84, v85, v86, v87, v88, v89, v90);
                OUTLINED_FUNCTION_36_26(v94, 1u);
                v95 = OUTLINED_FUNCTION_23_30();
                if (v95
                  || (v103 = OUTLINED_FUNCTION_3_35(v95, (uint64_t)v138, (uint64_t)v137),
                      OUTLINED_FUNCTION_4_34(v103, v104, v105, (uint64_t)&unk_25775247E, 0),
                      v95))
                {
                  OUTLINED_FUNCTION_13_33(v95, v96, v97, v98, v99, v100, v101, v102);
                  OUTLINED_FUNCTION_36_26(v106, 5u);
                  v107 = OUTLINED_FUNCTION_23_30();
                  if (v107
                    || (v115 = OUTLINED_FUNCTION_3_35(v107, (uint64_t)v138, (uint64_t)v137),
                        OUTLINED_FUNCTION_4_34(v115, v116, v117, (uint64_t)&unk_25775247F, 0),
                        v107))
                  {
                    OUTLINED_FUNCTION_13_33(v107, v108, v109, v110, v111, v112, v113, v114);
                    OUTLINED_FUNCTION_36_26(v118, 4u);
                    v119 = OUTLINED_FUNCTION_23_30();
                    if (v119
                      || (v127 = OUTLINED_FUNCTION_3_35(v119, (uint64_t)v138, (uint64_t)v137),
                          OUTLINED_FUNCTION_4_34(v127, v128, v129, (uint64_t)&unk_257752478, 0),
                          v119))
                    {
                      OUTLINED_FUNCTION_13_33(v119, v120, v121, v122, v123, v124, v125, v126);
                      OUTLINED_FUNCTION_36_26(v130, 9u);
                      v131 = OUTLINED_FUNCTION_23_30();
                      if (!v131)
                      {
                        v132 = OUTLINED_FUNCTION_3_35(v131, (uint64_t)v138, (uint64_t)v137);
                        OUTLINED_FUNCTION_25_29(v132, v133, v134, (uint64_t)&unk_2577524A8, 0);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      kor_lengthen_vowel();
      if (!(_DWORD)v135)
      {
        OUTLINED_FUNCTION_3_35(v135, (uint64_t)v138, (uint64_t)v137);
        mark_s();
      }
    }
  }
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_31_27();
}

void kor_create_syllables()
{
  uint64_t v0;
  __int16 *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[2];
  _QWORD v115[2];
  _QWORD v116[2];
  _QWORD v117[2];
  char v118[10];
  char v119[9];
  char v120[9];
  char v121[192];
  uint64_t v122;

  OUTLINED_FUNCTION_26_29();
  v122 = *MEMORY[0x24BDAC8D0];
  v117[0] = 0;
  v117[1] = 0;
  v116[0] = 0;
  v116[1] = 0;
  v115[0] = 0;
  v115[1] = 0;
  v114[0] = 0;
  v114[1] = 0;
  OUTLINED_FUNCTION_27_27(v2, v3, v4, v5, v6, v7, v8, v9, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113);
  OUTLINED_FUNCTION_40_21();
  v10 = OUTLINED_FUNCTION_48_19();
  if (!(_DWORD)v10)
  {
    v11 = OUTLINED_FUNCTION_45_21(v10, (uint64_t)&v87, (uint64_t)v120, (uint64_t)v119, (uint64_t)v118, (uint64_t)v121);
    if (!(_DWORD)v11)
    {
      OUTLINED_FUNCTION_14_33(v11, v12, v13, v14, v15, v16, v17, v18);
      OUTLINED_FUNCTION_29_27(v0, (uint64_t)v116, v1, v19, v20, v21, v22, v23);
      v25 = OUTLINED_FUNCTION_47_20(v24, (uint64_t)v115);
      v26 = OUTLINED_FUNCTION_47_20(v25, (uint64_t)v114);
      v27 = OUTLINED_FUNCTION_47_20(v26, (uint64_t)&v112);
      v28 = OUTLINED_FUNCTION_47_20(v27, (uint64_t)&v110);
      OUTLINED_FUNCTION_38_25(v28, v29, (uint64_t)&_MergedGlobals_1_3);
      lpta_rpta_loadp(v0, (uint64_t)v117, (uint64_t)v116);
      v30 = delete_2pt(v0, 7, 0);
      v31 = 0;
      if ((_DWORD)v30)
        goto LABEL_29;
      OUTLINED_FUNCTION_75_12();
      v33 = startloop(v0, v32);
      OUTLINED_FUNCTION_60_15(v33, (uint64_t)v117);
      OUTLINED_FUNCTION_61_14();
      OUTLINED_FUNCTION_80_10(v34, (uint64_t)v115);
      OUTLINED_FUNCTION_60_15(v35, (uint64_t)v116);
      OUTLINED_FUNCTION_61_14();
      OUTLINED_FUNCTION_80_10(v36, (uint64_t)&v112);
      for (i = 0; ; i = v84)
      {
LABEL_6:
        v30 = forall_to_test(v0, (unsigned __int16 *)v115, (__int16 *)&v112);
        v31 = i;
        if ((_DWORD)v30)
          goto LABEL_29;
LABEL_7:
        OUTLINED_FUNCTION_56_15();
        OUTLINED_FUNCTION_7_34(v38, (uint64_t)v115);
        v39 = i;
        v31 = i;
        if ((_DWORD)v30)
          goto LABEL_29;
LABEL_8:
        v40 = v39;
        OUTLINED_FUNCTION_1_35(5);
        v30 = OUTLINED_FUNCTION_28_27(v41, 2u, 1);
        if ((_DWORD)v30)
          goto LABEL_28;
        v30 = OUTLINED_FUNCTION_9_34();
        i = v40;
        v31 = v40;
        if ((_DWORD)v30)
          goto LABEL_29;
LABEL_10:
        OUTLINED_FUNCTION_30_27(6, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114[0]);
        while (2)
        {
          OUTLINED_FUNCTION_2_35(7);
          OUTLINED_FUNCTION_7_34(v42, (uint64_t)v114);
          v40 = i;
          if (v43)
          {
LABEL_12:
            OUTLINED_FUNCTION_2_35(11);
            OUTLINED_FUNCTION_60_15(v44, (uint64_t)v114);
            OUTLINED_FUNCTION_82_8();
            if (!OUTLINED_FUNCTION_69_12())
            {
              v30 = OUTLINED_FUNCTION_23_30();
              v45 = i;
              if (!(_DWORD)v30)
                break;
            }
LABEL_14:
            v40 = i;
            OUTLINED_FUNCTION_2_35(12);
            OUTLINED_FUNCTION_7_34(v46, (uint64_t)v114);
            if (!v47)
            {
              OUTLINED_FUNCTION_1_35(13);
              v30 = OUTLINED_FUNCTION_28_27(v51, 2u, 1);
              v52 = i;
              v31 = i;
              if ((_DWORD)v30)
                goto LABEL_29;
LABEL_19:
              v40 = v52;
LABEL_22:
              v30 = OUTLINED_FUNCTION_9_34();
              v45 = v40;
              v31 = v40;
              if ((_DWORD)v30)
                goto LABEL_29;
              break;
            }
LABEL_15:
            OUTLINED_FUNCTION_2_35(15);
            OUTLINED_FUNCTION_7_34(v48, (uint64_t)v114);
            if (!v49)
            {
              OUTLINED_FUNCTION_1_35(16);
              v53 = v40;
LABEL_21:
              v40 = v53;
              OUTLINED_FUNCTION_30_27(17, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104,
                v105,
                v106,
                v107,
                v108,
                v109,
                v110,
                v111,
                v112,
                v113,
                v114[0]);
              v30 = OUTLINED_FUNCTION_32_27(v54, 2u, 4, 3);
              if ((_DWORD)v30)
                goto LABEL_28;
              goto LABEL_22;
            }
LABEL_16:
            OUTLINED_FUNCTION_2_35(10);
            OUTLINED_FUNCTION_7_34(v50, (uint64_t)v114);
            if (!(_DWORD)v30)
            {
              v30 = OUTLINED_FUNCTION_15_33();
              if ((_DWORD)v30)
              {
LABEL_28:
                v31 = v40;
              }
              else
              {
                v30 = OUTLINED_FUNCTION_9_34();
                LODWORD(i) = v40;
                v31 = v40;
                if (!(_DWORD)v30)
                {
LABEL_26:
                  OUTLINED_FUNCTION_30_27(18, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104,
                    v105,
                    v106,
                    v107,
                    v108,
                    v109,
                    v110,
                    v111,
                    v112,
                    v113,
                    v114[0]);
                  v30 = OUTLINED_FUNCTION_15_33();
                  v55 = i;
                  v31 = i;
                  if (!(_DWORD)v30)
                    goto LABEL_75;
                }
              }
LABEL_29:
              v56 = *(_QWORD *)(v0 + 104);
              if (v56)
              {
                OUTLINED_FUNCTION_55_15(v56);
                i = v57;
              }
              else
              {
                OUTLINED_FUNCTION_54_16(v30, v31);
                i = 0;
              }
              OUTLINED_FUNCTION_58_15();
              v39 = i;
              v52 = i;
              v53 = i;
              v45 = i;
              v58 = i;
              switch(v59)
              {
                case 1:
                  continue;
                case 2:
                  OUTLINED_FUNCTION_75_12();
                  forto_adv_upto_r(v0, v60, 2, 28, 2, (uint64_t)v115);
                  v31 = i;
                  if ((_DWORD)v30)
                    goto LABEL_29;
                  goto LABEL_3;
                case 3:
                  goto LABEL_8;
                case 4:
                  v30 = OUTLINED_FUNCTION_9_34();
                  v39 = i;
                  v31 = i;
                  if (!(_DWORD)v30)
                    goto LABEL_8;
                  goto LABEL_29;
                case 5:
                  goto LABEL_10;
                case 6:
                  goto LABEL_12;
                case 7:
                  v40 = i;
                  goto LABEL_52;
                case 8:
                  goto LABEL_55;
                case 9:
                  goto LABEL_56;
                case 10:
                  goto LABEL_14;
                case 11:
                  v40 = i;
                  goto LABEL_15;
                case 12:
                  v30 = OUTLINED_FUNCTION_24_29();
                  v52 = i;
                  v31 = i;
                  if (!(_DWORD)v30)
                    goto LABEL_19;
                  goto LABEL_29;
                case 13:
                  goto LABEL_19;
                case 14:
                  v40 = i;
                  goto LABEL_16;
                case 15:
                  v30 = OUTLINED_FUNCTION_9_34();
                  v53 = i;
                  v31 = i;
                  if (!(_DWORD)v30)
                    goto LABEL_21;
                  goto LABEL_29;
                case 16:
                  goto LABEL_21;
                case 17:
                  goto LABEL_26;
                case 18:
                  OUTLINED_FUNCTION_37_26();
                  v30 = OUTLINED_FUNCTION_9_34();
                  v45 = i;
                  v31 = i;
                  if (!(_DWORD)v30)
                    goto LABEL_56;
                  goto LABEL_29;
                case 19:
                  v40 = i;
                  goto LABEL_58;
                case 20:
                  OUTLINED_FUNCTION_37_26();
                  v30 = OUTLINED_FUNCTION_9_34();
                  v31 = i;
                  if ((_DWORD)v30)
                    goto LABEL_29;
                  v30 = OUTLINED_FUNCTION_15_33();
                  v31 = i;
                  if ((_DWORD)v30)
                    goto LABEL_29;
                  v30 = OUTLINED_FUNCTION_9_34();
                  v31 = i;
                  if ((_DWORD)v30)
                    goto LABEL_29;
                  OUTLINED_FUNCTION_3_35(v30, (uint64_t)v115, (uint64_t)v114);
                  OUTLINED_FUNCTION_50_18();
                  v64 = 4;
                  v65 = v0;
                  goto LABEL_49;
                case 21:
                  goto LABEL_82;
                case 22:
                  v40 = i;
                  goto LABEL_68;
                case 23:
                  v40 = i;
                  goto LABEL_69;
                case 24:
                  OUTLINED_FUNCTION_37_26();
                  v30 = OUTLINED_FUNCTION_9_34();
                  v31 = i;
                  if ((_DWORD)v30)
                    goto LABEL_29;
                  OUTLINED_FUNCTION_3_35(v30, (uint64_t)v115, (uint64_t)v114);
                  v65 = OUTLINED_FUNCTION_44_21();
                  v64 = v62;
LABEL_49:
                  mark_i(v65, v61, v62, v64, v63);
                  v58 = i;
                  v31 = i;
                  if (!(_DWORD)v30)
                    goto LABEL_82;
                  goto LABEL_29;
                case 25:
                  v40 = i;
                  goto LABEL_80;
                case 26:
                  goto LABEL_6;
                case 27:
                  goto LABEL_7;
                default:
                  goto LABEL_3;
              }
            }
            v45 = v40;
          }
          else
          {
LABEL_52:
            v30 = OUTLINED_FUNCTION_15_33();
            if ((_DWORD)v30)
              goto LABEL_28;
            v30 = OUTLINED_FUNCTION_9_34();
            if ((_DWORD)v30)
              goto LABEL_28;
            OUTLINED_FUNCTION_1_35(8);
            OUTLINED_FUNCTION_72_12();
            v30 = OUTLINED_FUNCTION_12_34();
            i = v40;
            v31 = v40;
            if ((_DWORD)v30)
              goto LABEL_29;
LABEL_55:
            OUTLINED_FUNCTION_30_27(9, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, v102, v103, v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110,
              v111,
              v112,
              v113,
              v114[0]);
            v45 = i;
          }
          break;
        }
LABEL_56:
        v40 = v45;
        OUTLINED_FUNCTION_3_35(v30, (uint64_t)v115, (uint64_t)v114);
        v66 = OUTLINED_FUNCTION_44_21();
        insert_2pt_i(v66, v67, v68, v69, v70);
        if ((_DWORD)v30)
          goto LABEL_28;
        OUTLINED_FUNCTION_2_35(20);
        OUTLINED_FUNCTION_7_34(v71, (uint64_t)v115);
        if (!v72)
        {
LABEL_74:
          v30 = OUTLINED_FUNCTION_15_33();
          v55 = v40;
          v31 = v40;
          if (!(_DWORD)v30)
          {
LABEL_75:
            v83 = v55;
            bspush_ca_scan_boa(v0);
            v30 = OUTLINED_FUNCTION_24_29();
            if ((_DWORD)v30)
              v31 = v83;
            else
              v31 = 1;
          }
          goto LABEL_29;
        }
LABEL_58:
        OUTLINED_FUNCTION_2_35(23);
        OUTLINED_FUNCTION_7_34(v73, (uint64_t)v115);
        if (!(_DWORD)v74 && !OUTLINED_FUNCTION_17_33(v74, 2u, 1u, (uint64_t *)&unk_257752460))
        {
          v30 = OUTLINED_FUNCTION_24_29();
          if ((_DWORD)v30)
            goto LABEL_28;
          v30 = OUTLINED_FUNCTION_9_34();
          if ((_DWORD)v30)
            goto LABEL_28;
          OUTLINED_FUNCTION_3_35(v30, (uint64_t)v115, (uint64_t)v114);
          OUTLINED_FUNCTION_50_18();
          v78 = 3;
          goto LABEL_73;
        }
LABEL_68:
        OUTLINED_FUNCTION_2_35(24);
        OUTLINED_FUNCTION_7_34(v79, (uint64_t)v115);
        if (!v80)
          goto LABEL_74;
LABEL_69:
        OUTLINED_FUNCTION_2_35(26);
        OUTLINED_FUNCTION_7_34(v81, (uint64_t)v115);
        if (!(_DWORD)v30)
        {
          v30 = OUTLINED_FUNCTION_24_29();
          if ((_DWORD)v30)
            goto LABEL_28;
          v30 = OUTLINED_FUNCTION_9_34();
          if ((_DWORD)v30)
            goto LABEL_28;
          OUTLINED_FUNCTION_3_35(v30, (uint64_t)v115, (uint64_t)v114);
          OUTLINED_FUNCTION_50_18();
          v78 = 1;
LABEL_73:
          v82 = v0;
          goto LABEL_81;
        }
LABEL_80:
        OUTLINED_FUNCTION_3_35(v30, (uint64_t)v115, (uint64_t)v114);
        v82 = OUTLINED_FUNCTION_44_21();
        v77 = 0;
LABEL_81:
        mark_i(v82, v75, v76, v78, v77);
        v31 = v40;
        v58 = v40;
        if ((_DWORD)v30)
          goto LABEL_29;
LABEL_82:
        v84 = v58;
        OUTLINED_FUNCTION_60_15(v30, (uint64_t)v114);
        OUTLINED_FUNCTION_61_14();
        v85 = OUTLINED_FUNCTION_78_11();
        lpta_storep(v85, v86);
        OUTLINED_FUNCTION_75_12();
        forall_cont_from();
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_33_27();
  OUTLINED_FUNCTION_31_27();
}

uint64_t OUTLINED_FUNCTION_0_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

double OUTLINED_FUNCTION_1_35@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_2_35(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

uint64_t OUTLINED_FUNCTION_3_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return lpta_rpta_loadp(v3, a2, a3);
}

void OUTLINED_FUNCTION_4_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  insert_2pt_s(v5, 2, 1, a4, a5);
}

void OUTLINED_FUNCTION_5_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_6_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  insert_2pt_s(v4, 2, 1, a4, 0);
}

void OUTLINED_FUNCTION_7_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_8_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  starttest(v2, a2);
}

BOOL OUTLINED_FUNCTION_9_34()
{
  return advance_tok();
}

uint64_t OUTLINED_FUNCTION_10_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 2u, a4);
}

void OUTLINED_FUNCTION_11_34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

uint64_t OUTLINED_FUNCTION_12_34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  *(_QWORD *)(v1 + 128) = 0;
  return test_ptr(v1);
}

void OUTLINED_FUNCTION_13_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  *(_WORD *)(v8 + 1810) = 0;
  npush_v(v8, v9, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_14_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, v10, v9, 4294967290, a5, a6, a7, a8);
}

BOOL OUTLINED_FUNCTION_15_33()
{
  uint64_t v0;

  return testFldeq(v0, 2u, 1, 1);
}

void OUTLINED_FUNCTION_16_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

uint64_t OUTLINED_FUNCTION_17_33(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, a2, a3, a4);
}

BOOL OUTLINED_FUNCTION_18_32(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v3;

  return testFldeq(v3, a2, a3, a3);
}

void OUTLINED_FUNCTION_19_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_20_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

BOOL OUTLINED_FUNCTION_21_31()
{
  uint64_t v0;

  return testFldeq(v0, 1u, 4, 1);
}

void OUTLINED_FUNCTION_22_30()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

BOOL OUTLINED_FUNCTION_23_30()
{
  uint64_t v0;

  return testeq(v0);
}

BOOL OUTLINED_FUNCTION_24_29()
{
  uint64_t v0;

  return testFldeq(v0, 2u, 4, 6);
}

void OUTLINED_FUNCTION_25_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  insert_2pt_s(v5, 2, 2, a4, a5);
}

void OUTLINED_FUNCTION_27_27(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  a34 = 0;
  a35 = 0;
  a32 = 0;
  a33 = 0;
  bzero(&a9, 0xB8uLL);
}

BOOL OUTLINED_FUNCTION_28_27(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v3;

  return testFldeq(v3, a2, a3, a2);
}

void OUTLINED_FUNCTION_29_27(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

double OUTLINED_FUNCTION_30_27@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;
  double result;

  *(_QWORD *)&result = savescptr(v29, a1, (uint64_t)&a29).n128_u64[0];
  return result;
}

BOOL OUTLINED_FUNCTION_32_27(uint64_t a1, unsigned int a2, int a3, int a4)
{
  uint64_t v4;

  return testFldeq(v4, a2, a3, a4);
}

void OUTLINED_FUNCTION_33_27()
{
  uint64_t v0;

  vretproc(v0);
}

double OUTLINED_FUNCTION_34_26()
{
  uint64_t v0;

  return bspush_ca_scan_boa(v0);
}

uint64_t OUTLINED_FUNCTION_35_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

void OUTLINED_FUNCTION_36_26(uint64_t a1, unsigned int a2)
{
  uint64_t v2;

  ncompare_s(v2, a2);
}

uint64_t OUTLINED_FUNCTION_37_26()
{
  uint64_t v0;

  return bspop_boa(v0);
}

void *OUTLINED_FUNCTION_38_25(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return fence_34(v3, 0, a3);
}

void OUTLINED_FUNCTION_39_23()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_40_21()
{
  uint64_t v0;

  bzero((void *)(v0 - 248), 0xC0uLL);
}

uint64_t OUTLINED_FUNCTION_41_21()
{
  uint64_t v0;

  return v0;
}

double OUTLINED_FUNCTION_42_21(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = savescptr(v3, a2, a3).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_43_21(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  bzero(va, 0xB8uLL);
}

uint64_t OUTLINED_FUNCTION_44_21()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_45_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_46_20()
{
  uint64_t v0;

  npush_s(v0);
}

uint64_t OUTLINED_FUNCTION_47_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return push_ptr_init(v2, a2);
}

uint64_t OUTLINED_FUNCTION_48_19()
{
  int *v0;

  return setjmp(v0);
}

void OUTLINED_FUNCTION_49_18(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

uint64_t OUTLINED_FUNCTION_51_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_53_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_54_16(uint64_t a1, int a2)
{
  _QWORD *v2;

  return vback(v2, a2);
}

uint64_t OUTLINED_FUNCTION_55_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

void OUTLINED_FUNCTION_56_15()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t OUTLINED_FUNCTION_57_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 2u, a4);
}

BOOL OUTLINED_FUNCTION_59_15()
{
  uint64_t v0;
  unsigned int v1;
  int v2;

  return testFldeq(v0, v1, 4, v2);
}

uint64_t OUTLINED_FUNCTION_60_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return lpta_loadpn(v2, a2);
}

void OUTLINED_FUNCTION_61_14()
{
  uint64_t v0;

  lpta_mover(v0);
}

void OUTLINED_FUNCTION_62_13()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_63_12(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  unsigned __int8 *v4;

  settvar_s(v3, v4, a3);
}

void OUTLINED_FUNCTION_64_12()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_65_12()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_66_12(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_67_12()
{
  kor_insert_nasalized_obstruents();
}

uint64_t OUTLINED_FUNCTION_68_12()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_69_12()
{
  uint64_t v0;

  return compare_ptas(v0);
}

void OUTLINED_FUNCTION_70_12()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_71_12()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_72_12()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 136) = 1;
}

uint64_t OUTLINED_FUNCTION_74_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  *(_QWORD *)(v1 + 128) = 0;
  return v1;
}

uint64_t OUTLINED_FUNCTION_76_12()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

uint64_t OUTLINED_FUNCTION_77_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_78_11()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_79_11(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v3;
  unsigned __int8 *v4;

  settvar_s(v3, v4, a3);
}

void OUTLINED_FUNCTION_80_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_storep(v2, a2);
}

uint64_t OUTLINED_FUNCTION_81_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_8()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

void OUTLINED_FUNCTION_83_8()
{
  uint64_t v0;

  lpta_mover(v0);
}

uint64_t OUTLINED_FUNCTION_84_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

void *fence_35(uint64_t a1, int a2, uint64_t a3)
{
  void *result;
  uint64_t i;

  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = a2;
  result = memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
  for (i = 0; a2 != i; ++i)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 248) + i) = *(_BYTE *)(a3 + i);
    *(_BYTE *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a3 + i)) = i;
  }
  return result;
}

void kor_non_phrasal_comma()
{
  uint64_t v0;
  __int16 *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  size_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _BOOL8 v27;
  uint64_t v28;
  int v29;
  uint64_t v30[23];
  uint64_t v31[2];
  _QWORD v32[2];
  _QWORD v33[2];
  _QWORD v34[2];
  _QWORD v35[2];
  _BYTE v36[10];
  _BYTE v37[9];
  _BYTE v38[9];
  _BYTE v39[192];
  uint64_t v40;

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_96_7();
  v40 = *MEMORY[0x24BDAC8D0];
  v35[0] = 0;
  v35[1] = 0;
  v34[0] = 0;
  v34[1] = 0;
  v33[0] = 0;
  v33[1] = 0;
  v32[0] = 0;
  v32[1] = 0;
  OUTLINED_FUNCTION_0_36(v2, v3, v4, v5, v6, v7, v8, v9, v30[0], v30[1], v30[2], v30[3], v30[4], v30[5], v30[6], v30[7], v30[8], v30[9], v30[10],
    v30[11],
    v30[12],
    v30[13],
    v30[14],
    v30[15],
    v30[16],
    v30[17],
    v30[18],
    v30[19],
    v30[20],
    v30[21],
    v30[22],
    v31[0],
    v31[1]);
  OUTLINED_FUNCTION_69_13();
  bzero(v39, v10);
  v11 = OUTLINED_FUNCTION_82_9();
  if ((_DWORD)v11
    || OUTLINED_FUNCTION_9_35(v11, (uint64_t)v30, (uint64_t)v38, (uint64_t)v37, (uint64_t)v36, (uint64_t)v39))
  {
    goto LABEL_14;
  }
  get_parm(v0, (uint64_t)v35, v1, 4294967290, v12, v13, v14, v15);
  v17 = OUTLINED_FUNCTION_8_35(v16, (uint64_t)v34);
  v18 = OUTLINED_FUNCTION_8_35(v17, (uint64_t)v33);
  v19 = OUTLINED_FUNCTION_8_35(v18, (uint64_t)v32);
  v20 = OUTLINED_FUNCTION_8_35(v19, (uint64_t)v31);
  OUTLINED_FUNCTION_23_31(v20, 0, (uint64_t)&null_str_15);
  OUTLINED_FUNCTION_2_36(1);
  OUTLINED_FUNCTION_129_6();
  if (v21)
    goto LABEL_13;
  while (2)
  {
    savescptr(v0, 2, (uint64_t)v31);
    if (!OUTLINED_FUNCTION_4_35())
    {
LABEL_5:
      v22 = OUTLINED_FUNCTION_79_12();
      savescptr(v22, v23, (uint64_t)v34);
      v24 = OUTLINED_FUNCTION_63_13();
      lpta_loadp_setscan_r(v24, v25);
      if (!v26 && !OUTLINED_FUNCTION_122_6())
      {
LABEL_7:
        savescptr(v0, 4, (uint64_t)v33);
        v27 = OUTLINED_FUNCTION_4_35();
        if (v27)
          goto LABEL_8;
LABEL_12:
        OUTLINED_FUNCTION_80_11(v27, 5, (uint64_t)v32);
LABEL_13:
        kor_misc_non_phrasal_comma();
        break;
      }
    }
LABEL_8:
    v28 = *(_QWORD *)(v0 + 104);
    if (v28)
      OUTLINED_FUNCTION_5_35(v28);
    else
      OUTLINED_FUNCTION_18_33();
    OUTLINED_FUNCTION_99_7();
    switch(v29)
    {
      case 0:
        goto LABEL_13;
      case 1:
        continue;
      case 2:
        goto LABEL_5;
      case 3:
        goto LABEL_7;
      case 4:
        goto LABEL_12;
      default:
        goto LABEL_14;
    }
  }
LABEL_14:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

void kor_misc_non_phrasal_comma()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[23];
  uint64_t v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  _BYTE v33[10];
  _BYTE v34[9];
  _BYTE v35[9];
  _BYTE v36[192];
  uint64_t v37;

  OUTLINED_FUNCTION_50_19();
  v37 = *MEMORY[0x24BDAC8D0];
  v32[0] = 0;
  v32[1] = 0;
  v31[0] = 0;
  v31[1] = 0;
  OUTLINED_FUNCTION_0_36(v4, v5, v6, v7, v8, v9, v10, v11, v29[0], v29[1], v29[2], v29[3], v29[4], v29[5], v29[6], v29[7], v29[8], v29[9], v29[10],
    v29[11],
    v29[12],
    v29[13],
    v29[14],
    v29[15],
    v29[16],
    v29[17],
    v29[18],
    v29[19],
    v29[20],
    v29[21],
    v29[22],
    v30[0],
    v30[1]);
  OUTLINED_FUNCTION_44_22();
  v12 = OUTLINED_FUNCTION_97_7();
  if (!(_DWORD)v12
    && !OUTLINED_FUNCTION_9_35(v12, (uint64_t)v29, (uint64_t)v35, (uint64_t)v34, (uint64_t)v33, (uint64_t)v36))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v32, v3, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v31, v2, v18, v19, v20, v21, v22);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v30, v1, v23, v24, v25, v26, v27);
    OUTLINED_FUNCTION_23_31(v28, 0, (uint64_t)&null_str_15);
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void kor_post_comma_phrase()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];
  char v61[192];
  uint64_t v62;

  OUTLINED_FUNCTION_22_31();
  v62 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v0, v1, v2, v3, v4, v5, v6, v7, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56);
  OUTLINED_FUNCTION_30_28(v8, v9, v10, v11, v12, v13, v14, v15, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    0,
    0,
    v58,
    v59,
    v60[0],
    v60[1],
    v61[0]);
  v16 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v16)
  {
    v17 = OUTLINED_FUNCTION_9_35(v16, (uint64_t)&v32, (uint64_t)v60 + 7, (uint64_t)&v59 + 6, (uint64_t)&v58 + 4, (uint64_t)v61);
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_31_28(v17, (uint64_t)&v57, v18, v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_59_16(v24, (uint64_t)&v55, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_23_31(v31, 0, (uint64_t)&null_str_15);
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_78_12();
}

void find_kor_obligatory_phrase()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 *v38;
  _BOOL8 v39;
  uint64_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int16 *v74;
  char v75[8];
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98[2];
  uint64_t v99[2];
  uint64_t v100[2];
  uint64_t v101[2];
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[10];
  _BYTE v109[9];
  _BYTE v110[9];
  _BYTE v111[192];
  uint64_t v112;

  OUTLINED_FUNCTION_17_34();
  v73 = v1;
  OUTLINED_FUNCTION_22_31();
  v112 = *MEMORY[0x24BDAC8D0];
  v106 = 0;
  v107 = 0;
  v104 = 0;
  v105 = 0;
  v103 = 0;
  v102 = 0;
  OUTLINED_FUNCTION_68_13(v2, v3, v4, v5, v6, v7, v8, v9, v64, v66, v68, v70, v71, v72, v73, v75[0], v76, v77, v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98[0],
    v98[1],
    v99[0],
    v99[1],
    v100[0],
    v100[1],
    v101[0],
    v101[1]);
  OUTLINED_FUNCTION_69_13();
  OUTLINED_FUNCTION_54_17(v10, v11);
  v12 = OUTLINED_FUNCTION_53_17();
  if ((_DWORD)v12)
    goto LABEL_3;
  v13 = OUTLINED_FUNCTION_9_35(v12, (uint64_t)v75, (uint64_t)v110, (uint64_t)v109, (uint64_t)v108, (uint64_t)v111);
  if ((_DWORD)v13)
    goto LABEL_3;
  OUTLINED_FUNCTION_31_28(v13, (uint64_t)&v106, v14, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_59_16(v20, (uint64_t)&v104, v21, v22, v23, v24, v25, v26);
  get_parm((uint64_t)v0, (uint64_t)&v103 + 4, v74, 4294967292, v27, v28, v29, v30);
  LODWORD(v103) = 65532;
  v102 = 65532;
  v32 = OUTLINED_FUNCTION_8_35(v31, (uint64_t)v101);
  v33 = OUTLINED_FUNCTION_8_35(v32, (uint64_t)v100);
  v34 = OUTLINED_FUNCTION_8_35(v33, (uint64_t)v99);
  v35 = OUTLINED_FUNCTION_8_35(v34, (uint64_t)v98);
  OUTLINED_FUNCTION_10_35(v35, v36, (uint64_t)&null_str_15);
  fence_35((uint64_t)v0, 1, (uint64_t)&string_2);
  v0[166] = v107;
  v0[168] = v105;
  starttest_l((uint64_t)v0, 1);
  v37 = OUTLINED_FUNCTION_63_13();
  move_i(v37, v38, 2);
  move_i((uint64_t)v0, (__int16 *)&v102, 2);
  OUTLINED_FUNCTION_63_13();
  set_adjacent_word_ptrs();
  if (v39)
  {
LABEL_8:
    v41 = 0;
    v69 = 9;
    v67 = 10;
    while (2)
    {
      v42 = v0[13];
      if (v42)
        v43 = OUTLINED_FUNCTION_111_7(v42);
      else
        v43 = OUTLINED_FUNCTION_21_32(v39, v41);
      switch((int)v43)
      {
        case 1:
          break;
        case 2:
          v51 = OUTLINED_FUNCTION_88_8();
          lpta_loadpn(v51, v52);
          rpta_loadpn(v0);
          if (!OUTLINED_FUNCTION_48_20() && !OUTLINED_FUNCTION_62_14())
            goto LABEL_3;
          goto LABEL_15;
        case 3:
          v53 = OUTLINED_FUNCTION_88_8();
          goto LABEL_19;
        case 5:
LABEL_15:
          starttest((uint64_t)v0, 6);
          bspush_ca((uint64_t)v0);
          v53 = OUTLINED_FUNCTION_125_6();
          goto LABEL_19;
        case 6:
          OUTLINED_FUNCTION_90_8(v43, v44, v45, v46, v47, v48, v49, v50, v65, v67, v69);
          bspush_ca_boa((uint64_t)v0);
          is_kor_acc_phr();
          goto LABEL_27;
        case 7:
          v53 = (uint64_t)v0;
          v54 = v98;
LABEL_19:
          lpta_loadpn(v53, v54);
          OUTLINED_FUNCTION_117_7();
          v39 = OUTLINED_FUNCTION_48_20();
          v41 = 0;
          if (!v39)
          {
            v39 = OUTLINED_FUNCTION_62_14();
            v41 = 0;
            if (!v39)
              goto LABEL_3;
          }
          continue;
        case 9:
          kor_sentential_adverb();
          if (v55)
            goto LABEL_23;
          goto LABEL_28;
        case 10:
        case 15:
          OUTLINED_FUNCTION_35_27();
          goto LABEL_3;
        case 11:
LABEL_23:
          noun_that_makes_inton_phr();
          if (v56)
            goto LABEL_24;
          goto LABEL_28;
        case 12:
LABEL_28:
          HIWORD(v103) = 1;
          v74[1] = 1;
          OUTLINED_FUNCTION_3_36();
          goto LABEL_4;
        case 13:
LABEL_24:
          OUTLINED_FUNCTION_89_8();
          v57 = OUTLINED_FUNCTION_79_12();
          bspush_ca_boa(v57);
          v58 = OUTLINED_FUNCTION_67_13();
          lpta_loadp_setscan_r(v58, v59);
          v41 = 0;
          if (!v39)
          {
            OUTLINED_FUNCTION_107_7();
            v39 = testFldeq(v60, v61, v62, v63);
            v41 = 0;
            if (!v39)
            {
              v39 = OUTLINED_FUNCTION_4_35();
LABEL_27:
              v41 = !v39;
            }
          }
          continue;
        default:
          goto LABEL_3;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_2_36(2);
  OUTLINED_FUNCTION_39_24();
  OUTLINED_FUNCTION_75_13(v40, (uint64_t)v101);
  OUTLINED_FUNCTION_110_7();
  v39 = OUTLINED_FUNCTION_48_20();
  if (v39)
    goto LABEL_8;
  v39 = OUTLINED_FUNCTION_62_14();
  if (v39)
    goto LABEL_8;
LABEL_3:
  OUTLINED_FUNCTION_3_36();
LABEL_4:
  OUTLINED_FUNCTION_1_36();
}

void is_kor_acc_phr()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int v71;
  int v72;
  uint64_t v73;
  unsigned int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  unsigned int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int16 *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int16 *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD v162[2];
  _BYTE v163[10];
  _BYTE v164[9];
  _BYTE v165[9];
  _BYTE v166[192];
  uint64_t v167;

  OUTLINED_FUNCTION_17_34();
  v5 = v4;
  OUTLINED_FUNCTION_12_35();
  v167 = *MEMORY[0x24BDAC8D0];
  v162[0] = 0;
  v162[1] = 0;
  OUTLINED_FUNCTION_68_13(v6, v7, v8, v9, v10, v11, v12, v13, v117, v119, v121, v123, v125, v127, v129, v131, v132, v133, v134,
    v135,
    v136,
    v137,
    v138,
    v139,
    v140,
    v141,
    v142,
    v143,
    v144,
    v145,
    v146,
    v147,
    v148,
    v149,
    v150,
    v151,
    v152,
    v153,
    v154,
    v155,
    v156,
    v157,
    v158,
    v159,
    v160,
    v161);
  OUTLINED_FUNCTION_69_13();
  bzero(v166, v14);
  v15 = OUTLINED_FUNCTION_83_9();
  if ((_DWORD)v15
    || OUTLINED_FUNCTION_9_35(v15, (uint64_t)&v131, (uint64_t)v165, (uint64_t)v164, (uint64_t)v163, (uint64_t)v166))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_11_35(v0, (uint64_t)v162, v3, v16, v17, v18, v19, v20);
  OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v160, v2, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v158, v1, v26, v27, v28, v29, v30);
  OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v156, v5, v31, v32, v33, v34, v35);
  v37 = OUTLINED_FUNCTION_8_35(v36, (uint64_t)&v154);
  v39 = OUTLINED_FUNCTION_10_35(v37, v38, (uint64_t)&null_str_15);
  OUTLINED_FUNCTION_23_31((uint64_t)v39, 1, (uint64_t)&string_2);
  OUTLINED_FUNCTION_51_18();
  v40 = 0;
  if (!v41)
  {
    v42 = OUTLINED_FUNCTION_4_35();
    v43 = 0;
    v40 = 0;
    if (!(_DWORD)v42)
    {
LABEL_6:
      OUTLINED_FUNCTION_80_11(v42, 2, (uint64_t)&v154);
      v40 = v43;
    }
  }
  v43 = v40;
  v44 = 7;
  v128 = 9;
  v45 = 10;
  v46 = 12;
  v122 = 18;
  v47 = 19;
  v48 = 21;
  while (2)
  {
    v118 = v48;
    v120 = v47;
    v124 = v46;
    v126 = v45;
    v130 = v44;
    lpta_loadpn(v0, v162);
    OUTLINED_FUNCTION_61_15();
    if (!OUTLINED_FUNCTION_48_20() && !OUTLINED_FUNCTION_62_14())
      break;
LABEL_10:
    is_kor_forgn_forgn_phr();
    if (!v49)
      break;
LABEL_11:
    v50 = OUTLINED_FUNCTION_88_8();
    starttest(v50, v51);
    OUTLINED_FUNCTION_74_13();
    if (!v52)
    {
      v78 = v0;
      v79 = 1;
      goto LABEL_29;
    }
LABEL_12:
    starttest(v0, v130);
    OUTLINED_FUNCTION_74_13();
    if (!v53)
    {
      v78 = v0;
      v79 = 3;
LABEL_29:
      v42 = testFldeq(v78, 4u, 2, v79);
      if ((_DWORD)v42)
        goto LABEL_63;
      v42 = OUTLINED_FUNCTION_4_35();
      if ((_DWORD)v42)
        goto LABEL_63;
      break;
    }
LABEL_13:
    starttest(v0, 8);
    OUTLINED_FUNCTION_73_13();
    if ((_DWORD)v42)
    {
LABEL_14:
      OUTLINED_FUNCTION_127_6(v42, v54, v55, v56, v57, v58, v59, v60, v118, v120, v122, v124, v126, v128);
      OUTLINED_FUNCTION_74_13();
      if (!(_DWORD)v42)
      {
        bspush_ca_scan(v0, v126);
        v42 = npush_fld(v0, 4u, 13);
        if (!(_DWORD)v42)
        {
          npush_i(v0);
          if_testeq(v0, v80, v81, v82, v83, v84, v85, v86);
          v55 = v43;
          if (!(_DWORD)v42)
          {
LABEL_34:
            v43 = v55;
            v42 = OUTLINED_FUNCTION_4_35();
            if (!(_DWORD)v42)
            {
              lpta_loadpn(v0, &v154);
              OUTLINED_FUNCTION_61_15();
              v42 = OUTLINED_FUNCTION_48_20();
              if (!(_DWORD)v42)
              {
                v42 = OUTLINED_FUNCTION_128_6();
                if (!(_DWORD)v42)
                {
                  v87 = OUTLINED_FUNCTION_116_7();
                  lpta_loadp_setscan_r(v87, v88);
                  v89 = v43;
                  if (!(_DWORD)v42)
                  {
LABEL_38:
                    LODWORD(v43) = v89;
                    OUTLINED_FUNCTION_115_7(v42, v54, v55, v56, v57, v58, v59, v60, v118, v120, v122, v124);
                    OUTLINED_FUNCTION_118_7();
                    v42 = OUTLINED_FUNCTION_113_7(v0, 1u, 4);
                    if ((_DWORD)v42)
                      v43 = v43;
                    else
                      v43 = 1;
                  }
                }
              }
            }
          }
        }
        goto LABEL_63;
      }
LABEL_15:
      v61 = v43;
      OUTLINED_FUNCTION_90_8(v42, v54, v55, v56, v57, v58, v59, v60, v118, v120, v122);
      OUTLINED_FUNCTION_73_13();
      if (!(_DWORD)v62)
      {
        OUTLINED_FUNCTION_121_6(v62, v63, v64, v65, v66, v67, v68, v69, v118, v120);
        v90 = OUTLINED_FUNCTION_102_7();
        v42 = testFldeq(v90, v91, v92, 8);
        if (!(_DWORD)v42)
        {
LABEL_62:
          v42 = OUTLINED_FUNCTION_4_35();
          v43 = v61;
          if (!(_DWORD)v42)
            break;
        }
        goto LABEL_63;
      }
LABEL_16:
      starttest(v0, v118);
      OUTLINED_FUNCTION_73_13();
      if (!(_DWORD)v42)
      {
        v70 = OUTLINED_FUNCTION_102_7();
        v42 = OUTLINED_FUNCTION_113_7(v70, v71, v72);
        if (!(_DWORD)v42)
        {
          v42 = OUTLINED_FUNCTION_4_35();
          if (!(_DWORD)v42)
          {
            lpta_loadp_setscan_l(v0, (uint64_t)&v160);
            if (!(_DWORD)v42)
            {
              v73 = OUTLINED_FUNCTION_102_7();
              v42 = testFldeq(v73, v74, v75, 15);
              if (!(_DWORD)v42)
              {
                v42 = OUTLINED_FUNCTION_4_35();
                if (!(_DWORD)v42)
                {
                  v76 = OUTLINED_FUNCTION_116_7();
                  v42 = is_kor_modal(v76, v77, (__int16 *)&v154, (__int16 *)&v160);
                  if (!(_DWORD)v42)
                    break;
                }
              }
            }
          }
        }
LABEL_63:
        LODWORD(v54) = v43;
LABEL_43:
        v93 = *(_QWORD *)(v0 + 104);
        if (v93)
        {
          OUTLINED_FUNCTION_111_7(v93);
        }
        else
        {
          OUTLINED_FUNCTION_21_32(v42, v54);
          v43 = 0;
        }
        OUTLINED_FUNCTION_99_7();
        v55 = v43;
        v89 = v43;
        v61 = v43;
        switch((int)v43)
        {
          case 0:
            v44 = v130;
            v46 = v124;
            v45 = v126;
            v48 = v118;
            v47 = v120;
            continue;
          case 1:
            goto LABEL_6;
          case 2:
            goto LABEL_10;
          case 4:
            goto LABEL_11;
          case 5:
            goto LABEL_12;
          case 6:
            goto LABEL_13;
          case 7:
            goto LABEL_14;
          case 8:
            goto LABEL_15;
          case 9:
            v42 = npush_fld(v0, 4u, 13);
            LODWORD(v54) = v43;
            if (!(_DWORD)v42)
            {
              npush_i(v0);
              if_testeq(v0, v94, v95, v96, v97, v98, v99, v100);
              v55 = v43;
              LODWORD(v54) = v43;
              if (!(_DWORD)v42)
                goto LABEL_34;
            }
            goto LABEL_43;
          case 10:
            goto LABEL_34;
          case 11:
            v42 = OUTLINED_FUNCTION_64_13();
            LODWORD(v54) = v43;
            if ((_DWORD)v42)
              goto LABEL_43;
            goto LABEL_57;
          case 12:
            OUTLINED_FUNCTION_35_27();
            v42 = OUTLINED_FUNCTION_4_35();
            v89 = v43;
            v54 = v43;
            if (!(_DWORD)v42)
              goto LABEL_38;
            goto LABEL_43;
          case 13:
            goto LABEL_38;
          case 14:
            *(_BYTE *)(v0 + 136) = 1;
            v42 = OUTLINED_FUNCTION_47_21();
            LODWORD(v54) = v43;
            if ((_DWORD)v42)
              goto LABEL_43;
            goto LABEL_3;
          case 15:
            OUTLINED_FUNCTION_35_27();
LABEL_57:
            v42 = OUTLINED_FUNCTION_4_35();
            LODWORD(v54) = v43;
            if (!(_DWORD)v42)
              goto LABEL_58;
            goto LABEL_43;
          case 16:
LABEL_58:
            OUTLINED_FUNCTION_95_7(15);
            OUTLINED_FUNCTION_118_7();
            v42 = OUTLINED_FUNCTION_64_13();
            if ((_DWORD)v42)
              LODWORD(v54) = v43;
            else
              LODWORD(v54) = 1;
            goto LABEL_43;
          case 17:
            goto LABEL_16;
          case 18:
            OUTLINED_FUNCTION_134_4();
            v42 = OUTLINED_FUNCTION_24_30(v101, v102, v103, 9);
            v61 = v43;
            LODWORD(v54) = v43;
            if (!(_DWORD)v42)
              goto LABEL_62;
            goto LABEL_43;
          case 19:
            goto LABEL_62;
          case 20:
            break;
          case 21:
            goto LABEL_68;
          case 22:
            goto LABEL_69;
          case 23:
            goto LABEL_70;
          case 24:
            goto LABEL_71;
          case 25:
            goto LABEL_72;
          default:
            goto LABEL_3;
        }
      }
      OUTLINED_FUNCTION_75_13(v42, (uint64_t)&v154);
      OUTLINED_FUNCTION_61_15();
      v42 = OUTLINED_FUNCTION_48_20();
      if ((_DWORD)v42
        || (v42 = OUTLINED_FUNCTION_128_6(), (_DWORD)v42)
        || (OUTLINED_FUNCTION_108_7(v42, (__int16 *)&v158, (uint64_t)&v154, v56, v57, v58, v59, v60, v118, v120, v122, v124, v126, v128, v130, v131, v132, v133, v134,
              v135,
              v136,
              v137,
              v138,
              v139,
              v140,
              v141,
              v142,
              v143,
              v144,
              v145,
              v146,
              v147,
              v148,
              v149,
              v150,
              v151,
              v152,
              v153,
              v154,
              v155,
              v156,
              v157,
              v158,
              v159,
              v160,
              v161,
              v162[0]),
            (_DWORD)v42))
      {
LABEL_68:
        OUTLINED_FUNCTION_108_7(v42, (__int16 *)&v158, (uint64_t)&v156, v56, v57, v58, v59, v60, v118, v120, v122, v124, v126, v128, v130, v131, v132, v133, v134,
          v135,
          v136,
          v137,
          v138,
          v139,
          v140,
          v141,
          v142,
          v143,
          v144,
          v145,
          v146,
          v147,
          v148,
          v149,
          v150,
          v151,
          v152,
          v153,
          v154,
          v155,
          v156,
          v157,
          v158,
          v159,
          v160,
          v161,
          v162[0]);
        if (v104)
        {
LABEL_69:
          OUTLINED_FUNCTION_49_19();
          is_kor_verb_verb_phr();
          if (v105)
          {
LABEL_70:
            v106 = OUTLINED_FUNCTION_49_19();
            is_kor_time_time_phr(v106, v107, v108, v109, v110);
LABEL_71:
            v111 = OUTLINED_FUNCTION_49_19();
            is_kor_adv_adv_phr(v111, v112, v113, v114, v115);
            if (v116)
            {
LABEL_72:
              OUTLINED_FUNCTION_49_19();
              is_kor_noun_noun_phr();
            }
          }
        }
      }
    }
    else
    {
      v42 = testFldeq(v0, 3u, 0, 3);
      if ((_DWORD)v42)
        goto LABEL_63;
      v42 = OUTLINED_FUNCTION_4_35();
      if ((_DWORD)v42)
        goto LABEL_63;
    }
    break;
  }
LABEL_3:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

void kor_sentential_adverb()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66[2];
  char v67[192];
  uint64_t v68;

  OUTLINED_FUNCTION_22_31();
  v68 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v3, v4, v5, v6, v7, v8, v9, v10, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62);
  OUTLINED_FUNCTION_30_28(v11, v12, v13, v14, v15, v16, v17, v18, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    0,
    0,
    v64,
    v65,
    v66[0],
    v66[1],
    v67[0]);
  v19 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v19
    && !OUTLINED_FUNCTION_9_35(v19, (uint64_t)&v38, (uint64_t)v66 + 7, (uint64_t)&v65 + 6, (uint64_t)&v64 + 4, (uint64_t)v67))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v63, v2, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v61, v1, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_23_31(v30, 0, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    OUTLINED_FUNCTION_51_18();
    if (!v31)
    {
      OUTLINED_FUNCTION_133_5();
      if (OUTLINED_FUNCTION_24_30(v32, v33, v34, 7) || OUTLINED_FUNCTION_4_35())
        goto LABEL_7;
      do
      {
        lpta_rpta_loadp(v0, (uint64_t)&v63, (uint64_t)&v61);
        OUTLINED_FUNCTION_71_13();
        if (!v35)
          break;
LABEL_7:
        v36 = *(_QWORD *)(v0 + 104);
        if (v36)
          OUTLINED_FUNCTION_5_35(v36);
        else
          OUTLINED_FUNCTION_18_33();
        OUTLINED_FUNCTION_55_16();
      }
      while (v37);
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_132_5();
  OUTLINED_FUNCTION_16_34();
}

void noun_that_makes_inton_phr()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  char v36;
  uint64_t v37[23];
  uint64_t v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  _BYTE v41[10];
  _BYTE v42[9];
  _BYTE v43[9];
  _BYTE v44[192];
  uint64_t v45;

  OUTLINED_FUNCTION_22_31();
  v45 = *MEMORY[0x24BDAC8D0];
  v40[0] = 0;
  v40[1] = 0;
  v39[0] = 0;
  v39[1] = 0;
  OUTLINED_FUNCTION_0_36(v3, v4, v5, v6, v7, v8, v9, v10, v37[0], v37[1], v37[2], v37[3], v37[4], v37[5], v37[6], v37[7], v37[8], v37[9], v37[10],
    v37[11],
    v37[12],
    v37[13],
    v37[14],
    v37[15],
    v37[16],
    v37[17],
    v37[18],
    v37[19],
    v37[20],
    v37[21],
    v37[22],
    v38[0],
    v38[1]);
  OUTLINED_FUNCTION_54_17(v11, 0xC0uLL);
  v12 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v12
    && !OUTLINED_FUNCTION_9_35(v12, (uint64_t)v37, (uint64_t)v43, (uint64_t)v42, (uint64_t)v41, (uint64_t)v44))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v40, v2, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v39, v1, v18, v19, v20, v21, v22);
    v24 = OUTLINED_FUNCTION_8_35(v23, (uint64_t)v38);
    OUTLINED_FUNCTION_23_31(v24, 0, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    v25 = OUTLINED_FUNCTION_57_16();
    words_that_makes_inton_phr(v25, v26, v27, (__int16 *)v40);
    if ((_DWORD)v28)
      goto LABEL_5;
LABEL_10:
    lpta_rpta_loadp(v0, (uint64_t)v40, (uint64_t)v39);
    OUTLINED_FUNCTION_71_13();
    if (v33)
    {
      while (1)
      {
        v34 = *(_QWORD *)(v0 + 104);
        if (v34)
          v28 = OUTLINED_FUNCTION_5_35(v34);
        else
          v28 = OUTLINED_FUNCTION_18_33();
        if ((_DWORD)v28 == 1)
        {
LABEL_5:
          OUTLINED_FUNCTION_6_35(v28, 3);
          lpta_loadp_setscan_l(v0, (uint64_t)v39);
          if (v29 || OUTLINED_FUNCTION_4_35())
            break;
        }
        else
        {
          OUTLINED_FUNCTION_55_16();
          if (v36)
            goto LABEL_10;
          if (v35 != 4)
            break;
        }
        savescptr(v0, 4, (uint64_t)v38);
        v30 = OUTLINED_FUNCTION_67_13();
        lpta_loadpn(v30, v31);
        rpta_loadpn(v0);
        if (!OUTLINED_FUNCTION_48_20() && !OUTLINED_FUNCTION_128_6())
        {
          words_that_makes_inton_phr(v0, (uint64_t)v38, (__int16 *)v39, (__int16 *)v40);
          if (!v32)
            goto LABEL_10;
        }
      }
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void find_kor_potential_phrase()
{
  uint64_t v0;
  __int16 *v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  __int16 *v33;
  _BOOL8 v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  __int16 *v63;
  _BYTE v64[184];
  _QWORD v65[2];
  _BYTE v66[16];
  char v67[16];
  _BYTE v68[16];
  _DWORD v69[2];
  __int16 v70;
  __int16 v71;
  char v72[2];
  __int16 v73;
  char v74[8];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78[10];
  char v79[9];
  char v80[9];
  _BYTE v81[192];
  uint64_t v82;

  OUTLINED_FUNCTION_17_34();
  v62 = v0;
  v63 = v1;
  v61 = v2;
  v4 = v3;
  v82 = *MEMORY[0x24BDAC8D0];
  v76 = 0;
  v77 = 0;
  OUTLINED_FUNCTION_70_13();
  v65[0] = 0;
  v65[1] = 0;
  bzero(v64, 0xB8uLL);
  OUTLINED_FUNCTION_69_13();
  bzero(v81, v5);
  v6 = OUTLINED_FUNCTION_77_12();
  if ((_DWORD)v6
    || OUTLINED_FUNCTION_9_35(v6, (uint64_t)v64, (uint64_t)v80, (uint64_t)v79, (uint64_t)v78, (uint64_t)v81))
  {
    goto LABEL_3;
  }
  v7 = OUTLINED_FUNCTION_67_13();
  get_parm(v7, v8, (__int16 *)v61, 4294967290, v9, v10, v11, v12);
  get_parm((uint64_t)v4, (uint64_t)v74, (__int16 *)v62, 4294967290, v13, v14, v15, v16);
  get_parm((uint64_t)v4, (uint64_t)v72, v63, 4294967292, v17, v18, v19, v20);
  v70 = -4;
  v69[1] = 65532;
  v69[0] = 65532;
  v22 = OUTLINED_FUNCTION_8_35(v21, (uint64_t)v68);
  v23 = OUTLINED_FUNCTION_8_35(v22, (uint64_t)v67);
  v24 = OUTLINED_FUNCTION_8_35(v23, (uint64_t)v66);
  v25 = OUTLINED_FUNCTION_8_35(v24, (uint64_t)v65);
  v26 = 0;
  OUTLINED_FUNCTION_10_35(v25, v27, (uint64_t)&null_str_15);
  v28 = fence_35((uint64_t)v4, 1, (uint64_t)&string_2);
  v71 = 0;
  OUTLINED_FUNCTION_6_35((uint64_t)v28, 1);
  v29 = OUTLINED_FUNCTION_67_13();
  lpta_loadp_setscan_r(v29, v30);
  if (!v31)
  {
    OUTLINED_FUNCTION_95_7(2);
    v34 = OUTLINED_FUNCTION_76_13(v38, 3u, 1);
    v36 = 0;
    v39 = 0;
    if (v34)
      goto LABEL_13;
LABEL_10:
    v36 = v39;
    v34 = OUTLINED_FUNCTION_4_35();
    if (v34)
      goto LABEL_13;
    goto LABEL_3;
  }
  while (2)
  {
    v4[166] = v77;
    v4[168] = v75;
    starttest_l((uint64_t)v4, 4);
    v32 = OUTLINED_FUNCTION_67_13();
    move_i(v32, v33, 2);
    move_i((uint64_t)v4, (__int16 *)v69, 2);
    OUTLINED_FUNCTION_104_7();
    v35 = v26;
    v36 = v26;
    if (!v34)
    {
LABEL_7:
      OUTLINED_FUNCTION_2_36(5);
      bspush_ca((uint64_t)v4);
      OUTLINED_FUNCTION_75_13(v37, (uint64_t)v68);
      OUTLINED_FUNCTION_110_7();
      v34 = OUTLINED_FUNCTION_48_20();
      if (v34)
      {
        v36 = v35;
        goto LABEL_13;
      }
      v34 = OUTLINED_FUNCTION_62_14();
      v36 = v35;
      if (v34)
        goto LABEL_13;
LABEL_3:
      OUTLINED_FUNCTION_3_36();
      break;
    }
LABEL_13:
    v40 = v36;
LABEL_14:
    v41 = v4[13];
    if (v41)
    {
      OUTLINED_FUNCTION_5_35(v41);
      v35 = v42;
    }
    else
    {
      OUTLINED_FUNCTION_21_32(v34, v40);
      v35 = 0;
    }
    OUTLINED_FUNCTION_99_7();
    v39 = v35;
    switch(v43)
    {
      case 0:
        v26 = v35;
        continue;
      case 1:
        OUTLINED_FUNCTION_134_4();
        v34 = testFldeq(v44, v45, v46, 2);
        v39 = v35;
        v40 = v35;
        if (!v34)
          goto LABEL_10;
        goto LABEL_14;
      case 2:
        goto LABEL_10;
      case 3:
        goto LABEL_7;
      case 4:
        v47 = OUTLINED_FUNCTION_125_6();
        lpta_loadpn(v47, v48);
        rpta_loadpn(v4);
        if (!OUTLINED_FUNCTION_48_20() && !OUTLINED_FUNCTION_62_14())
          goto LABEL_3;
        goto LABEL_22;
      case 5:
        v50 = OUTLINED_FUNCTION_125_6();
        goto LABEL_28;
      case 7:
LABEL_22:
        starttest((uint64_t)v4, 9);
        v49 = OUTLINED_FUNCTION_67_13();
        bspush_ca(v49);
        v50 = (uint64_t)v4;
        v51 = v66;
        goto LABEL_28;
      case 8:
        v52 = OUTLINED_FUNCTION_79_12();
        starttest(v52, v53);
        bspush_ca_boa((uint64_t)v4);
        is_kor_acc_phr();
        if (v34)
          v40 = v35;
        else
          v40 = 1;
        goto LABEL_14;
      case 9:
        v50 = (uint64_t)v4;
        v51 = v65;
LABEL_28:
        lpta_loadpn(v50, v51);
        OUTLINED_FUNCTION_117_7();
        v34 = OUTLINED_FUNCTION_48_20();
        v40 = v35;
        if (!v34)
        {
          v34 = OUTLINED_FUNCTION_62_14();
          v40 = v35;
          if (!v34)
            goto LABEL_3;
        }
        goto LABEL_14;
      case 11:
        num_sylls_in_word();
        if (v71 < 2)
          goto LABEL_3;
        goto LABEL_33;
      case 12:
        OUTLINED_FUNCTION_35_27();
        goto LABEL_3;
      case 14:
LABEL_33:
        OUTLINED_FUNCTION_20_33();
        kor_coord_conj();
        if (v54)
          goto LABEL_34;
        goto LABEL_41;
      case 15:
LABEL_34:
        OUTLINED_FUNCTION_20_33();
        kor_time_exp();
        goto LABEL_35;
      case 16:
        goto LABEL_41;
      case 17:
LABEL_35:
        OUTLINED_FUNCTION_20_33();
        kor_subord_conj();
        if (v55)
          goto LABEL_36;
        goto LABEL_41;
      case 18:
LABEL_36:
        OUTLINED_FUNCTION_20_33();
        kor_topic();
        if (v56)
          goto LABEL_37;
        goto LABEL_41;
      case 19:
LABEL_37:
        OUTLINED_FUNCTION_20_33();
        kor_nom();
        if (v57)
          goto LABEL_38;
        goto LABEL_41;
      case 20:
LABEL_38:
        OUTLINED_FUNCTION_20_33();
        kor_adv();
        if (v58)
          goto LABEL_39;
        goto LABEL_41;
      case 21:
LABEL_39:
        OUTLINED_FUNCTION_20_33();
        kor_accu();
        if (v59)
          goto LABEL_40;
        goto LABEL_41;
      case 22:
LABEL_40:
        OUTLINED_FUNCTION_20_33();
        kor_adnom();
        if (v60)
          goto LABEL_3;
LABEL_41:
        *(_QWORD *)(v61 + 8) = v77;
        *(_QWORD *)(v62 + 8) = v75;
        v63[1] = v73;
        OUTLINED_FUNCTION_3_36();
        break;
      default:
        goto LABEL_3;
    }
    break;
  }
  OUTLINED_FUNCTION_1_36();
}

void num_sylls_in_word()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  __int16 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  char v40;
  char v41;
  uint64_t v42;
  char v43[8];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[2];
  int v69;
  int v70;
  uint64_t v71[4];
  _BYTE v72[10];
  _BYTE v73[9];
  _BYTE v74[9];
  _BYTE v75[192];
  uint64_t v76;

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_50_19();
  v76 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_32_28(v4, v5, v6, v7, v8, v9, v10, v11, v42, v43[0], v44, v45, v46, v47, v48, v49, v50, v51, v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68[0],
    v68[1],
    v69,
    v70,
    v71[0],
    v71[1],
    v71[2],
    v71[3]);
  OUTLINED_FUNCTION_69_13();
  bzero(v75, v12);
  v13 = OUTLINED_FUNCTION_97_7();
  if (!(_DWORD)v13
    && !OUTLINED_FUNCTION_9_35(v13, (uint64_t)v43, (uint64_t)v74, (uint64_t)v73, (uint64_t)v72, (uint64_t)v75))
  {
    v14 = OUTLINED_FUNCTION_116_7();
    OUTLINED_FUNCTION_11_35(v14, v15, v3, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)v71, v2, v21, v22, v23, v24, v25);
    OUTLINED_FUNCTION_56_16(v26, (uint64_t)&v70, v27, v28, v29, v30, v31, v32);
    OUTLINED_FUNCTION_131_5();
    v33 = OUTLINED_FUNCTION_119_6();
    OUTLINED_FUNCTION_10_35(v33, v34, (uint64_t)&null_str_15);
    fence_35(v0, 1, (uint64_t)&string_24);
    HIWORD(v70) = 0;
    startloop(v0, 1);
    OUTLINED_FUNCTION_86_8();
    OUTLINED_FUNCTION_123_6();
    OUTLINED_FUNCTION_93_7();
    OUTLINED_FUNCTION_87_8();
    OUTLINED_FUNCTION_123_6();
    OUTLINED_FUNCTION_120_6();
    if (OUTLINED_FUNCTION_105_7()
      || (OUTLINED_FUNCTION_39_24(), lpta_loadp_setscan_r(v0, (uint64_t)v68), v35)
      || OUTLINED_FUNCTION_64_13()
      || OUTLINED_FUNCTION_4_35()
      || (c_assvar(v0, (unsigned __int16 *)&v70),
          ++HIWORD(v70),
          OUTLINED_FUNCTION_124_6(v36, 1, 2, 4, 1, (uint64_t)v68),
          v37))
    {
      v38 = *(_QWORD *)(v0 + 104);
      if (v38)
        OUTLINED_FUNCTION_5_35(v38);
      else
        OUTLINED_FUNCTION_18_33();
      OUTLINED_FUNCTION_66_13();
      if (!(!v41 & v40))
        __asm { BR              X10 }
    }
    else
    {
      *(_WORD *)(v1 + 2) = HIWORD(v70);
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

void kor_coord_conj()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  int v35;
  int v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[10];
  _BYTE v93[9];
  _BYTE v94[9];
  _BYTE v95[192];
  uint64_t v96;

  OUTLINED_FUNCTION_50_19();
  v96 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_32_28(v3, v4, v5, v6, v7, v8, v9, v10, v57, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91);
  OUTLINED_FUNCTION_44_22();
  v11 = OUTLINED_FUNCTION_97_7();
  if (!(_DWORD)v11
    && !OUTLINED_FUNCTION_9_35(v11, (uint64_t)&v59, (uint64_t)v94, (uint64_t)v93, (uint64_t)v92, (uint64_t)v95))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v90, v2, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v88, v1, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_56_16(v22, (uint64_t)&v87, v23, v24, v25, v26, v27, v28);
    v30 = OUTLINED_FUNCTION_8_35(v29, (uint64_t)&v84);
    v31 = OUTLINED_FUNCTION_8_35(v30, (uint64_t)&v82);
    OUTLINED_FUNCTION_23_31(v31, 0, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    OUTLINED_FUNCTION_15_34();
    if (!v32)
    {
      OUTLINED_FUNCTION_107_7();
      if (OUTLINED_FUNCTION_24_30(v33, v34, v35, v36))
        goto LABEL_7;
      v37 = OUTLINED_FUNCTION_4_35();
      if (v37)
        goto LABEL_7;
      while (1)
      {
        OUTLINED_FUNCTION_109_7(v37, v38, v39, v40, v41, v42, v43, v44, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87);
        OUTLINED_FUNCTION_91_8(v45, (unsigned __int16 *)&v90, (__int16 *)&v84);
        OUTLINED_FUNCTION_91_8(v46, (unsigned __int16 *)&v88, (__int16 *)&v82);
        OUTLINED_FUNCTION_106_7();
        OUTLINED_FUNCTION_85_9();
        if (!(_DWORD)v47)
          break;
LABEL_7:
        v55 = *(_QWORD *)(v0 + 104);
        if (v55)
          OUTLINED_FUNCTION_5_35(v55);
        else
          OUTLINED_FUNCTION_18_33();
        OUTLINED_FUNCTION_55_16();
        if (!v56)
          goto LABEL_11;
      }
      OUTLINED_FUNCTION_84_9(v47, v48, v49, v50, v51, v52, v53, v54, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        SHIWORD(v87),
        v88,
        v89,
        v90,
        v91);
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void kor_time_exp()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[188];
  int v24;
  _QWORD v25[2];
  _QWORD v26[2];
  _BYTE v27[10];
  _BYTE v28[9];
  _BYTE v29[9];
  _BYTE v30[192];
  uint64_t v31;

  OUTLINED_FUNCTION_50_19();
  v31 = *MEMORY[0x24BDAC8D0];
  v26[0] = 0;
  v26[1] = 0;
  v25[0] = 0;
  v25[1] = 0;
  v24 = 0;
  OUTLINED_FUNCTION_46_21(v3);
  OUTLINED_FUNCTION_44_22();
  v4 = OUTLINED_FUNCTION_97_7();
  if (!(_DWORD)v4
    && !OUTLINED_FUNCTION_9_35(v4, (uint64_t)v23, (uint64_t)v29, (uint64_t)v28, (uint64_t)v27, (uint64_t)v30))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v26, v2, v5, v6, v7, v8, v9);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v25, v1, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_56_16(v15, (uint64_t)&v24, v16, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_23_31(v22, 0, (uint64_t)&null_str_15);
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void kor_subord_conj()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE v88[10];
  _BYTE v89[9];
  _BYTE v90[9];
  _BYTE v91[192];
  uint64_t v92;

  OUTLINED_FUNCTION_50_19();
  v92 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_32_28(v3, v4, v5, v6, v7, v8, v9, v10, v53, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87);
  OUTLINED_FUNCTION_44_22();
  v11 = OUTLINED_FUNCTION_97_7();
  if (!(_DWORD)v11
    && !OUTLINED_FUNCTION_9_35(v11, (uint64_t)&v55, (uint64_t)v90, (uint64_t)v89, (uint64_t)v88, (uint64_t)v91))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v86, v2, v12, v13, v14, v15, v16);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v84, v1, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_56_16(v22, (uint64_t)&v83, v23, v24, v25, v26, v27, v28);
    v30 = OUTLINED_FUNCTION_8_35(v29, (uint64_t)&v80);
    v31 = OUTLINED_FUNCTION_8_35(v30, (uint64_t)&v78);
    OUTLINED_FUNCTION_23_31(v31, 0, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    OUTLINED_FUNCTION_15_34();
    if (!(_DWORD)v32)
    {
      if (OUTLINED_FUNCTION_24_30(v32, 4u, 1, 10))
        goto LABEL_7;
      v33 = OUTLINED_FUNCTION_4_35();
      if (v33)
        goto LABEL_7;
      while (1)
      {
        OUTLINED_FUNCTION_109_7(v33, v34, v35, v36, v37, v38, v39, v40, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
          v65,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83);
        OUTLINED_FUNCTION_91_8(v41, (unsigned __int16 *)&v86, (__int16 *)&v80);
        OUTLINED_FUNCTION_91_8(v42, (unsigned __int16 *)&v84, (__int16 *)&v78);
        OUTLINED_FUNCTION_106_7();
        OUTLINED_FUNCTION_85_9();
        if (!(_DWORD)v43)
          break;
LABEL_7:
        v51 = *(_QWORD *)(v0 + 104);
        if (v51)
          OUTLINED_FUNCTION_5_35(v51);
        else
          OUTLINED_FUNCTION_18_33();
        OUTLINED_FUNCTION_55_16();
        if (!v52)
          goto LABEL_11;
      }
      OUTLINED_FUNCTION_84_9(v43, v44, v45, v46, v47, v48, v49, v50, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        SHIWORD(v83),
        v84,
        v85,
        v86,
        v87);
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void kor_topic()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119[2];
  char v120[208];

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_7_35(v3, v4, v5, v6, v7, v8, v9, v10, v61, v67, v73, v79, v85, v86, v87, v88, v89, v90, v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    SHIDWORD(v112),
    v113,
    v114,
    v115,
    v116);
  OUTLINED_FUNCTION_28_28(v11, v12, v13, v14, v15, v16, v17, v18, v62, v68, v74, v80, v85, v86, v87, v88, v89, v90, v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119[0],
    v119[1],
    v120[0]);
  v19 = OUTLINED_FUNCTION_77_12();
  if (!(_DWORD)v19)
  {
    v20 = OUTLINED_FUNCTION_9_35(v19, (uint64_t)&v85, (uint64_t)v119 + 7, (uint64_t)&v118 + 6, (uint64_t)&v117 + 4, (uint64_t)v120);
    if (!(_DWORD)v20)
    {
      OUTLINED_FUNCTION_13_34(v20, v21, v22, v23, v24, v25, v26, v27, v63, v69, v75, v81, v85, v86, v87, v88, v89, v90, v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115);
      OUTLINED_FUNCTION_25_30(v28, v29, v30, v31, v32, v33, v34, v35, v64, v70, v76, v82, v85, v86, v87, v88, v89, v90, v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113);
      OUTLINED_FUNCTION_27_28(v36, v37, v38, v39, v40, v41, v42, v43, v65, v71, v77, v83, v85, v86, v87, v88, v89, v90, v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        SBYTE4(v112));
      v45 = OUTLINED_FUNCTION_8_35(v44, (uint64_t)&v110);
      v46 = OUTLINED_FUNCTION_8_35(v45, (uint64_t)&v108);
      OUTLINED_FUNCTION_10_35(v46, v47, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_14_34();
      OUTLINED_FUNCTION_15_34();
      if (!(_DWORD)v48 && !OUTLINED_FUNCTION_24_30(v48, 4u, 1, 15))
        OUTLINED_FUNCTION_4_35();
      v78 = v2;
      v84 = v1;
      while (1)
      {
        v49 = *(_QWORD *)(v0 + 104);
        v50 = v49 ? OUTLINED_FUNCTION_5_35(v49) : OUTLINED_FUNCTION_60_16();
        if (v50 != 1)
          break;
        move_i(v0, (__int16 *)&v112 + 2, 3);
        OUTLINED_FUNCTION_42_22(v51, v52, v53, v54, v55, v56, v57, v58, v66, v72, v78, v84, v85, v86, v87, v88, v89, v90, v91,
          v92,
          v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115);
        OUTLINED_FUNCTION_41_22();
        OUTLINED_FUNCTION_40_22();
        mark_i(v0, 4, 11, 6, 0);
        if (!v59)
        {
          *(_QWORD *)(v72 + 8) = v116;
          *(_QWORD *)(v78 + 8) = v114;
          *(_WORD *)(v84 + 2) = HIWORD(v112);
          OUTLINED_FUNCTION_3_36();
          goto LABEL_4;
        }
      }
      OUTLINED_FUNCTION_55_16();
      if (v60)
        OUTLINED_FUNCTION_35_27();
    }
  }
  OUTLINED_FUNCTION_3_36();
LABEL_4:
  OUTLINED_FUNCTION_1_36();
}

void kor_nom()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[2];
  char v129[208];

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_7_35(v1, v2, v3, v4, v5, v6, v7, v8, v66, v73, v80, v87, v94, v95, v96, v97, v98, v99, v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    SHIDWORD(v121),
    v122,
    v123,
    v124,
    v125);
  OUTLINED_FUNCTION_28_28(v9, v10, v11, v12, v13, v14, v15, v16, v67, v74, v81, v88, v94, v95, v96, v97, v98, v99, v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128[0],
    v128[1],
    v129[0]);
  v17 = OUTLINED_FUNCTION_77_12();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v94, (uint64_t)v128 + 7, (uint64_t)&v127 + 6, (uint64_t)&v126 + 4, (uint64_t)v129);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_13_34(v18, v19, v20, v21, v22, v23, v24, v25, v68, v75, v82, v89, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        v124);
      OUTLINED_FUNCTION_25_30(v26, v27, v28, v29, v30, v31, v32, v33, v69, v76, v83, v90, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122);
      OUTLINED_FUNCTION_27_28(v34, v35, v36, v37, v38, v39, v40, v41, v70, v77, v84, v91, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        SBYTE4(v121));
      v43 = OUTLINED_FUNCTION_8_35(v42, (uint64_t)&v119);
      v44 = OUTLINED_FUNCTION_8_35(v43, (uint64_t)&v117);
      OUTLINED_FUNCTION_10_35(v44, v45, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_14_34();
      OUTLINED_FUNCTION_15_34();
      if (!(_DWORD)v46 && !OUTLINED_FUNCTION_24_30(v46, 4u, 1, 13))
        OUTLINED_FUNCTION_4_35();
      OUTLINED_FUNCTION_37_27();
      while (1)
      {
        v47 = *(_QWORD *)(v0 + 104);
        v48 = v47 ? OUTLINED_FUNCTION_5_35(v47) : OUTLINED_FUNCTION_60_16();
        if ((_DWORD)v48 != 1)
          break;
        OUTLINED_FUNCTION_58_16(v48, v49, v50, v51, v52, v53, v54, v55, v71, v78, v85, v92, v94, v95, v96, v97, v98, v99, v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          SWORD2(v121));
        OUTLINED_FUNCTION_42_22(v56, v57, v58, v59, v60, v61, v62, v63, v72, v79, v86, v93, v94, v95, v96, v97, v98, v99, v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          v124);
        OUTLINED_FUNCTION_41_22();
        OUTLINED_FUNCTION_40_22();
        OUTLINED_FUNCTION_36_27();
        if (!v64)
        {
          *(_QWORD *)(v78 + 8) = v125;
          *(_QWORD *)(v85 + 8) = v123;
          *(_WORD *)(v92 + 2) = HIWORD(v121);
          OUTLINED_FUNCTION_3_36();
          goto LABEL_4;
        }
      }
      OUTLINED_FUNCTION_55_16();
      if (v65)
        OUTLINED_FUNCTION_35_27();
    }
  }
  OUTLINED_FUNCTION_3_36();
LABEL_4:
  OUTLINED_FUNCTION_1_36();
}

void kor_adv()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[2];
  char v129[208];

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_7_35(v1, v2, v3, v4, v5, v6, v7, v8, v66, v73, v80, v87, v94, v95, v96, v97, v98, v99, v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    SHIDWORD(v121),
    v122,
    v123,
    v124,
    v125);
  OUTLINED_FUNCTION_28_28(v9, v10, v11, v12, v13, v14, v15, v16, v67, v74, v81, v88, v94, v95, v96, v97, v98, v99, v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128[0],
    v128[1],
    v129[0]);
  v17 = OUTLINED_FUNCTION_77_12();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v94, (uint64_t)v128 + 7, (uint64_t)&v127 + 6, (uint64_t)&v126 + 4, (uint64_t)v129);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_13_34(v18, v19, v20, v21, v22, v23, v24, v25, v68, v75, v82, v89, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        v124);
      OUTLINED_FUNCTION_25_30(v26, v27, v28, v29, v30, v31, v32, v33, v69, v76, v83, v90, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122);
      OUTLINED_FUNCTION_27_28(v34, v35, v36, v37, v38, v39, v40, v41, v70, v77, v84, v91, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        SBYTE4(v121));
      v43 = OUTLINED_FUNCTION_8_35(v42, (uint64_t)&v119);
      v44 = OUTLINED_FUNCTION_8_35(v43, (uint64_t)&v117);
      OUTLINED_FUNCTION_10_35(v44, v45, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_14_34();
      OUTLINED_FUNCTION_15_34();
      if (!(_DWORD)v46 && !OUTLINED_FUNCTION_24_30(v46, 4u, 1, 6))
        OUTLINED_FUNCTION_4_35();
      OUTLINED_FUNCTION_37_27();
      while (1)
      {
        v47 = *(_QWORD *)(v0 + 104);
        v48 = v47 ? OUTLINED_FUNCTION_5_35(v47) : OUTLINED_FUNCTION_60_16();
        if ((_DWORD)v48 != 1)
          break;
        OUTLINED_FUNCTION_58_16(v48, v49, v50, v51, v52, v53, v54, v55, v71, v78, v85, v92, v94, v95, v96, v97, v98, v99, v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          SWORD2(v121));
        OUTLINED_FUNCTION_42_22(v56, v57, v58, v59, v60, v61, v62, v63, v72, v79, v86, v93, v94, v95, v96, v97, v98, v99, v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          v124);
        OUTLINED_FUNCTION_41_22();
        OUTLINED_FUNCTION_40_22();
        OUTLINED_FUNCTION_36_27();
        if (!v64)
        {
          *(_QWORD *)(v78 + 8) = v125;
          *(_QWORD *)(v85 + 8) = v123;
          *(_WORD *)(v92 + 2) = HIWORD(v121);
          OUTLINED_FUNCTION_3_36();
          goto LABEL_4;
        }
      }
      OUTLINED_FUNCTION_55_16();
      if (v65)
        OUTLINED_FUNCTION_35_27();
    }
  }
  OUTLINED_FUNCTION_3_36();
LABEL_4:
  OUTLINED_FUNCTION_1_36();
}

void kor_accu()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128[2];
  char v129[208];

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_7_35(v1, v2, v3, v4, v5, v6, v7, v8, v66, v73, v80, v87, v94, v95, v96, v97, v98, v99, v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    SHIDWORD(v121),
    v122,
    v123,
    v124,
    v125);
  OUTLINED_FUNCTION_28_28(v9, v10, v11, v12, v13, v14, v15, v16, v67, v74, v81, v88, v94, v95, v96, v97, v98, v99, v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128[0],
    v128[1],
    v129[0]);
  v17 = OUTLINED_FUNCTION_77_12();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v94, (uint64_t)v128 + 7, (uint64_t)&v127 + 6, (uint64_t)&v126 + 4, (uint64_t)v129);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_13_34(v18, v19, v20, v21, v22, v23, v24, v25, v68, v75, v82, v89, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        v124);
      OUTLINED_FUNCTION_25_30(v26, v27, v28, v29, v30, v31, v32, v33, v69, v76, v83, v90, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122);
      OUTLINED_FUNCTION_27_28(v34, v35, v36, v37, v38, v39, v40, v41, v70, v77, v84, v91, v94, v95, v96, v97, v98, v99, v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        SBYTE4(v121));
      v43 = OUTLINED_FUNCTION_8_35(v42, (uint64_t)&v119);
      v44 = OUTLINED_FUNCTION_8_35(v43, (uint64_t)&v117);
      OUTLINED_FUNCTION_10_35(v44, v45, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_14_34();
      OUTLINED_FUNCTION_15_34();
      if (!(_DWORD)v46 && !OUTLINED_FUNCTION_76_13(v46, 4u, 1))
        OUTLINED_FUNCTION_4_35();
      OUTLINED_FUNCTION_37_27();
      while (1)
      {
        v47 = *(_QWORD *)(v0 + 104);
        v48 = v47 ? OUTLINED_FUNCTION_5_35(v47) : OUTLINED_FUNCTION_60_16();
        if ((_DWORD)v48 != 1)
          break;
        OUTLINED_FUNCTION_58_16(v48, v49, v50, v51, v52, v53, v54, v55, v71, v78, v85, v92, v94, v95, v96, v97, v98, v99, v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          SWORD2(v121));
        OUTLINED_FUNCTION_42_22(v56, v57, v58, v59, v60, v61, v62, v63, v72, v79, v86, v93, v94, v95, v96, v97, v98, v99, v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          v124);
        OUTLINED_FUNCTION_41_22();
        OUTLINED_FUNCTION_40_22();
        OUTLINED_FUNCTION_36_27();
        if (!v64)
        {
          *(_QWORD *)(v78 + 8) = v125;
          *(_QWORD *)(v85 + 8) = v123;
          *(_WORD *)(v92 + 2) = HIWORD(v121);
          OUTLINED_FUNCTION_3_36();
          goto LABEL_4;
        }
      }
      OUTLINED_FUNCTION_55_16();
      if (v65)
        OUTLINED_FUNCTION_35_27();
    }
  }
  OUTLINED_FUNCTION_3_36();
LABEL_4:
  OUTLINED_FUNCTION_1_36();
}

void kor_adnom()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130[2];
  char v131[208];

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_12_35();
  OUTLINED_FUNCTION_7_35(v3, v4, v5, v6, v7, v8, v9, v10, v68, v75, v82, v89, v96, v97, v98, v99, v100, v101, v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    SHIDWORD(v123),
    v124,
    v125,
    v126,
    v127);
  OUTLINED_FUNCTION_28_28(v11, v12, v13, v14, v15, v16, v17, v18, v69, v76, v83, v90, v96, v97, v98, v99, v100, v101, v102,
    v103,
    v104,
    v105,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128,
    v129,
    v130[0],
    v130[1],
    v131[0]);
  v19 = OUTLINED_FUNCTION_77_12();
  if (!(_DWORD)v19)
  {
    v20 = OUTLINED_FUNCTION_9_35(v19, (uint64_t)&v96, (uint64_t)v130 + 7, (uint64_t)&v129 + 6, (uint64_t)&v128 + 4, (uint64_t)v131);
    if (!(_DWORD)v20)
    {
      OUTLINED_FUNCTION_13_34(v20, v21, v22, v23, v24, v25, v26, v27, v70, v77, v84, v91, v96, v97, v98, v99, v100, v101, v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        v124,
        v125,
        v126);
      OUTLINED_FUNCTION_25_30(v28, v29, v30, v31, v32, v33, v34, v35, v71, v78, v85, v92, v96, v97, v98, v99, v100, v101, v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        v124);
      OUTLINED_FUNCTION_27_28(v36, v37, v38, v39, v40, v41, v42, v43, v72, v79, v86, v93, v96, v97, v98, v99, v100, v101, v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114,
        v115,
        v116,
        v117,
        v118,
        v119,
        v120,
        v121,
        v122,
        v123,
        SBYTE4(v123));
      v45 = OUTLINED_FUNCTION_8_35(v44, (uint64_t)&v121);
      v46 = OUTLINED_FUNCTION_8_35(v45, (uint64_t)&v119);
      OUTLINED_FUNCTION_10_35(v46, v47, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_14_34();
      OUTLINED_FUNCTION_15_34();
      if (!(_DWORD)v48 && !OUTLINED_FUNCTION_24_30(v48, 4u, 1, 5))
        OUTLINED_FUNCTION_4_35();
      v87 = v2;
      v94 = v1;
      while (1)
      {
        v49 = *(_QWORD *)(v0 + 104);
        v50 = v49 ? OUTLINED_FUNCTION_5_35(v49) : OUTLINED_FUNCTION_60_16();
        if ((_DWORD)v50 != 1)
          break;
        OUTLINED_FUNCTION_58_16(v50, v51, v52, v53, v54, v55, v56, v57, v73, v80, v87, v94, v96, v97, v98, v99, v100, v101, v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          SWORD2(v123));
        OUTLINED_FUNCTION_42_22(v58, v59, v60, v61, v62, v63, v64, v65, v74, v81, v88, v95, v96, v97, v98, v99, v100, v101, v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v114,
          v115,
          v116,
          v117,
          v118,
          v119,
          v120,
          v121,
          v122,
          v123,
          v124,
          v125,
          v126);
        OUTLINED_FUNCTION_41_22();
        OUTLINED_FUNCTION_40_22();
        OUTLINED_FUNCTION_36_27();
        if (!v66)
        {
          *(_QWORD *)(v80 + 8) = v127;
          *(_QWORD *)(v87 + 8) = v125;
          *(_WORD *)(v94 + 2) = HIWORD(v123);
          OUTLINED_FUNCTION_3_36();
          goto LABEL_4;
        }
      }
      OUTLINED_FUNCTION_55_16();
      if (v67)
        OUTLINED_FUNCTION_35_27();
    }
  }
  OUTLINED_FUNCTION_3_36();
LABEL_4:
  OUTLINED_FUNCTION_1_36();
}

void apply_kor_comma_rules()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _BOOL8 v26;
  uint64_t v27[23];
  uint64_t v28[2];
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  _BYTE v32[10];
  _BYTE v33[9];
  _BYTE v34[9];
  _BYTE v35[192];
  uint64_t v36;

  OUTLINED_FUNCTION_22_31();
  v36 = *MEMORY[0x24BDAC8D0];
  v31[0] = 0;
  v31[1] = 0;
  v29 = 0;
  v30 = 0;
  OUTLINED_FUNCTION_0_36(v3, v4, v5, v6, v7, v8, v9, v10, v27[0], v27[1], v27[2], v27[3], v27[4], v27[5], v27[6], v27[7], v27[8], v27[9], v27[10],
    v27[11],
    v27[12],
    v27[13],
    v27[14],
    v27[15],
    v27[16],
    v27[17],
    v27[18],
    v27[19],
    v27[20],
    v27[21],
    v27[22],
    v28[0],
    v28[1]);
  OUTLINED_FUNCTION_54_17(v11, 0xC0uLL);
  v12 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v12
    && !OUTLINED_FUNCTION_9_35(v12, (uint64_t)v27, (uint64_t)v34, (uint64_t)v33, (uint64_t)v32, (uint64_t)v35))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)v31, v2, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v29, (__int16 *)v1, v18, v19, v20, v21, v22);
    v24 = OUTLINED_FUNCTION_8_35(v23, (uint64_t)v28);
    OUTLINED_FUNCTION_23_31(v24, 0, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_57_16();
    kor_continuation_phrase();
    OUTLINED_FUNCTION_57_16();
    insert_kor_acc_phrases();
    OUTLINED_FUNCTION_129_6();
    if (!v25)
    {
      v26 = OUTLINED_FUNCTION_122_6();
      if (!v26)
        OUTLINED_FUNCTION_80_11(v26, 4, (uint64_t)v28);
    }
    insert_comma_phrase();
    *(_QWORD *)(v1 + 8) = v30;
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void kor_continuation_phrase()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  char v62[192];
  uint64_t v63;

  OUTLINED_FUNCTION_22_31();
  v63 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v0, v1, v2, v3, v4, v5, v6, v7, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57);
  OUTLINED_FUNCTION_30_28(v8, v9, v10, v11, v12, v13, v14, v15, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    0,
    0,
    v59,
    v60,
    v61[0],
    v61[1],
    v62[0]);
  v16 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v16)
  {
    v17 = OUTLINED_FUNCTION_9_35(v16, (uint64_t)&v33, (uint64_t)v61 + 7, (uint64_t)&v60 + 6, (uint64_t)&v59 + 4, (uint64_t)v62);
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_31_28(v17, (uint64_t)&v58, v18, v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_59_16(v24, (uint64_t)&v56, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_10_35(v31, v32, (uint64_t)&null_str_15);
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_132_5();
  OUTLINED_FUNCTION_78_12();
}

void insert_kor_acc_phrases()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];
  char v61[192];
  uint64_t v62;

  OUTLINED_FUNCTION_22_31();
  v62 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v3, v4, v5, v6, v7, v8, v9, v10, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56);
  OUTLINED_FUNCTION_30_28(v11, v12, v13, v14, v15, v16, v17, v18, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    0,
    0,
    v58,
    v59,
    v60[0],
    v60[1],
    v61[0]);
  v19 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v19
    && !OUTLINED_FUNCTION_9_35(v19, (uint64_t)&v32, (uint64_t)v60 + 7, (uint64_t)&v59 + 6, (uint64_t)&v58 + 4, (uint64_t)v61))
  {
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v57, v2, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_33_28(v0, (uint64_t)&v55, v1, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_10_35(v30, v31, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_57_16();
    set_acc_phrase_types();
    OUTLINED_FUNCTION_57_16();
    adjust_acc_phrase_types();
    OUTLINED_FUNCTION_57_16();
    mark_acc_phrases();
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_132_5();
  OUTLINED_FUNCTION_16_34();
}

void set_acc_phrase_types()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  size_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int16 *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  __int16 *v28;
  __int16 v29;
  uint64_t v30;
  __int16 *v31;
  __int16 v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _BYTE v81[184];
  uint64_t v82;
  _BYTE v83[16];
  _DWORD v84[2];
  __int16 v85[8];
  _BYTE v86[8];
  _BYTE v87[20];
  _BYTE v88[10];
  _BYTE v89[9];
  _BYTE v90[9];
  _BYTE v91[192];
  uint64_t v92;

  OUTLINED_FUNCTION_17_34();
  OUTLINED_FUNCTION_22_31();
  v92 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_70_13();
  v82 = 0;
  bzero(v81, 0xB8uLL);
  OUTLINED_FUNCTION_69_13();
  OUTLINED_FUNCTION_54_17(v3, v4);
  v5 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v5
    && !OUTLINED_FUNCTION_9_35(v5, (uint64_t)v81, (uint64_t)v90, (uint64_t)v89, (uint64_t)v88, (uint64_t)v91))
  {
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)v87, v2, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)v86, v1, v11, v12, v13, v14, v15);
    v16 = OUTLINED_FUNCTION_92_7();
    v84[1] = 65532;
    v84[0] = 65532;
    v17 = OUTLINED_FUNCTION_8_35(v16, (uint64_t)v83);
    v18 = OUTLINED_FUNCTION_8_35(v17, (uint64_t)&v82);
    v19 = 0;
    OUTLINED_FUNCTION_10_35(v18, v20, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_72_13();
    OUTLINED_FUNCTION_86_8();
    OUTLINED_FUNCTION_52_18();
    v21 = OUTLINED_FUNCTION_88_8();
    lpta_storep(v21, v22);
    OUTLINED_FUNCTION_87_8();
    OUTLINED_FUNCTION_52_18();
    OUTLINED_FUNCTION_126_6();
    v23 = OUTLINED_FUNCTION_88_8();
    v25 = forall_to_test(v23, v24, v85);
    LODWORD(v1) = 0;
    if (!(_DWORD)v25)
    {
LABEL_7:
      LODWORD(v1) = v19;
      OUTLINED_FUNCTION_39_24();
      OUTLINED_FUNCTION_34_27();
      if (!(_DWORD)v25)
      {
        v25 = OUTLINED_FUNCTION_4_35();
        v26 = v19;
        if (!(_DWORD)v25)
        {
LABEL_11:
          LODWORD(v1) = v26;
          OUTLINED_FUNCTION_80_11(v25, 4, v0 + 1336);
LABEL_12:
          OUTLINED_FUNCTION_2_36(5);
          v27 = OUTLINED_FUNCTION_67_13();
          move_i(v27, v28, v29);
          v30 = OUTLINED_FUNCTION_79_12();
          move_i(v30, v31, v32);
          OUTLINED_FUNCTION_104_7();
          v33 = (int)v1;
          if (!(_DWORD)v25)
          {
LABEL_13:
            LODWORD(v1) = v33;
            OUTLINED_FUNCTION_2_36(6);
            bspush_ca_boa(v0);
            is_kor_acc_phr();
            if (!(_DWORD)v25)
              LODWORD(v1) = 1;
          }
        }
      }
    }
    v80 = 8;
    v79 = 9;
    v78 = 10;
    v77 = 13;
    v76 = 14;
    LODWORD(v34) = (_DWORD)v1;
    while (2)
    {
      v35 = *(_QWORD *)(v0 + 104);
      if (v35)
      {
        v25 = OUTLINED_FUNCTION_5_35(v35);
        v1 = (__int16 *)v34;
      }
      else
      {
        v25 = OUTLINED_FUNCTION_21_32(v25, v34);
        v1 = 0;
      }
      switch((int)v25)
      {
        case 2:
          goto LABEL_12;
        case 3:
          goto LABEL_36;
        case 4:
          v26 = (int)v1;
          goto LABEL_11;
        case 5:
          v33 = (int)v1;
          goto LABEL_13;
        case 6:
          goto LABEL_21;
        case 7:
          OUTLINED_FUNCTION_35_27();
          lpta_rpta_loadp(v0, (uint64_t)v83, v0 + 1320);
          c_assvar(v0, (unsigned __int16 *)v84);
          HIWORD(v84[0]) = -1;
          mark_v(v0, 4, 11, (__int16 *)v84, 0);
          v34 = (uint64_t)v1;
          if ((_DWORD)v25)
            continue;
LABEL_21:
          OUTLINED_FUNCTION_127_6(v25, v34, v36, v37, v38, v39, v40, v41, v75, v76, v77, v78, v79, v80);
          bspush_ca_boa(v0);
          v42 = OUTLINED_FUNCTION_79_12();
          lpta_loadp_setscan_r(v42, v43);
          LODWORD(v34) = (_DWORD)v1;
          if (!(_DWORD)v25)
            goto LABEL_22;
          continue;
        case 8:
          OUTLINED_FUNCTION_6_35(v25, 11);
          OUTLINED_FUNCTION_63_13();
          is_kor_acc_phr_type_0();
          if (v50)
            goto LABEL_28;
          OUTLINED_FUNCTION_43_22();
          mark_i(v0, 4, 11, 0, 0);
          if (v51)
            goto LABEL_28;
          goto LABEL_36;
        case 9:
          OUTLINED_FUNCTION_35_27();
          goto LABEL_3;
        case 10:
LABEL_22:
          v25 = OUTLINED_FUNCTION_4_35();
          LODWORD(v34) = (_DWORD)v1;
          if (!(_DWORD)v25)
          {
            OUTLINED_FUNCTION_115_7(v25, (uint64_t)v1, v44, v45, v46, v47, v48, v49, v75, v76, v77, v78);
            *(_BYTE *)(v0 + 136) = 1;
            v25 = OUTLINED_FUNCTION_47_21();
            if ((_DWORD)v25)
              LODWORD(v34) = (_DWORD)v1;
            else
              LODWORD(v34) = 1;
          }
          continue;
        case 11:
LABEL_28:
          OUTLINED_FUNCTION_89_8();
          OUTLINED_FUNCTION_63_13();
          is_kor_acc_phr_type_1();
          if ((_DWORD)v25)
            goto LABEL_30;
          OUTLINED_FUNCTION_43_22();
          v52 = OUTLINED_FUNCTION_65_13();
          mark_i(v52, v53, v54, 1, v55);
          if ((_DWORD)v25)
            goto LABEL_30;
          goto LABEL_36;
        case 12:
LABEL_30:
          OUTLINED_FUNCTION_90_8(v25, v34, v36, v37, v38, v39, v40, v41, v75, v76, v77);
          OUTLINED_FUNCTION_63_13();
          is_kor_acc_phr_type_2();
          if (v56)
            goto LABEL_32;
          OUTLINED_FUNCTION_43_22();
          v57 = OUTLINED_FUNCTION_65_13();
          mark_i(v57, v58, v59, 2, v60);
          if (v61)
            goto LABEL_32;
          goto LABEL_36;
        case 13:
LABEL_32:
          starttest(v0, v76);
          OUTLINED_FUNCTION_63_13();
          is_kor_acc_phr_type_3();
          if (v62)
            goto LABEL_34;
          OUTLINED_FUNCTION_43_22();
          v63 = OUTLINED_FUNCTION_65_13();
          mark_i(v63, v64, v65, 3, v66);
          if (v67)
            goto LABEL_34;
          goto LABEL_36;
        case 14:
LABEL_34:
          OUTLINED_FUNCTION_2_36(3);
          OUTLINED_FUNCTION_63_13();
          is_kor_acc_phr_type_4();
          if (!v68)
          {
            OUTLINED_FUNCTION_43_22();
            v69 = OUTLINED_FUNCTION_65_13();
            mark_i(v69, v70, v71, 4, v72);
          }
LABEL_36:
          v73 = OUTLINED_FUNCTION_116_7();
          forto_adv_upto_r(v73, v74, 2, 15, 4, v0 + 1320);
          LODWORD(v34) = (_DWORD)v1;
          if (!(_DWORD)v25)
            goto LABEL_3;
          continue;
        case 15:
          v19 = (int)v1;
          goto LABEL_7;
        default:
          goto LABEL_3;
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

void adjust_acc_phrase_types()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  char v62[192];
  uint64_t v63;

  OUTLINED_FUNCTION_22_31();
  v63 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v0, v1, v2, v3, v4, v5, v6, v7, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57);
  OUTLINED_FUNCTION_30_28(v8, v9, v10, v11, v12, v13, v14, v15, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    0,
    0,
    v59,
    v60,
    v61[0],
    v61[1],
    v62[0]);
  v16 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v16)
  {
    v17 = OUTLINED_FUNCTION_9_35(v16, (uint64_t)&v33, (uint64_t)v61 + 7, (uint64_t)&v60 + 6, (uint64_t)&v59 + 4, (uint64_t)v62);
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_31_28(v17, (uint64_t)&v58, v18, v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_59_16(v24, (uint64_t)&v56, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_10_35(v31, v32, (uint64_t)&null_str_15);
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_132_5();
  OUTLINED_FUNCTION_78_12();
}

void mark_acc_phrases()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  _BYTE v46[184];
  _QWORD v47[4];
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[40];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  _QWORD v56[2];
  _BYTE v57[10];
  _BYTE v58[9];
  _BYTE v59[9];
  _BYTE v60[192];
  uint64_t v61;

  OUTLINED_FUNCTION_22_31();
  v61 = *MEMORY[0x24BDAC8D0];
  v56[0] = 0;
  v56[1] = 0;
  v55[0] = 0;
  v55[1] = 0;
  v53 = 0;
  v54 = 0;
  v51 = 0;
  v52 = 0;
  memset(v50, 0, sizeof(v50));
  v48 = 0;
  v49 = 0;
  memset(v47, 0, sizeof(v47));
  OUTLINED_FUNCTION_46_21(v3);
  OUTLINED_FUNCTION_69_13();
  OUTLINED_FUNCTION_54_17(v4, v5);
  v6 = OUTLINED_FUNCTION_53_17();
  if ((_DWORD)v6
    || OUTLINED_FUNCTION_9_35(v6, (uint64_t)v46, (uint64_t)v59, (uint64_t)v58, (uint64_t)v57, (uint64_t)v60))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_11_35(v0, (uint64_t)v56, v2, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_11_35(v0, (uint64_t)v55, v1, v12, v13, v14, v15, v16);
  v17 = OUTLINED_FUNCTION_131_5();
  v18 = OUTLINED_FUNCTION_8_35(v17, (uint64_t)&v51);
  *(_QWORD *)&v50[16] = 0;
  *(_QWORD *)&v50[24] = 0;
  *(_QWORD *)&v50[30] = 0;
  *(_DWORD *)v50 = -65532;
  OUTLINED_FUNCTION_8_35(v18, (uint64_t)&v48);
  v19 = OUTLINED_FUNCTION_119_6();
  v20 = OUTLINED_FUNCTION_8_35(v19, (uint64_t)v47);
  OUTLINED_FUNCTION_23_31(v20, 0, (uint64_t)&null_str_15);
  v54 = *(_QWORD *)(v0 + 3360);
  v52 = v54;
  v49 = v54;
  OUTLINED_FUNCTION_72_13();
  OUTLINED_FUNCTION_86_8();
  OUTLINED_FUNCTION_52_18();
  OUTLINED_FUNCTION_93_7();
  OUTLINED_FUNCTION_87_8();
  OUTLINED_FUNCTION_52_18();
  OUTLINED_FUNCTION_120_6();
  if (OUTLINED_FUNCTION_105_7())
    goto LABEL_22;
LABEL_5:
  OUTLINED_FUNCTION_39_24();
  OUTLINED_FUNCTION_26_30(v21, (uint64_t)&v53);
  if (v22)
    goto LABEL_22;
  if (OUTLINED_FUNCTION_4_35())
    goto LABEL_22;
  v23 = savetok(v0, (__int16 *)v50);
  if ((_DWORD)v23)
    goto LABEL_22;
LABEL_8:
  OUTLINED_FUNCTION_80_11(v23, 4, (uint64_t)&v51);
  while (2)
  {
    OUTLINED_FUNCTION_2_36(3);
    OUTLINED_FUNCTION_26_30(v24, (uint64_t)&v51);
    if (v25)
    {
LABEL_21:
      OUTLINED_FUNCTION_114_7();
      OUTLINED_FUNCTION_124_6(v40, v41, v42, 9, 4, (uint64_t)&v53);
      if (!v43)
        break;
      goto LABEL_22;
    }
LABEL_10:
    if (OUTLINED_FUNCTION_4_35())
      goto LABEL_22;
    OUTLINED_FUNCTION_95_7(5);
    *(_BYTE *)(v0 + 136) = 1;
    if (OUTLINED_FUNCTION_47_21())
      goto LABEL_22;
    *(_WORD *)&v50[2] = 11;
    if_testle_v_i(v0, (unsigned __int16 *)v50, 0, v26, v27, v28, v29, v30);
    if ((_DWORD)v31)
    {
LABEL_18:
      OUTLINED_FUNCTION_2_36(3);
      OUTLINED_FUNCTION_75_13(v39, (uint64_t)&v48);
      OUTLINED_FUNCTION_61_15();
      if (!OUTLINED_FUNCTION_48_20())
      {
        v23 = OUTLINED_FUNCTION_62_14();
        v38 = (__int16 *)&v53;
        if (!(_DWORD)v23)
        {
LABEL_20:
          OUTLINED_FUNCTION_91_8(v23, (unsigned __int16 *)&v48, v38);
          goto LABEL_21;
        }
      }
      goto LABEL_21;
    }
    OUTLINED_FUNCTION_75_13(v31, (uint64_t)&v48);
    OUTLINED_FUNCTION_61_15();
    if (!OUTLINED_FUNCTION_48_20() && !OUTLINED_FUNCTION_62_14())
      v49 = v54;
LABEL_16:
    OUTLINED_FUNCTION_2_36(8);
    OUTLINED_FUNCTION_75_13(v32, (uint64_t)&v51);
    lpta_mover(v0);
    OUTLINED_FUNCTION_93_7();
    insert_unpuncted_phrase(v0, (uint64_t)&v48, (__int16 *)v47, v33, v34, v35, v36, v37);
    v38 = (__int16 *)(v0 + 3352);
    if (!(_DWORD)v23)
      goto LABEL_20;
LABEL_22:
    v44 = *(_QWORD *)(v0 + 104);
    if (v44)
      OUTLINED_FUNCTION_5_35(v44);
    else
      OUTLINED_FUNCTION_18_33();
    OUTLINED_FUNCTION_99_7();
    v23 = 0;
    v38 = (__int16 *)(v0 + 3352);
    switch(v45)
    {
      case 1:
        continue;
      case 2:
        goto LABEL_21;
      case 3:
        goto LABEL_8;
      case 4:
        goto LABEL_10;
      case 5:
        goto LABEL_18;
      case 6:
        goto LABEL_16;
      case 7:
        goto LABEL_20;
      case 8:
        goto LABEL_5;
      default:
        goto LABEL_3;
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_94_7();
}

uint64_t insert_acc_phrases(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _BOOL8 v17;
  uint64_t v18[24];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[10];
  _BYTE v23[9];
  _BYTE v24[9];
  _BYTE v25[192];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v20 = 0;
  v21 = 0;
  OUTLINED_FUNCTION_0_36(a1, a2, a3, a4, a5, a6, a7, a8, v18[0], v18[1], v18[2], v18[3], v18[4], v18[5], v18[6], v18[7], v18[8], v18[9], v18[10],
    v18[11],
    v18[12],
    v18[13],
    v18[14],
    v18[15],
    v18[16],
    v18[17],
    v18[18],
    v18[19],
    v18[20],
    v18[21],
    v18[22],
    v18[23],
    v19);
  OUTLINED_FUNCTION_69_13();
  bzero(v25, v9);
  v10 = OUTLINED_FUNCTION_77_12();
  if ((_DWORD)v10
    || (v11 = OUTLINED_FUNCTION_9_35(v10, (uint64_t)v18, (uint64_t)v24, (uint64_t)v23, (uint64_t)v22, (uint64_t)v25),
        (_DWORD)v11))
  {
    OUTLINED_FUNCTION_3_36();
    return 94;
  }
  else
  {
    OUTLINED_FUNCTION_8_35(v11, (uint64_t)&v20);
    v13 = OUTLINED_FUNCTION_92_7();
    OUTLINED_FUNCTION_23_31(v13, 0, (uint64_t)&null_str_15);
    v21 = *(_QWORD *)(a1 + 3360);
    v19 = *(_QWORD *)(a1 + 1440);
    v14 = OUTLINED_FUNCTION_67_13();
    lpta_loadp_setscan_l(v14, v15);
    if (!v16)
    {
      v17 = OUTLINED_FUNCTION_122_6();
      if (!v17)
        OUTLINED_FUNCTION_80_11(v17, 2, (uint64_t)&v20);
    }
    insert_kor_acc_phrases();
    OUTLINED_FUNCTION_3_36();
    return 0;
  }
}

void is_kor_acc_phr_type_0()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int v30;
  uint64_t v31;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  char v75[192];
  uint64_t v76;

  OUTLINED_FUNCTION_96_7();
  v76 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5, v6, v7, v8, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71);
  OUTLINED_FUNCTION_29_28(v9, v10, v11, v12, v13, v14, v15, v16, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74[0],
    v74[1],
    v75[0]);
  v17 = OUTLINED_FUNCTION_82_9();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v47, (uint64_t)v74 + 7, (uint64_t)&v73 + 6, (uint64_t)&v72 + 4, (uint64_t)v75);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_19_33(v18, v19, v20, v21, v22, v23, v24, v25, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70);
      OUTLINED_FUNCTION_23_31(v26, 0, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_34_27();
      if ((_DWORD)v27)
      {
        OUTLINED_FUNCTION_2_36(3);
        OUTLINED_FUNCTION_26_30(v35, (uint64_t)&v70);
        if ((_DWORD)v36)
        {
          OUTLINED_FUNCTION_6_35(v36, 4);
          OUTLINED_FUNCTION_100_7(v37, v38, v39, v40, v41, v42, v43, v44, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57,
            v58,
            v59,
            v60,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66,
            v67,
            v68,
            v69,
            v70);
          if (v45)
          {
            OUTLINED_FUNCTION_2_36(5);
            OUTLINED_FUNCTION_26_30(v46, (uint64_t)&v70);
            if ((_DWORD)v27)
              goto LABEL_16;
            v28 = 4;
            v29 = 1;
            v30 = 5;
          }
          else
          {
            OUTLINED_FUNCTION_133_5();
            v30 = 12;
          }
        }
        else
        {
          OUTLINED_FUNCTION_133_5();
          v30 = 11;
        }
      }
      else
      {
        v28 = 4;
        v29 = 1;
        v30 = 13;
      }
      if (OUTLINED_FUNCTION_24_30(v27, v28, v29, v30) || OUTLINED_FUNCTION_4_35())
      {
        v31 = *(_QWORD *)(v0 + 104);
        if (v31)
          OUTLINED_FUNCTION_5_35(v31);
        else
          OUTLINED_FUNCTION_18_33();
        OUTLINED_FUNCTION_66_13();
        if (!(!v34 & v33))
          __asm { BR              X10 }
      }
    }
  }
LABEL_16:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_38_26();
}

void is_kor_acc_phr_type_1()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];
  char v57[192];
  uint64_t v58;

  OUTLINED_FUNCTION_96_7();
  v58 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5, v6, v7, v8, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53);
  OUTLINED_FUNCTION_29_28(v9, v10, v11, v12, v13, v14, v15, v16, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56[0],
    v56[1],
    v57[0]);
  v17 = OUTLINED_FUNCTION_82_9();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v29, (uint64_t)v56 + 7, (uint64_t)&v55 + 6, (uint64_t)&v54 + 4, (uint64_t)v57);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_19_33(v18, v19, v20, v21, v22, v23, v24, v25, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52);
      OUTLINED_FUNCTION_23_31(v26, 0, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_34_27();
      if (!(_DWORD)v27 && (OUTLINED_FUNCTION_24_30(v27, 4u, 1, 15) || OUTLINED_FUNCTION_4_35()))
      {
        v28 = *(_QWORD *)(v0 + 104);
        if (v28)
          OUTLINED_FUNCTION_5_35(v28);
        else
          OUTLINED_FUNCTION_18_33();
        OUTLINED_FUNCTION_55_16();
      }
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_38_26();
}

void is_kor_acc_phr_type_2()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int i;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];
  char v60[192];
  uint64_t v61;

  OUTLINED_FUNCTION_96_7();
  v61 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5, v6, v7, v8, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56);
  OUTLINED_FUNCTION_29_28(v9, v10, v11, v12, v13, v14, v15, v16, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59[0],
    v59[1],
    v60[0]);
  v17 = OUTLINED_FUNCTION_82_9();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v32, (uint64_t)v59 + 7, (uint64_t)&v58 + 6, (uint64_t)&v57 + 4, (uint64_t)v60);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_19_33(v18, v19, v20, v21, v22, v23, v24, v25, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42,
        v43,
        v44,
        v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55);
      OUTLINED_FUNCTION_23_31(v26, 0, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_34_27();
      if ((_DWORD)v27)
        goto LABEL_12;
      for (i = 6; OUTLINED_FUNCTION_24_30(v27, 4u, 1, i) || OUTLINED_FUNCTION_4_35(); i = 10)
      {
        v29 = *(_QWORD *)(v0 + 104);
        if (v29)
          v30 = OUTLINED_FUNCTION_5_35(v29);
        else
          v30 = OUTLINED_FUNCTION_18_33();
        if (v30 != 1)
        {
          OUTLINED_FUNCTION_55_16();
          break;
        }
LABEL_12:
        OUTLINED_FUNCTION_2_36(3);
        OUTLINED_FUNCTION_26_30(v31, (uint64_t)&v55);
        if ((_DWORD)v27)
          break;
      }
    }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_38_26();
}

void is_kor_acc_phr_type_3()
{
  _QWORD *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[2];
  char v63[192];
  uint64_t v64;

  OUTLINED_FUNCTION_96_7();
  v64 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5, v6, v7, v8, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59);
  OUTLINED_FUNCTION_29_28(v9, v10, v11, v12, v13, v14, v15, v16, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62[0],
    v62[1],
    v63[0]);
  v17 = OUTLINED_FUNCTION_82_9();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v35, (uint64_t)v62 + 7, (uint64_t)&v61 + 6, (uint64_t)&v60 + 4, (uint64_t)v63);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_19_33(v18, v19, v20, v21, v22, v23, v24, v25, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
        v46,
        v47,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58);
      v26 = 0;
      OUTLINED_FUNCTION_10_35(v27, v28, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_34_27();
      if ((_DWORD)v29)
        goto LABEL_9;
      if (OUTLINED_FUNCTION_76_13(v29, 4u, 1))
      {
        v30 = 0;
LABEL_14:
        while (1)
        {
          v26 = v30;
          while (1)
          {
            v33 = v0[13];
            if (v33)
            {
              v34 = OUTLINED_FUNCTION_5_35(v33);
            }
            else
            {
              v34 = vback(v0, v26);
              v26 = 0;
            }
            if (v34 != 4)
              break;
            OUTLINED_FUNCTION_35_27();
            if (!OUTLINED_FUNCTION_4_35())
              goto LABEL_3;
          }
          if (v34 != 1)
            break;
LABEL_9:
          v30 = v26;
          OUTLINED_FUNCTION_2_36(3);
          OUTLINED_FUNCTION_26_30(v31, (uint64_t)&v58);
          if ((_DWORD)v32)
            break;
          if (!OUTLINED_FUNCTION_24_30(v32, 4u, 1, 2))
          {
            OUTLINED_FUNCTION_118_7();
            if (testFldeq((uint64_t)v0, 4u, 2, 3))
              v30 = v26;
            else
              v30 = 1;
          }
        }
      }
      else
      {
        v30 = 0;
        if (OUTLINED_FUNCTION_4_35())
          goto LABEL_14;
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_38_26();
}

void is_kor_acc_phr_type_4()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _BOOL8 v28;
  unsigned int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[2];
  char v72[192];
  uint64_t v73;

  OUTLINED_FUNCTION_96_7();
  v73 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v1, v2, v3, v4, v5, v6, v7, v8, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68);
  OUTLINED_FUNCTION_29_28(v9, v10, v11, v12, v13, v14, v15, v16, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71[0],
    v71[1],
    v72[0]);
  v17 = OUTLINED_FUNCTION_82_9();
  if (!(_DWORD)v17)
  {
    v18 = OUTLINED_FUNCTION_9_35(v17, (uint64_t)&v44, (uint64_t)v71 + 7, (uint64_t)&v70 + 6, (uint64_t)&v69 + 4, (uint64_t)v72);
    if (!(_DWORD)v18)
    {
      OUTLINED_FUNCTION_19_33(v18, v19, v20, v21, v22, v23, v24, v25, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67);
      OUTLINED_FUNCTION_23_31(v26, 0, (uint64_t)&null_str_15);
      OUTLINED_FUNCTION_2_36(1);
      OUTLINED_FUNCTION_34_27();
      if (v27)
        goto LABEL_9;
      OUTLINED_FUNCTION_133_5();
      while (1)
      {
        v31 = 3;
LABEL_6:
        if (!OUTLINED_FUNCTION_24_30(v28, v29, v30, v31) && !OUTLINED_FUNCTION_4_35())
          break;
        do
        {
          v43 = *(_QWORD *)(v0 + 104);
          if (v43)
            v33 = OUTLINED_FUNCTION_5_35(v43);
          else
            v33 = OUTLINED_FUNCTION_18_33();
          if ((_DWORD)v33 == 1)
          {
LABEL_9:
            OUTLINED_FUNCTION_2_36(3);
            OUTLINED_FUNCTION_26_30(v32, (uint64_t)&v67);
            if (!(_DWORD)v33)
            {
              OUTLINED_FUNCTION_107_7();
              goto LABEL_6;
            }
          }
          else if ((_DWORD)v33 != 3)
          {
            goto LABEL_19;
          }
          OUTLINED_FUNCTION_6_35(v33, 4);
          OUTLINED_FUNCTION_100_7(v34, v35, v36, v37, v38, v39, v40, v41, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54,
            v55,
            v56,
            v57,
            v58,
            v59,
            v60,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66,
            v67);
          if ((_DWORD)v42)
            goto LABEL_19;
          v28 = OUTLINED_FUNCTION_24_30(v42, 4u, 1, 2);
        }
        while (v28);
        v29 = 4;
        v30 = 2;
      }
    }
  }
LABEL_19:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_38_26();
}

void is_kor_forgn_forgn_phr()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[2];
  char v82[192];
  uint64_t v83;

  OUTLINED_FUNCTION_17_34();
  v5 = v4;
  OUTLINED_FUNCTION_12_35();
  v83 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v6, v7, v8, v9, v10, v11, v12, v13, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75);
  OUTLINED_FUNCTION_45_22(v14, v15, v16, v17, v18, v19, v20, v21, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    0,
    0,
    0,
    0,
    0,
    0,
    v79,
    v80,
    v81[0],
    v81[1],
    v82[0]);
  v22 = OUTLINED_FUNCTION_83_9();
  if (!(_DWORD)v22
    && !OUTLINED_FUNCTION_9_35(v22, (uint64_t)&v51, (uint64_t)v81 + 7, (uint64_t)&v80 + 6, (uint64_t)&v79 + 4, (uint64_t)v82))
  {
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v78, v3, v23, v24, v25, v26, v27);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v77, v2, v28, v29, v30, v31, v32);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v76, v1, v33, v34, v35, v36, v37);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v74, v5, v38, v39, v40, v41, v42);
    v43 = 0;
    OUTLINED_FUNCTION_10_35(v44, v45, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    OUTLINED_FUNCTION_14_34();
    OUTLINED_FUNCTION_51_18();
    if (!v46)
    {
      v46 = OUTLINED_FUNCTION_24_30(v46, 4u, 2, 1);
      if (v46)
      {
        v43 = 0;
      }
      else
      {
        v46 = OUTLINED_FUNCTION_4_35();
        v43 = !v46;
      }
    }
    v47 = *(_QWORD *)(v0 + 104);
    if (v47)
      OUTLINED_FUNCTION_112_7(v47);
    else
      OUTLINED_FUNCTION_21_32(v46, v43);
    OUTLINED_FUNCTION_66_13();
    if (!(!v50 & v49))
      __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

void is_kor_verb_verb_phr()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t *v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[2];
  _QWORD v111[2];
  _BYTE v112[10];
  _BYTE v113[9];
  _BYTE v114[9];
  _BYTE v115[192];
  uint64_t v116;

  OUTLINED_FUNCTION_17_34();
  v5 = v4;
  OUTLINED_FUNCTION_12_35();
  v116 = *MEMORY[0x24BDAC8D0];
  v111[0] = 0;
  v111[1] = 0;
  v110[0] = 0;
  v110[1] = 0;
  v108 = 0;
  v109 = 0;
  v106 = 0;
  v107 = 0;
  v104 = 0;
  v105 = 0;
  bzero(&v81, 0xB8uLL);
  OUTLINED_FUNCTION_69_13();
  bzero(v115, v6);
  v7 = OUTLINED_FUNCTION_83_9();
  if (!(_DWORD)v7
    && !OUTLINED_FUNCTION_9_35(v7, (uint64_t)&v81, (uint64_t)v114, (uint64_t)v113, (uint64_t)v112, (uint64_t)v115))
  {
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)v111, v3, v8, v9, v10, v11, v12);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)v110, v2, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v108, v1, v18, v19, v20, v21, v22);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v106, v5, v23, v24, v25, v26, v27);
    v29 = OUTLINED_FUNCTION_8_35(v28, (uint64_t)&v104);
    v30 = 0;
    v32 = OUTLINED_FUNCTION_10_35(v29, v31, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_6_35((uint64_t)v32, 1);
    OUTLINED_FUNCTION_14_34();
    OUTLINED_FUNCTION_51_18();
    if (!(_DWORD)v33)
    {
      OUTLINED_FUNCTION_134_4();
      v33 = OUTLINED_FUNCTION_24_30(v34, v35, v36, 12);
      if ((_DWORD)v33)
      {
        v30 = 0;
      }
      else
      {
        v33 = OUTLINED_FUNCTION_4_35();
        v30 = v33 == 0;
      }
    }
    v37 = v30;
    v80 = 6;
    v79 = 10;
    do
    {
      while (2)
      {
        v38 = *(_QWORD *)(v0 + 104);
        if (v38)
        {
          OUTLINED_FUNCTION_5_35(v38);
          v40 = v39;
        }
        else
        {
          OUTLINED_FUNCTION_21_32(v33, v37);
          v40 = 0;
        }
        OUTLINED_FUNCTION_99_7();
        switch(v41)
        {
          case 0:
            v42 = OUTLINED_FUNCTION_63_13();
            starttest(v42, v43);
            v44 = OUTLINED_FUNCTION_125_6();
            lpta_loadp_setscan_l(v44, v45);
            if (v46)
              goto LABEL_14;
            v33 = testFldeq(v0, 3u, 1, 15);
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            v33 = OUTLINED_FUNCTION_4_35();
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            goto LABEL_27;
          case 1:
            OUTLINED_FUNCTION_35_27();
            goto LABEL_3;
          case 3:
LABEL_14:
            OUTLINED_FUNCTION_89_8();
            lpta_loadp_setscan_r(v0, (uint64_t)v111);
            if (v47)
              goto LABEL_3;
            v33 = OUTLINED_FUNCTION_113_7(v0, 3u, 1);
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            v33 = OUTLINED_FUNCTION_4_35();
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            *(_BYTE *)(v0 + 136) = 1;
            v33 = OUTLINED_FUNCTION_47_21();
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            OUTLINED_FUNCTION_103_7(v33, v40, v48, v49, v50, v51, v52, v53, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88,
              v89,
              v90,
              v91,
              v92,
              v93,
              v94,
              v95,
              v96,
              v97,
              v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110[0]);
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            OUTLINED_FUNCTION_121_6(v33, v40, v54, v55, v56, v57, v58, v59, v78, v79);
            v60 = OUTLINED_FUNCTION_81_11();
            v63 = (uint64_t *)&_MergedGlobals_23;
LABEL_24:
            v33 = test_string_s(v60, v61, v62, v63);
            break;
          case 4:
LABEL_27:
            v68 = OUTLINED_FUNCTION_88_8();
            savescptr(v68, v69, (uint64_t)&v104);
            OUTLINED_FUNCTION_103_7(v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88,
              v89,
              v90,
              v91,
              v92,
              v93,
              v94,
              v95,
              v96,
              v97,
              v98,
              v99,
              v100,
              v101,
              v102,
              v103,
              v104,
              v105,
              v106,
              v107,
              v108,
              v109,
              v110[0]);
            v37 = v40;
            if ((_DWORD)v33)
              continue;
            bspush_ca_scan(v0, v80);
            v64 = OUTLINED_FUNCTION_81_11();
            v67 = (uint64_t *)&_MergedGlobals_23;
LABEL_29:
            v33 = test_string_s(v64, v65, v66, v67);
            v37 = v40;
            if ((_DWORD)v33)
              continue;
LABEL_30:
            *(_BYTE *)(v0 + 136) = 1;
            v33 = OUTLINED_FUNCTION_47_21();
            break;
          case 5:
            bspush_ca_scan(v0, 8);
            v64 = OUTLINED_FUNCTION_81_11();
            v67 = (uint64_t *)&unk_2577524B0;
            goto LABEL_29;
          case 6:
            goto LABEL_30;
          case 7:
            v64 = v0;
            v65 = 1;
            v66 = 2;
            v67 = (uint64_t *)&unk_2577524B1;
            goto LABEL_29;
          case 9:
            bspush_ca_scan(v0, 12);
            v60 = OUTLINED_FUNCTION_81_11();
            v63 = (uint64_t *)&unk_2577524B0;
            goto LABEL_24;
          case 11:
            v60 = v0;
            v61 = 1;
            v62 = 2;
            v63 = (uint64_t *)&unk_2577524B1;
            goto LABEL_24;
          default:
            goto LABEL_3;
        }
        break;
      }
      v37 = v40;
    }
    while ((_DWORD)v33);
  }
LABEL_3:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

uint64_t is_kor_time_time_phr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 *a5)
{
  uint64_t v5;
  __int16 *v6;
  __int16 *v7;
  __int16 *v8;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[2];
  char v80[192];
  uint64_t v81;

  OUTLINED_FUNCTION_12_35();
  v81 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v10, v11, v12, v13, v14, v15, v16, v17, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73);
  OUTLINED_FUNCTION_45_22(v18, v19, v20, v21, v22, v23, v24, v25, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    0,
    0,
    0,
    0,
    0,
    0,
    v77,
    v78,
    v79[0],
    v79[1],
    v80[0]);
  v26 = OUTLINED_FUNCTION_83_9();
  if (!(_DWORD)v26
    && !OUTLINED_FUNCTION_9_35(v26, (uint64_t)&v49, (uint64_t)v79 + 7, (uint64_t)&v78 + 6, (uint64_t)&v77 + 4, (uint64_t)v80))
  {
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v76, v8, v27, v28, v29, v30, v31);
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v75, v7, v32, v33, v34, v35, v36);
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v74, v6, v37, v38, v39, v40, v41);
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v72, a5, v42, v43, v44, v45, v46);
    OUTLINED_FUNCTION_23_31(v47, 0, (uint64_t)&null_str_15);
  }
  OUTLINED_FUNCTION_3_36();
  return 94;
}

void is_kor_adv_adv_phr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 *a5)
{
  uint64_t v5;
  __int16 *v6;
  __int16 *v7;
  __int16 *v8;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[2];
  char v87[192];
  uint64_t v88;

  OUTLINED_FUNCTION_12_35();
  v88 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v10, v11, v12, v13, v14, v15, v16, v17, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80);
  OUTLINED_FUNCTION_45_22(v18, v19, v20, v21, v22, v23, v24, v25, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    0,
    0,
    0,
    0,
    0,
    0,
    v84,
    v85,
    v86[0],
    v86[1],
    v87[0]);
  v26 = OUTLINED_FUNCTION_83_9();
  if (!(_DWORD)v26
    && !OUTLINED_FUNCTION_9_35(v26, (uint64_t)&v56, (uint64_t)v86 + 7, (uint64_t)&v85 + 6, (uint64_t)&v84 + 4, (uint64_t)v87))
  {
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v83, v8, v27, v28, v29, v30, v31);
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v82, v7, v32, v33, v34, v35, v36);
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v81, v6, v37, v38, v39, v40, v41);
    OUTLINED_FUNCTION_11_35(v5, (uint64_t)&v79, a5, v42, v43, v44, v45, v46);
    OUTLINED_FUNCTION_10_35(v47, v48, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    OUTLINED_FUNCTION_14_34();
    OUTLINED_FUNCTION_51_18();
    if (!(_DWORD)v49 && !OUTLINED_FUNCTION_76_13(v49, 3u, 1))
      OUTLINED_FUNCTION_4_35();
    OUTLINED_FUNCTION_98_7();
    v52 = *(_QWORD *)(v5 + 104);
    if (v52)
      OUTLINED_FUNCTION_5_35(v52);
    else
      OUTLINED_FUNCTION_21_32(v50, v51);
    OUTLINED_FUNCTION_66_13();
    if (!(!v55 & v54))
      __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_94_7();
}

void is_kor_noun_noun_phr()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[2];
  char v86[192];
  uint64_t v87;

  OUTLINED_FUNCTION_17_34();
  v5 = v4;
  OUTLINED_FUNCTION_12_35();
  v87 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_0_36(v6, v7, v8, v9, v10, v11, v12, v13, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79);
  OUTLINED_FUNCTION_45_22(v14, v15, v16, v17, v18, v19, v20, v21, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    0,
    0,
    0,
    0,
    0,
    0,
    v83,
    v84,
    v85[0],
    v85[1],
    v86[0]);
  v22 = OUTLINED_FUNCTION_83_9();
  if (!(_DWORD)v22
    && !OUTLINED_FUNCTION_9_35(v22, (uint64_t)&v55, (uint64_t)v85 + 7, (uint64_t)&v84 + 6, (uint64_t)&v83 + 4, (uint64_t)v86))
  {
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v82, v3, v23, v24, v25, v26, v27);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v81, v2, v28, v29, v30, v31, v32);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v80, v1, v33, v34, v35, v36, v37);
    OUTLINED_FUNCTION_11_35(v0, (uint64_t)&v78, v5, v38, v39, v40, v41, v42);
    OUTLINED_FUNCTION_10_35(v43, v44, (uint64_t)&null_str_15);
    OUTLINED_FUNCTION_2_36(1);
    OUTLINED_FUNCTION_14_34();
    OUTLINED_FUNCTION_51_18();
    if (!v45)
    {
      OUTLINED_FUNCTION_134_4();
      if (!OUTLINED_FUNCTION_24_30(v46, v47, v48, 7))
        OUTLINED_FUNCTION_4_35();
    }
    OUTLINED_FUNCTION_98_7();
    v51 = *(_QWORD *)(v0 + 104);
    if (v51)
      OUTLINED_FUNCTION_112_7(v51);
    else
      OUTLINED_FUNCTION_21_32(v49, v50);
    OUTLINED_FUNCTION_66_13();
    if (!(!v54 & v53))
      __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_1_36();
}

void isit_kor_WH()
{
  uint64_t v0;
  __int16 *v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41[23];
  uint64_t v42[2];
  _QWORD v43[2];
  _QWORD v44[2];
  _QWORD v45[2];
  _BYTE v46[10];
  _BYTE v47[9];
  _BYTE v48[9];
  _BYTE v49[192];
  uint64_t v50;

  OUTLINED_FUNCTION_22_31();
  v50 = *MEMORY[0x24BDAC8D0];
  v45[0] = 0;
  v45[1] = 0;
  v44[0] = 0;
  v44[1] = 0;
  v43[0] = 0;
  v43[1] = 0;
  OUTLINED_FUNCTION_0_36(v2, v3, v4, v5, v6, v7, v8, v9, v41[0], v41[1], v41[2], v41[3], v41[4], v41[5], v41[6], v41[7], v41[8], v41[9], v41[10],
    v41[11],
    v41[12],
    v41[13],
    v41[14],
    v41[15],
    v41[16],
    v41[17],
    v41[18],
    v41[19],
    v41[20],
    v41[21],
    v41[22],
    v42[0],
    v42[1]);
  OUTLINED_FUNCTION_54_17(v10, 0xC0uLL);
  v11 = OUTLINED_FUNCTION_53_17();
  if (!(_DWORD)v11)
  {
    v12 = OUTLINED_FUNCTION_9_35(v11, (uint64_t)v41, (uint64_t)v48, (uint64_t)v47, (uint64_t)v46, (uint64_t)v49);
    if (!(_DWORD)v12)
    {
      OUTLINED_FUNCTION_31_28(v12, (uint64_t)v45, v13, v14, v15, v16, v17, v18);
      get_parm(v0, (uint64_t)v44, v1, (uint64_t)v49, v19, v20, v21, v22);
      OUTLINED_FUNCTION_92_7();
      v23 = OUTLINED_FUNCTION_79_12();
      v25 = push_ptr_init(v23, v24);
      OUTLINED_FUNCTION_23_31(v25, 0, (uint64_t)&null_str_15);
      v26 = OUTLINED_FUNCTION_72_13();
      OUTLINED_FUNCTION_75_13(v26, v0 + 1224);
      OUTLINED_FUNCTION_52_18();
      OUTLINED_FUNCTION_126_6();
      v27 = OUTLINED_FUNCTION_63_13();
      lpta_loadpn(v27, v28);
      OUTLINED_FUNCTION_52_18();
      v29 = OUTLINED_FUNCTION_79_12();
      lpta_storep(v29, v30);
      if (!forall_to_test(v0, (unsigned __int16 *)v43, (__int16 *)v42))
        goto LABEL_4;
      while (1)
      {
        do
        {
          v39 = *(_QWORD *)(v0 + 104);
          if (v39)
            v40 = OUTLINED_FUNCTION_5_35(v39);
          else
            v40 = OUTLINED_FUNCTION_18_33();
          if (v40 == 2)
            break;
          if (v40 == 3)
            goto LABEL_10;
          if (v40 != 4)
            goto LABEL_17;
LABEL_4:
          OUTLINED_FUNCTION_39_24();
          OUTLINED_FUNCTION_26_30(v31, (uint64_t)v43);
        }
        while (v32 || OUTLINED_FUNCTION_4_35());
        OUTLINED_FUNCTION_2_36(3);
        OUTLINED_FUNCTION_26_30(v33, (uint64_t)v43);
        if ((_DWORD)v34)
        {
LABEL_10:
          OUTLINED_FUNCTION_114_7();
          OUTLINED_FUNCTION_124_6(v35, v36, v37, 4, 4, (uint64_t)v43);
          if (!v38)
            break;
        }
        else if (!OUTLINED_FUNCTION_24_30(v34, 4u, 2, 5) && !OUTLINED_FUNCTION_4_35())
        {
          break;
        }
      }
    }
  }
LABEL_17:
  OUTLINED_FUNCTION_3_36();
  OUTLINED_FUNCTION_16_34();
}

void OUTLINED_FUNCTION_0_36(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  a32 = 0;
  a33 = 0;
  bzero(&a9, 0xB8uLL);
}

void OUTLINED_FUNCTION_2_36(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

void OUTLINED_FUNCTION_3_36()
{
  uint64_t v0;

  vretproc(v0);
}

BOOL OUTLINED_FUNCTION_4_35()
{
  return advance_tok();
}

uint64_t OUTLINED_FUNCTION_5_35@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

void OUTLINED_FUNCTION_6_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  starttest(v2, a2);
}

void OUTLINED_FUNCTION_7_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,int a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v46 - 96) = v45;
  a44 = 0;
  a45 = 0;
  a42 = 0;
  a43 = 0;
  a41 = 0;
  a38 = 0;
  a39 = 0;
  a36 = 0;
  a37 = 0;
  bzero(&a13, 0xB8uLL);
}

uint64_t OUTLINED_FUNCTION_8_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return push_ptr_init(v2, a2);
}

uint64_t OUTLINED_FUNCTION_9_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

void *OUTLINED_FUNCTION_10_35(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return fence_35(v3, 0, a3);
}

void OUTLINED_FUNCTION_11_35(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_13_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  uint64_t v43;
  __int16 *v44;

  get_parm(v43, (uint64_t)&a43, v44, 4294967290, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_14_34()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

void OUTLINED_FUNCTION_15_34()
{
  uint64_t v0;

  lpta_loadp_setscan_r(v0, v0 + 1320);
}

uint64_t OUTLINED_FUNCTION_18_33()
{
  _QWORD *v0;

  return vback(v0, 0);
}

void OUTLINED_FUNCTION_19_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;
  __int16 *v33;

  get_parm(v32, (uint64_t)&a32, v33, 4294967290, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_20_33()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_21_32(uint64_t a1, int a2)
{
  _QWORD *v2;

  return vback(v2, a2);
}

void *OUTLINED_FUNCTION_23_31(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return fence_35(v3, a2, a3);
}

BOOL OUTLINED_FUNCTION_24_30(uint64_t a1, unsigned int a2, int a3, int a4)
{
  uint64_t v4;

  return testFldeq(v4, a2, a3, a4);
}

void OUTLINED_FUNCTION_25_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;
  uint64_t v42;
  __int16 *v43;

  get_parm(v41, (uint64_t)&a41, v43, v42, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_26_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_27_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41)
{
  uint64_t v41;
  __int16 *v42;

  get_parm(v41, (uint64_t)&a41, v42, 4294967292, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_28_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  bzero(&a49, 0xC0uLL);
}

void OUTLINED_FUNCTION_29_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  bzero(&a38, 0xC0uLL);
}

void OUTLINED_FUNCTION_30_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  bzero(&a40, 0xC0uLL);
}

void OUTLINED_FUNCTION_31_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;

  get_parm(v8, a2, v9, 4294967290, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_32_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  a41 = 0;
  a42 = 0;
  a39 = 0;
  a40 = 0;
  a38 = 0;
  a35 = 0;
  a36 = 0;
  a33 = 0;
  a34 = 0;
  bzero(&a10, 0xB8uLL);
}

void OUTLINED_FUNCTION_33_28(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_34_27()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_35_27()
{
  uint64_t v0;

  return bspop_boa(v0);
}

void OUTLINED_FUNCTION_36_27()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  mark_i(v0, v3, v1, v2, 0);
}

void OUTLINED_FUNCTION_39_24()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t OUTLINED_FUNCTION_40_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

void OUTLINED_FUNCTION_41_22()
{
  uint64_t v0;
  unsigned __int16 *v1;
  __int16 *v2;

  copyvar(v0, v1, v2);
}

void OUTLINED_FUNCTION_42_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned __int16 a43)
{
  uint64_t v43;
  __int16 *v44;

  copyvar(v43, &a43, v44);
}

uint64_t OUTLINED_FUNCTION_43_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

void OUTLINED_FUNCTION_44_22()
{
  uint64_t v0;

  bzero((void *)(v0 - 248), 0xC0uLL);
}

void OUTLINED_FUNCTION_45_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  bzero(&a44, 0xC0uLL);
}

void OUTLINED_FUNCTION_46_21(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  bzero(va, 0xB8uLL);
}

uint64_t OUTLINED_FUNCTION_47_21()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  *(_QWORD *)(v1 + 128) = 0;
  return test_ptr(v1);
}

BOOL OUTLINED_FUNCTION_48_20()
{
  uint64_t v0;

  return compare_ptas(v0);
}

uint64_t OUTLINED_FUNCTION_49_19()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_51_18()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_52_18()
{
  uint64_t v0;

  lpta_mover(v0);
}

uint64_t OUTLINED_FUNCTION_53_17()
{
  int *v0;

  return setjmp(v0);
}

void OUTLINED_FUNCTION_54_17(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

void OUTLINED_FUNCTION_56_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;

  get_parm(v8, a2, v9, 4294967292, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_57_16()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_58_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,__int16 a41)
{
  uint64_t v41;
  __int16 v42;

  move_i(v41, &a41, v42);
}

void OUTLINED_FUNCTION_59_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, a2, v9, v10, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_60_16()
{
  _QWORD *v0;
  int v1;

  return vback(v0, v1);
}

uint64_t OUTLINED_FUNCTION_61_15()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

BOOL OUTLINED_FUNCTION_62_14()
{
  uint64_t v0;

  return testeq(v0);
}

uint64_t OUTLINED_FUNCTION_63_13()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_64_13()
{
  uint64_t v0;

  return testFldeq(v0, 1u, 4, 4);
}

uint64_t OUTLINED_FUNCTION_65_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_67_13()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_68_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  a45 = 0;
  a46 = 0;
  a43 = 0;
  a44 = 0;
  a41 = 0;
  a42 = 0;
  a39 = 0;
  a40 = 0;
  bzero(&a16, 0xB8uLL);
}

void OUTLINED_FUNCTION_71_13()
{
  uint64_t v0;

  mark_i(v0, 4, 11, 6, 0);
}

uint64_t OUTLINED_FUNCTION_72_13()
{
  uint64_t v0;

  return startloop(v0, 1);
}

void OUTLINED_FUNCTION_73_13()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_74_13()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_75_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return lpta_loadpn(v2, a2);
}

BOOL OUTLINED_FUNCTION_76_13(uint64_t a1, unsigned int a2, int a3)
{
  uint64_t v3;

  return testFldeq(v3, a2, a3, a2);
}

uint64_t OUTLINED_FUNCTION_77_12()
{
  int *v0;

  return setjmp(v0);
}

uint64_t OUTLINED_FUNCTION_79_12()
{
  uint64_t v0;

  return v0;
}

double OUTLINED_FUNCTION_80_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = savescptr(v3, a2, a3).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_81_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_82_9()
{
  int *v0;

  return setjmp(v0);
}

uint64_t OUTLINED_FUNCTION_83_9()
{
  int *v0;

  return setjmp(v0);
}

void OUTLINED_FUNCTION_84_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,__int16 a38,__int16 a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  *(_QWORD *)(v45 + 8) = a43;
  *(_QWORD *)(v44 + 8) = a41;
  *(_WORD *)(v43 + 2) = a39;
}

void OUTLINED_FUNCTION_85_9()
{
  uint64_t v0;

  mark_i(v0, 4, 11, 7, 0);
}

uint64_t OUTLINED_FUNCTION_86_8()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

uint64_t OUTLINED_FUNCTION_87_8()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

uint64_t OUTLINED_FUNCTION_88_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_89_8()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

void OUTLINED_FUNCTION_90_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  starttest(v11, a11);
}

void OUTLINED_FUNCTION_91_8(uint64_t a1, unsigned __int16 *a2, __int16 *a3)
{
  uint64_t v3;

  copyvar(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_92_7()
{
  uint64_t v0;
  uint64_t v1;

  return push_ptr_init(v0, v1);
}

void OUTLINED_FUNCTION_93_7()
{
  uint64_t v0;
  uint64_t v1;

  lpta_storep(v0, v1);
}

double OUTLINED_FUNCTION_95_7@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_97_7()
{
  int *v0;

  return setjmp(v0);
}

void OUTLINED_FUNCTION_100_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  lpta_loadp_setscan_r(v32, (uint64_t)&a32);
}

void OUTLINED_FUNCTION_101_7()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_102_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_103_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  lpta_loadp_setscan_l(v41, (uint64_t)&a41);
}

void OUTLINED_FUNCTION_104_7()
{
  set_adjacent_word_ptrs();
}

uint64_t OUTLINED_FUNCTION_105_7()
{
  uint64_t v0;
  unsigned __int16 *v1;
  __int16 *v2;

  return forall_to_test(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_106_7()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_rpta_loadp(v0, v1, v0 + 1336);
}

void OUTLINED_FUNCTION_108_7(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,__int16 a45,uint64_t a46,__int16 a47)
{
  uint64_t v47;

  is_kor_idiomatic_exp(v47, a2, a3, &a47, &a45);
}

void OUTLINED_FUNCTION_109_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,__int16 a38)
{
  uint64_t v38;

  move_i(v38, &a38, 2);
}

uint64_t OUTLINED_FUNCTION_110_7()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

uint64_t OUTLINED_FUNCTION_111_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_112_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

BOOL OUTLINED_FUNCTION_113_7(uint64_t a1, unsigned int a2, int a3)
{
  int v3;

  return testFldeq(a1, a2, a3, v3);
}

double OUTLINED_FUNCTION_115_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v12, a12).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_116_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_117_7()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

double OUTLINED_FUNCTION_118_7()
{
  uint64_t v0;

  return bspush_ca_scan_boa(v0);
}

uint64_t OUTLINED_FUNCTION_119_6()
{
  uint64_t v0;
  uint64_t v1;

  return push_ptr_init(v0, v1);
}

void OUTLINED_FUNCTION_120_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_storep(v0, v1);
}

double OUTLINED_FUNCTION_121_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v10, a10).n128_u64[0];
  return result;
}

BOOL OUTLINED_FUNCTION_122_6()
{
  _QWORD *v0;

  return advanc(v0);
}

void OUTLINED_FUNCTION_123_6()
{
  uint64_t v0;

  lpta_mover(v0);
}

void OUTLINED_FUNCTION_124_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;

  forto_adv_upto_r(v6, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_125_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_126_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_storep(v0, v1);
}

void OUTLINED_FUNCTION_127_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  starttest(v14, a14);
}

BOOL OUTLINED_FUNCTION_128_6()
{
  uint64_t v0;

  return testneq(v0);
}

void OUTLINED_FUNCTION_129_6()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

void OUTLINED_FUNCTION_130_6()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

uint64_t OUTLINED_FUNCTION_131_5()
{
  uint64_t v0;
  uint64_t v1;

  return push_ptr_init(v0, v1);
}

uint64_t OUTLINED_FUNCTION_132_5()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_135_4(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;

  return testFldeq(a1, a2, v2, v3);
}

void *fence_36(uint64_t a1, int a2, uint64_t a3)
{
  void *result;
  uint64_t i;

  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = a2;
  result = memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
  for (i = 0; a2 != i; ++i)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 248) + i) = *(_BYTE *)(a3 + i);
    *(_BYTE *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a3 + i)) = i;
  }
  return result;
}

void insert_kor_spr_phone(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  unsigned int v94;
  unsigned int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  unsigned int v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  int v119;
  int v120;
  uint64_t v121;
  unsigned int v122;
  unsigned int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  int v135;
  int v136;
  uint64_t v137;
  unsigned int v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  uint64_t v157;
  unsigned int v158;
  unsigned int v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  int v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  int v171;
  uint64_t v172;
  unsigned int v173;
  unsigned int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t v185;
  int v186;
  int v187;
  int v188;
  uint64_t v189;
  unsigned int v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  unsigned int v202;
  unsigned int v203;
  int v204;
  uint64_t v205;
  unsigned int v206;
  unsigned int v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char v217;
  uint64_t v218;
  int v219;
  int v220;
  uint64_t v221;
  unsigned int v222;
  unsigned int v223;
  uint64_t v224;
  char v225;
  uint64_t v226;
  int v227;
  int v228;
  uint64_t v229;
  unsigned int v230;
  unsigned int v231;
  uint64_t v232;
  char v233;
  uint64_t v234;
  int v235;
  int v236;
  uint64_t v237;
  unsigned int v238;
  unsigned int v239;
  uint64_t v240;
  char v241;
  uint64_t v242;
  int v243;
  int v244;
  uint64_t v245;
  unsigned int v246;
  unsigned int v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  char v257;
  uint64_t v258;
  int v259;
  int v260;
  uint64_t v261;
  unsigned int v262;
  unsigned int v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  int v267;
  int v268;
  uint64_t v269;
  unsigned int v270;
  unsigned int v271;
  uint64_t v272;
  char v273;
  uint64_t v274;
  int v275;
  int v276;
  uint64_t v277;
  unsigned int v278;
  unsigned int v279;
  uint64_t v280;
  char v281;
  uint64_t v282;
  int v283;
  int v284;
  uint64_t v285;
  unsigned int v286;
  unsigned int v287;
  uint64_t v288;
  char v289;
  uint64_t v290;
  int v291;
  int v292;
  uint64_t v293;
  unsigned int v294;
  unsigned int v295;
  uint64_t v296;
  char v297;
  uint64_t v298;
  int v299;
  int v300;
  uint64_t v301;
  unsigned int v302;
  unsigned int v303;
  uint64_t v304;
  char v305;
  uint64_t v306;
  int v307;
  int v308;
  uint64_t v309;
  unsigned int v310;
  unsigned int v311;
  uint64_t v312;
  char v313;
  uint64_t v314;
  int v315;
  int v316;
  uint64_t v317;
  unsigned int v318;
  unsigned int v319;
  uint64_t v320;
  char v321;
  uint64_t v322;
  int v323;
  int v324;
  uint64_t v325;
  unsigned int v326;
  unsigned int v327;
  uint64_t v328;
  char v329;
  uint64_t v330;
  int v331;
  int v332;
  uint64_t v333;
  unsigned int v334;
  unsigned int v335;
  uint64_t v336;
  char v337;
  uint64_t v338;
  int v339;
  int v340;
  uint64_t v341;
  unsigned int v342;
  unsigned int v343;
  uint64_t v344;
  char v345;
  uint64_t v346;
  int v347;
  int v348;
  uint64_t v349;
  unsigned int v350;
  unsigned int v351;
  uint64_t v352;
  char v353;
  uint64_t v354;
  int v355;
  int v356;
  int v357;
  uint64_t v358;
  unsigned int v359;
  unsigned int v360;
  uint64_t v361;
  char v362;
  uint64_t v363;
  int v364;
  int v365;
  uint64_t v366;
  unsigned int v367;
  unsigned int v368;
  uint64_t *v369;
  uint64_t v370;
  unsigned int v371;
  unsigned int v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  void *v385;
  uint64_t v386;
  unsigned int v387;
  unsigned int v388;
  uint64_t *v389;
  int v390;
  uint64_t v391;
  unsigned int v392;
  unsigned int v393;
  uint64_t *v394;
  uint64_t v395;
  unsigned int v396;
  unsigned int v397;
  uint64_t *v398;
  int v399;
  uint64_t v400;
  unsigned int v401;
  unsigned int v402;
  uint64_t *v403;
  int v404;
  int v405;
  int v406;
  uint64_t v407;
  unsigned int v408;
  unsigned int v409;
  uint64_t *v410;
  uint64_t v411;
  unsigned int v412;
  unsigned int v413;
  uint64_t *v414;
  int v415;
  uint64_t v416;
  unsigned int v417;
  int v418;
  int v419;
  int v420;
  uint64_t v421;
  uint64_t v422;
  unsigned int v423;
  unsigned int v424;
  uint64_t *v425;
  uint64_t v426;
  unsigned int v427;
  unsigned int v428;
  uint64_t *v429;
  uint64_t v430;
  unsigned int v431;
  unsigned int v432;
  uint64_t *v433;
  uint64_t v434;
  unsigned int v435;
  unsigned int v436;
  uint64_t *v437;
  int v438;
  uint64_t v439;
  unsigned int v440;
  int v441;
  int v442;
  uint64_t v443;
  unsigned int v444;
  int v445;
  int v446;
  uint64_t v447;
  unsigned int v448;
  int v449;
  int v450;
  int v451;
  int v452;
  int v453;
  int v454;
  uint64_t v455;
  unsigned int v456;
  unsigned int v457;
  uint64_t *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  _QWORD v552[2];
  _BYTE v553[10];
  _BYTE v554[9];
  _BYTE v555[9];
  _BYTE v556[192];
  uint64_t v557;

  v557 = *MEMORY[0x24BDAC8D0];
  v552[0] = 0;
  v552[1] = 0;
  v550 = 0;
  v551 = 0;
  v548 = 0;
  v549 = 0;
  bzero(&v525, 0xB8uLL);
  OUTLINED_FUNCTION_50_20(v2, 0xC0uLL);
  v3 = OUTLINED_FUNCTION_51_19();
  if ((_DWORD)v3)
    goto LABEL_3;
  v4 = OUTLINED_FUNCTION_49_20(v3, (uint64_t)&v525, (uint64_t)v555, (uint64_t)v554, (uint64_t)v553, (uint64_t)v556);
  if ((_DWORD)v4)
    goto LABEL_3;
  OUTLINED_FUNCTION_29_29(v4, v5, v6, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_36_28(v12, (uint64_t)&v550, v13, v14, v15, v16, v17, v18);
  v19 = push_ptr_init(a1, (uint64_t)&v548);
  OUTLINED_FUNCTION_42_23(v19, 0, (uint64_t)&null_str_16);
  v20 = OUTLINED_FUNCTION_37_28();
  OUTLINED_FUNCTION_8_36(v20, v21);
  if (!v22 && !test_string_s(a1, 1u, 2u, (uint64_t *)&unk_2577524DE))
  {
    *(_BYTE *)(a1 + 136) = 1;
    *(_QWORD *)(a1 + 112) = v551;
    *(_QWORD *)(a1 + 128) = 0;
    v23 = test_ptr(a1);
    if (!(_DWORD)v23)
    {
      OUTLINED_FUNCTION_34_28(v23, v24, v25, v26, v27, v28, v29, v30, v467, v469, v471, v473, v475, v477, v479, v481, v483, v485, v487,
        v489,
        v491,
        v493,
        v495,
        v497,
        v499,
        v501,
        v503,
        v505,
        v507,
        v509,
        v511,
        v513,
        v515,
        v517,
        v519,
        v521,
        v523,
        v525,
        v526,
        v527,
        v528,
        v529,
        v530,
        v531,
        v532,
        v533,
        v534,
        v535,
        v536,
        v537,
        v538,
        v539,
        v540,
        v541,
        v542,
        v543,
        v544,
        v545,
        v546,
        v547,
        v548,
        v549,
        v550);
      OUTLINED_FUNCTION_11_36(a1, 2, 1, (uint64_t)&_MergedGlobals_24);
      if (!v31)
        goto LABEL_3;
    }
  }
  v524 = 5;
  v522 = 6;
  v520 = 7;
  v518 = 12;
  v516 = 19;
  v514 = 20;
  v512 = 21;
  v510 = 26;
  v508 = 33;
  v506 = 34;
  v504 = 35;
  v502 = 40;
  v500 = 45;
  v498 = 48;
  v496 = 51;
  v494 = 53;
  v492 = 54;
  v490 = 55;
  v488 = 60;
  v486 = 64;
  v484 = 65;
  v482 = 70;
  v480 = 71;
  v478 = 76;
  v476 = 77;
  v474 = 98;
  v472 = 99;
  v470 = 102;
  v468 = 103;
  while (2)
  {
    OUTLINED_FUNCTION_2_37();
    if (!v32)
    {
      v33 = OUTLINED_FUNCTION_12_36();
      v36 = test_string_s(v33, v34, v35, (uint64_t *)&unk_2577524E0);
      if (!(_DWORD)v36
        && !OUTLINED_FUNCTION_3_37(v36, v37, v38, v39, v40, v41, v42, v43, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v44 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v44, v45, v46, (uint64_t)&unk_2577524B4);
        if (!v47)
          goto LABEL_3;
      }
    }
LABEL_13:
    OUTLINED_FUNCTION_2_37();
    if (!v48)
    {
      v49 = OUTLINED_FUNCTION_6_36();
      if (!test_string_s(v49, v50, v51, (uint64_t *)&unk_2577524B5))
      {
        starttest(a1, v524);
        OUTLINED_FUNCTION_24_31();
        if (v405)
        {
LABEL_133:
          OUTLINED_FUNCTION_0_37();
          v382 = OUTLINED_FUNCTION_1_37();
          v385 = &unk_2577524BA;
          break;
        }
LABEL_138:
        OUTLINED_FUNCTION_35_28(a1, v522, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
          v490,
          v492,
          v494,
          v496,
          v498,
          v500,
          v502,
          v504,
          v506,
          v508,
          v510,
          v512,
          v514,
          v516,
          v518,
          v520,
          v522,
          v524,
          v525,
          v526,
          v527,
          v528,
          v529,
          v530,
          v531,
          v532,
          v533,
          v534,
          v535,
          v536,
          v537,
          v538,
          v539,
          v540,
          v541,
          v542,
          v543,
          v544,
          v545,
          v546,
          v547,
          v548);
        bspush_ca_scan(a1, v520);
        if (!OUTLINED_FUNCTION_22_32() && !OUTLINED_FUNCTION_20_34())
        {
LABEL_140:
          OUTLINED_FUNCTION_8_36(a1, (uint64_t)&v548);
          if (v415 || OUTLINED_FUNCTION_20_34())
            goto LABEL_147;
          bspush_ca_scan(a1, v518);
          v416 = OUTLINED_FUNCTION_25_31();
LABEL_143:
          if (testFldeq(v416, v417, v418, v419))
            goto LABEL_147;
LABEL_144:
          if (!OUTLINED_FUNCTION_20_34())
          {
            OUTLINED_FUNCTION_0_37();
            v382 = OUTLINED_FUNCTION_1_37();
            v385 = &unk_2577524B9;
            break;
          }
        }
        goto LABEL_147;
      }
    }
LABEL_15:
    OUTLINED_FUNCTION_2_37();
    if (!v52)
    {
      v53 = OUTLINED_FUNCTION_6_36();
      if (!test_string_s(v53, v54, v55, (uint64_t *)&unk_2577524BB))
      {
        OUTLINED_FUNCTION_0_37();
        v56 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v56, v57, v58, (uint64_t)&unk_2577524B9);
        if (!v59)
          goto LABEL_3;
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_2_37();
    if (!v60)
    {
      v61 = OUTLINED_FUNCTION_12_36();
      v64 = test_string_s(v61, v62, v63, (uint64_t *)&unk_2577524E4);
      if (!(_DWORD)v64
        && !OUTLINED_FUNCTION_3_37(v64, v65, v66, v67, v68, v69, v70, v71, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v72 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v72, v73, v74, (uint64_t)&unk_2577524BC);
        if (!v75)
          goto LABEL_3;
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_2_37();
    if (!v76)
    {
      v77 = OUTLINED_FUNCTION_12_36();
      v80 = test_string_s(v77, v78, v79, (uint64_t *)&unk_2577524E6);
      if (!(_DWORD)v80
        && !OUTLINED_FUNCTION_3_37(v80, v81, v82, v83, v84, v85, v86, v87, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v88 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v88, v89, v90, (uint64_t)&unk_2577524BD);
        if (!v91)
          goto LABEL_3;
      }
    }
LABEL_26:
    OUTLINED_FUNCTION_2_37();
    if (!v92)
    {
      v93 = OUTLINED_FUNCTION_6_36();
      v96 = test_string_s(v93, v94, v95, (uint64_t *)&unk_2577524BE);
      if (!(_DWORD)v96
        && !OUTLINED_FUNCTION_3_37(v96, v97, v98, v99, v100, v101, v102, v103, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        starttest(a1, v516);
        OUTLINED_FUNCTION_24_31();
        if (v399)
        {
LABEL_128:
          OUTLINED_FUNCTION_0_37();
          v382 = OUTLINED_FUNCTION_1_37();
          v385 = &unk_2577524C0;
          break;
        }
LABEL_227:
        OUTLINED_FUNCTION_35_28(a1, v514, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
          v490,
          v492,
          v494,
          v496,
          v498,
          v500,
          v502,
          v504,
          v506,
          v508,
          v510,
          v512,
          v514,
          v516,
          v518,
          v520,
          v522,
          v524,
          v525,
          v526,
          v527,
          v528,
          v529,
          v530,
          v531,
          v532,
          v533,
          v534,
          v535,
          v536,
          v537,
          v538,
          v539,
          v540,
          v541,
          v542,
          v543,
          v544,
          v545,
          v546,
          v547,
          v548);
        bspush_ca_scan(a1, v512);
        if (!OUTLINED_FUNCTION_22_32() && !OUTLINED_FUNCTION_20_34())
        {
LABEL_229:
          OUTLINED_FUNCTION_8_36(a1, (uint64_t)&v548);
          if (v453 || OUTLINED_FUNCTION_20_34())
            goto LABEL_147;
          bspush_ca_scan(a1, v510);
          v443 = OUTLINED_FUNCTION_25_31();
LABEL_179:
          if (testFldeq(v443, v444, v445, v446))
            goto LABEL_147;
LABEL_180:
          if (!OUTLINED_FUNCTION_20_34())
          {
            OUTLINED_FUNCTION_0_37();
            v382 = OUTLINED_FUNCTION_1_37();
            v385 = &unk_2577524BF;
            break;
          }
        }
        goto LABEL_147;
      }
    }
LABEL_29:
    OUTLINED_FUNCTION_2_37();
    if (!v104)
    {
      v105 = OUTLINED_FUNCTION_6_36();
      v108 = test_string_s(v105, v106, v107, (uint64_t *)&unk_2577524C1);
      if (!(_DWORD)v108
        && !OUTLINED_FUNCTION_3_37(v108, v109, v110, v111, v112, v113, v114, v115, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v116 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v116, v117, v118, (uint64_t)&unk_2577524BF);
        if (!v119)
          goto LABEL_3;
      }
    }
LABEL_33:
    OUTLINED_FUNCTION_2_37();
    if (!v120)
    {
      v121 = OUTLINED_FUNCTION_12_36();
      v124 = test_string_s(v121, v122, v123, (uint64_t *)&unk_2577524E8);
      if (!(_DWORD)v124
        && !OUTLINED_FUNCTION_3_37(v124, v125, v126, v127, v128, v129, v130, v131, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v132 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v132, v133, v134, (uint64_t)&unk_2577524C2);
        if (!v135)
          goto LABEL_3;
      }
    }
LABEL_37:
    OUTLINED_FUNCTION_2_37();
    if (!v136)
    {
      v137 = OUTLINED_FUNCTION_12_36();
      v140 = test_string_s(v137, v138, v139, (uint64_t *)&unk_2577524EA);
      if (!(_DWORD)v140
        && !OUTLINED_FUNCTION_3_37(v140, v141, v142, v143, v144, v145, v146, v147, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v148 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v148, v149, v150, (uint64_t)&unk_2577524C3);
        if (!v151)
          goto LABEL_3;
      }
    }
LABEL_41:
    OUTLINED_FUNCTION_2_37();
    if (!v152)
    {
      v153 = OUTLINED_FUNCTION_6_36();
      if (!test_string_s(v153, v154, v155, (uint64_t *)&unk_2577524C4))
      {
        starttest(a1, v508);
        OUTLINED_FUNCTION_24_31();
        if (v390)
        {
LABEL_124:
          OUTLINED_FUNCTION_0_37();
          v382 = OUTLINED_FUNCTION_1_37();
          v385 = &unk_2577524BB;
          break;
        }
LABEL_222:
        OUTLINED_FUNCTION_35_28(a1, v506, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
          v490,
          v492,
          v494,
          v496,
          v498,
          v500,
          v502,
          v504,
          v506,
          v508,
          v510,
          v512,
          v514,
          v516,
          v518,
          v520,
          v522,
          v524,
          v525,
          v526,
          v527,
          v528,
          v529,
          v530,
          v531,
          v532,
          v533,
          v534,
          v535,
          v536,
          v537,
          v538,
          v539,
          v540,
          v541,
          v542,
          v543,
          v544,
          v545,
          v546,
          v547,
          v548);
        bspush_ca_scan(a1, v504);
        if (!OUTLINED_FUNCTION_22_32() && !OUTLINED_FUNCTION_20_34())
        {
LABEL_224:
          OUTLINED_FUNCTION_8_36(a1, (uint64_t)&v548);
          if (v452 || OUTLINED_FUNCTION_20_34())
            goto LABEL_147;
          bspush_ca_scan(a1, v502);
          v447 = OUTLINED_FUNCTION_25_31();
LABEL_183:
          if (testFldeq(v447, v448, v449, v450))
            goto LABEL_147;
LABEL_184:
          if (!OUTLINED_FUNCTION_20_34())
          {
            OUTLINED_FUNCTION_0_37();
            v382 = OUTLINED_FUNCTION_1_37();
            v385 = &unk_2577524C5;
            break;
          }
        }
        goto LABEL_147;
      }
    }
LABEL_43:
    OUTLINED_FUNCTION_2_37();
    if (!v156)
    {
      v157 = OUTLINED_FUNCTION_6_36();
      if (!test_string_s(v157, v158, v159, (uint64_t *)&unk_2577524C6))
      {
        OUTLINED_FUNCTION_0_37();
        v160 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v160, v161, v162, (uint64_t)&unk_2577524C5);
        if (!v163)
          goto LABEL_3;
      }
    }
LABEL_46:
    v164 = OUTLINED_FUNCTION_48_21();
    starttest(v164, v165);
    OUTLINED_FUNCTION_2_37();
    if (!v166)
    {
      bspush_ca_scan(a1, v500);
      v370 = OUTLINED_FUNCTION_12_36();
      v373 = (uint64_t *)&unk_2577524EC;
LABEL_119:
      v374 = test_string_s(v370, v371, v372, v373);
      if ((_DWORD)v374)
        goto LABEL_147;
LABEL_120:
      if (!OUTLINED_FUNCTION_3_37(v374, v375, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524C1;
        break;
      }
      goto LABEL_147;
    }
LABEL_47:
    starttest(a1, 47);
    OUTLINED_FUNCTION_2_37();
    if (!v167)
    {
      bspush_ca_scan(a1, v498);
      v386 = OUTLINED_FUNCTION_12_36();
      v389 = (uint64_t *)&unk_2577524F0;
LABEL_188:
      v374 = test_string_s(v386, v387, v388, v389);
      if ((_DWORD)v374)
        goto LABEL_147;
LABEL_189:
      if (!OUTLINED_FUNCTION_3_37(v374, v375, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524C7;
        break;
      }
      goto LABEL_147;
    }
LABEL_48:
    v168 = OUTLINED_FUNCTION_37_28();
    starttest(v168, v169);
    OUTLINED_FUNCTION_2_37();
    if (!v170)
    {
      bspush_ca_scan(a1, v496);
      v391 = OUTLINED_FUNCTION_6_36();
      v394 = (uint64_t *)&unk_2577524C8;
LABEL_192:
      v374 = test_string_s(v391, v392, v393, v394);
      if ((_DWORD)v374)
        goto LABEL_147;
LABEL_193:
      if (OUTLINED_FUNCTION_3_37(v374, v375, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                           v490,
                           v492,
                           v494,
                           v496,
                           v498,
                           v500,
                           v502,
                           v504,
                           v506,
                           v508,
                           v510,
                           v512,
                           v514,
                           v516,
                           v518,
                           v520,
                           v522,
                           v524,
                           v525,
                           v526,
                           v527,
                           v528,
                           v529,
                           v530,
                           v531,
                           v532,
                           v533,
                           v534,
                           v535,
                           v536,
                           v537,
                           v538,
                           v539,
                           v540,
                           v541,
                           v542,
                           v543,
                           v544,
                           v545,
                           v546,
                           v547,
                           v548,
                           v549,
                           v550))
        goto LABEL_147;
      starttest(a1, v494);
      OUTLINED_FUNCTION_24_31();
      if (v451)
      {
LABEL_195:
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524C6;
        break;
      }
LABEL_232:
      OUTLINED_FUNCTION_35_28(a1, v492, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
        v490,
        v492,
        v494,
        v496,
        v498,
        v500,
        v502,
        v504,
        v506,
        v508,
        v510,
        v512,
        v514,
        v516,
        v518,
        v520,
        v522,
        v524,
        v525,
        v526,
        v527,
        v528,
        v529,
        v530,
        v531,
        v532,
        v533,
        v534,
        v535,
        v536,
        v537,
        v538,
        v539,
        v540,
        v541,
        v542,
        v543,
        v544,
        v545,
        v546,
        v547,
        v548);
      bspush_ca_scan(a1, v490);
      if (OUTLINED_FUNCTION_22_32() || OUTLINED_FUNCTION_20_34())
        goto LABEL_147;
LABEL_174:
      OUTLINED_FUNCTION_8_36(a1, (uint64_t)&v548);
      if (v438 || OUTLINED_FUNCTION_20_34())
        goto LABEL_147;
      bspush_ca_scan(a1, v488);
      v439 = OUTLINED_FUNCTION_25_31();
LABEL_197:
      if (testFldeq(v439, v440, v441, v442))
        goto LABEL_147;
LABEL_198:
      if (OUTLINED_FUNCTION_20_34())
        goto LABEL_147;
LABEL_205:
      OUTLINED_FUNCTION_0_37();
      v382 = OUTLINED_FUNCTION_1_37();
      v385 = &unk_2577524C9;
      break;
    }
LABEL_49:
    OUTLINED_FUNCTION_2_37();
    if (!v171)
    {
      v172 = OUTLINED_FUNCTION_12_36();
      v175 = test_string_s(v172, v173, v174, (uint64_t *)&unk_2577524F4);
      if (!(_DWORD)v175
        && !OUTLINED_FUNCTION_3_37(v175, v176, v177, v178, v179, v180, v181, v182, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                            v490,
                            v492,
                            v494,
                            v496,
                            v498,
                            v500,
                            v502,
                            v504,
                            v506,
                            v508,
                            v510,
                            v512,
                            v514,
                            v516,
                            v518,
                            v520,
                            v522,
                            v524,
                            v525,
                            v526,
                            v527,
                            v528,
                            v529,
                            v530,
                            v531,
                            v532,
                            v533,
                            v534,
                            v535,
                            v536,
                            v537,
                            v538,
                            v539,
                            v540,
                            v541,
                            v542,
                            v543,
                            v544,
                            v545,
                            v546,
                            v547,
                            v548,
                            v549,
                            v550))
      {
        OUTLINED_FUNCTION_0_37();
        v183 = OUTLINED_FUNCTION_1_37();
        OUTLINED_FUNCTION_11_36(v183, v184, v185, (uint64_t)&unk_2577524C6);
        if (!v186)
          goto LABEL_3;
      }
    }
LABEL_53:
    starttest(a1, v486);
    OUTLINED_FUNCTION_2_37();
    if (!v187)
    {
      bspush_ca_scan(a1, v484);
      v395 = OUTLINED_FUNCTION_6_36();
      v398 = (uint64_t *)&unk_2577524CA;
LABEL_203:
      v374 = test_string_s(v395, v396, v397, v398);
      if ((_DWORD)v374)
        goto LABEL_147;
LABEL_204:
      if (OUTLINED_FUNCTION_3_37(v374, v375, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                           v490,
                           v492,
                           v494,
                           v496,
                           v498,
                           v500,
                           v502,
                           v504,
                           v506,
                           v508,
                           v510,
                           v512,
                           v514,
                           v516,
                           v518,
                           v520,
                           v522,
                           v524,
                           v525,
                           v526,
                           v527,
                           v528,
                           v529,
                           v530,
                           v531,
                           v532,
                           v533,
                           v534,
                           v535,
                           v536,
                           v537,
                           v538,
                           v539,
                           v540,
                           v541,
                           v542,
                           v543,
                           v544,
                           v545,
                           v546,
                           v547,
                           v548,
                           v549,
                           v550))
        goto LABEL_147;
      goto LABEL_205;
    }
LABEL_54:
    OUTLINED_FUNCTION_2_37();
    if (v188
      || (v189 = OUTLINED_FUNCTION_12_36(),
          v192 = test_string_s(v189, v190, v191, (uint64_t *)&unk_2577524F8),
          (_DWORD)v192)
      || OUTLINED_FUNCTION_3_37(v192, v193, v194, v195, v196, v197, v198, v199, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                         v490,
                         v492,
                         v494,
                         v496,
                         v498,
                         v500,
                         v502,
                         v504,
                         v506,
                         v508,
                         v510,
                         v512,
                         v514,
                         v516,
                         v518,
                         v520,
                         v522,
                         v524,
                         v525,
                         v526,
                         v527,
                         v528,
                         v529,
                         v530,
                         v531,
                         v532,
                         v533,
                         v534,
                         v535,
                         v536,
                         v537,
                         v538,
                         v539,
                         v540,
                         v541,
                         v542,
                         v543,
                         v544,
                         v545,
                         v546,
                         v547,
                         v548,
                         v549,
                         v550))
    {
LABEL_57:
      OUTLINED_FUNCTION_2_37();
      if (v200
        || (v201 = OUTLINED_FUNCTION_6_36(), test_string_s(v201, v202, v203, (uint64_t *)&unk_2577524CE)))
      {
LABEL_59:
        OUTLINED_FUNCTION_2_37();
        if (!v204)
        {
          v205 = OUTLINED_FUNCTION_12_36();
          v208 = test_string_s(v205, v206, v207, (uint64_t *)&unk_2577524FC);
          if (!(_DWORD)v208
            && !OUTLINED_FUNCTION_3_37(v208, v209, v210, v211, v212, v213, v214, v215, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                                v490,
                                v492,
                                v494,
                                v496,
                                v498,
                                v500,
                                v502,
                                v504,
                                v506,
                                v508,
                                v510,
                                v512,
                                v514,
                                v516,
                                v518,
                                v520,
                                v522,
                                v524,
                                v525,
                                v526,
                                v527,
                                v528,
                                v529,
                                v530,
                                v531,
                                v532,
                                v533,
                                v534,
                                v535,
                                v536,
                                v537,
                                v538,
                                v539,
                                v540,
                                v541,
                                v542,
                                v543,
                                v544,
                                v545,
                                v546,
                                v547,
                                v548,
                                v549,
                                v550))
          {
            OUTLINED_FUNCTION_0_37();
            v216 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v216, v217, v218, (uint64_t)&unk_2577524B8);
            if (!v219)
              goto LABEL_3;
          }
        }
LABEL_63:
        OUTLINED_FUNCTION_2_37();
        if (!v220)
        {
          v221 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v221, v222, v223, (uint64_t *)&unk_2577524CF))
          {
            OUTLINED_FUNCTION_0_37();
            v224 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v224, v225, v226, (uint64_t)&unk_2577524B6);
            if (!v227)
              goto LABEL_3;
          }
        }
LABEL_66:
        OUTLINED_FUNCTION_2_37();
        if (!v228)
        {
          v229 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v229, v230, v231, (uint64_t *)&unk_2577524C9))
          {
            OUTLINED_FUNCTION_0_37();
            v232 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v232, v233, v234, (uint64_t)&unk_2577524CD);
            if (!v235)
              goto LABEL_3;
          }
        }
LABEL_69:
        OUTLINED_FUNCTION_2_37();
        if (!v236)
        {
          v237 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v237, v238, v239, (uint64_t *)&unk_2577524B6))
          {
            OUTLINED_FUNCTION_0_37();
            v240 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v240, v241, v242, (uint64_t)&unk_2577524B5);
            if (!v243)
              goto LABEL_3;
          }
        }
LABEL_72:
        OUTLINED_FUNCTION_2_37();
        if (!v244)
        {
          v245 = OUTLINED_FUNCTION_12_36();
          v248 = test_string_s(v245, v246, v247, (uint64_t *)&unk_2577524FE);
          if (!(_DWORD)v248
            && !OUTLINED_FUNCTION_3_37(v248, v249, v250, v251, v252, v253, v254, v255, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                                v490,
                                v492,
                                v494,
                                v496,
                                v498,
                                v500,
                                v502,
                                v504,
                                v506,
                                v508,
                                v510,
                                v512,
                                v514,
                                v516,
                                v518,
                                v520,
                                v522,
                                v524,
                                v525,
                                v526,
                                v527,
                                v528,
                                v529,
                                v530,
                                v531,
                                v532,
                                v533,
                                v534,
                                v535,
                                v536,
                                v537,
                                v538,
                                v539,
                                v540,
                                v541,
                                v542,
                                v543,
                                v544,
                                v545,
                                v546,
                                v547,
                                v548,
                                v549,
                                v550))
          {
            OUTLINED_FUNCTION_0_37();
            v256 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v256, v257, v258, (uint64_t)&unk_2577524D0);
            if (!v259)
              goto LABEL_3;
          }
        }
LABEL_76:
        OUTLINED_FUNCTION_2_37();
        if (!v260)
        {
          v261 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v261, v262, v263, (uint64_t *)&unk_2577524B7))
          {
            OUTLINED_FUNCTION_0_37();
            v264 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v264, v265, v266, (uint64_t)&unk_2577524D1);
            if (!v267)
              goto LABEL_3;
          }
        }
LABEL_79:
        OUTLINED_FUNCTION_2_37();
        if (!v268)
        {
          v269 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v269, v270, v271, (uint64_t *)&unk_2577524D0))
          {
            OUTLINED_FUNCTION_0_37();
            v272 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v272, v273, v274, (uint64_t)&unk_2577524BE);
            if (!v275)
              goto LABEL_3;
          }
        }
LABEL_82:
        OUTLINED_FUNCTION_2_37();
        if (!v276)
        {
          v277 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v277, v278, v279, (uint64_t *)&unk_2577524B8))
          {
            OUTLINED_FUNCTION_0_37();
            v280 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v280, v281, v282, (uint64_t)&unk_2577524CE);
            if (!v283)
              goto LABEL_3;
          }
        }
LABEL_85:
        OUTLINED_FUNCTION_2_37();
        if (!v284)
        {
          v285 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v285, v286, v287, (uint64_t *)&unk_2577524CD))
          {
            OUTLINED_FUNCTION_0_37();
            v288 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v288, v289, v290, (uint64_t)&unk_2577524D2);
            if (!v291)
              goto LABEL_3;
          }
        }
LABEL_88:
        OUTLINED_FUNCTION_2_37();
        if (!v292)
        {
          v293 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v293, v294, v295, (uint64_t *)&_MergedGlobals_24))
          {
            OUTLINED_FUNCTION_0_37();
            v296 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v296, v297, v298, (uint64_t)&unk_2577524D3);
            if (!v299)
              goto LABEL_3;
          }
        }
LABEL_91:
        OUTLINED_FUNCTION_2_37();
        if (!v300)
        {
          v301 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v301, v302, v303, (uint64_t *)&unk_2577524C0))
          {
            OUTLINED_FUNCTION_0_37();
            v304 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v304, v305, v306, (uint64_t)&unk_2577524D4);
            if (!v307)
              goto LABEL_3;
          }
        }
LABEL_94:
        OUTLINED_FUNCTION_2_37();
        if (!v308)
        {
          v309 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v309, v310, v311, (uint64_t *)&unk_2577524B9))
          {
            OUTLINED_FUNCTION_0_37();
            v312 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v312, v313, v314, (uint64_t)&unk_2577524D5);
            if (!v315)
              goto LABEL_3;
          }
        }
LABEL_97:
        OUTLINED_FUNCTION_2_37();
        if (!v316)
        {
          v317 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v317, v318, v319, (uint64_t *)&unk_2577524BC))
          {
            OUTLINED_FUNCTION_0_37();
            v320 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v320, v321, v322, (uint64_t)&unk_2577524D6);
            if (!v323)
              goto LABEL_3;
          }
        }
LABEL_100:
        OUTLINED_FUNCTION_2_37();
        if (!v324)
        {
          v325 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v325, v326, v327, (uint64_t *)&unk_2577524C3))
          {
            OUTLINED_FUNCTION_0_37();
            v328 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v328, v329, v330, (uint64_t)&unk_2577524D7);
            if (!v331)
              goto LABEL_3;
          }
        }
LABEL_103:
        OUTLINED_FUNCTION_2_37();
        if (!v332)
        {
          v333 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v333, v334, v335, (uint64_t *)&unk_2577524BA))
          {
            OUTLINED_FUNCTION_0_37();
            v336 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v336, v337, v338, (uint64_t)&unk_2577524D8);
            if (!v339)
              goto LABEL_3;
          }
        }
LABEL_106:
        OUTLINED_FUNCTION_2_37();
        if (!v340)
        {
          v341 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v341, v342, v343, (uint64_t *)&unk_2577524BD))
          {
            OUTLINED_FUNCTION_0_37();
            v344 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v344, v345, v346, (uint64_t)&unk_2577524C8);
            if (!v347)
              goto LABEL_3;
          }
        }
LABEL_109:
        OUTLINED_FUNCTION_2_37();
        if (!v348)
        {
          v349 = OUTLINED_FUNCTION_6_36();
          if (!test_string_s(v349, v350, v351, (uint64_t *)&unk_2577524B4))
          {
            OUTLINED_FUNCTION_0_37();
            v352 = OUTLINED_FUNCTION_1_37();
            OUTLINED_FUNCTION_11_36(v352, v353, v354, (uint64_t)&unk_2577524D9);
            if (!v355)
              goto LABEL_3;
          }
        }
LABEL_112:
        starttest(a1, v474);
        OUTLINED_FUNCTION_2_37();
        if (v356)
        {
LABEL_113:
          OUTLINED_FUNCTION_2_37();
          if (!v357)
          {
            v358 = OUTLINED_FUNCTION_6_36();
            if (!test_string_s(v358, v359, v360, (uint64_t *)&unk_2577524DB))
            {
              OUTLINED_FUNCTION_0_37();
              v361 = OUTLINED_FUNCTION_1_37();
              OUTLINED_FUNCTION_11_36(v361, v362, v363, (uint64_t)&unk_2577524DC);
              if (!v364)
                goto LABEL_3;
            }
          }
LABEL_116:
          starttest(a1, v470);
          OUTLINED_FUNCTION_2_37();
          if (v365)
          {
LABEL_236:
            lpta_loadp_setscan_r(a1, (uint64_t)v552);
            if (!v454)
            {
              v455 = OUTLINED_FUNCTION_19_34();
              v459 = test_string_s(v455, v456, v457, v458);
              if (!(_DWORD)v459)
              {
                OUTLINED_FUNCTION_34_28(v459, v460, v461, v462, v463, v464, v465, v466, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                  v490,
                  v492,
                  v494,
                  v496,
                  v498,
                  v500,
                  v502,
                  v504,
                  v506,
                  v508,
                  v510,
                  v512,
                  v514,
                  v516,
                  v518,
                  v520,
                  v522,
                  v524,
                  v525,
                  v526,
                  v527,
                  v528,
                  v529,
                  v530,
                  v531,
                  v532,
                  v533,
                  v534,
                  v535,
                  v536,
                  v537,
                  v538,
                  v539,
                  v540,
                  v541,
                  v542,
                  v543,
                  v544,
                  v545,
                  v546,
                  v547,
                  v548,
                  v549,
                  v550);
                OUTLINED_FUNCTION_11_36(a1, 2, 1, (uint64_t)&unk_2577524DD);
              }
            }
            goto LABEL_3;
          }
          bspush_ca_scan(a1, v468);
          v366 = OUTLINED_FUNCTION_6_36();
          v369 = (uint64_t *)&unk_2577524C2;
LABEL_219:
          v374 = test_string_s(v366, v367, v368, v369);
          if ((_DWORD)v374)
            goto LABEL_147;
LABEL_220:
          if (!OUTLINED_FUNCTION_3_37(v374, v375, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                                v490,
                                v492,
                                v494,
                                v496,
                                v498,
                                v500,
                                v502,
                                v504,
                                v506,
                                v508,
                                v510,
                                v512,
                                v514,
                                v516,
                                v518,
                                v520,
                                v522,
                                v524,
                                v525,
                                v526,
                                v527,
                                v528,
                                v529,
                                v530,
                                v531,
                                v532,
                                v533,
                                v534,
                                v535,
                                v536,
                                v537,
                                v538,
                                v539,
                                v540,
                                v541,
                                v542,
                                v543,
                                v544,
                                v545,
                                v546,
                                v547,
                                v548,
                                v549,
                                v550))
          {
            OUTLINED_FUNCTION_0_37();
            v382 = OUTLINED_FUNCTION_1_37();
            v385 = &unk_2577524CB;
            break;
          }
        }
        else
        {
          bspush_ca_scan(a1, v472);
          v400 = OUTLINED_FUNCTION_6_36();
          v403 = (uint64_t *)&unk_2577524BF;
LABEL_215:
          v374 = test_string_s(v400, v401, v402, v403);
          if ((_DWORD)v374)
            goto LABEL_147;
LABEL_216:
          if (!OUTLINED_FUNCTION_3_37(v374, v375, v376, v377, v378, v379, v380, v381, v468, v470, v472, v474, v476, v478, v480, v482, v484, v486, v488,
                                v490,
                                v492,
                                v494,
                                v496,
                                v498,
                                v500,
                                v502,
                                v504,
                                v506,
                                v508,
                                v510,
                                v512,
                                v514,
                                v516,
                                v518,
                                v520,
                                v522,
                                v524,
                                v525,
                                v526,
                                v527,
                                v528,
                                v529,
                                v530,
                                v531,
                                v532,
                                v533,
                                v534,
                                v535,
                                v536,
                                v537,
                                v538,
                                v539,
                                v540,
                                v541,
                                v542,
                                v543,
                                v544,
                                v545,
                                v546,
                                v547,
                                v548,
                                v549,
                                v550))
          {
            OUTLINED_FUNCTION_0_37();
            v382 = OUTLINED_FUNCTION_1_37();
            v385 = &unk_2577524DA;
            break;
          }
        }
LABEL_147:
        v421 = *(_QWORD *)(a1 + 104);
        if (v421)
          v374 = OUTLINED_FUNCTION_33_29(v421);
        else
          v374 = OUTLINED_FUNCTION_31_29();
        switch((int)v374)
        {
          case 1:
            continue;
          case 3:
            goto LABEL_13;
          case 4:
            goto LABEL_15;
          case 5:
            goto LABEL_133;
          case 6:
            goto LABEL_138;
          case 7:
            OUTLINED_FUNCTION_10_36(9);
            goto LABEL_154;
          case 8:
            goto LABEL_140;
          case 9:
            OUTLINED_FUNCTION_10_36(10);
            goto LABEL_154;
          case 10:
            OUTLINED_FUNCTION_10_36(11);
            v422 = OUTLINED_FUNCTION_13_35();
            goto LABEL_155;
          case 11:
LABEL_154:
            v422 = OUTLINED_FUNCTION_19_34();
LABEL_155:
            if (!test_string_s(v422, v423, v424, v425))
              goto LABEL_140;
            goto LABEL_147;
          case 12:
            v416 = OUTLINED_FUNCTION_26_31();
            goto LABEL_143;
          case 13:
            goto LABEL_144;
          case 15:
            goto LABEL_18;
          case 16:
            goto LABEL_22;
          case 17:
            goto LABEL_26;
          case 18:
            goto LABEL_29;
          case 19:
            goto LABEL_128;
          case 20:
            goto LABEL_227;
          case 21:
            OUTLINED_FUNCTION_10_36(23);
            goto LABEL_160;
          case 22:
            goto LABEL_229;
          case 23:
            OUTLINED_FUNCTION_10_36(24);
            goto LABEL_160;
          case 24:
            OUTLINED_FUNCTION_10_36(25);
            v426 = OUTLINED_FUNCTION_13_35();
            goto LABEL_161;
          case 25:
LABEL_160:
            v426 = OUTLINED_FUNCTION_19_34();
LABEL_161:
            if (!test_string_s(v426, v427, v428, v429))
              goto LABEL_229;
            goto LABEL_147;
          case 26:
            v443 = OUTLINED_FUNCTION_26_31();
            goto LABEL_179;
          case 27:
            goto LABEL_180;
          case 29:
            goto LABEL_33;
          case 30:
            goto LABEL_37;
          case 31:
            goto LABEL_41;
          case 32:
            goto LABEL_43;
          case 33:
            goto LABEL_124;
          case 34:
            goto LABEL_222;
          case 35:
            OUTLINED_FUNCTION_10_36(37);
            goto LABEL_166;
          case 36:
            goto LABEL_224;
          case 37:
            OUTLINED_FUNCTION_10_36(38);
            goto LABEL_166;
          case 38:
            OUTLINED_FUNCTION_10_36(39);
            v430 = OUTLINED_FUNCTION_13_35();
            goto LABEL_167;
          case 39:
LABEL_166:
            v430 = OUTLINED_FUNCTION_19_34();
LABEL_167:
            if (!test_string_s(v430, v431, v432, v433))
              goto LABEL_224;
            goto LABEL_147;
          case 40:
            v447 = OUTLINED_FUNCTION_26_31();
            goto LABEL_183;
          case 41:
            goto LABEL_184;
          case 43:
            goto LABEL_46;
          case 44:
            goto LABEL_47;
          case 45:
            v370 = OUTLINED_FUNCTION_13_35();
            goto LABEL_119;
          case 46:
            goto LABEL_120;
          case 47:
            goto LABEL_48;
          case 48:
            v386 = OUTLINED_FUNCTION_13_35();
            goto LABEL_188;
          case 49:
            goto LABEL_189;
          case 50:
            goto LABEL_49;
          case 51:
            v391 = OUTLINED_FUNCTION_19_34();
            goto LABEL_192;
          case 52:
            goto LABEL_193;
          case 53:
            goto LABEL_195;
          case 54:
            goto LABEL_232;
          case 55:
            OUTLINED_FUNCTION_10_36(57);
            goto LABEL_172;
          case 56:
            goto LABEL_174;
          case 57:
            OUTLINED_FUNCTION_10_36(58);
            goto LABEL_172;
          case 58:
            OUTLINED_FUNCTION_10_36(59);
            v434 = OUTLINED_FUNCTION_13_35();
            goto LABEL_173;
          case 59:
LABEL_172:
            v434 = OUTLINED_FUNCTION_19_34();
LABEL_173:
            if (!test_string_s(v434, v435, v436, v437))
              goto LABEL_174;
            goto LABEL_147;
          case 60:
            v439 = OUTLINED_FUNCTION_26_31();
            goto LABEL_197;
          case 61:
            goto LABEL_198;
          case 63:
            goto LABEL_53;
          case 64:
            goto LABEL_54;
          case 65:
            OUTLINED_FUNCTION_10_36(67);
            goto LABEL_202;
          case 66:
            goto LABEL_204;
          case 67:
            OUTLINED_FUNCTION_10_36(68);
            v395 = OUTLINED_FUNCTION_13_35();
            goto LABEL_203;
          case 68:
LABEL_202:
            v395 = OUTLINED_FUNCTION_19_34();
            goto LABEL_203;
          case 69:
            goto LABEL_57;
          case 70:
            goto LABEL_135;
          case 71:
            OUTLINED_FUNCTION_10_36(73);
            v411 = OUTLINED_FUNCTION_19_34();
            goto LABEL_208;
          case 72:
            goto LABEL_209;
          case 73:
            v411 = OUTLINED_FUNCTION_13_35();
            goto LABEL_208;
          case 75:
            goto LABEL_59;
          case 76:
            goto LABEL_131;
          case 77:
            OUTLINED_FUNCTION_10_36(79);
            v407 = OUTLINED_FUNCTION_19_34();
            goto LABEL_212;
          case 78:
            goto LABEL_213;
          case 79:
            v407 = OUTLINED_FUNCTION_13_35();
            goto LABEL_212;
          case 81:
            goto LABEL_63;
          case 82:
            goto LABEL_66;
          case 83:
            goto LABEL_69;
          case 84:
            goto LABEL_72;
          case 85:
            goto LABEL_76;
          case 86:
            goto LABEL_79;
          case 87:
            goto LABEL_82;
          case 88:
            goto LABEL_85;
          case 89:
            goto LABEL_88;
          case 90:
            goto LABEL_91;
          case 91:
            goto LABEL_94;
          case 92:
            goto LABEL_97;
          case 93:
            goto LABEL_100;
          case 94:
            goto LABEL_103;
          case 95:
            goto LABEL_106;
          case 96:
            goto LABEL_109;
          case 97:
            goto LABEL_112;
          case 98:
            goto LABEL_113;
          case 99:
            v400 = OUTLINED_FUNCTION_13_35();
            goto LABEL_215;
          case 100:
            goto LABEL_216;
          case 101:
            goto LABEL_116;
          case 102:
            goto LABEL_236;
          case 103:
            v366 = OUTLINED_FUNCTION_13_35();
            goto LABEL_219;
          case 104:
            goto LABEL_220;
          default:
            goto LABEL_3;
        }
      }
      starttest(a1, v478);
      OUTLINED_FUNCTION_8_36(a1, (uint64_t)&v550);
      if (v404)
      {
LABEL_131:
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524C4;
      }
      else
      {
        bspush_ca_scan(a1, v476);
        v407 = OUTLINED_FUNCTION_6_36();
        v410 = (uint64_t *)&unk_2577524CD;
LABEL_212:
        if (test_string_s(v407, v408, v409, v410))
          goto LABEL_147;
LABEL_213:
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524B6;
      }
    }
    else
    {
      starttest(a1, v482);
      OUTLINED_FUNCTION_8_36(a1, (uint64_t)&v550);
      if (v406)
      {
LABEL_135:
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524CA;
      }
      else
      {
        bspush_ca_scan(a1, v480);
        v411 = OUTLINED_FUNCTION_6_36();
        v414 = (uint64_t *)&unk_2577524CD;
LABEL_208:
        if (test_string_s(v411, v412, v413, v414))
          goto LABEL_147;
LABEL_209:
        OUTLINED_FUNCTION_0_37();
        v382 = OUTLINED_FUNCTION_1_37();
        v385 = &unk_2577524B8;
      }
    }
    break;
  }
  OUTLINED_FUNCTION_11_36(v382, v383, v384, (uint64_t)v385);
  if (v420)
    goto LABEL_147;
LABEL_3:
  OUTLINED_FUNCTION_46_22();
  OUTLINED_FUNCTION_30_29();
}

void breakup_kor_spr_phones(uint64_t a1, __int16 *a2, __int16 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int16 *v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  unsigned int v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  uint64_t v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  _QWORD v332[2];
  _QWORD v333[2];
  _QWORD v334[2];
  _QWORD v335[2];
  _QWORD v336[2];
  _BYTE v337[10];
  _BYTE v338[9];
  _BYTE v339[9];
  _BYTE v340[192];
  uint64_t v341;

  v341 = *MEMORY[0x24BDAC8D0];
  v336[0] = 0;
  v336[1] = 0;
  v335[0] = 0;
  v335[1] = 0;
  v334[0] = 0;
  v334[1] = 0;
  v333[0] = 0;
  v333[1] = 0;
  v332[0] = 0;
  v332[1] = 0;
  v330 = 0u;
  v331 = 0u;
  v328 = 0u;
  v329 = 0u;
  bzero(&v305, 0xB8uLL);
  OUTLINED_FUNCTION_50_20(v6, 0xC0uLL);
  v7 = OUTLINED_FUNCTION_51_19();
  if ((_DWORD)v7
    || OUTLINED_FUNCTION_49_20(v7, (uint64_t)&v305, (uint64_t)v339, (uint64_t)v338, (uint64_t)v337, (uint64_t)v340))
  {
    goto LABEL_3;
  }
  get_parm(a1, (uint64_t)v336, a2, 4294967290, v8, v9, v10, v11);
  get_parm(a1, (uint64_t)v335, a3, 4294967290, v12, v13, v14, v15);
  v16 = OUTLINED_FUNCTION_48_21();
  push_ptr_init(v16, v17);
  v18 = OUTLINED_FUNCTION_37_28();
  push_ptr_init(v18, v19);
  v20 = push_ptr_init(a1, (uint64_t)v332);
  v331 = 0uLL;
  LODWORD(v330) = -65534;
  v329 = 0uLL;
  LODWORD(v328) = -65534;
  OUTLINED_FUNCTION_42_23(v20, 0, (uint64_t)&null_str_16);
  startloop(a1, 1);
  lpta_loadpn(a1, v336);
  OUTLINED_FUNCTION_45_23();
  v21 = OUTLINED_FUNCTION_48_21();
  lpta_storep(v21, v22);
  lpta_loadpn(a1, v335);
  OUTLINED_FUNCTION_45_23();
  lpta_storep(a1, (uint64_t)v332);
  v302 = 3;
  v299 = 4;
  v296 = 5;
  v23 = 9;
LABEL_5:
  while (1)
  {
    v24 = OUTLINED_FUNCTION_48_21();
    if (forall_to_test(v24, v25, (__int16 *)v332))
      break;
LABEL_6:
    bspush_ca(a1);
    OUTLINED_FUNCTION_14_35();
    if (v26 || OUTLINED_FUNCTION_20_34())
      break;
LABEL_14:
    savescptr(a1, v299, (uint64_t)v333);
LABEL_15:
    starttest(a1, v296);
    OUTLINED_FUNCTION_14_35();
    if (!v30)
    {
      v31 = OUTLINED_FUNCTION_23_32();
      if (!test_string_s(v31, v32, v33, (uint64_t *)&unk_2577524C1))
      {
        OUTLINED_FUNCTION_18_34();
        v293 = v23;
        v23 = (uint64_t)&v330;
        settvar_s(a1, (unsigned __int8 *)&v330, 7u);
        OUTLINED_FUNCTION_17_35();
        WORD1(v330) = 4;
        OUTLINED_FUNCTION_9_36(v234, v235, v236, v237, v238, v239, v240, v241);
        OUTLINED_FUNCTION_16_35();
        WORD1(v330) = 5;
        OUTLINED_FUNCTION_9_36(v242, v243, v244, v245, v246, v247, v248, v249);
        OUTLINED_FUNCTION_28_29();
        WORD1(v330) = 8;
        OUTLINED_FUNCTION_9_36(v250, v251, v252, v253, v254, v255, v256, v257);
        OUTLINED_FUNCTION_47_22();
        WORD1(v330) = 10;
        OUTLINED_FUNCTION_9_36(v258, v259, v260, v261, v262, v263, v264, v265);
        OUTLINED_FUNCTION_15_35();
        if (v266)
          break;
        settvar_s(a1, (unsigned __int8 *)&v328, 0x14u);
        OUTLINED_FUNCTION_41_23();
        OUTLINED_FUNCTION_27_29(v267, v268, v269, v270, v271, v272, 4, v287, v293, v296, v299, v302, v305, v306, v307, v308, v309, v310, v311,
          v312,
          v313,
          v314,
          v315,
          v316,
          v317,
          v318,
          v319,
          v320,
          v321,
          v322,
          v323,
          v324,
          v325,
          v326,
          v327,
          v328,
          SWORD1(v328));
        OUTLINED_FUNCTION_28_29();
        OUTLINED_FUNCTION_27_29(v273, v274, v275, v276, v277, v278, 8, v288, v294, v297, v300, v303, v305, v306, v307, v308, v309, v310, v311,
          v312,
          v313,
          v314,
          v315,
          v316,
          v317,
          v318,
          v319,
          v320,
          v321,
          v322,
          v323,
          v324,
          v325,
          v326,
          v327,
          v328,
          SWORD1(v328));
        OUTLINED_FUNCTION_47_22();
        OUTLINED_FUNCTION_27_29(v279, v280, v281, v282, v283, v284, 10, v289, v295, v298, v301, v304, v305, v306, v307, v308, v309, v310, v311,
          v312,
          v313,
          v314,
          v315,
          v316,
          v317,
          v318,
          v319,
          v320,
          v321,
          v322,
          v323,
          v324,
          v325,
          v326,
          v327,
          v328,
          SWORD1(v328));
        v233 = a1;
        goto LABEL_39;
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_38_27(7);
    OUTLINED_FUNCTION_14_35();
    if (!v34)
    {
      v35 = OUTLINED_FUNCTION_23_32();
      if (!test_string_s(v35, v36, v37, (uint64_t *)&unk_2577524C7))
      {
        OUTLINED_FUNCTION_18_34();
        v292 = v23;
        v23 = (uint64_t)&v328;
        settvar_s(a1, (unsigned __int8 *)&v328, 7u);
        OUTLINED_FUNCTION_17_35();
        WORD1(v328) = 4;
        OUTLINED_FUNCTION_9_36(v169, v170, v171, v172, v173, v174, v175, v176);
        OUTLINED_FUNCTION_16_35();
        WORD1(v328) = 5;
        OUTLINED_FUNCTION_9_36(v177, v178, v179, v180, v181, v182, v183, v184);
        OUTLINED_FUNCTION_44_23();
        WORD1(v328) = 8;
        OUTLINED_FUNCTION_9_36(v185, v186, v187, v188, v189, v190, v191, v192);
        npush_s(a1);
        WORD1(v328) = 10;
        OUTLINED_FUNCTION_9_36(v193, v194, v195, v196, v197, v198, v199, v200);
        OUTLINED_FUNCTION_15_35();
        if ((_DWORD)v201)
          break;
        OUTLINED_FUNCTION_32_29(v201, v202, v203, v204, v205, v206, v207, v208, v287, v292, v296, v299, v302, v305, v306, v307, v308, v309, v310,
          v311,
          v312,
          v313,
          v314,
          v315,
          v316,
          v317,
          v318,
          v319,
          v320,
          v321,
          v322,
          v323,
          v324,
          v325,
          v326,
          v327,
          v328,
          *((uint64_t *)&v328 + 1),
          v329,
          *((uint64_t *)&v329 + 1),
          v330);
        OUTLINED_FUNCTION_41_23();
        WORD1(v330) = 4;
        OUTLINED_FUNCTION_9_36(v209, v210, v211, v212, v213, v214, v215, v216);
        OUTLINED_FUNCTION_28_29();
        WORD1(v330) = 2;
        OUTLINED_FUNCTION_9_36(v217, v218, v219, v220, v221, v222, v223, v224);
        OUTLINED_FUNCTION_44_23();
        WORD1(v330) = 8;
        OUTLINED_FUNCTION_9_36(v225, v226, v227, v228, v229, v230, v231, v232);
        v111 = a1;
LABEL_35:
        npush_s(v111);
        WORD1(v330) = 10;
LABEL_36:
        OUTLINED_FUNCTION_9_36(v161, v162, v163, v164, v165, v166, v167, v168);
        v233 = a1;
        v23 = v291;
LABEL_39:
        insert_lv(v233, 2, (__int16 *)&v328);
        goto LABEL_40;
      }
    }
LABEL_19:
    OUTLINED_FUNCTION_38_27(8);
    OUTLINED_FUNCTION_14_35();
    if (!v38)
    {
      v39 = OUTLINED_FUNCTION_23_32();
      if (!test_string_s(v39, v40, v41, (uint64_t *)&unk_2577524C6))
      {
        OUTLINED_FUNCTION_18_34();
        v291 = v23;
        v23 = (uint64_t)&v330;
        OUTLINED_FUNCTION_40_23(a1);
        OUTLINED_FUNCTION_17_35();
        WORD1(v330) = 4;
        OUTLINED_FUNCTION_9_36(v112, v113, v114, v115, v116, v117, v118, v119);
        OUTLINED_FUNCTION_16_35();
        WORD1(v330) = 5;
        OUTLINED_FUNCTION_9_36(v120, v121, v122, v123, v124, v125, v126, v127);
        OUTLINED_FUNCTION_43_23();
        WORD1(v330) = 10;
        OUTLINED_FUNCTION_9_36(v128, v129, v130, v131, v132, v133, v134, v135);
        OUTLINED_FUNCTION_28_29();
        WORD1(v330) = 2;
        OUTLINED_FUNCTION_9_36(v136, v137, v138, v139, v140, v141, v142, v143);
        OUTLINED_FUNCTION_15_35();
        if (v144)
          break;
        settvar_s(a1, (unsigned __int8 *)&v328, 0x14u);
        OUTLINED_FUNCTION_17_35();
        WORD1(v328) = 4;
        OUTLINED_FUNCTION_9_36(v145, v146, v147, v148, v149, v150, v151, v152);
        OUTLINED_FUNCTION_16_35();
        WORD1(v328) = 8;
        OUTLINED_FUNCTION_9_36(v153, v154, v155, v156, v157, v158, v159, v160);
        OUTLINED_FUNCTION_43_23();
        WORD1(v328) = 10;
        goto LABEL_36;
      }
    }
LABEL_21:
    starttest(a1, v23);
    OUTLINED_FUNCTION_14_35();
    if (!v42)
    {
      v43 = OUTLINED_FUNCTION_23_32();
      if (!test_string_s(v43, v44, v45, (uint64_t *)&unk_2577524C9))
      {
        OUTLINED_FUNCTION_18_34();
        v290 = v23;
        v23 = (uint64_t)&v328;
        OUTLINED_FUNCTION_40_23(a1);
        OUTLINED_FUNCTION_17_35();
        WORD1(v328) = 4;
        OUTLINED_FUNCTION_9_36(v63, v64, v65, v66, v67, v68, v69, v70);
        OUTLINED_FUNCTION_16_35();
        WORD1(v328) = 5;
        OUTLINED_FUNCTION_9_36(v71, v72, v73, v74, v75, v76, v77, v78);
        npush_s(a1);
        WORD1(v328) = 10;
        OUTLINED_FUNCTION_9_36(v79, v80, v81, v82, v83, v84, v85, v86);
        OUTLINED_FUNCTION_15_35();
        if ((_DWORD)v87)
          break;
        OUTLINED_FUNCTION_32_29(v87, v88, v89, v90, v91, v92, v93, v94, v287, v290, v296, v299, v302, v305, v306, v307, v308, v309, v310,
          v311,
          v312,
          v313,
          v314,
          v315,
          v316,
          v317,
          v318,
          v319,
          v320,
          v321,
          v322,
          v323,
          v324,
          v325,
          v326,
          v327,
          v328,
          *((uint64_t *)&v328 + 1),
          v329,
          *((uint64_t *)&v329 + 1),
          v330);
        OUTLINED_FUNCTION_17_35();
        WORD1(v330) = 4;
        OUTLINED_FUNCTION_9_36(v95, v96, v97, v98, v99, v100, v101, v102);
        OUTLINED_FUNCTION_16_35();
        WORD1(v330) = 8;
        OUTLINED_FUNCTION_9_36(v103, v104, v105, v106, v107, v108, v109, v110);
        v111 = a1;
        goto LABEL_35;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_14_35();
    if (v46
      || (v47 = OUTLINED_FUNCTION_23_32(), test_string_s(v47, v48, v49, (uint64_t *)&unk_2577524DA))
      || (OUTLINED_FUNCTION_18_34(),
          v50 = OUTLINED_FUNCTION_39_25(),
          insert_2pt_s(v50, v51, v52, (uint64_t)&unk_257752504, v53),
          v54))
    {
LABEL_26:
      OUTLINED_FUNCTION_14_35();
      if (!v55)
      {
        v56 = OUTLINED_FUNCTION_23_32();
        if (!test_string_s(v56, v57, v58, (uint64_t *)&unk_2577524CB))
        {
          OUTLINED_FUNCTION_18_34();
          v59 = OUTLINED_FUNCTION_39_25();
          insert_2pt_s(v59, v60, v61, (uint64_t)&unk_257752506, v62);
        }
      }
    }
LABEL_40:
    v285 = OUTLINED_FUNCTION_37_28();
    lpta_loadpn(v285, v286);
    rpta_loadpn(a1);
    if (!compare_ptas(a1) && !testeq(a1))
      goto LABEL_3;
LABEL_42:
    forall_cont_from();
  }
  while (2)
  {
    v27 = *(_QWORD *)(a1 + 104);
    if (v27)
      v28 = OUTLINED_FUNCTION_33_29(v27);
    else
      v28 = OUTLINED_FUNCTION_31_29();
    switch(v28)
    {
      case 2:
        goto LABEL_15;
      case 3:
        forto_adv_upto_r(a1, 1, 2, 13, 2, (uint64_t)v334);
        if (v29)
          continue;
        break;
      case 4:
        goto LABEL_14;
      case 5:
        goto LABEL_17;
      case 6:
        goto LABEL_40;
      case 7:
        goto LABEL_19;
      case 8:
        goto LABEL_21;
      case 9:
        goto LABEL_23;
      case 10:
        goto LABEL_26;
      case 11:
        goto LABEL_42;
      case 12:
        goto LABEL_5;
      case 13:
        goto LABEL_6;
      default:
        goto LABEL_3;
    }
    break;
  }
LABEL_3:
  OUTLINED_FUNCTION_46_22();
  OUTLINED_FUNCTION_30_29();
}

uint64_t print_kor_SPR(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  _BYTE v67[10];
  _BYTE v68[9];
  _BYTE v69[9];
  _BYTE v70[192];
  uint64_t v71;

  v71 = *MEMORY[0x24BDAC8D0];
  v66[0] = 0;
  v66[1] = 0;
  v64 = 0;
  v65 = 0;
  bzero(&v41, 0xB8uLL);
  OUTLINED_FUNCTION_50_20(v5, 0xC0uLL);
  v6 = OUTLINED_FUNCTION_51_19();
  if (!(_DWORD)v6)
  {
    v7 = OUTLINED_FUNCTION_49_20(v6, (uint64_t)&v41, (uint64_t)v69, (uint64_t)v68, (uint64_t)v67, (uint64_t)v70);
    if (!(_DWORD)v7)
    {
      OUTLINED_FUNCTION_29_29(v7, v8, v9, v10, v11, v12, v13, v14);
      OUTLINED_FUNCTION_36_28(v17, (uint64_t)&v64, v18, v19, v20, v21, v22, v23);
      OUTLINED_FUNCTION_42_23(v24, 0, (uint64_t)&null_str_16);
      fence_36(a1, 1, (uint64_t)&unk_2577524C0);
      starttest(a1, 1);
      v25 = OUTLINED_FUNCTION_37_28();
      lpta_loadp_setscan_r(v25, v26);
      if (!(_DWORD)v27)
      {
        if (testFldeq(a1, 2u, 11, 1) || OUTLINED_FUNCTION_20_34())
        {
          v35 = *(_QWORD *)(a1 + 104);
          if (v35)
            v27 = OUTLINED_FUNCTION_33_29(v35);
          else
            v27 = OUTLINED_FUNCTION_31_29();
          switch((int)v27)
          {
            case 1:
              goto LABEL_6;
            case 2:
              goto LABEL_8;
            case 3:
              goto LABEL_45;
            case 4:
              goto LABEL_83;
            case 5:
              goto LABEL_10;
            case 6:
              goto LABEL_59;
            case 7:
              goto LABEL_12;
            case 8:
              goto LABEL_60;
            case 9:
              goto LABEL_14;
            case 10:
              goto LABEL_61;
            case 11:
              goto LABEL_16;
            case 12:
              goto LABEL_62;
            case 13:
              goto LABEL_18;
            case 14:
              goto LABEL_63;
            case 15:
              goto LABEL_20;
            case 16:
              goto LABEL_65;
            case 17:
              goto LABEL_22;
            case 18:
              goto LABEL_66;
            case 19:
              goto LABEL_24;
            case 20:
              goto LABEL_67;
            case 21:
              goto LABEL_26;
            case 22:
              goto LABEL_68;
            case 23:
              goto LABEL_28;
            case 24:
              goto LABEL_69;
            case 25:
              goto LABEL_30;
            case 26:
              goto LABEL_70;
            case 27:
              goto LABEL_32;
            case 28:
              goto LABEL_71;
            case 29:
              goto LABEL_34;
            case 30:
              goto LABEL_72;
            case 31:
              goto LABEL_36;
            case 32:
              goto LABEL_73;
            case 33:
              goto LABEL_46;
            case 34:
              goto LABEL_74;
            case 35:
              goto LABEL_48;
            case 36:
              goto LABEL_75;
            case 37:
              goto LABEL_50;
            case 38:
              goto LABEL_76;
            case 39:
              goto LABEL_52;
            case 40:
              goto LABEL_77;
            case 41:
              goto LABEL_54;
            case 42:
              goto LABEL_78;
            case 43:
              goto LABEL_56;
            case 44:
              goto LABEL_79;
            case 45:
              goto LABEL_58;
            case 46:
              goto LABEL_80;
            default:
              goto LABEL_3;
          }
        }
        print_lit(a1, 8, (uint64_t)"h");
      }
LABEL_6:
      OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66[0]);
      if ((_DWORD)v27 || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&_MergedGlobals_24), (_DWORD)v27))
      {
LABEL_8:
        OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
          v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60,
          v61,
          v62,
          v63,
          v64,
          v65,
          v66[0]);
        if ((_DWORD)v27 || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524B4), (_DWORD)v27))
        {
LABEL_10:
          OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
            v52,
            v53,
            v54,
            v55,
            v56,
            v57,
            v58,
            v59,
            v60,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66[0]);
          if (!(_DWORD)v27)
          {
            v27 = OUTLINED_FUNCTION_21_33(v27, v28, v29, (uint64_t *)&unk_257752508);
            if (!(_DWORD)v27)
            {
LABEL_60:
              savescptr(a1, 8, (uint64_t)&v64);
              v36 = "'ch'";
              v40 = a1;
LABEL_82:
              print_lit(v40, 8, (uint64_t)v36);
              goto LABEL_83;
            }
          }
LABEL_12:
          OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
            v52,
            v53,
            v54,
            v55,
            v56,
            v57,
            v58,
            v59,
            v60,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66[0]);
          if ((_DWORD)v27 || (v27 = OUTLINED_FUNCTION_21_33(v27, v28, v29, (uint64_t *)&unk_25775250A), (_DWORD)v27))
          {
LABEL_14:
            OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
              v52,
              v53,
              v54,
              v55,
              v56,
              v57,
              v58,
              v59,
              v60,
              v61,
              v62,
              v63,
              v64,
              v65,
              v66[0]);
            if ((_DWORD)v27 || (v27 = OUTLINED_FUNCTION_21_33(v27, v28, v29, (uint64_t *)&unk_25775250C), (_DWORD)v27))
            {
LABEL_16:
              OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                v52,
                v53,
                v54,
                v55,
                v56,
                v57,
                v58,
                v59,
                v60,
                v61,
                v62,
                v63,
                v64,
                v65,
                v66[0]);
              if ((_DWORD)v27 || (v27 = OUTLINED_FUNCTION_21_33(v27, v28, v29, (uint64_t *)&unk_25775250E), (_DWORD)v27))
              {
LABEL_18:
                OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                  v52,
                  v53,
                  v54,
                  v55,
                  v56,
                  v57,
                  v58,
                  v59,
                  v60,
                  v61,
                  v62,
                  v63,
                  v64,
                  v65,
                  v66[0]);
                if ((_DWORD)v27
                  || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524BC), (_DWORD)v27))
                {
LABEL_20:
                  OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                    v52,
                    v53,
                    v54,
                    v55,
                    v56,
                    v57,
                    v58,
                    v59,
                    v60,
                    v61,
                    v62,
                    v63,
                    v64,
                    v65,
                    v66[0]);
                  if ((_DWORD)v27
                    || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524BD), (_DWORD)v27))
                  {
LABEL_22:
                    OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                      v52,
                      v53,
                      v54,
                      v55,
                      v56,
                      v57,
                      v58,
                      v59,
                      v60,
                      v61,
                      v62,
                      v63,
                      v64,
                      v65,
                      v66[0]);
                    if ((_DWORD)v27
                      || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524C2), (_DWORD)v27))
                    {
LABEL_24:
                      OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                        v52,
                        v53,
                        v54,
                        v55,
                        v56,
                        v57,
                        v58,
                        v59,
                        v60,
                        v61,
                        v62,
                        v63,
                        v64,
                        v65,
                        v66[0]);
                      if ((_DWORD)v27
                        || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524C3), (_DWORD)v27))
                      {
LABEL_26:
                        OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                          v52,
                          v53,
                          v54,
                          v55,
                          v56,
                          v57,
                          v58,
                          v59,
                          v60,
                          v61,
                          v62,
                          v63,
                          v64,
                          v65,
                          v66[0]);
                        if ((_DWORD)v27
                          || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524CA), (_DWORD)v27))
                        {
LABEL_28:
                          OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                            v52,
                            v53,
                            v54,
                            v55,
                            v56,
                            v57,
                            v58,
                            v59,
                            v60,
                            v61,
                            v62,
                            v63,
                            v64,
                            v65,
                            v66[0]);
                          if ((_DWORD)v27
                            || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524B8), (_DWORD)v27))
                          {
LABEL_30:
                            OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                              v52,
                              v53,
                              v54,
                              v55,
                              v56,
                              v57,
                              v58,
                              v59,
                              v60,
                              v61,
                              v62,
                              v63,
                              v64,
                              v65,
                              v66[0]);
                            if ((_DWORD)v27
                              || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D0), (_DWORD)v27))
                            {
LABEL_32:
                              OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                v52,
                                v53,
                                v54,
                                v55,
                                v56,
                                v57,
                                v58,
                                v59,
                                v60,
                                v61,
                                v62,
                                v63,
                                v64,
                                v65,
                                v66[0]);
                              if ((_DWORD)v27
                                || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D3), (_DWORD)v27))
                              {
LABEL_34:
                                OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                  v52,
                                  v53,
                                  v54,
                                  v55,
                                  v56,
                                  v57,
                                  v58,
                                  v59,
                                  v60,
                                  v61,
                                  v62,
                                  v63,
                                  v64,
                                  v65,
                                  v66[0]);
                                if ((_DWORD)v27
                                  || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D4), (_DWORD)v27))
                                {
LABEL_36:
                                  OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                    v52,
                                    v53,
                                    v54,
                                    v55,
                                    v56,
                                    v57,
                                    v58,
                                    v59,
                                    v60,
                                    v61,
                                    v62,
                                    v63,
                                    v64,
                                    v65,
                                    v66[0]);
                                  if ((_DWORD)v27
                                    || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D5),
                                        (_DWORD)v27))
                                  {
LABEL_46:
                                    OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                      v52,
                                      v53,
                                      v54,
                                      v55,
                                      v56,
                                      v57,
                                      v58,
                                      v59,
                                      v60,
                                      v61,
                                      v62,
                                      v63,
                                      v64,
                                      v65,
                                      v66[0]);
                                    if ((_DWORD)v27
                                      || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D6),
                                          (_DWORD)v27))
                                    {
LABEL_48:
                                      OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                        v52,
                                        v53,
                                        v54,
                                        v55,
                                        v56,
                                        v57,
                                        v58,
                                        v59,
                                        v60,
                                        v61,
                                        v62,
                                        v63,
                                        v64,
                                        v65,
                                        v66[0]);
                                      if ((_DWORD)v27
                                        || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D7),
                                            (_DWORD)v27))
                                      {
LABEL_50:
                                        OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                          v52,
                                          v53,
                                          v54,
                                          v55,
                                          v56,
                                          v57,
                                          v58,
                                          v59,
                                          v60,
                                          v61,
                                          v62,
                                          v63,
                                          v64,
                                          v65,
                                          v66[0]);
                                        if ((_DWORD)v27
                                          || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D8),
                                              (_DWORD)v27))
                                        {
LABEL_52:
                                          OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                            v52,
                                            v53,
                                            v54,
                                            v55,
                                            v56,
                                            v57,
                                            v58,
                                            v59,
                                            v60,
                                            v61,
                                            v62,
                                            v63,
                                            v64,
                                            v65,
                                            v66[0]);
                                          if ((_DWORD)v27
                                            || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524C8),
                                                (_DWORD)v27))
                                          {
LABEL_54:
                                            OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                              v52,
                                              v53,
                                              v54,
                                              v55,
                                              v56,
                                              v57,
                                              v58,
                                              v59,
                                              v60,
                                              v61,
                                              v62,
                                              v63,
                                              v64,
                                              v65,
                                              v66[0]);
                                            if ((_DWORD)v27
                                              || (v27 = OUTLINED_FUNCTION_7_36(v27, v28, v29, (uint64_t *)&unk_2577524D9),
                                                  (_DWORD)v27))
                                            {
LABEL_56:
                                              OUTLINED_FUNCTION_4_36(v27, v28, v29, v30, v31, v32, v33, v34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51,
                                                v52,
                                                v53,
                                                v54,
                                                v55,
                                                v56,
                                                v57,
                                                v58,
                                                v59,
                                                v60,
                                                v61,
                                                v62,
                                                v63,
                                                v64,
                                                v65,
                                                v66[0]);
                                              if ((_DWORD)v37
                                                || OUTLINED_FUNCTION_21_33(v37, v38, v39, (uint64_t *)&unk_257752504))
                                              {
LABEL_58:
                                                lpta_rpta_loadp(a1, (uint64_t)v66, (uint64_t)&v64);
                                                print_stream(a1, 8, 2, 0);
LABEL_83:
                                                *(_QWORD *)(a3 + 8) = v65;
                                                v15 = 0;
                                                goto LABEL_4;
                                              }
LABEL_80:
                                              OUTLINED_FUNCTION_5_36(46, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                                v59,
                                                v60,
                                                v61,
                                                v62,
                                                v63,
                                                v64);
                                              v36 = "I";
                                            }
                                            else
                                            {
LABEL_79:
                                              OUTLINED_FUNCTION_5_36(44, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                                v59,
                                                v60,
                                                v61,
                                                v62,
                                                v63,
                                                v64);
                                              v36 = "e";
                                            }
                                          }
                                          else
                                          {
LABEL_78:
                                            OUTLINED_FUNCTION_5_36(42, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                              v59,
                                              v60,
                                              v61,
                                              v62,
                                              v63,
                                              v64);
                                            v36 = "A";
                                          }
                                        }
                                        else
                                        {
LABEL_77:
                                          OUTLINED_FUNCTION_5_36(40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                            v59,
                                            v60,
                                            v61,
                                            v62,
                                            v63,
                                            v64);
                                          v36 = "i";
                                        }
                                      }
                                      else
                                      {
LABEL_76:
                                        OUTLINED_FUNCTION_5_36(38, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                          v59,
                                          v60,
                                          v61,
                                          v62,
                                          v63,
                                          v64);
                                        v36 = "U";
                                      }
                                    }
                                    else
                                    {
LABEL_75:
                                      OUTLINED_FUNCTION_5_36(36, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                        v59,
                                        v60,
                                        v61,
                                        v62,
                                        v63,
                                        v64);
                                      v36 = "u";
                                    }
                                  }
                                  else
                                  {
LABEL_74:
                                    OUTLINED_FUNCTION_5_36(34, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                      v59,
                                      v60,
                                      v61,
                                      v62,
                                      v63,
                                      v64);
                                    v36 = "o";
                                  }
                                }
                                else
                                {
LABEL_73:
                                  OUTLINED_FUNCTION_5_36(32, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                    v59,
                                    v60,
                                    v61,
                                    v62,
                                    v63,
                                    v64);
                                  v36 = "E";
                                }
                              }
                              else
                              {
LABEL_72:
                                OUTLINED_FUNCTION_5_36(30, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                  v59,
                                  v60,
                                  v61,
                                  v62,
                                  v63,
                                  v64);
                                v36 = "a";
                              }
                            }
                            else
                            {
LABEL_71:
                              OUTLINED_FUNCTION_5_36(28, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                                v59,
                                v60,
                                v61,
                                v62,
                                v63,
                                v64);
                              v36 = "'ng'";
                            }
                          }
                          else
                          {
LABEL_70:
                            OUTLINED_FUNCTION_5_36(26, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                              v59,
                              v60,
                              v61,
                              v62,
                              v63,
                              v64);
                            v36 = "'SS'";
                          }
                        }
                        else
                        {
LABEL_69:
                          OUTLINED_FUNCTION_5_36(24, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                            v59,
                            v60,
                            v61,
                            v62,
                            v63,
                            v64);
                          v36 = "'ss'";
                        }
                      }
                      else
                      {
LABEL_68:
                        OUTLINED_FUNCTION_5_36(22, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                          v59,
                          v60,
                          v61,
                          v62,
                          v63,
                          v64);
                        v36 = "'kk'";
                      }
                    }
                    else
                    {
LABEL_67:
                      OUTLINED_FUNCTION_5_36(20, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                        v59,
                        v60,
                        v61,
                        v62,
                        v63,
                        v64);
                      v36 = "'kh'";
                    }
                  }
                  else
                  {
LABEL_66:
                    OUTLINED_FUNCTION_5_36(18, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                      v59,
                      v60,
                      v61,
                      v62,
                      v63,
                      v64);
                    v36 = "'tt'";
                  }
                }
                else
                {
LABEL_65:
                  OUTLINED_FUNCTION_5_36(16, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                    v59,
                    v60,
                    v61,
                    v62,
                    v63,
                    v64);
                  v36 = "'th'";
                }
              }
              else
              {
LABEL_63:
                OUTLINED_FUNCTION_5_36(14, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                  v59,
                  v60,
                  v61,
                  v62,
                  v63,
                  v64);
                v36 = "J";
              }
            }
            else
            {
LABEL_62:
              OUTLINED_FUNCTION_5_36(12, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
                v59,
                v60,
                v61,
                v62,
                v63,
                v64);
              v36 = "c";
            }
          }
          else
          {
LABEL_61:
            OUTLINED_FUNCTION_5_36(10, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
              v59,
              v60,
              v61,
              v62,
              v63,
              v64);
            v36 = "'cc'";
          }
        }
        else
        {
LABEL_59:
          OUTLINED_FUNCTION_5_36(6, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
            v59,
            v60,
            v61,
            v62,
            v63,
            v64);
          v36 = "'pp'";
        }
      }
      else
      {
LABEL_45:
        OUTLINED_FUNCTION_5_36(3, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
          v59,
          v60,
          v61,
          v62,
          v63,
          v64);
        v36 = "'ph'";
      }
      v40 = a1;
      goto LABEL_82;
    }
  }
LABEL_3:
  v15 = 94;
LABEL_4:
  OUTLINED_FUNCTION_46_22();
  return v15;
}

uint64_t OUTLINED_FUNCTION_0_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_1_37()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_2_37()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;
  uint64_t v64;
  char v65;

  *(_BYTE *)(v64 + 136) = v65;
  *(_QWORD *)(v64 + 112) = a64;
  *(_QWORD *)(v64 + 128) = 0;
  return test_ptr(v64);
}

void OUTLINED_FUNCTION_4_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  lpta_loadp_setscan_r(v34, (uint64_t)&a34);
}

double OUTLINED_FUNCTION_5_36@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  uint64_t v25;
  double result;

  *(_QWORD *)&result = savescptr(v25, a1, (uint64_t)&a25).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_6_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 2u, 1u, a4);
}

void OUTLINED_FUNCTION_8_36(uint64_t a1, uint64_t a2)
{
  lpta_loadp_setscan_r(a1, a2);
}

void OUTLINED_FUNCTION_9_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

double OUTLINED_FUNCTION_10_36@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_11_36(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  insert_2pt_s(a1, a2, a3, a4, 0);
}

uint64_t OUTLINED_FUNCTION_12_36()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_35()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_14_35()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

void OUTLINED_FUNCTION_15_35()
{
  insert_2ptv();
}

void OUTLINED_FUNCTION_16_35()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_17_35()
{
  uint64_t v0;

  npush_s(v0);
}

uint64_t OUTLINED_FUNCTION_18_34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_19_34()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_20_34()
{
  return advance_tok();
}

uint64_t OUTLINED_FUNCTION_21_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 2u, 2u, a4);
}

BOOL OUTLINED_FUNCTION_22_32()
{
  uint64_t v0;
  unsigned int v1;

  return testFldeq(v0, v1, 4, 4);
}

uint64_t OUTLINED_FUNCTION_23_32()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_24_31()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

uint64_t OUTLINED_FUNCTION_25_31()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_26_31()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_27_29(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, __int16 a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,unsigned __int16 a36,__int16 a37)
{
  uint64_t v37;

  a37 = a7;
  npop(v37, &a36, a1, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_28_29()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_29_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, v10, v9, 4294967290, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_31_29()
{
  _QWORD *v0;

  return vback(v0, 0);
}

void OUTLINED_FUNCTION_32_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned __int8 a41)
{
  uint64_t v41;

  settvar_s(v41, &a41, 0x15u);
}

uint64_t OUTLINED_FUNCTION_33_29@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_34_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a65;
  uint64_t v65;

  return lpta_rpta_loadp(v65, (uint64_t)&a65, (uint64_t)&a63);
}

double OUTLINED_FUNCTION_35_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  double result;

  *(_QWORD *)&result = savescptr(a1, a2, (uint64_t)&a61).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_36_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, a2, v9, v10, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_37_28()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_38_27(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

uint64_t OUTLINED_FUNCTION_39_25()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_40_23(uint64_t a1)
{
  unsigned __int8 *v1;

  settvar_s(a1, v1, 8u);
}

void OUTLINED_FUNCTION_41_23()
{
  uint64_t v0;

  npush_s(v0);
}

void *OUTLINED_FUNCTION_42_23(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return fence_36(v3, a2, a3);
}

void OUTLINED_FUNCTION_43_23()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_44_23()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_45_23()
{
  uint64_t v0;

  lpta_mover(v0);
}

void OUTLINED_FUNCTION_46_22()
{
  uint64_t v0;

  vretproc(v0);
}

void OUTLINED_FUNCTION_47_22()
{
  uint64_t v0;

  npush_s(v0);
}

uint64_t OUTLINED_FUNCTION_48_21()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_50_20(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

uint64_t OUTLINED_FUNCTION_51_19()
{
  int *v0;

  return setjmp(v0);
}

uint64_t kor_word_cat_anno(uint64_t a1, __int16 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[2];
  _BYTE v72[10];
  _BYTE v73[9];
  _BYTE v74[9];
  int v75[48];
  uint64_t v76;

  v76 = *MEMORY[0x24BDAC8D0];
  v71[0] = 0;
  v71[1] = 0;
  v69 = 0;
  v70 = 0;
  HIDWORD(v68) = 0;
  v66 = 0;
  v67 = 0;
  bzero(&v43, 0xB8uLL);
  bzero(v75, 0xC0uLL);
  if (setjmp(v75) || ventproc(a1, (uint64_t)&v43, (uint64_t)v74, (uint64_t)v73, (uint64_t)v72, (uint64_t)v75))
  {
LABEL_3:
    vretproc(a1);
    return 94;
  }
  get_parm(a1, (uint64_t)v71, a2, 4294967290, v6, v7, v8, v9);
  get_parm(a1, (uint64_t)&v69, (__int16 *)a3, 4294967290, v11, v12, v13, v14);
  WORD2(v68) = -4;
  push_ptr_init(a1, (uint64_t)&v66);
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
  memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
  HIWORD(v68) = 0;
  starttest(a1, 1);
  lpta_loadp_setscan_r(a1, (uint64_t)v71);
  if (v15)
    goto LABEL_5;
  if (testFldeq(a1, 1u, 3, 1) || advance_tok())
  {
LABEL_10:
    v23 = *(_QWORD *)(a1 + 104);
    if (v23)
    {
      *(_QWORD *)(a1 + 104) = 0;
      v24 = v23;
    }
    else
    {
      v24 = vback((_QWORD *)a1, 0);
    }
    switch((int)v24)
    {
      case 1:
        goto LABEL_5;
      case 2:
        break;
      case 3:
        goto LABEL_14;
      case 4:
        goto LABEL_15;
      case 5:
        goto LABEL_17;
      case 6:
        goto LABEL_19;
      case 7:
        goto LABEL_21;
      case 8:
        goto LABEL_23;
      default:
        goto LABEL_3;
    }
  }
  savescptr(a1, 2, (uint64_t)&v66);
  if (testFldeq(a1, 1u, 3, 2) || advance_tok())
    goto LABEL_10;
LABEL_14:
  savescptr(a1, 3, (uint64_t)&v69);
  string_to_short();
LABEL_15:
  *(_WORD *)(a1 + 3610) = 13;
  copyvar(a1, (unsigned __int16 *)(a1 + 3608), (__int16 *)&v68 + 2);
  OUTLINED_FUNCTION_1_38(v25, v26, v27, v28, v29, v30, v31, v32, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71[0]);
  if ((_DWORD)v24 || (v24 = OUTLINED_FUNCTION_0_38(v24, v16, v17, (uint64_t *)&_MergedGlobals_25), (_DWORD)v24))
  {
LABEL_17:
    OUTLINED_FUNCTION_1_38(v24, v16, v17, v18, v19, v20, v21, v22, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71[0]);
    if ((_DWORD)v24 || (v24 = OUTLINED_FUNCTION_0_38(v24, v16, v17, (uint64_t *)&unk_257752511), (_DWORD)v24))
    {
LABEL_19:
      OUTLINED_FUNCTION_1_38(v24, v16, v17, v18, v19, v20, v21, v22, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71[0]);
      if ((_DWORD)v24 || (v24 = OUTLINED_FUNCTION_0_38(v24, v16, v17, (uint64_t *)&unk_257752512), (_DWORD)v24))
      {
LABEL_21:
        OUTLINED_FUNCTION_1_38(v24, v16, v17, v18, v19, v20, v21, v22, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
          v53,
          v54,
          v55,
          v56,
          v57,
          v58,
          v59,
          v60,
          v61,
          v62,
          v63,
          v64,
          v65,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71[0]);
        if ((_DWORD)v24 || (v24 = OUTLINED_FUNCTION_0_38(v24, v16, v17, (uint64_t *)&unk_257752513), (_DWORD)v24))
        {
LABEL_23:
          OUTLINED_FUNCTION_1_38(v24, v16, v17, v18, v19, v20, v21, v22, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52,
            v53,
            v54,
            v55,
            v56,
            v57,
            v58,
            v59,
            v60,
            v61,
            v62,
            v63,
            v64,
            v65,
            v66,
            v67,
            v68,
            v69,
            v70,
            v71[0]);
          if ((_DWORD)v33 || OUTLINED_FUNCTION_0_38(v33, v34, v35, (uint64_t *)&unk_257752514))
            goto LABEL_5;
        }
      }
    }
  }
  npush_s(a1);
  *(_WORD *)(a1 + 3610) = 12;
  npop(a1, (unsigned __int16 *)(a1 + 3608), v36, v37, v38, v39, v40, v41);
LABEL_5:
  *(_QWORD *)(a3 + 8) = v70;
  vretproc(a1);
  return 0;
}

uint64_t OUTLINED_FUNCTION_0_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

void OUTLINED_FUNCTION_1_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;

  lpta_loadp_setscan_r(v38, (uint64_t)&a38);
}

uint64_t assign_kor_stress(uint64_t a1, __int16 *a2, __int16 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[184];
  _QWORD v17[2];
  _QWORD v18[2];
  _BYTE v19[10];
  _BYTE v20[9];
  _BYTE v21[9];
  int v22[48];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v18[0] = 0;
  v18[1] = 0;
  v17[0] = 0;
  v17[1] = 0;
  bzero(v16, 0xB8uLL);
  bzero(v22, 0xC0uLL);
  if (setjmp(v22) || ventproc(a1, (uint64_t)v16, (uint64_t)v21, (uint64_t)v20, (uint64_t)v19, (uint64_t)v22))
  {
    v10 = 94;
  }
  else
  {
    get_parm(a1, (uint64_t)v18, a2, 4294967290, v6, v7, v8, v9);
    get_parm(a1, (uint64_t)v17, a3, 4294967290, v12, v13, v14, v15);
    *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 1;
    memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
    v10 = 0;
    **(_BYTE **)(a1 + 248) = 4;
    *(_BYTE *)(*(_QWORD *)(a1 + 264) + 4) = 0;
  }
  vretproc(a1);
  return v10;
}

uint64_t estimate_kor_nsylls(uint64_t a1, __int16 *a2, __int16 *a3, __int16 *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  _BYTE v26[184];
  _QWORD v27[2];
  _QWORD v28[2];
  _QWORD v29[2];
  _QWORD v30[2];
  int v31;
  _BYTE v32[10];
  _BYTE v33[9];
  _BYTE v34[9];
  int v35[48];
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  v31 = 0;
  v30[0] = 0;
  v30[1] = 0;
  v29[0] = 0;
  v29[1] = 0;
  v28[0] = 0;
  v28[1] = 0;
  v27[0] = 0;
  v27[1] = 0;
  bzero(v26, 0xB8uLL);
  bzero(v35, 0xC0uLL);
  if (!setjmp(v35) && !ventproc(a1, (uint64_t)v26, (uint64_t)v34, (uint64_t)v33, (uint64_t)v32, (uint64_t)v35))
  {
    get_parm(a1, (uint64_t)&v31, a2, 4294967292, v8, v9, v10, v11);
    get_parm(a1, (uint64_t)v30, a3, 4294967290, v14, v15, v16, v17);
    get_parm(a1, (uint64_t)v29, a4, 4294967290, v18, v19, v20, v21);
    push_ptr_init(a1, (uint64_t)v28);
    push_ptr_init(a1, (uint64_t)v27);
    *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
    memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
    startloop(a1, 1);
    lpta_loadpn(a1, v30);
    OUTLINED_FUNCTION_0_39();
    lpta_storep(a1, (uint64_t)v28);
    lpta_loadpn(a1, v29);
    OUTLINED_FUNCTION_0_39();
    lpta_storep(a1, (uint64_t)v27);
    if (!forall_to_test(a1, (unsigned __int16 *)v28, (__int16 *)v27))
    {
LABEL_6:
      bspush_ca(a1);
      lpta_loadp_setscan_r(a1, (uint64_t)v28);
      if (!v22 && !testFldeq(a1, 1u, 5, 1) && !advance_tok())
      {
LABEL_9:
        c_assvar(a1, (unsigned __int16 *)&v31);
        ++HIWORD(v31);
LABEL_10:
        forto_adv_upto_r(a1, 1, 2, 4, 1, (uint64_t)v28);
        if (!v23)
        {
LABEL_15:
          a2[1] = HIWORD(v31);
          v12 = 0;
          goto LABEL_4;
        }
      }
    }
    v24 = *(_QWORD *)(a1 + 104);
    if (v24)
    {
      *(_QWORD *)(a1 + 104) = 0;
      v25 = v24;
    }
    else
    {
      v25 = vback((_QWORD *)a1, 0);
    }
    switch(v25)
    {
      case 1:
        goto LABEL_15;
      case 2:
        goto LABEL_9;
      case 3:
        goto LABEL_10;
      case 4:
        goto LABEL_6;
      default:
        break;
    }
  }
  v12 = 94;
LABEL_4:
  vretproc(a1);
  return v12;
}

void OUTLINED_FUNCTION_0_39()
{
  uint64_t v0;

  lpta_mover(v0);
}

void *fence_37(uint64_t a1, int a2, uint64_t a3)
{
  void *result;
  uint64_t i;

  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = a2;
  result = memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
  for (i = 0; a2 != i; ++i)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 248) + i) = *(_BYTE *)(a3 + i);
    *(_BYTE *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a3 + i)) = i;
  }
  return result;
}

uint64_t kor_symbolic_rules(uint64_t a1, uint64_t a2, __int16 *a3)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[184];
  _QWORD v19[4];
  _BYTE v20[10];
  _BYTE v21[9];
  _BYTE v22[9];
  int v23[48];
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  memset(v19, 0, sizeof(v19));
  bzero(v18, 0xB8uLL);
  bzero(v23, 0xC0uLL);
  if (setjmp(v23) || ventproc(a1, (uint64_t)v18, (uint64_t)v22, (uint64_t)v21, (uint64_t)v20, (uint64_t)v23))
  {
    v5 = 94;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_0_40();
    get_parm(v7, v8, v9, 4294967290, v10, v11, v12, v13);
    get_parm(a1, (uint64_t)v19, a3, 4294967290, v14, v15, v16, v17);
    v5 = 0;
    fence_37(a1, 0, (uint64_t)&null_str_17);
    fence_37(a1, 1, (uint64_t)&string_1_3);
    init_kor_symbolic_vars(a1);
    OUTLINED_FUNCTION_0_40();
    kor_analyze_morphs2();
    OUTLINED_FUNCTION_0_40();
    kor_generate_diaphones();
    OUTLINED_FUNCTION_0_40();
    kor_create_syllables();
  }
  vretproc(a1);
  return v5;
}

uint64_t OUTLINED_FUNCTION_0_40()
{
  uint64_t v0;

  return v0;
}

void *fence_38(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
  return memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
}

void strip_kor_clitics(uint64_t a1, __int16 *a2, uint64_t a3, __int16 *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  __int16 *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  unsigned int v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137[16];
  unsigned __int16 v138[8];
  _BYTE v139[8];
  uint64_t v140;
  __int16 v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD v144[2];
  _BYTE v145[10];
  _BYTE v146[9];
  _BYTE v147[9];
  _BYTE v148[192];
  uint64_t v149;

  v149 = *MEMORY[0x24BDAC8D0];
  v144[0] = 0;
  v144[1] = 0;
  v142 = 0;
  v143 = 0;
  OUTLINED_FUNCTION_201_0();
  OUTLINED_FUNCTION_27_30(v8, v9, v10, v11, v12, v13, v14, v15, v105, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123,
    v124,
    v125,
    v126,
    v127,
    v128,
    v129,
    v130,
    v131,
    v132,
    v133,
    v134,
    v135,
    v136);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_83_10(v16, v17);
  v18 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v18
    && !OUTLINED_FUNCTION_26_32(v18, (uint64_t)&v107, (uint64_t)v147, (uint64_t)v146, (uint64_t)v145, (uint64_t)v148))
  {
    OUTLINED_FUNCTION_6_37(a1, (uint64_t)v144, a2, v19, v20, v21, v22, v23);
    OUTLINED_FUNCTION_6_37(a1, (uint64_t)&v142, (__int16 *)a3, v24, v25, v26, v27, v28);
    OUTLINED_FUNCTION_6_37(a1, (uint64_t)&v141, a4, v29, v30, v31, v32, v33);
    v35 = OUTLINED_FUNCTION_11_37(v34, (uint64_t)v139);
    v36 = OUTLINED_FUNCTION_11_37(v35, (uint64_t)v138);
    v37 = OUTLINED_FUNCTION_11_37(v36, (uint64_t)v137);
    v38 = OUTLINED_FUNCTION_11_37(v37, (uint64_t)&v135);
    OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v133);
    OUTLINED_FUNCTION_112_8();
    v140 = *(_QWORD *)(a1 + 3360);
    OUTLINED_FUNCTION_1_39(1);
    v39 = OUTLINED_FUNCTION_117_8();
    lpta_loadp_setscan_r(v39, v40);
    v45 = 0;
    if (!v46)
    {
      bspush_ca_scan_boa(a1);
      v47 = testFldeq(a1, 4u, 1, 0);
      LODWORD(v48) = v47 == 0;
      goto LABEL_8;
    }
    while (2)
    {
      mark_kor_words_without_clitics(a1, (__int16 *)v144, (uint64_t)&v142, &v141, v41, v42, v43, v44);
      v48 = (__int16 *)v45;
      if (!(_DWORD)v47)
        goto LABEL_79;
LABEL_54:
      LOBYTE(a4) = 4;
      OUTLINED_FUNCTION_5_37(v47, 4);
      lpta_loadp_setscan_r(a1, (uint64_t)v144);
      if (!v81)
      {
        v47 = OUTLINED_FUNCTION_142_3();
        if (!(_DWORD)v47)
        {
          npush_i(a1);
          if_testge(a1, v90, v91, v92, v93, v94, v95, v96);
          if (!(_DWORD)v47)
          {
            v47 = OUTLINED_FUNCTION_21_34();
            if (!(_DWORD)v47)
              goto LABEL_79;
          }
        }
LABEL_8:
        v49 = (int)v48;
LABEL_9:
        v50 = *(_QWORD *)(a1 + 104);
        if (v50)
        {
          OUTLINED_FUNCTION_169_2(v50);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v47, v49);
          v45 = 0;
        }
        OUTLINED_FUNCTION_110_8();
        switch(v54)
        {
          case 0:
            continue;
          case 1:
            OUTLINED_FUNCTION_50_21();
            v47 = OUTLINED_FUNCTION_21_34();
            goto LABEL_40;
          case 2:
            v48 = (__int16 *)v45;
            goto LABEL_54;
          case 3:
            a4 = (__int16 *)v45;
            goto LABEL_56;
          case 4:
            a4 = (__int16 *)v45;
            goto LABEL_57;
          case 5:
            goto LABEL_79;
          case 6:
            goto LABEL_16;
          case 7:
            OUTLINED_FUNCTION_202_0();
            forto_adv_r(a1, v55, v56, 26, 1, (uint64_t)v138);
            goto LABEL_40;
          case 8:
            goto LABEL_62;
          case 9:
            OUTLINED_FUNCTION_25_32(v47, 10, (uint64_t)&v135);
LABEL_16:
            OUTLINED_FUNCTION_1_39(12);
            OUTLINED_FUNCTION_45_24(v57, (uint64_t)v137);
            if ((_DWORD)v47)
              goto LABEL_17;
            OUTLINED_FUNCTION_19_35(13);
            v63 = (uint64_t *)&_MergedGlobals_26;
            goto LABEL_37;
          case 10:
            goto LABEL_63;
          case 11:
LABEL_17:
            OUTLINED_FUNCTION_85_10(v47, v51, v52, v53, v41, v42, v43, v44, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116,
              v117,
              v118,
              v119,
              v120,
              v121,
              v122,
              v123,
              v124,
              v125,
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137[0]);
            OUTLINED_FUNCTION_95_8();
            if (OUTLINED_FUNCTION_33_30())
              goto LABEL_20;
            if (OUTLINED_FUNCTION_38_28())
              goto LABEL_20;
            OUTLINED_FUNCTION_107_8();
            if (v58)
              goto LABEL_20;
            goto LABEL_79;
          case 12:
            OUTLINED_FUNCTION_19_35(15);
            v63 = (uint64_t *)&unk_257752519;
            goto LABEL_37;
          case 13:
            goto LABEL_38;
          case 14:
            v63 = (uint64_t *)&unk_25775251A;
LABEL_37:
            v47 = OUTLINED_FUNCTION_17_36(v47, v51, v52, v63);
            v49 = v45;
            if ((_DWORD)v47)
              goto LABEL_9;
LABEL_38:
            *(_BYTE *)(a1 + 136) = 1;
            v47 = OUTLINED_FUNCTION_42_24();
            v49 = v45;
            if ((_DWORD)v47)
              goto LABEL_9;
            OUTLINED_FUNCTION_107_8();
            goto LABEL_40;
          case 15:
LABEL_20:
            OUTLINED_FUNCTION_1_39(17);
            OUTLINED_FUNCTION_45_24(v59, (uint64_t)v137);
            if ((_DWORD)v47)
              goto LABEL_25;
            v47 = OUTLINED_FUNCTION_139_4(v47, v51, v52, (uint64_t *)&unk_257752549);
            if ((_DWORD)v47)
              goto LABEL_25;
            *(_BYTE *)(a1 + 136) = (_BYTE)a4;
            v47 = OUTLINED_FUNCTION_42_24();
            if ((_DWORD)v47)
              goto LABEL_25;
            OUTLINED_FUNCTION_23_33(v47, (uint64_t)v144, (uint64_t)&v141);
            OUTLINED_FUNCTION_65_14();
            OUTLINED_FUNCTION_94_8();
            if ((_DWORD)v47)
              goto LABEL_25;
            OUTLINED_FUNCTION_74_14();
            if ((_DWORD)v47)
              goto LABEL_25;
            OUTLINED_FUNCTION_23_33(v47, (uint64_t)&v135, (uint64_t)&v141);
            a4 = (__int16 *)&v130;
            OUTLINED_FUNCTION_152_3();
            OUTLINED_FUNCTION_132_6();
            WORD1(v130) = 1;
            OUTLINED_FUNCTION_103_8(v64, v65, v66, v67, v68, v69, v70, v71);
            OUTLINED_FUNCTION_124_7();
            v49 = v45;
            if ((_DWORD)v47)
              goto LABEL_9;
            OUTLINED_FUNCTION_23_33(v47, (uint64_t)v144, (uint64_t)&v135);
            a4 = (__int16 *)&v130;
            OUTLINED_FUNCTION_164_2();
            OUTLINED_FUNCTION_132_6();
            WORD1(v130) = 1;
            OUTLINED_FUNCTION_103_8(v72, v73, v74, v75, v76, v77, v78, v79);
            OUTLINED_FUNCTION_123_7();
            goto LABEL_40;
          case 16:
LABEL_25:
            OUTLINED_FUNCTION_85_10(v47, v51, v52, v53, v41, v42, v43, v44, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116,
              v117,
              v118,
              v119,
              v120,
              v121,
              v122,
              v123,
              v124,
              v125,
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137[0]);
            OUTLINED_FUNCTION_95_8();
            if (OUTLINED_FUNCTION_33_30())
              goto LABEL_28;
            if (testneq(a1))
              goto LABEL_28;
            OUTLINED_FUNCTION_107_8();
            if (v60)
              goto LABEL_28;
            goto LABEL_79;
          case 17:
LABEL_28:
            OUTLINED_FUNCTION_1_39(19);
            OUTLINED_FUNCTION_45_24(v61, (uint64_t)v137);
            if ((_DWORD)v47)
              goto LABEL_44;
            OUTLINED_FUNCTION_19_35(20);
            v62 = (uint64_t *)&_MergedGlobals_26;
            goto LABEL_30;
          case 18:
LABEL_44:
            OUTLINED_FUNCTION_85_10(v47, v51, v52, v53, v41, v42, v43, v44, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116,
              v117,
              v118,
              v119,
              v120,
              v121,
              v122,
              v123,
              v124,
              v125,
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137[0]);
            OUTLINED_FUNCTION_95_8();
            v47 = OUTLINED_FUNCTION_33_30();
            if ((_DWORD)v47)
              goto LABEL_47;
            v47 = OUTLINED_FUNCTION_38_28();
            if ((_DWORD)v47)
              goto LABEL_47;
            OUTLINED_FUNCTION_108_8();
            if ((_DWORD)v47)
              goto LABEL_47;
            goto LABEL_79;
          case 19:
            v62 = (uint64_t *)&unk_257752519;
LABEL_30:
            v47 = OUTLINED_FUNCTION_17_36(v47, v51, v52, v62);
            v49 = v45;
            if (!(_DWORD)v47)
              goto LABEL_31;
            goto LABEL_9;
          case 20:
LABEL_31:
            *(_BYTE *)(a1 + 136) = 1;
            v47 = OUTLINED_FUNCTION_42_24();
            v49 = v45;
            if (!(_DWORD)v47)
            {
              OUTLINED_FUNCTION_108_8();
LABEL_40:
              v49 = v45;
              if (!(_DWORD)v47)
                goto LABEL_79;
            }
            goto LABEL_9;
          case 21:
LABEL_47:
            OUTLINED_FUNCTION_85_10(v47, v51, v52, v53, v41, v42, v43, v44, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116,
              v117,
              v118,
              v119,
              v120,
              v121,
              v122,
              v123,
              v124,
              v125,
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137[0]);
            OUTLINED_FUNCTION_95_8();
            if (OUTLINED_FUNCTION_33_30())
              goto LABEL_50;
            if (testneq(a1))
              goto LABEL_50;
            OUTLINED_FUNCTION_108_8();
            if (v80)
              goto LABEL_50;
            goto LABEL_79;
          case 22:
LABEL_50:
            lpta_loadpn(a1, &v135);
            OUTLINED_FUNCTION_95_8();
            if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
              goto LABEL_52;
            goto LABEL_79;
          case 23:
LABEL_52:
            OUTLINED_FUNCTION_202_0();
            forall_cont_from();
            goto LABEL_58;
          case 24:
            goto LABEL_58;
          case 25:
            a4 = (__int16 *)v45;
            goto LABEL_59;
          default:
            goto LABEL_3;
        }
      }
      break;
    }
    a4 = v48;
LABEL_56:
    OUTLINED_FUNCTION_1_39(5);
    OUTLINED_FUNCTION_22_33(v82, (uint64_t)v144);
    if (!v83)
    {
      v47 = OUTLINED_FUNCTION_142_3();
      if ((_DWORD)v47)
        goto LABEL_74;
      npush_i(a1);
      if_testeq(a1, v97, v98, v99, v100, v101, v102, v103);
      if ((_DWORD)v47)
        goto LABEL_74;
      v47 = OUTLINED_FUNCTION_21_34();
      if ((_DWORD)v47)
        goto LABEL_74;
      mark_kor_particle();
      if (!v104)
      {
LABEL_79:
        *(_QWORD *)(a3 + 8) = v143;
        goto LABEL_3;
      }
    }
LABEL_57:
    startloop(a1, 6);
    copyvar(a1, v138, (__int16 *)v144);
    copyvar(a1, (unsigned __int16 *)&v133, &v141);
    v45 = (uint64_t)a4;
LABEL_58:
    v47 = forall_to_test(a1, v138, (__int16 *)&v133);
    a4 = (__int16 *)v45;
    LODWORD(v48) = v45;
    if ((_DWORD)v47)
      goto LABEL_8;
LABEL_59:
    OUTLINED_FUNCTION_52_19();
    OUTLINED_FUNCTION_45_24(v84, (uint64_t)v138);
    if (!(_DWORD)v47)
    {
      v47 = OUTLINED_FUNCTION_63_14();
      if (!(_DWORD)v47)
      {
        v47 = OUTLINED_FUNCTION_21_34();
        v45 = (uint64_t)a4;
        LODWORD(v48) = (_DWORD)a4;
        if (!(_DWORD)v47)
        {
LABEL_62:
          OUTLINED_FUNCTION_25_32(v47, 9, (uint64_t)v137);
LABEL_63:
          v85 = v45;
          LOBYTE(a4) = 10;
          v45 = 4;
          do
          {
            OUTLINED_FUNCTION_178_2();
            v86 = OUTLINED_FUNCTION_191_0();
            v47 = testFldeq(v86, v87, v88, v89);
            if ((_DWORD)v47)
              break;
            v47 = OUTLINED_FUNCTION_21_34();
          }
          while (!(_DWORD)v47);
          LODWORD(v48) = v85;
        }
        goto LABEL_8;
      }
    }
LABEL_74:
    LODWORD(v48) = (_DWORD)a4;
    goto LABEL_8;
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_87_9();
}

void mark_kor_words_without_clitics(uint64_t a1, __int16 *a2, uint64_t a3, __int16 *a4, int a5, int a6, int a7, int a8)
{
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33[23];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  _BYTE v39[10];
  _BYTE v40[9];
  _BYTE v41[9];
  _BYTE v42[192];
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v38[0] = 0;
  v38[1] = 0;
  OUTLINED_FUNCTION_3_38(a1, (int)a2, a3, (int)a4, a5, a6, a7, a8, v33[0], v33[1], v33[2], v33[3], v33[4], v33[5], v33[6], v33[7], v33[8], v33[9], v33[10],
    v33[11],
    v33[12],
    v33[13],
    v33[14],
    v33[15],
    v33[16],
    v33[17],
    v33[18],
    v33[19],
    v33[20],
    v33[21],
    v33[22],
    v34,
    v35,
    v36,
    v37);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_140_4(v12, v13);
  v14 = OUTLINED_FUNCTION_141_3();
  if (!(_DWORD)v14
    && !OUTLINED_FUNCTION_26_32(v14, (uint64_t)v33, (uint64_t)v41, (uint64_t)v40, (uint64_t)v39, (uint64_t)v42))
  {
    OUTLINED_FUNCTION_6_37(a1, (uint64_t)v38, a2, v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_6_37(a1, (uint64_t)&v36, (__int16 *)a3, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_6_37(a1, (uint64_t)&v34, a4, v25, v26, v27, v28, v29);
    fence_38(a1);
    OUTLINED_FUNCTION_158_3();
    kor_words_dict_lookup();
    if (!v30 || (mark_kor_adverbs_sentential(), !v31) || (mark_kor_ambiguous_nouns(), !v32))
    {
      v37 = v35;
      *(_QWORD *)(a3 + 8) = v35;
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_86_9();
}

void mark_kor_particle()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _QWORD v223[2];
  _QWORD v224[2];
  _BYTE v225[10];
  _BYTE v226[9];
  _BYTE v227[9];
  _BYTE v228[192];
  uint64_t v229;

  OUTLINED_FUNCTION_166_2();
  v229 = *MEMORY[0x24BDAC8D0];
  v224[0] = 0;
  v224[1] = 0;
  v223[0] = 0;
  v223[1] = 0;
  OUTLINED_FUNCTION_27_30(v5, v6, v7, v8, v9, v10, v11, v12, v190, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
    v203,
    v204,
    v205,
    v206,
    v207,
    v208,
    v209,
    v210,
    v211,
    v212,
    v213,
    v214,
    v215,
    v216,
    v217,
    v218,
    v219,
    v220,
    v221,
    v222);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_75_14(v13, v14);
  v15 = OUTLINED_FUNCTION_76_14();
  if ((_DWORD)v15
    || OUTLINED_FUNCTION_26_32(v15, (uint64_t)&v193, (uint64_t)v227, (uint64_t)v226, (uint64_t)v225, (uint64_t)v228))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v224, v4, v16, v17, v18, v19, v20);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v223, v3, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v221, (__int16 *)v1, v26, v27, v28, v29, v30);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v219, v2, v31, v32, v33, v34, v35);
  OUTLINED_FUNCTION_90_9();
  OUTLINED_FUNCTION_1_39(1);
  OUTLINED_FUNCTION_52_19();
  OUTLINED_FUNCTION_130_7();
  while (2)
  {
    OUTLINED_FUNCTION_95_8();
    v36 = OUTLINED_FUNCTION_33_30();
    if (!v36 && !(v36 = OUTLINED_FUNCTION_38_28()))
    {
LABEL_3:
      OUTLINED_FUNCTION_7_37();
    }
    else
    {
LABEL_8:
      v37 = *(_QWORD *)(v0 + 104);
      if (v37)
        OUTLINED_FUNCTION_24_32(v37);
      else
        OUTLINED_FUNCTION_31_30(v36, 0);
      OUTLINED_FUNCTION_110_8();
      switch(v46)
      {
        case 0:
          OUTLINED_FUNCTION_1_39(4);
          v54 = OUTLINED_FUNCTION_14_36(v47, (uint64_t)v223, v48, v49, v50, v51, v52, v53, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                  v203,
                  v204,
                  v205,
                  v206,
                  v207,
                  v208,
                  v209,
                  v210,
                  v211,
                  v212,
                  v213,
                  v214,
                  v215,
                  v216,
                  v217,
                  v218,
                  v219);
          if (OUTLINED_FUNCTION_64_14(v54, 1u, 13))
            goto LABEL_15;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v55)
            goto LABEL_15;
          OUTLINED_FUNCTION_14_36(v55, (uint64_t)v224, v56, v57, v58, v59, v60, v61, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_65_14();
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_15;
          goto LABEL_39;
        case 1:
          OUTLINED_FUNCTION_85_10(v38, v39, v40, v41, v42, v43, v44, v45, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219,
            v220,
            v221,
            v222,
            v223[0]);
          continue;
        case 3:
LABEL_15:
          OUTLINED_FUNCTION_1_39(6);
          v69 = OUTLINED_FUNCTION_14_36(v62, (uint64_t)v223, v63, v64, v65, v66, v67, v68, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                  v203,
                  v204,
                  v205,
                  v206,
                  v207,
                  v208,
                  v209,
                  v210,
                  v211,
                  v212,
                  v213,
                  v214,
                  v215,
                  v216,
                  v217,
                  v218,
                  v219);
          if (OUTLINED_FUNCTION_64_14(v69, 1u, 14))
            goto LABEL_18;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v70)
            goto LABEL_18;
          OUTLINED_FUNCTION_14_36(v70, (uint64_t)v224, v71, v72, v73, v74, v75, v76, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_18;
          goto LABEL_39;
        case 4:
          goto LABEL_39;
        case 5:
LABEL_18:
          OUTLINED_FUNCTION_1_39(7);
          v84 = OUTLINED_FUNCTION_14_36(v77, (uint64_t)v223, v78, v79, v80, v81, v82, v83, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                  v203,
                  v204,
                  v205,
                  v206,
                  v207,
                  v208,
                  v209,
                  v210,
                  v211,
                  v212,
                  v213,
                  v214,
                  v215,
                  v216,
                  v217,
                  v218,
                  v219);
          if (OUTLINED_FUNCTION_64_14(v84, 1u, 15))
            goto LABEL_21;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v85)
            goto LABEL_21;
          OUTLINED_FUNCTION_14_36(v85, (uint64_t)v224, v86, v87, v88, v89, v90, v91, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_65_14();
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_21;
          goto LABEL_39;
        case 6:
LABEL_21:
          OUTLINED_FUNCTION_1_39(8);
          v99 = OUTLINED_FUNCTION_14_36(v92, (uint64_t)v223, v93, v94, v95, v96, v97, v98, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                  v203,
                  v204,
                  v205,
                  v206,
                  v207,
                  v208,
                  v209,
                  v210,
                  v211,
                  v212,
                  v213,
                  v214,
                  v215,
                  v216,
                  v217,
                  v218,
                  v219);
          if (OUTLINED_FUNCTION_64_14(v99, 1u, 16))
            goto LABEL_24;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v100)
            goto LABEL_24;
          OUTLINED_FUNCTION_14_36(v100, (uint64_t)v224, v101, v102, v103, v104, v105, v106, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          mark_s();
          if ((_DWORD)v38)
            goto LABEL_24;
          goto LABEL_39;
        case 7:
LABEL_24:
          OUTLINED_FUNCTION_1_39(9);
          v114 = OUTLINED_FUNCTION_14_36(v107, (uint64_t)v223, v108, v109, v110, v111, v112, v113, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                   v203,
                   v204,
                   v205,
                   v206,
                   v207,
                   v208,
                   v209,
                   v210,
                   v211,
                   v212,
                   v213,
                   v214,
                   v215,
                   v216,
                   v217,
                   v218,
                   v219);
          if (OUTLINED_FUNCTION_64_14(v114, 1u, 17))
            goto LABEL_27;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v115)
            goto LABEL_27;
          OUTLINED_FUNCTION_14_36(v115, (uint64_t)v224, v116, v117, v118, v119, v120, v121, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_27;
          goto LABEL_39;
        case 8:
LABEL_27:
          OUTLINED_FUNCTION_1_39(10);
          v129 = OUTLINED_FUNCTION_14_36(v122, (uint64_t)v223, v123, v124, v125, v126, v127, v128, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                   v203,
                   v204,
                   v205,
                   v206,
                   v207,
                   v208,
                   v209,
                   v210,
                   v211,
                   v212,
                   v213,
                   v214,
                   v215,
                   v216,
                   v217,
                   v218,
                   v219);
          if (OUTLINED_FUNCTION_64_14(v129, 1u, 18))
            goto LABEL_30;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v130)
            goto LABEL_30;
          OUTLINED_FUNCTION_14_36(v130, (uint64_t)v224, v131, v132, v133, v134, v135, v136, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_65_14();
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_30;
          goto LABEL_39;
        case 9:
LABEL_30:
          OUTLINED_FUNCTION_1_39(11);
          v144 = OUTLINED_FUNCTION_14_36(v137, (uint64_t)v223, v138, v139, v140, v141, v142, v143, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                   v203,
                   v204,
                   v205,
                   v206,
                   v207,
                   v208,
                   v209,
                   v210,
                   v211,
                   v212,
                   v213,
                   v214,
                   v215,
                   v216,
                   v217,
                   v218,
                   v219);
          if (OUTLINED_FUNCTION_64_14(v144, 1u, 19))
            goto LABEL_33;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v145)
            goto LABEL_33;
          OUTLINED_FUNCTION_14_36(v145, (uint64_t)v224, v146, v147, v148, v149, v150, v151, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_65_14();
          OUTLINED_FUNCTION_187_1();
          if ((_DWORD)v38)
            goto LABEL_33;
          goto LABEL_39;
        case 10:
LABEL_33:
          OUTLINED_FUNCTION_1_39(12);
          v159 = OUTLINED_FUNCTION_14_36(v152, (uint64_t)v223, v153, v154, v155, v156, v157, v158, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                   v203,
                   v204,
                   v205,
                   v206,
                   v207,
                   v208,
                   v209,
                   v210,
                   v211,
                   v212,
                   v213,
                   v214,
                   v215,
                   v216,
                   v217,
                   v218,
                   v219);
          if (OUTLINED_FUNCTION_64_14(v159, 1u, 20))
            goto LABEL_36;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v160)
            goto LABEL_36;
          OUTLINED_FUNCTION_14_36(v160, (uint64_t)v224, v161, v162, v163, v164, v165, v166, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_65_14();
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_36;
          goto LABEL_39;
        case 11:
LABEL_36:
          OUTLINED_FUNCTION_1_39(13);
          v174 = OUTLINED_FUNCTION_14_36(v167, (uint64_t)v223, v168, v169, v170, v171, v172, v173, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
                   v203,
                   v204,
                   v205,
                   v206,
                   v207,
                   v208,
                   v209,
                   v210,
                   v211,
                   v212,
                   v213,
                   v214,
                   v215,
                   v216,
                   v217,
                   v218,
                   v219);
          if (OUTLINED_FUNCTION_64_14(v174, 1u, 21))
            goto LABEL_3;
          OUTLINED_FUNCTION_10_37();
          if ((_DWORD)v175)
            goto LABEL_3;
          OUTLINED_FUNCTION_14_36(v175, (uint64_t)v224, v176, v177, v178, v179, v180, v181, v192, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_65_14();
          OUTLINED_FUNCTION_94_8();
          if ((_DWORD)v38)
            goto LABEL_3;
LABEL_39:
          OUTLINED_FUNCTION_14_36(v38, (uint64_t)v223, v40, v41, v42, v43, v44, v45, v191, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202,
            v203,
            v204,
            v205,
            v206,
            v207,
            v208,
            v209,
            v210,
            v211,
            v212,
            v213,
            v214,
            v215,
            v216,
            v217,
            v218,
            v219);
          OUTLINED_FUNCTION_152_3();
          OUTLINED_FUNCTION_132_6();
          WORD1(v216) = 1;
          OUTLINED_FUNCTION_103_8(v182, v183, v184, v185, v186, v187, v188, v189);
          OUTLINED_FUNCTION_124_7();
          if (v36)
            goto LABEL_8;
          *(_QWORD *)(v1 + 8) = v222;
          OUTLINED_FUNCTION_7_37();
          break;
        default:
          goto LABEL_3;
      }
    }
    break;
  }
  OUTLINED_FUNCTION_86_9();
}

void mark_kor_verb_ending()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  size_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unsigned __int8 v38;
  _QWORD *v39;
  unsigned __int8 v40;
  _QWORD *v41;
  unsigned __int8 v42;
  _QWORD *v43;
  unsigned __int8 v44;
  _QWORD *v45;
  unsigned __int8 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unsigned __int16 *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  __int16 v158;
  __int16 v159;
  char v160[8];
  uint64_t v161;
  char v162[8];
  uint64_t v163;
  __int16 v164;
  uint64_t v165;
  __int16 v166[10];
  _BYTE v167[10];
  _BYTE v168[9];
  _BYTE v169[9];
  _BYTE v170[208];

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_166_2();
  OUTLINED_FUNCTION_126_7();
  v154 = 0;
  v155 = 0;
  v156 = 0;
  OUTLINED_FUNCTION_138_4();
  bzero(&v131, v5);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_75_14(v6, v7);
  v8 = OUTLINED_FUNCTION_76_14();
  if ((_DWORD)v8)
    goto LABEL_3;
  if (OUTLINED_FUNCTION_26_32(v8, (uint64_t)&v131, (uint64_t)v169, (uint64_t)v168, (uint64_t)v167, (uint64_t)v170))goto LABEL_3;
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v166, v4, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v164, v3, v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v162, (__int16 *)v1, v19, v20, v21, v22, v23);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v160, v2, v24, v25, v26, v27, v28);
  v158 = -4;
  LODWORD(v156) = 0;
  LODWORD(v154) = -65533;
  OUTLINED_FUNCTION_119_7();
  v159 = *(_WORD *)(v0 + 2290);
  OUTLINED_FUNCTION_130_7();
  OUTLINED_FUNCTION_95_8();
  if (!OUTLINED_FUNCTION_33_30() && !OUTLINED_FUNCTION_38_28())
    goto LABEL_3;
  v130 = 5;
  v129 = 6;
  v128 = 9;
  v127 = 17;
  v126 = 20;
  v125 = 21;
  v124 = 22;
  v123 = 25;
  v122 = 26;
  v121 = 27;
  v120 = 30;
  v119 = 31;
  v118 = 32;
  v117 = 34;
  v116 = 36;
  v115 = 11;
  v114 = 12;
  while (2)
  {
    OUTLINED_FUNCTION_177_2();
    OUTLINED_FUNCTION_104_8();
    if (!OUTLINED_FUNCTION_33_30() && !OUTLINED_FUNCTION_38_28())
    {
      handle_kor_inflection();
      if (!v112)
      {
        OUTLINED_FUNCTION_165_2();
        if (v55)
        {
          OUTLINED_FUNCTION_23_33(v113, (uint64_t)v166, (uint64_t)v160);
          OUTLINED_FUNCTION_187_1();
        }
LABEL_74:
        v111 = v165;
        v163 = v165;
LABEL_75:
        *(_QWORD *)(v1 + 8) = v111;
        OUTLINED_FUNCTION_7_37();
        goto LABEL_4;
      }
      goto LABEL_3;
    }
LABEL_10:
    starttest(v0, v130);
    OUTLINED_FUNCTION_35_29();
    v29 = setd_lookup((_QWORD *)v0, 1u, 7);
    if (!v29)
    {
      bspush_ca(v0);
      OUTLINED_FUNCTION_43_24();
      if ((_DWORD)v58)
        goto LABEL_42;
LABEL_36:
      OUTLINED_FUNCTION_40_24();
      OUTLINED_FUNCTION_60_17();
      mark_s();
      if (!(_DWORD)v58)
      {
        v60 = v0;
        v59 = v128;
        goto LABEL_38;
      }
LABEL_42:
      v69 = *(_QWORD *)(v0 + 104);
      if (v69)
        OUTLINED_FUNCTION_24_32(v69);
      else
        OUTLINED_FUNCTION_31_30(v58, 0);
      OUTLINED_FUNCTION_110_8();
      switch(v70)
      {
        case 0:
          continue;
        case 1:
          goto LABEL_10;
        case 3:
          goto LABEL_74;
        case 4:
          goto LABEL_11;
        case 5:
          OUTLINED_FUNCTION_52_19();
          OUTLINED_FUNCTION_34_29(v71, v72, v73, v74, v75, v76, v77, v78, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            v146,
            v147,
            v148,
            v149,
            v150,
            v151,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157,
            v158,
            v159,
            v160[0],
            v161,
            v162[0],
            v163,
            v164,
            v165,
            v166[0]);
          if (!(_DWORD)v58)
            goto LABEL_36;
          goto LABEL_42;
        case 6:
          goto LABEL_36;
        case 7:
          OUTLINED_FUNCTION_32_30();
          if (!(_DWORD)v58)
            goto LABEL_36;
          goto LABEL_42;
        case 8:
        case 9:
        case 14:
        case 19:
        case 24:
        case 29:
        case 33:
          goto LABEL_41;
        case 10:
          goto LABEL_12;
        case 11:
          OUTLINED_FUNCTION_52_19();
          OUTLINED_FUNCTION_34_29(v79, v80, v81, v82, v83, v84, v85, v86, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            v146,
            v147,
            v148,
            v149,
            v150,
            v151,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157,
            v158,
            v159,
            v160[0],
            v161,
            v162[0],
            v163,
            v164,
            v165,
            v166[0]);
          if (!(_DWORD)v58)
            goto LABEL_22;
          goto LABEL_42;
        case 12:
          goto LABEL_22;
        case 13:
          OUTLINED_FUNCTION_32_30();
          if (!(_DWORD)v58)
            goto LABEL_22;
          goto LABEL_42;
        case 15:
          goto LABEL_13;
        case 16:
          OUTLINED_FUNCTION_52_19();
          OUTLINED_FUNCTION_34_29(v87, v88, v89, v90, v91, v92, v93, v94, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            v146,
            v147,
            v148,
            v149,
            v150,
            v151,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157,
            v158,
            v159,
            v160[0],
            v161,
            v162[0],
            v163,
            v164,
            v165,
            v166[0]);
          if (!(_DWORD)v58)
            goto LABEL_25;
          goto LABEL_42;
        case 17:
          goto LABEL_25;
        case 18:
          OUTLINED_FUNCTION_32_30();
          if (!(_DWORD)v58)
            goto LABEL_25;
          goto LABEL_42;
        case 20:
          goto LABEL_14;
        case 21:
          OUTLINED_FUNCTION_52_19();
          OUTLINED_FUNCTION_34_29(v95, v96, v97, v98, v99, v100, v101, v102, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            v146,
            v147,
            v148,
            v149,
            v150,
            v151,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157,
            v158,
            v159,
            v160[0],
            v161,
            v162[0],
            v163,
            v164,
            v165,
            v166[0]);
          if (!(_DWORD)v58)
            goto LABEL_28;
          goto LABEL_42;
        case 22:
          goto LABEL_28;
        case 23:
          OUTLINED_FUNCTION_32_30();
          if (!(_DWORD)v58)
            goto LABEL_28;
          goto LABEL_42;
        case 25:
          goto LABEL_15;
        case 26:
          OUTLINED_FUNCTION_52_19();
          OUTLINED_FUNCTION_34_29(v103, v104, v105, v106, v107, v108, v109, v110, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
            v125,
            v126,
            v127,
            v128,
            v129,
            v130,
            v131,
            v132,
            v133,
            v134,
            v135,
            v136,
            v137,
            v138,
            v139,
            v140,
            v141,
            v142,
            v143,
            v144,
            v145,
            v146,
            v147,
            v148,
            v149,
            v150,
            v151,
            v152,
            v153,
            v154,
            v155,
            v156,
            v157,
            v158,
            v159,
            v160[0],
            v161,
            v162[0],
            v163,
            v164,
            v165,
            v166[0]);
          if (!(_DWORD)v58)
            goto LABEL_31;
          goto LABEL_42;
        case 27:
          goto LABEL_31;
        case 28:
          OUTLINED_FUNCTION_32_30();
          if (!(_DWORD)v58)
            goto LABEL_31;
          goto LABEL_42;
        case 30:
          goto LABEL_16;
        case 31:
          OUTLINED_FUNCTION_32_30();
          if (!(_DWORD)v58)
            goto LABEL_67;
          goto LABEL_42;
        case 32:
          goto LABEL_67;
        case 35:
          goto LABEL_20;
        default:
          goto LABEL_3;
      }
    }
    break;
  }
LABEL_11:
  OUTLINED_FUNCTION_194_0(v29, v30, v31, v32, v33, v34, v35, v36, v114, v115);
  OUTLINED_FUNCTION_35_29();
  v37 = (_QWORD *)OUTLINED_FUNCTION_70_14();
  if (!setd_lookup(v37, v38, 8))
  {
    bspush_ca(v0);
    OUTLINED_FUNCTION_43_24();
    if ((_DWORD)v58)
      goto LABEL_42;
LABEL_22:
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_60_17();
    mark_s();
    if (!(_DWORD)v58)
    {
      v59 = 15;
      v60 = v0;
      goto LABEL_38;
    }
    goto LABEL_42;
  }
LABEL_12:
  OUTLINED_FUNCTION_105_8();
  OUTLINED_FUNCTION_35_29();
  v39 = (_QWORD *)OUTLINED_FUNCTION_70_14();
  v29 = setd_lookup(v39, v40, 9);
  if (!v29)
  {
    bspush_ca(v0);
    OUTLINED_FUNCTION_43_24();
    if ((_DWORD)v58)
      goto LABEL_42;
LABEL_25:
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_60_17();
    mark_s();
    if (!(_DWORD)v58)
    {
      v60 = v0;
      v59 = v126;
      goto LABEL_38;
    }
    goto LABEL_42;
  }
LABEL_13:
  OUTLINED_FUNCTION_180_2(v29, v30, v31, v32, v33, v34, v35, v36, v114, v115, v116, v117, v118, v119, v120, v121, v122, v123, v124,
    v125);
  OUTLINED_FUNCTION_35_29();
  v41 = (_QWORD *)OUTLINED_FUNCTION_70_14();
  if (!setd_lookup(v41, v42, 10))
  {
    OUTLINED_FUNCTION_179_2();
    OUTLINED_FUNCTION_43_24();
    if ((_DWORD)v58)
      goto LABEL_42;
LABEL_28:
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_60_17();
    mark_s();
    if (!(_DWORD)v58)
    {
      v60 = v0;
      v59 = v123;
      goto LABEL_38;
    }
    goto LABEL_42;
  }
LABEL_14:
  starttest(v0, v122);
  OUTLINED_FUNCTION_35_29();
  v43 = (_QWORD *)OUTLINED_FUNCTION_70_14();
  v29 = setd_lookup(v43, v44, 11);
  if (!v29)
  {
    bspush_ca(v0);
    OUTLINED_FUNCTION_43_24();
    if ((_DWORD)v58)
      goto LABEL_42;
LABEL_31:
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_60_17();
    mark_s();
    if (!(_DWORD)v58)
    {
      v60 = v0;
      v59 = v120;
      goto LABEL_38;
    }
    goto LABEL_42;
  }
LABEL_15:
  OUTLINED_FUNCTION_189_1(v29, v30, v31, v32, v33, v34, v35, v36, v114, v115, v116, v117, v118, v119);
  OUTLINED_FUNCTION_35_29();
  v45 = (_QWORD *)OUTLINED_FUNCTION_70_14();
  if (!setd_lookup(v45, v46, 12))
  {
    bspush_ca(v0);
    is_kor_verb(v0, v166, &v164, (uint64_t)v160, (uint64_t)v162, &v158);
    if ((_DWORD)v58)
      goto LABEL_42;
LABEL_67:
    OUTLINED_FUNCTION_40_24();
    OUTLINED_FUNCTION_60_17();
    mark_s();
    if (!(_DWORD)v58)
    {
      v60 = v0;
      v59 = v117;
LABEL_38:
      starttest_l(v60, v59);
      OUTLINED_FUNCTION_165_2();
      if (v55)
      {
        OUTLINED_FUNCTION_40_24();
        OUTLINED_FUNCTION_121_7();
      }
LABEL_41:
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_157_3();
      OUTLINED_FUNCTION_135_5();
      WORD1(v154) = 1;
      OUTLINED_FUNCTION_182_1(v61, v62, v63, v64, v65, v66, v67, v68);
      OUTLINED_FUNCTION_118_8();
      insert_2ptv();
      if ((_DWORD)v58)
        goto LABEL_42;
      v111 = v163;
      goto LABEL_75;
    }
    goto LABEL_42;
  }
LABEL_16:
  handle_kor_inflection();
  if (!(_DWORD)v47)
  {
    OUTLINED_FUNCTION_197_0(v47, v48, v49, v50, v51, v52, v53, v54, v114, v115, v116);
    OUTLINED_FUNCTION_165_2();
    if (v55)
    {
      OUTLINED_FUNCTION_40_24();
      OUTLINED_FUNCTION_121_7();
    }
LABEL_20:
    v56 = OUTLINED_FUNCTION_186_1();
    copyvar(v56, v57, &v164);
    goto LABEL_41;
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
LABEL_4:
  OUTLINED_FUNCTION_0_41();
}

void mark_kor_adverbs_sentential()
{
  _BOOL4 v0;
  uint64_t v1;
  __int16 *v2;
  uint64_t v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  _BOOL4 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40[23];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[2];
  char v48[192];
  uint64_t v49;

  OUTLINED_FUNCTION_9_37();
  v2 = (__int16 *)v1;
  v4 = (__int16 *)v3;
  v6 = v5;
  v49 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_8_37(v5, v3, v1, v7, v8, v9, v10, v11, v40[0]);
  OUTLINED_FUNCTION_137_4(v12, v13, v14, v15, v16, v17, v18, v19, v40[0], v40[1], v40[2], v40[3], v40[4], v40[5], v40[6], v40[7], v40[8], v40[9], v40[10],
    v40[11],
    v40[12],
    v40[13],
    v40[14],
    v40[15],
    v40[16],
    v40[17],
    v40[18],
    v40[19],
    v40[20],
    v40[21],
    v40[22],
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v45,
    v46,
    v47[0],
    v47[1],
    v48[0]);
  v20 = OUTLINED_FUNCTION_172_2();
  if (!(_DWORD)v20
    && !OUTLINED_FUNCTION_26_32(v20, (uint64_t)v40, (uint64_t)v47 + 7, (uint64_t)&v46 + 6, (uint64_t)&v45 + 4, (uint64_t)v48))
  {
    OUTLINED_FUNCTION_61_16(v6, (uint64_t)&v44, v4, v21, v22, v23, v24, v25);
    OUTLINED_FUNCTION_61_16(v6, (uint64_t)&v43, v2, v26, v27, v28, v29, v30);
    LODWORD(v42) = 0;
    LODWORD(v41) = -65533;
    v31 = fence_38(v6);
    OUTLINED_FUNCTION_5_37((uint64_t)v31, 1);
    OUTLINED_FUNCTION_101_8();
    v32 = OUTLINED_FUNCTION_12_37();
    v34 = OUTLINED_FUNCTION_190_0(v32, v33, 41);
    v35 = !v34;
    while (1)
    {
      v36 = *(_QWORD *)(v6 + 104);
      if (v36)
      {
        v37 = OUTLINED_FUNCTION_168_2(v36);
      }
      else
      {
        v37 = OUTLINED_FUNCTION_31_30(v34, v35);
        v0 = 0;
      }
      if (v37 != 1)
        break;
      OUTLINED_FUNCTION_12_37();
      OUTLINED_FUNCTION_159_3();
      mark_s();
      v35 = v0;
      if (!v34)
      {
        OUTLINED_FUNCTION_12_37();
        v38 = OUTLINED_FUNCTION_131_6();
        OUTLINED_FUNCTION_171_2(v38, v39);
        OUTLINED_FUNCTION_143_3();
        insert_2ptv();
        v35 = v0;
        if (!v34)
          goto LABEL_3;
      }
    }
    if (v37 == 2)
      OUTLINED_FUNCTION_50_21();
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void mark_kor_ambiguous_nouns()
{
  _BOOL4 v0;
  uint64_t v1;
  __int16 *v2;
  uint64_t v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  _BOOL4 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unsigned __int8 *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int16 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[23];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];
  char v57[192];
  uint64_t v58;

  OUTLINED_FUNCTION_9_37();
  v2 = (__int16 *)v1;
  v4 = (__int16 *)v3;
  v6 = v5;
  v58 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_8_37(v5, v3, v1, v7, v8, v9, v10, v11, v49[0]);
  OUTLINED_FUNCTION_137_4(v12, v13, v14, v15, v16, v17, v18, v19, v49[0], v49[1], v49[2], v49[3], v49[4], v49[5], v49[6], v49[7], v49[8], v49[9], v49[10],
    v49[11],
    v49[12],
    v49[13],
    v49[14],
    v49[15],
    v49[16],
    v49[17],
    v49[18],
    v49[19],
    v49[20],
    v49[21],
    v49[22],
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    v54,
    v55,
    v56[0],
    v56[1],
    v57[0]);
  v20 = OUTLINED_FUNCTION_172_2();
  if (!(_DWORD)v20
    && !OUTLINED_FUNCTION_26_32(v20, (uint64_t)v49, (uint64_t)v56 + 7, (uint64_t)&v55 + 6, (uint64_t)&v54 + 4, (uint64_t)v57))
  {
    OUTLINED_FUNCTION_61_16(v6, (uint64_t)&v53, v4, v21, v22, v23, v24, v25);
    OUTLINED_FUNCTION_61_16(v6, (uint64_t)&v52, v2, v26, v27, v28, v29, v30);
    LODWORD(v51) = 0;
    LODWORD(v50) = -65533;
    v31 = fence_38(v6);
    OUTLINED_FUNCTION_5_37((uint64_t)v31, 1);
    OUTLINED_FUNCTION_101_8();
    v32 = OUTLINED_FUNCTION_12_37();
    v34 = OUTLINED_FUNCTION_190_0(v32, v33, 42);
    v35 = !v34;
    while (1)
    {
      v36 = *(_QWORD *)(v6 + 104);
      if (v36)
      {
        v37 = OUTLINED_FUNCTION_168_2(v36);
      }
      else
      {
        v37 = OUTLINED_FUNCTION_31_30(v34, v35);
        v0 = 0;
      }
      if (v37 != 1)
        break;
      OUTLINED_FUNCTION_12_37();
      OUTLINED_FUNCTION_159_3();
      mark_s();
      v35 = v0;
      if (!v34)
      {
        OUTLINED_FUNCTION_12_37();
        v38 = OUTLINED_FUNCTION_162_2();
        OUTLINED_FUNCTION_171_2(v38, v39);
        v40 = OUTLINED_FUNCTION_134_5();
        npush_s(v40);
        WORD1(v50) = 1;
        v41 = OUTLINED_FUNCTION_162_2();
        npop(v41, v42, v43, v44, v45, v46, v47, v48);
        OUTLINED_FUNCTION_143_3();
        insert_2ptv();
        v35 = v0;
        if (!v34)
          goto LABEL_3;
      }
    }
    if (v37 == 2)
      OUTLINED_FUNCTION_50_21();
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void handle_kor_inflection()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  __int16 *v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102[23];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD v106[2];
  uint64_t v107;
  uint64_t v108;
  int v109;
  _QWORD v110[2];
  _QWORD v111[2];
  _QWORD v112[2];
  _BYTE v113[10];
  _BYTE v114[9];
  _BYTE v115[9];
  _BYTE v116[192];
  uint64_t v117;

  OUTLINED_FUNCTION_29_30();
  v117 = *MEMORY[0x24BDAC8D0];
  v112[0] = 0;
  v112[1] = 0;
  v111[0] = 0;
  v111[1] = 0;
  v110[0] = 0;
  v110[1] = 0;
  v109 = 0;
  v107 = 0;
  v108 = 0;
  v106[0] = 0;
  v106[1] = 0;
  v103 = 0;
  v104 = 0;
  v105 = 0;
  OUTLINED_FUNCTION_8_37(v5, v6, v7, v8, v9, v10, v11, v12, v102[0]);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_75_14(v13, v14);
  v15 = OUTLINED_FUNCTION_76_14();
  if ((_DWORD)v15
    || OUTLINED_FUNCTION_26_32(v15, (uint64_t)v102, (uint64_t)v115, (uint64_t)v114, (uint64_t)v113, (uint64_t)v116))
  {
    goto LABEL_70;
  }
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v112, v4, v16, v17, v18, v19, v20);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v111, v3, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v110, v2, v26, v27, v28, v29, v30);
  OUTLINED_FUNCTION_48_22(v31, (uint64_t)&v109, v32, v33, v34, v35, v36, v37);
  v39 = OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v107);
  OUTLINED_FUNCTION_11_37(v39, (uint64_t)v106);
  LODWORD(v105) = 0;
  LODWORD(v103) = -65533;
  v40 = fence_38(v0);
  v108 = *(_QWORD *)(v0 + 3360);
  OUTLINED_FUNCTION_5_37((uint64_t)v40, 1);
  v41 = OUTLINED_FUNCTION_129_7();
  lpta_loadp_setscan_l(v41, v42);
  LODWORD(v2) = 0;
  if (!(_DWORD)v43)
  {
    OUTLINED_FUNCTION_44_24(v43, 2);
    v43 = test_string_s(v0, 1u, 2u, (uint64_t *)&unk_257752533);
    v48 = 0;
    v71 = 0;
    if (!(_DWORD)v43)
    {
LABEL_24:
      v48 = v71;
      OUTLINED_FUNCTION_25_32(v43, 3, (uint64_t)v106);
      bspush_ca_scan_boa(v0);
      v43 = testFldeq(v0, 1u, 4, 1);
      if (!(_DWORD)v43)
        v48 = 1;
    }
    goto LABEL_43;
  }
  while (2)
  {
    OUTLINED_FUNCTION_30_30(v43, (uint64_t)v111);
    if (!(_DWORD)v44)
    {
      v43 = OUTLINED_FUNCTION_56_17(v44, v45, v46, (uint64_t *)&unk_257752535);
      v47 = (int)v2;
      if (!(_DWORD)v43)
      {
LABEL_27:
        LODWORD(v2) = v47;
        OUTLINED_FUNCTION_25_32(v43, 11, (uint64_t)v106);
        OUTLINED_FUNCTION_1_39(12);
        goto LABEL_39;
      }
    }
LABEL_6:
    v48 = (int)v2;
    OUTLINED_FUNCTION_1_39(16);
    OUTLINED_FUNCTION_30_30(v49, (uint64_t)v111);
    if (!(_DWORD)v43)
    {
      OUTLINED_FUNCTION_19_35(17);
      v43 = OUTLINED_FUNCTION_17_36(v62, v63, v64, (uint64_t *)&unk_257752521);
      v66 = (int)v2;
      if ((_DWORD)v43)
        goto LABEL_43;
LABEL_18:
      v48 = v66;
      v43 = OUTLINED_FUNCTION_56_17(v43, v65, v61, (uint64_t *)&unk_257752537);
      LODWORD(v2) = v48;
      if (!(_DWORD)v43)
      {
LABEL_19:
        OUTLINED_FUNCTION_25_32(v43, 19, (uint64_t)v106);
        OUTLINED_FUNCTION_1_39(20);
        goto LABEL_39;
      }
      goto LABEL_43;
    }
LABEL_7:
    OUTLINED_FUNCTION_30_30(v43, (uint64_t)v111);
    if (!(_DWORD)v50)
    {
      v43 = OUTLINED_FUNCTION_56_17(v50, v51, v52, (uint64_t *)&unk_257752539);
      v53 = (int)v2;
      if (!(_DWORD)v43)
      {
LABEL_29:
        LODWORD(v2) = v53;
        OUTLINED_FUNCTION_25_32(v43, 25, (uint64_t)v106);
        OUTLINED_FUNCTION_1_39(26);
        goto LABEL_39;
      }
    }
LABEL_9:
    v48 = (int)v2;
    OUTLINED_FUNCTION_1_39(30);
    OUTLINED_FUNCTION_30_30(v54, (uint64_t)v111);
    if (!(_DWORD)v43)
    {
      OUTLINED_FUNCTION_19_35(31);
      v43 = OUTLINED_FUNCTION_17_36(v67, v68, v69, (uint64_t *)&unk_257752521);
      v70 = (int)v2;
      if ((_DWORD)v43)
        goto LABEL_43;
LABEL_21:
      v48 = v70;
      v43 = OUTLINED_FUNCTION_17_36(v43, v65, v61, (uint64_t *)&unk_257752529);
      LODWORD(v2) = v48;
      if (!(_DWORD)v43)
      {
LABEL_22:
        OUTLINED_FUNCTION_25_32(v43, 33, (uint64_t)v106);
        OUTLINED_FUNCTION_1_39(34);
        goto LABEL_39;
      }
LABEL_43:
      LODWORD(v65) = v48;
LABEL_44:
      v84 = *(_QWORD *)(v0 + 104);
      if (v84)
      {
        OUTLINED_FUNCTION_24_32(v84);
        v2 = v85;
      }
      else
      {
        OUTLINED_FUNCTION_31_30(v43, v65);
        v2 = 0;
      }
      OUTLINED_FUNCTION_110_8();
      v87 = v86;
      v71 = (int)v2;
      v66 = (int)v2;
      v70 = (int)v2;
      v83 = (int)v2;
      v79 = (int)v2;
      v61 = (uint64_t)v2;
      switch(v87)
      {
        case 0:
          continue;
        case 1:
          v43 = OUTLINED_FUNCTION_79_13(v43, 1u, 4u, (uint64_t *)&unk_257752585);
          v71 = (int)v2;
          LODWORD(v65) = (_DWORD)v2;
          if (!(_DWORD)v43)
            goto LABEL_24;
          goto LABEL_44;
        case 2:
          goto LABEL_24;
        case 3:
          OUTLINED_FUNCTION_50_21();
          v43 = OUTLINED_FUNCTION_21_34();
          LODWORD(v65) = (_DWORD)v2;
          if (!(_DWORD)v43)
          {
            OUTLINED_FUNCTION_1_39(5);
            OUTLINED_FUNCTION_115_8();
            v43 = OUTLINED_FUNCTION_146_3();
            if ((_DWORD)v43)
              LODWORD(v65) = (_DWORD)v2;
            else
              LODWORD(v65) = 1;
          }
          goto LABEL_44;
        case 4:
          OUTLINED_FUNCTION_1_39(8);
          OUTLINED_FUNCTION_47_23();
          is_kor_verb_ha_contr();
          if (v88)
            goto LABEL_70;
          goto LABEL_83;
        case 5:
        case 12:
        case 20:
        case 26:
        case 34:
        case 42:
        case 52:
        case 59:
          OUTLINED_FUNCTION_50_21();
          goto LABEL_70;
        case 6:
        case 8:
        case 13:
        case 21:
        case 27:
        case 35:
        case 43:
        case 47:
        case 53:
        case 60:
          goto LABEL_84;
        case 9:
          goto LABEL_6;
        case 10:
          v47 = (int)v2;
          goto LABEL_27;
        case 11:
          OUTLINED_FUNCTION_1_39(15);
          OUTLINED_FUNCTION_47_23();
          is_kor_verb_i_contr();
          if (v89)
            goto LABEL_70;
          goto LABEL_83;
        case 15:
          goto LABEL_7;
        case 16:
          v43 = OUTLINED_FUNCTION_17_36(v43, v65, (uint64_t)v2, (uint64_t *)&unk_257752522);
          v66 = (int)v2;
          v65 = (uint64_t)v2;
          if (!(_DWORD)v43)
            goto LABEL_18;
          goto LABEL_44;
        case 17:
          goto LABEL_18;
        case 18:
          goto LABEL_19;
        case 19:
          OUTLINED_FUNCTION_1_39(23);
          OUTLINED_FUNCTION_147_3();
          is_kor_verb_rU_infl();
          if (v90)
            goto LABEL_70;
          goto LABEL_83;
        case 23:
          goto LABEL_9;
        case 24:
          v53 = (int)v2;
          goto LABEL_29;
        case 25:
          OUTLINED_FUNCTION_1_39(29);
          OUTLINED_FUNCTION_147_3();
          is_kor_verb_rE_infl();
          if (v91)
            goto LABEL_70;
          goto LABEL_83;
        case 29:
          goto LABEL_10;
        case 30:
          v43 = OUTLINED_FUNCTION_17_36(v43, v65, (uint64_t)v2, (uint64_t *)&unk_257752522);
          v70 = (int)v2;
          v65 = (uint64_t)v2;
          if (!(_DWORD)v43)
            goto LABEL_21;
          goto LABEL_44;
        case 31:
          goto LABEL_21;
        case 32:
          goto LABEL_22;
        case 33:
          OUTLINED_FUNCTION_1_39(37);
          OUTLINED_FUNCTION_52_19();
          is_kor_verb_P_infl();
          goto LABEL_66;
        case 37:
          OUTLINED_FUNCTION_47_23();
          is_kor_verb_wa_contr();
          goto LABEL_66;
        case 38:
        case 63:
          goto LABEL_67;
        case 39:
          goto LABEL_12;
        case 40:
          v57 = (int)v2;
          goto LABEL_31;
        case 41:
          OUTLINED_FUNCTION_1_39(45);
          OUTLINED_FUNCTION_47_23();
          is_kor_verb_O_contr();
          if (v92)
            goto LABEL_70;
          goto LABEL_83;
        case 45:
          v48 = (int)v2;
          goto LABEL_33;
        case 48:
          v48 = (int)v2;
          goto LABEL_34;
        case 49:
          v43 = OUTLINED_FUNCTION_17_36(v43, v65, (uint64_t)v2, (uint64_t *)&unk_257752526);
          v83 = (int)v2;
          LODWORD(v65) = (_DWORD)v2;
          if (!(_DWORD)v43)
            goto LABEL_38;
          goto LABEL_44;
        case 50:
          goto LABEL_38;
        case 51:
          OUTLINED_FUNCTION_1_39(55);
          OUTLINED_FUNCTION_47_23();
          is_kor_verb_e_contr();
          if (v93)
            goto LABEL_70;
LABEL_83:
          OUTLINED_FUNCTION_68_14();
          LODWORD(v61) = (_DWORD)v2;
          if (!(_DWORD)v43)
            goto LABEL_84;
          goto LABEL_70;
        case 56:
          v43 = OUTLINED_FUNCTION_17_36(v43, v65, (uint64_t)v2, (uint64_t *)&unk_257752522);
          v79 = (int)v2;
          LODWORD(v65) = (_DWORD)v2;
          if (!(_DWORD)v43)
            goto LABEL_36;
          goto LABEL_44;
        case 57:
          goto LABEL_36;
        case 58:
          OUTLINED_FUNCTION_1_39(62);
          OUTLINED_FUNCTION_52_19();
          OUTLINED_FUNCTION_147_3();
          is_kor_verb_U_infl();
          goto LABEL_66;
        case 62:
          OUTLINED_FUNCTION_47_23();
          is_kor_verb_a_contr();
LABEL_66:
          LODWORD(v65) = (_DWORD)v2;
          if ((_DWORD)v43)
            goto LABEL_44;
LABEL_67:
          OUTLINED_FUNCTION_68_14();
          LODWORD(v61) = (_DWORD)v2;
          LODWORD(v65) = (_DWORD)v2;
          if (!(_DWORD)v43)
            goto LABEL_84;
          goto LABEL_44;
        default:
          goto LABEL_70;
      }
    }
    break;
  }
LABEL_10:
  OUTLINED_FUNCTION_30_30(v43, (uint64_t)v111);
  if (!(_DWORD)v43)
  {
    v43 = OUTLINED_FUNCTION_56_17(v43, v55, v56, (uint64_t *)&unk_25775253B);
    v57 = (int)v2;
    if (!(_DWORD)v43)
    {
LABEL_31:
      LODWORD(v2) = v57;
      OUTLINED_FUNCTION_25_32(v43, 41, (uint64_t)v106);
      OUTLINED_FUNCTION_1_39(42);
LABEL_39:
      OUTLINED_FUNCTION_115_8();
      v43 = OUTLINED_FUNCTION_146_3();
      if ((_DWORD)v43)
        v48 = (int)v2;
      else
        v48 = 1;
      goto LABEL_43;
    }
  }
LABEL_12:
  v48 = (int)v2;
  OUTLINED_FUNCTION_45_24(v43, (uint64_t)v112);
  if (!(_DWORD)v58 && !OUTLINED_FUNCTION_139_4(v58, v59, v60, (uint64_t *)&unk_25775254F))
  {
    *(_BYTE *)(v0 + 136) = (_BYTE)v2;
    if (!OUTLINED_FUNCTION_42_24())
    {
      OUTLINED_FUNCTION_1_39(47);
      OUTLINED_FUNCTION_68_14();
      LODWORD(v61) = (_DWORD)v2;
      if ((_DWORD)v43)
        goto LABEL_70;
LABEL_84:
      v48 = v61;
      OUTLINED_FUNCTION_23_33(v43, (uint64_t)v112, (uint64_t)v111);
      OUTLINED_FUNCTION_164_2();
      OUTLINED_FUNCTION_132_6();
      WORD1(v103) = 1;
      OUTLINED_FUNCTION_103_8(v94, v95, v96, v97, v98, v99, v100, v101);
      OUTLINED_FUNCTION_123_7();
      if (!(_DWORD)v43)
      {
        OUTLINED_FUNCTION_23_33(v43, (uint64_t)v112, (uint64_t)v110);
        OUTLINED_FUNCTION_74_14();
        if (!(_DWORD)v43)
        {
          *(_WORD *)(v1 + 2) = HIWORD(v109);
          OUTLINED_FUNCTION_7_37();
          goto LABEL_71;
        }
      }
      goto LABEL_43;
    }
  }
LABEL_33:
  OUTLINED_FUNCTION_1_39(49);
  OUTLINED_FUNCTION_30_30(v72, (uint64_t)v111);
  if (!v73)
  {
    OUTLINED_FUNCTION_19_35(50);
    v43 = OUTLINED_FUNCTION_17_36(v80, v81, v82, (uint64_t *)&unk_257752525);
    v83 = v48;
    if ((_DWORD)v43)
      goto LABEL_43;
LABEL_38:
    LODWORD(v2) = v83;
    OUTLINED_FUNCTION_25_32(v43, 51, (uint64_t)v106);
    OUTLINED_FUNCTION_1_39(52);
    goto LABEL_39;
  }
LABEL_34:
  OUTLINED_FUNCTION_1_39(56);
  OUTLINED_FUNCTION_30_30(v74, (uint64_t)v111);
  if (!v75)
  {
    OUTLINED_FUNCTION_19_35(57);
    v43 = OUTLINED_FUNCTION_17_36(v76, v77, v78, (uint64_t *)&unk_257752521);
    v79 = v48;
    if ((_DWORD)v43)
      goto LABEL_43;
LABEL_36:
    LODWORD(v2) = v79;
    OUTLINED_FUNCTION_25_32(v43, 58, (uint64_t)v106);
    OUTLINED_FUNCTION_1_39(59);
    goto LABEL_39;
  }
LABEL_70:
  OUTLINED_FUNCTION_7_37();
LABEL_71:
  OUTLINED_FUNCTION_86_9();
}

void is_kor_preending()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  unsigned int v55;
  int v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  uint64_t v63;
  unsigned int v64;
  int v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  unsigned __int16 *v71;
  __int16 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 *v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123[2];
  uint64_t v124[2];
  int v125;
  char v126[8];
  uint64_t v127;
  _BYTE v128[16];
  _BYTE v129[16];
  _BYTE v130[20];
  char v131[10];
  char v132[9];
  char v133[9];
  char v134[192];
  uint64_t v135;

  OUTLINED_FUNCTION_9_37();
  v5 = v4;
  OUTLINED_FUNCTION_91_9();
  v135 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_170_2();
  v125 = 0;
  OUTLINED_FUNCTION_27_30(v6, v7, v8, v9, v10, v11, v12, v13, v95, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123[0],
    v123[1],
    v124[0],
    v124[1]);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_140_4(v14, v15);
  v16 = OUTLINED_FUNCTION_141_3();
  if (!(_DWORD)v16
    && !OUTLINED_FUNCTION_26_32(v16, (uint64_t)&v97, (uint64_t)v133, (uint64_t)v132, (uint64_t)v131, (uint64_t)v134))
  {
    OUTLINED_FUNCTION_61_16(v0, (uint64_t)v130, v3, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_61_16(v0, (uint64_t)v129, v2, v22, v23, v24, v25, v26);
    OUTLINED_FUNCTION_61_16(v0, (uint64_t)v128, v1, v27, v28, v29, v30, v31);
    v96 = (uint64_t)v5;
    OUTLINED_FUNCTION_61_16(v0, (uint64_t)v126, v5, v32, v33, v34, v35, v36);
    LOWORD(v125) = -4;
    v38 = OUTLINED_FUNCTION_11_37(v37, (uint64_t)v124);
    OUTLINED_FUNCTION_11_37(v38, (uint64_t)v123);
    v39 = OUTLINED_FUNCTION_112_8();
    HIWORD(v125) = 0;
    OUTLINED_FUNCTION_5_37((uint64_t)v39, 1);
    v40 = OUTLINED_FUNCTION_117_8();
    lpta_loadp_setscan_l(v40, v41);
    v42 = 0;
    if (v43)
    {
LABEL_5:
      OUTLINED_FUNCTION_1_39(10);
      OUTLINED_FUNCTION_30_30(v44, (uint64_t)v129);
      if ((_DWORD)v45 || OUTLINED_FUNCTION_56_17(v45, v46, v47, (uint64_t *)&unk_257752543))
        goto LABEL_3;
LABEL_7:
      v48 = OUTLINED_FUNCTION_188_1();
      savescptr(v48, v49, v50);
      OUTLINED_FUNCTION_114_8();
      handle_kor_preending();
      v52 = v42;
      v53 = v42;
      if (!(_DWORD)v51)
      {
LABEL_30:
        v69 = v53;
        v70 = OUTLINED_FUNCTION_188_1();
        copyvar(v70, v71, v72);
        v73 = OUTLINED_FUNCTION_114_8();
        lpta_rpta_loadp(v73, v74, v75);
        v76 = OUTLINED_FUNCTION_114_8();
        settvar_s(v76, v77, 3u);
        OUTLINED_FUNCTION_132_6();
        WORD1(v120) = 1;
        OUTLINED_FUNCTION_175_2(v78, v79, v80, v81, v82, v83, v84, v85);
        insert_2ptv();
        if ((_DWORD)v51
          || (OUTLINED_FUNCTION_14_36(v51, (uint64_t)v130, v86, v87, v88, v89, v90, v91, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                v107,
                v108,
                v109,
                v110,
                v111,
                v112,
                v113,
                v114,
                v115,
                v116,
                v117,
                v118,
                v119,
                v120,
                v121,
                v122,
                v123[0]),
              v92 = OUTLINED_FUNCTION_114_8(),
              settvar_s(v92, v93, v94),
              OUTLINED_FUNCTION_188_1(),
              insert_2ptv(),
              (_DWORD)v51))
        {
          v52 = v69;
        }
        else
        {
          OUTLINED_FUNCTION_23_33(v51, (uint64_t)v130, (uint64_t)v128);
          OUTLINED_FUNCTION_74_14();
          v52 = v69;
          if (!(_DWORD)v51)
          {
            *(_QWORD *)(v96 + 8) = v127;
            goto LABEL_3;
          }
        }
      }
    }
    else
    {
      bspush_boa(v0);
      v51 = 0;
      v52 = 0;
      do
      {
LABEL_11:
        OUTLINED_FUNCTION_44_24(v51, 2);
        v54 = OUTLINED_FUNCTION_153_3();
        v51 = testFldeq(v54, v55, v56, 2);
        if ((_DWORD)v51)
          break;
        v51 = OUTLINED_FUNCTION_21_34();
      }
      while (!(_DWORD)v51);
    }
    v57 = v52;
    while (2)
    {
      v58 = *(_QWORD *)(v0 + 104);
      if (v58)
      {
        v51 = OUTLINED_FUNCTION_24_32(v58);
        v42 = v59;
      }
      else
      {
        v51 = OUTLINED_FUNCTION_31_30(v51, v57);
        v42 = 0;
      }
      v53 = v42;
      switch((int)v51)
      {
        case 1:
          goto LABEL_5;
        case 2:
          bspush_nboa(v0);
          v60 = OUTLINED_FUNCTION_153_3();
          v51 = testFldeq(v60, v61, v62, 4);
          v57 = v42;
          if ((_DWORD)v51)
            continue;
          v51 = OUTLINED_FUNCTION_21_34();
          v57 = v42;
          if ((_DWORD)v51)
            continue;
          bspush_boa(v0);
          goto LABEL_21;
        case 3:
          v52 = v42;
          goto LABEL_11;
        case 4:
          bspush_nboa(v0);
          v66 = OUTLINED_FUNCTION_129_7();
          bspush_ca_scan_boa(v66);
          goto LABEL_25;
        case 5:
          do
          {
LABEL_21:
            OUTLINED_FUNCTION_44_24(v51, 4);
            v63 = OUTLINED_FUNCTION_153_3();
            v51 = testFldeq(v63, v64, v65, 1);
            if ((_DWORD)v51)
              break;
            v51 = OUTLINED_FUNCTION_21_34();
          }
          while (!(_DWORD)v51);
          v57 = v42;
          continue;
        case 6:
          OUTLINED_FUNCTION_50_21();
          goto LABEL_29;
        case 7:
LABEL_25:
          v67 = (_QWORD *)OUTLINED_FUNCTION_116_8();
          test_synch(v67, v68, 1u, (unsigned __int8 *)&unk_257752520);
          if ((_DWORD)v51)
            v57 = v42;
          else
            v57 = 1;
          continue;
        case 8:
LABEL_29:
          OUTLINED_FUNCTION_203_0(v0, 8);
          OUTLINED_FUNCTION_131_6();
          handle_kor_preending();
          v53 = v42;
          v57 = v42;
          if (!(_DWORD)v51)
            goto LABEL_30;
          continue;
        case 9:
          goto LABEL_30;
        case 11:
          goto LABEL_7;
        default:
          goto LABEL_3;
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb(uint64_t a1, __int16 *a2, __int16 *a3, uint64_t a4, uint64_t a5, __int16 *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t *v65;
  int v66;
  uint64_t *v67;
  int v68;
  uint64_t *v69;
  int v70;
  _BOOL4 v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  int v137;
  uint64_t v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  int v196;
  int v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  int v201;
  int v202;
  int v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  int v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  char v262[8];
  uint64_t v263;
  _BYTE v264[20];
  _BYTE v265[10];
  _BYTE v266[9];
  _BYTE v267[9];
  int v268[48];
  uint64_t v269;

  v269 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_201_0();
  HIDWORD(v257) = 0;
  v255 = 0;
  v256 = 0;
  v253 = 0;
  v254 = 0;
  v250 = 0;
  v251 = 0;
  v252 = 0;
  OUTLINED_FUNCTION_8_37(v11, v12, v13, v14, v15, v16, v17, v18, v227);
  OUTLINED_FUNCTION_57_17();
  bzero(v268, v19);
  if (setjmp(v268)
    || ventproc(a1, (uint64_t)&v227, (uint64_t)v267, (uint64_t)v266, (uint64_t)v265, (uint64_t)v268))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_98_8(a1, (uint64_t)v264, a2, v20, v21, v22, v23, v24);
  OUTLINED_FUNCTION_98_8(a1, (uint64_t)v262, a3, v25, v26, v27, v28, v29);
  v30 = OUTLINED_FUNCTION_92_8();
  OUTLINED_FUNCTION_98_8(v30, v31, v32, v33, v34, v35, v36, v37);
  OUTLINED_FUNCTION_98_8(a1, (uint64_t)&v258, (__int16 *)a5, v38, v39, v40, v41, v42);
  get_parm(a1, (uint64_t)&v257 + 4, a6, 4294967292, v43, v44, v45, v46);
  push_ptr_init(a1, (uint64_t)&v255);
  push_ptr_init(a1, (uint64_t)&v253);
  LODWORD(v252) = 0;
  LODWORD(v250) = -65533;
  fence_38(a1);
  v256 = *(_QWORD *)(a1 + 3360);
  v259 = v263;
  starttest(a1, 1);
  lpta_loadp_setscan_l(a1, (uint64_t)v262);
  v50 = 0;
  if (!(_DWORD)v47)
  {
    v50 = 0;
    v51 = 0;
    if (!OUTLINED_FUNCTION_2_38(v47, v48, v49, (uint64_t *)&unk_257752519))
    {
LABEL_7:
      OUTLINED_FUNCTION_58_17(2, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253);
      if (OUTLINED_FUNCTION_51_20() || OUTLINED_FUNCTION_111_8())
        goto LABEL_12;
      OUTLINED_FUNCTION_4_37(3);
      OUTLINED_FUNCTION_145_3();
      v52 = v51;
      if (v53)
      {
LABEL_10:
        v51 = v52;
        OUTLINED_FUNCTION_4_37(5);
        OUTLINED_FUNCTION_150_3();
        if (v54)
          goto LABEL_3;
      }
      goto LABEL_140;
    }
  }
  while (2)
  {
    OUTLINED_FUNCTION_4_37(7);
    OUTLINED_FUNCTION_16_36(v75, v76, v77, v78, v79, v80, v81, v82, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
      v238,
      v239,
      v240,
      v241,
      v242,
      v243,
      v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253,
      v254,
      v255,
      v256,
      v257,
      v258,
      v259,
      v260,
      v261,
      v262[0]);
    if (!(_DWORD)v83)
    {
      v51 = v50;
      if (!OUTLINED_FUNCTION_2_38(v83, v84, v85, (uint64_t *)&unk_25775251B))
      {
LABEL_60:
        OUTLINED_FUNCTION_58_17(8, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253);
        if (OUTLINED_FUNCTION_51_20() || OUTLINED_FUNCTION_111_8())
          goto LABEL_12;
        OUTLINED_FUNCTION_4_37(9);
        OUTLINED_FUNCTION_149_3();
        is_kor_verb_S_infl();
        v138 = v51;
        if (!v139)
          goto LABEL_140;
LABEL_85:
        v51 = v138;
        v154 = 11;
        goto LABEL_139;
      }
    }
LABEL_44:
    OUTLINED_FUNCTION_4_37(12);
    OUTLINED_FUNCTION_16_36(v86, v87, v88, v89, v90, v91, v92, v93, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
      v238,
      v239,
      v240,
      v241,
      v242,
      v243,
      v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253,
      v254,
      v255,
      v256,
      v257,
      v258,
      v259,
      v260,
      v261,
      v262[0]);
    if (!(_DWORD)v94)
    {
      v51 = v50;
      if (!OUTLINED_FUNCTION_2_38(v94, v95, v96, (uint64_t *)&unk_25775251A))
      {
LABEL_66:
        OUTLINED_FUNCTION_58_17(13, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253);
        if (OUTLINED_FUNCTION_51_20() || OUTLINED_FUNCTION_111_8())
          goto LABEL_12;
        OUTLINED_FUNCTION_4_37(14);
        is_kor_verb_P_infl();
        v144 = v51;
        if (!v145)
          goto LABEL_140;
LABEL_88:
        v51 = v144;
        v154 = 16;
        goto LABEL_139;
      }
    }
LABEL_46:
    OUTLINED_FUNCTION_4_37(17);
    OUTLINED_FUNCTION_16_36(v97, v98, v99, v100, v101, v102, v103, v104, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
      v238,
      v239,
      v240,
      v241,
      v242,
      v243,
      v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253,
      v254,
      v255,
      v256,
      v257,
      v258,
      v259,
      v260,
      v261,
      v262[0]);
    if (!(_DWORD)v105)
    {
      v51 = v50;
      if (!OUTLINED_FUNCTION_2_38(v105, v106, v107, (uint64_t *)&unk_25775251C))
      {
LABEL_70:
        OUTLINED_FUNCTION_58_17(18, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253);
        if (OUTLINED_FUNCTION_51_20() || OUTLINED_FUNCTION_111_8())
          goto LABEL_12;
        OUTLINED_FUNCTION_4_37(19);
        OUTLINED_FUNCTION_150_3();
        v146 = v51;
        if (!v147)
          goto LABEL_140;
LABEL_91:
        v51 = v146;
        v154 = 21;
        goto LABEL_139;
      }
    }
LABEL_48:
    OUTLINED_FUNCTION_4_37(22);
    OUTLINED_FUNCTION_16_36(v108, v109, v110, v111, v112, v113, v114, v115, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
      v238,
      v239,
      v240,
      v241,
      v242,
      v243,
      v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253,
      v254,
      v255,
      v256,
      v257,
      v258,
      v259,
      v260,
      v261,
      v262[0]);
    if (!(_DWORD)v116)
    {
      v51 = v50;
      if (!OUTLINED_FUNCTION_2_38(v116, v117, v118, (uint64_t *)&unk_25775251D))
      {
LABEL_74:
        OUTLINED_FUNCTION_58_17(23, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
          v245,
          v246,
          v247,
          v248,
          v249,
          v250,
          v251,
          v252,
          v253);
        if (OUTLINED_FUNCTION_51_20() || OUTLINED_FUNCTION_111_8())
          goto LABEL_12;
        OUTLINED_FUNCTION_4_37(24);
        OUTLINED_FUNCTION_149_3();
        is_kor_verb_H_infl();
        v148 = v51;
        if (v149)
        {
LABEL_94:
          v51 = v148;
          v154 = 26;
          goto LABEL_139;
        }
LABEL_140:
        v213 = OUTLINED_FUNCTION_148_3();
        lpta_rpta_loadp(v213, v214, v215);
        settvar_s(a1, (unsigned __int8 *)&v250, 2u);
        npush_s(a1);
        WORD1(v250) = 1;
        npop(a1, (unsigned __int16 *)&v250, v216, v217, v218, v219, v220, v221);
        OUTLINED_FUNCTION_92_8();
        insert_2ptv();
        if (!v222)
        {
          lpta_rpta_loadp(a1, (uint64_t)v264, (uint64_t)&v260);
          mark_s();
          v55 = v51;
          if (!v223)
          {
            *(_QWORD *)(a5 + 8) = v259;
            a6[1] = HIWORD(v257);
            vretproc(a1);
            goto LABEL_4;
          }
LABEL_13:
          if (*(_QWORD *)(a1 + 104))
          {
            *(_QWORD *)(a1 + 104) = 0;
            v51 = v55;
          }
          else
          {
            vback((_QWORD *)a1, v55);
            v51 = 0;
          }
          OUTLINED_FUNCTION_110_8();
          v58 = v51;
          v59 = v51;
          v60 = v51;
          v61 = v51;
          v62 = v51;
          v63 = v51;
          switch(v64)
          {
            case 0:
              v50 = v51;
              continue;
            case 1:
              goto LABEL_7;
            case 2:
              v52 = v51;
              goto LABEL_10;
            case 3:
            case 5:
            case 9:
            case 14:
            case 19:
            case 24:
            case 46:
            case 50:
            case 54:
            case 58:
            case 64:
            case 69:
            case 74:
            case 78:
              goto LABEL_140;
            case 6:
              v50 = v51;
              goto LABEL_44;
            case 7:
              goto LABEL_60;
            case 8:
              v138 = v51;
              goto LABEL_85;
            case 11:
              v50 = v51;
              goto LABEL_46;
            case 12:
              goto LABEL_66;
            case 13:
              v144 = v51;
              goto LABEL_88;
            case 16:
              v50 = v51;
              goto LABEL_48;
            case 17:
              goto LABEL_70;
            case 18:
              v146 = v51;
              goto LABEL_91;
            case 21:
              v50 = v51;
              goto LABEL_50;
            case 22:
              goto LABEL_74;
            case 23:
              v148 = v51;
              goto LABEL_94;
            case 26:
              v50 = v51;
              goto LABEL_51;
            case 27:
              OUTLINED_FUNCTION_37_29(30);
              v65 = (uint64_t *)&unk_25775251E;
              goto LABEL_21;
            case 28:
              goto LABEL_59;
            case 29:
              OUTLINED_FUNCTION_37_29(31);
              v65 = (uint64_t *)&unk_25775251F;
              goto LABEL_21;
            case 30:
              OUTLINED_FUNCTION_37_29(32);
              v65 = (uint64_t *)&unk_25775251A;
              goto LABEL_21;
            case 31:
              v65 = (uint64_t *)&unk_257752520;
LABEL_21:
              v66 = OUTLINED_FUNCTION_2_38(v56, v57, v58, v65);
              v58 = v51;
              v55 = v51;
              if (!v66)
                goto LABEL_59;
              goto LABEL_13;
            case 32:
              v50 = v51;
              goto LABEL_52;
            case 33:
              OUTLINED_FUNCTION_37_29(36);
              v67 = (uint64_t *)&unk_25775251E;
              goto LABEL_27;
            case 34:
              goto LABEL_65;
            case 35:
              OUTLINED_FUNCTION_37_29(37);
              v67 = (uint64_t *)&unk_25775251F;
              goto LABEL_27;
            case 36:
              OUTLINED_FUNCTION_37_29(38);
              v67 = (uint64_t *)&unk_25775251A;
              goto LABEL_27;
            case 37:
              v67 = (uint64_t *)&unk_257752520;
LABEL_27:
              v68 = OUTLINED_FUNCTION_2_38(v56, v57, v58, v67);
              v59 = v51;
              v55 = v51;
              if (!v68)
                goto LABEL_65;
              goto LABEL_13;
            case 38:
              v50 = v51;
              goto LABEL_53;
            case 39:
              OUTLINED_FUNCTION_37_29(42);
              v69 = (uint64_t *)&unk_257752522;
              goto LABEL_31;
            case 40:
              goto LABEL_79;
            case 41:
              v69 = (uint64_t *)&unk_257752523;
LABEL_31:
              v70 = OUTLINED_FUNCTION_2_38(v56, v57, v58, v69);
              v60 = v51;
              v55 = v51;
              if (!v70)
                goto LABEL_79;
              goto LABEL_13;
            case 42:
              v50 = v51;
              goto LABEL_99;
            case 43:
              goto LABEL_55;
            case 44:
              bspop_boa(a1);
              v71 = OUTLINED_FUNCTION_111_8();
              v55 = v51;
              if (v71)
                goto LABEL_13;
              OUTLINED_FUNCTION_4_37(46);
              is_kor_verb_ha_contr();
              if (v225)
                goto LABEL_3;
              goto LABEL_140;
            case 47:
              v50 = v51;
              goto LABEL_104;
            case 48:
              goto LABEL_101;
            case 51:
              v50 = v51;
              goto LABEL_109;
            case 52:
              goto LABEL_106;
            case 55:
              v50 = v51;
              goto LABEL_114;
            case 56:
              goto LABEL_111;
            case 57:
              v160 = v51;
              goto LABEL_127;
            case 60:
              v50 = v51;
              goto LABEL_115;
            case 61:
              v72 = OUTLINED_FUNCTION_2_38(v56, v57, v51, (uint64_t *)&unk_257752522);
              v61 = v51;
              v55 = v51;
              if (!v72)
                goto LABEL_121;
              goto LABEL_13;
            case 62:
              goto LABEL_121;
            case 65:
              v50 = v51;
              goto LABEL_116;
            case 66:
              v73 = OUTLINED_FUNCTION_2_38(v56, v57, v51, (uint64_t *)&unk_257752526);
              v62 = v51;
              v55 = v51;
              if (!v73)
                goto LABEL_124;
              goto LABEL_13;
            case 67:
              goto LABEL_124;
            case 70:
              v50 = v51;
              goto LABEL_132;
            case 71:
              v74 = OUTLINED_FUNCTION_2_38(v56, v57, v51, (uint64_t *)&unk_257752527);
              v63 = v51;
              v55 = v51;
              if (!v74)
                goto LABEL_118;
              goto LABEL_13;
            case 72:
              goto LABEL_118;
            case 75:
              goto LABEL_135;
            case 76:
              v208 = v51;
              goto LABEL_144;
            case 79:
              goto LABEL_137;
            default:
              goto LABEL_3;
          }
        }
LABEL_12:
        v55 = v51;
        goto LABEL_13;
      }
    }
    break;
  }
LABEL_50:
  OUTLINED_FUNCTION_4_37(27);
  OUTLINED_FUNCTION_100_8(v119, (uint64_t)v262);
  if (!v120)
  {
    OUTLINED_FUNCTION_37_29(28);
    v136 = OUTLINED_FUNCTION_2_38(v133, v134, v135, (uint64_t *)&_MergedGlobals_26);
    v58 = v50;
    v55 = v50;
    if (v136)
      goto LABEL_13;
LABEL_59:
    v51 = v58;
    OUTLINED_FUNCTION_145_3();
    goto LABEL_80;
  }
LABEL_51:
  OUTLINED_FUNCTION_4_37(33);
  OUTLINED_FUNCTION_100_8(v121, (uint64_t)v262);
  if (!v122)
  {
    OUTLINED_FUNCTION_37_29(34);
    v143 = OUTLINED_FUNCTION_2_38(v140, v141, v142, (uint64_t *)&_MergedGlobals_26);
    v59 = v50;
    v55 = v50;
    if (v143)
      goto LABEL_13;
LABEL_65:
    v51 = v59;
    OUTLINED_FUNCTION_148_3();
    is_kor_verb_H_infl();
    goto LABEL_80;
  }
LABEL_52:
  OUTLINED_FUNCTION_4_37(39);
  OUTLINED_FUNCTION_100_8(v123, (uint64_t)v262);
  if (!v124)
  {
    OUTLINED_FUNCTION_37_29(40);
    v153 = OUTLINED_FUNCTION_2_38(v150, v151, v152, (uint64_t *)&unk_257752521);
    v60 = v50;
    v55 = v50;
    if (v153)
      goto LABEL_13;
LABEL_79:
    v51 = v60;
    OUTLINED_FUNCTION_148_3();
    is_kor_verb_S_infl();
LABEL_80:
    v55 = v51;
    if (v137)
      goto LABEL_13;
    goto LABEL_140;
  }
LABEL_53:
  OUTLINED_FUNCTION_4_37(43);
  OUTLINED_FUNCTION_16_36(v125, v126, v127, v128, v129, v130, v131, v132, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!(_DWORD)v56)
  {
    v56 = OUTLINED_FUNCTION_163_2(v56, v57, v58, (uint64_t *)&unk_25775252F);
    LODWORD(v51) = v50;
    if (!(_DWORD)v56)
    {
LABEL_55:
      OUTLINED_FUNCTION_58_17(44, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253);
      bspush_ca_scan_boa(a1);
      if (testFldeq(a1, 1u, 4, 1))
        v55 = v51;
      else
        v55 = 1;
      goto LABEL_13;
    }
  }
LABEL_99:
  OUTLINED_FUNCTION_16_36(v56, v57, v58, v59, v60, v61, v62, v63, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!(_DWORD)v56)
  {
    v56 = OUTLINED_FUNCTION_2_38(v56, v57, v58, (uint64_t *)&unk_257752524);
    v51 = v50;
    if (!(_DWORD)v56)
    {
LABEL_101:
      OUTLINED_FUNCTION_36_29(49, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253);
      OUTLINED_FUNCTION_4_37(50);
      OUTLINED_FUNCTION_53_18();
      is_kor_verb_i_contr();
      if (v155)
        goto LABEL_3;
      goto LABEL_140;
    }
  }
LABEL_104:
  OUTLINED_FUNCTION_16_36(v56, v57, v58, v59, v60, v61, v62, v63, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!(_DWORD)v56)
  {
    v56 = OUTLINED_FUNCTION_2_38(v56, v57, v58, (uint64_t *)&unk_257752523);
    v51 = v50;
    if (!(_DWORD)v56)
    {
LABEL_106:
      OUTLINED_FUNCTION_36_29(53, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253);
      OUTLINED_FUNCTION_4_37(54);
      OUTLINED_FUNCTION_92_8();
      is_kor_verb_U_infl();
      if (v156)
        goto LABEL_3;
      goto LABEL_140;
    }
  }
LABEL_109:
  OUTLINED_FUNCTION_16_36(v56, v57, v58, v59, v60, v61, v62, v63, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!(_DWORD)v157)
  {
    v51 = v50;
    if (!OUTLINED_FUNCTION_163_2(v157, v158, v159, (uint64_t *)&unk_257752531))
    {
LABEL_111:
      OUTLINED_FUNCTION_36_29(57, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253);
      OUTLINED_FUNCTION_4_37(58);
      OUTLINED_FUNCTION_92_8();
      is_kor_verb_rU_infl();
      v160 = v51;
      if (v161)
      {
LABEL_127:
        v51 = v160;
        OUTLINED_FUNCTION_4_37(60);
        OUTLINED_FUNCTION_149_3();
        is_kor_verb_rE_infl();
        if (v203)
          goto LABEL_3;
      }
      goto LABEL_140;
    }
  }
LABEL_114:
  OUTLINED_FUNCTION_4_37(61);
  OUTLINED_FUNCTION_16_36(v162, v163, v164, v165, v166, v167, v168, v169, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!v170)
  {
    OUTLINED_FUNCTION_37_29(62);
    v196 = OUTLINED_FUNCTION_2_38(v193, v194, v195, (uint64_t *)&unk_257752521);
    v55 = v50;
    v61 = v50;
    if (v196)
      goto LABEL_13;
LABEL_121:
    v51 = v61;
    OUTLINED_FUNCTION_36_29(63, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253);
    OUTLINED_FUNCTION_4_37(64);
    OUTLINED_FUNCTION_53_18();
    is_kor_verb_a_contr();
    if (v197)
      goto LABEL_3;
    goto LABEL_140;
  }
LABEL_115:
  OUTLINED_FUNCTION_4_37(66);
  OUTLINED_FUNCTION_16_36(v171, v172, v173, v174, v175, v176, v177, v178, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!v179)
  {
    OUTLINED_FUNCTION_37_29(67);
    v201 = OUTLINED_FUNCTION_2_38(v198, v199, v200, (uint64_t *)&unk_257752525);
    v55 = v50;
    v62 = v50;
    if (v201)
      goto LABEL_13;
LABEL_124:
    v51 = v62;
    OUTLINED_FUNCTION_36_29(68, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253);
    OUTLINED_FUNCTION_4_37(69);
    OUTLINED_FUNCTION_53_18();
    is_kor_verb_e_contr();
    if (v202)
      goto LABEL_3;
    goto LABEL_140;
  }
LABEL_116:
  OUTLINED_FUNCTION_4_37(71);
  OUTLINED_FUNCTION_16_36(v180, v181, v182, v183, v184, v185, v186, v187, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if (!(_DWORD)v56)
  {
    OUTLINED_FUNCTION_37_29(72);
    v191 = OUTLINED_FUNCTION_2_38(v188, v189, v190, (uint64_t *)&unk_257752520);
    v55 = v50;
    v63 = v50;
    if (v191)
      goto LABEL_13;
LABEL_118:
    v51 = v63;
    OUTLINED_FUNCTION_36_29(73, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
      v245,
      v246,
      v247,
      v248,
      v249,
      v250,
      v251,
      v252,
      v253);
    OUTLINED_FUNCTION_4_37(74);
    OUTLINED_FUNCTION_53_18();
    is_kor_verb_wa_contr();
    if (v192)
      goto LABEL_3;
    goto LABEL_140;
  }
LABEL_132:
  OUTLINED_FUNCTION_16_36(v56, v57, v58, v59, v60, v61, v62, v63, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237,
    v238,
    v239,
    v240,
    v241,
    v242,
    v243,
    v244,
    v245,
    v246,
    v247,
    v248,
    v249,
    v250,
    v251,
    v252,
    v253,
    v254,
    v255,
    v256,
    v257,
    v258,
    v259,
    v260,
    v261,
    v262[0]);
  if ((_DWORD)v204)
  {
    v51 = v50;
  }
  else
  {
    v207 = OUTLINED_FUNCTION_2_38(v204, v205, v206, (uint64_t *)&unk_257752528);
    v208 = v50;
    v51 = v50;
    if (!v207)
    {
LABEL_144:
      v51 = v208;
      OUTLINED_FUNCTION_36_29(77, v227, v228, v229, v230, v231, v232, v233, v234, v235, v236, v237, v238, v239, v240, v241, v242, v243, v244,
        v245,
        v246,
        v247,
        v248,
        v249,
        v250,
        v251,
        v252,
        v253);
      OUTLINED_FUNCTION_4_37(78);
      OUTLINED_FUNCTION_53_18();
      is_kor_verb_O_contr();
      if (v224)
        goto LABEL_3;
      goto LABEL_140;
    }
  }
LABEL_135:
  OUTLINED_FUNCTION_4_37(80);
  OUTLINED_FUNCTION_100_8(v209, (uint64_t)v264);
  if (v210 || test_string_s(a1, 1u, 3u, (uint64_t *)&unk_25775254C))
  {
LABEL_137:
    v211 = v51;
  }
  else
  {
    *(_BYTE *)(a1 + 136) = 1;
    *(_QWORD *)(a1 + 112) = v263;
    *(_QWORD *)(a1 + 128) = 0;
    v226 = test_ptr(a1);
    v211 = v51;
    if (!v226)
      goto LABEL_140;
  }
  v51 = v211;
  v154 = 81;
LABEL_139:
  OUTLINED_FUNCTION_4_37(v154);
  is_kor_verb_reg();
  if (!v212)
    goto LABEL_140;
LABEL_3:
  vretproc(a1);
LABEL_4:
  OUTLINED_FUNCTION_87_9();
}

void is_kor_copular()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  __int16 *v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE v77[184];
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82[8];
  uint64_t v83;
  char v84[8];
  uint64_t v85;
  char v86[8];
  uint64_t v87;
  _BYTE v88[16];
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  char v92[10];
  char v93[9];
  char v94[9];
  char v95[192];
  uint64_t v96;

  OUTLINED_FUNCTION_9_37();
  v76 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v96 = *MEMORY[0x24BDAC8D0];
  v91[0] = 0;
  v91[1] = 0;
  v89 = 0;
  v90 = 0;
  OUTLINED_FUNCTION_170_2();
  v80 = 0;
  v81 = 0;
  v78[0] = 0;
  v78[1] = 0;
  v79 = 0;
  OUTLINED_FUNCTION_138_4();
  bzero(v77, v9);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_75_14(v10, v11);
  v12 = OUTLINED_FUNCTION_76_14();
  if ((_DWORD)v12
    || OUTLINED_FUNCTION_26_32(v12, (uint64_t)v77, (uint64_t)v94, (uint64_t)v93, (uint64_t)v92, (uint64_t)v95))
  {
LABEL_3:
    OUTLINED_FUNCTION_7_37();
  }
  else
  {
    OUTLINED_FUNCTION_6_37(v8, (uint64_t)v91, v6, v13, v14, v15, v16, v17);
    OUTLINED_FUNCTION_6_37(v8, (uint64_t)&v89, v4, v18, v19, v20, v21, v22);
    OUTLINED_FUNCTION_6_37(v8, (uint64_t)v88, v2, v23, v24, v25, v26, v27);
    OUTLINED_FUNCTION_6_37(v8, (uint64_t)v86, (__int16 *)v76, v28, v29, v30, v31, v32);
    v33 = OUTLINED_FUNCTION_128_7();
    v35 = push_ptr_init(v33, v34);
    OUTLINED_FUNCTION_11_37(v35, (uint64_t)v82);
    push_ptr_init(v8, (uint64_t)&v80);
    LODWORD(v79) = 0;
    LODWORD(v78[0]) = -65533;
    v36 = OUTLINED_FUNCTION_119_7();
    v87 = v90;
    v37 = *(unsigned __int16 *)(v8 + 2290);
    OUTLINED_FUNCTION_5_37((uint64_t)v36, 1);
    OUTLINED_FUNCTION_115_8();
    v38 = OUTLINED_FUNCTION_117_8();
    lpta_rpta_loadp(v38, v39, (uint64_t)v88);
    v40 = setd_lookup((_QWORD *)v8, 1u, 40);
    v41 = v40 == 0;
    v75 = 8;
    v42 = v37;
LABEL_6:
    v43 = v42;
    LODWORD(v42) = v41;
    while (2)
    {
      v44 = *(_QWORD *)(v8 + 104);
      if (v44)
      {
        OUTLINED_FUNCTION_169_2(v44);
      }
      else
      {
        OUTLINED_FUNCTION_31_30(v40, v42);
        v37 = 0;
      }
      OUTLINED_FUNCTION_110_8();
      v51 = v43;
      switch((int)v43)
      {
        case 0:
          lpta_loadp_setscan_r(v8, (uint64_t)v84);
          if (v52)
            goto LABEL_14;
          v53 = OUTLINED_FUNCTION_55_17();
          if (test_string_s(v53, v54, v55, (uint64_t *)&unk_257752524))
            goto LABEL_14;
          *(_BYTE *)(v8 + 136) = 1;
          v40 = OUTLINED_FUNCTION_42_24();
          if ((_DWORD)v40)
            goto LABEL_14;
          v65 = &v85;
          goto LABEL_23;
        case 1:
          OUTLINED_FUNCTION_50_21();
          goto LABEL_3;
        case 2:
LABEL_14:
          OUTLINED_FUNCTION_1_39(5);
          OUTLINED_FUNCTION_156_3();
          if (v56)
            goto LABEL_16;
          v57 = OUTLINED_FUNCTION_55_17();
          if (test_string_s(v57, v58, v59, (uint64_t *)&unk_257752524))
            goto LABEL_16;
          goto LABEL_21;
        case 3:
          goto LABEL_24;
        case 4:
LABEL_16:
          v60 = OUTLINED_FUNCTION_116_8();
          starttest(v60, v61);
          OUTLINED_FUNCTION_156_3();
          if (v62)
            goto LABEL_3;
          v40 = testFldeq(v8, 1u, 4, 4);
          LODWORD(v42) = v37;
          if ((_DWORD)v40)
            continue;
          v40 = OUTLINED_FUNCTION_21_34();
          LODWORD(v42) = v37;
          if ((_DWORD)v40)
            continue;
          OUTLINED_FUNCTION_155_3();
          OUTLINED_FUNCTION_200_0();
          v42 = v37;
          if ((_DWORD)v40)
            continue;
          v51 = v43;
LABEL_24:
          v43 = v51;
          OUTLINED_FUNCTION_185_1(v40, v42, v45, v46, v47, v48, v49, v50, v75);
          if (*(unsigned __int16 *)(v8 + 2286) == (_DWORD)v43)
          {
            lpta_rpta_loadp(v8, (uint64_t)v82, (uint64_t)&v89);
            settvar_s(v8, (unsigned __int8 *)v78, 2u);
            npush_s(v8);
            WORD1(v78[0]) = 1;
            npop(v8, (unsigned __int16 *)v78, v67, v68, v69, v70, v71, v72);
            insert_2ptv();
            v42 = v43;
            v41 = v37;
            if ((_DWORD)v40)
              goto LABEL_6;
          }
LABEL_26:
          v73 = OUTLINED_FUNCTION_155_3();
          lpta_rpta_loadp(v73, v74, (uint64_t)v88);
          OUTLINED_FUNCTION_70_14();
          mark_s();
          v42 = v43;
          v41 = v37;
          if ((_DWORD)v40)
            goto LABEL_6;
          *(_QWORD *)(v76 + 8) = v87;
          OUTLINED_FUNCTION_7_37();
          break;
        case 5:
LABEL_21:
          v63 = OUTLINED_FUNCTION_128_7();
          savescptr(v63, v64, (uint64_t)&v80);
          OUTLINED_FUNCTION_155_3();
          OUTLINED_FUNCTION_200_0();
          v42 = v37;
          if ((_DWORD)v40)
            continue;
          v65 = &v81;
LABEL_23:
          v66 = *(unsigned __int16 *)(v8 + 2286);
          v83 = *v65;
          v51 = v66;
          goto LABEL_24;
        case 7:
          goto LABEL_26;
        default:
          goto LABEL_3;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_0_41();
}

void is_kor_nominal()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  __int16 *v5;
  size_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  __int16 *v75;
  __int16 *v76;
  __int16 *v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  unsigned int v89;
  unsigned int v90;
  uint64_t *v91;
  uint64_t v92;
  unsigned int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  unsigned __int8 v104;
  int v105;
  uint64_t v106;
  unsigned int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int v117;
  int v118;
  uint64_t v119;
  unsigned int v120;
  unsigned int v121;
  uint64_t *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned __int8 *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208[8];
  uint64_t v209;
  __int16 v210;
  _BYTE v211[10];
  _BYTE v212[9];
  _BYTE v213[9];
  _BYTE v214[208];

  OUTLINED_FUNCTION_9_37();
  v5 = v4;
  OUTLINED_FUNCTION_91_9();
  OUTLINED_FUNCTION_126_7();
  v201 = 0;
  v202 = 0;
  v198 = 0;
  v199 = 0;
  v200 = 0;
  OUTLINED_FUNCTION_138_4();
  bzero(&v175, v6);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_140_4(v7, v8);
  v9 = OUTLINED_FUNCTION_141_3();
  if ((_DWORD)v9
    || OUTLINED_FUNCTION_26_32(v9, (uint64_t)&v175, (uint64_t)v213, (uint64_t)v212, (uint64_t)v211, (uint64_t)v214))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v210, v3, v10, v11, v12, v13, v14);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)v208, v2, v15, v16, v17, v18, v19);
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v206, v1, v20, v21, v22, v23, v24);
  v174 = (uint64_t)v5;
  OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v204, v5, v25, v26, v27, v28, v29);
  WORD2(v203) = -4;
  OUTLINED_FUNCTION_11_37(v30, (uint64_t)&v201);
  LODWORD(v200) = 0;
  LODWORD(v198) = -65533;
  OUTLINED_FUNCTION_119_7();
  HIWORD(v203) = 0;
  v205 = v209;
  OUTLINED_FUNCTION_130_7();
  OUTLINED_FUNCTION_104_8();
  if (!OUTLINED_FUNCTION_33_30() && !OUTLINED_FUNCTION_38_28())
    goto LABEL_53;
  v173 = 4;
  v172 = 6;
  v171 = 12;
  v169 = 8;
  v170 = 7;
  v168 = 9;
  v167 = 10;
  v166 = 11;
  v165 = 17;
  v164 = 14;
  v163 = 16;
  v161 = 18;
  v158 = 19;
  v154 = 23;
  while (2)
  {
    kor_roots_dict_lookup();
    if (!v31)
    {
LABEL_53:
      *(_QWORD *)(v174 + 8) = v205;
      break;
    }
LABEL_8:
    starttest(v0, v173);
    OUTLINED_FUNCTION_62_15(v32, v33, v34, v35, v36, v37, v38, v39, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204,
      v205,
      v206,
      v207,
      v208[0]);
    if (!v40)
    {
      OUTLINED_FUNCTION_19_35(5);
      v119 = v0;
      v120 = 1;
      v121 = 5;
      v122 = (uint64_t *)&unk_2577525C5;
LABEL_31:
      v95 = test_string_s(v119, v120, v121, v122);
      if ((_DWORD)v95)
        goto LABEL_37;
LABEL_32:
      OUTLINED_FUNCTION_203_0(v0, v172);
      bspush_ca(v0);
      is_kor_preending();
      if ((_DWORD)v95)
        goto LABEL_37;
LABEL_33:
      v123 = OUTLINED_FUNCTION_117_8();
      OUTLINED_FUNCTION_173_2(v123, v124, v125, v126, v127, v128, v129, v130, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186,
        v187,
        v188,
        v189,
        v190,
        v191,
        v192,
        v193,
        v194,
        v195,
        v196,
        v197,
        v198,
        v199,
        v200,
        v201,
        v202,
        v203,
        v204,
        v205,
        v206,
        v207,
        v208[0]);
      settvar_s(v0, (unsigned __int8 *)&v198, 3u);
      OUTLINED_FUNCTION_135_5();
      WORD1(v198) = 1;
      npop(v0, (unsigned __int16 *)&v198, v131, v132, v133, v134, v135, v136);
      goto LABEL_34;
    }
LABEL_9:
    starttest(v0, v164);
    OUTLINED_FUNCTION_62_15(v41, v42, v43, v44, v45, v46, v47, v48, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204,
      v205,
      v206,
      v207,
      v208[0]);
    if (!(_DWORD)v49)
    {
      OUTLINED_FUNCTION_19_35(15);
      v88 = v0;
      v89 = 1;
      v90 = 7;
      v91 = (uint64_t *)&unk_2577525DC;
LABEL_36:
      v95 = test_string_s(v88, v89, v90, v91);
      if (!(_DWORD)v95)
      {
LABEL_51:
        savescptr(v0, v163, (uint64_t)&v204);
        OUTLINED_FUNCTION_173_2(v0, (uint64_t)&v204, v138, v139, v140, v141, v142, v143, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
          v171,
          v172,
          v173,
          v174,
          v175,
          v176,
          v177,
          v178,
          v179,
          v180,
          v181,
          v182,
          v183,
          v184,
          v185,
          v186,
          v187,
          v188,
          v189,
          v190,
          v191,
          v192,
          v193,
          v194,
          v195,
          v196,
          v197,
          v198,
          v199,
          v200,
          v201,
          v202,
          v203,
          v204,
          v205,
          v206,
          v207,
          v208[0]);
        v144 = OUTLINED_FUNCTION_114_8();
        settvar_s(v144, v145, 3u);
        OUTLINED_FUNCTION_135_5();
        WORD1(v198) = 1;
        OUTLINED_FUNCTION_175_2(v146, v147, v148, v149, v150, v151, v152, v153);
        OUTLINED_FUNCTION_143_3();
        insert_2ptv();
        if (!(_DWORD)v95)
        {
          lpta_rpta_loadp(v0, (uint64_t)&v210, (uint64_t)&v206);
          mark_s();
          if (!(_DWORD)v95)
            goto LABEL_53;
        }
      }
      goto LABEL_37;
    }
LABEL_10:
    OUTLINED_FUNCTION_197_0(v49, v50, v51, v52, v53, v54, v55, v56, v154, v158, v161);
    OUTLINED_FUNCTION_62_15(v57, v58, v59, v60, v61, v62, v63, v64, v155, v159, v162, v163, v164, v165, v166, v167, v168, v169, v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204,
      v205,
      v206,
      v207,
      v208[0]);
    if (!(_DWORD)v49)
    {
      v92 = OUTLINED_FUNCTION_80_12();
      v95 = testFldeq(v92, v93, v94, 2);
      if ((_DWORD)v95)
        goto LABEL_37;
      v95 = OUTLINED_FUNCTION_21_34();
      if ((_DWORD)v95)
        goto LABEL_37;
      OUTLINED_FUNCTION_154_3(v95, v96, v97, v98, v99, v100, v101, v102, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186,
        v187,
        v188,
        v189,
        v190,
        v191,
        v192,
        v193,
        v194,
        v195,
        v196,
        v197,
        v198,
        v199,
        v200,
        v201,
        v202,
        v203,
        v204,
        v205,
        v206,
        v207,
        v208[0]);
      v103 = (_QWORD *)OUTLINED_FUNCTION_70_14();
      v105 = 37;
LABEL_24:
      v95 = setd_lookup(v103, v104, v105);
      if (!(_DWORD)v95)
        break;
      goto LABEL_37;
    }
LABEL_11:
    OUTLINED_FUNCTION_194_0(v49, v50, v51, v52, v53, v54, v55, v56, v154, v158);
    OUTLINED_FUNCTION_62_15(v65, v66, v67, v68, v69, v70, v71, v72, v156, v160, v161, v163, v164, v165, v166, v167, v168, v169, v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204,
      v205,
      v206,
      v207,
      v208[0]);
    if (!v73)
    {
      v106 = OUTLINED_FUNCTION_80_12();
      v95 = testFldeq(v106, v107, v108, 4);
      if ((_DWORD)v95)
        goto LABEL_37;
      v95 = OUTLINED_FUNCTION_21_34();
      if ((_DWORD)v95)
        goto LABEL_37;
      OUTLINED_FUNCTION_154_3(v95, v109, v110, v111, v112, v113, v114, v115, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
        v171,
        v172,
        v173,
        v174,
        v175,
        v176,
        v177,
        v178,
        v179,
        v180,
        v181,
        v182,
        v183,
        v184,
        v185,
        v186,
        v187,
        v188,
        v189,
        v190,
        v191,
        v192,
        v193,
        v194,
        v195,
        v196,
        v197,
        v198,
        v199,
        v200,
        v201,
        v202,
        v203,
        v204,
        v205,
        v206,
        v207,
        v208[0]);
      v103 = (_QWORD *)OUTLINED_FUNCTION_70_14();
      v105 = 38;
      goto LABEL_24;
    }
LABEL_12:
    v74 = OUTLINED_FUNCTION_120_7();
    if (!mark_kor_bound_nouns(v74, v75, v76, v77))
      goto LABEL_53;
LABEL_13:
    OUTLINED_FUNCTION_120_7();
    is_kor_pronouns();
    if (!v78)
      goto LABEL_53;
LABEL_14:
    OUTLINED_FUNCTION_120_7();
    is_kor_adverbs();
    if (!(_DWORD)v49)
      goto LABEL_53;
LABEL_15:
    OUTLINED_FUNCTION_185_1(v49, v50, v51, v52, v53, v54, v55, v56, v154);
    OUTLINED_FUNCTION_62_15(v79, v80, v81, v82, v83, v84, v85, v86, v157, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204,
      v205,
      v206,
      v207,
      v208[0]);
    if (!v87)
    {
      v116 = OUTLINED_FUNCTION_80_12();
      v95 = testFldeq(v116, v117, v118, 1);
      if (!(_DWORD)v95)
      {
        v95 = OUTLINED_FUNCTION_21_34();
        if (!(_DWORD)v95)
        {
          *(_BYTE *)(v0 + 136) = 1;
          v95 = OUTLINED_FUNCTION_42_24();
          if (!(_DWORD)v95)
            break;
        }
      }
      goto LABEL_37;
    }
LABEL_16:
    OUTLINED_FUNCTION_173_2(v0, (uint64_t)&v210, v51, v52, v53, v54, v55, v56, v154, v158, v161, v163, v164, v165, v166, v167, v168, v169, v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185,
      v186,
      v187,
      v188,
      v189,
      v190,
      v191,
      v192,
      v193,
      v194,
      v195,
      v196,
      v197,
      v198,
      v199,
      v200,
      v201,
      v202,
      v203,
      v204,
      v205,
      v206,
      v207,
      v208[0]);
    settvar_s(v0, (unsigned __int8 *)&v198, 2u);
LABEL_34:
    insert_2ptv();
    if (!(_DWORD)v95)
      goto LABEL_53;
LABEL_37:
    v137 = *(_QWORD *)(v0 + 104);
    if (v137)
      v49 = OUTLINED_FUNCTION_24_32(v137);
    else
      v49 = OUTLINED_FUNCTION_31_30(v95, 0);
    switch((int)v49)
    {
      case 1:
        continue;
      case 2:
        goto LABEL_8;
      case 3:
        goto LABEL_53;
      case 4:
        goto LABEL_9;
      case 5:
        OUTLINED_FUNCTION_73_14();
        v119 = OUTLINED_FUNCTION_70_14();
        v121 = 1;
        v122 = (uint64_t *)&unk_25775252E;
        goto LABEL_31;
      case 6:
        goto LABEL_32;
      case 7:
        bspush_ca_scan(v0, v169);
        v119 = v0;
        v120 = 1;
        v121 = 2;
        v122 = (uint64_t *)&unk_257752545;
        goto LABEL_31;
      case 8:
        OUTLINED_FUNCTION_199_0(v49, v50, v51, v52, v53, v54, v55, v56, v154, v158, v161, v163, v164, v165, v166, v167, v168);
        v119 = OUTLINED_FUNCTION_80_12();
        v122 = (uint64_t *)&unk_2577525A5;
        goto LABEL_31;
      case 9:
        OUTLINED_FUNCTION_196_0(v49, v50, v51, v52, v53, v54, v55, v56, v154, v158, v161, v163, v164, v165, v166, v167);
        v119 = OUTLINED_FUNCTION_80_12();
        v122 = (uint64_t *)&unk_2577525A9;
        goto LABEL_31;
      case 10:
        OUTLINED_FUNCTION_192_0(v49, v50, v51, v52, v53, v54, v55, v56, v154, v158, v161, v163, v164, v165, v166);
        v119 = v0;
        v120 = 1;
        v121 = 2;
        v122 = (uint64_t *)&unk_257752547;
        goto LABEL_31;
      case 11:
        v119 = OUTLINED_FUNCTION_80_12();
        v122 = (uint64_t *)&unk_2577525AD;
        goto LABEL_31;
      case 12:
        is_kor_verb(v0, &v210, (__int16 *)&v201, (uint64_t)&v206, (uint64_t)&v204, (__int16 *)&v203 + 2);
        if (!(_DWORD)v95)
          goto LABEL_33;
        goto LABEL_37;
      case 13:
        goto LABEL_33;
      case 14:
        goto LABEL_10;
      case 15:
        bspush_ca_scan(v0, v165);
        v88 = OUTLINED_FUNCTION_70_14();
        v90 = 6;
        v91 = (uint64_t *)&unk_2577525CF;
        goto LABEL_36;
      case 16:
        goto LABEL_51;
      case 17:
        v88 = v0;
        v89 = 1;
        v90 = 5;
        v91 = (uint64_t *)&unk_2577525CA;
        goto LABEL_36;
      case 18:
        goto LABEL_11;
      case 19:
        goto LABEL_12;
      case 20:
        goto LABEL_13;
      case 21:
        goto LABEL_14;
      case 22:
        goto LABEL_15;
      case 23:
        goto LABEL_16;
      default:
        goto LABEL_3;
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_L_infl()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[10];
  _BYTE v102[9];
  _BYTE v103[9];
  _BYTE v104[192];
  uint64_t v105;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_29_30();
  v105 = *MEMORY[0x24BDAC8D0];
  v99 = 0;
  v100 = 0;
  v97 = 0;
  v98 = 0;
  v95 = 0;
  v96 = 0;
  HIDWORD(v94) = 0;
  OUTLINED_FUNCTION_3_38(v4, v5, v6, v7, v8, v9, v10, v11, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93);
  OUTLINED_FUNCTION_75_14(v12, 0xC0uLL);
  v13 = OUTLINED_FUNCTION_76_14();
  if (!(_DWORD)v13
    && !OUTLINED_FUNCTION_26_32(v13, (uint64_t)&v67, (uint64_t)v103, (uint64_t)v102, (uint64_t)v101, (uint64_t)v104))
  {
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v99, v3, v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v97, v2, v19, v20, v21, v22, v23);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v95, v1, v24, v25, v26, v27, v28);
    OUTLINED_FUNCTION_48_22(v29, (uint64_t)&v94 + 4, v30, v31, v32, v33, v34, v35);
    v37 = OUTLINED_FUNCTION_11_37(v36, (uint64_t)&v92);
    OUTLINED_FUNCTION_11_37(v37, (uint64_t)&v90);
    OUTLINED_FUNCTION_13_36();
    if (v38)
    {
      OUTLINED_FUNCTION_20_35(v100, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93);
      if (!v39)
      {
        v40 = OUTLINED_FUNCTION_21_34();
        if (!(_DWORD)v40)
LABEL_8:
          OUTLINED_FUNCTION_18_35(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
            v78,
            v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90);
      }
    }
    OUTLINED_FUNCTION_97_8();
    while (2)
    {
      OUTLINED_FUNCTION_125_7(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99);
      OUTLINED_FUNCTION_176_2();
      v40 = OUTLINED_FUNCTION_33_30();
      if ((_DWORD)v40 || (v40 = OUTLINED_FUNCTION_38_28(), (_DWORD)v40))
      {
LABEL_12:
        OUTLINED_FUNCTION_151_3(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99);
        v48 = (_QWORD *)OUTLINED_FUNCTION_118_8();
        v40 = setd_lookup(v48, v49, 22);
        if ((_DWORD)v40)
        {
LABEL_13:
          OUTLINED_FUNCTION_105_8();
          OUTLINED_FUNCTION_102_8(v50, v51, v52, v53, v54, v55, v56, v57, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
            v78,
            v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90,
            v91,
            v92,
            v93,
            v94,
            v95,
            v96,
            v97);
          if (v58)
            break;
          OUTLINED_FUNCTION_73_14();
          v59 = v0;
          v60 = -6;
          v61 = 2;
          v62 = (uint64_t *)&unk_25775253D;
LABEL_15:
          v63 = test_string_s(v59, v60, v61, v62);
          if ((_DWORD)v63)
          {
            v64 = *(_QWORD *)(v0 + 104);
            if (v64)
              v40 = OUTLINED_FUNCTION_24_32(v64);
            else
              v40 = OUTLINED_FUNCTION_31_30(v63, 0);
            switch((int)v40)
            {
              case 1:
                continue;
              case 2:
                goto LABEL_8;
              case 3:
                goto LABEL_12;
              case 4:
              case 10:
                goto LABEL_24;
              case 5:
                goto LABEL_13;
              case 7:
                bspush_ca_scan(v0, 9);
                v59 = OUTLINED_FUNCTION_118_8();
                v61 = 5;
                v62 = (uint64_t *)&unk_2577525B1;
                goto LABEL_15;
              case 8:
                goto LABEL_22;
              case 9:
                v59 = v0;
                v60 = -6;
                v61 = 2;
                v62 = (uint64_t *)&unk_25775253F;
                goto LABEL_15;
              default:
                goto LABEL_3;
            }
            break;
          }
LABEL_22:
          OUTLINED_FUNCTION_77_13(v0, 8);
          v40 = OUTLINED_FUNCTION_81_12(v65, v66, (__int16 *)&v97);
          if (!(_DWORD)v40)
            HIWORD(v94) = *(_WORD *)(v0 + 2286);
        }
LABEL_24:
        OUTLINED_FUNCTION_122_7(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          SWORD2(v94),
          SHIWORD(v94),
          v95,
          v96);
      }
      break;
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_T_infl()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174[2];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_59_17();
  v182 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v0, v1, v2, v3, v4, v5, v6, v7, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100, v105,
    v110,
    v115,
    v120,
    v125,
    v130,
    v135,
    v140,
    v145,
    v150,
    v155,
    v160,
    v165,
    v170,
    v171,
    v172,
    v173);
  OUTLINED_FUNCTION_46_23(v8, v9, v10, v11, v12, v13, v14, v15, v56, v61, v66, v71, v76, v81, v86, v91, v96, v101, v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v171,
    v172,
    v173,
    0,
    0,
    0,
    0,
    v177,
    v178,
    v179,
    v180,
    v181);
  v16 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v16)
  {
    v24 = OUTLINED_FUNCTION_15_36(v16, v17, v18, v19, v20, v21, v22, v23, v57, v62, v67, v72, v77, v82, v87, v92, v97, v102, v107,
            v112,
            v117,
            v122,
            v127,
            v132,
            v137,
            v142,
            v147,
            v152,
            v157,
            v162,
            v167,
            v170,
            v171,
            v172,
            v173,
            v174[0],
            v174[1],
            v175,
            v176,
            v177,
            SBYTE4(v177),
            v178,
            SWORD2(v178),
            SBYTE6(v178),
            v179,
            SWORD2(v179),
            SBYTE6(v179),
            SHIBYTE(v179),
            v180,
            v181);
    if (!(_DWORD)v24)
    {
      OUTLINED_FUNCTION_28_30(v24, (uint64_t)&v175, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_41_24(v31, (uint64_t)v174, v32, v33, v34, v35, v36, v37);
      v39 = OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v172);
      OUTLINED_FUNCTION_11_37(v39, (uint64_t)&v170);
      OUTLINED_FUNCTION_13_36();
      if (v40
        && (OUTLINED_FUNCTION_20_35(v176, v58, v63, v68, v73, v78, v83, v88, v93, v98, v103, v108, v113, v118, v123, v128, v133, v138, v143,
              v148,
              v153,
              v158,
              v163,
              v168,
              v170,
              v171,
              v172,
              v173),
            !v41))
      {
        OUTLINED_FUNCTION_21_34();
        OUTLINED_FUNCTION_66_14();
        if (!(_DWORD)v42)
          OUTLINED_FUNCTION_18_35(v42, v43, v44, v45, v46, v47, v48, v49, v59, v64, v69, v74, v79, v84, v89, v94, v99, v104, v109,
            v114,
            v119,
            v124,
            v129,
            v134,
            v139,
            v144,
            v149,
            v154,
            v159,
            v164,
            v169,
            v170);
      }
      else
      {
        OUTLINED_FUNCTION_99_8();
      }
      OUTLINED_FUNCTION_39_26();
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_71_14();
      if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
      {
        OUTLINED_FUNCTION_72_14();
        OUTLINED_FUNCTION_89_9();
        OUTLINED_FUNCTION_12_37();
        OUTLINED_FUNCTION_54_18();
        OUTLINED_FUNCTION_78_13();
        if (v52)
        {
          OUTLINED_FUNCTION_49_21(v50, v51);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v50, v51);
          OUTLINED_FUNCTION_67_14();
        }
        OUTLINED_FUNCTION_96_8();
        if (!(!v40 & v54))
          __asm { BR              X9 }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void sub_24866C7CC()
{
  JUMPOUT(0x24866C770);
}

void sub_24866C7D4()
{
  OUTLINED_FUNCTION_7_37();
  JUMPOUT(0x24866C6D8);
}

void sub_24866C7E0()
{
  OUTLINED_FUNCTION_50_21();
  JUMPOUT(0x24866C6D0);
}

void is_kor_verb_S_infl()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154[2];
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_59_17();
  v162 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v1, v2, v3, v4, v5, v6, v7, v8, v58, v62, v66, v70, v74, v78, v82, v86, v90, v94, v98,
    v102,
    v106,
    v110,
    v114,
    v118,
    v122,
    v126,
    v130,
    v134,
    v138,
    v142,
    v146,
    v150,
    v151,
    v152,
    v153);
  OUTLINED_FUNCTION_46_23(v9, v10, v11, v12, v13, v14, v15, v16, v59, v63, v67, v71, v75, v79, v83, v87, v91, v95, v99,
    v103,
    v107,
    v111,
    v115,
    v119,
    v123,
    v127,
    v131,
    v135,
    v139,
    v143,
    v147,
    v150,
    v151,
    v152,
    v153,
    0,
    0,
    0,
    0,
    v157,
    v158,
    v159,
    v160,
    v161);
  v17 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v17)
  {
    v25 = OUTLINED_FUNCTION_15_36(v17, v18, v19, v20, v21, v22, v23, v24, v60, v64, v68, v72, v76, v80, v84, v88, v92, v96, v100,
            v104,
            v108,
            v112,
            v116,
            v120,
            v124,
            v128,
            v132,
            v136,
            v140,
            v144,
            v148,
            v150,
            v151,
            v152,
            v153,
            v154[0],
            v154[1],
            v155,
            v156,
            v157,
            SBYTE4(v157),
            v158,
            SWORD2(v158),
            SBYTE6(v158),
            v159,
            SWORD2(v159),
            SBYTE6(v159),
            SHIBYTE(v159),
            v160,
            v161);
    if (!(_DWORD)v25)
    {
      OUTLINED_FUNCTION_28_30(v25, (uint64_t)&v155, v26, v27, v28, v29, v30, v31);
      OUTLINED_FUNCTION_41_24(v32, (uint64_t)v154, v33, v34, v35, v36, v37, v38);
      v40 = OUTLINED_FUNCTION_11_37(v39, (uint64_t)&v152);
      OUTLINED_FUNCTION_11_37(v40, (uint64_t)&v150);
      OUTLINED_FUNCTION_13_36();
      if (v41
        && (OUTLINED_FUNCTION_20_35(v156, v61, v65, v69, v73, v77, v81, v85, v89, v93, v97, v101, v105, v109, v113, v117, v121, v125, v129,
              v133,
              v137,
              v141,
              v145,
              v149,
              v150,
              v151,
              v152,
              v153),
            !v42))
      {
        OUTLINED_FUNCTION_21_34();
        OUTLINED_FUNCTION_66_14();
        if (!(_DWORD)v43)
LABEL_11:
          OUTLINED_FUNCTION_18_35(v43, v44, v45, v46, v47, v48, v49, v50, v61, v65, v69, v73, v77, v81, v85, v89, v93, v97, v101,
            v105,
            v109,
            v113,
            v117,
            v121,
            v125,
            v129,
            v133,
            v137,
            v141,
            v145,
            v149,
            v150);
      }
      else
      {
        OUTLINED_FUNCTION_99_8();
      }
      while (2)
      {
        v51 = OUTLINED_FUNCTION_114_8();
        starttest(v51, v52);
        v53 = OUTLINED_FUNCTION_128_7();
        bspush_ca_boa(v53);
        lpta_rpta_loadp(v0, (uint64_t)&v155, (uint64_t)v154);
        OUTLINED_FUNCTION_54_18();
        OUTLINED_FUNCTION_78_13();
        if (v56)
        {
          v43 = OUTLINED_FUNCTION_49_21(v54, v55);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v54, v55);
          v43 = OUTLINED_FUNCTION_67_14();
        }
        switch(v57)
        {
          case 1:
            continue;
          case 2:
            v45 = v43;
            goto LABEL_11;
          case 4:
            OUTLINED_FUNCTION_50_21();
            break;
          default:
            goto LABEL_3;
        }
        break;
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_reg()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  uint64_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE v84[184];
  _QWORD v85[2];
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[2];
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[10];
  _BYTE v95[9];
  _BYTE v96[9];
  _BYTE v97[192];
  uint64_t v98;

  OUTLINED_FUNCTION_9_37();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_59_17();
  v98 = *MEMORY[0x24BDAC8D0];
  v92 = 0;
  v93 = 0;
  v91[0] = 0;
  v91[1] = 0;
  v89 = 0;
  v90 = 0;
  v88 = 0;
  v86 = 0;
  v87 = 0;
  v85[0] = 0;
  v85[1] = 0;
  OUTLINED_FUNCTION_138_4();
  bzero(v84, v5);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_83_10(v6, v7);
  v8 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v8)
  {
    v9 = OUTLINED_FUNCTION_26_32(v8, (uint64_t)v84, (uint64_t)v96, (uint64_t)v95, (uint64_t)v94, (uint64_t)v97);
    if (!(_DWORD)v9)
    {
      OUTLINED_FUNCTION_28_30(v9, (uint64_t)&v92, v10, v11, v12, v13, v14, v15);
      OUTLINED_FUNCTION_41_24(v16, (uint64_t)v91, v17, v18, v19, v20, v21, v22);
      get_parm(v0, (uint64_t)&v89, (__int16 *)v4, (uint64_t)v97, v23, v24, v25, v26);
      get_parm(v0, (uint64_t)&v88, v2, 4294967292, v27, v28, v29, v30);
      v32 = OUTLINED_FUNCTION_11_37(v31, (uint64_t)&v86);
      OUTLINED_FUNCTION_11_37(v32, (uint64_t)v85);
      v33 = OUTLINED_FUNCTION_13_36();
      if (v34)
      {
        v87 = v93;
        OUTLINED_FUNCTION_22_33((uint64_t)v33, (uint64_t)&v86);
        if (!v35 && !OUTLINED_FUNCTION_21_34())
        {
LABEL_8:
          OUTLINED_FUNCTION_144_3();
          OUTLINED_FUNCTION_25_32(v36, v37, (uint64_t)v85);
        }
      }
      v83 = 5;
      v82 = 6;
      v81 = 7;
      OUTLINED_FUNCTION_109_8();
      while (2)
      {
        HIWORD(v88) = *(_WORD *)(v0 + 2290);
        v38 = OUTLINED_FUNCTION_155_3();
        lpta_loadpn(v38, v39);
        rpta_loadpn(v0);
        if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
        {
LABEL_12:
          v40 = OUTLINED_FUNCTION_155_3();
          lpta_rpta_loadp(v40, v41, (uint64_t)v91);
          v42 = (_QWORD *)OUTLINED_FUNCTION_118_8();
          v44 = setd_lookup(v42, v43, 36);
          if ((_DWORD)v44)
          {
LABEL_13:
            OUTLINED_FUNCTION_195_0(v44, v45, v46, v47, v48, v49, v50, v51, v76, v77, v78, v79, v80, v81, v82, v83);
            OUTLINED_FUNCTION_113_8(v0, (uint64_t)v91);
            if ((_DWORD)v52)
              goto LABEL_17;
            OUTLINED_FUNCTION_192_0(v52, v53, v54, v55, v56, v57, v58, v59, v76, v77, v78, v79, v80, v81, v82);
            v60 = OUTLINED_FUNCTION_93_8();
            v63 = (uint64_t *)&unk_257752573;
LABEL_15:
            v44 = test_string_s(v60, v61, v62, v63);
            if ((_DWORD)v44)
            {
LABEL_20:
              v75 = *(_QWORD *)(v0 + 104);
              if (v75)
                v44 = OUTLINED_FUNCTION_24_32(v75);
              else
                v44 = OUTLINED_FUNCTION_31_30(v44, 0);
              switch((int)v44)
              {
                case 1:
                  continue;
                case 2:
                  goto LABEL_8;
                case 3:
                  goto LABEL_12;
                case 4:
                  goto LABEL_13;
                case 5:
                  goto LABEL_17;
                case 6:
                  OUTLINED_FUNCTION_133_6(v44, v45, v46, v47, v48, v49, v50, v51, v76, v77, v78, v79, v80);
                  v60 = OUTLINED_FUNCTION_93_8();
                  v63 = (uint64_t *)&unk_257752576;
                  goto LABEL_15;
                case 7:
                  goto LABEL_16;
                case 8:
                  OUTLINED_FUNCTION_127_7(v44, v45, v46, v47, v48, v49, v50, v51, v76, v77, v78, v79);
                  v60 = OUTLINED_FUNCTION_184_1();
                  goto LABEL_15;
                case 9:
                  OUTLINED_FUNCTION_198_0(v44, v45, v46, v47, v48, v49, v50, v51, v76, v77, v78);
                  v60 = OUTLINED_FUNCTION_93_8();
                  v63 = (uint64_t *)&unk_25775257C;
                  goto LABEL_15;
                case 10:
                  OUTLINED_FUNCTION_136_4(v44, v45, v46, v47, v48, v49, v50, v51, v76, v77);
                  v60 = OUTLINED_FUNCTION_118_8();
                  v62 = 8;
                  v63 = (uint64_t *)&unk_2577525E3;
                  goto LABEL_15;
                case 11:
                  OUTLINED_FUNCTION_73_14();
                  v60 = v0;
                  v61 = 1;
                  v62 = 4;
                  v63 = (uint64_t *)&unk_25775259D;
                  goto LABEL_15;
                case 12:
                  v60 = OUTLINED_FUNCTION_93_8();
                  v63 = (uint64_t *)&unk_25775257F;
                  goto LABEL_15;
                case 14:
                  OUTLINED_FUNCTION_178_2();
                  v71 = OUTLINED_FUNCTION_93_8();
                  v74 = (uint64_t *)&unk_257752582;
                  goto LABEL_19;
                case 15:
                  goto LABEL_32;
                case 16:
                  v71 = v0;
                  v72 = 1;
                  v73 = 4;
                  v74 = (uint64_t *)&unk_2577525A1;
                  goto LABEL_19;
                case 17:
                  goto LABEL_34;
                default:
                  goto LABEL_3;
              }
              break;
            }
LABEL_16:
            OUTLINED_FUNCTION_167_2(v0, v81);
            v64 = OUTLINED_FUNCTION_162_2();
            if (is_kor_modal(v64, v65, (__int16 *)v91, (__int16 *)&v89))
            {
LABEL_17:
              v66 = OUTLINED_FUNCTION_162_2();
              starttest(v66, v67);
              OUTLINED_FUNCTION_113_8(v0, (uint64_t)v91);
              if (v68)
                break;
              v69 = OUTLINED_FUNCTION_117_8();
              bspush_ca_scan(v69, v70);
              v71 = OUTLINED_FUNCTION_184_1();
LABEL_19:
              v44 = test_string_s(v71, v72, v73, v74);
              if ((_DWORD)v44)
                goto LABEL_20;
LABEL_32:
              OUTLINED_FUNCTION_25_32(v44, 15, (uint64_t)&v89);
            }
            else
            {
              HIWORD(v88) = *(_WORD *)(v0 + 2286);
            }
          }
LABEL_34:
          *(_QWORD *)(v4 + 8) = v90;
          v2[1] = HIWORD(v88);
        }
        break;
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_P_infl()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  __int16 *v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unsigned __int8 v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[184];
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[10];
  _BYTE v56[9];
  _BYTE v57[9];
  _BYTE v58[192];
  uint64_t v59;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_91_9();
  v59 = *MEMORY[0x24BDAC8D0];
  v53 = 0;
  v54 = 0;
  v52[0] = 0;
  v52[1] = 0;
  v50 = 0;
  v51 = 0;
  v48 = 0;
  v49 = 0;
  v47[0] = 0;
  v47[1] = 0;
  bzero(v46, 0xB8uLL);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_140_4(v4, v5);
  v6 = OUTLINED_FUNCTION_141_3();
  if ((_DWORD)v6
    || OUTLINED_FUNCTION_26_32(v6, (uint64_t)v46, (uint64_t)v57, (uint64_t)v56, (uint64_t)v55, (uint64_t)v58))
  {
    goto LABEL_3;
  }
  OUTLINED_FUNCTION_61_16(v0, (uint64_t)&v53, v3, v7, v8, v9, v10, v11);
  OUTLINED_FUNCTION_61_16(v0, (uint64_t)v52, v2, v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_61_16(v0, (uint64_t)&v50, (__int16 *)v1, v17, v18, v19, v20, v21);
  v23 = OUTLINED_FUNCTION_11_37(v22, (uint64_t)&v48);
  OUTLINED_FUNCTION_11_37(v23, (uint64_t)v47);
  v24 = OUTLINED_FUNCTION_13_36();
  if (!v25)
    goto LABEL_8;
  v49 = v54;
  OUTLINED_FUNCTION_22_33((uint64_t)v24, (uint64_t)&v48);
  if (!v26)
  {
    OUTLINED_FUNCTION_21_34();
    OUTLINED_FUNCTION_66_14();
    if (!v29)
    {
LABEL_12:
      v30 = v28;
      OUTLINED_FUNCTION_144_3();
      OUTLINED_FUNCTION_25_32(v31, v32, (uint64_t)v47);
      v27 = v30;
    }
  }
  else
  {
LABEL_8:
    OUTLINED_FUNCTION_99_8();
  }
  v33 = v27;
  while (2)
  {
    OUTLINED_FUNCTION_177_2();
    OUTLINED_FUNCTION_104_8();
    if (!OUTLINED_FUNCTION_33_30() && !OUTLINED_FUNCTION_38_28())
    {
LABEL_3:
      OUTLINED_FUNCTION_7_37();
    }
    else
    {
LABEL_16:
      v34 = OUTLINED_FUNCTION_129_7();
      starttest(v34, v35);
      v36 = OUTLINED_FUNCTION_116_8();
      bspush_ca_boa(v36);
      OUTLINED_FUNCTION_35_29();
      v37 = (_QWORD *)OUTLINED_FUNCTION_70_14();
      v39 = setd_lookup(v37, v38, 24);
      if (v39)
        v40 = v33;
      else
        v40 = 1;
      if (*(_QWORD *)(v0 + 104))
      {
        v41 = OUTLINED_FUNCTION_49_21(v39, v40);
      }
      else
      {
        OUTLINED_FUNCTION_31_30(v39, v40);
        v41 = OUTLINED_FUNCTION_67_14();
      }
      v33 = v41;
      switch(v42)
      {
        case 1:
          v33 = v41;
          continue;
        case 2:
          v28 = v41;
          goto LABEL_12;
        case 3:
          goto LABEL_16;
        case 4:
          OUTLINED_FUNCTION_30_30(v41, (uint64_t)v52);
          if ((_DWORD)v43)
            goto LABEL_3;
          v41 = OUTLINED_FUNCTION_56_17(v43, v44, v45, (uint64_t *)&string_52);
          if ((_DWORD)v41)
            goto LABEL_3;
          goto LABEL_26;
        case 5:
        case 9:
          goto LABEL_27;
        case 6:
          OUTLINED_FUNCTION_50_21();
          goto LABEL_3;
        case 8:
LABEL_26:
          OUTLINED_FUNCTION_25_32(v41, 8, (uint64_t)&v50);
LABEL_27:
          *(_QWORD *)(v1 + 8) = v51;
          OUTLINED_FUNCTION_7_37();
          break;
        default:
          goto LABEL_3;
      }
    }
    break;
  }
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_H_infl()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174[2];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_59_17();
  v182 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v0, v1, v2, v3, v4, v5, v6, v7, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100, v105,
    v110,
    v115,
    v120,
    v125,
    v130,
    v135,
    v140,
    v145,
    v150,
    v155,
    v160,
    v165,
    v170,
    v171,
    v172,
    v173);
  OUTLINED_FUNCTION_46_23(v8, v9, v10, v11, v12, v13, v14, v15, v56, v61, v66, v71, v76, v81, v86, v91, v96, v101, v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v171,
    v172,
    v173,
    0,
    0,
    0,
    0,
    v177,
    v178,
    v179,
    v180,
    v181);
  v16 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v16)
  {
    v24 = OUTLINED_FUNCTION_15_36(v16, v17, v18, v19, v20, v21, v22, v23, v57, v62, v67, v72, v77, v82, v87, v92, v97, v102, v107,
            v112,
            v117,
            v122,
            v127,
            v132,
            v137,
            v142,
            v147,
            v152,
            v157,
            v162,
            v167,
            v170,
            v171,
            v172,
            v173,
            v174[0],
            v174[1],
            v175,
            v176,
            v177,
            SBYTE4(v177),
            v178,
            SWORD2(v178),
            SBYTE6(v178),
            v179,
            SWORD2(v179),
            SBYTE6(v179),
            SHIBYTE(v179),
            v180,
            v181);
    if (!(_DWORD)v24)
    {
      OUTLINED_FUNCTION_28_30(v24, (uint64_t)&v175, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_41_24(v31, (uint64_t)v174, v32, v33, v34, v35, v36, v37);
      v39 = OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v172);
      OUTLINED_FUNCTION_11_37(v39, (uint64_t)&v170);
      OUTLINED_FUNCTION_13_36();
      if (v40
        && (OUTLINED_FUNCTION_20_35(v176, v58, v63, v68, v73, v78, v83, v88, v93, v98, v103, v108, v113, v118, v123, v128, v133, v138, v143,
              v148,
              v153,
              v158,
              v163,
              v168,
              v170,
              v171,
              v172,
              v173),
            !v41))
      {
        OUTLINED_FUNCTION_21_34();
        OUTLINED_FUNCTION_66_14();
        if (!(_DWORD)v42)
          OUTLINED_FUNCTION_18_35(v42, v43, v44, v45, v46, v47, v48, v49, v59, v64, v69, v74, v79, v84, v89, v94, v99, v104, v109,
            v114,
            v119,
            v124,
            v129,
            v134,
            v139,
            v144,
            v149,
            v154,
            v159,
            v164,
            v169,
            v170);
      }
      else
      {
        OUTLINED_FUNCTION_99_8();
      }
      OUTLINED_FUNCTION_39_26();
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_71_14();
      if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
      {
        OUTLINED_FUNCTION_72_14();
        OUTLINED_FUNCTION_89_9();
        OUTLINED_FUNCTION_12_37();
        OUTLINED_FUNCTION_54_18();
        OUTLINED_FUNCTION_78_13();
        if (v52)
        {
          OUTLINED_FUNCTION_49_21(v50, v51);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v50, v51);
          OUTLINED_FUNCTION_67_14();
        }
        OUTLINED_FUNCTION_96_8();
        if (!(!v40 & v54))
          __asm { BR              X9 }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void sub_24866D070()
{
  JUMPOUT(0x24866D014);
}

void sub_24866D078()
{
  OUTLINED_FUNCTION_7_37();
  JUMPOUT(0x24866CF7CLL);
}

void sub_24866D084()
{
  OUTLINED_FUNCTION_50_21();
  JUMPOUT(0x24866CF74);
}

void is_kor_verb_ha_contr()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;
  int v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  __int16 *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67[8];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[2];
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[2];
  uint64_t v98;
  uint64_t v99;
  char v100[10];
  char v101[9];
  char v102[9];
  char v103[208];

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_29_30();
  OUTLINED_FUNCTION_69_14(v5, v6, v7, v8, v9, v10, v11, v12, v64, v65, v67[0], v68, v69, v70, v71, v72, v73, v74, v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90[0],
    v90[1],
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97[0],
    v97[1],
    v98,
    v99);
  OUTLINED_FUNCTION_75_14(v13, 0xC0uLL);
  v14 = OUTLINED_FUNCTION_76_14();
  if ((_DWORD)v14
    || OUTLINED_FUNCTION_26_32(v14, (uint64_t)v67, (uint64_t)v102, (uint64_t)v101, (uint64_t)v100, (uint64_t)v103))
  {
LABEL_3:
    OUTLINED_FUNCTION_7_37();
  }
  else
  {
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v98, v4, v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)v97, v3, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v95, (__int16 *)v2, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_48_22(v30, (uint64_t)&v94, v31, v32, v33, v34, v35, v36);
    v38 = OUTLINED_FUNCTION_11_37(v37, (uint64_t)&v91);
    OUTLINED_FUNCTION_11_37(v38, (uint64_t)v90);
    v39 = OUTLINED_FUNCTION_13_36();
    if (v40 && (v92 = v99, OUTLINED_FUNCTION_22_33((uint64_t)v39, (uint64_t)&v91), !v41))
    {
      v47 = OUTLINED_FUNCTION_21_34();
      v43 = 0;
      v42 = 0;
      if (!(_DWORD)v47)
      {
LABEL_57:
        OUTLINED_FUNCTION_25_32(v47, 2, (uint64_t)v90);
        v42 = v43;
      }
    }
    else
    {
      OUTLINED_FUNCTION_99_8();
    }
    v43 = v42;
    v44 = 3;
LABEL_10:
    HIWORD(v94) = *(_WORD *)(v0 + 2290);
    v66 = v44;
    starttest(v0, v44);
    OUTLINED_FUNCTION_183_1();
    v45 = OUTLINED_FUNCTION_131_6();
    lpta_loadpn(v45, v46);
    OUTLINED_FUNCTION_104_8();
    v47 = OUTLINED_FUNCTION_33_30();
    if ((_DWORD)v47)
    {
LABEL_13:
      v48 = v43;
      goto LABEL_14;
    }
    v47 = OUTLINED_FUNCTION_38_28();
LABEL_53:
    v48 = v43;
    if ((_DWORD)v47)
    {
      while (1)
      {
LABEL_14:
        v49 = *(_QWORD *)(v0 + 104);
        if (v49)
        {
          OUTLINED_FUNCTION_24_32(v49);
          v43 = v50;
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v47, v48);
          v43 = 0;
        }
        OUTLINED_FUNCTION_110_8();
        v51 = 20;
        switch(v52)
        {
          case 0:
            v44 = v66;
            goto LABEL_10;
          case 1:
            goto LABEL_57;
          case 2:
            OUTLINED_FUNCTION_1_39(6);
            OUTLINED_FUNCTION_30_30(v53, (uint64_t)v97);
            if ((_DWORD)v47)
              goto LABEL_31;
            OUTLINED_FUNCTION_19_35(7);
            v54 = (uint64_t *)&unk_25775255B;
LABEL_25:
            v55 = 3;
            goto LABEL_29;
          case 3:
            v63 = OUTLINED_FUNCTION_23_33(v47, (uint64_t)&v98, (uint64_t)v97);
            v47 = OUTLINED_FUNCTION_64_14(v63, 1u, 34);
            goto LABEL_53;
          case 4:
          case 17:
            goto LABEL_59;
          case 5:
          case 14:
            goto LABEL_31;
          case 6:
            OUTLINED_FUNCTION_19_35(9);
            v54 = (uint64_t *)&unk_25775255E;
            goto LABEL_25;
          case 7:
            goto LABEL_30;
          case 8:
            OUTLINED_FUNCTION_19_35(10);
            v54 = (uint64_t *)&unk_257752561;
            goto LABEL_25;
          case 9:
            OUTLINED_FUNCTION_19_35(11);
            v54 = (uint64_t *)&unk_257752564;
            goto LABEL_25;
          case 10:
            OUTLINED_FUNCTION_19_35(12);
            v54 = (uint64_t *)&unk_2577525D5;
            v55 = 7;
            goto LABEL_29;
          case 11:
            OUTLINED_FUNCTION_19_35(13);
            v54 = (uint64_t *)&unk_257752567;
            goto LABEL_25;
          case 12:
            OUTLINED_FUNCTION_19_35(14);
            v54 = (uint64_t *)&unk_2577525B6;
            goto LABEL_28;
          case 13:
            v54 = (uint64_t *)&unk_2577525BB;
LABEL_28:
            v55 = 5;
LABEL_29:
            v47 = OUTLINED_FUNCTION_79_13(v47, 1u, v55, v54);
            v48 = v43;
            if ((_DWORD)v47)
              continue;
LABEL_30:
            OUTLINED_FUNCTION_203_0(v0, 8);
            v56 = OUTLINED_FUNCTION_131_6();
            v47 = is_kor_modal(v56, v57, v58, (__int16 *)&v95);
            if (!(_DWORD)v47)
            {
              HIWORD(v94) = *(_WORD *)(v0 + 2286);
              goto LABEL_59;
            }
LABEL_31:
            OUTLINED_FUNCTION_30_30(v47, (uint64_t)v97);
            if (!(_DWORD)v59)
            {
              v47 = OUTLINED_FUNCTION_79_13(v59, 1u, 4u, (uint64_t *)&unk_257752589);
              if (!(_DWORD)v47)
              {
LABEL_58:
                OUTLINED_FUNCTION_25_32(v47, 17, (uint64_t)&v95);
                goto LABEL_59;
              }
            }
LABEL_33:
            OUTLINED_FUNCTION_1_39(19);
            OUTLINED_FUNCTION_30_30(v60, (uint64_t)v97);
            if ((_DWORD)v47)
              goto LABEL_3;
LABEL_34:
            v61 = 20;
LABEL_35:
            v51 = v61;
LABEL_36:
            OUTLINED_FUNCTION_44_24(v47, v51);
            v62 = OUTLINED_FUNCTION_131_6();
            bspush_ca_scan_boa(v62);
            v47 = OUTLINED_FUNCTION_63_14();
            if ((_DWORD)v47)
              v48 = v43;
            else
              v48 = 1;
            break;
          case 15:
            goto LABEL_33;
          case 16:
            goto LABEL_58;
          case 19:
            v47 = OUTLINED_FUNCTION_63_14();
            v48 = v43;
            if ((_DWORD)v47)
              continue;
            goto LABEL_47;
          case 20:
            OUTLINED_FUNCTION_50_21();
            v47 = OUTLINED_FUNCTION_21_34();
            v48 = v43;
            if ((_DWORD)v47)
              continue;
            goto LABEL_34;
          case 21:
            goto LABEL_36;
          case 22:
            v47 = OUTLINED_FUNCTION_63_14();
            v48 = v43;
            if ((_DWORD)v47)
              continue;
            v47 = OUTLINED_FUNCTION_21_34();
            v48 = v43;
            if ((_DWORD)v47)
              continue;
            goto LABEL_49;
          case 23:
            OUTLINED_FUNCTION_50_21();
LABEL_47:
            v47 = OUTLINED_FUNCTION_21_34();
            v48 = v43;
            if (!(_DWORD)v47)
              goto LABEL_48;
            continue;
          case 24:
LABEL_48:
            v61 = 23;
            goto LABEL_35;
          case 25:
            *(_BYTE *)(v0 + 136) = 1;
            v47 = OUTLINED_FUNCTION_42_24();
            goto LABEL_53;
          case 26:
            do
            {
LABEL_49:
              OUTLINED_FUNCTION_19_35(26);
              v47 = OUTLINED_FUNCTION_21_34();
            }
            while (!(_DWORD)v47);
            goto LABEL_13;
          default:
            goto LABEL_3;
        }
      }
    }
LABEL_59:
    *(_QWORD *)(v2 + 8) = v96;
    *(_WORD *)(v1 + 2) = HIWORD(v94);
    OUTLINED_FUNCTION_7_37();
  }
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_i_contr()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 *v3;
  __int16 *v4;
  size_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t *v58;
  _QWORD *v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE v79[184];
  _QWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD v86[2];
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[10];
  _BYTE v90[9];
  _BYTE v91[9];
  _BYTE v92[192];
  uint64_t v93;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_29_30();
  v93 = *MEMORY[0x24BDAC8D0];
  v87 = 0;
  v88 = 0;
  v86[0] = 0;
  v86[1] = 0;
  v84 = 0;
  v85 = 0;
  v83 = 0;
  v81 = 0;
  v82 = 0;
  v80[0] = 0;
  v80[1] = 0;
  OUTLINED_FUNCTION_138_4();
  bzero(v79, v5);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_75_14(v6, v7);
  v8 = OUTLINED_FUNCTION_76_14();
  if (!(_DWORD)v8
    && !OUTLINED_FUNCTION_26_32(v8, (uint64_t)v79, (uint64_t)v91, (uint64_t)v90, (uint64_t)v89, (uint64_t)v92))
  {
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v87, v4, v9, v10, v11, v12, v13);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)v86, v3, v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v84, (__int16 *)v2, v19, v20, v21, v22, v23);
    OUTLINED_FUNCTION_48_22(v24, (uint64_t)&v83, v25, v26, v27, v28, v29, v30);
    v32 = OUTLINED_FUNCTION_11_37(v31, (uint64_t)&v81);
    OUTLINED_FUNCTION_11_37(v32, (uint64_t)v80);
    v33 = OUTLINED_FUNCTION_13_36();
    if (v34)
    {
      v82 = v88;
      OUTLINED_FUNCTION_22_33((uint64_t)v33, (uint64_t)&v81);
      if (!v35 && !OUTLINED_FUNCTION_21_34())
      {
LABEL_8:
        OUTLINED_FUNCTION_144_3();
        OUTLINED_FUNCTION_25_32(v36, v37, (uint64_t)v80);
      }
    }
    v78 = 3;
    v77 = 4;
    v76 = 6;
    OUTLINED_FUNCTION_109_8();
    while (2)
    {
      HIWORD(v83) = *(_WORD *)(v0 + 2290);
      OUTLINED_FUNCTION_195_0(v38, v39, v40, v41, v42, v43, v44, v45, v66, v68, v70, v72, v74, v76, v77, v78);
      bspush_ca(v0);
      lpta_loadpn(v0, &v87);
      rpta_loadpn(v0);
      v46 = OUTLINED_FUNCTION_33_30();
      if ((_DWORD)v46 || (v46 = OUTLINED_FUNCTION_38_28(), (_DWORD)v46))
      {
LABEL_12:
        v47 = *(_QWORD *)(v0 + 104);
        if (v47)
          v38 = OUTLINED_FUNCTION_24_32(v47);
        else
          v38 = OUTLINED_FUNCTION_31_30(v46, 0);
        switch((int)v38)
        {
          case 1:
            continue;
          case 2:
            goto LABEL_8;
          case 3:
            OUTLINED_FUNCTION_189_1(v38, v39, v40, v41, v42, v43, v44, v45, v66, v68, v70, v72, v74, v76);
            lpta_loadp_setscan_l(v0, (uint64_t)v86);
            if ((_DWORD)v38)
              goto LABEL_29;
            OUTLINED_FUNCTION_133_6(v38, v48, v49, v50, v51, v52, v53, v54, v67, v69, v71, v73, v75);
            v55 = OUTLINED_FUNCTION_161_2();
            v58 = (uint64_t *)&unk_25775256A;
LABEL_27:
            v46 = test_string_s(v55, v56, v57, v58);
            if ((_DWORD)v46)
              goto LABEL_12;
LABEL_28:
            OUTLINED_FUNCTION_77_13(v0, 8);
            v38 = OUTLINED_FUNCTION_81_12(v63, v64, (__int16 *)v86);
            if (!(_DWORD)v38)
            {
              HIWORD(v83) = *(_WORD *)(v0 + 2286);
              goto LABEL_33;
            }
LABEL_29:
            OUTLINED_FUNCTION_30_30(v38, (uint64_t)v86);
            if (!(_DWORD)v65)
            {
              v38 = OUTLINED_FUNCTION_79_13(v65, 1u, 4u, (uint64_t *)&unk_257752599);
              if (!(_DWORD)v38)
              {
LABEL_31:
                OUTLINED_FUNCTION_25_32(v38, 16, (uint64_t)&v84);
                goto LABEL_33;
              }
            }
            break;
          case 4:
            lpta_rpta_loadp(v0, (uint64_t)&v87, (uint64_t)v86);
            v59 = (_QWORD *)OUTLINED_FUNCTION_134_5();
            v46 = setd_lookup(v59, v60, 35);
            if (!(_DWORD)v46)
              goto LABEL_33;
            goto LABEL_12;
          case 5:
          case 17:
            goto LABEL_33;
          case 6:
            goto LABEL_29;
          case 7:
            OUTLINED_FUNCTION_127_7(v38, v39, v40, v41, v42, v43, v44, v45, v66, v68, v70, v72);
            v55 = OUTLINED_FUNCTION_160_2();
            v58 = (uint64_t *)&unk_25775258D;
            goto LABEL_27;
          case 8:
            goto LABEL_28;
          case 9:
            OUTLINED_FUNCTION_198_0(v38, v39, v40, v41, v42, v43, v44, v45, v66, v68, v70);
            v55 = OUTLINED_FUNCTION_161_2();
            v58 = (uint64_t *)&unk_25775256D;
            goto LABEL_27;
          case 10:
            OUTLINED_FUNCTION_136_4(v38, v39, v40, v41, v42, v43, v44, v45, v66, v68);
            v55 = OUTLINED_FUNCTION_161_2();
            v58 = (uint64_t *)&unk_257752570;
            goto LABEL_27;
          case 11:
            v61 = OUTLINED_FUNCTION_129_7();
            bspush_ca_scan(v61, v62);
            v55 = OUTLINED_FUNCTION_134_5();
            v57 = 2;
            v58 = (uint64_t *)&unk_257752541;
            goto LABEL_27;
          case 12:
            OUTLINED_FUNCTION_193_0();
            v55 = OUTLINED_FUNCTION_160_2();
            v58 = (uint64_t *)&unk_257752591;
            goto LABEL_27;
          case 13:
            OUTLINED_FUNCTION_73_14();
            v55 = OUTLINED_FUNCTION_134_5();
            v57 = 5;
            v58 = (uint64_t *)&unk_2577525C0;
            goto LABEL_27;
          case 14:
            v55 = OUTLINED_FUNCTION_160_2();
            v58 = (uint64_t *)&unk_257752595;
            goto LABEL_27;
          case 16:
            goto LABEL_31;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_33:
        *(_QWORD *)(v2 + 8) = v85;
        *(_WORD *)(v1 + 2) = HIWORD(v83);
      }
      break;
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_U_infl()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174[2];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_59_17();
  v182 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v0, v1, v2, v3, v4, v5, v6, v7, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100, v105,
    v110,
    v115,
    v120,
    v125,
    v130,
    v135,
    v140,
    v145,
    v150,
    v155,
    v160,
    v165,
    v170,
    v171,
    v172,
    v173);
  OUTLINED_FUNCTION_46_23(v8, v9, v10, v11, v12, v13, v14, v15, v56, v61, v66, v71, v76, v81, v86, v91, v96, v101, v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v171,
    v172,
    v173,
    0,
    0,
    0,
    0,
    v177,
    v178,
    v179,
    v180,
    v181);
  v16 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v16)
  {
    v24 = OUTLINED_FUNCTION_15_36(v16, v17, v18, v19, v20, v21, v22, v23, v57, v62, v67, v72, v77, v82, v87, v92, v97, v102, v107,
            v112,
            v117,
            v122,
            v127,
            v132,
            v137,
            v142,
            v147,
            v152,
            v157,
            v162,
            v167,
            v170,
            v171,
            v172,
            v173,
            v174[0],
            v174[1],
            v175,
            v176,
            v177,
            SBYTE4(v177),
            v178,
            SWORD2(v178),
            SBYTE6(v178),
            v179,
            SWORD2(v179),
            SBYTE6(v179),
            SHIBYTE(v179),
            v180,
            v181);
    if (!(_DWORD)v24)
    {
      OUTLINED_FUNCTION_28_30(v24, (uint64_t)&v175, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_41_24(v31, (uint64_t)v174, v32, v33, v34, v35, v36, v37);
      v39 = OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v172);
      OUTLINED_FUNCTION_11_37(v39, (uint64_t)&v170);
      OUTLINED_FUNCTION_13_36();
      if (v40
        && (OUTLINED_FUNCTION_20_35(v176, v58, v63, v68, v73, v78, v83, v88, v93, v98, v103, v108, v113, v118, v123, v128, v133, v138, v143,
              v148,
              v153,
              v158,
              v163,
              v168,
              v170,
              v171,
              v172,
              v173),
            !v41))
      {
        OUTLINED_FUNCTION_21_34();
        OUTLINED_FUNCTION_66_14();
        if (!(_DWORD)v42)
          OUTLINED_FUNCTION_18_35(v42, v43, v44, v45, v46, v47, v48, v49, v59, v64, v69, v74, v79, v84, v89, v94, v99, v104, v109,
            v114,
            v119,
            v124,
            v129,
            v134,
            v139,
            v144,
            v149,
            v154,
            v159,
            v164,
            v169,
            v170);
      }
      else
      {
        OUTLINED_FUNCTION_99_8();
      }
      OUTLINED_FUNCTION_39_26();
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_71_14();
      if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
      {
        OUTLINED_FUNCTION_72_14();
        OUTLINED_FUNCTION_89_9();
        OUTLINED_FUNCTION_12_37();
        OUTLINED_FUNCTION_54_18();
        OUTLINED_FUNCTION_78_13();
        if (v52)
        {
          OUTLINED_FUNCTION_49_21(v50, v51);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v50, v51);
          OUTLINED_FUNCTION_67_14();
        }
        OUTLINED_FUNCTION_96_8();
        if (!(!v40 & v54))
          __asm { BR              X9 }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void sub_24866D93C()
{
  JUMPOUT(0x24866D8E0);
}

void sub_24866D944()
{
  OUTLINED_FUNCTION_7_37();
  JUMPOUT(0x24866D848);
}

void sub_24866D950()
{
  OUTLINED_FUNCTION_50_21();
  JUMPOUT(0x24866D840);
}

void is_kor_verb_rU_infl()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174[2];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_59_17();
  v182 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v0, v1, v2, v3, v4, v5, v6, v7, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100, v105,
    v110,
    v115,
    v120,
    v125,
    v130,
    v135,
    v140,
    v145,
    v150,
    v155,
    v160,
    v165,
    v170,
    v171,
    v172,
    v173);
  OUTLINED_FUNCTION_46_23(v8, v9, v10, v11, v12, v13, v14, v15, v56, v61, v66, v71, v76, v81, v86, v91, v96, v101, v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v171,
    v172,
    v173,
    0,
    0,
    0,
    0,
    v177,
    v178,
    v179,
    v180,
    v181);
  v16 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v16)
  {
    v24 = OUTLINED_FUNCTION_15_36(v16, v17, v18, v19, v20, v21, v22, v23, v57, v62, v67, v72, v77, v82, v87, v92, v97, v102, v107,
            v112,
            v117,
            v122,
            v127,
            v132,
            v137,
            v142,
            v147,
            v152,
            v157,
            v162,
            v167,
            v170,
            v171,
            v172,
            v173,
            v174[0],
            v174[1],
            v175,
            v176,
            v177,
            SBYTE4(v177),
            v178,
            SWORD2(v178),
            SBYTE6(v178),
            v179,
            SWORD2(v179),
            SBYTE6(v179),
            SHIBYTE(v179),
            v180,
            v181);
    if (!(_DWORD)v24)
    {
      OUTLINED_FUNCTION_28_30(v24, (uint64_t)&v175, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_41_24(v31, (uint64_t)v174, v32, v33, v34, v35, v36, v37);
      v39 = OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v172);
      OUTLINED_FUNCTION_11_37(v39, (uint64_t)&v170);
      OUTLINED_FUNCTION_13_36();
      if (v40
        && (OUTLINED_FUNCTION_20_35(v176, v58, v63, v68, v73, v78, v83, v88, v93, v98, v103, v108, v113, v118, v123, v128, v133, v138, v143,
              v148,
              v153,
              v158,
              v163,
              v168,
              v170,
              v171,
              v172,
              v173),
            !v41))
      {
        OUTLINED_FUNCTION_21_34();
        OUTLINED_FUNCTION_66_14();
        if (!(_DWORD)v42)
          OUTLINED_FUNCTION_18_35(v42, v43, v44, v45, v46, v47, v48, v49, v59, v64, v69, v74, v79, v84, v89, v94, v99, v104, v109,
            v114,
            v119,
            v124,
            v129,
            v134,
            v139,
            v144,
            v149,
            v154,
            v159,
            v164,
            v169,
            v170);
      }
      else
      {
        OUTLINED_FUNCTION_99_8();
      }
      OUTLINED_FUNCTION_39_26();
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_71_14();
      if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
      {
        OUTLINED_FUNCTION_72_14();
        OUTLINED_FUNCTION_89_9();
        OUTLINED_FUNCTION_12_37();
        OUTLINED_FUNCTION_54_18();
        OUTLINED_FUNCTION_78_13();
        if (v52)
        {
          OUTLINED_FUNCTION_49_21(v50, v51);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v50, v51);
          OUTLINED_FUNCTION_67_14();
        }
        OUTLINED_FUNCTION_96_8();
        if (!(!v40 & v54))
          __asm { BR              X9 }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void sub_24866DAA0()
{
  JUMPOUT(0x24866DA44);
}

void sub_24866DAA8()
{
  OUTLINED_FUNCTION_7_37();
  JUMPOUT(0x24866D9ACLL);
}

void sub_24866DAB4()
{
  OUTLINED_FUNCTION_50_21();
  JUMPOUT(0x24866D9A4);
}

void is_kor_verb_rE_infl()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174[2];
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  uint64_t v182;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_59_17();
  v182 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v0, v1, v2, v3, v4, v5, v6, v7, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100, v105,
    v110,
    v115,
    v120,
    v125,
    v130,
    v135,
    v140,
    v145,
    v150,
    v155,
    v160,
    v165,
    v170,
    v171,
    v172,
    v173);
  OUTLINED_FUNCTION_46_23(v8, v9, v10, v11, v12, v13, v14, v15, v56, v61, v66, v71, v76, v81, v86, v91, v96, v101, v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v171,
    v172,
    v173,
    0,
    0,
    0,
    0,
    v177,
    v178,
    v179,
    v180,
    v181);
  v16 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v16)
  {
    v24 = OUTLINED_FUNCTION_15_36(v16, v17, v18, v19, v20, v21, v22, v23, v57, v62, v67, v72, v77, v82, v87, v92, v97, v102, v107,
            v112,
            v117,
            v122,
            v127,
            v132,
            v137,
            v142,
            v147,
            v152,
            v157,
            v162,
            v167,
            v170,
            v171,
            v172,
            v173,
            v174[0],
            v174[1],
            v175,
            v176,
            v177,
            SBYTE4(v177),
            v178,
            SWORD2(v178),
            SBYTE6(v178),
            v179,
            SWORD2(v179),
            SBYTE6(v179),
            SHIBYTE(v179),
            v180,
            v181);
    if (!(_DWORD)v24)
    {
      OUTLINED_FUNCTION_28_30(v24, (uint64_t)&v175, v25, v26, v27, v28, v29, v30);
      OUTLINED_FUNCTION_41_24(v31, (uint64_t)v174, v32, v33, v34, v35, v36, v37);
      v39 = OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v172);
      OUTLINED_FUNCTION_11_37(v39, (uint64_t)&v170);
      OUTLINED_FUNCTION_13_36();
      if (v40
        && (OUTLINED_FUNCTION_20_35(v176, v58, v63, v68, v73, v78, v83, v88, v93, v98, v103, v108, v113, v118, v123, v128, v133, v138, v143,
              v148,
              v153,
              v158,
              v163,
              v168,
              v170,
              v171,
              v172,
              v173),
            !v41))
      {
        OUTLINED_FUNCTION_21_34();
        OUTLINED_FUNCTION_66_14();
        if (!(_DWORD)v42)
          OUTLINED_FUNCTION_18_35(v42, v43, v44, v45, v46, v47, v48, v49, v59, v64, v69, v74, v79, v84, v89, v94, v99, v104, v109,
            v114,
            v119,
            v124,
            v129,
            v134,
            v139,
            v144,
            v149,
            v154,
            v159,
            v164,
            v169,
            v170);
      }
      else
      {
        OUTLINED_FUNCTION_99_8();
      }
      OUTLINED_FUNCTION_39_26();
      OUTLINED_FUNCTION_88_9();
      OUTLINED_FUNCTION_71_14();
      if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
      {
        OUTLINED_FUNCTION_72_14();
        OUTLINED_FUNCTION_89_9();
        OUTLINED_FUNCTION_12_37();
        OUTLINED_FUNCTION_54_18();
        OUTLINED_FUNCTION_78_13();
        if (v52)
        {
          OUTLINED_FUNCTION_49_21(v50, v51);
        }
        else
        {
          OUTLINED_FUNCTION_31_30(v50, v51);
          OUTLINED_FUNCTION_67_14();
        }
        OUTLINED_FUNCTION_96_8();
        if (!(!v40 & v54))
          __asm { BR              X9 }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void sub_24866DC04()
{
  JUMPOUT(0x24866DBA8);
}

void sub_24866DC0C()
{
  OUTLINED_FUNCTION_7_37();
  JUMPOUT(0x24866DB10);
}

void sub_24866DC18()
{
  OUTLINED_FUNCTION_50_21();
  JUMPOUT(0x24866DB08);
}

void is_kor_verb_a_contr()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  unsigned int v60;
  unsigned int v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE v101[10];
  _BYTE v102[9];
  _BYTE v103[9];
  _BYTE v104[192];
  uint64_t v105;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_29_30();
  v105 = *MEMORY[0x24BDAC8D0];
  v99 = 0;
  v100 = 0;
  v97 = 0;
  v98 = 0;
  v95 = 0;
  v96 = 0;
  HIDWORD(v94) = 0;
  OUTLINED_FUNCTION_3_38(v4, v5, v6, v7, v8, v9, v10, v11, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93);
  OUTLINED_FUNCTION_75_14(v12, 0xC0uLL);
  v13 = OUTLINED_FUNCTION_76_14();
  if (!(_DWORD)v13
    && !OUTLINED_FUNCTION_26_32(v13, (uint64_t)&v67, (uint64_t)v103, (uint64_t)v102, (uint64_t)v101, (uint64_t)v104))
  {
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v99, v3, v14, v15, v16, v17, v18);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v97, v2, v19, v20, v21, v22, v23);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v95, v1, v24, v25, v26, v27, v28);
    OUTLINED_FUNCTION_48_22(v29, (uint64_t)&v94 + 4, v30, v31, v32, v33, v34, v35);
    v37 = OUTLINED_FUNCTION_11_37(v36, (uint64_t)&v92);
    OUTLINED_FUNCTION_11_37(v37, (uint64_t)&v90);
    OUTLINED_FUNCTION_13_36();
    if (v38)
    {
      OUTLINED_FUNCTION_20_35(v100, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93);
      if (!v39)
      {
        v40 = OUTLINED_FUNCTION_21_34();
        if (!(_DWORD)v40)
LABEL_8:
          OUTLINED_FUNCTION_18_35(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
            v78,
            v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90);
      }
    }
    OUTLINED_FUNCTION_97_8();
    while (2)
    {
      OUTLINED_FUNCTION_125_7(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
        v78,
        v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99);
      OUTLINED_FUNCTION_176_2();
      v40 = OUTLINED_FUNCTION_33_30();
      if ((_DWORD)v40 || (v40 = OUTLINED_FUNCTION_38_28(), (_DWORD)v40))
      {
LABEL_12:
        OUTLINED_FUNCTION_151_3(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99);
        v48 = (_QWORD *)OUTLINED_FUNCTION_118_8();
        v40 = setd_lookup(v48, v49, 30);
        if ((_DWORD)v40)
        {
LABEL_13:
          OUTLINED_FUNCTION_105_8();
          OUTLINED_FUNCTION_102_8(v50, v51, v52, v53, v54, v55, v56, v57, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
            v78,
            v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90,
            v91,
            v92,
            v93,
            v94,
            v95,
            v96,
            v97);
          if (v58)
            break;
          OUTLINED_FUNCTION_73_14();
          v59 = OUTLINED_FUNCTION_82_10();
          v62 = (uint64_t *)&unk_25775252A;
LABEL_15:
          v63 = test_string_s(v59, v60, v61, v62);
          if ((_DWORD)v63)
          {
            v64 = *(_QWORD *)(v0 + 104);
            if (v64)
              v40 = OUTLINED_FUNCTION_24_32(v64);
            else
              v40 = OUTLINED_FUNCTION_31_30(v63, 0);
            switch((int)v40)
            {
              case 1:
                continue;
              case 2:
                goto LABEL_8;
              case 3:
                goto LABEL_12;
              case 4:
              case 10:
                goto LABEL_24;
              case 5:
                goto LABEL_13;
              case 7:
                OUTLINED_FUNCTION_193_0();
                v59 = OUTLINED_FUNCTION_82_10();
                v62 = (uint64_t *)&unk_25775251E;
                goto LABEL_15;
              case 8:
                goto LABEL_22;
              case 9:
                v59 = OUTLINED_FUNCTION_159_3();
                v62 = (uint64_t *)&unk_257752552;
                goto LABEL_15;
              default:
                goto LABEL_3;
            }
            break;
          }
LABEL_22:
          OUTLINED_FUNCTION_77_13(v0, 8);
          v40 = OUTLINED_FUNCTION_81_12(v65, v66, (__int16 *)&v97);
          if (!(_DWORD)v40)
            HIWORD(v94) = *(_WORD *)(v0 + 2286);
        }
LABEL_24:
        OUTLINED_FUNCTION_122_7(v40, v41, v42, v43, v44, v45, v46, v47, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83,
          v84,
          v85,
          v86,
          v87,
          v88,
          v89,
          v90,
          v91,
          v92,
          v93,
          v94,
          SWORD2(v94),
          SHIWORD(v94),
          v95,
          v96);
      }
      break;
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_e_contr()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  unsigned __int8 v44;
  int v45;
  uint64_t v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  unsigned int v63;
  unsigned int v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101[2];
  uint64_t v102;
  uint64_t v103;
  _BYTE v104[10];
  _BYTE v105[9];
  _BYTE v106[9];
  _BYTE v107[208];

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_29_30();
  OUTLINED_FUNCTION_69_14(v5, v6, v7, v8, v9, v10, v11, v12, v67, v69, v71, v72, v73, v74, v75, v76, v77, v78, v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    v95,
    v96,
    v97,
    v98,
    SHIDWORD(v98),
    v99,
    v100,
    v101[0],
    v101[1],
    v102,
    v103);
  OUTLINED_FUNCTION_75_14(v13, 0xC0uLL);
  v14 = OUTLINED_FUNCTION_76_14();
  if (!(_DWORD)v14
    && !OUTLINED_FUNCTION_26_32(v14, (uint64_t)&v71, (uint64_t)v106, (uint64_t)v105, (uint64_t)v104, (uint64_t)v107))
  {
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v102, v4, v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)v101, v3, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v99, (__int16 *)v2, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_48_22(v30, (uint64_t)&v98 + 4, v31, v32, v33, v34, v35, v36);
    v38 = OUTLINED_FUNCTION_11_37(v37, (uint64_t)&v96);
    OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v94);
    v39 = OUTLINED_FUNCTION_13_36();
    if (v40)
    {
      v97 = v103;
      OUTLINED_FUNCTION_22_33((uint64_t)v39, (uint64_t)&v96);
      if (!v41)
      {
        v42 = OUTLINED_FUNCTION_21_34();
        if (!(_DWORD)v42)
LABEL_9:
          OUTLINED_FUNCTION_25_32(v42, 2, (uint64_t)&v94);
      }
    }
    OUTLINED_FUNCTION_97_8();
    v70 = 8;
    v68 = 10;
    while (2)
    {
      HIWORD(v98) = *(_WORD *)(v0 + 2290);
      lpta_loadpn(v0, &v102);
      rpta_loadpn(v0);
      if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
      {
LABEL_13:
        lpta_rpta_loadp(v0, (uint64_t)&v102, (uint64_t)v101);
        v43 = (_QWORD *)OUTLINED_FUNCTION_118_8();
        if (!setd_lookup(v43, v44, 32))
        {
LABEL_27:
          *(_QWORD *)(v2 + 8) = v100;
          *(_WORD *)(v1 + 2) = HIWORD(v98);
          OUTLINED_FUNCTION_7_37();
          goto LABEL_4;
        }
LABEL_14:
        OUTLINED_FUNCTION_105_8();
        OUTLINED_FUNCTION_113_8(v0, (uint64_t)v101);
        if (!v45)
        {
          OUTLINED_FUNCTION_73_14();
          v46 = OUTLINED_FUNCTION_82_10();
          v49 = (uint64_t *)&unk_25775251E;
LABEL_16:
          v50 = test_string_s(v46, v47, v48, v49);
          if ((_DWORD)v50)
            goto LABEL_20;
LABEL_17:
          savescptr(v0, v70, (uint64_t)&v99);
          v51 = OUTLINED_FUNCTION_117_8();
          starttest_e(v51, v52);
          OUTLINED_FUNCTION_102_8(v53, v54, v55, v56, v57, v58, v59, v60, v68, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85,
            v86,
            v87,
            v88,
            v89,
            v90,
            v91,
            v92,
            v93,
            v94,
            v95,
            v96,
            v97,
            v98,
            v99);
          if (!v61)
          {
            bspush_ca_scan(v0, v68);
            v62 = OUTLINED_FUNCTION_82_10();
            v65 = (uint64_t *)&unk_257752521;
LABEL_19:
            v50 = test_string_s(v62, v63, v64, v65);
            if ((_DWORD)v50)
            {
LABEL_20:
              v66 = *(_QWORD *)(v0 + 104);
              if (v66)
                v42 = OUTLINED_FUNCTION_24_32(v66);
              else
                v42 = OUTLINED_FUNCTION_31_30(v50, 0);
              switch((int)v42)
              {
                case 1:
                  continue;
                case 2:
                  goto LABEL_9;
                case 3:
                  goto LABEL_13;
                case 4:
                case 9:
                  goto LABEL_27;
                case 5:
                  goto LABEL_14;
                case 7:
                  v46 = OUTLINED_FUNCTION_82_10();
                  v49 = (uint64_t *)&unk_25775252B;
                  goto LABEL_16;
                case 8:
                  goto LABEL_17;
                case 10:
                  v62 = OUTLINED_FUNCTION_82_10();
                  v65 = (uint64_t *)&unk_257752522;
                  goto LABEL_19;
                case 11:
                  break;
                default:
                  goto LABEL_3;
              }
            }
            HIWORD(v98) = *(_WORD *)(v0 + 2286);
          }
          goto LABEL_27;
        }
      }
      break;
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
LABEL_4:
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_wa_contr()
{
  uint64_t v0;
  uint64_t v1;
  __int16 *v2;
  size_t v3;
  uint64_t v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  unsigned int v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  __int16 *v114;
  _BYTE v115[184];
  _QWORD v116[2];
  uint64_t v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD v122[2];
  uint64_t v123;
  uint64_t v124;
  _BYTE v125[10];
  _BYTE v126[9];
  _BYTE v127[9];
  _BYTE v128[192];
  uint64_t v129;

  OUTLINED_FUNCTION_9_37();
  v113 = v1;
  v114 = v2;
  OUTLINED_FUNCTION_59_17();
  v129 = *MEMORY[0x24BDAC8D0];
  v123 = 0;
  v124 = 0;
  v122[0] = 0;
  v122[1] = 0;
  v120 = 0;
  v121 = 0;
  v119 = 0;
  v117 = 0;
  v118 = 0;
  v116[0] = 0;
  v116[1] = 0;
  OUTLINED_FUNCTION_138_4();
  bzero(v115, v3);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_83_10(v4, v5);
  v6 = OUTLINED_FUNCTION_84_10();
  if (!(_DWORD)v6)
  {
    v7 = OUTLINED_FUNCTION_26_32(v6, (uint64_t)v115, (uint64_t)v127, (uint64_t)v126, (uint64_t)v125, (uint64_t)v128);
    if (!(_DWORD)v7)
    {
      OUTLINED_FUNCTION_28_30(v7, (uint64_t)&v123, v8, v9, v10, v11, v12, v13);
      OUTLINED_FUNCTION_41_24(v14, (uint64_t)v122, v15, v16, v17, v18, v19, v20);
      get_parm(v0, (uint64_t)&v120, (__int16 *)v113, (uint64_t)v128, v21, v22, v23, v24);
      get_parm(v0, (uint64_t)&v119, v114, 4294967292, v25, v26, v27, v28);
      v30 = OUTLINED_FUNCTION_11_37(v29, (uint64_t)&v117);
      OUTLINED_FUNCTION_11_37(v30, (uint64_t)v116);
      v31 = (uint64_t)OUTLINED_FUNCTION_13_36();
      if (v39)
      {
        v118 = v124;
        OUTLINED_FUNCTION_22_33(v31, (uint64_t)&v117);
        if (!(_DWORD)v31)
        {
          v31 = OUTLINED_FUNCTION_21_34();
          if (!(_DWORD)v31)
          {
LABEL_9:
            OUTLINED_FUNCTION_144_3();
            OUTLINED_FUNCTION_25_32(v40, v41, (uint64_t)v116);
          }
        }
      }
      v112 = 3;
      v111 = 4;
      v110 = 6;
      v109 = 7;
      v107 = 8;
      v105 = 11;
      v103 = 12;
      v101 = 13;
      v99 = 9;
      v97 = 19;
      v95 = 15;
      v93 = 23;
      while (2)
      {
        HIWORD(v119) = *(_WORD *)(v0 + 2290);
        OUTLINED_FUNCTION_180_2(v31, v32, v33, v34, v35, v36, v37, v38, v93, v95, v97, v99, v101, v103, v105, v107, v109, v110, v111,
          v112);
        OUTLINED_FUNCTION_179_2();
        v42 = OUTLINED_FUNCTION_186_1();
        lpta_loadpn(v42, v43);
        v44 = OUTLINED_FUNCTION_131_6();
        rpta_loadpn(v44);
        v45 = OUTLINED_FUNCTION_33_30();
        if (!(_DWORD)v45)
        {
          v45 = OUTLINED_FUNCTION_38_28();
          if (!(_DWORD)v45)
          {
LABEL_13:
            starttest(v0, v110);
            v46 = OUTLINED_FUNCTION_186_1();
            lpta_loadp_setscan_r(v46, v47);
            if ((_DWORD)v48)
            {
LABEL_42:
              *(_QWORD *)(v113 + 8) = v121;
              v114[1] = HIWORD(v119);
              OUTLINED_FUNCTION_7_37();
              goto LABEL_4;
            }
            OUTLINED_FUNCTION_199_0(v48, v49, v50, v51, v52, v53, v54, v55, v93, v95, v97, v99, v101, v103, v105, v107, v109);
            OUTLINED_FUNCTION_196_0(v56, v57, v58, v59, v60, v61, v62, v63, v94, v96, v98, v100, v102, v104, v106, v108);
            v64 = OUTLINED_FUNCTION_55_17();
            v67 = (uint64_t *)&unk_25775252B;
LABEL_15:
            v45 = test_string_s(v64, v65, v66, v67);
            if ((_DWORD)v45)
              goto LABEL_16;
LABEL_40:
            *(_BYTE *)(v0 + 136) = 1;
            v45 = OUTLINED_FUNCTION_42_24();
            if (!(_DWORD)v45)
            {
LABEL_41:
              HIWORD(v119) = *(_WORD *)(v0 + 2286);
              goto LABEL_42;
            }
          }
        }
LABEL_16:
        v68 = *(_QWORD *)(v0 + 104);
        if (v68)
          v31 = OUTLINED_FUNCTION_24_32(v68);
        else
          v31 = OUTLINED_FUNCTION_31_30(v45, 0);
        switch((int)v31)
        {
          case 1:
            continue;
          case 2:
            goto LABEL_9;
          case 3:
            starttest(v0, v105);
            bspush_ca(v0);
            OUTLINED_FUNCTION_106_8();
            if ((_DWORD)v45)
              goto LABEL_16;
            OUTLINED_FUNCTION_133_6(v45, v73, v74, v75, v76, v77, v78, v79, v93, v95, v97, v99, v101);
            v80 = OUTLINED_FUNCTION_55_17();
            v83 = (uint64_t *)&unk_25775252B;
            goto LABEL_29;
          case 4:
            v84 = OUTLINED_FUNCTION_186_1();
            lpta_rpta_loadp(v84, v85, (uint64_t)v122);
            v45 = setd_lookup((_QWORD *)v0, 1u, 31);
            if (!(_DWORD)v45)
              goto LABEL_13;
            goto LABEL_16;
          case 5:
            goto LABEL_13;
          case 6:
          case 10:
            goto LABEL_42;
          case 7:
            goto LABEL_40;
          case 8:
            OUTLINED_FUNCTION_127_7(v31, v32, v33, v34, v35, v36, v37, v38, v93, v95, v97, v99);
            v64 = OUTLINED_FUNCTION_55_17();
            v67 = (uint64_t *)&unk_25775252C;
            goto LABEL_15;
          case 9:
            v64 = v0;
            v65 = 1;
            v66 = 3;
            v67 = (uint64_t *)&unk_257752555;
            goto LABEL_15;
          case 12:
            bspush_ca(v0);
            OUTLINED_FUNCTION_106_8();
            if ((_DWORD)v45)
              goto LABEL_16;
            goto LABEL_26;
          case 13:
            OUTLINED_FUNCTION_136_4(v31, v32, v33, v34, v35, v36, v37, v38, v93, v95);
            v80 = OUTLINED_FUNCTION_55_17();
            v83 = (uint64_t *)&unk_25775252C;
            goto LABEL_29;
          case 14:
            goto LABEL_30;
          case 15:
            v80 = v0;
            v81 = 1;
            v82 = 3;
            v83 = (uint64_t *)&unk_257752558;
LABEL_29:
            v45 = test_string_s(v80, v81, v82, v83);
            if ((_DWORD)v45)
              goto LABEL_16;
LABEL_30:
            v88 = OUTLINED_FUNCTION_129_7();
            OUTLINED_FUNCTION_167_2(v88, v89);
            v86 = OUTLINED_FUNCTION_114_8();
LABEL_31:
            bspush_ca_scan(v86, v87);
            v69 = OUTLINED_FUNCTION_55_17();
            v72 = (uint64_t *)&unk_257752521;
LABEL_32:
            v45 = test_string_s(v69, v70, v71, v72);
            if (!(_DWORD)v45)
              goto LABEL_41;
            goto LABEL_16;
          case 16:
          case 21:
            v69 = OUTLINED_FUNCTION_55_17();
            v72 = (uint64_t *)&unk_257752522;
            goto LABEL_32;
          case 17:
          case 18:
          case 22:
            goto LABEL_41;
          case 19:
            OUTLINED_FUNCTION_106_8();
            if ((_DWORD)v45)
              goto LABEL_16;
            v90 = OUTLINED_FUNCTION_55_17();
            v45 = test_string_s(v90, v91, v92, (uint64_t *)&unk_25775252D);
            if ((_DWORD)v45)
              goto LABEL_16;
            goto LABEL_36;
          case 20:
LABEL_26:
            OUTLINED_FUNCTION_167_2(v0, 20);
            v86 = OUTLINED_FUNCTION_128_7();
            goto LABEL_31;
          case 23:
LABEL_36:
            OUTLINED_FUNCTION_167_2(v0, v93);
            v45 = is_kor_modal(v0, (uint64_t)&v120, (__int16 *)v122, (__int16 *)&v120);
            if (!(_DWORD)v45)
              goto LABEL_41;
            goto LABEL_16;
          default:
            goto LABEL_3;
        }
      }
    }
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
LABEL_4:
  OUTLINED_FUNCTION_0_41();
}

void is_kor_verb_O_contr()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 *v3;
  __int16 *v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  _BOOL8 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unsigned __int8 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD v92[2];
  uint64_t v93;
  uint64_t v94;
  _BYTE v95[10];
  _BYTE v96[9];
  _BYTE v97[9];
  _BYTE v98[192];
  uint64_t v99;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_29_30();
  v99 = *MEMORY[0x24BDAC8D0];
  v93 = 0;
  v94 = 0;
  v92[0] = 0;
  v92[1] = 0;
  v90 = 0;
  v91 = 0;
  v89 = 0;
  OUTLINED_FUNCTION_3_38(v5, v6, v7, v8, v9, v10, v11, v12, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88);
  OUTLINED_FUNCTION_75_14(v13, 0xC0uLL);
  v14 = OUTLINED_FUNCTION_76_14();
  if ((_DWORD)v14
    || OUTLINED_FUNCTION_26_32(v14, (uint64_t)&v62, (uint64_t)v97, (uint64_t)v96, (uint64_t)v95, (uint64_t)v98))
  {
LABEL_3:
    OUTLINED_FUNCTION_7_37();
  }
  else
  {
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v93, v4, v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)v92, v3, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_6_37(v0, (uint64_t)&v90, (__int16 *)v2, v25, v26, v27, v28, v29);
    OUTLINED_FUNCTION_48_22(v30, (uint64_t)&v89, v31, v32, v33, v34, v35, v36);
    v38 = OUTLINED_FUNCTION_11_37(v37, (uint64_t)&v87);
    OUTLINED_FUNCTION_11_37(v38, (uint64_t)&v85);
    OUTLINED_FUNCTION_13_36();
    if (v39)
    {
      OUTLINED_FUNCTION_20_35(v94, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79,
        v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88);
      if (!v40)
      {
        v41 = OUTLINED_FUNCTION_21_34();
        if (!v41)
LABEL_9:
          OUTLINED_FUNCTION_18_35(v41, v42, v43, v44, v45, v46, v47, v48, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72,
            v73,
            v74,
            v75,
            v76,
            v77,
            v78,
            v79,
            v80,
            v81,
            v82,
            v83,
            v84,
            v85);
      }
    }
    while (2)
    {
      HIWORD(v89) = *(_WORD *)(v0 + 2290);
      OUTLINED_FUNCTION_72_14();
      OUTLINED_FUNCTION_183_1();
      OUTLINED_FUNCTION_181_1();
      v49 = OUTLINED_FUNCTION_162_2();
      rpta_loadpn(v49);
      v50 = OUTLINED_FUNCTION_33_30();
      if (v50 || (v50 = OUTLINED_FUNCTION_38_28()))
      {
LABEL_12:
        v51 = *(_QWORD *)(v0 + 104);
        if (v51)
          OUTLINED_FUNCTION_24_32(v51);
        else
          OUTLINED_FUNCTION_31_30(v50, 0);
        OUTLINED_FUNCTION_110_8();
        switch(v52)
        {
          case 0:
            continue;
          case 1:
            goto LABEL_9;
          case 2:
            OUTLINED_FUNCTION_30_30(v41, (uint64_t)v92);
            if ((_DWORD)v57 || OUTLINED_FUNCTION_17_36(v57, v58, v59, (uint64_t *)&unk_25775252B))
              goto LABEL_22;
            break;
          case 3:
            v53 = OUTLINED_FUNCTION_116_8();
            lpta_rpta_loadp(v53, v54, (uint64_t)v92);
            v55 = (_QWORD *)OUTLINED_FUNCTION_134_5();
            v50 = setd_lookup(v55, v56, 33);
            if (!v50)
              goto LABEL_22;
            goto LABEL_12;
          case 4:
          case 5:
            goto LABEL_22;
          case 6:
            break;
          default:
            goto LABEL_3;
        }
        OUTLINED_FUNCTION_77_13(v0, 7);
        if (!OUTLINED_FUNCTION_81_12(v60, v61, (__int16 *)v92))
          HIWORD(v89) = *(_WORD *)(v0 + 2286);
      }
      break;
    }
LABEL_22:
    *(_QWORD *)(v2 + 8) = v91;
    *(_WORD *)(v1 + 2) = HIWORD(v89);
    OUTLINED_FUNCTION_7_37();
  }
  OUTLINED_FUNCTION_0_41();
}

uint64_t is_kor_ending_a()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32[23];
  uint64_t v33[2];
  uint64_t v34[2];
  _BYTE v35[10];
  _BYTE v36[9];
  _BYTE v37[9];
  _BYTE v38[192];
  uint64_t v39;

  OUTLINED_FUNCTION_59_17();
  v39 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_38(v3, v4, v5, v6, v7, v8, v9, v10, v32[0], v32[1], v32[2], v32[3], v32[4], v32[5], v32[6], v32[7], v32[8], v32[9], v32[10],
    v32[11],
    v32[12],
    v32[13],
    v32[14],
    v32[15],
    v32[16],
    v32[17],
    v32[18],
    v32[19],
    v32[20],
    v32[21],
    v32[22],
    v33[0],
    v33[1],
    v34[0],
    v34[1]);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_83_10(v11, v12);
  v13 = OUTLINED_FUNCTION_84_10();
  if ((_DWORD)v13
    || OUTLINED_FUNCTION_26_32(v13, (uint64_t)v32, (uint64_t)v37, (uint64_t)v36, (uint64_t)v35, (uint64_t)v38))
  {
    goto LABEL_6;
  }
  OUTLINED_FUNCTION_61_16(v0, (uint64_t)v34, v2, v14, v15, v16, v17, v18);
  v19 = OUTLINED_FUNCTION_128_7();
  OUTLINED_FUNCTION_61_16(v19, v20, v1, v21, v22, v23, v24, v25);
  fence_38(v0);
  v26 = OUTLINED_FUNCTION_117_8();
  lpta_loadpn(v26, v27);
  OUTLINED_FUNCTION_71_14();
  v28 = OUTLINED_FUNCTION_33_30();
  if (!v28)
  {
    v28 = OUTLINED_FUNCTION_38_28();
    if (!v28)
      goto LABEL_8;
  }
  v29 = OUTLINED_FUNCTION_23_33(v28, (uint64_t)v34, (uint64_t)v33);
  if (OUTLINED_FUNCTION_64_14(v29, 1u, 39))
LABEL_6:
    v30 = 94;
  else
LABEL_8:
    v30 = 0;
  OUTLINED_FUNCTION_7_37();
  return v30;
}

void mark_kor_ending_a()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int16 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BOOL8 v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  char v110;
  int v111;
  __int16 v112;
  char v113;
  int v114;
  __int16 v115;
  char v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;

  OUTLINED_FUNCTION_29_30();
  v120 = *MEMORY[0x24BDAC8D0];
  v107 = 0;
  v108 = 0;
  v105 = 0;
  v106 = 0;
  OUTLINED_FUNCTION_3_38(v3, v4, v5, v6, v7, v8, v9, v10, v55, v57, v59, v61, v63, v65, v67, v69, v71, v73, v75,
    v77,
    v79,
    v81,
    v83,
    v85,
    v87,
    v89,
    v91,
    v93,
    v95,
    v97,
    v99,
    v101,
    v102,
    v103,
    v104);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_75_14(v11, v12);
  v13 = OUTLINED_FUNCTION_76_14();
  if (!(_DWORD)v13
    && !OUTLINED_FUNCTION_15_36(v13, v14, v15, v16, v17, v18, v19, v20, v56, v58, v60, v62, v64, v66, v68, v70, v72, v74, v76,
                        v78,
                        v80,
                        v82,
                        v84,
                        v86,
                        v88,
                        v90,
                        v92,
                        v94,
                        v96,
                        v98,
                        v100,
                        v101,
                        v102,
                        v103,
                        v104,
                        v105,
                        v106,
                        v107,
                        v108,
                        v109,
                        v110,
                        v111,
                        v112,
                        v113,
                        v114,
                        v115,
                        v116,
                        v117,
                        v118,
                        v119))
  {
    v21 = OUTLINED_FUNCTION_116_8();
    OUTLINED_FUNCTION_98_8(v21, v22, v2, v23, v24, v25, v26, v27);
    v28 = OUTLINED_FUNCTION_158_3();
    OUTLINED_FUNCTION_98_8(v28, v29, v30, v31, v32, v33, v34, v35);
    OUTLINED_FUNCTION_98_8(v0, (uint64_t)&v103, v1, v36, v37, v38, v39, v40);
    v41 = OUTLINED_FUNCTION_188_1();
    OUTLINED_FUNCTION_98_8(v41, v42, v43, v44, v45, v46, v47, v48);
    fence_38(v0);
    OUTLINED_FUNCTION_181_1();
    v49 = OUTLINED_FUNCTION_129_7();
    rpta_loadpn(v49);
    if (OUTLINED_FUNCTION_33_30() || OUTLINED_FUNCTION_38_28())
    {
LABEL_5:
      lookup_kor_ending_a();
    }
    else
    {
      OUTLINED_FUNCTION_1_39(2);
      lpta_loadpn(v0, &v105);
      OUTLINED_FUNCTION_95_8();
      if (OUTLINED_FUNCTION_33_30()
        || (v50 = OUTLINED_FUNCTION_38_28())
        || (OUTLINED_FUNCTION_23_33(v50, (uint64_t)&v103, (uint64_t)&v101), mark_s(), v51))
      {
        while (1)
        {
          OUTLINED_FUNCTION_12_37();
          OUTLINED_FUNCTION_191_0();
          mark_s();
          if (!(_DWORD)v52)
            break;
          v53 = *(_QWORD *)(v0 + 104);
          if (v53)
            v54 = OUTLINED_FUNCTION_24_32(v53);
          else
            v54 = OUTLINED_FUNCTION_31_30(v52, 0);
          if (v54 != 2)
          {
            if ((v54 - 3) >= 2 && v54 == 1)
              goto LABEL_5;
            break;
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_87_9();
}

void is_kor_pronouns()
{
  _QWORD *v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  char v48[8];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  uint64_t v75[2];
  _QWORD v76[2];
  _BYTE v77[10];
  _BYTE v78[9];
  _BYTE v79[9];
  _BYTE v80[192];
  uint64_t v81;

  OUTLINED_FUNCTION_9_37();
  OUTLINED_FUNCTION_91_9();
  v81 = *MEMORY[0x24BDAC8D0];
  v76[0] = 0;
  v76[1] = 0;
  OUTLINED_FUNCTION_27_30(v4, v5, v6, v7, v8, v9, v10, v11, v47, v48[0], v49, v50, v51, v52, v53, v54, v55, v56, v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74[0],
    v74[1],
    v75[0],
    v75[1]);
  OUTLINED_FUNCTION_57_17();
  OUTLINED_FUNCTION_140_4(v12, v13);
  v14 = OUTLINED_FUNCTION_141_3();
  if (!(_DWORD)v14
    && !OUTLINED_FUNCTION_26_32(v14, (uint64_t)v48, (uint64_t)v79, (uint64_t)v78, (uint64_t)v77, (uint64_t)v80))
  {
    OUTLINED_FUNCTION_6_37((uint64_t)v0, (uint64_t)v76, v3, v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_6_37((uint64_t)v0, (uint64_t)v75, v2, v20, v21, v22, v23, v24);
    OUTLINED_FUNCTION_6_37((uint64_t)v0, (uint64_t)v74, v1, v25, v26, v27, v28, v29);
    v30 = OUTLINED_FUNCTION_90_9();
    OUTLINED_FUNCTION_5_37((uint64_t)v30, 1);
    v31 = OUTLINED_FUNCTION_158_3();
    lpta_rpta_loadp(v31, v32, v33);
    if (!setd_lookup(v0, 1u, 3))
      goto LABEL_5;
LABEL_4:
    OUTLINED_FUNCTION_1_39(3);
    v35 = OUTLINED_FUNCTION_23_33(v34, (uint64_t)v76, (uint64_t)v75);
    if (!OUTLINED_FUNCTION_64_14(v35, 1u, 4))
    {
LABEL_5:
      while (1)
      {
        OUTLINED_FUNCTION_35_29();
        OUTLINED_FUNCTION_157_3();
        OUTLINED_FUNCTION_174_2();
        WORD1(v71) = 1;
        OUTLINED_FUNCTION_182_1(v36, v37, v38, v39, v40, v41, v42, v43);
        OUTLINED_FUNCTION_134_5();
        insert_2ptv();
        if (!(_DWORD)v44)
          break;
        v45 = v0[13];
        if (v45)
          v46 = OUTLINED_FUNCTION_24_32(v45);
        else
          v46 = OUTLINED_FUNCTION_31_30(v44, 0);
        if (v46 != 2)
        {
          if (v46 == 1)
            goto LABEL_4;
          break;
        }
      }
    }
  }
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void is_kor_adverbs()
{
  uint64_t v0;
  __int16 *v1;
  uint64_t v2;
  __int16 *v3;
  uint64_t v4;
  __int16 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _BOOL8 v32;
  _BOOL4 v33;
  uint64_t v34;
  int v35;
  _BOOL4 v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  unsigned __int16 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[8];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[4];
  _QWORD v75[2];
  _BYTE v76[10];
  _BYTE v77[9];
  _BYTE v78[9];
  _BYTE v79[192];
  uint64_t v80;

  OUTLINED_FUNCTION_9_37();
  v1 = (__int16 *)v0;
  v3 = (__int16 *)v2;
  v5 = (__int16 *)v4;
  v7 = (_QWORD *)v6;
  v80 = *MEMORY[0x24BDAC8D0];
  v75[0] = 0;
  v75[1] = 0;
  OUTLINED_FUNCTION_27_30(v6, v4, v2, v0, v8, v9, v10, v11, v47, v48[0], v49, v50, v51, v52, v53, v54, v55, v56, v57,
    v58,
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74[0],
    v74[1],
    v74[2],
    v74[3]);
  OUTLINED_FUNCTION_57_17();
  bzero(v79, v12);
  v13 = OUTLINED_FUNCTION_172_2();
  if (!(_DWORD)v13
    && !OUTLINED_FUNCTION_26_32(v13, (uint64_t)v48, (uint64_t)v78, (uint64_t)v77, (uint64_t)v76, (uint64_t)v79))
  {
    OUTLINED_FUNCTION_6_37((uint64_t)v7, (uint64_t)v75, v5, v14, v15, v16, v17, v18);
    v19 = OUTLINED_FUNCTION_128_7();
    OUTLINED_FUNCTION_6_37(v19, v20, v3, v21, v22, v23, v24, v25);
    OUTLINED_FUNCTION_6_37((uint64_t)v7, (uint64_t)v74, v1, v26, v27, v28, v29, v30);
    v31 = OUTLINED_FUNCTION_90_9();
    OUTLINED_FUNCTION_5_37((uint64_t)v31, 1);
    OUTLINED_FUNCTION_101_8();
    OUTLINED_FUNCTION_12_37();
    v32 = setd_lookup(v7, 1u, 1);
    v33 = !v32;
    while (1)
    {
      v34 = v7[13];
      if (v34)
      {
        v35 = OUTLINED_FUNCTION_24_32(v34);
        v33 = v36;
      }
      else
      {
        v35 = OUTLINED_FUNCTION_31_30(v32, v33);
        v33 = 0;
      }
      if (v35 != 1)
        break;
      OUTLINED_FUNCTION_12_37();
      v37 = OUTLINED_FUNCTION_116_8();
      OUTLINED_FUNCTION_171_2(v37, v38);
      OUTLINED_FUNCTION_174_2();
      WORD1(v71) = 1;
      v39 = OUTLINED_FUNCTION_116_8();
      npop(v39, v40, v41, v42, v43, v44, v45, v46);
      OUTLINED_FUNCTION_70_14();
      insert_2ptv();
      if (!v32)
        goto LABEL_3;
    }
    if (v35 == 2)
      OUTLINED_FUNCTION_50_21();
  }
LABEL_3:
  OUTLINED_FUNCTION_7_37();
  OUTLINED_FUNCTION_0_41();
}

void OUTLINED_FUNCTION_1_39(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

uint64_t OUTLINED_FUNCTION_2_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

void OUTLINED_FUNCTION_3_38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  a34 = 0;
  a35 = 0;
  a32 = 0;
  a33 = 0;
  bzero(&a9, 0xB8uLL);
}

void OUTLINED_FUNCTION_4_37(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

void OUTLINED_FUNCTION_5_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  starttest(v2, a2);
}

void OUTLINED_FUNCTION_6_37(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_7_37()
{
  uint64_t v0;

  vretproc(v0);
}

void OUTLINED_FUNCTION_8_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  bzero(&a9, 0xB8uLL);
}

void OUTLINED_FUNCTION_10_37()
{
  is_kor_nominal();
}

uint64_t OUTLINED_FUNCTION_11_37(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return push_ptr_init(v2, a2);
}

uint64_t OUTLINED_FUNCTION_12_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

void *OUTLINED_FUNCTION_13_36()
{
  uint64_t v0;

  return fence_38(v0);
}

uint64_t OUTLINED_FUNCTION_14_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;

  return lpta_rpta_loadp(v36, a2, (uint64_t)&a36);
}

uint64_t OUTLINED_FUNCTION_15_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41,int a42,__int16 a43,char a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,char a50)
{
  uint64_t v50;

  return ventproc(v50, (uint64_t)&a9, (uint64_t)&a48, (uint64_t)&a44, (uint64_t)&a41, (uint64_t)&a50);
}

void OUTLINED_FUNCTION_16_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  uint64_t v44;

  lpta_loadp_setscan_l(v44, (uint64_t)&a44);
}

uint64_t OUTLINED_FUNCTION_17_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

double OUTLINED_FUNCTION_18_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;
  double result;

  *(_QWORD *)&result = savescptr(v32, 2, (uint64_t)&a32).n128_u64[0];
  return result;
}

double OUTLINED_FUNCTION_19_35@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_20_35(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28)
{
  uint64_t v28;

  a28 = a1;
  lpta_loadp_setscan_r(v28, (uint64_t)&a27);
}

BOOL OUTLINED_FUNCTION_21_34()
{
  return advance_tok();
}

void OUTLINED_FUNCTION_22_33(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

uint64_t OUTLINED_FUNCTION_23_33(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return lpta_rpta_loadp(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_24_32@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

double OUTLINED_FUNCTION_25_32(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double result;

  *(_QWORD *)&result = savescptr(v3, a2, a3).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_26_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

void OUTLINED_FUNCTION_27_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  a38 = 0;
  a39 = 0;
  a36 = 0;
  a37 = 0;
  a33 = 0;
  a34 = 0;
  a35 = 0;
  bzero(&a10, 0xB8uLL);
}

void OUTLINED_FUNCTION_28_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;

  get_parm(v8, a2, v9, 4294967290, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_30_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

uint64_t OUTLINED_FUNCTION_31_30(uint64_t a1, int a2)
{
  _QWORD *v2;

  return vback(v2, a2);
}

void OUTLINED_FUNCTION_32_30()
{
  is_kor_copular();
}

BOOL OUTLINED_FUNCTION_33_30()
{
  uint64_t v0;

  return compare_ptas(v0);
}

void OUTLINED_FUNCTION_34_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,__int16 a53,__int16 a54,char a55,uint64_t a56,char a57,uint64_t a58,__int16 a59,uint64_t a60,__int16 a61)
{
  uint64_t v61;

  is_kor_verb(v61, &a61, &a59, (uint64_t)&a55, (uint64_t)&a57, &a53);
}

uint64_t OUTLINED_FUNCTION_35_29()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

double OUTLINED_FUNCTION_36_29@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  double result;

  *(_QWORD *)&result = savescptr(v28, a1, (uint64_t)&a28).n128_u64[0];
  return result;
}

double OUTLINED_FUNCTION_37_29@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

BOOL OUTLINED_FUNCTION_38_28()
{
  uint64_t v0;

  return testeq(v0);
}

uint64_t OUTLINED_FUNCTION_40_24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v2, v1);
}

void OUTLINED_FUNCTION_41_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, a2, v9, v10, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_42_24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = v0;
  *(_QWORD *)(v1 + 128) = 0;
  return test_ptr(v1);
}

void OUTLINED_FUNCTION_43_24()
{
  is_kor_preending();
}

double OUTLINED_FUNCTION_44_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v2, a2).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_45_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_46_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  bzero(&a44, 0xC0uLL);
}

uint64_t OUTLINED_FUNCTION_47_23()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_48_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;

  get_parm(v8, a2, v9, 4294967292, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_49_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 104) = 0;
  return a2;
}

uint64_t OUTLINED_FUNCTION_50_21()
{
  uint64_t v0;

  return bspop_boa(v0);
}

BOOL OUTLINED_FUNCTION_51_20()
{
  uint64_t v0;

  return testFldeq(v0, 1u, 4, 4);
}

void OUTLINED_FUNCTION_52_19()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t OUTLINED_FUNCTION_53_18()
{
  uint64_t v0;

  return v0;
}

BOOL OUTLINED_FUNCTION_54_18()
{
  _QWORD *v0;
  unsigned __int8 v1;
  int v2;

  return setd_lookup(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_55_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_56_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 2u, a4);
}

double OUTLINED_FUNCTION_58_17@<D0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;
  double result;

  *(_QWORD *)&result = savescptr(v28, a1, (uint64_t)&a28).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_60_17()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_61_16(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_62_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v57;

  lpta_loadp_setscan_l(v57, (uint64_t)&a57);
}

BOOL OUTLINED_FUNCTION_63_14()
{
  uint64_t v0;

  return testFldeq(v0, 1u, 4, 4);
}

BOOL OUTLINED_FUNCTION_64_14(uint64_t a1, unsigned __int8 a2, int a3)
{
  _QWORD *v3;

  return setd_lookup(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_67_14()
{
  return 0;
}

void OUTLINED_FUNCTION_68_14()
{
  mark_kor_ending_a();
}

void OUTLINED_FUNCTION_69_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)(v46 - 96) = v45;
  a44 = 0;
  a45 = 0;
  a42 = 0;
  a43 = 0;
  a40 = 0;
  a41 = 0;
  a39 = 0;
  a36 = 0;
  a37 = 0;
  a34 = 0;
  a35 = 0;
  bzero(&a11, 0xB8uLL);
}

uint64_t OUTLINED_FUNCTION_70_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_71_14()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

void OUTLINED_FUNCTION_72_14()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

double OUTLINED_FUNCTION_73_14()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v0, v1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_74_14()
{
  mark_s();
}

void OUTLINED_FUNCTION_75_14(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

uint64_t OUTLINED_FUNCTION_76_14()
{
  int *v0;

  return setjmp(v0);
}

double OUTLINED_FUNCTION_77_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = savescptr(a1, a2, v2).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_79_13(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_80_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_81_12(uint64_t a1, uint64_t a2, __int16 *a3)
{
  uint64_t v3;
  __int16 *v4;

  return is_kor_modal(v3, (uint64_t)v4, a3, v4);
}

uint64_t OUTLINED_FUNCTION_82_10()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_83_10(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

uint64_t OUTLINED_FUNCTION_84_10()
{
  int *v0;

  return setjmp(v0);
}

uint64_t OUTLINED_FUNCTION_85_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  uint64_t v40;

  return lpta_loadpn(v40, &a40);
}

uint64_t OUTLINED_FUNCTION_88_9()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

void OUTLINED_FUNCTION_89_9()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

void *OUTLINED_FUNCTION_90_9()
{
  uint64_t v0;

  return fence_38(v0);
}

uint64_t OUTLINED_FUNCTION_92_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_93_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_94_8()
{
  mark_s();
}

uint64_t OUTLINED_FUNCTION_95_8()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

void OUTLINED_FUNCTION_98_8(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_99_8()
{
  return 0;
}

void OUTLINED_FUNCTION_100_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_101_8()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

void OUTLINED_FUNCTION_102_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  lpta_loadp_setscan_l(v39, (uint64_t)&a39);
}

void OUTLINED_FUNCTION_103_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_104_8()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

void OUTLINED_FUNCTION_105_8()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

void OUTLINED_FUNCTION_106_8()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

void OUTLINED_FUNCTION_107_8()
{
  mark_kor_verb_ending();
}

void OUTLINED_FUNCTION_108_8()
{
  mark_kor_particle();
}

BOOL OUTLINED_FUNCTION_111_8()
{
  return advance_tok();
}

void *OUTLINED_FUNCTION_112_8()
{
  uint64_t v0;

  return fence_38(v0);
}

void OUTLINED_FUNCTION_113_8(uint64_t a1, uint64_t a2)
{
  lpta_loadp_setscan_l(a1, a2);
}

uint64_t OUTLINED_FUNCTION_114_8()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_115_8()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

uint64_t OUTLINED_FUNCTION_116_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_117_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_118_8()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_119_7()
{
  uint64_t v0;

  return fence_38(v0);
}

uint64_t OUTLINED_FUNCTION_120_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_121_7()
{
  mark_s();
}

uint64_t OUTLINED_FUNCTION_122_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,__int16 a38,uint64_t a39,uint64_t a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t result;

  result = 0;
  *(_QWORD *)(v41 + 8) = a40;
  *(_WORD *)(v40 + 2) = a38;
  return result;
}

void OUTLINED_FUNCTION_123_7()
{
  insert_2ptv();
}

void OUTLINED_FUNCTION_124_7()
{
  insert_2ptv();
}

uint64_t OUTLINED_FUNCTION_125_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  return lpta_loadpn(v41, &a41);
}

void OUTLINED_FUNCTION_126_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
}

double OUTLINED_FUNCTION_127_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v12, a12).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_128_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_129_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_130_7()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

uint64_t OUTLINED_FUNCTION_131_6()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_132_6()
{
  uint64_t v0;

  npush_s(v0);
}

double OUTLINED_FUNCTION_133_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v13, a13).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_134_5()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_135_5()
{
  uint64_t v0;

  npush_s(v0);
}

double OUTLINED_FUNCTION_136_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v10, a10).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_137_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  bzero(&a43, 0xC0uLL);
}

uint64_t OUTLINED_FUNCTION_139_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 3u, a4);
}

void OUTLINED_FUNCTION_140_4(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

uint64_t OUTLINED_FUNCTION_141_3()
{
  int *v0;

  return setjmp(v0);
}

uint64_t OUTLINED_FUNCTION_142_3()
{
  uint64_t v0;

  return npush_fld(v0, 4u, 13);
}

uint64_t OUTLINED_FUNCTION_143_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_145_3()
{
  is_kor_verb_L_infl();
}

uint64_t OUTLINED_FUNCTION_146_3()
{
  return is_kor_ending_a();
}

uint64_t OUTLINED_FUNCTION_147_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_148_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_149_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_150_3()
{
  is_kor_verb_T_infl();
}

uint64_t OUTLINED_FUNCTION_151_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,char a41)
{
  uint64_t v41;

  return lpta_rpta_loadp(v41, (uint64_t)&a41, (uint64_t)&a39);
}

void OUTLINED_FUNCTION_152_3()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 v2;

  settvar_s(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_153_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_154_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  uint64_t v57;
  uint64_t v58;

  return lpta_rpta_loadp(v57, (uint64_t)&a57, v58);
}

uint64_t OUTLINED_FUNCTION_155_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_156_3()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_l(v0, v1);
}

void OUTLINED_FUNCTION_157_3()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 v2;

  settvar_s(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_158_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_159_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_160_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_161_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_162_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_163_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 2u, a4);
}

void OUTLINED_FUNCTION_164_2()
{
  uint64_t v0;
  unsigned __int8 *v1;

  settvar_s(v0, v1, 2u);
}

double OUTLINED_FUNCTION_167_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = savescptr(a1, a2, v2).n128_u64[0];
  return result;
}

uint64_t OUTLINED_FUNCTION_168_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_169_2@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

void OUTLINED_FUNCTION_171_2(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;

  settvar_s(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_172_2()
{
  int *v0;

  return setjmp(v0);
}

uint64_t OUTLINED_FUNCTION_173_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  return lpta_rpta_loadp(a1, a2, (uint64_t)&a57);
}

void OUTLINED_FUNCTION_174_2()
{
  uint64_t v0;

  npush_s(v0);
}

void OUTLINED_FUNCTION_175_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_176_2()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

uint64_t OUTLINED_FUNCTION_177_2()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

double OUTLINED_FUNCTION_178_2()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v0, v1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_179_2()
{
  uint64_t v0;

  bspush_ca(v0);
}

void OUTLINED_FUNCTION_180_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  starttest(v20, a20);
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  uint64_t v0;
  uint64_t v1;

  return lpta_loadpn(v0, v1);
}

void OUTLINED_FUNCTION_182_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned __int16 *v9;

  npop(v8, v9, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_183_1()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t OUTLINED_FUNCTION_184_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_185_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  starttest(v9, a9);
}

uint64_t OUTLINED_FUNCTION_186_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_187_1()
{
  mark_s();
}

uint64_t OUTLINED_FUNCTION_188_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_189_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  starttest(v14, a14);
}

BOOL OUTLINED_FUNCTION_190_0(uint64_t a1, uint64_t a2, int a3)
{
  _QWORD *v3;
  unsigned __int8 v4;

  return setd_lookup(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  uint64_t v0;

  return v0;
}

double OUTLINED_FUNCTION_192_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v15, a15).n128_u64[0];
  return result;
}

double OUTLINED_FUNCTION_193_0()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v0, v1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_194_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  starttest(v10, a10);
}

void OUTLINED_FUNCTION_195_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  starttest(v16, a16);
}

double OUTLINED_FUNCTION_196_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v16, a16).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_197_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;

  starttest(v11, a11);
}

double OUTLINED_FUNCTION_198_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v11, a11).n128_u64[0];
  return result;
}

double OUTLINED_FUNCTION_199_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v17, a17).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_200_0()
{
  is_kor_nominal();
}

double OUTLINED_FUNCTION_203_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double result;

  *(_QWORD *)&result = savescptr(a1, a2, v2).n128_u64[0];
  return result;
}

uint64_t kor_char_name(uint64_t a1, __int16 *a2, __int16 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _BOOL8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  _BOOL4 v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  _BOOL4 v90;
  _BOOL8 v91;
  _BOOL4 v92;
  _BOOL8 v93;
  int v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD v124[2];
  _BYTE v125[10];
  _BYTE v126[9];
  _BYTE v127[9];
  int v128[48];
  uint64_t v129;

  v129 = *MEMORY[0x24BDAC8D0];
  v124[0] = 0;
  v124[1] = 0;
  v122 = 0;
  v123 = 0;
  v120 = 0;
  v121 = 0;
  bzero(&v97, 0xB8uLL);
  bzero(v128, 0xC0uLL);
  if (setjmp(v128)
    || ventproc(a1, (uint64_t)&v97, (uint64_t)v127, (uint64_t)v126, (uint64_t)v125, (uint64_t)v128)
    || (get_parm(a1, (uint64_t)v124, a2, 4294967290, v6, v7, v8, v9),
        get_parm(a1, (uint64_t)&v122, a3, 4294967290, v10, v11, v12, v13),
        push_ptr_init(a1, (uint64_t)&v120),
        *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0,
        memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288)),
        lpta_rpta_loadp(a1, (uint64_t)v124, (uint64_t)&v122),
        actd_lookup((_QWORD *)a1, 0, 0, 0)))
  {
LABEL_4:
    vretproc(a1);
    return 94;
  }
  else
  {
    v15 = 0;
LABEL_6:
    starttest(a1, 147);
    if (*(unsigned __int16 *)(a1 + 2758) == *(unsigned __int16 *)(a1 + 2750)
      && (starttest_e(a1, 147), lpta_loadp_setscan_r(a1, (uint64_t)v124), !v16))
    {
      bspush_ca_scan_boa(a1);
      v24 = a1;
      v25 = 2;
LABEL_10:
      if (testFldeq(v24, 1u, 3, v25))
        v23 = v15;
      else
        v23 = 1;
    }
    else
    {
LABEL_8:
      actd_goto(a1);
      v23 = v15;
    }
    while (2)
    {
      v26 = *(_QWORD *)(a1 + 104);
      if (v26)
      {
        *(_QWORD *)(a1 + 104) = 0;
        v27 = v26;
        v15 = v23;
      }
      else
      {
        v27 = vback((_QWORD *)a1, v23);
        v15 = 0;
      }
      v28 = v27 - 1;
      v23 = 1;
      v29 = &unk_25775274F;
      v30 = 10;
      v31 = 149;
      switch(v28)
      {
        case 0:
          goto LABEL_198;
        case 1:
          OUTLINED_FUNCTION_2_39(153);
          OUTLINED_FUNCTION_3_39(v32, (uint64_t)&v122);
          if ((_DWORD)v31)
            goto LABEL_23;
          bspush_ca_scan(a1, 154);
          LODWORD(v23) = 1;
          v86 = a1;
          v85 = 1;
          goto LABEL_213;
        case 2:
          v29 = &unk_25775266E;
          goto LABEL_193;
        case 3:
          v29 = &unk_257752673;
          goto LABEL_193;
        case 4:
          v29 = &unk_257752722;
          goto LABEL_191;
        case 5:
          v29 = &unk_257752687;
          goto LABEL_197;
        case 6:
          OUTLINED_FUNCTION_2_39(157);
          OUTLINED_FUNCTION_4_38(v35, v36, v37, v38, v39, v40, v41, v42, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          if ((_DWORD)v31)
            goto LABEL_29;
          goto LABEL_30;
        case 7:
          OUTLINED_FUNCTION_2_39(160);
          three_letter_extension();
          if ((_DWORD)v31)
            goto LABEL_37;
          v50 = OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124[0]);
          OUTLINED_FUNCTION_5_38(v50, 1, 5, (uint64_t)&unk_257752678, 0);
          if ((_DWORD)v31)
            goto LABEL_37;
          goto LABEL_225;
        case 8:
          v29 = &unk_257752795;
          goto LABEL_143;
        case 9:
          v29 = &unk_2577527A0;
          goto LABEL_143;
        case 10:
          if (*(unsigned __int16 *)(a1 + 2802) != *(unsigned __int16 *)(a1 + 2798))
            goto LABEL_42;
          v51 = OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124[0]);
          OUTLINED_FUNCTION_5_38(v51, 1, 3, (uint64_t)&unk_257752612, 0);
          if (v52)
            goto LABEL_42;
          goto LABEL_225;
        case 11:
          v29 = &unk_2577527AB;
          goto LABEL_143;
        case 12:
          v29 = &unk_25775268D;
          goto LABEL_197;
        case 13:
          v29 = &unk_257752693;
          goto LABEL_197;
        case 14:
          v29 = &unk_257752615;
          goto LABEL_195;
        case 15:
          v29 = &unk_2577525F4;
          goto LABEL_188;
        case 16:
          v29 = &unk_25775286E;
          goto LABEL_145;
        case 17:
          v29 = &unk_257752699;
          goto LABEL_197;
        case 18:
          v29 = &unk_25775287B;
          goto LABEL_145;
        case 19:
          v29 = &unk_257752900;
          goto LABEL_100;
        case 20:
          v29 = &unk_257752888;
          goto LABEL_145;
        case 21:
          v29 = &unk_25775290F;
          goto LABEL_100;
        case 22:
          v29 = &unk_2577527B6;
          goto LABEL_143;
        case 23:
          v29 = &unk_2577526D1;
          goto LABEL_164;
        case 24:
          OUTLINED_FUNCTION_2_39(165);
          OUTLINED_FUNCTION_3_39(v54, (uint64_t)v124);
          if ((_DWORD)v31)
            goto LABEL_59;
          v92 = testFldeq(a1, 1u, 5, 4);
          v23 = v15;
          if (v92)
            continue;
          v93 = OUTLINED_FUNCTION_6_38();
          v23 = v15;
          if (v93)
            continue;
          OUTLINED_FUNCTION_0_42(v93, v15, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_2577528D6;
          goto LABEL_60;
        case 25:
          v29 = &unk_257752895;
          goto LABEL_145;
        case 26:
          v29 = &unk_25775270A;
          goto LABEL_158;
        case 27:
          v29 = &unk_257752759;
          goto LABEL_198;
        case 28:
          v29 = &unk_25775263E;
          goto LABEL_185;
        case 29:
          v29 = &unk_257752763;
          goto LABEL_198;
        case 30:
          v29 = &unk_2577526D8;
          goto LABEL_164;
        case 31:
          v29 = &unk_25775272B;
          goto LABEL_191;
        case 32:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_2577525F6;
          goto LABEL_79;
        case 33:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_2577525EC;
          goto LABEL_73;
        case 34:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_257752618;
          goto LABEL_205;
        case 35:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_2577525F8;
          goto LABEL_79;
        case 36:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_2577525ED;
LABEL_73:
          v56 = a1;
          v57 = 1;
          goto LABEL_207;
        case 37:
          OUTLINED_FUNCTION_2_39(172);
          bspush_ca(a1);
          v23 = v15;
          if (*(unsigned __int16 *)(a1 + 2902) != *(unsigned __int16 *)(a1 + 2830))
            continue;
          goto LABEL_210;
        case 38:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_257752642;
          goto LABEL_81;
        case 39:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_257752646;
          goto LABEL_81;
        case 40:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_2577525FC;
LABEL_79:
          v57 = 2;
          goto LABEL_206;
        case 41:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_25775264A;
LABEL_81:
          v57 = 4;
          goto LABEL_206;
        case 42:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_25775291E;
          v34 = 15;
          goto LABEL_217;
        case 43:
          v29 = &unk_25775297A;
          goto LABEL_103;
        case 44:
          v29 = &unk_25775298B;
          goto LABEL_103;
        case 45:
          v29 = &unk_2577528A2;
          goto LABEL_145;
        case 46:
          v29 = &unk_2577527C1;
          goto LABEL_143;
        case 47:
        case 117:
          v29 = &unk_2577525FE;
          goto LABEL_188;
        case 48:
          v29 = &unk_2577527CC;
          goto LABEL_143;
        case 49:
          v29 = &unk_25775280E;
          goto LABEL_162;
        case 50:
          v29 = &unk_25775292D;
          goto LABEL_100;
        case 51:
          v29 = &unk_25775299C;
          goto LABEL_103;
        case 52:
          v29 = &unk_2577529AD;
          goto LABEL_103;
        case 53:
          v29 = &unk_2577527D7;
          goto LABEL_143;
        case 54:
          v29 = &unk_25775293C;
          goto LABEL_100;
        case 55:
          v29 = &unk_2577529BE;
          goto LABEL_103;
        case 56:
          v29 = &unk_2577529CF;
          goto LABEL_103;
        case 57:
          v29 = &unk_2577527E2;
          goto LABEL_143;
        case 58:
          v29 = &unk_25775261E;
          goto LABEL_195;
        case 59:
          v29 = &unk_25775264E;
          goto LABEL_185;
        case 60:
          v29 = &unk_25775294B;
LABEL_100:
          v30 = 15;
          goto LABEL_198;
        case 61:
          v29 = &unk_2577529E0;
          goto LABEL_103;
        case 62:
          v29 = &unk_2577529F1;
LABEL_103:
          v30 = 17;
          goto LABEL_198;
        case 63:
          v29 = &unk_257752734;
          goto LABEL_191;
        case 64:
          v29 = &unk_2577527ED;
          goto LABEL_143;
        case 65:
          v29 = &unk_257752A7A;
          v30 = 26;
          goto LABEL_198;
        case 66:
          v29 = &unk_25775295A;
          goto LABEL_119;
        case 67:
          v29 = &unk_257752A02;
          goto LABEL_112;
        case 68:
          v29 = &unk_257752A14;
          goto LABEL_112;
        case 69:
          v29 = &unk_25775281A;
          goto LABEL_162;
        case 70:
          v29 = &unk_257752A26;
LABEL_112:
          v30 = 18;
          goto LABEL_198;
        case 71:
          v29 = &unk_257752712;
          goto LABEL_158;
        case 72:
          v29 = &unk_257752652;
          goto LABEL_185;
        case 73:
          v29 = &unk_257752826;
          goto LABEL_162;
        case 74:
          v29 = &unk_257752A4B;
          v30 = 22;
          goto LABEL_198;
        case 75:
          v29 = &unk_2577527F8;
          goto LABEL_143;
        case 76:
          v29 = &unk_25775296A;
LABEL_119:
          v30 = 16;
          goto LABEL_198;
        case 77:
          v29 = &unk_257752A38;
          v30 = 19;
          goto LABEL_198;
        case 78:
          v29 = &unk_25775276D;
          goto LABEL_198;
        case 79:
        case 80:
        case 96:
          v29 = &unk_257752656;
          goto LABEL_185;
        case 81:
          v29 = &unk_257752612;
          goto LABEL_195;
        case 82:
        case 150:
          goto LABEL_226;
        case 83:
          v29 = &unk_2577528AF;
          goto LABEL_145;
        case 84:
          v29 = &unk_2577528BC;
          goto LABEL_145;
        case 85:
          v29 = &unk_25775269F;
          goto LABEL_197;
        case 86:
          v29 = &unk_2577526DF;
          goto LABEL_164;
        case 87:
        case 89:
          v29 = &unk_2577526A5;
          goto LABEL_197;
        case 88:
        case 130:
          v29 = &unk_257752600;
          goto LABEL_188;
        case 90:
          OUTLINED_FUNCTION_3_39(149, (uint64_t)&v122);
          if (!(_DWORD)v58 && !OUTLINED_FUNCTION_1_40(v58, v59, v60, (uint64_t *)&unk_2577525EE))
            goto LABEL_4;
          goto LABEL_129;
        case 91:
          v29 = &unk_257752777;
          goto LABEL_198;
        case 92:
          v29 = &unk_257752832;
          goto LABEL_162;
        case 93:
          v29 = &unk_25775283E;
          goto LABEL_162;
        case 94:
          v29 = &unk_257752A94;
          v30 = 27;
          goto LABEL_198;
        case 95:
          v29 = &unk_2577528F2;
          v30 = 14;
          goto LABEL_198;
        case 97:
          v29 = &unk_257752781;
          goto LABEL_198;
        case 98:
          v29 = &unk_25775278B;
          goto LABEL_198;
        case 99:
        case 108:
          v29 = &unk_257752602;
          goto LABEL_188;
        case 100:
          v29 = &unk_25775284A;
          goto LABEL_162;
        case 101:
          v29 = &unk_257752803;
LABEL_143:
          v30 = 11;
          goto LABEL_198;
        case 102:
          v29 = &unk_2577528C9;
LABEL_145:
          v30 = 13;
          goto LABEL_198;
        case 103:
          v29 = &unk_257752604;
          goto LABEL_188;
        case 104:
          OUTLINED_FUNCTION_3_39(149, (uint64_t)&v122);
          if (!(_DWORD)v70 && !OUTLINED_FUNCTION_1_40(v70, v71, v72, (uint64_t *)&unk_2577525EF))
            goto LABEL_4;
          goto LABEL_149;
        case 105:
          v29 = &unk_2577526E6;
          goto LABEL_164;
        case 106:
          v29 = &unk_2577526ED;
          goto LABEL_164;
        case 107:
          v29 = &unk_257752856;
          goto LABEL_162;
        case 109:
          v29 = &unk_257752A61;
          v30 = 25;
          goto LABEL_198;
        case 110:
          v29 = &unk_25775271A;
LABEL_158:
          v30 = 8;
          goto LABEL_198;
        case 111:
          v29 = &unk_2577526F4;
          goto LABEL_164;
        case 112:
          v29 = &unk_25775273D;
          goto LABEL_191;
        case 113:
          v29 = &unk_257752862;
LABEL_162:
          v30 = 12;
          goto LABEL_198;
        case 114:
          v29 = &unk_2577526FB;
LABEL_164:
          v30 = 7;
          goto LABEL_198;
        case 115:
          v29 = &unk_2577526B1;
          goto LABEL_197;
        case 116:
          v29 = &unk_25775267D;
          goto LABEL_193;
        case 118:
          v29 = &unk_257752606;
          goto LABEL_188;
        case 119:
          v29 = &unk_257752621;
          goto LABEL_195;
        case 120:
          v29 = &unk_257752608;
          goto LABEL_188;
        case 121:
          v29 = &unk_2577525EC;
          goto LABEL_180;
        case 122:
          v29 = &unk_25775265E;
          goto LABEL_185;
        case 123:
          v29 = &unk_257752624;
          goto LABEL_195;
        case 124:
          v29 = &unk_2577526B7;
          goto LABEL_197;
        case 125:
          v29 = &unk_25775260A;
          goto LABEL_188;
        case 126:
          v29 = &unk_257752627;
          goto LABEL_195;
        case 127:
          v29 = &unk_257752662;
          goto LABEL_185;
        case 128:
          v29 = &unk_25775260C;
          goto LABEL_188;
        case 129:
          v29 = &unk_25775260E;
          goto LABEL_188;
        case 131:
          v29 = &unk_2577525ED;
LABEL_180:
          v30 = 1;
          goto LABEL_198;
        case 132:
          v29 = &unk_25775262A;
          goto LABEL_195;
        case 133:
          v29 = &unk_257752666;
          goto LABEL_185;
        case 134:
          v29 = &unk_257752610;
          goto LABEL_188;
        case 135:
          v29 = &unk_25775266A;
LABEL_185:
          v30 = 4;
          goto LABEL_198;
        case 136:
          v29 = &unk_25775262D;
          goto LABEL_195;
        case 137:
          v29 = &unk_2577525FA;
LABEL_188:
          v30 = 2;
          goto LABEL_198;
        case 138:
          v29 = &unk_257752630;
          goto LABEL_195;
        case 139:
          v29 = &unk_257752746;
LABEL_191:
          v30 = 9;
          goto LABEL_198;
        case 140:
          v29 = &unk_257752682;
LABEL_193:
          v30 = 5;
          goto LABEL_198;
        case 141:
          v29 = &unk_257752633;
LABEL_195:
          v30 = 3;
          goto LABEL_198;
        case 142:
          v29 = &unk_2577526BD;
LABEL_197:
          v30 = 6;
LABEL_198:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v82 = a1;
          v34 = v30;
          v33 = v29;
          goto LABEL_199;
        case 144:
          goto LABEL_6;
        case 145:
        case 151:
        case 155:
        case 158:
        case 160:
        case 162:
        case 165:
        case 166:
        case 167:
        case 168:
        case 169:
        case 170:
        case 174:
        case 175:
        case 176:
        case 177:
        case 178:
        case 180:
        case 183:
          goto LABEL_225;
        case 146:
          goto LABEL_8;
        case 147:
          goto LABEL_222;
        case 148:
          LODWORD(v23) = 3;
LABEL_222:
          v94 = v23;
          bspop_boa(a1);
          bspush_ca_scan_boa(a1);
          v24 = a1;
          v25 = v94;
          goto LABEL_10;
        case 149:
          bspop_boa(a1);
          v84 = OUTLINED_FUNCTION_6_38();
          v23 = v15;
          if (!v84)
            goto LABEL_4;
          continue;
        case 152:
LABEL_23:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_2577526C3;
          v34 = 7;
          goto LABEL_217;
        case 153:
          v85 = 2;
          v86 = a1;
LABEL_213:
          v90 = testFldeq(v86, v23, 3, v85);
          v23 = v15;
          if (!v90)
            goto LABEL_214;
          continue;
        case 154:
LABEL_214:
          v91 = OUTLINED_FUNCTION_6_38();
          v23 = v15;
          if (v91)
            continue;
          OUTLINED_FUNCTION_0_42(v91, v15, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_2577525F0;
LABEL_216:
          v34 = 2;
          goto LABEL_217;
        case 156:
LABEL_29:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_2577525F2;
          goto LABEL_216;
        case 157:
LABEL_30:
          savescptr(a1, 158, (uint64_t)&v120);
          v46 = OUTLINED_FUNCTION_1_40(v43, v44, v45, (uint64_t *)&_MergedGlobals_27);
          v23 = v15;
          if ((_DWORD)v46)
            continue;
          OUTLINED_FUNCTION_3_39(v46, (uint64_t)&v120);
          v23 = v15;
          if (v47)
            continue;
          v48 = OUTLINED_FUNCTION_6_38();
          v23 = v15;
          if (v48)
            continue;
          v49 = OUTLINED_FUNCTION_1_40(v48, v15, v17, (uint64_t *)&_MergedGlobals_27);
          v23 = v15;
          if ((_DWORD)v49)
            continue;
          OUTLINED_FUNCTION_0_42(v49, v15, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_257752636;
          goto LABEL_133;
        case 159:
LABEL_37:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_257752702;
          v34 = 8;
          goto LABEL_217;
        case 161:
LABEL_42:
          OUTLINED_FUNCTION_2_39(164);
          if (*(unsigned __int16 *)(a1 + 2846) != *(unsigned __int16 *)(a1 + 2830))
            goto LABEL_44;
          v53 = OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124[0]);
          OUTLINED_FUNCTION_5_38(v53, 1, 7, (uint64_t)&unk_2577526CA, 0);
          if ((_DWORD)v31)
            goto LABEL_44;
          goto LABEL_225;
        case 163:
LABEL_44:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_25775263A;
          goto LABEL_133;
        case 164:
LABEL_59:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_2577528E4;
LABEL_60:
          v34 = 14;
          goto LABEL_217;
        case 171:
          OUTLINED_FUNCTION_0_42(149, 1, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v55 = &unk_25775261B;
LABEL_205:
          v57 = 3;
LABEL_206:
          v56 = a1;
LABEL_207:
          insert_2pt_s(v56, 1, v57, (uint64_t)v55, 0);
          v23 = v15;
          if (v87)
            continue;
          v95 = *(unsigned __int16 *)(a1 + 2830);
          if (*(unsigned __int16 *)(a1 + 2874) == v95 || *(unsigned __int16 *)(a1 + 2898) == v95)
            goto LABEL_225;
          goto LABEL_226;
        case 172:
          v31 = is_kor_month();
          v23 = v15;
          if ((_DWORD)v31)
            continue;
          goto LABEL_210;
        case 173:
LABEL_210:
          v88 = OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124[0]);
          OUTLINED_FUNCTION_5_38(v88, 1, 2, (uint64_t)&unk_2577525FA, 0);
          v23 = v15;
          if (!v89)
            goto LABEL_226;
          continue;
        case 179:
LABEL_129:
          OUTLINED_FUNCTION_2_39(182);
          OUTLINED_FUNCTION_4_38(v61, v62, v63, v64, v65, v66, v67, v68, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          if ((_DWORD)v31)
            goto LABEL_132;
          v31 = OUTLINED_FUNCTION_1_40(v31, v23, v17, (uint64_t *)&unk_2577525EE);
          if ((_DWORD)v31)
            goto LABEL_132;
          v69 = OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124[0]);
          OUTLINED_FUNCTION_5_38(v69, 1, 4, (uint64_t)&unk_25775265A, 0);
          if ((_DWORD)v31)
            goto LABEL_132;
          goto LABEL_225;
        case 181:
LABEL_132:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_25775265A;
LABEL_133:
          v34 = 4;
          goto LABEL_217;
        case 182:
LABEL_149:
          OUTLINED_FUNCTION_2_39(185);
          OUTLINED_FUNCTION_4_38(v73, v74, v75, v76, v77, v78, v79, v80, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          if ((_DWORD)v31)
            goto LABEL_152;
          v31 = OUTLINED_FUNCTION_1_40(v31, v23, v17, (uint64_t *)&unk_2577525EF);
          if ((_DWORD)v31)
            goto LABEL_152;
          v81 = OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
                  v107,
                  v108,
                  v109,
                  v110,
                  v111,
                  v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124[0]);
          OUTLINED_FUNCTION_5_38(v81, 1, 6, (uint64_t)&unk_2577526AB, 0);
          if ((_DWORD)v31)
            goto LABEL_152;
          goto LABEL_225;
        case 184:
LABEL_152:
          OUTLINED_FUNCTION_0_42(v31, v23, v17, v18, v19, v20, v21, v22, v96, v97, v98, v99, v100, v101, v102, v103, v104, v105, v106,
            v107,
            v108,
            v109,
            v110,
            v111,
            v112,
            v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124[0]);
          v33 = &unk_2577526AB;
          v34 = 6;
LABEL_217:
          v82 = a1;
LABEL_199:
          insert_2pt_s(v82, 1, v34, (uint64_t)v33, 0);
          v23 = v15;
          if (v83)
            continue;
LABEL_225:
          insert_space();
LABEL_226:
          vretproc(a1);
          result = 0;
          break;
        default:
          goto LABEL_4;
      }
      break;
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  uint64_t v37;

  return lpta_rpta_loadp(v37, (uint64_t)&a37, (uint64_t)&a35);
}

uint64_t OUTLINED_FUNCTION_1_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

void OUTLINED_FUNCTION_2_39(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

void OUTLINED_FUNCTION_3_39(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_4_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  uint64_t v37;

  lpta_loadp_setscan_l(v37, (uint64_t)&a37);
}

void OUTLINED_FUNCTION_5_38(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  insert_2pt_s(v5, a2, a3, a4, a5);
}

BOOL OUTLINED_FUNCTION_6_38()
{
  return advance_tok();
}

void *fence_39(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
  return memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
}

void lookup_kor_ending_a()
{
  uint64_t v0;
  __int16 *v1;
  __int16 *v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  __int16 *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;
  _BYTE v35[188];
  int v36;
  _QWORD v37[2];
  _QWORD v38[2];
  _QWORD v39[2];
  _QWORD v40[2];
  char v41[10];
  char v42[9];
  char v43[9];
  int v44[48];
  uint64_t v45;

  OUTLINED_FUNCTION_14_37();
  v45 = *MEMORY[0x24BDAC8D0];
  v40[0] = 0;
  v40[1] = 0;
  v39[0] = 0;
  v39[1] = 0;
  v38[0] = 0;
  v38[1] = 0;
  v37[0] = 0;
  v37[1] = 0;
  v36 = 0;
  bzero(v35, 0xB8uLL);
  bzero(v44, 0xC0uLL);
  v5 = setjmp(v44);
  if (!(_DWORD)v5
    && !OUTLINED_FUNCTION_17_37(v5, (uint64_t)v35, (uint64_t)v43, (uint64_t)v42, (uint64_t)v41, (uint64_t)v44))
  {
    OUTLINED_FUNCTION_5_39(v0, (uint64_t)v40, v4, v6, v7, v8, v9, v10);
    OUTLINED_FUNCTION_5_39(v0, (uint64_t)v39, v3, v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_5_39(v0, (uint64_t)v38, v2, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_5_39(v0, (uint64_t)v37, v1, v21, v22, v23, v24, v25);
    v36 = 65532;
    OUTLINED_FUNCTION_15_37();
    OUTLINED_FUNCTION_2_40(5);
    v26 = OUTLINED_FUNCTION_11_38();
    if (!OUTLINED_FUNCTION_9_38(v26, 1, 0))
    {
      v27 = 0;
      v28 = (__int16 *)(v0 + 2288);
LABEL_6:
      copyvar(v0, (unsigned __int16 *)&v36, v28);
      v29 = OUTLINED_FUNCTION_16_37();
      v30 = v27;
      while (2)
      {
        v31 = *(_QWORD *)(v0 + 104);
        if (v31)
        {
          v32 = OUTLINED_FUNCTION_10_38(v31);
          v27 = v33;
        }
        else
        {
          v32 = OUTLINED_FUNCTION_18_36(v29, v30);
          v27 = 0;
        }
        switch(v32)
        {
          case 1:
            starttest(v0, 10);
            bspush_ca_boa(v0);
            lpta_loadp_setscan_l(v0, (uint64_t)v40);
            v30 = v27;
            if (!(_DWORD)v29)
            {
              v29 = test_string_s(v0, 1u, 2u, (uint64_t *)&unk_257752AB6);
              if ((_DWORD)v29)
                v30 = v27;
              else
                v30 = 1;
            }
            continue;
          case 2:
          case 13:
            goto LABEL_21;
          case 3:
            OUTLINED_FUNCTION_3_40();
            OUTLINED_FUNCTION_13_37();
            goto LABEL_22;
          case 4:
            starttest(v0, 13);
            lpta_loadpn(v0, v39);
            rpta_loadpn(v0);
            if (!compare_ptas(v0) && !testeq(v0))
            {
              OUTLINED_FUNCTION_3_40();
              OUTLINED_FUNCTION_13_37();
              mark_s();
              if (!v34)
                goto LABEL_25;
            }
            goto LABEL_21;
          case 6:
            v28 = (__int16 *)(v0 + 2288);
            goto LABEL_6;
          case 11:
            bspop_boa(v0);
LABEL_21:
            OUTLINED_FUNCTION_3_40();
LABEL_22:
            mark_s();
            v30 = v27;
            if (!(_DWORD)v29)
              goto LABEL_25;
            continue;
          case 14:
LABEL_25:
            HIWORD(v36) = *(_WORD *)(v0 + 2286);
            break;
          default:
            goto LABEL_4;
        }
        break;
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_7_38();
  OUTLINED_FUNCTION_6_39();
}

void handle_kor_preending()
{
  uint64_t v0;
  __int16 *v1;
  uint64_t v2;
  __int16 *v3;
  __int16 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int16 *v28;
  __int16 *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE v53[184];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[10];
  _BYTE v61[9];
  _BYTE v62[9];
  int v63[48];
  uint64_t v64;

  OUTLINED_FUNCTION_14_37();
  v64 = *MEMORY[0x24BDAC8D0];
  v58 = 0;
  v59 = 0;
  v57[0] = 0;
  v57[1] = 0;
  v55 = 0;
  v56 = 0;
  v54 = 0;
  bzero(v53, 0xB8uLL);
  bzero(v63, 0xC0uLL);
  v5 = setjmp(v63);
  if ((_DWORD)v5)
    goto LABEL_40;
  if (OUTLINED_FUNCTION_17_37(v5, (uint64_t)v53, (uint64_t)v62, (uint64_t)v61, (uint64_t)v60, (uint64_t)v63))
    goto LABEL_40;
  OUTLINED_FUNCTION_5_39(v0, (uint64_t)&v58, v4, v6, v7, v8, v9, v10);
  OUTLINED_FUNCTION_5_39(v0, (uint64_t)v57, v3, v11, v12, v13, v14, v15);
  OUTLINED_FUNCTION_5_39(v0, (uint64_t)&v55, (__int16 *)v2, v16, v17, v18, v19, v20);
  get_parm(v0, (uint64_t)&v54 + 4, v1, 4294967292, v21, v22, v23, v24);
  LODWORD(v54) = 65532;
  OUTLINED_FUNCTION_15_37();
  OUTLINED_FUNCTION_2_40(8);
  v25 = OUTLINED_FUNCTION_11_38();
  if (OUTLINED_FUNCTION_9_38(v25, 2, 0))
  {
LABEL_40:
    OUTLINED_FUNCTION_7_38();
  }
  else
  {
    LODWORD(v26) = 0;
LABEL_5:
    v27 = OUTLINED_FUNCTION_12_38();
    copyvar(v27, v28, v29);
    copyvar(v0, (unsigned __int16 *)&v54 + 2, (__int16 *)(v0 + 2288));
    copyvar(v0, (unsigned __int16 *)&v55, (__int16 *)&v58);
    v30 = OUTLINED_FUNCTION_16_37();
    v31 = v26;
    while (2)
    {
      v32 = *(_QWORD *)(v0 + 104);
      if (v32)
      {
        v33 = OUTLINED_FUNCTION_10_38(v32);
        v26 = v34;
      }
      else
      {
        v33 = OUTLINED_FUNCTION_18_36(v30, v31);
        v26 = 0;
      }
      switch((int)v33)
      {
        case 1:
          OUTLINED_FUNCTION_2_40(13);
          OUTLINED_FUNCTION_1_41(v35, (uint64_t)&v58);
          if (v36)
            goto LABEL_37;
          OUTLINED_FUNCTION_0_43(14);
          v37 = (uint64_t *)&unk_257752AB8;
LABEL_19:
          v43 = 2;
          goto LABEL_26;
        case 2:
          OUTLINED_FUNCTION_2_40(22);
          OUTLINED_FUNCTION_1_41(v38, (uint64_t)&v58);
          if (v39)
            goto LABEL_37;
          OUTLINED_FUNCTION_0_43(23);
          v40 = (uint64_t *)&unk_257752AB8;
          goto LABEL_29;
        case 3:
        case 13:
        case 22:
        case 29:
        case 30:
          goto LABEL_37;
        case 4:
          OUTLINED_FUNCTION_1_41(v33, (uint64_t)&v58);
          if ((_DWORD)v46 || OUTLINED_FUNCTION_4_39(v46, v47, v48, (uint64_t *)&_MergedGlobals_28))
            goto LABEL_44;
          goto LABEL_45;
        case 5:
          OUTLINED_FUNCTION_1_41(v33, (uint64_t)&v58);
          if (!(_DWORD)v49 && !OUTLINED_FUNCTION_4_39(v49, v50, v51, (uint64_t *)&_MergedGlobals_28))
            goto LABEL_48;
          goto LABEL_37;
        case 6:
          OUTLINED_FUNCTION_2_40(32);
          bspush_ca_boa(v0);
          OUTLINED_FUNCTION_1_41(v41, (uint64_t)&v58);
          v31 = v26;
          if (!(_DWORD)v30)
          {
            v30 = OUTLINED_FUNCTION_4_39(v30, v26, v42, (uint64_t *)&unk_257752AB0);
            if ((_DWORD)v30)
              v31 = v26;
            else
              v31 = 1;
          }
          continue;
        case 7:
          OUTLINED_FUNCTION_1_41(v33, (uint64_t)&v58);
          if (!(_DWORD)v52 && !OUTLINED_FUNCTION_8_38(v52, 1u, 6u, (uint64_t *)&unk_257752B06))
            goto LABEL_51;
          goto LABEL_38;
        case 9:
          goto LABEL_5;
        case 10:
        case 21:
        case 32:
        case 34:
          goto LABEL_38;
        case 12:
          goto LABEL_39;
        case 14:
          OUTLINED_FUNCTION_0_43(16);
          v37 = (uint64_t *)&unk_257752ABA;
          goto LABEL_19;
        case 15:
          goto LABEL_35;
        case 16:
          OUTLINED_FUNCTION_0_43(17);
          v37 = (uint64_t *)&unk_257752ACE;
          goto LABEL_25;
        case 17:
          OUTLINED_FUNCTION_0_43(18);
          v37 = (uint64_t *)&unk_257752AD1;
          goto LABEL_25;
        case 18:
          OUTLINED_FUNCTION_0_43(19);
          v37 = (uint64_t *)&unk_257752AD4;
          goto LABEL_25;
        case 19:
          OUTLINED_FUNCTION_0_43(20);
          v37 = (uint64_t *)&unk_257752AD7;
          goto LABEL_25;
        case 20:
          v37 = (uint64_t *)&unk_257752ADA;
LABEL_25:
          v43 = 3;
LABEL_26:
          v30 = OUTLINED_FUNCTION_8_38(v33, 1u, v43, v37);
          v31 = v26;
          if ((_DWORD)v30)
            continue;
LABEL_35:
          v45 = 15;
          goto LABEL_36;
        case 23:
          OUTLINED_FUNCTION_0_43(25);
          v40 = (uint64_t *)&unk_257752ABA;
LABEL_29:
          v44 = 2;
          goto LABEL_33;
        case 24:
          goto LABEL_34;
        case 25:
          OUTLINED_FUNCTION_0_43(26);
          v40 = (uint64_t *)&unk_257752AD1;
          goto LABEL_32;
        case 26:
          v40 = (uint64_t *)&unk_257752AD7;
LABEL_32:
          v44 = 3;
LABEL_33:
          v30 = OUTLINED_FUNCTION_8_38(v33, 1u, v44, v40);
          v31 = v26;
          if ((_DWORD)v30)
            continue;
LABEL_34:
          v45 = 24;
LABEL_36:
          savescptr(v0, v45, (uint64_t)&v55);
LABEL_37:
          WORD1(v54) = *(_WORD *)(v0 + 2286);
LABEL_38:
          if (*(unsigned __int16 *)(v0 + 2286) != WORD1(v54))
            goto LABEL_40;
LABEL_39:
          *(_QWORD *)(v2 + 8) = v56;
          v1[1] = HIWORD(v54);
          OUTLINED_FUNCTION_7_38();
          break;
        case 27:
LABEL_44:
          HIWORD(v54) = *(_WORD *)(v0 + 2286);
          goto LABEL_37;
        case 28:
LABEL_45:
          v45 = 28;
          goto LABEL_36;
        case 31:
LABEL_48:
          v45 = 31;
          goto LABEL_36;
        case 33:
          bspop_boa(v0);
          WORD1(v54) = *(_WORD *)(v0 + 2286);
          v56 = v59;
          goto LABEL_38;
        case 35:
LABEL_51:
          v45 = 35;
          goto LABEL_36;
        default:
          goto LABEL_40;
      }
      break;
    }
  }
  OUTLINED_FUNCTION_6_39();
}

uint64_t is_kor_modal(uint64_t a1, uint64_t a2, __int16 *a3, __int16 *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  _BYTE v60[188];
  int v61;
  _QWORD v62[2];
  _QWORD v63[4];
  _BYTE v64[10];
  _BYTE v65[9];
  _BYTE v66[9];
  int v67[48];
  uint64_t v68;

  v68 = *MEMORY[0x24BDAC8D0];
  memset(v63, 0, sizeof(v63));
  v62[0] = 0;
  v62[1] = 0;
  v61 = 0;
  bzero(v60, 0xB8uLL);
  bzero(v67, 0xC0uLL);
  v7 = setjmp(v67);
  if (!(_DWORD)v7
    && !OUTLINED_FUNCTION_17_37(v7, (uint64_t)v60, (uint64_t)v66, (uint64_t)v65, (uint64_t)v64, (uint64_t)v67))
  {
    v8 = OUTLINED_FUNCTION_12_38();
    OUTLINED_FUNCTION_19_36(v8, v9, v10, v11, v12, v13, v14, v15);
    OUTLINED_FUNCTION_19_36(a1, (uint64_t)v63, a3, v16, v17, v18, v19, v20);
    OUTLINED_FUNCTION_19_36(a1, (uint64_t)v62, a4, v21, v22, v23, v24, v25);
    v61 = 65532;
    OUTLINED_FUNCTION_15_37();
    OUTLINED_FUNCTION_2_40(11);
    v26 = OUTLINED_FUNCTION_12_38();
    v29 = lpta_rpta_loadp(v26, v27, v28);
    if (!OUTLINED_FUNCTION_9_38(v29, 3, 0))
    {
LABEL_4:
      copyvar(a1, (unsigned __int16 *)&v61, (__int16 *)(a1 + 2288));
      v30 = OUTLINED_FUNCTION_16_37();
      do
      {
        v31 = *(_QWORD *)(a1 + 104);
        if (v31)
          v32 = OUTLINED_FUNCTION_10_38(v31);
        else
          v32 = OUTLINED_FUNCTION_18_36(v30, 0);
        switch((int)v32)
        {
          case 1:
            OUTLINED_FUNCTION_2_40(16);
            OUTLINED_FUNCTION_1_41(v34, (uint64_t)v62);
            if (v35)
              goto LABEL_79;
            v36 = 17;
            goto LABEL_25;
          case 2:
            OUTLINED_FUNCTION_2_40(23);
            OUTLINED_FUNCTION_1_41(v37, (uint64_t)v62);
            if (v38)
              goto LABEL_79;
            v36 = 24;
            goto LABEL_25;
          case 3:
            OUTLINED_FUNCTION_1_41(v32, (uint64_t)v62);
            if ((_DWORD)v57)
              goto LABEL_79;
            v58 = (uint64_t *)&unk_257752ABE;
            goto LABEL_77;
          case 4:
            OUTLINED_FUNCTION_2_40(31);
            OUTLINED_FUNCTION_1_41(v39, (uint64_t)v62);
            if ((_DWORD)v40 || OUTLINED_FUNCTION_8_38(v40, 1u, 2u, (uint64_t *)&unk_257752AC0))
              goto LABEL_79;
            v36 = 32;
            goto LABEL_25;
          case 5:
            OUTLINED_FUNCTION_1_41(v32, (uint64_t)v62);
            if ((_DWORD)v57)
              goto LABEL_79;
            v58 = (uint64_t *)&unk_257752AC2;
LABEL_77:
            if (!OUTLINED_FUNCTION_8_38(v57, 1u, 2u, v58))
              goto LABEL_78;
            goto LABEL_79;
          case 6:
            OUTLINED_FUNCTION_2_40(35);
            OUTLINED_FUNCTION_1_41(v41, (uint64_t)v62);
            if (v42)
              goto LABEL_79;
            OUTLINED_FUNCTION_0_43(36);
            v33 = (uint64_t *)&unk_257752AC4;
            goto LABEL_61;
          case 7:
            OUTLINED_FUNCTION_2_40(41);
            OUTLINED_FUNCTION_1_41(v43, (uint64_t)v62);
            if (v44)
              goto LABEL_79;
            v45 = 42;
LABEL_33:
            OUTLINED_FUNCTION_0_43(v45);
            v33 = (uint64_t *)&unk_257752ABE;
            goto LABEL_61;
          case 8:
            OUTLINED_FUNCTION_2_40(45);
            OUTLINED_FUNCTION_1_41(v46, (uint64_t)v62);
            if (v47)
              goto LABEL_79;
            v36 = 46;
            goto LABEL_25;
          case 9:
            OUTLINED_FUNCTION_2_40(53);
            OUTLINED_FUNCTION_1_41(v48, (uint64_t)v62);
            if (v49)
              goto LABEL_79;
            v36 = 54;
LABEL_25:
            OUTLINED_FUNCTION_0_43(v36);
            v33 = (uint64_t *)&unk_257752AB1;
            goto LABEL_65;
          case 10:
            OUTLINED_FUNCTION_2_40(66);
            OUTLINED_FUNCTION_1_41(v50, (uint64_t)v62);
            if (v51)
              goto LABEL_79;
            OUTLINED_FUNCTION_0_43(67);
            v33 = (uint64_t *)&unk_257752AB4;
            goto LABEL_65;
          case 12:
            goto LABEL_4;
          case 13:
          case 16:
          case 22:
          case 23:
          case 30:
          case 31:
          case 34:
          case 35:
          case 41:
          case 45:
          case 53:
          case 66:
            goto LABEL_79;
          case 15:
            goto LABEL_80;
          case 17:
            v52 = 19;
            goto LABEL_48;
          case 18:
          case 25:
          case 33:
          case 37:
          case 43:
          case 47:
          case 55:
          case 68:
            goto LABEL_78;
          case 19:
            v53 = 20;
            goto LABEL_60;
          case 20:
            v54 = 21;
            goto LABEL_64;
          case 21:
          case 29:
          case 52:
          case 65:
            v33 = (uint64_t *)&unk_257752ABC;
            goto LABEL_61;
          case 24:
            v52 = 26;
            goto LABEL_48;
          case 26:
            v45 = 27;
            goto LABEL_33;
          case 27:
            v53 = 28;
            goto LABEL_60;
          case 28:
            v54 = 29;
            goto LABEL_64;
          case 32:
            goto LABEL_49;
          case 36:
            OUTLINED_FUNCTION_0_43(38);
            v33 = (uint64_t *)&unk_257752AF2;
            goto LABEL_57;
          case 38:
            OUTLINED_FUNCTION_0_43(39);
            v33 = (uint64_t *)&unk_257752B0C;
            v55 = 7;
            goto LABEL_62;
          case 39:
            OUTLINED_FUNCTION_0_43(40);
            v33 = (uint64_t *)&unk_257752B13;
            v55 = 9;
            goto LABEL_62;
          case 40:
            v33 = (uint64_t *)&unk_257752B1C;
            v55 = 11;
            goto LABEL_62;
          case 42:
            OUTLINED_FUNCTION_0_43(44);
            v33 = (uint64_t *)&unk_257752AE6;
            goto LABEL_55;
          case 44:
            v33 = (uint64_t *)&unk_257752AC2;
            goto LABEL_61;
          case 46:
            v52 = 48;
            goto LABEL_48;
          case 48:
            OUTLINED_FUNCTION_0_43(49);
            v33 = (uint64_t *)&unk_257752ADD;
            goto LABEL_70;
          case 49:
            OUTLINED_FUNCTION_0_43(50);
            v33 = (uint64_t *)&unk_257752AF7;
            goto LABEL_57;
          case 50:
            v53 = 51;
            goto LABEL_60;
          case 51:
            v54 = 52;
            goto LABEL_64;
          case 54:
            v52 = 56;
LABEL_48:
            OUTLINED_FUNCTION_0_43(v52);
LABEL_49:
            v33 = (uint64_t *)&unk_257752AB2;
            goto LABEL_65;
          case 56:
            OUTLINED_FUNCTION_0_43(57);
            v33 = (uint64_t *)&unk_257752AC6;
            goto LABEL_61;
          case 57:
            OUTLINED_FUNCTION_0_43(58);
            v33 = (uint64_t *)&unk_257752AEA;
            goto LABEL_55;
          case 58:
            OUTLINED_FUNCTION_0_43(59);
            v33 = (uint64_t *)&unk_257752AE0;
            goto LABEL_70;
          case 59:
            OUTLINED_FUNCTION_0_43(60);
            v33 = (uint64_t *)&unk_257752AFC;
            goto LABEL_57;
          case 60:
            OUTLINED_FUNCTION_0_43(61);
            v33 = (uint64_t *)&unk_257752AEE;
LABEL_55:
            v55 = 4;
            goto LABEL_62;
          case 61:
            OUTLINED_FUNCTION_0_43(62);
            v33 = (uint64_t *)&unk_257752B01;
LABEL_57:
            v55 = 5;
            goto LABEL_62;
          case 62:
            OUTLINED_FUNCTION_0_43(63);
            v33 = (uint64_t *)&unk_257752AC8;
            goto LABEL_61;
          case 63:
            v53 = 64;
LABEL_60:
            OUTLINED_FUNCTION_0_43(v53);
            v33 = (uint64_t *)&unk_257752AB6;
            goto LABEL_61;
          case 64:
            v54 = 65;
LABEL_64:
            OUTLINED_FUNCTION_0_43(v54);
            v33 = (uint64_t *)&unk_257752AB3;
            goto LABEL_65;
          case 67:
            OUTLINED_FUNCTION_0_43(69);
            v33 = (uint64_t *)&unk_257752ACA;
            goto LABEL_61;
          case 69:
            OUTLINED_FUNCTION_0_43(70);
            v33 = (uint64_t *)&unk_257752AE3;
LABEL_70:
            v55 = 3;
            goto LABEL_62;
          case 70:
            OUTLINED_FUNCTION_0_43(71);
            v33 = (uint64_t *)&unk_257752AB5;
LABEL_65:
            v56 = a1;
            v55 = 1;
            break;
          case 71:
            v33 = (uint64_t *)&unk_257752ACC;
LABEL_61:
            v55 = 2;
LABEL_62:
            v56 = a1;
            break;
          default:
            goto LABEL_81;
        }
        v30 = test_string_s(v56, 1u, v55, v33);
      }
      while ((_DWORD)v30);
LABEL_78:
      HIWORD(v61) = *(_WORD *)(a1 + 2286);
LABEL_79:
      if (*(unsigned __int16 *)(a1 + 2286) == HIWORD(v61))
      {
LABEL_80:
        OUTLINED_FUNCTION_7_38();
        return 0;
      }
    }
  }
LABEL_81:
  OUTLINED_FUNCTION_7_38();
  return 94;
}

double OUTLINED_FUNCTION_0_43@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_1_41(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

void OUTLINED_FUNCTION_2_40(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

uint64_t OUTLINED_FUNCTION_3_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_4_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

void OUTLINED_FUNCTION_5_39(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_7_38()
{
  uint64_t v0;

  vretproc(v0);
}

uint64_t OUTLINED_FUNCTION_8_38(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_9_38(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD *v3;

  return actd_lookup(v3, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_10_38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

uint64_t OUTLINED_FUNCTION_11_38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_12_38()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_13_37()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_15_37()
{
  uint64_t v0;

  return fence_39(v0);
}

uint64_t OUTLINED_FUNCTION_16_37()
{
  uint64_t v0;

  return actd_goto(v0);
}

uint64_t OUTLINED_FUNCTION_17_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_18_36(uint64_t a1, int a2)
{
  _QWORD *v2;

  return vback(v2, a2);
}

void OUTLINED_FUNCTION_19_36(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void *fence_40(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
  return memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
}

void kor_words_no_insert_l_bef_y()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE v94[5];
  _BYTE v95[7];
  uint64_t v96;

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v36, v38, v40, v42, v44, v46, v48, v50, v52, v54, v56,
    v58,
    v60,
    v62,
    v64,
    v66,
    v68,
    v70,
    v72,
    v74,
    v76,
    v78,
    v80,
    v82,
    v84,
    SHIDWORD(v84),
    v86,
    v88,
    v90,
    v92);
  OUTLINED_FUNCTION_11_39();
  v9 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v9)
  {
    v17 = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13, v14, v15, v16, v37, v39, v41, v43, v45, v47, v49, v51, v53, v55, v57,
            v59,
            v61,
            v63,
            v65,
            v67,
            v69,
            v71,
            v73,
            v75,
            v77,
            v79,
            v81,
            v83,
            v85,
            v87,
            v89,
            v91,
            v93,
            *(int *)v94,
            v94[4],
            *(int *)v95,
            *(__int16 *)&v95[4],
            v95[6],
            v96,
            SWORD2(v96),
            SBYTE6(v96),
            SHIBYTE(v96));
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_4_40(v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_7_39(v25, v26, v27, v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_18_37();
      OUTLINED_FUNCTION_2_41(22);
      v33 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v33, 4, 0))
      {
        OUTLINED_FUNCTION_39_27();
        while (2)
        {
          OUTLINED_FUNCTION_12_39();
          OUTLINED_FUNCTION_25_33();
          v34 = *(_QWORD *)(v0 + 104);
          if (v34)
            OUTLINED_FUNCTION_16_38(v34);
          else
            OUTLINED_FUNCTION_22_34();
          OUTLINED_FUNCTION_36_30();
          switch(v35)
          {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
              OUTLINED_FUNCTION_35_30();
              break;
            case 22:
              continue;
            case 23:
            case 26:
              OUTLINED_FUNCTION_19_37();
              break;
            default:
              goto LABEL_4;
          }
          break;
        }
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_17_38();
}

void kor_words_to_insert_l_bef_i()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t *v34;
  int v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t *v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43[23];
  int v44;
  int v45;
  uint64_t v46[4];
  _BYTE v47[10];
  _BYTE v48[9];
  _BYTE v49[9];
  _BYTE v50[192];

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_30_31(v1, v2, v3, v4, v5, v6, v7, v8, v43[0], v43[1], v43[2], v43[3], v43[4], v43[5], v43[6], v43[7], v43[8], v43[9], v43[10],
    v43[11],
    v43[12],
    v43[13],
    v43[14],
    v43[15],
    v43[16],
    v43[17],
    v43[18],
    v43[19],
    v43[20],
    v43[21],
    v43[22],
    v44,
    v45,
    v46[0],
    v46[1],
    v46[2],
    v46[3]);
  OUTLINED_FUNCTION_28_31(v9, 0xC0uLL);
  v10 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v10)
  {
    v11 = OUTLINED_FUNCTION_24_33(v10, (uint64_t)v43, (uint64_t)v49, (uint64_t)v48, (uint64_t)v47, (uint64_t)v50);
    if (!(_DWORD)v11)
    {
      OUTLINED_FUNCTION_4_40(v11, v12, v13, v14, v15, v16, v17, v18);
      OUTLINED_FUNCTION_7_39(v19, v20, v21, v22, v23, v24, v25, v26);
      OUTLINED_FUNCTION_40_25();
      OUTLINED_FUNCTION_2_41(11);
      v27 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v27, 5, 0))
      {
        while (2)
        {
          copyvar(v0, (unsigned __int16 *)&v45, (__int16 *)(v0 + 2288));
          OUTLINED_FUNCTION_25_33();
LABEL_5:
          v28 = *(_QWORD *)(v0 + 104);
          if (v28)
            OUTLINED_FUNCTION_16_38(v28);
          else
            OUTLINED_FUNCTION_22_34();
          OUTLINED_FUNCTION_36_30();
          switch(v30)
          {
            case 0:
            case 3:
            case 7:
            case 9:
              OUTLINED_FUNCTION_1_42(v29, (uint64_t)v46);
              if (!v35)
                goto LABEL_16;
              break;
            case 1:
            case 4:
            case 5:
              OUTLINED_FUNCTION_1_42(v29, (uint64_t)v46);
              if (v40)
                break;
              OUTLINED_FUNCTION_20_36();
              goto LABEL_19;
            case 2:
              OUTLINED_FUNCTION_1_42(v29, (uint64_t)v46);
              if (!v41)
                goto LABEL_16;
              break;
            case 6:
              OUTLINED_FUNCTION_41_25();
              lpta_loadp_setscan_r(v0, (uint64_t)v46);
              if (v31 || test_string_s(v0, 1u, 1u, (uint64_t *)&_MergedGlobals_29))
                break;
              bspush_ca_scan(v0, 24);
              v32 = v0;
              v33 = 2;
              v34 = (uint64_t *)&unk_257752B32;
              goto LABEL_13;
            case 8:
              OUTLINED_FUNCTION_1_42(v29, (uint64_t)v46);
              if (v42)
                break;
LABEL_16:
              OUTLINED_FUNCTION_21_35();
LABEL_19:
              if (!OUTLINED_FUNCTION_23_34(v36, v37, v38, v39))
                goto LABEL_20;
              break;
            case 11:
              continue;
            case 23:
              v32 = v0;
              v33 = 4;
              v34 = (uint64_t *)&unk_257752C39;
LABEL_13:
              if (!test_string_s(v32, 1u, v33, v34))
                goto LABEL_20;
              goto LABEL_5;
            case 24:
LABEL_20:
              HIWORD(v45) = *(_WORD *)(v0 + 2286);
              break;
            default:
              goto LABEL_21;
          }
          break;
        }
      }
    }
  }
LABEL_21:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_34_30();
}

void kor_words_no_insert_n_bef_y()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t *v36;
  uint64_t v37[23];
  int v38;
  int v39;
  uint64_t v40[2];
  uint64_t v41[2];
  char v42[10];
  char v43[9];
  char v44[9];
  char v45[192];

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_30_31(v1, v2, v3, v4, v5, v6, v7, v8, v37[0], v37[1], v37[2], v37[3], v37[4], v37[5], v37[6], v37[7], v37[8], v37[9], v37[10],
    v37[11],
    v37[12],
    v37[13],
    v37[14],
    v37[15],
    v37[16],
    v37[17],
    v37[18],
    v37[19],
    v37[20],
    v37[21],
    v37[22],
    v38,
    v39,
    v40[0],
    v40[1],
    v41[0],
    v41[1]);
  OUTLINED_FUNCTION_28_31(v9, 0xC0uLL);
  v10 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v10)
  {
    v11 = OUTLINED_FUNCTION_24_33(v10, (uint64_t)v37, (uint64_t)v44, (uint64_t)v43, (uint64_t)v42, (uint64_t)v45);
    if (!(_DWORD)v11)
    {
      OUTLINED_FUNCTION_4_40(v11, v12, v13, v14, v15, v16, v17, v18);
      OUTLINED_FUNCTION_7_39(v19, v20, v21, v22, v23, v24, v25, v26);
      OUTLINED_FUNCTION_40_25();
      OUTLINED_FUNCTION_2_41(49);
      v27 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v27, 6, 0))
      {
        v28 = 0;
LABEL_6:
        OUTLINED_FUNCTION_12_39();
        v29 = OUTLINED_FUNCTION_25_33();
        v30 = v28;
        while (2)
        {
          v31 = *(_QWORD *)(v0 + 104);
          if (v31)
          {
            OUTLINED_FUNCTION_16_38(v31);
            v28 = v32;
          }
          else
          {
            OUTLINED_FUNCTION_26_33(v29, v30);
            v28 = 0;
          }
          OUTLINED_FUNCTION_36_30();
          switch(v33)
          {
            case 0:
              OUTLINED_FUNCTION_41_25();
              bspush_ca_boa(v0);
              lpta_loadp_setscan_r(v0, (uint64_t)v40);
              v30 = v28;
              if ((_DWORD)v29)
                continue;
              v34 = v0;
              v35 = 1;
              v36 = (uint64_t *)&unk_257752B29;
              goto LABEL_15;
            case 1:
              starttest(v0, 57);
              bspush_ca_boa(v0);
              lpta_loadp_setscan_l(v0, (uint64_t)v41);
              v30 = v28;
              if ((_DWORD)v29)
                continue;
              v34 = v0;
              v35 = 3;
              v36 = (uint64_t *)&unk_257752B97;
LABEL_15:
              v29 = test_string_s(v34, 1u, v35, v36);
              if ((_DWORD)v29)
                v30 = v28;
              else
                v30 = 1;
              continue;
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
              goto LABEL_19;
            case 49:
              goto LABEL_6;
            case 54:
            case 57:
              OUTLINED_FUNCTION_38_29();
LABEL_19:
              HIWORD(v39) = *(_WORD *)(v0 + 2286);
              break;
            default:
              goto LABEL_4;
          }
          break;
        }
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_34_30();
}

void kor_words_to_insert_n_bef_i()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  unsigned int v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  unsigned int v101;
  unsigned int v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  unsigned int v126;
  unsigned int v127;
  uint64_t *v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char v246;
  uint64_t v247;
  uint64_t v248;
  _BYTE v249[5];
  _BYTE v250[7];
  uint64_t v251;

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v137, v141, v145, v149, v153, v157, v161, v165, v169, v173, v177,
    v181,
    v185,
    v189,
    v193,
    v197,
    v201,
    v205,
    v209,
    v213,
    v217,
    v221,
    v225,
    v229,
    v233,
    SHIDWORD(v233),
    v237,
    v241,
    v244,
    v247);
  OUTLINED_FUNCTION_11_39();
  v9 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v9)
  {
    v17 = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13, v14, v15, v16, v138, v142, v146, v150, v154, v158, v162, v166, v170, v174, v178,
            v182,
            v186,
            v190,
            v194,
            v198,
            v202,
            v206,
            v210,
            v214,
            v218,
            v222,
            v226,
            v230,
            v234,
            v238,
            v242,
            v245,
            v248,
            *(int *)v249,
            v249[4],
            *(int *)v250,
            *(__int16 *)&v250[4],
            v250[6],
            v251,
            SWORD2(v251),
            SBYTE6(v251),
            SHIBYTE(v251));
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_4_40(v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_7_39(v25, v26, v27, v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_18_37();
      OUTLINED_FUNCTION_2_41(40);
      v33 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v33, 7, 0))
      {
        OUTLINED_FUNCTION_39_27();
        v34 = 0;
LABEL_5:
        OUTLINED_FUNCTION_12_39();
        v35 = OUTLINED_FUNCTION_25_33();
        v36 = v34;
        while (2)
        {
          v37 = *(_QWORD *)(v0 + 104);
          if (v37)
          {
            OUTLINED_FUNCTION_16_38(v37);
            v34 = v38;
          }
          else
          {
            OUTLINED_FUNCTION_26_33(v35, v36);
            v34 = 0;
          }
          OUTLINED_FUNCTION_36_30();
          switch(v46)
          {
            case 0:
            case 1:
            case 2:
            case 4:
            case 8:
            case 9:
            case 11:
            case 21:
            case 31:
            case 36:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (!v129)
                goto LABEL_40;
              goto LABEL_43;
            case 3:
            case 6:
            case 14:
            case 15:
            case 16:
            case 18:
            case 20:
            case 24:
            case 27:
            case 28:
            case 29:
            case 32:
            case 33:
            case 34:
            case 37:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (!v124)
                goto LABEL_38;
              goto LABEL_43;
            case 5:
            case 7:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (!v130)
                goto LABEL_38;
              goto LABEL_43;
            case 10:
              OUTLINED_FUNCTION_2_41(56);
              OUTLINED_FUNCTION_0_44(v47, v48, v49, v50, v51, v52, v53, v54, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v55)
                goto LABEL_43;
              OUTLINED_FUNCTION_3_41(57);
              goto LABEL_20;
            case 12:
              OUTLINED_FUNCTION_2_41(62);
              OUTLINED_FUNCTION_0_44(v56, v57, v58, v59, v60, v61, v62, v63, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v64)
                goto LABEL_43;
              OUTLINED_FUNCTION_20_36();
              if (OUTLINED_FUNCTION_23_34(v65, v66, v67, v68))
                goto LABEL_43;
              OUTLINED_FUNCTION_6_40();
              OUTLINED_FUNCTION_9_39(v69, v70, v71, v72, v73, v74, v75, v76, v140, v144, v148, v152, v156, v160, v164, v168, v172, v176, v180,
                v184,
                v188,
                v192,
                v196,
                v200,
                v204,
                v208,
                v212,
                v216,
                v220,
                v224,
                v228,
                v232,
                v236,
                v240,
                v243,
                v246);
              v36 = v34;
              if ((_DWORD)v35)
                continue;
              OUTLINED_FUNCTION_3_41(64);
              OUTLINED_FUNCTION_20_36();
              goto LABEL_32;
            case 13:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (!v131)
                goto LABEL_38;
              goto LABEL_43;
            case 17:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v132)
                goto LABEL_43;
LABEL_38:
              OUTLINED_FUNCTION_20_36();
              goto LABEL_41;
            case 19:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v133)
                goto LABEL_43;
              OUTLINED_FUNCTION_32_31();
              goto LABEL_41;
            case 22:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v134)
                goto LABEL_43;
LABEL_40:
              OUTLINED_FUNCTION_21_35();
              goto LABEL_41;
            case 23:
              OUTLINED_FUNCTION_2_41(76);
              OUTLINED_FUNCTION_0_44(v81, v82, v83, v84, v85, v86, v87, v88, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v89)
                goto LABEL_43;
              v90 = 77;
              goto LABEL_23;
            case 25:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (!v135)
                goto LABEL_58;
              goto LABEL_43;
            case 26:
              OUTLINED_FUNCTION_2_41(81);
              OUTLINED_FUNCTION_0_44(v91, v92, v93, v94, v95, v96, v97, v98, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v99)
                goto LABEL_43;
              OUTLINED_FUNCTION_3_41(82);
LABEL_20:
              OUTLINED_FUNCTION_29_31();
              goto LABEL_35;
            case 30:
              OUTLINED_FUNCTION_2_41(87);
              OUTLINED_FUNCTION_0_44(v104, v105, v106, v107, v108, v109, v110, v111, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v112)
                goto LABEL_43;
              v90 = 88;
LABEL_23:
              OUTLINED_FUNCTION_3_41(v90);
              goto LABEL_30;
            case 35:
              OUTLINED_FUNCTION_2_41(94);
              OUTLINED_FUNCTION_0_44(v113, v114, v115, v116, v117, v118, v119, v120, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if ((_DWORD)v121
                || OUTLINED_FUNCTION_33_31(v121, v122, v123, (uint64_t *)&_MergedGlobals_29))
              {
                goto LABEL_43;
              }
              OUTLINED_FUNCTION_3_41(95);
              goto LABEL_28;
            case 38:
              OUTLINED_FUNCTION_0_44(v35, v39, v40, v41, v42, v43, v44, v45, v139, v143, v147, v151, v155, v159, v163, v167, v171, v175, v179,
                v183,
                v187,
                v191,
                v195,
                v199,
                v203,
                v207,
                v211,
                v215,
                v219,
                v223,
                v227,
                v231,
                v235,
                v239);
              if (v136)
                goto LABEL_43;
LABEL_58:
              OUTLINED_FUNCTION_29_31();
LABEL_41:
              if (!OUTLINED_FUNCTION_23_34(v125, v126, v127, v128))
                goto LABEL_42;
              goto LABEL_43;
            case 40:
              goto LABEL_5;
            case 41:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 60:
            case 61:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 78:
            case 79:
            case 80:
            case 83:
            case 84:
            case 85:
            case 86:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 96:
            case 97:
            case 98:
              goto LABEL_43;
            case 56:
              OUTLINED_FUNCTION_3_41(59);
LABEL_28:
              OUTLINED_FUNCTION_20_36();
              goto LABEL_35;
            case 57:
            case 77:
            case 82:
            case 88:
            case 95:
              goto LABEL_42;
            case 58:
              OUTLINED_FUNCTION_3_41(60);
              goto LABEL_30;
            case 59:
            case 76:
            case 87:
LABEL_30:
              OUTLINED_FUNCTION_32_31();
              goto LABEL_35;
            case 62:
              OUTLINED_FUNCTION_38_29();
              goto LABEL_42;
            case 63:
              OUTLINED_FUNCTION_29_31();
LABEL_32:
              v35 = OUTLINED_FUNCTION_23_34(v77, v78, v79, v80);
              v36 = v34;
              if (!(_DWORD)v35)
                goto LABEL_33;
              continue;
            case 64:
LABEL_33:
              v36 = 1;
              continue;
            case 81:
            case 94:
              OUTLINED_FUNCTION_21_35();
LABEL_35:
              v35 = OUTLINED_FUNCTION_23_34(v100, v101, v102, v103);
              v36 = v34;
              if ((_DWORD)v35)
                continue;
LABEL_42:
              OUTLINED_FUNCTION_35_30();
LABEL_43:
              OUTLINED_FUNCTION_19_37();
              break;
            default:
              goto LABEL_44;
          }
          break;
        }
      }
    }
  }
LABEL_44:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_17_38();
}

void kor_words_to_lateralize()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  int v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  int v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  int v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  int v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  int v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  int v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  int v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  int v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  int v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  int v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  int v389;
  uint64_t *v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  uint64_t v394;
  unsigned int v395;
  unsigned int v396;
  uint64_t *v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  char v406;
  char v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  char v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  _BYTE v487[5];
  _BYTE v488[7];
  uint64_t v489;

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v403, v406, v409, v412, v415, v418, v421, v424, v427, v430, v433,
    v436,
    v439,
    v442,
    v445,
    v448,
    v451,
    v454,
    v457,
    v460,
    v463,
    v466,
    v469,
    v472,
    v475,
    SHIDWORD(v475),
    v478,
    v481,
    v483,
    v485);
  OUTLINED_FUNCTION_11_39();
  v9 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v9)
  {
    v17 = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13, v14, v15, v16, v404, v407, v410, v413, v416, v419, v422, v425, v428, v431, v434,
            v437,
            v440,
            v443,
            v446,
            v449,
            v452,
            v455,
            v458,
            v461,
            v464,
            v467,
            v470,
            v473,
            v476,
            v479,
            v482,
            v484,
            v486,
            *(int *)v487,
            v487[4],
            *(int *)v488,
            *(__int16 *)&v488[4],
            v488[6],
            v489,
            SWORD2(v489),
            SBYTE6(v489),
            SHIBYTE(v489));
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_4_40(v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_7_39(v25, v26, v27, v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_18_37();
      OUTLINED_FUNCTION_2_41(49);
      v33 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v33, 8, 0))
      {
        OUTLINED_FUNCTION_39_27();
LABEL_5:
        OUTLINED_FUNCTION_12_39();
        OUTLINED_FUNCTION_25_33();
        do
        {
          v34 = *(_QWORD *)(v0 + 104);
          if (v34)
            OUTLINED_FUNCTION_16_38(v34);
          else
            OUTLINED_FUNCTION_22_34();
          OUTLINED_FUNCTION_36_30();
          switch(v43)
          {
            case 0:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v401)
                goto LABEL_188;
              OUTLINED_FUNCTION_29_31();
              goto LABEL_186;
            case 1:
            case 34:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (!v400)
                goto LABEL_185;
              goto LABEL_188;
            case 2:
              OUTLINED_FUNCTION_2_41(57);
              OUTLINED_FUNCTION_0_44(v44, v45, v46, v47, v48, v49, v50, v51, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v52)
                goto LABEL_188;
              v53 = 58;
              goto LABEL_167;
            case 3:
              OUTLINED_FUNCTION_2_41(60);
              OUTLINED_FUNCTION_0_44(v54, v55, v56, v57, v58, v59, v60, v61, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v62)
                goto LABEL_188;
              v53 = 61;
              goto LABEL_167;
            case 4:
            case 12:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v393)
                goto LABEL_188;
              OUTLINED_FUNCTION_20_36();
              goto LABEL_186;
            case 5:
              OUTLINED_FUNCTION_2_41(71);
              OUTLINED_FUNCTION_0_44(v63, v64, v65, v66, v67, v68, v69, v70, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v71)
                goto LABEL_188;
              v53 = 72;
              goto LABEL_167;
            case 6:
              OUTLINED_FUNCTION_2_41(76);
              OUTLINED_FUNCTION_0_44(v72, v73, v74, v75, v76, v77, v78, v79, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v80)
                goto LABEL_188;
              v81 = 77;
              goto LABEL_156;
            case 7:
              OUTLINED_FUNCTION_2_41(79);
              OUTLINED_FUNCTION_0_44(v82, v83, v84, v85, v86, v87, v88, v89, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v90)
                goto LABEL_188;
              v91 = 80;
              goto LABEL_159;
            case 8:
              OUTLINED_FUNCTION_2_41(84);
              OUTLINED_FUNCTION_0_44(v92, v93, v94, v95, v96, v97, v98, v99, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v100)
                goto LABEL_188;
              v91 = 85;
              goto LABEL_159;
            case 9:
              OUTLINED_FUNCTION_2_41(89);
              OUTLINED_FUNCTION_0_44(v101, v102, v103, v104, v105, v106, v107, v108, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v109)
                goto LABEL_188;
              v53 = 90;
              goto LABEL_167;
            case 10:
              OUTLINED_FUNCTION_2_41(92);
              OUTLINED_FUNCTION_0_44(v110, v111, v112, v113, v114, v115, v116, v117, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v118)
                goto LABEL_188;
              v53 = 93;
              goto LABEL_167;
            case 11:
            case 35:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v398)
                goto LABEL_188;
              OUTLINED_FUNCTION_32_31();
              goto LABEL_186;
            case 13:
              OUTLINED_FUNCTION_2_41(98);
              OUTLINED_FUNCTION_0_44(v119, v120, v121, v122, v123, v124, v125, v126, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v127)
                goto LABEL_188;
              v53 = 99;
              goto LABEL_167;
            case 14:
              OUTLINED_FUNCTION_2_41(103);
              OUTLINED_FUNCTION_0_44(v128, v129, v130, v131, v132, v133, v134, v135, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v136)
                goto LABEL_188;
              v53 = 104;
              goto LABEL_167;
            case 15:
              OUTLINED_FUNCTION_2_41(106);
              OUTLINED_FUNCTION_0_44(v137, v138, v139, v140, v141, v142, v143, v144, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v145)
                goto LABEL_188;
              v53 = 107;
              goto LABEL_167;
            case 16:
            case 37:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (!v399)
                goto LABEL_185;
              goto LABEL_188;
            case 17:
              OUTLINED_FUNCTION_2_41(110);
              OUTLINED_FUNCTION_0_44(v146, v147, v148, v149, v150, v151, v152, v153, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v154)
                goto LABEL_188;
              v53 = 111;
              goto LABEL_167;
            case 18:
              OUTLINED_FUNCTION_2_41(115);
              OUTLINED_FUNCTION_0_44(v155, v156, v157, v158, v159, v160, v161, v162, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v163)
                goto LABEL_188;
              v53 = 116;
              goto LABEL_167;
            case 19:
              OUTLINED_FUNCTION_2_41(119);
              OUTLINED_FUNCTION_0_44(v164, v165, v166, v167, v168, v169, v170, v171, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v172)
                goto LABEL_188;
              v91 = 120;
              goto LABEL_159;
            case 20:
              OUTLINED_FUNCTION_2_41(124);
              OUTLINED_FUNCTION_0_44(v173, v174, v175, v176, v177, v178, v179, v180, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v181)
                goto LABEL_188;
              v53 = 125;
              goto LABEL_167;
            case 21:
              OUTLINED_FUNCTION_2_41(131);
              OUTLINED_FUNCTION_0_44(v182, v183, v184, v185, v186, v187, v188, v189, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v190)
                goto LABEL_188;
              v53 = 132;
              goto LABEL_167;
            case 22:
              OUTLINED_FUNCTION_2_41(135);
              OUTLINED_FUNCTION_0_44(v191, v192, v193, v194, v195, v196, v197, v198, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v199)
                goto LABEL_188;
              v200 = 136;
              goto LABEL_172;
            case 23:
              OUTLINED_FUNCTION_2_41(139);
              OUTLINED_FUNCTION_0_44(v201, v202, v203, v204, v205, v206, v207, v208, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v209)
                goto LABEL_188;
              v53 = 140;
              goto LABEL_167;
            case 24:
              OUTLINED_FUNCTION_2_41(142);
              OUTLINED_FUNCTION_0_44(v210, v211, v212, v213, v214, v215, v216, v217, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v218)
                goto LABEL_188;
              v91 = 143;
              goto LABEL_159;
            case 25:
              OUTLINED_FUNCTION_2_41(150);
              OUTLINED_FUNCTION_0_44(v219, v220, v221, v222, v223, v224, v225, v226, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v227)
                goto LABEL_188;
              v53 = 151;
              goto LABEL_167;
            case 26:
              OUTLINED_FUNCTION_2_41(153);
              OUTLINED_FUNCTION_0_44(v228, v229, v230, v231, v232, v233, v234, v235, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v236)
                goto LABEL_188;
              v91 = 154;
              goto LABEL_159;
            case 27:
              OUTLINED_FUNCTION_2_41(156);
              OUTLINED_FUNCTION_0_44(v237, v238, v239, v240, v241, v242, v243, v244, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v245)
                goto LABEL_188;
              v53 = 157;
              goto LABEL_167;
            case 28:
              OUTLINED_FUNCTION_2_41(166);
              OUTLINED_FUNCTION_0_44(v246, v247, v248, v249, v250, v251, v252, v253, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v254)
                goto LABEL_188;
              v81 = 167;
              goto LABEL_156;
            case 29:
              OUTLINED_FUNCTION_2_41(169);
              OUTLINED_FUNCTION_0_44(v255, v256, v257, v258, v259, v260, v261, v262, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v263)
                goto LABEL_188;
              v91 = 170;
              goto LABEL_159;
            case 30:
              OUTLINED_FUNCTION_2_41(176);
              OUTLINED_FUNCTION_0_44(v264, v265, v266, v267, v268, v269, v270, v271, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v272)
                goto LABEL_188;
              v53 = 177;
              goto LABEL_167;
            case 31:
              OUTLINED_FUNCTION_2_41(179);
              OUTLINED_FUNCTION_0_44(v273, v274, v275, v276, v277, v278, v279, v280, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v281)
                goto LABEL_188;
              v81 = 180;
              goto LABEL_156;
            case 32:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v402)
                goto LABEL_188;
LABEL_185:
              OUTLINED_FUNCTION_21_35();
LABEL_186:
              if (!OUTLINED_FUNCTION_23_34(v394, v395, v396, v397))
                goto LABEL_187;
              goto LABEL_188;
            case 33:
              OUTLINED_FUNCTION_2_41(184);
              OUTLINED_FUNCTION_0_44(v282, v283, v284, v285, v286, v287, v288, v289, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v290)
                goto LABEL_188;
              v91 = 185;
              goto LABEL_159;
            case 36:
              OUTLINED_FUNCTION_2_41(200);
              OUTLINED_FUNCTION_0_44(v291, v292, v293, v294, v295, v296, v297, v298, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v299)
                goto LABEL_188;
              v81 = 201;
              goto LABEL_156;
            case 38:
              OUTLINED_FUNCTION_2_41(206);
              OUTLINED_FUNCTION_0_44(v300, v301, v302, v303, v304, v305, v306, v307, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v308)
                goto LABEL_188;
              v200 = 207;
LABEL_172:
              OUTLINED_FUNCTION_3_41(v200);
LABEL_173:
              OUTLINED_FUNCTION_32_31();
              break;
            case 39:
              OUTLINED_FUNCTION_2_41(211);
              OUTLINED_FUNCTION_0_44(v309, v310, v311, v312, v313, v314, v315, v316, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v317)
                goto LABEL_188;
              v53 = 212;
              goto LABEL_167;
            case 40:
              OUTLINED_FUNCTION_2_41(214);
              OUTLINED_FUNCTION_0_44(v318, v319, v320, v321, v322, v323, v324, v325, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v326)
                goto LABEL_188;
              v81 = 215;
              goto LABEL_156;
            case 41:
              OUTLINED_FUNCTION_2_41(217);
              OUTLINED_FUNCTION_0_44(v327, v328, v329, v330, v331, v332, v333, v334, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v335)
                goto LABEL_188;
              v53 = 218;
              goto LABEL_167;
            case 42:
              OUTLINED_FUNCTION_2_41(220);
              OUTLINED_FUNCTION_0_44(v336, v337, v338, v339, v340, v341, v342, v343, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v344)
                goto LABEL_188;
              v53 = 221;
              goto LABEL_167;
            case 43:
              OUTLINED_FUNCTION_2_41(225);
              OUTLINED_FUNCTION_0_44(v345, v346, v347, v348, v349, v350, v351, v352, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v353)
                goto LABEL_188;
              v91 = 226;
LABEL_159:
              OUTLINED_FUNCTION_3_41(v91);
LABEL_160:
              OUTLINED_FUNCTION_20_36();
              break;
            case 44:
              OUTLINED_FUNCTION_2_41(232);
              OUTLINED_FUNCTION_0_44(v354, v355, v356, v357, v358, v359, v360, v361, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v362)
                goto LABEL_188;
              v53 = 233;
              goto LABEL_167;
            case 45:
              OUTLINED_FUNCTION_2_41(235);
              OUTLINED_FUNCTION_0_44(v363, v364, v365, v366, v367, v368, v369, v370, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v371)
                goto LABEL_188;
              v53 = 236;
              goto LABEL_167;
            case 46:
              OUTLINED_FUNCTION_2_41(239);
              OUTLINED_FUNCTION_0_44(v372, v373, v374, v375, v376, v377, v378, v379, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v380)
                goto LABEL_188;
              v53 = 240;
LABEL_167:
              OUTLINED_FUNCTION_3_41(v53);
LABEL_168:
              OUTLINED_FUNCTION_21_35();
              break;
            case 47:
              OUTLINED_FUNCTION_2_41(242);
              OUTLINED_FUNCTION_0_44(v381, v382, v383, v384, v385, v386, v387, v388, v405, v408, v411, v414, v417, v420, v423, v426, v429, v432, v435,
                v438,
                v441,
                v444,
                v447,
                v450,
                v453,
                v456,
                v459,
                v462,
                v465,
                v468,
                v471,
                v474,
                v477,
                v480);
              if (v389)
                goto LABEL_188;
              v81 = 243;
LABEL_156:
              OUTLINED_FUNCTION_3_41(v81);
LABEL_157:
              OUTLINED_FUNCTION_29_31();
              break;
            case 49:
              goto LABEL_5;
            case 50:
            case 53:
            case 54:
            case 55:
            case 56:
            case 59:
            case 69:
            case 70:
            case 75:
            case 78:
            case 83:
            case 88:
            case 91:
            case 95:
            case 96:
            case 97:
            case 102:
            case 105:
            case 108:
            case 109:
            case 114:
            case 118:
            case 123:
            case 130:
            case 134:
            case 138:
            case 141:
            case 149:
            case 152:
            case 155:
            case 165:
            case 168:
            case 175:
            case 178:
            case 182:
            case 183:
            case 197:
            case 198:
            case 199:
            case 204:
            case 205:
            case 210:
            case 213:
            case 216:
            case 219:
            case 224:
            case 231:
            case 234:
            case 238:
            case 241:
              goto LABEL_188;
            case 57:
              v390 = (uint64_t *)&unk_257752DF2;
              v391 = 1;
              v392 = 8;
              break;
            case 58:
            case 61:
            case 72:
            case 77:
            case 80:
            case 85:
            case 90:
            case 93:
            case 99:
            case 104:
            case 107:
            case 111:
            case 116:
            case 120:
            case 125:
            case 132:
            case 136:
            case 140:
            case 143:
            case 151:
            case 154:
            case 157:
            case 167:
            case 170:
            case 177:
            case 180:
            case 185:
            case 201:
            case 207:
            case 212:
            case 215:
            case 218:
            case 221:
            case 226:
            case 233:
            case 236:
            case 240:
            case 243:
              goto LABEL_187;
            case 60:
              v81 = 63;
              goto LABEL_156;
            case 62:
              v81 = 64;
              goto LABEL_156;
            case 63:
              v53 = 65;
              goto LABEL_167;
            case 64:
              v53 = 66;
              goto LABEL_167;
            case 65:
              v53 = 67;
              goto LABEL_167;
            case 66:
              v53 = 68;
              goto LABEL_167;
            case 67:
              v91 = 69;
              goto LABEL_159;
            case 68:
            case 74:
            case 82:
            case 87:
            case 113:
            case 117:
            case 122:
            case 129:
            case 133:
            case 148:
            case 150:
            case 153:
            case 164:
            case 166:
            case 196:
            case 223:
            case 230:
            case 237:
            case 239:
              goto LABEL_168;
            case 71:
              v200 = 74;
              goto LABEL_172;
            case 73:
              v81 = 75;
              goto LABEL_156;
            case 76:
            case 89:
            case 101:
            case 106:
            case 137:
            case 139:
            case 174:
            case 176:
            case 203:
            case 209:
            case 211:
            case 214:
            case 217:
              goto LABEL_160;
            case 79:
              v81 = 82;
              goto LABEL_156;
            case 81:
              v91 = 83;
              goto LABEL_159;
            case 84:
              v53 = 87;
              goto LABEL_167;
            case 86:
              v91 = 88;
              goto LABEL_159;
            case 92:
              v53 = 95;
              goto LABEL_167;
            case 94:
            case 181:
              goto LABEL_157;
            case 98:
              v91 = 101;
              goto LABEL_159;
            case 100:
              v53 = 102;
              goto LABEL_167;
            case 103:
              OUTLINED_FUNCTION_42_25();
              break;
            case 110:
              v53 = 113;
              goto LABEL_167;
            case 112:
              v53 = 114;
              goto LABEL_167;
            case 115:
              v81 = 118;
              goto LABEL_156;
            case 119:
              v200 = 122;
              goto LABEL_172;
            case 121:
              v53 = 123;
              goto LABEL_167;
            case 124:
              v200 = 127;
              goto LABEL_172;
            case 126:
              v91 = 128;
              goto LABEL_159;
            case 127:
              v53 = 129;
              goto LABEL_167;
            case 128:
              v91 = 130;
              goto LABEL_159;
            case 131:
              v53 = 134;
              goto LABEL_167;
            case 135:
              v53 = 138;
              goto LABEL_167;
            case 142:
              OUTLINED_FUNCTION_3_41(145);
              goto LABEL_168;
            case 144:
              v81 = 146;
              goto LABEL_156;
            case 145:
              v200 = 147;
              goto LABEL_172;
            case 146:
              v53 = 148;
              goto LABEL_167;
            case 147:
              OUTLINED_FUNCTION_3_41(149);
              goto LABEL_160;
            case 156:
              v200 = 159;
              goto LABEL_172;
            case 158:
              v53 = 160;
              goto LABEL_167;
            case 159:
              v91 = 161;
              goto LABEL_159;
            case 160:
              v53 = 162;
              goto LABEL_167;
            case 161:
              v91 = 163;
              goto LABEL_159;
            case 162:
              v81 = 164;
              goto LABEL_156;
            case 163:
              v91 = 165;
              goto LABEL_159;
            case 169:
              v81 = 172;
              goto LABEL_156;
            case 171:
              v53 = 173;
              goto LABEL_167;
            case 172:
              v53 = 174;
              goto LABEL_167;
            case 173:
              v53 = 175;
              goto LABEL_167;
            case 179:
              v53 = 182;
              goto LABEL_167;
            case 184:
              v53 = 187;
              goto LABEL_167;
            case 186:
              v53 = 188;
              goto LABEL_167;
            case 187:
              v53 = 189;
              goto LABEL_167;
            case 188:
              v91 = 190;
              goto LABEL_159;
            case 189:
              OUTLINED_FUNCTION_3_41(191);
              goto LABEL_157;
            case 190:
              v200 = 192;
              goto LABEL_172;
            case 191:
              v81 = 193;
              goto LABEL_156;
            case 192:
              v200 = 194;
              goto LABEL_172;
            case 193:
              v53 = 195;
              goto LABEL_167;
            case 194:
              v53 = 196;
              goto LABEL_167;
            case 195:
              v91 = 197;
              goto LABEL_159;
            case 200:
              v91 = 203;
              goto LABEL_159;
            case 202:
              v53 = 204;
              goto LABEL_167;
            case 206:
              OUTLINED_FUNCTION_3_41(209);
              goto LABEL_157;
            case 208:
              v81 = 210;
              goto LABEL_156;
            case 220:
              v81 = 223;
              goto LABEL_156;
            case 222:
              v91 = 224;
              goto LABEL_159;
            case 225:
              v53 = 228;
              goto LABEL_167;
            case 227:
              OUTLINED_FUNCTION_3_41(229);
              goto LABEL_157;
            case 228:
              v200 = 230;
              goto LABEL_172;
            case 229:
              v53 = 231;
              goto LABEL_167;
            case 232:
            case 242:
              goto LABEL_173;
            case 235:
              v200 = 238;
              goto LABEL_172;
            default:
              goto LABEL_189;
          }
        }
        while (OUTLINED_FUNCTION_23_34(v35, v391, v392, v390));
LABEL_187:
        OUTLINED_FUNCTION_35_30();
LABEL_188:
        OUTLINED_FUNCTION_19_37();
      }
    }
  }
LABEL_189:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_17_38();
}

void kor_words_not_to_palatalize()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BYTE v130[5];
  _BYTE v131[7];
  uint64_t v132;

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v46, v49, v52, v55, v58, v61, v64, v67, v70, v73, v76,
    v79,
    v82,
    v85,
    v88,
    v91,
    v94,
    v97,
    v100,
    v103,
    v106,
    v109,
    v112,
    v115,
    v118,
    SHIDWORD(v118),
    v121,
    v124,
    v126,
    v128);
  OUTLINED_FUNCTION_11_39();
  v9 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v9)
  {
    v17 = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13, v14, v15, v16, v47, v50, v53, v56, v59, v62, v65, v68, v71, v74, v77,
            v80,
            v83,
            v86,
            v89,
            v92,
            v95,
            v98,
            v101,
            v104,
            v107,
            v110,
            v113,
            v116,
            v119,
            v122,
            v125,
            v127,
            v129,
            *(int *)v130,
            v130[4],
            *(int *)v131,
            *(__int16 *)&v131[4],
            v131[6],
            v132,
            SWORD2(v132),
            SBYTE6(v132),
            SHIBYTE(v132));
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_4_40(v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_7_39(v25, v26, v27, v28, v29, v30, v31, v32);
      HIDWORD(v120) = 65532;
      fence_40(v0);
      OUTLINED_FUNCTION_2_41(3);
      v33 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v33, 9, 0))
      {
        OUTLINED_FUNCTION_39_27();
        while (2)
        {
          OUTLINED_FUNCTION_12_39();
          OUTLINED_FUNCTION_25_33();
          v34 = *(_QWORD *)(v0 + 104);
          if (v34)
            v35 = OUTLINED_FUNCTION_16_38(v34);
          else
            v35 = OUTLINED_FUNCTION_22_34();
          switch((int)v35)
          {
            case 1:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v48, v51, v54, v57, v60, v63, v66, v69, v72, v75, v78,
                v81,
                v84,
                v87,
                v90,
                v93,
                v96,
                v99,
                v102,
                v105,
                v108,
                v111,
                v114,
                v117,
                v120,
                v123);
              if (!(_DWORD)v43 && !OUTLINED_FUNCTION_33_31(v43, v44, v45, (uint64_t *)&string_56))
                goto LABEL_12;
              goto LABEL_13;
            case 2:
LABEL_12:
              OUTLINED_FUNCTION_35_30();
              goto LABEL_13;
            case 4:
              continue;
            case 5:
            case 8:
            case 9:
LABEL_13:
              OUTLINED_FUNCTION_19_37();
              break;
            default:
              goto LABEL_4;
          }
          break;
        }
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_17_38();
}

void kor_words_not_to_resyllabify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  unsigned int v100;
  unsigned int v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  unsigned int v124;
  unsigned int v125;
  uint64_t *v126;
  int v127;
  int v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE v215[5];
  _BYTE v216[7];
  uint64_t v217;

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v131, v134, v137, v140, v143, v146, v149, v152, v155, v158, v161,
    v164,
    v167,
    v170,
    v173,
    v176,
    v179,
    v182,
    v185,
    v188,
    v191,
    v194,
    v197,
    v200,
    v203,
    SHIDWORD(v203),
    v206,
    v209,
    v211,
    v213);
  OUTLINED_FUNCTION_11_39();
  v9 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v9)
  {
    v17 = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13, v14, v15, v16, v132, v135, v138, v141, v144, v147, v150, v153, v156, v159, v162,
            v165,
            v168,
            v171,
            v174,
            v177,
            v180,
            v183,
            v186,
            v189,
            v192,
            v195,
            v198,
            v201,
            v204,
            v207,
            v210,
            v212,
            v214,
            *(int *)v215,
            v215[4],
            *(int *)v216,
            *(__int16 *)&v216[4],
            v216[6],
            v217,
            SWORD2(v217),
            SBYTE6(v217),
            SHIBYTE(v217));
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_4_40(v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_7_39(v25, v26, v27, v28, v29, v30, v31, v32);
      OUTLINED_FUNCTION_18_37();
      OUTLINED_FUNCTION_2_41(23);
      v33 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v33, 10, 0))
      {
        OUTLINED_FUNCTION_39_27();
        while (2)
        {
          OUTLINED_FUNCTION_12_39();
          OUTLINED_FUNCTION_25_33();
LABEL_6:
          v34 = *(_QWORD *)(v0 + 104);
          if (v34)
            OUTLINED_FUNCTION_16_38(v34);
          else
            OUTLINED_FUNCTION_22_34();
          OUTLINED_FUNCTION_36_30();
          switch(v43)
          {
            case 0:
            case 2:
            case 3:
            case 5:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v122)
                goto LABEL_43;
              OUTLINED_FUNCTION_21_35();
              goto LABEL_47;
            case 1:
              OUTLINED_FUNCTION_2_41(30);
              OUTLINED_FUNCTION_0_44(v44, v45, v46, v47, v48, v49, v50, v51, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v52)
                goto LABEL_43;
              OUTLINED_FUNCTION_3_41(31);
              goto LABEL_38;
            case 4:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v127)
                goto LABEL_43;
              OUTLINED_FUNCTION_20_36();
              goto LABEL_47;
            case 6:
              OUTLINED_FUNCTION_2_41(38);
              OUTLINED_FUNCTION_0_44(v53, v54, v55, v56, v57, v58, v59, v60, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v61)
                goto LABEL_43;
              OUTLINED_FUNCTION_3_41(39);
              goto LABEL_23;
            case 7:
              OUTLINED_FUNCTION_2_41(41);
              OUTLINED_FUNCTION_0_44(v62, v63, v64, v65, v66, v67, v68, v69, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v70)
                goto LABEL_43;
              v71 = 42;
              goto LABEL_29;
            case 10:
              OUTLINED_FUNCTION_2_41(46);
              OUTLINED_FUNCTION_0_44(v72, v73, v74, v75, v76, v77, v78, v79, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v80)
                goto LABEL_43;
              v81 = 47;
              goto LABEL_22;
            case 15:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (!v128)
                goto LABEL_56;
              goto LABEL_43;
            case 16:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v129)
                goto LABEL_43;
              OUTLINED_FUNCTION_43_25();
              goto LABEL_47;
            case 17:
              OUTLINED_FUNCTION_2_41(58);
              OUTLINED_FUNCTION_0_44(v82, v83, v84, v85, v86, v87, v88, v89, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v90)
                goto LABEL_43;
              v81 = 59;
              goto LABEL_22;
            case 18:
              OUTLINED_FUNCTION_2_41(62);
              OUTLINED_FUNCTION_0_44(v91, v92, v93, v94, v95, v96, v97, v98, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v99)
                goto LABEL_43;
              v81 = 63;
LABEL_22:
              OUTLINED_FUNCTION_3_41(v81);
LABEL_23:
              OUTLINED_FUNCTION_20_36();
              goto LABEL_40;
            case 19:
              OUTLINED_FUNCTION_2_41(65);
              OUTLINED_FUNCTION_0_44(v103, v104, v105, v106, v107, v108, v109, v110, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v111)
                goto LABEL_43;
              OUTLINED_FUNCTION_3_41(66);
              goto LABEL_37;
            case 20:
              OUTLINED_FUNCTION_2_41(69);
              OUTLINED_FUNCTION_0_44(v112, v113, v114, v115, v116, v117, v118, v119, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v120)
                goto LABEL_43;
              OUTLINED_FUNCTION_3_41(70);
              goto LABEL_38;
            case 21:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v133, v136, v139, v142, v145, v148, v151, v154, v157, v160, v163,
                v166,
                v169,
                v172,
                v175,
                v178,
                v181,
                v184,
                v187,
                v190,
                v193,
                v196,
                v199,
                v202,
                v205,
                v208);
              if (v130)
                goto LABEL_43;
LABEL_56:
              OUTLINED_FUNCTION_29_31();
LABEL_47:
              if (!OUTLINED_FUNCTION_23_34(v123, v124, v125, v126))
                goto LABEL_42;
              goto LABEL_43;
            case 23:
              continue;
            case 24:
            case 27:
            case 28:
            case 29:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 40:
            case 43:
            case 44:
            case 45:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 61:
            case 64:
            case 68:
            case 71:
              goto LABEL_43;
            case 30:
              v71 = 33;
LABEL_29:
              OUTLINED_FUNCTION_3_41(v71);
              goto LABEL_30;
            case 31:
            case 39:
            case 42:
            case 47:
            case 59:
            case 63:
            case 66:
            case 70:
              goto LABEL_42;
            case 32:
            case 38:
            case 41:
LABEL_30:
              OUTLINED_FUNCTION_21_35();
              goto LABEL_40;
            case 46:
              OUTLINED_FUNCTION_3_41(49);
              goto LABEL_34;
            case 48:
              OUTLINED_FUNCTION_3_41(50);
              goto LABEL_34;
            case 49:
              OUTLINED_FUNCTION_3_41(51);
LABEL_34:
              v121 = OUTLINED_FUNCTION_37_30();
              goto LABEL_41;
            case 50:
            case 62:
            case 67:
              goto LABEL_38;
            case 58:
              OUTLINED_FUNCTION_3_41(61);
LABEL_38:
              OUTLINED_FUNCTION_29_31();
              goto LABEL_40;
            case 60:
            case 69:
              OUTLINED_FUNCTION_43_25();
              goto LABEL_40;
            case 65:
              OUTLINED_FUNCTION_3_41(68);
LABEL_37:
              OUTLINED_FUNCTION_32_31();
LABEL_40:
              v121 = v0;
LABEL_41:
              if (test_string_s(v121, v100, v101, v102))
                goto LABEL_6;
LABEL_42:
              OUTLINED_FUNCTION_35_30();
LABEL_43:
              OUTLINED_FUNCTION_19_37();
              break;
            default:
              goto LABEL_44;
          }
          break;
        }
      }
    }
  }
LABEL_44:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_17_38();
}

void kor_words_to_neutralize()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[5];
  _BYTE v133[7];
  uint64_t v134;

  OUTLINED_FUNCTION_15_38();
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v48, v51, v54, v57, v60, v63, v66, v69, v72, v75, v78,
    v81,
    v84,
    v87,
    v90,
    v93,
    v96,
    v99,
    v102,
    v105,
    v108,
    v111,
    v114,
    v117,
    v120,
    SHIDWORD(v120),
    v123,
    v126,
    v128,
    v130);
  OUTLINED_FUNCTION_11_39();
  v9 = OUTLINED_FUNCTION_27_31();
  if (!(_DWORD)v9)
  {
    v17 = OUTLINED_FUNCTION_8_39(v9, v10, v11, v12, v13, v14, v15, v16, v49, v52, v55, v58, v61, v64, v67, v70, v73, v76, v79,
            v82,
            v85,
            v88,
            v91,
            v94,
            v97,
            v100,
            v103,
            v106,
            v109,
            v112,
            v115,
            v118,
            v121,
            v124,
            v127,
            v129,
            v131,
            *(int *)v132,
            v132[4],
            *(int *)v133,
            *(__int16 *)&v133[4],
            v133[6],
            v134,
            SWORD2(v134),
            SBYTE6(v134),
            SHIBYTE(v134));
    if (!(_DWORD)v17)
    {
      OUTLINED_FUNCTION_4_40(v17, v18, v19, v20, v21, v22, v23, v24);
      OUTLINED_FUNCTION_7_39(v25, v26, v27, v28, v29, v30, v31, v32);
      HIDWORD(v122) = 65532;
      fence_40(v0);
      OUTLINED_FUNCTION_2_41(3);
      v33 = OUTLINED_FUNCTION_10_39();
      if (!OUTLINED_FUNCTION_14_38(v33, 11, 0))
      {
        OUTLINED_FUNCTION_39_27();
        while (2)
        {
          OUTLINED_FUNCTION_12_39();
          OUTLINED_FUNCTION_25_33();
          v34 = *(_QWORD *)(v0 + 104);
          if (v34)
            v35 = OUTLINED_FUNCTION_16_38(v34);
          else
            v35 = OUTLINED_FUNCTION_22_34();
          switch((int)v35)
          {
            case 1:
              goto LABEL_10;
            case 2:
              OUTLINED_FUNCTION_0_44(v35, v36, v37, v38, v39, v40, v41, v42, v50, v53, v56, v59, v62, v65, v68, v71, v74, v77, v80,
                v83,
                v86,
                v89,
                v92,
                v95,
                v98,
                v101,
                v104,
                v107,
                v110,
                v113,
                v116,
                v119,
                v122,
                v125);
              if (v43)
                goto LABEL_13;
              OUTLINED_FUNCTION_21_35();
              if (OUTLINED_FUNCTION_23_34(v44, v45, v46, v47))
                goto LABEL_13;
LABEL_10:
              OUTLINED_FUNCTION_35_30();
              goto LABEL_13;
            case 4:
              continue;
            case 5:
            case 8:
            case 9:
LABEL_13:
              OUTLINED_FUNCTION_19_37();
              break;
            default:
              goto LABEL_4;
          }
          break;
        }
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_13_38();
  OUTLINED_FUNCTION_17_38();
}

uint64_t kor_words_to_tensify()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  int v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unsigned int v234;
  unsigned int v235;
  uint64_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  unsigned int v247;
  unsigned int v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  int v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  int v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  int v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  int v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  int v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  int v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  int v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  int v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  int v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  int v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  int v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  int v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  int v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  int v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  int v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  unsigned int v456;
  unsigned int v457;
  uint64_t *v458;
  int v459;
  unsigned int v460;
  unsigned int v461;
  uint64_t *v462;
  int v463;
  uint64_t v464;
  int v465;
  int v466;
  int v467;
  int v468;
  int v469;
  int v470;
  int v471;
  int v472;
  int v473;
  int v474;
  int v475;
  int v476;
  int v477;
  int v478;
  int v479;
  int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  int v499;
  int v500;
  int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  int v510;
  int v511;
  int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  int v521;
  int v522;
  int v523;
  int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;
  int v541;
  int v542;
  int v543;
  int v544;
  int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  char v555;
  int v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  char v588[10];
  char v589[9];
  char v590[9];
  char v591[192];
  uint64_t v592;

  OUTLINED_FUNCTION_15_38();
  v592 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_5_40(v1, v2, v3, v4, v5, v6, v7, v8, v558, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
    v570,
    v571,
    v572,
    v573,
    v574,
    v575,
    v576,
    v577,
    v578,
    v579,
    v580,
    v581,
    v582,
    v583,
    SHIDWORD(v583),
    v584,
    v585,
    v586,
    v587);
  OUTLINED_FUNCTION_28_31(v9, 0xC0uLL);
  v10 = OUTLINED_FUNCTION_27_31();
  if ((_DWORD)v10)
    goto LABEL_353;
  v11 = OUTLINED_FUNCTION_24_33(v10, (uint64_t)&v560, (uint64_t)v590, (uint64_t)v589, (uint64_t)v588, (uint64_t)v591);
  if ((_DWORD)v11)
    goto LABEL_353;
  OUTLINED_FUNCTION_4_40(v11, v12, v13, v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_7_39(v19, v20, v21, v22, v23, v24, v25, v26);
  OUTLINED_FUNCTION_18_37();
  OUTLINED_FUNCTION_2_41(276);
  v27 = OUTLINED_FUNCTION_10_39();
  if (OUTLINED_FUNCTION_14_38(v27, 12, 0))
    goto LABEL_353;
  v28 = 0;
LABEL_5:
  copyvar(v0, (unsigned __int16 *)&v583 + 2, (__int16 *)(v0 + 2288));
  v29 = OUTLINED_FUNCTION_25_33();
  v30 = v28;
  do
  {
    while (2)
    {
      v31 = *(_QWORD *)(v0 + 104);
      if (v31)
      {
        OUTLINED_FUNCTION_16_38(v31);
        v28 = v32;
      }
      else
      {
        OUTLINED_FUNCTION_26_33(v29, v30);
        v28 = 0;
      }
      OUTLINED_FUNCTION_36_30();
      switch(v40)
      {
        case 0:
        case 1:
        case 9:
        case 10:
        case 13:
        case 14:
        case 16:
        case 25:
        case 26:
        case 29:
        case 33:
        case 36:
        case 42:
        case 43:
        case 45:
        case 48:
        case 51:
        case 52:
        case 55:
        case 288:
        case 293:
        case 300:
        case 316:
        case 321:
        case 323:
        case 326:
        case 337:
        case 341:
        case 361:
        case 374:
        case 378:
        case 387:
        case 396:
        case 402:
        case 408:
        case 413:
        case 459:
        case 467:
        case 491:
        case 499:
        case 518:
        case 539:
        case 549:
        case 572:
        case 579:
        case 584:
        case 588:
        case 592:
        case 598:
        case 604:
        case 626:
        case 632:
        case 640:
          goto LABEL_349;
        case 2:
          OUTLINED_FUNCTION_2_41(282);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v41, v42, v43, v44, v45, v46, v47, v48, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(284);
          goto LABEL_134;
        case 3:
          OUTLINED_FUNCTION_2_41(287);
          OUTLINED_FUNCTION_0_44(v49, v50, v51, v52, v53, v54, v55, v56, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v57)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(288);
          goto LABEL_149;
        case 4:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v491)
            goto LABEL_342;
          goto LABEL_350;
        case 5:
          OUTLINED_FUNCTION_2_41(291);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_9_39(v58, v59, v60, v61, v62, v63, v64, v65, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_59;
        case 6:
          OUTLINED_FUNCTION_2_41(295);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v66, v67, v68, v69, v70, v71, v72, v73, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          v74 = 297;
          goto LABEL_65;
        case 7:
          OUTLINED_FUNCTION_2_41(299);
          goto LABEL_119;
        case 8:
          OUTLINED_FUNCTION_2_41(302);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v75, v76, v77, v78, v79, v80, v81, v82, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_59;
        case 11:
          OUTLINED_FUNCTION_2_41(304);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_9_39(v83, v84, v85, v86, v87, v88, v89, v90, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(306);
          goto LABEL_132;
        case 12:
          OUTLINED_FUNCTION_2_41(309);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_9_39(v91, v92, v93, v94, v95, v96, v97, v98, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_59;
        case 15:
        case 22:
        case 76:
        case 132:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v471)
            goto LABEL_346;
          goto LABEL_350;
        case 17:
          OUTLINED_FUNCTION_2_41(312);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_9_39(v99, v100, v101, v102, v103, v104, v105, v106, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(314);
          goto LABEL_136;
        case 18:
        case 56:
        case 60:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v475)
            goto LABEL_163;
          goto LABEL_350;
        case 19:
          OUTLINED_FUNCTION_2_41(319);
          OUTLINED_FUNCTION_31_31();
          OUTLINED_FUNCTION_0_44(v107, v108, v109, v110, v111, v112, v113, v114, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          v115 = 321;
          goto LABEL_72;
        case 20:
          OUTLINED_FUNCTION_2_41(325);
          OUTLINED_FUNCTION_31_31();
          OUTLINED_FUNCTION_9_39(v116, v117, v118, v119, v120, v121, v122, v123, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_150;
        case 21:
          OUTLINED_FUNCTION_2_41(328);
          OUTLINED_FUNCTION_0_44(v124, v125, v126, v127, v128, v129, v130, v131, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v132)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(329);
          goto LABEL_149;
        case 23:
          OUTLINED_FUNCTION_2_41(332);
          goto LABEL_58;
        case 24:
          OUTLINED_FUNCTION_2_41(334);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v133, v134, v135, v136, v137, v138, v139, v140, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_59;
        case 27:
          OUTLINED_FUNCTION_2_41(336);
          goto LABEL_119;
        case 28:
        case 164:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v485)
            goto LABEL_163;
          goto LABEL_350;
        case 30:
          OUTLINED_FUNCTION_2_41(340);
          OUTLINED_FUNCTION_9_39(v141, v142, v143, v144, v145, v146, v147, v148, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          if (v149)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(341);
          goto LABEL_153;
        case 31:
          OUTLINED_FUNCTION_2_41(344);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v150, v151, v152, v153, v154, v155, v156, v157, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(346);
          goto LABEL_136;
        case 32:
          OUTLINED_FUNCTION_9_39(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          if (!v492)
            goto LABEL_346;
          goto LABEL_350;
        case 34:
          OUTLINED_FUNCTION_2_41(349);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v158, v159, v160, v161, v162, v163, v164, v165, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(351);
          goto LABEL_134;
        case 35:
          OUTLINED_FUNCTION_2_41(353);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_9_39(v166, v167, v168, v169, v170, v171, v172, v173, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(355);
          goto LABEL_134;
        case 37:
          OUTLINED_FUNCTION_2_41(360);
          OUTLINED_FUNCTION_0_44(v174, v175, v176, v177, v178, v179, v180, v181, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v182)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(361);
          goto LABEL_155;
        case 38:
          OUTLINED_FUNCTION_2_41(363);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v183, v184, v185, v186, v187, v188, v189, v190, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(365);
          goto LABEL_136;
        case 39:
          OUTLINED_FUNCTION_2_41(368);
          OUTLINED_FUNCTION_0_44(v191, v192, v193, v194, v195, v196, v197, v198, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v199)
            goto LABEL_50;
          goto LABEL_350;
        case 40:
          OUTLINED_FUNCTION_2_41(370);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v200, v201, v202, v203, v204, v205, v206, v207, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_59;
        case 41:
          OUTLINED_FUNCTION_2_41(372);
          OUTLINED_FUNCTION_31_31();
          OUTLINED_FUNCTION_0_44(v208, v209, v210, v211, v212, v213, v214, v215, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          OUTLINED_FUNCTION_3_41(374);
          v216 = (uint64_t *)&unk_257752DFA;
          goto LABEL_157;
        case 44:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v493)
            goto LABEL_344;
          goto LABEL_350;
        case 46:
          OUTLINED_FUNCTION_2_41(381);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v217, v218, v219, v220, v221, v222, v223, v224, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_111;
        case 47:
          OUTLINED_FUNCTION_2_41(383);
LABEL_58:
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v225, v226, v227, v228, v229, v230, v231, v232, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
LABEL_59:
          OUTLINED_FUNCTION_20_36();
          goto LABEL_112;
        case 49:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v494)
            goto LABEL_166;
          goto LABEL_350;
        case 50:
          OUTLINED_FUNCTION_2_41(386);
          OUTLINED_FUNCTION_0_44(v237, v238, v239, v240, v241, v242, v243, v244, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v245)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(387);
          goto LABEL_62;
        case 53:
          OUTLINED_FUNCTION_2_41(391);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_0_44(v249, v250, v251, v252, v253, v254, v255, v256, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          v74 = 393;
LABEL_65:
          OUTLINED_FUNCTION_3_41(v74);
          goto LABEL_134;
        case 54:
          OUTLINED_FUNCTION_2_41(395);
          OUTLINED_FUNCTION_0_44(v257, v258, v259, v260, v261, v262, v263, v264, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v265)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(396);
          goto LABEL_150;
        case 57:
        case 61:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v483)
            goto LABEL_340;
          goto LABEL_350;
        case 58:
        case 62:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v484)
            goto LABEL_344;
          goto LABEL_350;
        case 59:
          OUTLINED_FUNCTION_2_41(401);
          OUTLINED_FUNCTION_0_44(v266, v267, v268, v269, v270, v271, v272, v273, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v274)
            goto LABEL_350;
          v115 = 402;
          goto LABEL_72;
        case 63:
          OUTLINED_FUNCTION_2_41(407);
          OUTLINED_FUNCTION_0_44(v275, v276, v277, v278, v279, v280, v281, v282, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v283)
            goto LABEL_350;
          v115 = 408;
          goto LABEL_72;
        case 64:
        case 70:
        case 175:
        case 192:
        case 205:
        case 231:
        case 239:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v465)
            goto LABEL_340;
          goto LABEL_350;
        case 65:
        case 80:
        case 95:
        case 107:
        case 135:
        case 185:
        case 196:
        case 236:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v463)
            goto LABEL_166;
          goto LABEL_350;
        case 66:
          OUTLINED_FUNCTION_2_41(412);
          OUTLINED_FUNCTION_0_44(v284, v285, v286, v287, v288, v289, v290, v291, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v292)
            goto LABEL_350;
          v293 = 413;
          goto LABEL_103;
        case 67:
        case 134:
        case 146:
        case 148:
        case 194:
        case 202:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v469)
            goto LABEL_163;
          goto LABEL_350;
        case 68:
        case 74:
        case 75:
        case 77:
        case 78:
        case 81:
        case 84:
        case 111:
        case 122:
        case 124:
        case 129:
        case 130:
        case 141:
        case 151:
        case 152:
        case 159:
        case 160:
        case 162:
        case 170:
        case 172:
        case 173:
        case 183:
        case 198:
        case 207:
        case 222:
        case 225:
        case 234:
        case 242:
        case 243:
        case 246:
        case 249:
        case 252:
        case 253:
        case 263:
        case 264:
        case 269:
        case 270:
        case 271:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v459)
            goto LABEL_163;
          goto LABEL_350;
        case 69:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v495)
            goto LABEL_340;
          goto LABEL_350;
        case 71:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v496)
            goto LABEL_346;
          goto LABEL_350;
        case 72:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v497)
            goto LABEL_346;
          goto LABEL_350;
        case 73:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v498)
            goto LABEL_342;
          goto LABEL_350;
        case 79:
        case 163:
        case 259:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v477)
            goto LABEL_163;
          goto LABEL_350;
        case 82:
        case 90:
        case 117:
        case 158:
        case 168:
        case 209:
        case 226:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v466)
            goto LABEL_340;
          goto LABEL_350;
        case 83:
        case 88:
        case 112:
        case 195:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v472)
            goto LABEL_346;
          goto LABEL_350;
        case 85:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v499)
            goto LABEL_344;
          goto LABEL_350;
        case 86:
        case 204:
        case 245:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v478)
            goto LABEL_163;
          goto LABEL_350;
        case 87:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v500)
            goto LABEL_163;
          goto LABEL_350;
        case 89:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v501)
            goto LABEL_346;
          goto LABEL_350;
        case 91:
        case 94:
        case 109:
        case 113:
        case 115:
        case 178:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v468)
            goto LABEL_163;
          goto LABEL_350;
        case 92:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v502)
            goto LABEL_346;
          goto LABEL_350;
        case 93:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v503)
            goto LABEL_346;
          goto LABEL_350;
        case 96:
        case 169:
        case 182:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v479)
            goto LABEL_163;
          goto LABEL_350;
        case 97:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v504)
            goto LABEL_346;
          goto LABEL_350;
        case 98:
        case 100:
        case 140:
        case 150:
        case 217:
        case 241:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v470)
            goto LABEL_163;
          goto LABEL_350;
        case 99:
        case 212:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v486)
            goto LABEL_340;
          goto LABEL_350;
        case 101:
        case 104:
        case 272:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v476)
            goto LABEL_163;
          goto LABEL_350;
        case 102:
        case 188:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v487)
            goto LABEL_163;
          goto LABEL_350;
        case 103:
        case 153:
        case 193:
        case 200:
        case 201:
        case 237:
        case 238:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v467)
            goto LABEL_340;
          goto LABEL_350;
        case 105:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v505)
            goto LABEL_340;
          goto LABEL_350;
        case 106:
        case 167:
        case 223:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v480)
            goto LABEL_340;
          goto LABEL_350;
        case 108:
        case 118:
        case 131:
        case 265:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v473)
            goto LABEL_346;
          goto LABEL_350;
        case 110:
          OUTLINED_FUNCTION_2_41(458);
          OUTLINED_FUNCTION_0_44(v294, v295, v296, v297, v298, v299, v300, v301, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v302)
            goto LABEL_350;
          v293 = 459;
          goto LABEL_103;
        case 114:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v506)
            goto LABEL_350;
LABEL_166:
          v464 = OUTLINED_FUNCTION_37_30();
          goto LABEL_348;
        case 116:
          OUTLINED_FUNCTION_2_41(466);
          OUTLINED_FUNCTION_0_44(v303, v304, v305, v306, v307, v308, v309, v310, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v311)
            goto LABEL_350;
          v293 = 467;
          goto LABEL_103;
        case 119:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v507)
            goto LABEL_163;
          goto LABEL_350;
        case 120:
        case 210:
        case 221:
        case 254:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v474)
            goto LABEL_340;
          goto LABEL_350;
        case 121:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v508)
            goto LABEL_163;
          goto LABEL_350;
        case 123:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v509)
            goto LABEL_340;
          goto LABEL_350;
        case 125:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v510)
            goto LABEL_340;
          goto LABEL_350;
        case 126:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v511)
            goto LABEL_163;
          goto LABEL_350;
        case 127:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v512)
            goto LABEL_346;
          goto LABEL_350;
        case 128:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v513)
            goto LABEL_340;
          goto LABEL_350;
        case 133:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v514)
            goto LABEL_346;
          goto LABEL_350;
        case 136:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v515)
            goto LABEL_340;
          goto LABEL_350;
        case 137:
        case 189:
        case 235:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v481)
            goto LABEL_163;
          goto LABEL_350;
        case 138:
          OUTLINED_FUNCTION_2_41(490);
          OUTLINED_FUNCTION_0_44(v312, v313, v314, v315, v316, v317, v318, v319, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v320)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(491);
          goto LABEL_153;
        case 139:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v516)
            goto LABEL_346;
          goto LABEL_350;
        case 142:
        case 184:
        case 211:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v482)
            goto LABEL_340;
          goto LABEL_350;
        case 143:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v517)
            goto LABEL_340;
          goto LABEL_350;
        case 144:
          OUTLINED_FUNCTION_2_41(498);
          OUTLINED_FUNCTION_0_44(v321, v322, v323, v324, v325, v326, v327, v328, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v329)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(499);
          goto LABEL_153;
        case 145:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v518)
            goto LABEL_342;
          goto LABEL_350;
        case 147:
        case 229:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v488)
            goto LABEL_163;
          goto LABEL_350;
        case 149:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v519)
            goto LABEL_163;
          goto LABEL_350;
        case 154:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v520)
            goto LABEL_163;
          goto LABEL_350;
        case 155:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v521)
            goto LABEL_342;
          goto LABEL_350;
        case 156:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v522)
            goto LABEL_340;
          goto LABEL_350;
        case 157:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v523)
            goto LABEL_330;
          goto LABEL_350;
        case 161:
          OUTLINED_FUNCTION_2_41(517);
          OUTLINED_FUNCTION_0_44(v330, v331, v332, v333, v334, v335, v336, v337, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v338)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(518);
          goto LABEL_150;
        case 165:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v524)
            goto LABEL_340;
          goto LABEL_350;
        case 166:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v525)
            goto LABEL_163;
          goto LABEL_350;
        case 171:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v526)
            goto LABEL_340;
          goto LABEL_350;
        case 174:
        case 219:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v489)
            goto LABEL_163;
          goto LABEL_350;
        case 176:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v527)
            goto LABEL_340;
          goto LABEL_350;
        case 177:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v528)
            goto LABEL_342;
          goto LABEL_350;
        case 179:
          OUTLINED_FUNCTION_2_41(538);
          OUTLINED_FUNCTION_0_44(v339, v340, v341, v342, v343, v344, v345, v346, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v347)
            goto LABEL_350;
          v293 = 539;
          goto LABEL_103;
        case 180:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v529)
            goto LABEL_163;
          goto LABEL_350;
        case 181:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v530)
            goto LABEL_346;
          goto LABEL_350;
        case 186:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v531)
            goto LABEL_346;
          goto LABEL_350;
        case 187:
          OUTLINED_FUNCTION_2_41(548);
          OUTLINED_FUNCTION_0_44(v348, v349, v350, v351, v352, v353, v354, v355, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v356)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(549);
          goto LABEL_150;
        case 190:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v532)
            goto LABEL_340;
          goto LABEL_350;
        case 191:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v533)
            goto LABEL_342;
          goto LABEL_350;
        case 197:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v534)
            goto LABEL_344;
          goto LABEL_350;
        case 199:
        case 268:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v490)
            goto LABEL_163;
          goto LABEL_350;
        case 203:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v535)
            goto LABEL_344;
          goto LABEL_350;
        case 206:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v536)
            goto LABEL_340;
          goto LABEL_350;
        case 208:
          OUTLINED_FUNCTION_2_41(571);
          OUTLINED_FUNCTION_0_44(v357, v358, v359, v360, v361, v362, v363, v364, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v365)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(572);
          goto LABEL_150;
        case 213:
          OUTLINED_FUNCTION_2_41(578);
          OUTLINED_FUNCTION_0_44(v366, v367, v368, v369, v370, v371, v372, v373, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v374)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(579);
          goto LABEL_150;
        case 214:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v537)
            goto LABEL_346;
          goto LABEL_350;
        case 215:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v538)
            goto LABEL_340;
          goto LABEL_350;
        case 216:
          OUTLINED_FUNCTION_2_41(583);
          OUTLINED_FUNCTION_0_44(v375, v376, v377, v378, v379, v380, v381, v382, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v383)
            goto LABEL_350;
          v115 = 584;
LABEL_72:
          OUTLINED_FUNCTION_3_41(v115);
          goto LABEL_149;
        case 218:
          OUTLINED_FUNCTION_2_41(587);
          OUTLINED_FUNCTION_0_44(v384, v385, v386, v387, v388, v389, v390, v391, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v392)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(588);
          goto LABEL_152;
        case 220:
          OUTLINED_FUNCTION_2_41(591);
          OUTLINED_FUNCTION_0_44(v393, v394, v395, v396, v397, v398, v399, v400, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v401)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(592);
          goto LABEL_149;
        case 224:
          OUTLINED_FUNCTION_2_41(597);
          OUTLINED_FUNCTION_0_44(v402, v403, v404, v405, v406, v407, v408, v409, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v410)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(598);
          goto LABEL_149;
        case 227:
          OUTLINED_FUNCTION_2_41(603);
          OUTLINED_FUNCTION_0_44(v411, v412, v413, v414, v415, v416, v417, v418, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v419)
            goto LABEL_350;
          v293 = 604;
LABEL_103:
          OUTLINED_FUNCTION_3_41(v293);
          goto LABEL_150;
        case 228:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v539)
            goto LABEL_346;
          goto LABEL_350;
        case 230:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v540)
            goto LABEL_340;
          goto LABEL_350;
        case 232:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v541)
            goto LABEL_340;
          goto LABEL_350;
        case 233:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v542)
            goto LABEL_163;
          goto LABEL_350;
        case 240:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v543)
            goto LABEL_163;
          goto LABEL_350;
        case 244:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v544)
            goto LABEL_340;
          goto LABEL_350;
        case 247:
          OUTLINED_FUNCTION_2_41(625);
          OUTLINED_FUNCTION_0_44(v420, v421, v422, v423, v424, v425, v426, v427, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v428)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(626);
          goto LABEL_153;
        case 248:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v545)
            goto LABEL_340;
          goto LABEL_350;
        case 250:
          OUTLINED_FUNCTION_2_41(631);
          OUTLINED_FUNCTION_0_44(v429, v430, v431, v432, v433, v434, v435, v436, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v437)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(632);
          goto LABEL_149;
        case 251:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v546)
            goto LABEL_350;
LABEL_330:
          OUTLINED_FUNCTION_42_25();
          goto LABEL_347;
        case 255:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v547)
            goto LABEL_342;
          goto LABEL_350;
        case 256:
          OUTLINED_FUNCTION_2_41(639);
          OUTLINED_FUNCTION_0_44(v438, v439, v440, v441, v442, v443, v444, v445, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v446)
            goto LABEL_350;
          OUTLINED_FUNCTION_3_41(640);
          goto LABEL_152;
        case 257:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v548)
            goto LABEL_163;
          goto LABEL_350;
        case 258:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v549)
            goto LABEL_346;
          goto LABEL_350;
        case 260:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (!v550)
            goto LABEL_340;
          goto LABEL_350;
        case 261:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v551)
            goto LABEL_350;
LABEL_340:
          OUTLINED_FUNCTION_21_35();
          goto LABEL_347;
        case 262:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v552)
            goto LABEL_350;
LABEL_342:
          OUTLINED_FUNCTION_32_31();
          goto LABEL_347;
        case 266:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v553)
            goto LABEL_350;
LABEL_344:
          OUTLINED_FUNCTION_43_25();
          goto LABEL_347;
        case 267:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v554)
            goto LABEL_350;
LABEL_346:
          OUTLINED_FUNCTION_29_31();
          goto LABEL_347;
        case 273:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          if (v557)
            goto LABEL_350;
LABEL_163:
          OUTLINED_FUNCTION_20_36();
LABEL_347:
          v464 = v0;
LABEL_348:
          if (!test_string_s(v464, v460, v461, v462))
            goto LABEL_349;
          goto LABEL_350;
        case 274:
          OUTLINED_FUNCTION_2_41(659);
          OUTLINED_FUNCTION_6_40();
          OUTLINED_FUNCTION_9_39(v447, v448, v449, v450, v451, v452, v453, v454, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
LABEL_111:
          OUTLINED_FUNCTION_21_35();
LABEL_112:
          v29 = OUTLINED_FUNCTION_23_34(v233, v234, v235, v236);
          if ((_DWORD)v29)
            v30 = v28;
          else
            v30 = 1;
          continue;
        case 276:
          goto LABEL_5;
        case 277:
        case 280:
        case 281:
        case 286:
        case 289:
        case 290:
        case 294:
        case 298:
        case 301:
        case 303:
        case 308:
        case 310:
        case 311:
        case 317:
        case 318:
        case 324:
        case 327:
        case 330:
        case 331:
        case 333:
        case 335:
        case 338:
        case 339:
        case 343:
        case 347:
        case 348:
        case 352:
        case 359:
        case 362:
        case 367:
        case 369:
        case 371:
        case 379:
        case 380:
        case 382:
        case 384:
        case 385:
        case 390:
        case 394:
        case 397:
        case 398:
        case 399:
        case 400:
        case 403:
        case 404:
        case 405:
        case 406:
        case 409:
        case 410:
        case 411:
        case 414:
        case 415:
        case 416:
        case 417:
        case 418:
        case 419:
        case 420:
        case 421:
        case 422:
        case 423:
        case 424:
        case 425:
        case 426:
        case 427:
        case 428:
        case 429:
        case 430:
        case 431:
        case 432:
        case 433:
        case 434:
        case 435:
        case 436:
        case 437:
        case 438:
        case 439:
        case 440:
        case 441:
        case 442:
        case 443:
        case 444:
        case 445:
        case 446:
        case 447:
        case 448:
        case 449:
        case 450:
        case 451:
        case 452:
        case 453:
        case 454:
        case 455:
        case 456:
        case 457:
        case 460:
        case 461:
        case 462:
        case 463:
        case 464:
        case 465:
        case 468:
        case 469:
        case 470:
        case 471:
        case 472:
        case 473:
        case 474:
        case 475:
        case 476:
        case 477:
        case 478:
        case 479:
        case 480:
        case 481:
        case 482:
        case 483:
        case 484:
        case 485:
        case 486:
        case 487:
        case 488:
        case 489:
        case 492:
        case 493:
        case 494:
        case 495:
        case 496:
        case 497:
        case 500:
        case 501:
        case 502:
        case 503:
        case 504:
        case 505:
        case 506:
        case 507:
        case 508:
        case 509:
        case 510:
        case 511:
        case 512:
        case 513:
        case 514:
        case 515:
        case 516:
        case 520:
        case 521:
        case 522:
        case 523:
        case 524:
        case 525:
        case 526:
        case 527:
        case 528:
        case 529:
        case 530:
        case 531:
        case 532:
        case 533:
        case 534:
        case 535:
        case 536:
        case 537:
        case 540:
        case 541:
        case 542:
        case 543:
        case 544:
        case 545:
        case 546:
        case 547:
        case 550:
        case 551:
        case 552:
        case 553:
        case 554:
        case 555:
        case 556:
        case 557:
        case 558:
        case 559:
        case 560:
        case 561:
        case 562:
        case 563:
        case 564:
        case 565:
        case 566:
        case 567:
        case 568:
        case 569:
        case 570:
        case 573:
        case 574:
        case 575:
        case 576:
        case 577:
        case 580:
        case 581:
        case 582:
        case 585:
        case 586:
        case 589:
        case 590:
        case 593:
        case 594:
        case 595:
        case 596:
        case 600:
        case 601:
        case 602:
        case 605:
        case 606:
        case 607:
        case 608:
        case 609:
        case 610:
        case 611:
        case 612:
        case 613:
        case 614:
        case 615:
        case 616:
        case 617:
        case 618:
        case 619:
        case 620:
        case 621:
        case 622:
        case 623:
        case 624:
        case 628:
        case 629:
        case 630:
        case 633:
        case 634:
        case 635:
        case 636:
        case 637:
        case 638:
        case 641:
        case 642:
        case 643:
        case 644:
        case 645:
        case 646:
        case 647:
        case 648:
        case 649:
        case 650:
        case 651:
        case 652:
        case 653:
        case 654:
        case 655:
        case 656:
        case 657:
        case 658:
          goto LABEL_350;
        case 279:
          goto LABEL_352;
        case 282:
        case 295:
        case 302:
        case 304:
        case 309:
        case 332:
        case 334:
        case 344:
        case 349:
        case 353:
        case 363:
        case 370:
        case 381:
        case 383:
        case 391:
        case 659:
          OUTLINED_FUNCTION_38_29();
          goto LABEL_349;
        case 283:
          OUTLINED_FUNCTION_3_41(286);
          goto LABEL_132;
        case 284:
        case 297:
        case 306:
        case 314:
        case 346:
        case 351:
        case 355:
        case 365:
        case 393:
          goto LABEL_146;
        case 285:
          v455 = OUTLINED_FUNCTION_37_30();
          goto LABEL_145;
        case 287:
        case 458:
        case 466:
        case 490:
        case 538:
LABEL_62:
          v246 = OUTLINED_FUNCTION_37_30();
          goto LABEL_159;
        case 291:
        case 312:
          OUTLINED_FUNCTION_38_29();
LABEL_119:
          OUTLINED_FUNCTION_31_31();
          goto LABEL_120;
        case 292:
        case 299:
        case 315:
        case 336:
        case 372:
LABEL_120:
          OUTLINED_FUNCTION_44_25(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          rpta_loadpn(v0);
          v29 = compare_ptas(v0);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          v29 = testeq(v0);
          goto LABEL_160;
        case 296:
        case 307:
          goto LABEL_134;
        case 305:
          OUTLINED_FUNCTION_3_41(308);
          goto LABEL_134;
        case 313:
        case 345:
          goto LABEL_132;
        case 319:
          OUTLINED_FUNCTION_9_39(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584,
            v585,
            v586);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_149;
        case 320:
          OUTLINED_FUNCTION_3_41(323);
          goto LABEL_149;
        case 322:
        case 329:
        case 395:
        case 401:
        case 407:
        case 548:
        case 578:
        case 583:
          goto LABEL_149;
        case 325:
          OUTLINED_FUNCTION_0_44(v29, v33, v34, v35, v36, v37, v38, v39, v559, v560, v561, v562, v563, v564, v565, v566, v567, v568, v569,
            v570,
            v571,
            v572,
            v573,
            v574,
            v575,
            v576,
            v577,
            v578,
            v579,
            v580,
            v581,
            v582,
            v583,
            v584);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
          goto LABEL_140;
        case 328:
          v29 = OUTLINED_FUNCTION_33_31(v29, v33, v34, (uint64_t *)&unk_257752B2D);
          v30 = v28;
          if ((_DWORD)v29)
            continue;
LABEL_149:
          OUTLINED_FUNCTION_20_36();
          goto LABEL_158;
        case 340:
          OUTLINED_FUNCTION_3_41(343);
          goto LABEL_153;
        case 342:
          goto LABEL_140;
        case 350:
        case 358:
        case 366:
LABEL_136:
          OUTLINED_FUNCTION_21_35();
          goto LABEL_144;
        case 354:
          OUTLINED_FUNCTION_3_41(357);
          goto LABEL_143;
        case 356:
          OUTLINED_FUNCTION_3_41(358);
LABEL_132:
          OUTLINED_FUNCTION_29_31();
          goto LABEL_144;
        case 357:
          OUTLINED_FUNCTION_3_41(359);
LABEL_134:
          OUTLINED_FUNCTION_20_36();
          goto LABEL_144;
        case 360:
        case 519:
        case 571:
          goto LABEL_152;
        case 364:
          OUTLINED_FUNCTION_3_41(367);
          OUTLINED_FUNCTION_42_25();
          goto LABEL_144;
        case 368:
LABEL_50:
          test_synch((_QWORD *)v0, 369, 1u, (unsigned __int8 *)&unk_257752B2E);
          goto LABEL_160;
        case 373:
          OUTLINED_FUNCTION_3_41(376);
          goto LABEL_155;
        case 375:
          OUTLINED_FUNCTION_3_41(377);
          v216 = (uint64_t *)&unk_257752E02;
          goto LABEL_157;
        case 376:
          OUTLINED_FUNCTION_3_41(378);
LABEL_140:
          OUTLINED_FUNCTION_42_25();
          goto LABEL_158;
        case 377:
        case 627:
          goto LABEL_155;
        case 386:
          OUTLINED_FUNCTION_3_41(389);
          v216 = (uint64_t *)&unk_257752E0A;
          goto LABEL_157;
        case 388:
          OUTLINED_FUNCTION_3_41(390);
          goto LABEL_155;
        case 389:
        case 587:
        case 599:
LABEL_153:
          OUTLINED_FUNCTION_32_31();
          goto LABEL_158;
        case 392:
LABEL_143:
          OUTLINED_FUNCTION_32_31();
LABEL_144:
          v455 = v0;
LABEL_145:
          v29 = test_string_s(v455, v456, v457, v458);
          v30 = v28;
          if (!(_DWORD)v29)
LABEL_146:
            v30 = 1;
          continue;
        case 412:
        case 591:
        case 603:
        case 639:
          goto LABEL_150;
        case 498:
          v216 = (uint64_t *)&unk_257752E12;
          goto LABEL_157;
        case 517:
          OUTLINED_FUNCTION_3_41(520);
LABEL_150:
          OUTLINED_FUNCTION_21_35();
          break;
        case 597:
          OUTLINED_FUNCTION_3_41(600);
LABEL_152:
          OUTLINED_FUNCTION_29_31();
          break;
        case 625:
          OUTLINED_FUNCTION_3_41(628);
LABEL_155:
          OUTLINED_FUNCTION_43_25();
          break;
        case 631:
          v216 = (uint64_t *)&unk_257752E1A;
LABEL_157:
          v247 = 1;
          v248 = 8;
          break;
        default:
          goto LABEL_353;
      }
      break;
    }
LABEL_158:
    v246 = v0;
LABEL_159:
    v29 = test_string_s(v246, v247, v248, v216);
LABEL_160:
    v30 = v28;
  }
  while ((_DWORD)v29);
LABEL_349:
  OUTLINED_FUNCTION_35_30();
LABEL_350:
  OUTLINED_FUNCTION_19_37();
  if (!v555)
  {
LABEL_353:
    OUTLINED_FUNCTION_13_38();
    return 94;
  }
  else
  {
LABEL_352:
    OUTLINED_FUNCTION_13_38();
    return 0;
  }
}

void OUTLINED_FUNCTION_0_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  lpta_loadp_setscan_r(v34, (uint64_t)&a34);
}

void OUTLINED_FUNCTION_1_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_r(v2, a2);
}

void OUTLINED_FUNCTION_2_41(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

double OUTLINED_FUNCTION_3_41@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_4_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;

  get_parm(v8, v10, v9, 4294967290, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_5_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  a37 = 0;
  a38 = 0;
  a35 = 0;
  a36 = 0;
  a34 = 0;
  bzero(&a10, 0xB8uLL);
}

void OUTLINED_FUNCTION_6_40()
{
  uint64_t v0;

  bspush_ca_boa(v0);
}

void OUTLINED_FUNCTION_7_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;
  uint64_t v11;

  get_parm(v8, v10, v9, v11, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_8_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,int a40,__int16 a41,char a42,int a43,__int16 a44,char a45,char a46)
{
  uint64_t v46;
  uint64_t v47;

  return ventproc(v46, (uint64_t)&a10, (uint64_t)&a46, (uint64_t)&a42, (uint64_t)&a39, v47 - 248);
}

void OUTLINED_FUNCTION_9_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  uint64_t v36;

  lpta_loadp_setscan_l(v36, (uint64_t)&a36);
}

uint64_t OUTLINED_FUNCTION_10_39()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v2, v1);
}

void OUTLINED_FUNCTION_11_39()
{
  uint64_t v0;

  bzero((void *)(v0 - 248), 0xC0uLL);
}

void OUTLINED_FUNCTION_12_39()
{
  uint64_t v0;
  __int16 *v1;
  unsigned __int16 *v2;

  copyvar(v0, v2, v1);
}

void OUTLINED_FUNCTION_13_38()
{
  uint64_t v0;

  vretproc(v0);
}

uint64_t OUTLINED_FUNCTION_14_38(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD *v3;

  return actd_lookup(v3, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_16_38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = 0;
  return a1;
}

void *OUTLINED_FUNCTION_18_37()
{
  uint64_t v0;

  return fence_40(v0);
}

uint64_t OUTLINED_FUNCTION_22_34()
{
  _QWORD *v0;

  return vback(v0, 0);
}

uint64_t OUTLINED_FUNCTION_23_34(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_24_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return ventproc(v6, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_25_33()
{
  uint64_t v0;

  return actd_goto(v0);
}

uint64_t OUTLINED_FUNCTION_26_33(uint64_t a1, int a2)
{
  _QWORD *v2;

  return vback(v2, a2);
}

uint64_t OUTLINED_FUNCTION_27_31()
{
  int *v0;

  return setjmp(v0);
}

void OUTLINED_FUNCTION_28_31(uint64_t a1, size_t a2)
{
  void *v2;

  bzero(v2, a2);
}

void OUTLINED_FUNCTION_30_31(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;

  *(_QWORD *)(v38 - 96) = v37;
  a36 = 0;
  a37 = 0;
  a34 = 0;
  a35 = 0;
  a33 = 0;
  bzero(&a9, 0xB8uLL);
}

void OUTLINED_FUNCTION_31_31()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t OUTLINED_FUNCTION_33_31(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

uint64_t OUTLINED_FUNCTION_37_30()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_38_29()
{
  uint64_t v0;

  return bspop_boa(v0);
}

void *OUTLINED_FUNCTION_40_25()
{
  uint64_t v0;

  return fence_40(v0);
}

void OUTLINED_FUNCTION_41_25()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

uint64_t OUTLINED_FUNCTION_44_25(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  return lpta_loadpn(v34, &a34);
}

void *fence_41(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
  return memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
}

void is_kor_idiomatic_exp(uint64_t a1, __int16 *a2, uint64_t a3, __int16 *a4, __int16 *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int16 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  _BOOL8 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  _BOOL8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t *v60;
  int v61;
  _BOOL8 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  unsigned int v98;
  unsigned int v99;
  uint64_t *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[2];
  _QWORD v139[2];
  _QWORD v140[2];
  _QWORD v141[2];
  _BYTE v142[10];
  _BYTE v143[9];
  _BYTE v144[9];
  int v145[48];
  uint64_t v146;

  v146 = *MEMORY[0x24BDAC8D0];
  v141[0] = 0;
  v141[1] = 0;
  v140[0] = 0;
  v140[1] = 0;
  v139[0] = 0;
  v139[1] = 0;
  v138[0] = 0;
  v138[1] = 0;
  bzero(&v115, 0xB8uLL);
  bzero(v145, 0xC0uLL);
  if (!setjmp(v145)
    && !ventproc(a1, (uint64_t)&v115, (uint64_t)v144, (uint64_t)v143, (uint64_t)v142, (uint64_t)v145))
  {
    OUTLINED_FUNCTION_10_40(a1, (uint64_t)v141, a2, v9, v10, v11, v12, v13);
    v14 = OUTLINED_FUNCTION_7_40();
    OUTLINED_FUNCTION_10_40(v14, v15, v16, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_10_40(a1, (uint64_t)v139, a4, v22, v23, v24, v25, v26);
    OUTLINED_FUNCTION_10_40(a1, (uint64_t)v138, a5, v27, v28, v29, v30, v31);
    fence_41(a1);
    v32 = lpta_rpta_loadp(a1, (uint64_t)v141, (uint64_t)v140);
    if (!OUTLINED_FUNCTION_11_40(v32, 13, 0))
    {
      v114 = 9;
      v113 = 12;
      v112 = 13;
      v111 = 15;
      v110 = 16;
      v109 = 18;
      v108 = 19;
      v107 = 21;
      v106 = 22;
      v105 = 24;
      v104 = 25;
LABEL_6:
      HIDWORD(v103) = *(unsigned __int16 *)(a1 + 2290);
      starttest(a1, v114);
      lpta_loadpn(a1, v141);
      rpta_loadpn(a1);
      if (compare_ptas(a1) || testeq(a1))
      {
LABEL_8:
        actd_goto(a1);
        do
        {
          while (2)
          {
            v33 = *(_QWORD *)(a1 + 104);
            if (v33)
            {
              *(_QWORD *)(a1 + 104) = 0;
              v34 = v33;
            }
            else
            {
              v34 = OUTLINED_FUNCTION_12_40();
            }
            switch(v34)
            {
              case 1:
                starttest(a1, v113);
                OUTLINED_FUNCTION_2_42();
                if (v35)
                  goto LABEL_4;
                if (OUTLINED_FUNCTION_1_43())
                  continue;
                v36 = OUTLINED_FUNCTION_9_40();
                if (v36)
                  continue;
                OUTLINED_FUNCTION_0_45(v36, v37, v38, v39, v40, v41, v42, v43, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124,
                  v125,
                  v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132,
                  v133,
                  v134,
                  v135,
                  v136,
                  v137,
                  v138[0]);
                if (v44 || test_string_s(a1, 1u, 1u, (uint64_t *)&_MergedGlobals_30))
                  continue;
LABEL_18:
                v45 = (_QWORD *)a1;
                v46 = v112;
                break;
              case 2:
                starttest(a1, v111);
                OUTLINED_FUNCTION_2_42();
                if (v47)
                  goto LABEL_4;
                if (OUTLINED_FUNCTION_1_43())
                  continue;
                v48 = OUTLINED_FUNCTION_9_40();
                if (v48)
                  continue;
                OUTLINED_FUNCTION_0_45(v48, v49, v50, v51, v52, v53, v54, v55, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124,
                  v125,
                  v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132,
                  v133,
                  v134,
                  v135,
                  v136,
                  v137,
                  v138[0]);
                if (v56)
                  continue;
                bspush_ca_scan(a1, v110);
                v57 = OUTLINED_FUNCTION_3_42();
                v60 = (uint64_t *)&unk_257752E24;
LABEL_34:
                if (test_string_s(v57, v58, v59, v60))
                  continue;
LABEL_35:
                v45 = (_QWORD *)a1;
                v46 = 17;
                break;
              case 3:
                starttest(a1, v109);
                OUTLINED_FUNCTION_2_42();
                if (v61)
                  goto LABEL_4;
                if (OUTLINED_FUNCTION_1_43())
                  continue;
                v62 = OUTLINED_FUNCTION_9_40();
                if (v62)
                  continue;
                OUTLINED_FUNCTION_0_45(v62, v63, v64, v65, v66, v67, v68, v69, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124,
                  v125,
                  v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132,
                  v133,
                  v134,
                  v135,
                  v136,
                  v137,
                  v138[0]);
                if (v70)
                  continue;
                bspush_ca_scan(a1, v108);
                v71 = OUTLINED_FUNCTION_4_41();
                v74 = (uint64_t *)&unk_257752E2D;
LABEL_37:
                if (test_string_s(v71, v72, v73, v74))
                  continue;
LABEL_38:
                v45 = (_QWORD *)a1;
                v46 = 20;
                break;
              case 4:
                starttest(a1, v107);
                OUTLINED_FUNCTION_0_45(v75, v76, v77, v78, v79, v80, v81, v82, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124,
                  v125,
                  v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132,
                  v133,
                  v134,
                  v135,
                  v136,
                  v137,
                  v138[0]);
                if (v83)
                  goto LABEL_4;
                bspush_ca_scan(a1, v106);
                v84 = OUTLINED_FUNCTION_3_42();
                v87 = (uint64_t *)&unk_257752E28;
LABEL_40:
                if (test_string_s(v84, v85, v86, v87))
                  continue;
LABEL_41:
                v45 = (_QWORD *)a1;
                v46 = 23;
                break;
              case 5:
                starttest(a1, v105);
                OUTLINED_FUNCTION_0_45(v88, v89, v90, v91, v92, v93, v94, v95, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112,
                  v113,
                  v114,
                  v115,
                  v116,
                  v117,
                  v118,
                  v119,
                  v120,
                  v121,
                  v122,
                  v123,
                  v124,
                  v125,
                  v126,
                  v127,
                  v128,
                  v129,
                  v130,
                  v131,
                  v132,
                  v133,
                  v134,
                  v135,
                  v136,
                  v137,
                  v138[0]);
                if (v96)
                  goto LABEL_4;
                bspush_ca_scan(a1, v104);
                v97 = OUTLINED_FUNCTION_3_42();
                v100 = (uint64_t *)&unk_257752E28;
LABEL_43:
                if (test_string_s(v97, v98, v99, v100))
                  continue;
LABEL_44:
                v45 = (_QWORD *)a1;
                v46 = 26;
                break;
              case 7:
                goto LABEL_6;
              case 9:
                goto LABEL_8;
              case 13:
                goto LABEL_18;
              case 16:
                v57 = OUTLINED_FUNCTION_4_41();
                v60 = (uint64_t *)&unk_257752E2A;
                goto LABEL_34;
              case 17:
                goto LABEL_35;
              case 19:
                v71 = OUTLINED_FUNCTION_3_42();
                v74 = (uint64_t *)&unk_257752E26;
                goto LABEL_37;
              case 20:
                goto LABEL_38;
              case 22:
                v84 = OUTLINED_FUNCTION_4_41();
                v87 = (uint64_t *)&unk_257752E30;
                goto LABEL_40;
              case 23:
                goto LABEL_41;
              case 25:
                v97 = OUTLINED_FUNCTION_4_41();
                v100 = (uint64_t *)&unk_257752E30;
                goto LABEL_43;
              case 26:
                goto LABEL_44;
              default:
                goto LABEL_4;
            }
            break;
          }
          test_synch(v45, v46, 1u, (unsigned __int8 *)&unk_257752E23);
        }
        while (v101);
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_5_41();
}

void words_that_makes_inton_phr(uint64_t a1, uint64_t a2, __int16 *a3, __int16 *a4)
{
  uint64_t v7;
  uint64_t v8;
  __int16 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  _BYTE v38[188];
  int v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[10];
  _BYTE v46[9];
  _BYTE v47[9];
  int v48[48];
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v43 = 0;
  v44 = 0;
  v41 = 0;
  v42 = 0;
  v40[0] = 0;
  v40[1] = 0;
  v39 = 0;
  bzero(v38, 0xB8uLL);
  bzero(v48, 0xC0uLL);
  if (!setjmp(v48) && !ventproc(a1, (uint64_t)v38, (uint64_t)v47, (uint64_t)v46, (uint64_t)v45, (uint64_t)v48))
  {
    v7 = OUTLINED_FUNCTION_7_40();
    OUTLINED_FUNCTION_13_39(v7, v8, v9, v10, v11, v12, v13, v14);
    OUTLINED_FUNCTION_13_39(a1, (uint64_t)&v41, a3, v15, v16, v17, v18, v19);
    OUTLINED_FUNCTION_13_39(a1, (uint64_t)v40, a4, v20, v21, v22, v23, v24);
    v39 = 65532;
    fence_41(a1);
    starttest(a1, 27);
    v25 = OUTLINED_FUNCTION_7_40();
    v28 = lpta_rpta_loadp(v25, v26, v27);
    if (!OUTLINED_FUNCTION_11_40(v28, 14, 0))
    {
LABEL_5:
      copyvar(a1, (unsigned __int16 *)&v39, (__int16 *)(a1 + 2288));
      actd_goto(a1);
      while (2)
      {
        v29 = *(_QWORD *)(a1 + 104);
        if (v29)
        {
          *(_QWORD *)(a1 + 104) = 0;
          v30 = v29;
        }
        else
        {
          v30 = OUTLINED_FUNCTION_12_40();
        }
        switch(v30)
        {
          case 1:
            starttest(a1, 32);
            OUTLINED_FUNCTION_6_41();
            if (v31)
              break;
            v32 = a1;
            v33 = 1;
            v34 = 8;
            goto LABEL_16;
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 16:
          case 17:
          case 18:
          case 20:
          case 21:
          case 22:
          case 23:
          case 24:
          case 25:
            goto LABEL_19;
          case 19:
            v35 = a1;
            v36 = 34;
            goto LABEL_14;
          case 26:
            v35 = a1;
            v36 = 35;
LABEL_14:
            starttest(v35, v36);
            OUTLINED_FUNCTION_6_41();
            if (v37)
              break;
            v33 = 0;
            v32 = a1;
            v34 = 3;
LABEL_16:
            if (testFldeq(v32, 3u, v33, v34))
              continue;
            if (OUTLINED_FUNCTION_9_40())
              continue;
            *(_BYTE *)(a1 + 136) = 1;
            *(_QWORD *)(a1 + 112) = v42;
            *(_QWORD *)(a1 + 128) = 0;
            if (test_ptr(a1))
              continue;
LABEL_19:
            HIWORD(v39) = *(_WORD *)(a1 + 2286);
            break;
          case 28:
            goto LABEL_5;
          default:
            goto LABEL_4;
        }
        break;
      }
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_8_40();
  OUTLINED_FUNCTION_5_41();
}

void OUTLINED_FUNCTION_0_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  uint64_t v45;

  lpta_loadp_setscan_l(v45, (uint64_t)&a45);
}

BOOL OUTLINED_FUNCTION_1_43()
{
  uint64_t v0;
  unsigned int v1;
  int v2;

  return testFldeq(v0, v1, v2, 12);
}

void OUTLINED_FUNCTION_2_42()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_3_42()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_41()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_6_41()
{
  uint64_t v0;
  uint64_t v1;

  lpta_loadp_setscan_r(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_40()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_8_40()
{
  uint64_t v0;

  vretproc(v0);
}

BOOL OUTLINED_FUNCTION_9_40()
{
  return advance_tok();
}

void OUTLINED_FUNCTION_10_40(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_11_40(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD *v3;

  return actd_lookup(v3, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_12_40()
{
  _QWORD *v0;

  return vback(v0, 0);
}

void OUTLINED_FUNCTION_13_39(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

void *fence_42(uint64_t a1, int a2, uint64_t a3)
{
  void *result;
  uint64_t i;

  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = a2;
  result = memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
  for (i = 0; a2 != i; ++i)
  {
    *(_BYTE *)(*(_QWORD *)(a1 + 248) + i) = *(_BYTE *)(a3 + i);
    *(_BYTE *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a3 + i)) = i;
  }
  return result;
}

uint64_t mark_kor_bound_nouns(uint64_t a1, __int16 *a2, __int16 *a3, __int16 *a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  int v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  uint64_t *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  _BOOL4 v96;
  _BOOL8 v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  _BOOL4 v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  _BOOL4 v127;
  _BOOL8 v128;
  int v129;
  uint64_t v130;
  unsigned int v131;
  unsigned int v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  _BOOL4 v143;
  _BOOL8 v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  _BOOL4 v164;
  _BOOL8 v165;
  int v166;
  uint64_t v167;
  unsigned int v168;
  unsigned int v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int v179;
  _BOOL4 v180;
  _BOOL8 v181;
  int v182;
  uint64_t v183;
  unsigned int v184;
  unsigned int v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  _BOOL4 v196;
  _BOOL8 v197;
  int v198;
  uint64_t v199;
  unsigned int v200;
  unsigned int v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  _BOOL4 v212;
  _BOOL8 v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  _BOOL4 v234;
  _BOOL8 v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  uint64_t *v239;
  int v240;
  _BOOL4 v241;
  int v242;
  int v243;
  uint64_t v244;
  unsigned int v245;
  unsigned int v246;
  uint64_t *v247;
  uint64_t v248;
  int v249;
  int v250;
  int v251;
  int v252;
  int v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _BOOL4 v262;
  int v263;
  _BOOL4 v264;
  _BOOL8 v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  _QWORD v299[2];
  _BYTE v300[10];
  _BYTE v301[9];
  _BYTE v302[9];
  int v303[48];
  uint64_t v304;

  v304 = *MEMORY[0x24BDAC8D0];
  v299[0] = 0;
  v299[1] = 0;
  v297 = 0;
  v298 = 0;
  v295 = 0;
  v296 = 0;
  v293 = 0;
  v294 = 0;
  v290 = 0;
  v291 = 0;
  v292 = 0;
  bzero(&v267, 0xB8uLL);
  bzero(v303, 0xC0uLL);
  if (setjmp(v303))
    goto LABEL_4;
  if (ventproc(a1, (uint64_t)&v267, (uint64_t)v302, (uint64_t)v301, (uint64_t)v300, (uint64_t)v303))
    goto LABEL_4;
  OUTLINED_FUNCTION_14_39(a1, (uint64_t)v299, a2, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_14_39(a1, (uint64_t)&v297, a3, v14, v15, v16, v17, v18);
  OUTLINED_FUNCTION_14_39(a1, (uint64_t)&v295, a4, v19, v20, v21, v22, v23);
  push_ptr_init(a1, (uint64_t)&v293);
  LODWORD(v292) = 0;
  LODWORD(v290) = -65533;
  fence_42(a1, 0, (uint64_t)&null_str_18);
  lpta_rpta_loadp(a1, (uint64_t)v299, (uint64_t)&v297);
  if (actd_lookup((_QWORD *)a1, 15, 0, 0))
  {
LABEL_4:
    vretproc(a1);
    return 94;
  }
LABEL_5:
  v25 = *(unsigned __int16 *)(a1 + 2290);
  fence_42(a1, 1, (uint64_t)&_MergedGlobals_31);
  lpta_loadp_setscan_l(a1, (uint64_t)v299);
  if (!v26)
  {
    v27 = OUTLINED_FUNCTION_6_42();
    v28 = v25;
    if (!v27)
    {
LABEL_143:
      v25 = v28;
      savescptr(a1, 70, (uint64_t)&v293);
    }
  }
LABEL_7:
  starttest(a1, 71);
  lpta_loadpn(a1, &v293);
  rpta_loadpn(a1);
  if (!OUTLINED_FUNCTION_15_39() && !OUTLINED_FUNCTION_16_39())
    goto LABEL_4;
LABEL_9:
  actd_goto(a1);
  v35 = v25;
  while (2)
  {
    v25 = v35;
    v36 = *(_QWORD *)(a1 + 104);
    if (v36)
    {
      *(_QWORD *)(a1 + 104) = 0;
      v37 = v36;
    }
    else
    {
      v37 = vback((_QWORD *)a1, 0);
    }
    v38 = v25;
    switch((int)v37)
    {
      case 1:
      case 2:
      case 4:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 32:
      case 33:
      case 34:
      case 35:
      case 37:
      case 38:
      case 41:
      case 43:
      case 44:
      case 45:
      case 46:
      case 48:
      case 51:
      case 53:
      case 54:
      case 58:
      case 59:
      case 60:
      case 61:
      case 63:
      case 101:
      case 105:
      case 114:
      case 120:
      case 126:
        goto LABEL_14;
      case 3:
        OUTLINED_FUNCTION_4_42(75);
        OUTLINED_FUNCTION_1_44(v51, v52, v53, v54, v55, v56, v57, v58, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        if ((_DWORD)v59)
          goto LABEL_43;
        v62 = OUTLINED_FUNCTION_9_41(v59, v60, v61, (uint64_t *)&unk_257752E34);
        if ((_DWORD)v62)
          goto LABEL_43;
        *(_BYTE *)(a1 + 136) = (_BYTE)v4;
        v70 = OUTLINED_FUNCTION_8_41(v62, v63, v64, v65, v66, v67, v68, v69, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
                v278,
                v279,
                v280,
                v281,
                v282,
                v283,
                v284,
                v285,
                v286,
                v287,
                v288,
                v289,
                v290,
                v291,
                v292,
                v293,
                v294,
                v295,
                v296);
        if ((_DWORD)v70)
          goto LABEL_43;
        OUTLINED_FUNCTION_5_42(v70, (uint64_t)v299);
        if (v71)
          goto LABEL_43;
        OUTLINED_FUNCTION_0_46(76);
        OUTLINED_FUNCTION_11_41();
        v75 = test_string_s(a1, v72, v73, v74);
        v35 = v25;
        if (!v75)
          goto LABEL_130;
        continue;
      case 5:
      case 47:
        OUTLINED_FUNCTION_12_41(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        OUTLINED_FUNCTION_13_40();
        if (OUTLINED_FUNCTION_15_39())
          goto LABEL_43;
        v39 = OUTLINED_FUNCTION_16_39();
        goto LABEL_20;
      case 6:
      case 7:
        OUTLINED_FUNCTION_1_44(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        if ((_DWORD)v40)
          goto LABEL_43;
        v43 = OUTLINED_FUNCTION_9_41(v40, v41, v42, (uint64_t *)&unk_257752E34);
        if ((_DWORD)v43)
          goto LABEL_43;
        *(_BYTE *)(a1 + 136) = (_BYTE)v4;
        v39 = OUTLINED_FUNCTION_8_41(v43, v44, v45, v46, v47, v48, v49, v50, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
                v278,
                v279,
                v280,
                v281,
                v282,
                v283,
                v284,
                v285,
                v286,
                v287,
                v288,
                v289,
                v290,
                v291,
                v292,
                v293,
                v294,
                v295,
                v296);
LABEL_20:
        v38 = v25;
        if (!v39)
          goto LABEL_14;
        goto LABEL_44;
      case 15:
        v76 = 80;
        goto LABEL_42;
      case 16:
        v76 = 81;
        goto LABEL_42;
      case 23:
        OUTLINED_FUNCTION_4_42(82);
        OUTLINED_FUNCTION_1_44(v77, v78, v79, v80, v81, v82, v83, v84, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        if (v85)
          goto LABEL_43;
        v86 = 83;
        goto LABEL_32;
      case 31:
        v76 = 85;
        goto LABEL_42;
      case 36:
        v76 = 86;
        goto LABEL_42;
      case 39:
        OUTLINED_FUNCTION_4_42(87);
        OUTLINED_FUNCTION_3_43(v87, v88, v89, v90, v91, v92, v93, v94, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v95)
          goto LABEL_43;
        v96 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v96)
          continue;
        v97 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v97)
          continue;
        OUTLINED_FUNCTION_1_44(v97, v25, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if (v98)
          continue;
        OUTLINED_FUNCTION_0_46(88);
        v86 = 89;
LABEL_32:
        OUTLINED_FUNCTION_0_46(v86);
        goto LABEL_89;
      case 40:
        v76 = 92;
        goto LABEL_42;
      case 42:
        v76 = 93;
LABEL_42:
        OUTLINED_FUNCTION_4_42(v76);
        OUTLINED_FUNCTION_3_43(v99, v100, v101, v102, v103, v104, v105, v106, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v107)
          goto LABEL_43;
        v116 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v116)
          continue;
        v117 = OUTLINED_FUNCTION_6_42();
        goto LABEL_133;
      case 49:
        OUTLINED_FUNCTION_4_42(95);
        OUTLINED_FUNCTION_17_39();
        OUTLINED_FUNCTION_3_43(v118, v119, v120, v121, v122, v123, v124, v125, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        v35 = v25;
        if (v126)
          continue;
        v127 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v127)
          continue;
        v128 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v128)
          continue;
        OUTLINED_FUNCTION_5_42(v128, (uint64_t)v299);
        v35 = v25;
        if (v129)
          continue;
        OUTLINED_FUNCTION_0_46(97);
        v130 = OUTLINED_FUNCTION_7_41();
        goto LABEL_97;
      case 50:
        OUTLINED_FUNCTION_4_42(103);
        OUTLINED_FUNCTION_3_43(v134, v135, v136, v137, v138, v139, v140, v141, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v142)
          goto LABEL_43;
        v143 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v143)
          continue;
        v144 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v144)
          continue;
        OUTLINED_FUNCTION_5_42(v144, (uint64_t)v299);
        v35 = v25;
        if (v145)
          continue;
        OUTLINED_FUNCTION_0_46(104);
        goto LABEL_102;
      case 52:
        OUTLINED_FUNCTION_4_42(106);
        OUTLINED_FUNCTION_1_44(v146, v147, v148, v149, v150, v151, v152, v153, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        if (v154)
          goto LABEL_43;
        OUTLINED_FUNCTION_0_46(107);
        goto LABEL_91;
      case 55:
        OUTLINED_FUNCTION_4_42(109);
        OUTLINED_FUNCTION_3_43(v155, v156, v157, v158, v159, v160, v161, v162, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v163)
          goto LABEL_43;
        v164 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v164)
          continue;
        v165 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v165)
          continue;
        OUTLINED_FUNCTION_5_42(v165, (uint64_t)v299);
        v35 = v25;
        if (v166)
          continue;
        OUTLINED_FUNCTION_0_46(110);
        v167 = OUTLINED_FUNCTION_7_41();
        goto LABEL_112;
      case 56:
        OUTLINED_FUNCTION_4_42(115);
        OUTLINED_FUNCTION_3_43(v171, v172, v173, v174, v175, v176, v177, v178, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v179)
          goto LABEL_43;
        v180 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v180)
          continue;
        v181 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v181)
          continue;
        OUTLINED_FUNCTION_5_42(v181, (uint64_t)v299);
        v35 = v25;
        if (v182)
          continue;
        OUTLINED_FUNCTION_0_46(116);
        v183 = OUTLINED_FUNCTION_7_41();
        goto LABEL_119;
      case 57:
        OUTLINED_FUNCTION_4_42(121);
        OUTLINED_FUNCTION_3_43(v187, v188, v189, v190, v191, v192, v193, v194, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v195)
          goto LABEL_43;
        v196 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v196)
          continue;
        v197 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v197)
          continue;
        OUTLINED_FUNCTION_5_42(v197, (uint64_t)v299);
        v35 = v25;
        if (v198)
          continue;
        OUTLINED_FUNCTION_0_46(122);
        v199 = OUTLINED_FUNCTION_7_41();
        goto LABEL_126;
      case 62:
        OUTLINED_FUNCTION_4_42(127);
        OUTLINED_FUNCTION_3_43(v203, v204, v205, v206, v207, v208, v209, v210, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v211)
          goto LABEL_43;
        v212 = OUTLINED_FUNCTION_2_43();
        v35 = v25;
        if (v212)
          continue;
        v213 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v213)
          continue;
        OUTLINED_FUNCTION_1_44(v213, v25, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if (v214)
          continue;
        OUTLINED_FUNCTION_0_46(128);
        goto LABEL_135;
      case 64:
        OUTLINED_FUNCTION_4_42(130);
        OUTLINED_FUNCTION_3_43(v215, v216, v217, v218, v219, v220, v221, v222, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (v223)
          goto LABEL_43;
        OUTLINED_FUNCTION_0_46(131);
        v224 = 5;
        goto LABEL_137;
      case 65:
        OUTLINED_FUNCTION_4_42(133);
        OUTLINED_FUNCTION_3_43(v225, v226, v227, v228, v229, v230, v231, v232, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        if (!v233)
        {
          v234 = OUTLINED_FUNCTION_2_43();
          v35 = v25;
          if (!v234)
          {
            v235 = OUTLINED_FUNCTION_6_42();
            v35 = v25;
            if (!v235)
            {
              OUTLINED_FUNCTION_1_44(v235, v25, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
                v278,
                v279,
                v280,
                v281,
                v282,
                v283,
                v284,
                v285,
                v286,
                v287,
                v288,
                v289,
                v290,
                v291,
                v292,
                v293,
                v294,
                v295,
                v296,
                v297);
              v35 = v25;
              if (!v236)
              {
                OUTLINED_FUNCTION_0_46(134);
LABEL_89:
                OUTLINED_FUNCTION_11_41();
LABEL_105:
                v248 = a1;
LABEL_106:
                v37 = test_string_s(v248, v237, v238, v239);
                v35 = v25;
                if (!(_DWORD)v37)
                {
LABEL_107:
                  *(_BYTE *)(a1 + 136) = 1;
LABEL_108:
                  v117 = OUTLINED_FUNCTION_8_41(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
                           v278,
                           v279,
                           v280,
                           v281,
                           v282,
                           v283,
                           v284,
                           v285,
                           v286,
                           v287,
                           v288,
                           v289,
                           v290,
                           v291,
                           v292,
                           v293,
                           v294,
                           v295,
                           v296);
LABEL_133:
                  v35 = v25;
                  if (!v117)
                  {
LABEL_14:
                    v38 = *(unsigned __int16 *)(a1 + 2286);
                    goto LABEL_44;
                  }
                }
              }
            }
          }
          continue;
        }
LABEL_43:
        v38 = v25;
LABEL_44:
        v108 = v38;
        OUTLINED_FUNCTION_4_42(72);
        if (*(unsigned __int16 *)(a1 + 2286) != (unsigned __int16)v108)
          goto LABEL_4;
        lpta_rpta_loadp(a1, (uint64_t)v299, (uint64_t)&v297);
        v4 = &v290;
        settvar_s(a1, (unsigned __int8 *)&v290, 2u);
        npush_s(a1);
        WORD1(v290) = 1;
        npop(a1, (unsigned __int16 *)&v290, v109, v110, v111, v112, v113, v114);
        insert_2ptv();
        v35 = v108;
        if (v115)
          continue;
LABEL_144:
        vretproc(a1);
        return 0;
      case 67:
        goto LABEL_5;
      case 68:
      case 74:
      case 75:
      case 77:
      case 78:
      case 79:
      case 80:
      case 81:
      case 82:
      case 85:
      case 86:
      case 87:
      case 92:
      case 93:
      case 94:
      case 95:
      case 103:
      case 106:
      case 109:
      case 115:
      case 121:
      case 127:
      case 130:
      case 133:
        goto LABEL_44;
      case 69:
        goto LABEL_7;
      case 70:
        v28 = v25;
        goto LABEL_143;
      case 71:
        goto LABEL_9;
      case 73:
        goto LABEL_144;
      case 76:
        goto LABEL_130;
      case 83:
        goto LABEL_89;
      case 84:
      case 88:
      case 108:
      case 129:
      case 134:
        goto LABEL_107;
      case 89:
        OUTLINED_FUNCTION_0_46(90);
        goto LABEL_89;
      case 90:
        OUTLINED_FUNCTION_0_46(91);
LABEL_91:
        OUTLINED_FUNCTION_10_41();
        goto LABEL_105;
      case 91:
        v239 = (uint64_t *)&unk_257752E58;
        goto LABEL_104;
      case 96:
        OUTLINED_FUNCTION_3_43(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297,
          v298,
          v299[0]);
        v35 = v25;
        if (v240)
          continue;
        v241 = testFldeq(a1, 4u, 1, 2);
        v35 = v25;
        if (v241)
          continue;
        v242 = OUTLINED_FUNCTION_6_42();
        goto LABEL_98;
      case 97:
        OUTLINED_FUNCTION_10_41();
        v130 = a1;
LABEL_97:
        v242 = test_string_s(v130, v131, v132, v133);
LABEL_98:
        v35 = v25;
        if (!v242)
          goto LABEL_127;
        continue;
      case 98:
      case 99:
      case 111:
      case 117:
      case 123:
        goto LABEL_127;
      case 100:
        OUTLINED_FUNCTION_1_44(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if (v243)
          continue;
        OUTLINED_FUNCTION_0_46(102);
        goto LABEL_102;
      case 102:
LABEL_102:
        v244 = OUTLINED_FUNCTION_7_41();
        goto LABEL_132;
      case 104:
        goto LABEL_122;
      case 107:
        v239 = (uint64_t *)&unk_257752E5D;
LABEL_104:
        v237 = 1;
        v238 = 5;
        goto LABEL_105;
      case 110:
        OUTLINED_FUNCTION_0_46(112);
        OUTLINED_FUNCTION_11_41();
        goto LABEL_111;
      case 112:
        OUTLINED_FUNCTION_10_41();
LABEL_111:
        v167 = a1;
LABEL_112:
        v249 = test_string_s(v167, v168, v169, v170);
        v35 = v25;
        if (!v249)
          goto LABEL_127;
        continue;
      case 113:
        OUTLINED_FUNCTION_1_44(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if (v250)
          continue;
        goto LABEL_122;
      case 116:
        OUTLINED_FUNCTION_0_46(118);
        OUTLINED_FUNCTION_11_41();
        goto LABEL_118;
      case 118:
        OUTLINED_FUNCTION_10_41();
LABEL_118:
        v183 = a1;
LABEL_119:
        v251 = test_string_s(v183, v184, v185, v186);
        v35 = v25;
        if (!v251)
          goto LABEL_127;
        continue;
      case 119:
        OUTLINED_FUNCTION_1_44(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if (v252)
          continue;
LABEL_122:
        OUTLINED_FUNCTION_11_41();
        goto LABEL_131;
      case 122:
        OUTLINED_FUNCTION_0_46(124);
        OUTLINED_FUNCTION_11_41();
        goto LABEL_125;
      case 124:
        OUTLINED_FUNCTION_10_41();
LABEL_125:
        v199 = a1;
LABEL_126:
        v253 = test_string_s(v199, v200, v201, v202);
        v35 = v25;
        if (v253)
          continue;
LABEL_127:
        OUTLINED_FUNCTION_17_39();
        OUTLINED_FUNCTION_12_41(v254, v255, v256, v257, v258, v259, v260, v261, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        OUTLINED_FUNCTION_13_40();
        v262 = OUTLINED_FUNCTION_15_39();
        v35 = v25;
        if (v262)
          continue;
        v117 = OUTLINED_FUNCTION_16_39();
        goto LABEL_133;
      case 125:
        OUTLINED_FUNCTION_1_44(v37, v35, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if (v263)
          continue;
LABEL_130:
        OUTLINED_FUNCTION_10_41();
LABEL_131:
        v244 = a1;
LABEL_132:
        v117 = test_string_s(v244, v245, v246, v247);
        goto LABEL_133;
      case 128:
LABEL_135:
        v248 = OUTLINED_FUNCTION_7_41();
        goto LABEL_106;
      case 131:
        v224 = 2;
LABEL_137:
        v264 = testFldeq(a1, 4u, 1, v224);
        v35 = v25;
        if (!v264)
          goto LABEL_138;
        continue;
      case 132:
LABEL_138:
        v265 = OUTLINED_FUNCTION_6_42();
        v35 = v25;
        if (v265)
          continue;
        OUTLINED_FUNCTION_1_44(v265, v25, v29, v30, v31, v32, v33, v34, v267, v268, v269, v270, v271, v272, v273, v274, v275, v276, v277,
          v278,
          v279,
          v280,
          v281,
          v282,
          v283,
          v284,
          v285,
          v286,
          v287,
          v288,
          v289,
          v290,
          v291,
          v292,
          v293,
          v294,
          v295,
          v296,
          v297);
        v35 = v25;
        if ((_DWORD)v266)
          continue;
        v37 = OUTLINED_FUNCTION_9_41(v266, v25, v29, (uint64_t *)&unk_257752E34);
        v35 = v25;
        if ((_DWORD)v37)
          continue;
        *(_BYTE *)(a1 + 136) = (_BYTE)v4;
        goto LABEL_108;
      default:
        goto LABEL_4;
    }
  }
}

double OUTLINED_FUNCTION_0_46@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = bspush_ca_scan(v1, a1).n128_u64[0];
  return result;
}

void OUTLINED_FUNCTION_1_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  lpta_loadp_setscan_r(v39, (uint64_t)&a39);
}

BOOL OUTLINED_FUNCTION_2_43()
{
  uint64_t v0;

  return testFldeq(v0, 4u, 1, 5);
}

void OUTLINED_FUNCTION_3_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  uint64_t v41;

  lpta_loadp_setscan_l(v41, (uint64_t)&a41);
}

void OUTLINED_FUNCTION_4_42(uint64_t a1@<X8>)
{
  uint64_t v1;

  starttest(v1, a1);
}

void OUTLINED_FUNCTION_5_42(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  lpta_loadp_setscan_l(v2, a2);
}

BOOL OUTLINED_FUNCTION_6_42()
{
  return advance_tok();
}

uint64_t OUTLINED_FUNCTION_7_41()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;

  *(_QWORD *)(v38 + 112) = a38;
  *(_QWORD *)(v38 + 128) = 0;
  return test_ptr(v38);
}

uint64_t OUTLINED_FUNCTION_9_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return test_string_s(v4, 1u, 1u, a4);
}

uint64_t OUTLINED_FUNCTION_12_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  return lpta_loadpn(v39, &a39);
}

uint64_t OUTLINED_FUNCTION_13_40()
{
  uint64_t v0;

  return rpta_loadpn(v0);
}

void OUTLINED_FUNCTION_14_39(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  get_parm(a1, a2, a3, v8, a5, a6, a7, a8);
}

BOOL OUTLINED_FUNCTION_15_39()
{
  uint64_t v0;

  return compare_ptas(v0);
}

BOOL OUTLINED_FUNCTION_16_39()
{
  uint64_t v0;

  return testeq(v0);
}

void OUTLINED_FUNCTION_17_39()
{
  uint64_t v0;

  bspush_ca(v0);
}

uint64_t kor_roots(uint64_t a1, __int16 *a2, __int16 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  int v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  int v25;
  _BYTE v26[184];
  _QWORD v27[2];
  _QWORD v28[2];
  char v29[10];
  char v30[9];
  char v31[9];
  int v32[48];
  uint64_t v33;

  v33 = *MEMORY[0x24BDAC8D0];
  v28[0] = 0;
  v28[1] = 0;
  v27[0] = 0;
  v27[1] = 0;
  bzero(v26, 0xB8uLL);
  bzero(v32, 0xC0uLL);
  if (setjmp(v32)
    || ventproc(a1, (uint64_t)v26, (uint64_t)v31, (uint64_t)v30, (uint64_t)v29, (uint64_t)v32)
    || (get_parm(a1, (uint64_t)v28, a2, 4294967290, v6, v7, v8, v9),
        get_parm(a1, (uint64_t)v27, a3, 4294967290, v10, v11, v12, v13),
        *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 1,
        memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288)),
        **(_BYTE **)(a1 + 248) = 5,
        *(_BYTE *)(*(_QWORD *)(a1 + 264) + 5) = 0,
        lpta_rpta_loadp(a1, (uint64_t)v28, (uint64_t)v27),
        actd_lookup((_QWORD *)a1, 16, 0, 0)))
  {
LABEL_4:
    v14 = 94;
  }
  else
  {
LABEL_6:
    starttest(a1, 9);
    if (*(_WORD *)(a1 + 3874) == 1)
    {
      v14 = 0;
    }
    else
    {
LABEL_7:
      actd_goto(a1);
      while (2)
      {
        v17 = *(_QWORD *)(a1 + 104);
        if (v17)
        {
          *(_QWORD *)(a1 + 104) = 0;
          v18 = v17;
        }
        else
        {
          v18 = vback((_QWORD *)a1, 0);
        }
        v19 = v18 - 1;
        v14 = 0;
        v20 = &unk_257752E66;
        v21 = 5;
        switch(v19)
        {
          case 0:
            OUTLINED_FUNCTION_0_47();
            v22 = a1;
            v23 = 4;
            v24 = &_MergedGlobals_32;
            goto LABEL_17;
          case 1:
            goto LABEL_16;
          case 2:
            v20 = &unk_257752E6B;
            goto LABEL_16;
          case 3:
            v20 = &unk_257752E70;
            v21 = 6;
            goto LABEL_16;
          case 4:
            v20 = &unk_257752E76;
            v21 = 7;
LABEL_16:
            OUTLINED_FUNCTION_0_47();
            v22 = a1;
            v23 = v21;
            v24 = v20;
LABEL_17:
            insert_2pt_s(v22, 2, v23, (uint64_t)v24, 0);
            if (v25)
              continue;
            v14 = 0;
            break;
          case 6:
            goto LABEL_6;
          case 7:
          case 9:
            goto LABEL_5;
          case 8:
            goto LABEL_7;
          default:
            goto LABEL_4;
        }
        break;
      }
    }
  }
LABEL_5:
  v15 = v14;
  vretproc(a1);
  return v15;
}

uint64_t OUTLINED_FUNCTION_0_47()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

uint64_t kor_words(uint64_t a1, __int16 *a2, __int16 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  int v18;
  _BYTE v19[184];
  _QWORD v20[2];
  _QWORD v21[2];
  _BYTE v22[10];
  _BYTE v23[9];
  _BYTE v24[9];
  int v25[48];
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  v21[0] = 0;
  v21[1] = 0;
  v20[0] = 0;
  v20[1] = 0;
  bzero(v19, 0xB8uLL);
  bzero(v25, 0xC0uLL);
  if (setjmp(v25)
    || ventproc(a1, (uint64_t)v19, (uint64_t)v24, (uint64_t)v23, (uint64_t)v22, (uint64_t)v25)
    || (get_parm(a1, (uint64_t)v21, a2, 4294967290, v6, v7, v8, v9),
        get_parm(a1, (uint64_t)v20, a3, 4294967290, v10, v11, v12, v13),
        *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0,
        memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288)),
        lpta_rpta_loadp(a1, (uint64_t)v21, (uint64_t)v20),
        actd_lookup((_QWORD *)a1, 17, 0, 0)))
  {
LABEL_4:
    v14 = 94;
  }
  else
  {
LABEL_6:
    starttest(a1, 5);
    if (*(_WORD *)(a1 + 3874) == 1)
    {
      v14 = 0;
    }
    else
    {
LABEL_7:
      actd_goto(a1);
      while (2)
      {
        v16 = *(_QWORD *)(a1 + 104);
        if (v16)
        {
          *(_QWORD *)(a1 + 104) = 0;
          v17 = v16;
        }
        else
        {
          v17 = vback((_QWORD *)a1, 0);
        }
        v14 = 0;
        switch(v17)
        {
          case 1:
            lpta_rpta_loadp(a1, (uint64_t)v21, (uint64_t)v20);
            v14 = 0;
            insert_2pt_s(a1, 1, 5, (uint64_t)&string_1_4, 0);
            if (v18)
              continue;
            break;
          case 3:
            goto LABEL_6;
          case 4:
          case 6:
            goto LABEL_5;
          case 5:
            goto LABEL_7;
          default:
            goto LABEL_4;
        }
        break;
      }
    }
  }
LABEL_5:
  vretproc(a1);
  return v14;
}

void *fence_43(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8121) = 0;
  return memset(*(void **)(a1 + 264), *(unsigned __int8 *)(a1 + 288), *(unsigned __int8 *)(a1 + 288));
}

void kor_pnames(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _BYTE v178[5];
  uint64_t v179;
  _BYTE v180[7];
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;

  OUTLINED_FUNCTION_1_45(a1, a2, a3, a4, a5, a6, a7, a8, v46, v51, v56, v61, v66, v71, v76, v81, v86, v91, v96,
    v101,
    v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v174);
  OUTLINED_FUNCTION_6_43(v10, v11, v12, v13, v14, v15, v16, v17, v47, v52, v57, v62, v67, v72, v77, v82, v87, v92, v97,
    v102,
    v107,
    v112,
    v117,
    v122,
    v127,
    v132,
    v137,
    v142,
    v147,
    v152,
    v157,
    v162,
    v167,
    v171,
    v175,
    v177,
    v179,
    v181,
    v183,
    v185);
  v18 = setjmp(v8);
  if (!(_DWORD)v18)
  {
    v26 = OUTLINED_FUNCTION_3_44(v18, v19, v20, v21, v22, v23, v24, v25, v48, v53, v58, v63, v68, v73, v78, v83, v88, v93, v98,
            v103,
            v108,
            v113,
            v118,
            v123,
            v128,
            v133,
            v138,
            v143,
            v148,
            v153,
            v158,
            v163,
            v168,
            v172,
            v176,
            *(int *)v178,
            v178[4],
            *(int *)v180,
            *(__int16 *)&v180[4],
            v180[6],
            v182,
            SWORD2(v182),
            SBYTE6(v182),
            SHIBYTE(v182),
            v184,
            v186);
    if (!(_DWORD)v26)
    {
      OUTLINED_FUNCTION_2_44(v26, v27, v28, v29, v30, v31, v32, v33, v49, v54, v59, v64, v69, v74, v79, v84, v89, v94, v99,
        v104,
        v109,
        v114,
        v119,
        v124,
        v129,
        v134,
        v139,
        v144,
        v149,
        v154,
        v159,
        v164,
        v169,
        v173);
      OUTLINED_FUNCTION_5_43(v34, v35, v36, v37, v38, v39, v40, v41, v50, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100,
        v105,
        v110,
        v115,
        v120,
        v125,
        v130,
        v135,
        v140,
        v145,
        v150,
        v155,
        v160,
        v165);
      v42 = OUTLINED_FUNCTION_7_42();
      if (!OUTLINED_FUNCTION_10_42(v42, 18, 0))
      {
LABEL_5:
        OUTLINED_FUNCTION_11_42();
        if (*(_WORD *)(a1 + 3874) != 1)
        {
LABEL_6:
          actd_goto(a1);
          while (2)
          {
            v43 = *(_QWORD *)(a1 + 104);
            if (v43)
            {
              *(_QWORD *)(a1 + 104) = 0;
              v44 = v43;
            }
            else
            {
              v44 = OUTLINED_FUNCTION_9_42();
            }
            switch(v44)
            {
              case 1:
                OUTLINED_FUNCTION_8_42();
                OUTLINED_FUNCTION_0_48();
                if (v45)
                  continue;
                break;
              case 3:
                goto LABEL_5;
              case 5:
                goto LABEL_6;
              default:
                goto LABEL_4;
            }
            break;
          }
        }
      }
    }
  }
LABEL_4:
  vretproc(a1);
  OUTLINED_FUNCTION_4_43();
}

void kor_places(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8)
{
  int *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  _BYTE v178[5];
  uint64_t v179;
  _BYTE v180[7];
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;

  OUTLINED_FUNCTION_1_45(a1, a2, a3, a4, a5, a6, a7, a8, v46, v51, v56, v61, v66, v71, v76, v81, v86, v91, v96,
    v101,
    v106,
    v111,
    v116,
    v121,
    v126,
    v131,
    v136,
    v141,
    v146,
    v151,
    v156,
    v161,
    v166,
    v170,
    v174);
  OUTLINED_FUNCTION_6_43(v10, v11, v12, v13, v14, v15, v16, v17, v47, v52, v57, v62, v67, v72, v77, v82, v87, v92, v97,
    v102,
    v107,
    v112,
    v117,
    v122,
    v127,
    v132,
    v137,
    v142,
    v147,
    v152,
    v157,
    v162,
    v167,
    v171,
    v175,
    v177,
    v179,
    v181,
    v183,
    v185);
  v18 = setjmp(v8);
  if (!(_DWORD)v18)
  {
    v26 = OUTLINED_FUNCTION_3_44(v18, v19, v20, v21, v22, v23, v24, v25, v48, v53, v58, v63, v68, v73, v78, v83, v88, v93, v98,
            v103,
            v108,
            v113,
            v118,
            v123,
            v128,
            v133,
            v138,
            v143,
            v148,
            v153,
            v158,
            v163,
            v168,
            v172,
            v176,
            *(int *)v178,
            v178[4],
            *(int *)v180,
            *(__int16 *)&v180[4],
            v180[6],
            v182,
            SWORD2(v182),
            SBYTE6(v182),
            SHIBYTE(v182),
            v184,
            v186);
    if (!(_DWORD)v26)
    {
      OUTLINED_FUNCTION_2_44(v26, v27, v28, v29, v30, v31, v32, v33, v49, v54, v59, v64, v69, v74, v79, v84, v89, v94, v99,
        v104,
        v109,
        v114,
        v119,
        v124,
        v129,
        v134,
        v139,
        v144,
        v149,
        v154,
        v159,
        v164,
        v169,
        v173);
      OUTLINED_FUNCTION_5_43(v34, v35, v36, v37, v38, v39, v40, v41, v50, v55, v60, v65, v70, v75, v80, v85, v90, v95, v100,
        v105,
        v110,
        v115,
        v120,
        v125,
        v130,
        v135,
        v140,
        v145,
        v150,
        v155,
        v160,
        v165);
      v42 = OUTLINED_FUNCTION_7_42();
      if (!OUTLINED_FUNCTION_10_42(v42, 19, 0))
      {
LABEL_5:
        OUTLINED_FUNCTION_11_42();
        if (*(_WORD *)(a1 + 3874) != 1)
        {
LABEL_6:
          actd_goto(a1);
          while (2)
          {
            v43 = *(_QWORD *)(a1 + 104);
            if (v43)
            {
              *(_QWORD *)(a1 + 104) = 0;
              v44 = v43;
            }
            else
            {
              v44 = OUTLINED_FUNCTION_9_42();
            }
            switch(v44)
            {
              case 1:
                OUTLINED_FUNCTION_8_42();
                OUTLINED_FUNCTION_0_48();
                if (v45)
                  continue;
                break;
              case 3:
                goto LABEL_5;
              case 5:
                goto LABEL_6;
              default:
                goto LABEL_4;
            }
            break;
          }
        }
      }
    }
  }
LABEL_4:
  vretproc(a1);
  OUTLINED_FUNCTION_4_43();
}

void OUTLINED_FUNCTION_0_48()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  insert_2pt_s(v0, v1, v2, v3, 0);
}

void OUTLINED_FUNCTION_1_45(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v35;
  uint64_t v36;

  *(_QWORD *)(v36 - 88) = v35;
  a34 = 0;
  a35 = 0;
  a32 = 0;
  a33 = 0;
  bzero(&a9, 0xB8uLL);
}

void OUTLINED_FUNCTION_2_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;
  __int16 *v35;

  get_parm(v34, (uint64_t)&a34, v35, 4294967290, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_3_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37,int a38,__int16 a39,char a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,char a46)
{
  uint64_t v46;

  return ventproc(v46, (uint64_t)&a9, (uint64_t)&a44, (uint64_t)&a40, (uint64_t)&a37, (uint64_t)&a46);
}

void OUTLINED_FUNCTION_5_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;
  __int16 *v33;
  uint64_t v34;

  get_parm(v32, (uint64_t)&a32, v33, v34, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_6_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  bzero(&a40, 0xC0uLL);
}

uint64_t OUTLINED_FUNCTION_7_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  fence_43(v0);
  return lpta_rpta_loadp(v0, v2, v1);
}

uint64_t OUTLINED_FUNCTION_8_42()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return lpta_rpta_loadp(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_9_42()
{
  _QWORD *v0;

  return vback(v0, 0);
}

uint64_t OUTLINED_FUNCTION_10_42(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD *v3;

  return actd_lookup(v3, a2, a3, 0);
}

void OUTLINED_FUNCTION_11_42()
{
  uint64_t v0;
  uint64_t v1;

  starttest(v0, v1);
}

_QWORD *delta_new()
{
  char *v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  MEMORY[0x24BDAC7A8]();
  v0 = (char *)malloc_type_malloc(0x18A0uLL, 0x10F0040CF5E8B69uLL);
  v1 = v0;
  if (v0)
  {
    *((_WORD *)v0 + 164) = -6;
    *((_QWORD *)v0 + 42) = 0;
    *((_WORD *)v0 + 172) = -6;
    *((_QWORD *)v0 + 44) = 0;
    *((_WORD *)v0 + 180) = -6;
    *((_QWORD *)v0 + 46) = 0;
    *((_WORD *)v0 + 188) = -6;
    *((_QWORD *)v0 + 48) = 0;
    *((_WORD *)v0 + 196) = -6;
    *((_QWORD *)v0 + 50) = 0;
    *((_WORD *)v0 + 204) = -6;
    *((_QWORD *)v0 + 52) = 0;
    *((_WORD *)v0 + 212) = -6;
    *((_QWORD *)v0 + 54) = 0;
    *((_WORD *)v0 + 220) = -6;
    *((_QWORD *)v0 + 56) = 0;
    *((_WORD *)v0 + 228) = -6;
    *((_QWORD *)v0 + 58) = 0;
    *((_WORD *)v0 + 236) = -6;
    *((_QWORD *)v0 + 60) = 0;
    *((_WORD *)v0 + 244) = -6;
    *((_QWORD *)v0 + 62) = 0;
    *((_WORD *)v0 + 252) = -6;
    *((_QWORD *)v0 + 64) = 0;
    *((_WORD *)v0 + 260) = -6;
    *((_QWORD *)v0 + 66) = 0;
    *((_WORD *)v0 + 268) = -6;
    *((_QWORD *)v0 + 68) = 0;
    *((_WORD *)v0 + 276) = -6;
    *((_QWORD *)v0 + 70) = 0;
    *((_WORD *)v0 + 284) = -6;
    *((_QWORD *)v0 + 72) = 0;
    *((_WORD *)v0 + 292) = -6;
    *((_QWORD *)v0 + 74) = 0;
    *((_WORD *)v0 + 300) = -6;
    *((_QWORD *)v0 + 76) = 0;
    *((_WORD *)v0 + 308) = -6;
    *((_QWORD *)v0 + 78) = 0;
    *((_DWORD *)v0 + 158) = 65532;
    *((_WORD *)v0 + 320) = -6;
    *((_QWORD *)v0 + 81) = 0;
    *((_WORD *)v0 + 328) = -6;
    *((_QWORD *)v0 + 83) = 0;
    *((_WORD *)v0 + 336) = -6;
    *((_QWORD *)v0 + 85) = 0;
    *((_WORD *)v0 + 344) = -6;
    *((_QWORD *)v0 + 87) = 0;
    *((_WORD *)v0 + 352) = -6;
    *((_QWORD *)v0 + 89) = 0;
    *((_OWORD *)v0 + 45) = xmmword_2486A2810;
    *((_OWORD *)v0 + 46) = xmmword_2486A2810;
    *((_OWORD *)v0 + 47) = xmmword_2486A2810;
    *((_WORD *)v0 + 384) = -6;
    *((_QWORD *)v0 + 97) = 0;
    *((_WORD *)v0 + 392) = -6;
    *((_QWORD *)v0 + 99) = 0;
    *((_WORD *)v0 + 400) = -6;
    *((_QWORD *)v0 + 101) = 0;
    *((_WORD *)v0 + 408) = -6;
    *((_QWORD *)v0 + 103) = 0;
    *((_WORD *)v0 + 416) = -6;
    *((_QWORD *)v0 + 105) = 0;
    *((_WORD *)v0 + 424) = -6;
    *((_QWORD *)v0 + 107) = 0;
    *((_WORD *)v0 + 432) = -6;
    *((_QWORD *)v0 + 109) = 0;
    *((_WORD *)v0 + 440) = -6;
    *((_QWORD *)v0 + 111) = 0;
    *((_WORD *)v0 + 448) = -6;
    *((_QWORD *)v0 + 113) = 0;
    *((_WORD *)v0 + 456) = -6;
    *((_QWORD *)v0 + 115) = 0;
    *((_OWORD *)v0 + 58) = xmmword_2486A2810;
    *((_OWORD *)v0 + 59) = xmmword_2486A2810;
    *((_OWORD *)v0 + 60) = xmmword_2486A2810;
    *((_OWORD *)v0 + 61) = xmmword_2486A2810;
    *((_OWORD *)v0 + 62) = xmmword_2486A2810;
    *((_OWORD *)v0 + 63) = xmmword_2486A2810;
    *((_QWORD *)v0 + 128) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 516) = -5;
    *((_QWORD *)v0 + 130) = 0;
    *((_WORD *)v0 + 524) = -5;
    *((_QWORD *)v0 + 132) = 0;
    *((_WORD *)v0 + 532) = -5;
    *((_QWORD *)v0 + 134) = 0;
    *((_WORD *)v0 + 540) = -5;
    *((_QWORD *)v0 + 136) = 0;
    *((_WORD *)v0 + 548) = -5;
    *((_QWORD *)v0 + 138) = 0;
    *((_WORD *)v0 + 556) = -5;
    *((_QWORD *)v0 + 140) = 0;
    *((_DWORD *)v0 + 282) = 65532;
    *((_WORD *)v0 + 568) = -6;
    *((_QWORD *)v0 + 143) = 0;
    *((_WORD *)v0 + 576) = -6;
    *((_QWORD *)v0 + 145) = 0;
    *((_WORD *)v0 + 584) = -6;
    *((_QWORD *)v0 + 147) = 0;
    *((_QWORD *)v0 + 148) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 596) = -6;
    *((_QWORD *)v0 + 150) = 0;
    *((_QWORD *)v0 + 151) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 304) = 65532;
    *((_WORD *)v0 + 612) = -6;
    *((_QWORD *)v0 + 154) = 0;
    *((_WORD *)v0 + 620) = -6;
    *((_QWORD *)v0 + 156) = 0;
    *((_WORD *)v0 + 628) = -6;
    *((_QWORD *)v0 + 158) = 0;
    *((_WORD *)v0 + 636) = -6;
    *((_QWORD *)v0 + 160) = 0;
    *((_WORD *)v0 + 644) = -6;
    *((_QWORD *)v0 + 162) = 0;
    *((_WORD *)v0 + 652) = -6;
    *((_QWORD *)v0 + 164) = 0;
    *((_WORD *)v0 + 660) = -6;
    *((_QWORD *)v0 + 166) = 0;
    *((_WORD *)v0 + 668) = -6;
    *((_QWORD *)v0 + 168) = 0;
    *((_WORD *)v0 + 676) = -6;
    *((_QWORD *)v0 + 170) = 0;
    *((_WORD *)v0 + 684) = -6;
    *((_QWORD *)v0 + 172) = 0;
    *((_WORD *)v0 + 692) = -6;
    *((_QWORD *)v0 + 174) = 0;
    *((_WORD *)v0 + 700) = -6;
    *((_QWORD *)v0 + 176) = 0;
    *((_WORD *)v0 + 708) = -6;
    *((_QWORD *)v0 + 178) = 0;
    *((_WORD *)v0 + 716) = -6;
    *((_QWORD *)v0 + 180) = 0;
    *((_WORD *)v0 + 724) = -6;
    *((_QWORD *)v0 + 182) = 0;
    *((_WORD *)v0 + 732) = -6;
    *((_QWORD *)v0 + 184) = 0;
    *((_WORD *)v0 + 740) = -6;
    *((_QWORD *)v0 + 186) = 0;
    *((_WORD *)v0 + 748) = -6;
    *((_QWORD *)v0 + 188) = 0;
    *((_WORD *)v0 + 756) = -6;
    *((_QWORD *)v0 + 190) = 0;
    *((_WORD *)v0 + 764) = -6;
    *((_QWORD *)v0 + 192) = 0;
    *((_WORD *)v0 + 772) = -6;
    *((_QWORD *)v0 + 194) = 0;
    *((_WORD *)v0 + 780) = -6;
    *((_QWORD *)v0 + 196) = 0;
    *((_WORD *)v0 + 788) = -6;
    *((_QWORD *)v0 + 198) = 0;
    *((_WORD *)v0 + 796) = -6;
    *((_QWORD *)v0 + 200) = 0;
    *((_WORD *)v0 + 804) = -6;
    *((_QWORD *)v0 + 202) = 0;
    *((_WORD *)v0 + 812) = -6;
    *((_QWORD *)v0 + 204) = 0;
    *((_WORD *)v0 + 820) = -6;
    *((_QWORD *)v0 + 206) = 0;
    *((_WORD *)v0 + 828) = -6;
    *((_QWORD *)v0 + 208) = 0;
    *((_WORD *)v0 + 836) = -6;
    *((_QWORD *)v0 + 210) = 0;
    *((_WORD *)v0 + 844) = -6;
    *((_QWORD *)v0 + 212) = 0;
    *((_WORD *)v0 + 852) = -6;
    *((_QWORD *)v0 + 214) = 0;
    *((_WORD *)v0 + 860) = -6;
    *((_QWORD *)v0 + 216) = 0;
    *((_WORD *)v0 + 868) = -6;
    *((_QWORD *)v0 + 218) = 0;
    *((_WORD *)v0 + 876) = -5;
    *((_QWORD *)v0 + 220) = 0;
    *((_WORD *)v0 + 884) = -5;
    *((_QWORD *)v0 + 222) = 0;
    *(_OWORD *)(v0 + 1928) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 1944) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 1960) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 1976) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 1992) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 2008) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 2024) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 2040) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 2056) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 2072) = xmmword_2486A2810;
    *((_QWORD *)v0 + 261) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 1048) = -5;
    *((_QWORD *)v0 + 263) = 0;
    *((_WORD *)v0 + 1056) = -5;
    *((_QWORD *)v0 + 265) = 0;
    *((_WORD *)v0 + 1064) = -5;
    *((_QWORD *)v0 + 267) = 0;
    *((_WORD *)v0 + 1072) = -5;
    *((_QWORD *)v0 + 269) = 0;
    *((_WORD *)v0 + 1080) = -5;
    *((_QWORD *)v0 + 271) = 0;
    *((_WORD *)v0 + 1088) = -5;
    *((_QWORD *)v0 + 273) = 0;
    *((_WORD *)v0 + 1096) = -5;
    *((_QWORD *)v0 + 275) = 0;
    *((_WORD *)v0 + 1104) = -5;
    *((_QWORD *)v0 + 277) = 0;
    *((_WORD *)v0 + 1112) = -5;
    *((_QWORD *)v0 + 279) = 0;
    *((_WORD *)v0 + 1120) = -5;
    *((_QWORD *)v0 + 281) = 0;
    *((_WORD *)v0 + 1128) = -5;
    *((_QWORD *)v0 + 283) = 0;
    *((_OWORD *)v0 + 142) = xmmword_2486A2810;
    *((_DWORD *)v0 + 572) = 65532;
    *((_WORD *)v0 + 1148) = -6;
    *((_QWORD *)v0 + 288) = 0;
    *((_WORD *)v0 + 1156) = -6;
    *((_QWORD *)v0 + 290) = 0;
    *((_WORD *)v0 + 1164) = -6;
    *((_QWORD *)v0 + 292) = 0;
    *((_QWORD *)v0 + 293) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 588) = 65532;
    *((_OWORD *)v0 + 149) = xmmword_2486A2810;
    *((_OWORD *)v0 + 150) = xmmword_2486A2810;
    *((_OWORD *)v0 + 151) = xmmword_2486A2810;
    *((_OWORD *)v0 + 152) = xmmword_2486A2810;
    *((_QWORD *)v0 + 306) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 1228) = -6;
    *((_QWORD *)v0 + 308) = 0;
    *((_WORD *)v0 + 1236) = -6;
    *((_QWORD *)v0 + 310) = 0;
    *((_WORD *)v0 + 1244) = -6;
    *((_QWORD *)v0 + 312) = 0;
    *((_WORD *)v0 + 1252) = -6;
    *((_QWORD *)v0 + 314) = 0;
    *((_DWORD *)v0 + 630) = 65532;
    *((_WORD *)v0 + 1264) = -6;
    *((_QWORD *)v0 + 317) = 0;
    *((_OWORD *)v0 + 159) = xmmword_2486A2810;
    *((_OWORD *)v0 + 160) = xmmword_2486A2810;
    *((_OWORD *)v0 + 161) = xmmword_2486A2810;
    *((_OWORD *)v0 + 162) = xmmword_2486A2810;
    *((_OWORD *)v0 + 163) = xmmword_2486A2810;
    *((_OWORD *)v0 + 164) = xmmword_2486A2810;
    *((_OWORD *)v0 + 165) = xmmword_2486A2810;
    *((_OWORD *)v0 + 166) = xmmword_2486A2810;
    *((_OWORD *)v0 + 167) = xmmword_2486A2810;
    *((_OWORD *)v0 + 168) = xmmword_2486A2810;
    *((_OWORD *)v0 + 169) = xmmword_2486A2810;
    *((_OWORD *)v0 + 170) = xmmword_2486A2810;
    *((_OWORD *)v0 + 171) = xmmword_2486A2810;
    *((_OWORD *)v0 + 172) = xmmword_2486A2810;
    *((_OWORD *)v0 + 173) = xmmword_2486A2810;
    *((_OWORD *)v0 + 174) = xmmword_2486A2810;
    *((_OWORD *)v0 + 178) = xmmword_2486A2810;
    *((_OWORD *)v0 + 179) = xmmword_2486A2810;
    *((_OWORD *)v0 + 175) = xmmword_2486A2810;
    *((_OWORD *)v0 + 176) = xmmword_2486A2810;
    *((_OWORD *)v0 + 177) = xmmword_2486A2810;
    *((_OWORD *)v0 + 180) = xmmword_2486A2810;
    *((_OWORD *)v0 + 181) = xmmword_2486A2810;
    *((_OWORD *)v0 + 182) = xmmword_2486A2810;
    *((_OWORD *)v0 + 183) = xmmword_2486A2810;
    *((_OWORD *)v0 + 184) = xmmword_2486A2810;
    *((_OWORD *)v0 + 185) = xmmword_2486A2810;
    *((_OWORD *)v0 + 186) = xmmword_2486A2810;
    *((_OWORD *)v0 + 187) = xmmword_2486A2810;
    *((_OWORD *)v0 + 188) = xmmword_2486A2810;
    *((_OWORD *)v0 + 189) = xmmword_2486A2810;
    *((_OWORD *)v0 + 190) = xmmword_2486A2810;
    *((_OWORD *)v0 + 191) = xmmword_2486A2810;
    *((_OWORD *)v0 + 192) = xmmword_2486A2810;
    *((_DWORD *)v0 + 772) = 65532;
    *(_OWORD *)(v0 + 3192) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3208) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3224) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3240) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3256) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3272) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3288) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3304) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3320) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3336) = xmmword_2486A2810;
    *((_WORD *)v0 + 1676) = -6;
    *((_QWORD *)v0 + 420) = 0;
    *((_QWORD *)v0 + 421) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 844) = 65532;
    *((_WORD *)v0 + 1692) = -5;
    *((_QWORD *)v0 + 424) = 0;
    *((_WORD *)v0 + 1700) = -5;
    *((_QWORD *)v0 + 426) = 0;
    *(_OWORD *)(v0 + 3416) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3432) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3448) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3464) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3480) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3496) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3512) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3528) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3544) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3560) = xmmword_2486A2810;
    *((_QWORD *)v0 + 447) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 896) = 65532;
    *((_WORD *)v0 + 1796) = -3;
    *((_QWORD *)v0 + 450) = 0;
    *((_WORD *)v0 + 1876) = -5;
    *((_QWORD *)v0 + 470) = 0;
    *((_DWORD *)v0 + 942) = 65532;
    *((_DWORD *)v0 + 950) = 65532;
    *((_WORD *)v0 + 1904) = -3;
    *((_QWORD *)v0 + 477) = 0;
    *((_QWORD *)v0 + 478) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 958) = 65532;
    *((_WORD *)v0 + 1920) = -6;
    *((_QWORD *)v0 + 481) = 0;
    *((_OWORD *)v0 + 241) = xmmword_2486A2810;
    *((_DWORD *)v0 + 968) = 65532;
    *((_WORD *)v0 + 1940) = -3;
    *((_QWORD *)v0 + 486) = 0;
    *(_OWORD *)(v0 + 3896) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 3912) = xmmword_2486A2810;
    *((_QWORD *)v0 + 491) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 1968) = -6;
    *((_QWORD *)v0 + 493) = 0;
    *((_WORD *)v0 + 1976) = -6;
    *((_QWORD *)v0 + 495) = 0;
    *((_WORD *)v0 + 1984) = -6;
    *((_QWORD *)v0 + 497) = 0;
    *((_WORD *)v0 + 1992) = -6;
    *((_QWORD *)v0 + 499) = 0;
    *((_WORD *)v0 + 2000) = -6;
    *((_QWORD *)v0 + 501) = 0;
    *((_WORD *)v0 + 2008) = -6;
    *((_QWORD *)v0 + 503) = 0;
    *((_QWORD *)v0 + 504) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 2020) = -5;
    *((_QWORD *)v0 + 506) = 0;
    *(_OWORD *)(v0 + 4056) = xmmword_2486A2810;
    *((_QWORD *)v0 + 509) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 2040) = -5;
    *((_QWORD *)v0 + 511) = 0;
    *((_WORD *)v0 + 2048) = -5;
    *((_QWORD *)v0 + 513) = 0;
    *((_WORD *)v0 + 2056) = -5;
    *((_QWORD *)v0 + 515) = 0;
    *((_WORD *)v0 + 2064) = -5;
    *((_QWORD *)v0 + 517) = 0;
    *((_WORD *)v0 + 2072) = -5;
    *((_QWORD *)v0 + 519) = 0;
    *((_WORD *)v0 + 2080) = -5;
    *((_QWORD *)v0 + 521) = 0;
    *((_WORD *)v0 + 2088) = -5;
    *((_QWORD *)v0 + 523) = 0;
    *((_WORD *)v0 + 2096) = -5;
    *((_QWORD *)v0 + 525) = 0;
    *((_WORD *)v0 + 2104) = -5;
    *((_QWORD *)v0 + 527) = 0;
    *((_WORD *)v0 + 2112) = -5;
    *((_QWORD *)v0 + 529) = 0;
    *((_OWORD *)v0 + 265) = xmmword_2486A2810;
    *((_OWORD *)v0 + 266) = xmmword_2486A2810;
    *((_QWORD *)v0 + 534) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 1070) = 65532;
    *((_WORD *)v0 + 2144) = -5;
    *((_QWORD *)v0 + 537) = 0;
    *((_OWORD *)v0 + 269) = xmmword_2486A2810;
    *((_OWORD *)v0 + 270) = xmmword_2486A2810;
    *((_OWORD *)v0 + 271) = xmmword_2486A2810;
    *((_OWORD *)v0 + 272) = xmmword_2486A2810;
    *((_OWORD *)v0 + 273) = xmmword_2486A2810;
    *((_OWORD *)v0 + 274) = xmmword_2486A2810;
    *((_OWORD *)v0 + 275) = xmmword_2486A2810;
    *((_OWORD *)v0 + 276) = xmmword_2486A2810;
    *((_OWORD *)v0 + 277) = xmmword_2486A2810;
    *((_OWORD *)v0 + 278) = xmmword_2486A2810;
    *((_OWORD *)v0 + 279) = xmmword_2486A2810;
    *((_OWORD *)v0 + 280) = xmmword_2486A2810;
    *((_OWORD *)v0 + 281) = xmmword_2486A2810;
    *((_OWORD *)v0 + 282) = xmmword_2486A2810;
    *((_OWORD *)v0 + 283) = xmmword_2486A2810;
    *((_OWORD *)v0 + 284) = xmmword_2486A2810;
    *((_OWORD *)v0 + 285) = xmmword_2486A2810;
    *((_OWORD *)v0 + 286) = xmmword_2486A2810;
    *((_OWORD *)v0 + 287) = xmmword_2486A2810;
    *((_OWORD *)v0 + 288) = xmmword_2486A2810;
    *((_OWORD *)v0 + 289) = xmmword_2486A2810;
    *((_WORD *)v0 + 2320) = -6;
    *((_QWORD *)v0 + 581) = 0;
    *((_WORD *)v0 + 2328) = -5;
    *((_QWORD *)v0 + 583) = 0;
    *((_WORD *)v0 + 2336) = -5;
    *((_QWORD *)v0 + 585) = 0;
    *((_WORD *)v0 + 2344) = -6;
    *((_QWORD *)v0 + 587) = 0;
    *((_OWORD *)v0 + 294) = xmmword_2486A2810;
    *((_OWORD *)v0 + 295) = xmmword_2486A2810;
    *((_DWORD *)v0 + 1184) = 65532;
    *((_QWORD *)v0 + 617) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 2472) = -6;
    *((_QWORD *)v0 + 619) = 0;
    *((_WORD *)v0 + 2480) = -5;
    *((_QWORD *)v0 + 621) = 0;
    *((_WORD *)v0 + 2488) = -5;
    *((_QWORD *)v0 + 623) = 0;
    *((_QWORD *)v0 + 624) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 2500) = -6;
    *((_QWORD *)v0 + 626) = 0;
    *((_WORD *)v0 + 2508) = -6;
    *((_QWORD *)v0 + 628) = 0;
    *((_WORD *)v0 + 2516) = -6;
    *((_QWORD *)v0 + 630) = 0;
    *((_WORD *)v0 + 2524) = -6;
    *((_QWORD *)v0 + 632) = 0;
    *((_DWORD *)v0 + 1266) = 65532;
    *((_WORD *)v0 + 2536) = -5;
    *((_QWORD *)v0 + 635) = 0;
    *((_DWORD *)v0 + 1272) = 65532;
    *((_WORD *)v0 + 2548) = -6;
    *((_QWORD *)v0 + 638) = 0;
    *(_OWORD *)(v0 + 5112) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 5128) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 5144) = xmmword_2486A2810;
    *((_QWORD *)v0 + 645) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 1292) = 65532;
    *((_WORD *)v0 + 2588) = -5;
    *((_QWORD *)v0 + 648) = 0;
    *((_WORD *)v0 + 2596) = -5;
    *((_QWORD *)v0 + 650) = 0;
    *((_WORD *)v0 + 2604) = -5;
    *((_QWORD *)v0 + 652) = 0;
    *((_WORD *)v0 + 2612) = -6;
    *((_QWORD *)v0 + 654) = 0;
    *((_QWORD *)v0 + 655) = 0xFFFC0000FFFCLL;
    *((_DWORD *)v0 + 1340) = 65532;
    *((_WORD *)v0 + 2684) = -5;
    *((_QWORD *)v0 + 672) = 0;
    *((_WORD *)v0 + 2692) = -5;
    *((_QWORD *)v0 + 674) = 0;
    *((_WORD *)v0 + 2700) = -5;
    *((_QWORD *)v0 + 676) = 0;
    *(_OWORD *)(v0 + 5416) = xmmword_2486A2810;
    *((_QWORD *)v0 + 679) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 2720) = -5;
    *((_QWORD *)v0 + 681) = 0;
    *((_OWORD *)v0 + 341) = xmmword_2486A2810;
    *((_OWORD *)v0 + 342) = xmmword_2486A2810;
    *((_OWORD *)v0 + 343) = xmmword_2486A2810;
    *((_OWORD *)v0 + 344) = xmmword_2486A2810;
    *((_OWORD *)v0 + 345) = xmmword_2486A2810;
    *((_OWORD *)v0 + 346) = xmmword_2486A2810;
    *((_OWORD *)v0 + 347) = xmmword_2486A2810;
    *((_OWORD *)v0 + 348) = xmmword_2486A2810;
    *((_OWORD *)v0 + 349) = xmmword_2486A2810;
    *((_OWORD *)v0 + 350) = xmmword_2486A2810;
    *((_OWORD *)v0 + 351) = xmmword_2486A2810;
    *((_OWORD *)v0 + 352) = xmmword_2486A2810;
    *((_OWORD *)v0 + 353) = xmmword_2486A2810;
    *((_OWORD *)v0 + 354) = xmmword_2486A2810;
    *((_OWORD *)v0 + 355) = xmmword_2486A2810;
    *((_OWORD *)v0 + 356) = xmmword_2486A2810;
    *((_OWORD *)v0 + 357) = xmmword_2486A2810;
    *((_OWORD *)v0 + 358) = xmmword_2486A2810;
    *((_OWORD *)v0 + 359) = xmmword_2486A2810;
    *((_OWORD *)v0 + 360) = xmmword_2486A2810;
    *((_QWORD *)v0 + 722) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 2892) = -6;
    *((_QWORD *)v0 + 724) = 0;
    *((_WORD *)v0 + 2900) = -6;
    *((_QWORD *)v0 + 726) = 0;
    *((_WORD *)v0 + 2908) = -6;
    *((_QWORD *)v0 + 728) = 0;
    *((_WORD *)v0 + 2916) = -6;
    *((_QWORD *)v0 + 730) = 0;
    *((_WORD *)v0 + 2924) = -6;
    *((_QWORD *)v0 + 732) = 0;
    *(_OWORD *)(v0 + 5864) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 5880) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 5896) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 5912) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 5992) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 6008) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 6024) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 6040) = xmmword_2486A2810;
    *((_DWORD *)v0 + 1514) = 65532;
    *((_WORD *)v0 + 3032) = -5;
    *((_QWORD *)v0 + 759) = 0;
    *((_WORD *)v0 + 3040) = -5;
    *((_QWORD *)v0 + 761) = 0;
    *((_WORD *)v0 + 3048) = -5;
    *((_QWORD *)v0 + 763) = 0;
    *((_WORD *)v0 + 3056) = -5;
    *((_QWORD *)v0 + 765) = 0;
    *((_WORD *)v0 + 3064) = -5;
    *((_QWORD *)v0 + 767) = 0;
    *((_WORD *)v0 + 3072) = -5;
    *((_QWORD *)v0 + 769) = 0;
    *((_WORD *)v0 + 3080) = -5;
    *((_QWORD *)v0 + 771) = 0;
    *((_WORD *)v0 + 3088) = -5;
    *((_QWORD *)v0 + 773) = 0;
    *((_WORD *)v0 + 3096) = -5;
    *((_QWORD *)v0 + 775) = 0;
    *((_WORD *)v0 + 3104) = -5;
    *((_QWORD *)v0 + 777) = 0;
    *((_WORD *)v0 + 3112) = -5;
    *((_QWORD *)v0 + 779) = 0;
    *((_QWORD *)v0 + 780) = 0xFFFC0000FFFCLL;
    *((_WORD *)v0 + 3124) = -6;
    *((_QWORD *)v0 + 782) = 0;
    *(_OWORD *)(v0 + 6264) = xmmword_2486A2810;
    *(_OWORD *)(v0 + 6280) = xmmword_2486A2810;
    *((_DWORD *)v0 + 1574) = 65532;
    *((_DWORD *)v0 + 4) = 204;
    *(_OWORD *)v0 = xmmword_2486A2820;
    *((_QWORD *)v0 + 11) = v0 + 344;
    *((_QWORD *)v0 + 12) = v0 + 360;
    v2 = malloc_type_malloc(0x660uLL, 0x2004093837F09uLL);
    v1[3] = v2;
    if (!v2)
      goto LABEL_8;
    *v2 = v1 + 42;
    *(_QWORD *)(v1[3] + 8) = v1 + 44;
    *(_QWORD *)(v1[3] + 16) = v1 + 46;
    *(_QWORD *)(v1[3] + 24) = v1 + 48;
    *(_QWORD *)(v1[3] + 32) = v1 + 50;
    *(_QWORD *)(v1[3] + 40) = v1 + 52;
    *(_QWORD *)(v1[3] + 48) = v1 + 54;
    *(_QWORD *)(v1[3] + 56) = v1 + 56;
    *(_QWORD *)(v1[3] + 64) = v1 + 58;
    *(_QWORD *)(v1[3] + 72) = v1 + 60;
    *(_QWORD *)(v1[3] + 80) = v1 + 62;
    *(_QWORD *)(v1[3] + 88) = v1 + 64;
    *(_QWORD *)(v1[3] + 96) = v1 + 66;
    *(_QWORD *)(v1[3] + 104) = v1 + 68;
    *(_QWORD *)(v1[3] + 112) = v1 + 70;
    *(_QWORD *)(v1[3] + 120) = v1 + 72;
    *(_QWORD *)(v1[3] + 128) = v1 + 74;
    *(_QWORD *)(v1[3] + 136) = v1 + 76;
    *(_QWORD *)(v1[3] + 144) = v1 + 78;
    *(_QWORD *)(v1[3] + 152) = v1 + 81;
    *(_QWORD *)(v1[3] + 160) = v1 + 83;
    *(_QWORD *)(v1[3] + 168) = v1 + 85;
    *(_QWORD *)(v1[3] + 176) = v1 + 87;
    *(_QWORD *)(v1[3] + 184) = v1 + 89;
    *(_QWORD *)(v1[3] + 192) = v1 + 97;
    *(_QWORD *)(v1[3] + 200) = v1 + 99;
    *(_QWORD *)(v1[3] + 208) = v1 + 101;
    *(_QWORD *)(v1[3] + 216) = v1 + 103;
    *(_QWORD *)(v1[3] + 224) = v1 + 105;
    *(_QWORD *)(v1[3] + 232) = v1 + 107;
    *(_QWORD *)(v1[3] + 240) = v1 + 109;
    *(_QWORD *)(v1[3] + 248) = v1 + 111;
    *(_QWORD *)(v1[3] + 256) = v1 + 113;
    *(_QWORD *)(v1[3] + 264) = v1 + 115;
    *(_QWORD *)(v1[3] + 272) = v1 + 143;
    *(_QWORD *)(v1[3] + 280) = v1 + 145;
    *(_QWORD *)(v1[3] + 288) = v1 + 147;
    *(_QWORD *)(v1[3] + 296) = v1 + 150;
    *(_QWORD *)(v1[3] + 304) = v1 + 154;
    *(_QWORD *)(v1[3] + 312) = v1 + 156;
    *(_QWORD *)(v1[3] + 320) = v1 + 158;
    *(_QWORD *)(v1[3] + 328) = v1 + 160;
    *(_QWORD *)(v1[3] + 336) = v1 + 162;
    *(_QWORD *)(v1[3] + 344) = v1 + 164;
    *(_QWORD *)(v1[3] + 352) = v1 + 166;
    *(_QWORD *)(v1[3] + 360) = v1 + 168;
    *(_QWORD *)(v1[3] + 368) = v1 + 170;
    *(_QWORD *)(v1[3] + 376) = v1 + 172;
    *(_QWORD *)(v1[3] + 384) = v1 + 174;
    *(_QWORD *)(v1[3] + 392) = v1 + 176;
    *(_QWORD *)(v1[3] + 400) = v1 + 178;
    *(_QWORD *)(v1[3] + 408) = v1 + 180;
    *(_QWORD *)(v1[3] + 416) = v1 + 182;
    *(_QWORD *)(v1[3] + 424) = v1 + 184;
    *(_QWORD *)(v1[3] + 432) = v1 + 186;
    *(_QWORD *)(v1[3] + 440) = v1 + 188;
    *(_QWORD *)(v1[3] + 448) = v1 + 190;
    *(_QWORD *)(v1[3] + 456) = v1 + 192;
    *(_QWORD *)(v1[3] + 464) = v1 + 194;
    *(_QWORD *)(v1[3] + 472) = v1 + 196;
    *(_QWORD *)(v1[3] + 480) = v1 + 198;
    *(_QWORD *)(v1[3] + 488) = v1 + 200;
    *(_QWORD *)(v1[3] + 496) = v1 + 202;
    *(_QWORD *)(v1[3] + 504) = v1 + 204;
    *(_QWORD *)(v1[3] + 512) = v1 + 206;
    *(_QWORD *)(v1[3] + 520) = v1 + 208;
    *(_QWORD *)(v1[3] + 528) = v1 + 210;
    *(_QWORD *)(v1[3] + 536) = v1 + 212;
    *(_QWORD *)(v1[3] + 544) = v1 + 214;
    *(_QWORD *)(v1[3] + 552) = v1 + 216;
    *(_QWORD *)(v1[3] + 560) = v1 + 218;
    *(_QWORD *)(v1[3] + 568) = v1 + 288;
    *(_QWORD *)(v1[3] + 576) = v1 + 290;
    *(_QWORD *)(v1[3] + 584) = v1 + 292;
    *(_QWORD *)(v1[3] + 592) = v1 + 308;
    *(_QWORD *)(v1[3] + 600) = v1 + 310;
    *(_QWORD *)(v1[3] + 608) = v1 + 312;
    *(_QWORD *)(v1[3] + 616) = v1 + 314;
    *(_QWORD *)(v1[3] + 624) = v1 + 317;
    *(_QWORD *)(v1[3] + 632) = v1 + 420;
    *(_QWORD *)(v1[3] + 640) = v1 + 481;
    *(_QWORD *)(v1[3] + 648) = v1 + 493;
    *(_QWORD *)(v1[3] + 656) = v1 + 495;
    *(_QWORD *)(v1[3] + 664) = v1 + 497;
    *(_QWORD *)(v1[3] + 672) = v1 + 499;
    *(_QWORD *)(v1[3] + 680) = v1 + 501;
    *(_QWORD *)(v1[3] + 688) = v1 + 503;
    *(_QWORD *)(v1[3] + 696) = v1 + 581;
    *(_QWORD *)(v1[3] + 704) = v1 + 587;
    *(_QWORD *)(v1[3] + 712) = v1 + 619;
    *(_QWORD *)(v1[3] + 720) = v1 + 626;
    *(_QWORD *)(v1[3] + 728) = v1 + 628;
    *(_QWORD *)(v1[3] + 736) = v1 + 630;
    *(_QWORD *)(v1[3] + 744) = v1 + 632;
    *(_QWORD *)(v1[3] + 752) = v1 + 638;
    *(_QWORD *)(v1[3] + 760) = v1 + 654;
    *(_QWORD *)(v1[3] + 768) = v1 + 724;
    *(_QWORD *)(v1[3] + 776) = v1 + 726;
    *(_QWORD *)(v1[3] + 784) = v1 + 728;
    *(_QWORD *)(v1[3] + 792) = v1 + 730;
    *(_QWORD *)(v1[3] + 800) = v1 + 732;
    *(_QWORD *)(v1[3] + 808) = v1 + 782;
    *(_QWORD *)(v1[3] + 816) = v1 + 42;
    *(_QWORD *)(v1[3] + 824) = v1 + 44;
    *(_QWORD *)(v1[3] + 832) = v1 + 46;
    *(_QWORD *)(v1[3] + 840) = v1 + 48;
    *(_QWORD *)(v1[3] + 848) = v1 + 50;
    *(_QWORD *)(v1[3] + 856) = v1 + 52;
    *(_QWORD *)(v1[3] + 864) = v1 + 54;
    *(_QWORD *)(v1[3] + 872) = v1 + 56;
    *(_QWORD *)(v1[3] + 880) = v1 + 58;
    *(_QWORD *)(v1[3] + 888) = v1 + 60;
    *(_QWORD *)(v1[3] + 896) = v1 + 62;
    *(_QWORD *)(v1[3] + 904) = v1 + 64;
    *(_QWORD *)(v1[3] + 912) = v1 + 66;
    *(_QWORD *)(v1[3] + 920) = v1 + 68;
    *(_QWORD *)(v1[3] + 928) = v1 + 70;
    *(_QWORD *)(v1[3] + 936) = v1 + 72;
    *(_QWORD *)(v1[3] + 944) = v1 + 74;
    *(_QWORD *)(v1[3] + 952) = v1 + 76;
    *(_QWORD *)(v1[3] + 960) = v1 + 78;
    *(_QWORD *)(v1[3] + 968) = v1 + 81;
    *(_QWORD *)(v1[3] + 976) = v1 + 83;
    *(_QWORD *)(v1[3] + 984) = v1 + 85;
    *(_QWORD *)(v1[3] + 992) = v1 + 87;
    *(_QWORD *)(v1[3] + 1000) = v1 + 89;
    *(_QWORD *)(v1[3] + 1008) = v1 + 97;
    *(_QWORD *)(v1[3] + 1016) = v1 + 99;
    *(_QWORD *)(v1[3] + 1024) = v1 + 101;
    *(_QWORD *)(v1[3] + 1032) = v1 + 103;
    *(_QWORD *)(v1[3] + 1040) = v1 + 105;
    *(_QWORD *)(v1[3] + 1048) = v1 + 107;
    *(_QWORD *)(v1[3] + 1056) = v1 + 109;
    *(_QWORD *)(v1[3] + 1064) = v1 + 111;
    *(_QWORD *)(v1[3] + 1072) = v1 + 113;
    *(_QWORD *)(v1[3] + 1080) = v1 + 115;
    *(_QWORD *)(v1[3] + 1088) = v1 + 143;
    *(_QWORD *)(v1[3] + 1096) = v1 + 145;
    *(_QWORD *)(v1[3] + 1104) = v1 + 147;
    *(_QWORD *)(v1[3] + 1112) = v1 + 150;
    *(_QWORD *)(v1[3] + 1120) = v1 + 154;
    *(_QWORD *)(v1[3] + 1128) = v1 + 156;
    *(_QWORD *)(v1[3] + 1136) = v1 + 158;
    *(_QWORD *)(v1[3] + 1144) = v1 + 160;
    *(_QWORD *)(v1[3] + 1152) = v1 + 162;
    *(_QWORD *)(v1[3] + 1160) = v1 + 164;
    *(_QWORD *)(v1[3] + 1168) = v1 + 166;
    *(_QWORD *)(v1[3] + 1176) = v1 + 168;
    *(_QWORD *)(v1[3] + 1184) = v1 + 170;
    *(_QWORD *)(v1[3] + 1192) = v1 + 172;
    *(_QWORD *)(v1[3] + 1200) = v1 + 174;
    *(_QWORD *)(v1[3] + 1208) = v1 + 176;
    *(_QWORD *)(v1[3] + 1216) = v1 + 178;
    *(_QWORD *)(v1[3] + 1224) = v1 + 180;
    *(_QWORD *)(v1[3] + 1232) = v1 + 182;
    *(_QWORD *)(v1[3] + 1240) = v1 + 184;
    *(_QWORD *)(v1[3] + 1248) = v1 + 186;
    *(_QWORD *)(v1[3] + 1256) = v1 + 188;
    *(_QWORD *)(v1[3] + 1264) = v1 + 190;
    *(_QWORD *)(v1[3] + 1272) = v1 + 192;
    *(_QWORD *)(v1[3] + 1280) = v1 + 194;
    *(_QWORD *)(v1[3] + 1288) = v1 + 196;
    *(_QWORD *)(v1[3] + 1296) = v1 + 198;
    *(_QWORD *)(v1[3] + 1304) = v1 + 200;
    *(_QWORD *)(v1[3] + 1312) = v1 + 202;
    *(_QWORD *)(v1[3] + 1320) = v1 + 204;
    *(_QWORD *)(v1[3] + 1328) = v1 + 206;
    *(_QWORD *)(v1[3] + 1336) = v1 + 208;
    *(_QWORD *)(v1[3] + 1344) = v1 + 210;
    *(_QWORD *)(v1[3] + 1352) = v1 + 212;
    *(_QWORD *)(v1[3] + 1360) = v1 + 214;
    *(_QWORD *)(v1[3] + 1368) = v1 + 216;
    *(_QWORD *)(v1[3] + 1376) = v1 + 218;
    *(_QWORD *)(v1[3] + 1384) = v1 + 288;
    *(_QWORD *)(v1[3] + 1392) = v1 + 290;
    *(_QWORD *)(v1[3] + 1400) = v1 + 292;
    *(_QWORD *)(v1[3] + 1408) = v1 + 308;
    *(_QWORD *)(v1[3] + 1416) = v1 + 310;
    *(_QWORD *)(v1[3] + 1424) = v1 + 312;
    *(_QWORD *)(v1[3] + 1432) = v1 + 314;
    *(_QWORD *)(v1[3] + 1440) = v1 + 317;
    *(_QWORD *)(v1[3] + 1448) = v1 + 420;
    *(_QWORD *)(v1[3] + 1456) = v1 + 481;
    *(_QWORD *)(v1[3] + 1464) = v1 + 493;
    *(_QWORD *)(v1[3] + 1472) = v1 + 495;
    *(_QWORD *)(v1[3] + 1480) = v1 + 497;
    *(_QWORD *)(v1[3] + 1488) = v1 + 499;
    *(_QWORD *)(v1[3] + 1496) = v1 + 501;
    *(_QWORD *)(v1[3] + 1504) = v1 + 503;
    *(_QWORD *)(v1[3] + 1512) = v1 + 581;
    *(_QWORD *)(v1[3] + 1520) = v1 + 587;
    *(_QWORD *)(v1[3] + 1528) = v1 + 619;
    *(_QWORD *)(v1[3] + 1536) = v1 + 626;
    *(_QWORD *)(v1[3] + 1544) = v1 + 628;
    *(_QWORD *)(v1[3] + 1552) = v1 + 630;
    *(_QWORD *)(v1[3] + 1560) = v1 + 632;
    *(_QWORD *)(v1[3] + 1568) = v1 + 638;
    *(_QWORD *)(v1[3] + 1576) = v1 + 654;
    *(_QWORD *)(v1[3] + 1584) = v1 + 724;
    *(_QWORD *)(v1[3] + 1592) = v1 + 726;
    *(_QWORD *)(v1[3] + 1600) = v1 + 728;
    *(_QWORD *)(v1[3] + 1608) = v1 + 730;
    *(_QWORD *)(v1[3] + 1616) = v1 + 732;
    *(_QWORD *)(v1[3] + 1624) = v1 + 782;
    v3 = malloc_type_malloc(0x2C0uLL, 0x1020040EDED9539uLL);
    v1[4] = v3;
    if (!v3)
      goto LABEL_8;
    *v3 = v1 + 223;
    v3[1] = 0x600000001;
    v3[2] = v1 + 226;
    v3[3] = 0x600000001;
    v3[4] = v1 + 229;
    v3[5] = 0x600000001;
    v3[6] = v1 + 232;
    v3[7] = 0x600000007;
    v3[8] = v1 + 235;
    v3[9] = 0x200000008;
    v3[10] = v1 + 238;
    v3[11] = 0x600000000;
    v3[12] = v1 + 295;
    v3[13] = 0x600000001;
    v3[14] = v1 + 387;
    v3[15] = 0xE00000005;
    v3[16] = v1 + 391;
    v3[17] = 0xE00000005;
    v3[18] = v1 + 395;
    v3[19] = 0xE00000005;
    v3[20] = v1 + 451;
    v3[21] = 0x1600000004;
    v3[22] = v1 + 456;
    v3[23] = 0x3000000006;
    v3[24] = v1 + 464;
    v3[25] = 0x1600000004;
    v3[26] = v1 + 472;
    v3[27] = 0x600000001;
    v3[28] = v1 + 593;
    v3[29] = 0x3000000006;
    v3[30] = v1 + 601;
    v3[31] = 0x3000000006;
    v3[32] = v1 + 609;
    v3[33] = 0x3000000006;
    v3[34] = v1 + 656;
    v3[35] = 0xE00000005;
    v3[36] = v1 + 660;
    v3[37] = 0x1600000004;
    v3[38] = v1 + 665;
    v3[39] = 0x1600000004;
    v3[40] = v1 + 741;
    v3[41] = 0x1000000002;
    v3[42] = v1 + 745;
    v3[43] = 0x1000000002;
    v3[44] = v1 + 223;
    v3[45] = 0x600000001;
    v3[46] = v1 + 226;
    v3[47] = 0x600000001;
    v3[48] = v1 + 229;
    v3[49] = 0x600000001;
    v3[50] = v1 + 232;
    v3[51] = 0x600000007;
    v3[52] = v1 + 235;
    v3[53] = 0x200000008;
    v3[54] = v1 + 238;
    v3[55] = 0x600000000;
    v3[56] = v1 + 295;
    v3[57] = 0x600000001;
    v3[58] = v1 + 387;
    v3[59] = 0xE00000005;
    v3[60] = v1 + 391;
    v3[61] = 0xE00000005;
    v3[62] = v1 + 395;
    v3[63] = 0xE00000005;
    v3[64] = v1 + 451;
    v3[65] = 0x1600000004;
    v3[66] = v1 + 456;
    v4 = (_QWORD *)v1[4];
    v4[67] = 0x3000000006;
    v4[68] = v1 + 464;
    v4[69] = 0x1600000004;
    v4[70] = v1 + 472;
    v4[71] = 0x600000001;
    v4[72] = v1 + 593;
    v4[73] = 0x3000000006;
    v4[74] = v1 + 601;
    v4[75] = 0x3000000006;
    v4[76] = v1 + 609;
    v4[77] = 0x3000000006;
    v4[78] = v1 + 656;
    v4[79] = 0xE00000005;
    v4[80] = v1 + 660;
    v4[81] = 0x1600000004;
    v4[82] = v1 + 665;
    v4[83] = 0x1600000004;
    v4[84] = v1 + 741;
    v4[85] = 0x1000000002;
    v4[86] = v1 + 745;
    v4[87] = 0x1000000002;
    v5 = OUTLINED_FUNCTION_0_49(0x30uLL);
    v1[5] = v5;
    if (!v5)
      goto LABEL_8;
    *v5 = v1 + 450;
    *(_QWORD *)(v1[5] + 8) = v1 + 477;
    *(_QWORD *)(v1[5] + 16) = v1 + 486;
    *(_QWORD *)(v1[5] + 24) = v1 + 450;
    *(_QWORD *)(v1[5] + 32) = v1 + 477;
    *(_QWORD *)(v1[5] + 40) = v1 + 486;
    v6 = OUTLINED_FUNCTION_0_49(0x2710uLL);
    v1[6] = v6;
    if (!v6)
      goto LABEL_8;
    *v6 = (char *)v1 + 634;
    *(_QWORD *)(v1[6] + 8) = (char *)v1 + 722;
    *(_QWORD *)(v1[6] + 16) = (char *)v1 + 726;
    *(_QWORD *)(v1[6] + 24) = (char *)v1 + 730;
    *(_QWORD *)(v1[6] + 32) = (char *)v1 + 734;
    *(_QWORD *)(v1[6] + 40) = (char *)v1 + 738;
    *(_QWORD *)(v1[6] + 48) = (char *)v1 + 742;
    *(_QWORD *)(v1[6] + 56) = (char *)v1 + 746;
    *(_QWORD *)(v1[6] + 64) = (char *)v1 + 750;
    *(_QWORD *)(v1[6] + 72) = (char *)v1 + 754;
    *(_QWORD *)(v1[6] + 80) = (char *)v1 + 758;
    *(_QWORD *)(v1[6] + 88) = (char *)v1 + 762;
    *(_QWORD *)(v1[6] + 96) = (char *)v1 + 766;
    *(_QWORD *)(v1[6] + 104) = (char *)v1 + 930;
    *(_QWORD *)(v1[6] + 112) = (char *)v1 + 934;
    *(_QWORD *)(v1[6] + 120) = (char *)v1 + 938;
    *(_QWORD *)(v1[6] + 128) = (char *)v1 + 942;
    *(_QWORD *)(v1[6] + 136) = (char *)v1 + 946;
    *(_QWORD *)(v1[6] + 144) = (char *)v1 + 950;
    *(_QWORD *)(v1[6] + 152) = (char *)v1 + 954;
    *(_QWORD *)(v1[6] + 160) = (char *)v1 + 958;
    *(_QWORD *)(v1[6] + 168) = (char *)v1 + 962;
    *(_QWORD *)(v1[6] + 176) = (char *)v1 + 966;
    *(_QWORD *)(v1[6] + 184) = (char *)v1 + 970;
    *(_QWORD *)(v1[6] + 192) = (char *)v1 + 974;
    *(_QWORD *)(v1[6] + 200) = (char *)v1 + 978;
    *(_QWORD *)(v1[6] + 208) = (char *)v1 + 982;
    *(_QWORD *)(v1[6] + 216) = (char *)v1 + 986;
    *(_QWORD *)(v1[6] + 224) = (char *)v1 + 990;
    *(_QWORD *)(v1[6] + 232) = (char *)v1 + 994;
    *(_QWORD *)(v1[6] + 240) = (char *)v1 + 998;
    *(_QWORD *)(v1[6] + 248) = (char *)v1 + 1002;
    *(_QWORD *)(v1[6] + 256) = (char *)v1 + 1006;
    *(_QWORD *)(v1[6] + 264) = (char *)v1 + 1010;
    *(_QWORD *)(v1[6] + 272) = (char *)v1 + 1014;
    *(_QWORD *)(v1[6] + 280) = (char *)v1 + 1018;
    *(_QWORD *)(v1[6] + 288) = (char *)v1 + 1022;
    *(_QWORD *)(v1[6] + 296) = (char *)v1 + 1026;
    *(_QWORD *)(v1[6] + 304) = (char *)v1 + 1030;
    *(_QWORD *)(v1[6] + 312) = (char *)v1 + 1130;
    *(_QWORD *)(v1[6] + 320) = (char *)v1 + 1186;
    *(_QWORD *)(v1[6] + 328) = (char *)v1 + 1190;
    *(_QWORD *)(v1[6] + 336) = (char *)v1 + 1210;
    *(_QWORD *)(v1[6] + 344) = (char *)v1 + 1214;
    *(_QWORD *)(v1[6] + 352) = (char *)v1 + 1218;
    *(_QWORD *)(v1[6] + 360) = (char *)v1 + 1930;
    *(_QWORD *)(v1[6] + 368) = (char *)v1 + 1934;
    *(_QWORD *)(v1[6] + 376) = (char *)v1 + 1938;
    *(_QWORD *)(v1[6] + 384) = (char *)v1 + 1942;
    *(_QWORD *)(v1[6] + 392) = (char *)v1 + 1946;
    *(_QWORD *)(v1[6] + 400) = (char *)v1 + 1950;
    *(_QWORD *)(v1[6] + 408) = (char *)v1 + 1954;
    *(_QWORD *)(v1[6] + 416) = (char *)v1 + 1958;
    *(_QWORD *)(v1[6] + 424) = (char *)v1 + 1962;
    *(_QWORD *)(v1[6] + 432) = (char *)v1 + 1966;
    *(_QWORD *)(v1[6] + 440) = (char *)v1 + 1970;
    *(_QWORD *)(v1[6] + 448) = (char *)v1 + 1974;
    *(_QWORD *)(v1[6] + 456) = (char *)v1 + 1978;
    *(_QWORD *)(v1[6] + 464) = (char *)v1 + 1982;
    *(_QWORD *)(v1[6] + 472) = (char *)v1 + 1986;
    *(_QWORD *)(v1[6] + 480) = (char *)v1 + 1990;
    *(_QWORD *)(v1[6] + 488) = (char *)v1 + 1994;
    *(_QWORD *)(v1[6] + 496) = (char *)v1 + 1998;
    *(_QWORD *)(v1[6] + 504) = (char *)v1 + 2002;
    *(_QWORD *)(v1[6] + 512) = (char *)v1 + 2006;
    *(_QWORD *)(v1[6] + 520) = (char *)v1 + 2010;
    *(_QWORD *)(v1[6] + 528) = (char *)v1 + 2014;
    *(_QWORD *)(v1[6] + 536) = (char *)v1 + 2018;
    *(_QWORD *)(v1[6] + 544) = (char *)v1 + 2022;
    *(_QWORD *)(v1[6] + 552) = (char *)v1 + 2026;
    *(_QWORD *)(v1[6] + 560) = (char *)v1 + 2030;
    *(_QWORD *)(v1[6] + 568) = (char *)v1 + 2034;
    *(_QWORD *)(v1[6] + 576) = (char *)v1 + 2038;
    *(_QWORD *)(v1[6] + 584) = (char *)v1 + 2042;
    *(_QWORD *)(v1[6] + 592) = (char *)v1 + 2046;
    *(_QWORD *)(v1[6] + 600) = (char *)v1 + 2050;
    *(_QWORD *)(v1[6] + 608) = (char *)v1 + 2054;
    *(_QWORD *)(v1[6] + 616) = (char *)v1 + 2058;
    *(_QWORD *)(v1[6] + 624) = (char *)v1 + 2062;
    *(_QWORD *)(v1[6] + 632) = (char *)v1 + 2066;
    *(_QWORD *)(v1[6] + 640) = (char *)v1 + 2070;
    *(_QWORD *)(v1[6] + 648) = (char *)v1 + 2074;
    *(_QWORD *)(v1[6] + 656) = (char *)v1 + 2078;
    *(_QWORD *)(v1[6] + 664) = (char *)v1 + 2082;
    *(_QWORD *)(v1[6] + 672) = (char *)v1 + 2086;
    *(_QWORD *)(v1[6] + 680) = (char *)v1 + 2090;
    *(_QWORD *)(v1[6] + 688) = (char *)v1 + 2094;
    *(_QWORD *)(v1[6] + 696) = (char *)v1 + 2274;
    *(_QWORD *)(v1[6] + 704) = (char *)v1 + 2278;
    *(_QWORD *)(v1[6] + 712) = (char *)v1 + 2282;
    *(_QWORD *)(v1[6] + 720) = (char *)v1 + 2286;
    *(_QWORD *)(v1[6] + 728) = (char *)v1 + 2290;
    *(_QWORD *)(v1[6] + 736) = (char *)v1 + 2346;
    *(_QWORD *)(v1[6] + 744) = (char *)v1 + 2350;
    *(_QWORD *)(v1[6] + 752) = (char *)v1 + 2354;
    *(_QWORD *)(v1[6] + 760) = (char *)v1 + 2386;
    *(_QWORD *)(v1[6] + 768) = (char *)v1 + 2390;
    *(_QWORD *)(v1[6] + 776) = (char *)v1 + 2394;
    *(_QWORD *)(v1[6] + 784) = (char *)v1 + 2398;
    *(_QWORD *)(v1[6] + 792) = (char *)v1 + 2402;
    *(_QWORD *)(v1[6] + 800) = (char *)v1 + 2406;
    *(_QWORD *)(v1[6] + 808) = (char *)v1 + 2410;
    *(_QWORD *)(v1[6] + 816) = (char *)v1 + 2414;
    *(_QWORD *)(v1[6] + 824) = (char *)v1 + 2418;
    *(_QWORD *)(v1[6] + 832) = (char *)v1 + 2422;
    *(_QWORD *)(v1[6] + 840) = (char *)v1 + 2426;
    *(_QWORD *)(v1[6] + 848) = (char *)v1 + 2430;
    *(_QWORD *)(v1[6] + 856) = (char *)v1 + 2434;
    *(_QWORD *)(v1[6] + 864) = (char *)v1 + 2438;
    *(_QWORD *)(v1[6] + 872) = (char *)v1 + 2442;
    *(_QWORD *)(v1[6] + 880) = (char *)v1 + 2446;
    *(_QWORD *)(v1[6] + 888) = (char *)v1 + 2450;
    *(_QWORD *)(v1[6] + 896) = (char *)v1 + 2454;
    *(_QWORD *)(v1[6] + 904) = (char *)v1 + 2522;
    *(_QWORD *)(v1[6] + 912) = (char *)v1 + 2546;
    *(_QWORD *)(v1[6] + 920) = (char *)v1 + 2550;
    *(_QWORD *)(v1[6] + 928) = (char *)v1 + 2554;
    *(_QWORD *)(v1[6] + 936) = (char *)v1 + 2558;
    *(_QWORD *)(v1[6] + 944) = (char *)v1 + 2562;
    *(_QWORD *)(v1[6] + 952) = (char *)v1 + 2566;
    *(_QWORD *)(v1[6] + 960) = (char *)v1 + 2570;
    *(_QWORD *)(v1[6] + 968) = (char *)v1 + 2574;
    *(_QWORD *)(v1[6] + 976) = (char *)v1 + 2578;
    *(_QWORD *)(v1[6] + 984) = (char *)v1 + 2582;
    *(_QWORD *)(v1[6] + 992) = (char *)v1 + 2586;
    *(_QWORD *)(v1[6] + 1000) = (char *)v1 + 2590;
    *(_QWORD *)(v1[6] + 1008) = (char *)v1 + 2594;
    *(_QWORD *)(v1[6] + 1016) = (char *)v1 + 2598;
    *(_QWORD *)(v1[6] + 1024) = (char *)v1 + 2602;
    *(_QWORD *)(v1[6] + 1032) = (char *)v1 + 2606;
    *(_QWORD *)(v1[6] + 1040) = (char *)v1 + 2610;
    *(_QWORD *)(v1[6] + 1048) = (char *)v1 + 2614;
    *(_QWORD *)(v1[6] + 1056) = (char *)v1 + 2618;
    *(_QWORD *)(v1[6] + 1064) = (char *)v1 + 2622;
    *(_QWORD *)(v1[6] + 1072) = (char *)v1 + 2626;
    *(_QWORD *)(v1[6] + 1080) = (char *)v1 + 2630;
    *(_QWORD *)(v1[6] + 1088) = (char *)v1 + 2634;
    *(_QWORD *)(v1[6] + 1096) = (char *)v1 + 2638;
    *(_QWORD *)(v1[6] + 1104) = (char *)v1 + 2642;
    *(_QWORD *)(v1[6] + 1112) = (char *)v1 + 2646;
    *(_QWORD *)(v1[6] + 1120) = (char *)v1 + 2650;
    *(_QWORD *)(v1[6] + 1128) = (char *)v1 + 2654;
    *(_QWORD *)(v1[6] + 1136) = (char *)v1 + 2658;
    *(_QWORD *)(v1[6] + 1144) = (char *)v1 + 2662;
    *(_QWORD *)(v1[6] + 1152) = (char *)v1 + 2666;
    *(_QWORD *)(v1[6] + 1160) = (char *)v1 + 2670;
    *(_QWORD *)(v1[6] + 1168) = (char *)v1 + 2674;
    *(_QWORD *)(v1[6] + 1176) = (char *)v1 + 2678;
    *(_QWORD *)(v1[6] + 1184) = (char *)v1 + 2682;
    *(_QWORD *)(v1[6] + 1192) = (char *)v1 + 2686;
    *(_QWORD *)(v1[6] + 1200) = (char *)v1 + 2690;
    *(_QWORD *)(v1[6] + 1208) = (char *)v1 + 2694;
    *(_QWORD *)(v1[6] + 1216) = (char *)v1 + 2698;
    *(_QWORD *)(v1[6] + 1224) = (char *)v1 + 2702;
    *(_QWORD *)(v1[6] + 1232) = (char *)v1 + 2706;
    *(_QWORD *)(v1[6] + 1240) = (char *)v1 + 2710;
    *(_QWORD *)(v1[6] + 1248) = (char *)v1 + 2714;
    *(_QWORD *)(v1[6] + 1256) = (char *)v1 + 2718;
    *(_QWORD *)(v1[6] + 1264) = (char *)v1 + 2722;
    *(_QWORD *)(v1[6] + 1272) = (char *)v1 + 2726;
    *(_QWORD *)(v1[6] + 1280) = (char *)v1 + 2730;
    *(_QWORD *)(v1[6] + 1288) = (char *)v1 + 2734;
    *(_QWORD *)(v1[6] + 1296) = (char *)v1 + 2738;
    *(_QWORD *)(v1[6] + 1304) = (char *)v1 + 2742;
    *(_QWORD *)(v1[6] + 1312) = (char *)v1 + 2746;
    *(_QWORD *)(v1[6] + 1320) = (char *)v1 + 2750;
    *(_QWORD *)(v1[6] + 1328) = (char *)v1 + 2754;
    *(_QWORD *)(v1[6] + 1336) = (char *)v1 + 2758;
    *(_QWORD *)(v1[6] + 1344) = (char *)v1 + 2762;
    *(_QWORD *)(v1[6] + 1352) = (char *)v1 + 2766;
    *(_QWORD *)(v1[6] + 1360) = (char *)v1 + 2770;
    *(_QWORD *)(v1[6] + 1368) = (char *)v1 + 2774;
    *(_QWORD *)(v1[6] + 1376) = (char *)v1 + 2778;
    *(_QWORD *)(v1[6] + 1384) = (char *)v1 + 2782;
    *(_QWORD *)(v1[6] + 1392) = (char *)v1 + 2786;
    *(_QWORD *)(v1[6] + 1400) = (char *)v1 + 2790;
    *(_QWORD *)(v1[6] + 1408) = (char *)v1 + 2794;
    *(_QWORD *)(v1[6] + 1416) = (char *)v1 + 2798;
    *(_QWORD *)(v1[6] + 1424) = (char *)v1 + 2802;
    *(_QWORD *)(v1[6] + 1432) = (char *)v1 + 2806;
    *(_QWORD *)(v1[6] + 1440) = (char *)v1 + 2810;
    *(_QWORD *)(v1[6] + 1448) = (char *)v1 + 2814;
    *(_QWORD *)(v1[6] + 1456) = (char *)v1 + 2818;
    *(_QWORD *)(v1[6] + 1464) = (char *)v1 + 2822;
    *(_QWORD *)(v1[6] + 1472) = (char *)v1 + 2826;
    *(_QWORD *)(v1[6] + 1480) = (char *)v1 + 2830;
    *(_QWORD *)(v1[6] + 1488) = (char *)v1 + 2834;
    *(_QWORD *)(v1[6] + 1496) = (char *)v1 + 2838;
    *(_QWORD *)(v1[6] + 1504) = (char *)v1 + 2842;
    *(_QWORD *)(v1[6] + 1512) = (char *)v1 + 2846;
    *(_QWORD *)(v1[6] + 1520) = (char *)v1 + 2850;
    *(_QWORD *)(v1[6] + 1528) = (char *)v1 + 2854;
    *(_QWORD *)(v1[6] + 1536) = (char *)v1 + 2858;
    *(_QWORD *)(v1[6] + 1544) = (char *)v1 + 2862;
    *(_QWORD *)(v1[6] + 1552) = (char *)v1 + 2866;
    *(_QWORD *)(v1[6] + 1560) = (char *)v1 + 2870;
    *(_QWORD *)(v1[6] + 1568) = (char *)v1 + 2874;
    *(_QWORD *)(v1[6] + 1576) = (char *)v1 + 2878;
    *(_QWORD *)(v1[6] + 1584) = (char *)v1 + 2882;
    *(_QWORD *)(v1[6] + 1592) = (char *)v1 + 2886;
    *(_QWORD *)(v1[6] + 1600) = (char *)v1 + 2890;
    *(_QWORD *)(v1[6] + 1608) = (char *)v1 + 2894;
    *(_QWORD *)(v1[6] + 1616) = (char *)v1 + 2898;
    *(_QWORD *)(v1[6] + 1624) = (char *)v1 + 2902;
    *(_QWORD *)(v1[6] + 1632) = (char *)v1 + 2906;
    *(_QWORD *)(v1[6] + 1640) = (char *)v1 + 2910;
    *(_QWORD *)(v1[6] + 1648) = (char *)v1 + 2914;
    *(_QWORD *)(v1[6] + 1656) = (char *)v1 + 2918;
    *(_QWORD *)(v1[6] + 1664) = (char *)v1 + 2922;
    *(_QWORD *)(v1[6] + 1672) = (char *)v1 + 2926;
    *(_QWORD *)(v1[6] + 1680) = (char *)v1 + 2930;
    *(_QWORD *)(v1[6] + 1688) = (char *)v1 + 2934;
    *(_QWORD *)(v1[6] + 1696) = (char *)v1 + 2938;
    *(_QWORD *)(v1[6] + 1704) = (char *)v1 + 2942;
    *(_QWORD *)(v1[6] + 1712) = (char *)v1 + 2946;
    *(_QWORD *)(v1[6] + 1720) = (char *)v1 + 2950;
    *(_QWORD *)(v1[6] + 1728) = (char *)v1 + 2954;
    *(_QWORD *)(v1[6] + 1736) = (char *)v1 + 2958;
    *(_QWORD *)(v1[6] + 1744) = (char *)v1 + 2962;
    *(_QWORD *)(v1[6] + 1752) = (char *)v1 + 2966;
    *(_QWORD *)(v1[6] + 1760) = (char *)v1 + 2970;
    *(_QWORD *)(v1[6] + 1768) = (char *)v1 + 2974;
    *(_QWORD *)(v1[6] + 1776) = (char *)v1 + 2978;
    *(_QWORD *)(v1[6] + 1784) = (char *)v1 + 2982;
    *(_QWORD *)(v1[6] + 1792) = (char *)v1 + 2986;
    *(_QWORD *)(v1[6] + 1800) = (char *)v1 + 2990;
    *(_QWORD *)(v1[6] + 1808) = (char *)v1 + 2994;
    *(_QWORD *)(v1[6] + 1816) = (char *)v1 + 2998;
    *(_QWORD *)(v1[6] + 1824) = (char *)v1 + 3002;
    *(_QWORD *)(v1[6] + 1832) = (char *)v1 + 3006;
    *(_QWORD *)(v1[6] + 1840) = (char *)v1 + 3010;
    *(_QWORD *)(v1[6] + 1848) = (char *)v1 + 3014;
    *(_QWORD *)(v1[6] + 1856) = (char *)v1 + 3018;
    *(_QWORD *)(v1[6] + 1864) = (char *)v1 + 3022;
    *(_QWORD *)(v1[6] + 1872) = (char *)v1 + 3026;
    *(_QWORD *)(v1[6] + 1880) = (char *)v1 + 3030;
    *(_QWORD *)(v1[6] + 1888) = (char *)v1 + 3034;
    *(_QWORD *)(v1[6] + 1896) = (char *)v1 + 3038;
    *(_QWORD *)(v1[6] + 1904) = (char *)v1 + 3042;
    *(_QWORD *)(v1[6] + 1912) = (char *)v1 + 3046;
    *(_QWORD *)(v1[6] + 1920) = (char *)v1 + 3050;
    *(_QWORD *)(v1[6] + 1928) = (char *)v1 + 3054;
    *(_QWORD *)(v1[6] + 1936) = (char *)v1 + 3058;
    *(_QWORD *)(v1[6] + 1944) = (char *)v1 + 3062;
    *(_QWORD *)(v1[6] + 1952) = (char *)v1 + 3066;
    *(_QWORD *)(v1[6] + 1960) = (char *)v1 + 3070;
    *(_QWORD *)(v1[6] + 1968) = (char *)v1 + 3074;
    *(_QWORD *)(v1[6] + 1976) = (char *)v1 + 3078;
    *(_QWORD *)(v1[6] + 1984) = (char *)v1 + 3082;
    *(_QWORD *)(v1[6] + 1992) = (char *)v1 + 3086;
    *(_QWORD *)(v1[6] + 2000) = (char *)v1 + 3090;
    *(_QWORD *)(v1[6] + 2008) = (char *)v1 + 3194;
    *(_QWORD *)(v1[6] + 2016) = (char *)v1 + 3198;
    *(_QWORD *)(v1[6] + 2024) = (char *)v1 + 3202;
    *(_QWORD *)(v1[6] + 2032) = (char *)v1 + 3206;
    *(_QWORD *)(v1[6] + 2040) = (char *)v1 + 3210;
    *(_QWORD *)(v1[6] + 2048) = (char *)v1 + 3214;
    *(_QWORD *)(v1[6] + 2056) = (char *)v1 + 3218;
    *(_QWORD *)(v1[6] + 2064) = (char *)v1 + 3222;
    *(_QWORD *)(v1[6] + 2072) = (char *)v1 + 3226;
    *(_QWORD *)(v1[6] + 2080) = (char *)v1 + 3230;
    *(_QWORD *)(v1[6] + 2088) = (char *)v1 + 3234;
    *(_QWORD *)(v1[6] + 2096) = (char *)v1 + 3238;
    *(_QWORD *)(v1[6] + 2104) = (char *)v1 + 3242;
    *(_QWORD *)(v1[6] + 2112) = (char *)v1 + 3246;
    *(_QWORD *)(v1[6] + 2120) = (char *)v1 + 3250;
    *(_QWORD *)(v1[6] + 2128) = (char *)v1 + 3254;
    *(_QWORD *)(v1[6] + 2136) = (char *)v1 + 3258;
    *(_QWORD *)(v1[6] + 2144) = (char *)v1 + 3262;
    *(_QWORD *)(v1[6] + 2152) = (char *)v1 + 3266;
    *(_QWORD *)(v1[6] + 2160) = (char *)v1 + 3270;
    *(_QWORD *)(v1[6] + 2168) = (char *)v1 + 3274;
    *(_QWORD *)(v1[6] + 2176) = (char *)v1 + 3278;
    *(_QWORD *)(v1[6] + 2184) = (char *)v1 + 3282;
    *(_QWORD *)(v1[6] + 2192) = (char *)v1 + 3286;
    *(_QWORD *)(v1[6] + 2200) = (char *)v1 + 3290;
    *(_QWORD *)(v1[6] + 2208) = (char *)v1 + 3294;
    *(_QWORD *)(v1[6] + 2216) = (char *)v1 + 3298;
    *(_QWORD *)(v1[6] + 2224) = (char *)v1 + 3302;
    *(_QWORD *)(v1[6] + 2232) = (char *)v1 + 3306;
    *(_QWORD *)(v1[6] + 2240) = (char *)v1 + 3310;
    *(_QWORD *)(v1[6] + 2248) = (char *)v1 + 3314;
    *(_QWORD *)(v1[6] + 2256) = (char *)v1 + 3318;
    *(_QWORD *)(v1[6] + 2264) = (char *)v1 + 3322;
    *(_QWORD *)(v1[6] + 2272) = (char *)v1 + 3326;
    *(_QWORD *)(v1[6] + 2280) = (char *)v1 + 3330;
    *(_QWORD *)(v1[6] + 2288) = (char *)v1 + 3334;
    *(_QWORD *)(v1[6] + 2296) = (char *)v1 + 3338;
    *(_QWORD *)(v1[6] + 2304) = (char *)v1 + 3342;
    *(_QWORD *)(v1[6] + 2312) = (char *)v1 + 3346;
    *(_QWORD *)(v1[6] + 2320) = (char *)v1 + 3350;
    *(_QWORD *)(v1[6] + 2328) = (char *)v1 + 3370;
    *(_QWORD *)(v1[6] + 2336) = (char *)v1 + 3374;
    *(_QWORD *)(v1[6] + 2344) = (char *)v1 + 3378;
    *(_QWORD *)(v1[6] + 2352) = (char *)v1 + 3418;
    *(_QWORD *)(v1[6] + 2360) = (char *)v1 + 3422;
    *(_QWORD *)(v1[6] + 2368) = (char *)v1 + 3426;
    *(_QWORD *)(v1[6] + 2376) = (char *)v1 + 3430;
    *(_QWORD *)(v1[6] + 2384) = (char *)v1 + 3434;
    *(_QWORD *)(v1[6] + 2392) = (char *)v1 + 3438;
    *(_QWORD *)(v1[6] + 2400) = (char *)v1 + 3442;
    *(_QWORD *)(v1[6] + 2408) = (char *)v1 + 3446;
    *(_QWORD *)(v1[6] + 2416) = (char *)v1 + 3450;
    *(_QWORD *)(v1[6] + 2424) = (char *)v1 + 3454;
    *(_QWORD *)(v1[6] + 2432) = (char *)v1 + 3458;
    *(_QWORD *)(v1[6] + 2440) = (char *)v1 + 3462;
    *(_QWORD *)(v1[6] + 2448) = (char *)v1 + 3466;
    *(_QWORD *)(v1[6] + 2456) = (char *)v1 + 3470;
    *(_QWORD *)(v1[6] + 2464) = (char *)v1 + 3474;
    *(_QWORD *)(v1[6] + 2472) = (char *)v1 + 3478;
    *(_QWORD *)(v1[6] + 2480) = (char *)v1 + 3482;
    *(_QWORD *)(v1[6] + 2488) = (char *)v1 + 3486;
    *(_QWORD *)(v1[6] + 2496) = (char *)v1 + 3490;
    *(_QWORD *)(v1[6] + 2504) = (char *)v1 + 3494;
    *(_QWORD *)(v1[6] + 2512) = (char *)v1 + 3498;
    *(_QWORD *)(v1[6] + 2520) = (char *)v1 + 3502;
    *(_QWORD *)(v1[6] + 2528) = (char *)v1 + 3506;
    *(_QWORD *)(v1[6] + 2536) = (char *)v1 + 3510;
    *(_QWORD *)(v1[6] + 2544) = (char *)v1 + 3514;
    *(_QWORD *)(v1[6] + 2552) = (char *)v1 + 3518;
    *(_QWORD *)(v1[6] + 2560) = (char *)v1 + 3522;
    *(_QWORD *)(v1[6] + 2568) = (char *)v1 + 3526;
    *(_QWORD *)(v1[6] + 2576) = (char *)v1 + 3530;
    *(_QWORD *)(v1[6] + 2584) = (char *)v1 + 3534;
    *(_QWORD *)(v1[6] + 2592) = (char *)v1 + 3538;
    *(_QWORD *)(v1[6] + 2600) = (char *)v1 + 3542;
    *(_QWORD *)(v1[6] + 2608) = (char *)v1 + 3546;
    *(_QWORD *)(v1[6] + 2616) = (char *)v1 + 3550;
    *(_QWORD *)(v1[6] + 2624) = (char *)v1 + 3554;
    *(_QWORD *)(v1[6] + 2632) = (char *)v1 + 3558;
    *(_QWORD *)(v1[6] + 2640) = (char *)v1 + 3562;
    *(_QWORD *)(v1[6] + 2648) = (char *)v1 + 3566;
    *(_QWORD *)(v1[6] + 2656) = (char *)v1 + 3570;
    *(_QWORD *)(v1[6] + 2664) = (char *)v1 + 3574;
    *(_QWORD *)(v1[6] + 2672) = (char *)v1 + 3578;
    *(_QWORD *)(v1[6] + 2680) = (char *)v1 + 3582;
    *(_QWORD *)(v1[6] + 2688) = (char *)v1 + 3586;
    *(_QWORD *)(v1[6] + 2696) = (char *)v1 + 3770;
    *(_QWORD *)(v1[6] + 2704) = (char *)v1 + 3802;
    *(_QWORD *)(v1[6] + 2712) = (char *)v1 + 3826;
    *(_QWORD *)(v1[6] + 2720) = (char *)v1 + 3830;
    *(_QWORD *)(v1[6] + 2728) = (char *)v1 + 3834;
    *(_QWORD *)(v1[6] + 2736) = (char *)v1 + 3858;
    *(_QWORD *)(v1[6] + 2744) = (char *)v1 + 3862;
    *(_QWORD *)(v1[6] + 2752) = (char *)v1 + 3866;
    *(_QWORD *)(v1[6] + 2760) = (char *)v1 + 3870;
    *(_QWORD *)(v1[6] + 2768) = (char *)v1 + 3874;
    *(_QWORD *)(v1[6] + 2776) = (char *)v1 + 3898;
    *(_QWORD *)(v1[6] + 2784) = (char *)v1 + 3902;
    *(_QWORD *)(v1[6] + 2792) = (char *)v1 + 3906;
    *(_QWORD *)(v1[6] + 2800) = (char *)v1 + 3910;
    *(_QWORD *)(v1[6] + 2808) = (char *)v1 + 3914;
    *(_QWORD *)(v1[6] + 2816) = (char *)v1 + 3918;
    *(_QWORD *)(v1[6] + 2824) = (char *)v1 + 3922;
    *(_QWORD *)(v1[6] + 2832) = (char *)v1 + 3926;
    *(_QWORD *)(v1[6] + 2840) = (char *)v1 + 3930;
    *(_QWORD *)(v1[6] + 2848) = (char *)v1 + 3934;
    *(_QWORD *)(v1[6] + 2856) = (char *)v1 + 4034;
    *(_QWORD *)(v1[6] + 2864) = (char *)v1 + 4038;
    *(_QWORD *)(v1[6] + 2872) = (char *)v1 + 4058;
    *(_QWORD *)(v1[6] + 2880) = (char *)v1 + 4062;
    *(_QWORD *)(v1[6] + 2888) = (char *)v1 + 4066;
    *(_QWORD *)(v1[6] + 2896) = (char *)v1 + 4070;
    *(_QWORD *)(v1[6] + 2904) = (char *)v1 + 4074;
    *(_QWORD *)(v1[6] + 2912) = (char *)v1 + 4078;
    *(_QWORD *)(v1[6] + 2920) = (char *)v1 + 4242;
    *(_QWORD *)(v1[6] + 2928) = (char *)v1 + 4246;
    *(_QWORD *)(v1[6] + 2936) = (char *)v1 + 4250;
    *(_QWORD *)(v1[6] + 2944) = (char *)v1 + 4254;
    *(_QWORD *)(v1[6] + 2952) = (char *)v1 + 4258;
    *(_QWORD *)(v1[6] + 2960) = (char *)v1 + 4262;
    *(_QWORD *)(v1[6] + 2968) = (char *)v1 + 4266;
    *(_QWORD *)(v1[6] + 2976) = (char *)v1 + 4270;
    *(_QWORD *)(v1[6] + 2984) = (char *)v1 + 4274;
    *(_QWORD *)(v1[6] + 2992) = (char *)v1 + 4278;
    *(_QWORD *)(v1[6] + 3000) = (char *)v1 + 4282;
    *(_QWORD *)(v1[6] + 3008) = (char *)v1 + 4306;
    *(_QWORD *)(v1[6] + 3016) = (char *)v1 + 4310;
    *(_QWORD *)(v1[6] + 3024) = (char *)v1 + 4314;
    *(_QWORD *)(v1[6] + 3032) = (char *)v1 + 4318;
    *(_QWORD *)(v1[6] + 3040) = (char *)v1 + 4322;
    *(_QWORD *)(v1[6] + 3048) = (char *)v1 + 4326;
    *(_QWORD *)(v1[6] + 3056) = (char *)v1 + 4330;
    *(_QWORD *)(v1[6] + 3064) = (char *)v1 + 4334;
    *(_QWORD *)(v1[6] + 3072) = (char *)v1 + 4338;
    *(_QWORD *)(v1[6] + 3080) = (char *)v1 + 4342;
    *(_QWORD *)(v1[6] + 3088) = (char *)v1 + 4346;
    *(_QWORD *)(v1[6] + 3096) = (char *)v1 + 4350;
    *(_QWORD *)(v1[6] + 3104) = (char *)v1 + 4354;
    *(_QWORD *)(v1[6] + 3112) = (char *)v1 + 4358;
    *(_QWORD *)(v1[6] + 3120) = (char *)v1 + 4362;
    *(_QWORD *)(v1[6] + 3128) = (char *)v1 + 4366;
    *(_QWORD *)(v1[6] + 3136) = (char *)v1 + 4370;
    *(_QWORD *)(v1[6] + 3144) = (char *)v1 + 4374;
    *(_QWORD *)(v1[6] + 3152) = (char *)v1 + 4378;
    *(_QWORD *)(v1[6] + 3160) = (char *)v1 + 4382;
    *(_QWORD *)(v1[6] + 3168) = (char *)v1 + 4386;
    *(_QWORD *)(v1[6] + 3176) = (char *)v1 + 4390;
    *(_QWORD *)(v1[6] + 3184) = (char *)v1 + 4394;
    *(_QWORD *)(v1[6] + 3192) = (char *)v1 + 4398;
    *(_QWORD *)(v1[6] + 3200) = (char *)v1 + 4402;
    *(_QWORD *)(v1[6] + 3208) = (char *)v1 + 4406;
    *(_QWORD *)(v1[6] + 3216) = (char *)v1 + 4410;
    *(_QWORD *)(v1[6] + 3224) = (char *)v1 + 4414;
    *(_QWORD *)(v1[6] + 3232) = (char *)v1 + 4418;
    *(_QWORD *)(v1[6] + 3240) = (char *)v1 + 4422;
    *(_QWORD *)(v1[6] + 3248) = (char *)v1 + 4426;
    *(_QWORD *)(v1[6] + 3256) = (char *)v1 + 4430;
    *(_QWORD *)(v1[6] + 3264) = (char *)v1 + 4434;
    *(_QWORD *)(v1[6] + 3272) = (char *)v1 + 4438;
    *(_QWORD *)(v1[6] + 3280) = (char *)v1 + 4442;
    *(_QWORD *)(v1[6] + 3288) = (char *)v1 + 4446;
    *(_QWORD *)(v1[6] + 3296) = (char *)v1 + 4450;
    *(_QWORD *)(v1[6] + 3304) = (char *)v1 + 4454;
    *(_QWORD *)(v1[6] + 3312) = (char *)v1 + 4458;
    *(_QWORD *)(v1[6] + 3320) = (char *)v1 + 4462;
    *(_QWORD *)(v1[6] + 3328) = (char *)v1 + 4466;
    *(_QWORD *)(v1[6] + 3336) = (char *)v1 + 4470;
    *(_QWORD *)(v1[6] + 3344) = (char *)v1 + 4474;
    *(_QWORD *)(v1[6] + 3352) = (char *)v1 + 4478;
    *(_QWORD *)(v1[6] + 3360) = (char *)v1 + 4482;
    *(_QWORD *)(v1[6] + 3368) = (char *)v1 + 4486;
    *(_QWORD *)(v1[6] + 3376) = (char *)v1 + 4490;
    *(_QWORD *)(v1[6] + 3384) = (char *)v1 + 4494;
    *(_QWORD *)(v1[6] + 3392) = (char *)v1 + 4498;
    *(_QWORD *)(v1[6] + 3400) = (char *)v1 + 4502;
    *(_QWORD *)(v1[6] + 3408) = (char *)v1 + 4506;
    *(_QWORD *)(v1[6] + 3416) = (char *)v1 + 4510;
    *(_QWORD *)(v1[6] + 3424) = (char *)v1 + 4514;
    *(_QWORD *)(v1[6] + 3432) = (char *)v1 + 4518;
    *(_QWORD *)(v1[6] + 3440) = (char *)v1 + 4522;
    *(_QWORD *)(v1[6] + 3448) = (char *)v1 + 4526;
    *(_QWORD *)(v1[6] + 3456) = (char *)v1 + 4530;
    *(_QWORD *)(v1[6] + 3464) = (char *)v1 + 4534;
    *(_QWORD *)(v1[6] + 3472) = (char *)v1 + 4538;
    *(_QWORD *)(v1[6] + 3480) = (char *)v1 + 4542;
    *(_QWORD *)(v1[6] + 3488) = (char *)v1 + 4546;
    *(_QWORD *)(v1[6] + 3496) = (char *)v1 + 4550;
    *(_QWORD *)(v1[6] + 3504) = (char *)v1 + 4554;
    *(_QWORD *)(v1[6] + 3512) = (char *)v1 + 4558;
    *(_QWORD *)(v1[6] + 3520) = (char *)v1 + 4562;
    *(_QWORD *)(v1[6] + 3528) = (char *)v1 + 4566;
    *(_QWORD *)(v1[6] + 3536) = (char *)v1 + 4570;
    *(_QWORD *)(v1[6] + 3544) = (char *)v1 + 4574;
    *(_QWORD *)(v1[6] + 3552) = (char *)v1 + 4578;
    *(_QWORD *)(v1[6] + 3560) = (char *)v1 + 4582;
    *(_QWORD *)(v1[6] + 3568) = (char *)v1 + 4586;
    *(_QWORD *)(v1[6] + 3576) = (char *)v1 + 4590;
    *(_QWORD *)(v1[6] + 3584) = (char *)v1 + 4594;
    *(_QWORD *)(v1[6] + 3592) = (char *)v1 + 4598;
    *(_QWORD *)(v1[6] + 3600) = (char *)v1 + 4602;
    *(_QWORD *)(v1[6] + 3608) = (char *)v1 + 4606;
    *(_QWORD *)(v1[6] + 3616) = (char *)v1 + 4610;
    *(_QWORD *)(v1[6] + 3624) = (char *)v1 + 4614;
    *(_QWORD *)(v1[6] + 3632) = (char *)v1 + 4618;
    *(_QWORD *)(v1[6] + 3640) = (char *)v1 + 4622;
    *(_QWORD *)(v1[6] + 3648) = (char *)v1 + 4626;
    *(_QWORD *)(v1[6] + 3656) = (char *)v1 + 4630;
    *(_QWORD *)(v1[6] + 3664) = (char *)v1 + 4634;
    *(_QWORD *)(v1[6] + 3672) = (char *)v1 + 4638;
    *(_QWORD *)(v1[6] + 3680) = (char *)v1 + 4706;
    *(_QWORD *)(v1[6] + 3688) = (char *)v1 + 4710;
    *(_QWORD *)(v1[6] + 3696) = (char *)v1 + 4714;
    *(_QWORD *)(v1[6] + 3704) = (char *)v1 + 4718;
    *(_QWORD *)(v1[6] + 3712) = (char *)v1 + 4722;
    *(_QWORD *)(v1[6] + 3720) = (char *)v1 + 4726;
    *(_QWORD *)(v1[6] + 3728) = (char *)v1 + 4730;
    *(_QWORD *)(v1[6] + 3736) = (char *)v1 + 4734;
    *(_QWORD *)(v1[6] + 3744) = (char *)v1 + 4738;
    *(_QWORD *)(v1[6] + 3752) = (char *)v1 + 4938;
    *(_QWORD *)(v1[6] + 3760) = (char *)v1 + 4942;
    *(_QWORD *)(v1[6] + 3768) = (char *)v1 + 4994;
    *(_QWORD *)(v1[6] + 3776) = (char *)v1 + 4998;
    *(_QWORD *)(v1[6] + 3784) = (char *)v1 + 5066;
    *(_QWORD *)(v1[6] + 3792) = (char *)v1 + 5090;
    *(_QWORD *)(v1[6] + 3800) = (char *)v1 + 5114;
    *(_QWORD *)(v1[6] + 3808) = (char *)v1 + 5118;
    *(_QWORD *)(v1[6] + 3816) = (char *)v1 + 5122;
    *(_QWORD *)(v1[6] + 3824) = (char *)v1 + 5126;
    *(_QWORD *)(v1[6] + 3832) = (char *)v1 + 5130;
    *(_QWORD *)(v1[6] + 3840) = (char *)v1 + 5134;
    *(_QWORD *)(v1[6] + 3848) = (char *)v1 + 5138;
    *(_QWORD *)(v1[6] + 3856) = (char *)v1 + 5142;
    *(_QWORD *)(v1[6] + 3864) = (char *)v1 + 5146;
    *(_QWORD *)(v1[6] + 3872) = (char *)v1 + 5150;
    *(_QWORD *)(v1[6] + 3880) = (char *)v1 + 5154;
    *(_QWORD *)(v1[6] + 3888) = (char *)v1 + 5158;
    *(_QWORD *)(v1[6] + 3896) = (char *)v1 + 5162;
    *(_QWORD *)(v1[6] + 3904) = (char *)v1 + 5166;
    *(_QWORD *)(v1[6] + 3912) = (char *)v1 + 5170;
    *(_QWORD *)(v1[6] + 3920) = (char *)v1 + 5242;
    *(_QWORD *)(v1[6] + 3928) = (char *)v1 + 5246;
    *(_QWORD *)(v1[6] + 3936) = (char *)v1 + 5362;
    *(_QWORD *)(v1[6] + 3944) = (char *)v1 + 5418;
    *(_QWORD *)(v1[6] + 3952) = (char *)v1 + 5422;
    *(_QWORD *)(v1[6] + 3960) = (char *)v1 + 5426;
    *(_QWORD *)(v1[6] + 3968) = (char *)v1 + 5430;
    *(_QWORD *)(v1[6] + 3976) = (char *)v1 + 5434;
    *(_QWORD *)(v1[6] + 3984) = (char *)v1 + 5438;
    *(_QWORD *)(v1[6] + 3992) = (char *)v1 + 5458;
    *(_QWORD *)(v1[6] + 4000) = (char *)v1 + 5462;
    *(_QWORD *)(v1[6] + 4008) = (char *)v1 + 5466;
    *(_QWORD *)(v1[6] + 4016) = (char *)v1 + 5470;
    *(_QWORD *)(v1[6] + 4024) = (char *)v1 + 5474;
    *(_QWORD *)(v1[6] + 4032) = (char *)v1 + 5478;
    *(_QWORD *)(v1[6] + 4040) = (char *)v1 + 5482;
    *(_QWORD *)(v1[6] + 4048) = (char *)v1 + 5486;
    *(_QWORD *)(v1[6] + 4056) = (char *)v1 + 5490;
    *(_QWORD *)(v1[6] + 4064) = (char *)v1 + 5494;
    *(_QWORD *)(v1[6] + 4072) = (char *)v1 + 5498;
    *(_QWORD *)(v1[6] + 4080) = (char *)v1 + 5502;
    *(_QWORD *)(v1[6] + 4088) = (char *)v1 + 5506;
    *(_QWORD *)(v1[6] + 4096) = (char *)v1 + 5510;
    *(_QWORD *)(v1[6] + 4104) = (char *)v1 + 5514;
    *(_QWORD *)(v1[6] + 4112) = (char *)v1 + 5518;
    *(_QWORD *)(v1[6] + 4120) = (char *)v1 + 5522;
    *(_QWORD *)(v1[6] + 4128) = (char *)v1 + 5526;
    *(_QWORD *)(v1[6] + 4136) = (char *)v1 + 5530;
    *(_QWORD *)(v1[6] + 4144) = (char *)v1 + 5534;
    *(_QWORD *)(v1[6] + 4152) = (char *)v1 + 5538;
    *(_QWORD *)(v1[6] + 4160) = (char *)v1 + 5542;
    *(_QWORD *)(v1[6] + 4168) = (char *)v1 + 5546;
    *(_QWORD *)(v1[6] + 4176) = (char *)v1 + 5550;
    *(_QWORD *)(v1[6] + 4184) = (char *)v1 + 5554;
    *(_QWORD *)(v1[6] + 4192) = (char *)v1 + 5558;
    *(_QWORD *)(v1[6] + 4200) = (char *)v1 + 5562;
    *(_QWORD *)(v1[6] + 4208) = (char *)v1 + 5566;
    *(_QWORD *)(v1[6] + 4216) = (char *)v1 + 5570;
    *(_QWORD *)(v1[6] + 4224) = (char *)v1 + 5574;
    *(_QWORD *)(v1[6] + 4232) = (char *)v1 + 5578;
    *(_QWORD *)(v1[6] + 4240) = (char *)v1 + 5582;
    *(_QWORD *)(v1[6] + 4248) = (char *)v1 + 5586;
    *(_QWORD *)(v1[6] + 4256) = (char *)v1 + 5590;
    *(_QWORD *)(v1[6] + 4264) = (char *)v1 + 5594;
    *(_QWORD *)(v1[6] + 4272) = (char *)v1 + 5598;
    *(_QWORD *)(v1[6] + 4280) = (char *)v1 + 5602;
    *(_QWORD *)(v1[6] + 4288) = (char *)v1 + 5606;
    *(_QWORD *)(v1[6] + 4296) = (char *)v1 + 5610;
    *(_QWORD *)(v1[6] + 4304) = (char *)v1 + 5614;
    *(_QWORD *)(v1[6] + 4312) = (char *)v1 + 5618;
    *(_QWORD *)(v1[6] + 4320) = (char *)v1 + 5622;
    *(_QWORD *)(v1[6] + 4328) = (char *)v1 + 5626;
    *(_QWORD *)(v1[6] + 4336) = (char *)v1 + 5630;
    *(_QWORD *)(v1[6] + 4344) = (char *)v1 + 5634;
    *(_QWORD *)(v1[6] + 4352) = (char *)v1 + 5638;
    *(_QWORD *)(v1[6] + 4360) = (char *)v1 + 5642;
    *(_QWORD *)(v1[6] + 4368) = (char *)v1 + 5646;
    *(_QWORD *)(v1[6] + 4376) = (char *)v1 + 5650;
    *(_QWORD *)(v1[6] + 4384) = (char *)v1 + 5654;
    *(_QWORD *)(v1[6] + 4392) = (char *)v1 + 5658;
    *(_QWORD *)(v1[6] + 4400) = (char *)v1 + 5662;
    *(_QWORD *)(v1[6] + 4408) = (char *)v1 + 5666;
    *(_QWORD *)(v1[6] + 4416) = (char *)v1 + 5670;
    *(_QWORD *)(v1[6] + 4424) = (char *)v1 + 5674;
    *(_QWORD *)(v1[6] + 4432) = (char *)v1 + 5678;
    *(_QWORD *)(v1[6] + 4440) = (char *)v1 + 5682;
    *(_QWORD *)(v1[6] + 4448) = (char *)v1 + 5686;
    *(_QWORD *)(v1[6] + 4456) = (char *)v1 + 5690;
    *(_QWORD *)(v1[6] + 4464) = (char *)v1 + 5694;
    *(_QWORD *)(v1[6] + 4472) = (char *)v1 + 5698;
    *(_QWORD *)(v1[6] + 4480) = (char *)v1 + 5702;
    *(_QWORD *)(v1[6] + 4488) = (char *)v1 + 5706;
    *(_QWORD *)(v1[6] + 4496) = (char *)v1 + 5710;
    *(_QWORD *)(v1[6] + 4504) = (char *)v1 + 5714;
    *(_QWORD *)(v1[6] + 4512) = (char *)v1 + 5718;
    *(_QWORD *)(v1[6] + 4520) = (char *)v1 + 5722;
    *(_QWORD *)(v1[6] + 4528) = (char *)v1 + 5726;
    *(_QWORD *)(v1[6] + 4536) = (char *)v1 + 5730;
    *(_QWORD *)(v1[6] + 4544) = (char *)v1 + 5734;
    *(_QWORD *)(v1[6] + 4552) = (char *)v1 + 5738;
    *(_QWORD *)(v1[6] + 4560) = (char *)v1 + 5742;
    *(_QWORD *)(v1[6] + 4568) = (char *)v1 + 5746;
    *(_QWORD *)(v1[6] + 4576) = (char *)v1 + 5750;
    *(_QWORD *)(v1[6] + 4584) = (char *)v1 + 5754;
    *(_QWORD *)(v1[6] + 4592) = (char *)v1 + 5758;
    *(_QWORD *)(v1[6] + 4600) = (char *)v1 + 5762;
    *(_QWORD *)(v1[6] + 4608) = (char *)v1 + 5766;
    *(_QWORD *)(v1[6] + 4616) = (char *)v1 + 5770;
    *(_QWORD *)(v1[6] + 4624) = (char *)v1 + 5774;
    *(_QWORD *)(v1[6] + 4632) = (char *)v1 + 5778;
    *(_QWORD *)(v1[6] + 4640) = (char *)v1 + 5782;
    *(_QWORD *)(v1[6] + 4648) = (char *)v1 + 5866;
    *(_QWORD *)(v1[6] + 4656) = (char *)v1 + 5870;
    *(_QWORD *)(v1[6] + 4664) = (char *)v1 + 5874;
    *(_QWORD *)(v1[6] + 4672) = (char *)v1 + 5878;
    *(_QWORD *)(v1[6] + 4680) = (char *)v1 + 5882;
    *(_QWORD *)(v1[6] + 4688) = (char *)v1 + 5886;
    *(_QWORD *)(v1[6] + 4696) = (char *)v1 + 5890;
    *(_QWORD *)(v1[6] + 4704) = (char *)v1 + 5894;
    *(_QWORD *)(v1[6] + 4712) = (char *)v1 + 5898;
    *(_QWORD *)(v1[6] + 4720) = (char *)v1 + 5902;
    *(_QWORD *)(v1[6] + 4728) = (char *)v1 + 5906;
    *(_QWORD *)(v1[6] + 4736) = (char *)v1 + 5910;
    *(_QWORD *)(v1[6] + 4744) = (char *)v1 + 5914;
    *(_QWORD *)(v1[6] + 4752) = (char *)v1 + 5918;
    *(_QWORD *)(v1[6] + 4760) = (char *)v1 + 5922;
    *(_QWORD *)(v1[6] + 4768) = (char *)v1 + 5926;
    *(_QWORD *)(v1[6] + 4776) = (char *)v1 + 5994;
    *(_QWORD *)(v1[6] + 4784) = (char *)v1 + 5998;
    *(_QWORD *)(v1[6] + 4792) = (char *)v1 + 6002;
    *(_QWORD *)(v1[6] + 4800) = (char *)v1 + 6006;
    *(_QWORD *)(v1[6] + 4808) = (char *)v1 + 6010;
    *(_QWORD *)(v1[6] + 4816) = (char *)v1 + 6014;
    *(_QWORD *)(v1[6] + 4824) = (char *)v1 + 6018;
    *(_QWORD *)(v1[6] + 4832) = (char *)v1 + 6022;
    *(_QWORD *)(v1[6] + 4840) = (char *)v1 + 6026;
    *(_QWORD *)(v1[6] + 4848) = (char *)v1 + 6030;
    *(_QWORD *)(v1[6] + 4856) = (char *)v1 + 6034;
    *(_QWORD *)(v1[6] + 4864) = (char *)v1 + 6038;
    *(_QWORD *)(v1[6] + 4872) = (char *)v1 + 6042;
    *(_QWORD *)(v1[6] + 4880) = (char *)v1 + 6046;
    *(_QWORD *)(v1[6] + 4888) = (char *)v1 + 6050;
    *(_QWORD *)(v1[6] + 4896) = (char *)v1 + 6054;
    *(_QWORD *)(v1[6] + 4904) = (char *)v1 + 6058;
    *(_QWORD *)(v1[6] + 4912) = (char *)v1 + 6242;
    *(_QWORD *)(v1[6] + 4920) = (char *)v1 + 6246;
    *(_QWORD *)(v1[6] + 4928) = (char *)v1 + 6266;
    *(_QWORD *)(v1[6] + 4936) = (char *)v1 + 6270;
    *(_QWORD *)(v1[6] + 4944) = (char *)v1 + 6274;
    *(_QWORD *)(v1[6] + 4952) = (char *)v1 + 6278;
    *(_QWORD *)(v1[6] + 4960) = (char *)v1 + 6282;
    *(_QWORD *)(v1[6] + 4968) = (char *)v1 + 6286;
    *(_QWORD *)(v1[6] + 4976) = (char *)v1 + 6290;
    *(_QWORD *)(v1[6] + 4984) = (char *)v1 + 6294;
    *(_QWORD *)(v1[6] + 4992) = (char *)v1 + 6298;
    *(_QWORD *)(v1[6] + 5000) = (char *)v1 + 634;
    *(_QWORD *)(v1[6] + 5008) = (char *)v1 + 722;
    *(_QWORD *)(v1[6] + 5016) = (char *)v1 + 726;
    *(_QWORD *)(v1[6] + 5024) = (char *)v1 + 730;
    *(_QWORD *)(v1[6] + 5032) = (char *)v1 + 734;
    *(_QWORD *)(v1[6] + 5040) = (char *)v1 + 738;
    *(_QWORD *)(v1[6] + 5048) = (char *)v1 + 742;
    *(_QWORD *)(v1[6] + 5056) = (char *)v1 + 746;
    *(_QWORD *)(v1[6] + 5064) = (char *)v1 + 750;
    *(_QWORD *)(v1[6] + 5072) = (char *)v1 + 754;
    *(_QWORD *)(v1[6] + 5080) = (char *)v1 + 758;
    *(_QWORD *)(v1[6] + 5088) = (char *)v1 + 762;
    *(_QWORD *)(v1[6] + 5096) = (char *)v1 + 766;
    *(_QWORD *)(v1[6] + 5104) = (char *)v1 + 930;
    *(_QWORD *)(v1[6] + 5112) = (char *)v1 + 934;
    *(_QWORD *)(v1[6] + 5120) = (char *)v1 + 938;
    *(_QWORD *)(v1[6] + 5128) = (char *)v1 + 942;
    *(_QWORD *)(v1[6] + 5136) = (char *)v1 + 946;
    *(_QWORD *)(v1[6] + 5144) = (char *)v1 + 950;
    *(_QWORD *)(v1[6] + 5152) = (char *)v1 + 954;
    *(_QWORD *)(v1[6] + 5160) = (char *)v1 + 958;
    *(_QWORD *)(v1[6] + 5168) = (char *)v1 + 962;
    *(_QWORD *)(v1[6] + 5176) = (char *)v1 + 966;
    *(_QWORD *)(v1[6] + 5184) = (char *)v1 + 970;
    *(_QWORD *)(v1[6] + 5192) = (char *)v1 + 974;
    *(_QWORD *)(v1[6] + 5200) = (char *)v1 + 978;
    *(_QWORD *)(v1[6] + 5208) = (char *)v1 + 982;
    *(_QWORD *)(v1[6] + 5216) = (char *)v1 + 986;
    *(_QWORD *)(v1[6] + 5224) = (char *)v1 + 990;
    *(_QWORD *)(v1[6] + 5232) = (char *)v1 + 994;
    *(_QWORD *)(v1[6] + 5240) = (char *)v1 + 998;
    *(_QWORD *)(v1[6] + 5248) = (char *)v1 + 1002;
    *(_QWORD *)(v1[6] + 5256) = (char *)v1 + 1006;
    *(_QWORD *)(v1[6] + 5264) = (char *)v1 + 1010;
    *(_QWORD *)(v1[6] + 5272) = (char *)v1 + 1014;
    *(_QWORD *)(v1[6] + 5280) = (char *)v1 + 1018;
    *(_QWORD *)(v1[6] + 5288) = (char *)v1 + 1022;
    *(_QWORD *)(v1[6] + 5296) = (char *)v1 + 1026;
    *(_QWORD *)(v1[6] + 5304) = (char *)v1 + 1030;
    *(_QWORD *)(v1[6] + 5312) = (char *)v1 + 1130;
    *(_QWORD *)(v1[6] + 5320) = (char *)v1 + 1186;
    *(_QWORD *)(v1[6] + 5328) = (char *)v1 + 1190;
    *(_QWORD *)(v1[6] + 5336) = (char *)v1 + 1210;
    *(_QWORD *)(v1[6] + 5344) = (char *)v1 + 1214;
    *(_QWORD *)(v1[6] + 5352) = (char *)v1 + 1218;
    *(_QWORD *)(v1[6] + 5360) = (char *)v1 + 1930;
    *(_QWORD *)(v1[6] + 5368) = (char *)v1 + 1934;
    *(_QWORD *)(v1[6] + 5376) = (char *)v1 + 1938;
    *(_QWORD *)(v1[6] + 5384) = (char *)v1 + 1942;
    *(_QWORD *)(v1[6] + 5392) = (char *)v1 + 1946;
    *(_QWORD *)(v1[6] + 5400) = (char *)v1 + 1950;
    *(_QWORD *)(v1[6] + 5408) = (char *)v1 + 1954;
    *(_QWORD *)(v1[6] + 5416) = (char *)v1 + 1958;
    *(_QWORD *)(v1[6] + 5424) = (char *)v1 + 1962;
    *(_QWORD *)(v1[6] + 5432) = (char *)v1 + 1966;
    *(_QWORD *)(v1[6] + 5440) = (char *)v1 + 1970;
    *(_QWORD *)(v1[6] + 5448) = (char *)v1 + 1974;
    *(_QWORD *)(v1[6] + 5456) = (char *)v1 + 1978;
    *(_QWORD *)(v1[6] + 5464) = (char *)v1 + 1982;
    *(_QWORD *)(v1[6] + 5472) = (char *)v1 + 1986;
    *(_QWORD *)(v1[6] + 5480) = (char *)v1 + 1990;
    *(_QWORD *)(v1[6] + 5488) = (char *)v1 + 1994;
    *(_QWORD *)(v1[6] + 5496) = (char *)v1 + 1998;
    *(_QWORD *)(v1[6] + 5504) = (char *)v1 + 2002;
    *(_QWORD *)(v1[6] + 5512) = (char *)v1 + 2006;
    *(_QWORD *)(v1[6] + 5520) = (char *)v1 + 2010;
    *(_QWORD *)(v1[6] + 5528) = (char *)v1 + 2014;
    *(_QWORD *)(v1[6] + 5536) = (char *)v1 + 2018;
    *(_QWORD *)(v1[6] + 5544) = (char *)v1 + 2022;
    *(_QWORD *)(v1[6] + 5552) = (char *)v1 + 2026;
    *(_QWORD *)(v1[6] + 5560) = (char *)v1 + 2030;
    *(_QWORD *)(v1[6] + 5568) = (char *)v1 + 2034;
    *(_QWORD *)(v1[6] + 5576) = (char *)v1 + 2038;
    *(_QWORD *)(v1[6] + 5584) = (char *)v1 + 2042;
    *(_QWORD *)(v1[6] + 5592) = (char *)v1 + 2046;
    *(_QWORD *)(v1[6] + 5600) = (char *)v1 + 2050;
    *(_QWORD *)(v1[6] + 5608) = (char *)v1 + 2054;
    *(_QWORD *)(v1[6] + 5616) = (char *)v1 + 2058;
    *(_QWORD *)(v1[6] + 5624) = (char *)v1 + 2062;
    *(_QWORD *)(v1[6] + 5632) = (char *)v1 + 2066;
    *(_QWORD *)(v1[6] + 5640) = (char *)v1 + 2070;
    *(_QWORD *)(v1[6] + 5648) = (char *)v1 + 2074;
    *(_QWORD *)(v1[6] + 5656) = (char *)v1 + 2078;
    *(_QWORD *)(v1[6] + 5664) = (char *)v1 + 2082;
    *(_QWORD *)(v1[6] + 5672) = (char *)v1 + 2086;
    *(_QWORD *)(v1[6] + 5680) = (char *)v1 + 2090;
    *(_QWORD *)(v1[6] + 5688) = (char *)v1 + 2094;
    *(_QWORD *)(v1[6] + 5696) = (char *)v1 + 2274;
    *(_QWORD *)(v1[6] + 5704) = (char *)v1 + 2278;
    *(_QWORD *)(v1[6] + 5712) = (char *)v1 + 2282;
    *(_QWORD *)(v1[6] + 5720) = (char *)v1 + 2286;
    *(_QWORD *)(v1[6] + 5728) = (char *)v1 + 2290;
    *(_QWORD *)(v1[6] + 5736) = (char *)v1 + 2346;
    *(_QWORD *)(v1[6] + 5744) = (char *)v1 + 2350;
    *(_QWORD *)(v1[6] + 5752) = (char *)v1 + 2354;
    *(_QWORD *)(v1[6] + 5760) = (char *)v1 + 2386;
    *(_QWORD *)(v1[6] + 5768) = (char *)v1 + 2390;
    *(_QWORD *)(v1[6] + 5776) = (char *)v1 + 2394;
    *(_QWORD *)(v1[6] + 5784) = (char *)v1 + 2398;
    *(_QWORD *)(v1[6] + 5792) = (char *)v1 + 2402;
    *(_QWORD *)(v1[6] + 5800) = (char *)v1 + 2406;
    *(_QWORD *)(v1[6] + 5808) = (char *)v1 + 2410;
    *(_QWORD *)(v1[6] + 5816) = (char *)v1 + 2414;
    *(_QWORD *)(v1[6] + 5824) = (char *)v1 + 2418;
    *(_QWORD *)(v1[6] + 5832) = (char *)v1 + 2422;
    *(_QWORD *)(v1[6] + 5840) = (char *)v1 + 2426;
    *(_QWORD *)(v1[6] + 5848) = (char *)v1 + 2430;
    *(_QWORD *)(v1[6] + 5856) = (char *)v1 + 2434;
    *(_QWORD *)(v1[6] + 5864) = (char *)v1 + 2438;
    *(_QWORD *)(v1[6] + 5872) = (char *)v1 + 2442;
    *(_QWORD *)(v1[6] + 5880) = (char *)v1 + 2446;
    *(_QWORD *)(v1[6] + 5888) = (char *)v1 + 2450;
    *(_QWORD *)(v1[6] + 5896) = (char *)v1 + 2454;
    *(_QWORD *)(v1[6] + 5904) = (char *)v1 + 2522;
    *(_QWORD *)(v1[6] + 5912) = (char *)v1 + 2546;
    *(_QWORD *)(v1[6] + 5920) = (char *)v1 + 2550;
    *(_QWORD *)(v1[6] + 5928) = (char *)v1 + 2554;
    *(_QWORD *)(v1[6] + 5936) = (char *)v1 + 2558;
    *(_QWORD *)(v1[6] + 5944) = (char *)v1 + 2562;
    *(_QWORD *)(v1[6] + 5952) = (char *)v1 + 2566;
    *(_QWORD *)(v1[6] + 5960) = (char *)v1 + 2570;
    *(_QWORD *)(v1[6] + 5968) = (char *)v1 + 2574;
    *(_QWORD *)(v1[6] + 5976) = (char *)v1 + 2578;
    *(_QWORD *)(v1[6] + 5984) = (char *)v1 + 2582;
    *(_QWORD *)(v1[6] + 5992) = (char *)v1 + 2586;
    *(_QWORD *)(v1[6] + 6000) = (char *)v1 + 2590;
    *(_QWORD *)(v1[6] + 6008) = (char *)v1 + 2594;
    *(_QWORD *)(v1[6] + 6016) = (char *)v1 + 2598;
    *(_QWORD *)(v1[6] + 6024) = (char *)v1 + 2602;
    *(_QWORD *)(v1[6] + 6032) = (char *)v1 + 2606;
    *(_QWORD *)(v1[6] + 6040) = (char *)v1 + 2610;
    *(_QWORD *)(v1[6] + 6048) = (char *)v1 + 2614;
    *(_QWORD *)(v1[6] + 6056) = (char *)v1 + 2618;
    *(_QWORD *)(v1[6] + 6064) = (char *)v1 + 2622;
    *(_QWORD *)(v1[6] + 6072) = (char *)v1 + 2626;
    *(_QWORD *)(v1[6] + 6080) = (char *)v1 + 2630;
    *(_QWORD *)(v1[6] + 6088) = (char *)v1 + 2634;
    *(_QWORD *)(v1[6] + 6096) = (char *)v1 + 2638;
    *(_QWORD *)(v1[6] + 6104) = (char *)v1 + 2642;
    *(_QWORD *)(v1[6] + 6112) = (char *)v1 + 2646;
    *(_QWORD *)(v1[6] + 6120) = (char *)v1 + 2650;
    *(_QWORD *)(v1[6] + 6128) = (char *)v1 + 2654;
    *(_QWORD *)(v1[6] + 6136) = (char *)v1 + 2658;
    *(_QWORD *)(v1[6] + 6144) = (char *)v1 + 2662;
    *(_QWORD *)(v1[6] + 6152) = (char *)v1 + 2666;
    *(_QWORD *)(v1[6] + 6160) = (char *)v1 + 2670;
    *(_QWORD *)(v1[6] + 6168) = (char *)v1 + 2674;
    *(_QWORD *)(v1[6] + 6176) = (char *)v1 + 2678;
    *(_QWORD *)(v1[6] + 6184) = (char *)v1 + 2682;
    *(_QWORD *)(v1[6] + 6192) = (char *)v1 + 2686;
    *(_QWORD *)(v1[6] + 6200) = (char *)v1 + 2690;
    *(_QWORD *)(v1[6] + 6208) = (char *)v1 + 2694;
    *(_QWORD *)(v1[6] + 6216) = (char *)v1 + 2698;
    *(_QWORD *)(v1[6] + 6224) = (char *)v1 + 2702;
    *(_QWORD *)(v1[6] + 6232) = (char *)v1 + 2706;
    *(_QWORD *)(v1[6] + 6240) = (char *)v1 + 2710;
    *(_QWORD *)(v1[6] + 6248) = (char *)v1 + 2714;
    *(_QWORD *)(v1[6] + 6256) = (char *)v1 + 2718;
    *(_QWORD *)(v1[6] + 6264) = (char *)v1 + 2722;
    *(_QWORD *)(v1[6] + 6272) = (char *)v1 + 2726;
    *(_QWORD *)(v1[6] + 6280) = (char *)v1 + 2730;
    *(_QWORD *)(v1[6] + 6288) = (char *)v1 + 2734;
    *(_QWORD *)(v1[6] + 6296) = (char *)v1 + 2738;
    *(_QWORD *)(v1[6] + 6304) = (char *)v1 + 2742;
    *(_QWORD *)(v1[6] + 6312) = (char *)v1 + 2746;
    *(_QWORD *)(v1[6] + 6320) = (char *)v1 + 2750;
    *(_QWORD *)(v1[6] + 6328) = (char *)v1 + 2754;
    *(_QWORD *)(v1[6] + 6336) = (char *)v1 + 2758;
    *(_QWORD *)(v1[6] + 6344) = (char *)v1 + 2762;
    *(_QWORD *)(v1[6] + 6352) = (char *)v1 + 2766;
    *(_QWORD *)(v1[6] + 6360) = (char *)v1 + 2770;
    *(_QWORD *)(v1[6] + 6368) = (char *)v1 + 2774;
    *(_QWORD *)(v1[6] + 6376) = (char *)v1 + 2778;
    *(_QWORD *)(v1[6] + 6384) = (char *)v1 + 2782;
    *(_QWORD *)(v1[6] + 6392) = (char *)v1 + 2786;
    *(_QWORD *)(v1[6] + 6400) = (char *)v1 + 2790;
    *(_QWORD *)(v1[6] + 6408) = (char *)v1 + 2794;
    *(_QWORD *)(v1[6] + 6416) = (char *)v1 + 2798;
    *(_QWORD *)(v1[6] + 6424) = (char *)v1 + 2802;
    *(_QWORD *)(v1[6] + 6432) = (char *)v1 + 2806;
    *(_QWORD *)(v1[6] + 6440) = (char *)v1 + 2810;
    *(_QWORD *)(v1[6] + 6448) = (char *)v1 + 2814;
    *(_QWORD *)(v1[6] + 6456) = (char *)v1 + 2818;
    *(_QWORD *)(v1[6] + 6464) = (char *)v1 + 2822;
    *(_QWORD *)(v1[6] + 6472) = (char *)v1 + 2826;
    *(_QWORD *)(v1[6] + 6480) = (char *)v1 + 2830;
    *(_QWORD *)(v1[6] + 6488) = (char *)v1 + 2834;
    *(_QWORD *)(v1[6] + 6496) = (char *)v1 + 2838;
    *(_QWORD *)(v1[6] + 6504) = (char *)v1 + 2842;
    *(_QWORD *)(v1[6] + 6512) = (char *)v1 + 2846;
    *(_QWORD *)(v1[6] + 6520) = (char *)v1 + 2850;
    *(_QWORD *)(v1[6] + 6528) = (char *)v1 + 2854;
    *(_QWORD *)(v1[6] + 6536) = (char *)v1 + 2858;
    *(_QWORD *)(v1[6] + 6544) = (char *)v1 + 2862;
    *(_QWORD *)(v1[6] + 6552) = (char *)v1 + 2866;
    *(_QWORD *)(v1[6] + 6560) = (char *)v1 + 2870;
    *(_QWORD *)(v1[6] + 6568) = (char *)v1 + 2874;
    *(_QWORD *)(v1[6] + 6576) = (char *)v1 + 2878;
    *(_QWORD *)(v1[6] + 6584) = (char *)v1 + 2882;
    *(_QWORD *)(v1[6] + 6592) = (char *)v1 + 2886;
    *(_QWORD *)(v1[6] + 6600) = (char *)v1 + 2890;
    *(_QWORD *)(v1[6] + 6608) = (char *)v1 + 2894;
    *(_QWORD *)(v1[6] + 6616) = (char *)v1 + 2898;
    *(_QWORD *)(v1[6] + 6624) = (char *)v1 + 2902;
    *(_QWORD *)(v1[6] + 6632) = (char *)v1 + 2906;
    *(_QWORD *)(v1[6] + 6640) = (char *)v1 + 2910;
    *(_QWORD *)(v1[6] + 6648) = (char *)v1 + 2914;
    *(_QWORD *)(v1[6] + 6656) = (char *)v1 + 2918;
    *(_QWORD *)(v1[6] + 6664) = (char *)v1 + 2922;
    *(_QWORD *)(v1[6] + 6672) = (char *)v1 + 2926;
    *(_QWORD *)(v1[6] + 6680) = (char *)v1 + 2930;
    *(_QWORD *)(v1[6] + 6688) = (char *)v1 + 2934;
    *(_QWORD *)(v1[6] + 6696) = (char *)v1 + 2938;
    *(_QWORD *)(v1[6] + 6704) = (char *)v1 + 2942;
    *(_QWORD *)(v1[6] + 6712) = (char *)v1 + 2946;
    *(_QWORD *)(v1[6] + 6720) = (char *)v1 + 2950;
    *(_QWORD *)(v1[6] + 6728) = (char *)v1 + 2954;
    *(_QWORD *)(v1[6] + 6736) = (char *)v1 + 2958;
    *(_QWORD *)(v1[6] + 6744) = (char *)v1 + 2962;
    *(_QWORD *)(v1[6] + 6752) = (char *)v1 + 2966;
    *(_QWORD *)(v1[6] + 6760) = (char *)v1 + 2970;
    *(_QWORD *)(v1[6] + 6768) = (char *)v1 + 2974;
    *(_QWORD *)(v1[6] + 6776) = (char *)v1 + 2978;
    *(_QWORD *)(v1[6] + 6784) = (char *)v1 + 2982;
    *(_QWORD *)(v1[6] + 6792) = (char *)v1 + 2986;
    *(_QWORD *)(v1[6] + 6800) = (char *)v1 + 2990;
    *(_QWORD *)(v1[6] + 6808) = (char *)v1 + 2994;
    *(_QWORD *)(v1[6] + 6816) = (char *)v1 + 2998;
    *(_QWORD *)(v1[6] + 6824) = (char *)v1 + 3002;
    *(_QWORD *)(v1[6] + 6832) = (char *)v1 + 3006;
    *(_QWORD *)(v1[6] + 6840) = (char *)v1 + 3010;
    *(_QWORD *)(v1[6] + 6848) = (char *)v1 + 3014;
    *(_QWORD *)(v1[6] + 6856) = (char *)v1 + 3018;
    *(_QWORD *)(v1[6] + 6864) = (char *)v1 + 3022;
    *(_QWORD *)(v1[6] + 6872) = (char *)v1 + 3026;
    *(_QWORD *)(v1[6] + 6880) = (char *)v1 + 3030;
    *(_QWORD *)(v1[6] + 6888) = (char *)v1 + 3034;
    *(_QWORD *)(v1[6] + 6896) = (char *)v1 + 3038;
    *(_QWORD *)(v1[6] + 6904) = (char *)v1 + 3042;
    *(_QWORD *)(v1[6] + 6912) = (char *)v1 + 3046;
    *(_QWORD *)(v1[6] + 6920) = (char *)v1 + 3050;
    *(_QWORD *)(v1[6] + 6928) = (char *)v1 + 3054;
    *(_QWORD *)(v1[6] + 6936) = (char *)v1 + 3058;
    *(_QWORD *)(v1[6] + 6944) = (char *)v1 + 3062;
    *(_QWORD *)(v1[6] + 6952) = (char *)v1 + 3066;
    *(_QWORD *)(v1[6] + 6960) = (char *)v1 + 3070;
    *(_QWORD *)(v1[6] + 6968) = (char *)v1 + 3074;
    *(_QWORD *)(v1[6] + 6976) = (char *)v1 + 3078;
    *(_QWORD *)(v1[6] + 6984) = (char *)v1 + 3082;
    *(_QWORD *)(v1[6] + 6992) = (char *)v1 + 3086;
    *(_QWORD *)(v1[6] + 7000) = (char *)v1 + 3090;
    *(_QWORD *)(v1[6] + 7008) = (char *)v1 + 3194;
    *(_QWORD *)(v1[6] + 7016) = (char *)v1 + 3198;
    *(_QWORD *)(v1[6] + 7024) = (char *)v1 + 3202;
    *(_QWORD *)(v1[6] + 7032) = (char *)v1 + 3206;
    *(_QWORD *)(v1[6] + 7040) = (char *)v1 + 3210;
    *(_QWORD *)(v1[6] + 7048) = (char *)v1 + 3214;
    *(_QWORD *)(v1[6] + 7056) = (char *)v1 + 3218;
    *(_QWORD *)(v1[6] + 7064) = (char *)v1 + 3222;
    *(_QWORD *)(v1[6] + 7072) = (char *)v1 + 3226;
    *(_QWORD *)(v1[6] + 7080) = (char *)v1 + 3230;
    *(_QWORD *)(v1[6] + 7088) = (char *)v1 + 3234;
    *(_QWORD *)(v1[6] + 7096) = (char *)v1 + 3238;
    *(_QWORD *)(v1[6] + 7104) = (char *)v1 + 3242;
    *(_QWORD *)(v1[6] + 7112) = (char *)v1 + 3246;
    *(_QWORD *)(v1[6] + 7120) = (char *)v1 + 3250;
    *(_QWORD *)(v1[6] + 7128) = (char *)v1 + 3254;
    *(_QWORD *)(v1[6] + 7136) = (char *)v1 + 3258;
    *(_QWORD *)(v1[6] + 7144) = (char *)v1 + 3262;
    *(_QWORD *)(v1[6] + 7152) = (char *)v1 + 3266;
    *(_QWORD *)(v1[6] + 7160) = (char *)v1 + 3270;
    *(_QWORD *)(v1[6] + 7168) = (char *)v1 + 3274;
    *(_QWORD *)(v1[6] + 7176) = (char *)v1 + 3278;
    *(_QWORD *)(v1[6] + 7184) = (char *)v1 + 3282;
    *(_QWORD *)(v1[6] + 7192) = (char *)v1 + 3286;
    *(_QWORD *)(v1[6] + 7200) = (char *)v1 + 3290;
    *(_QWORD *)(v1[6] + 7208) = (char *)v1 + 3294;
    *(_QWORD *)(v1[6] + 7216) = (char *)v1 + 3298;
    *(_QWORD *)(v1[6] + 7224) = (char *)v1 + 3302;
    *(_QWORD *)(v1[6] + 7232) = (char *)v1 + 3306;
    *(_QWORD *)(v1[6] + 7240) = (char *)v1 + 3310;
    *(_QWORD *)(v1[6] + 7248) = (char *)v1 + 3314;
    *(_QWORD *)(v1[6] + 7256) = (char *)v1 + 3318;
    *(_QWORD *)(v1[6] + 7264) = (char *)v1 + 3322;
    *(_QWORD *)(v1[6] + 7272) = (char *)v1 + 3326;
    *(_QWORD *)(v1[6] + 7280) = (char *)v1 + 3330;
    *(_QWORD *)(v1[6] + 7288) = (char *)v1 + 3334;
    *(_QWORD *)(v1[6] + 7296) = (char *)v1 + 3338;
    *(_QWORD *)(v1[6] + 7304) = (char *)v1 + 3342;
    *(_QWORD *)(v1[6] + 7312) = (char *)v1 + 3346;
    *(_QWORD *)(v1[6] + 7320) = (char *)v1 + 3350;
    *(_QWORD *)(v1[6] + 7328) = (char *)v1 + 3370;
    *(_QWORD *)(v1[6] + 7336) = (char *)v1 + 3374;
    *(_QWORD *)(v1[6] + 7344) = (char *)v1 + 3378;
    *(_QWORD *)(v1[6] + 7352) = (char *)v1 + 3418;
    *(_QWORD *)(v1[6] + 7360) = (char *)v1 + 3422;
    *(_QWORD *)(v1[6] + 7368) = (char *)v1 + 3426;
    *(_QWORD *)(v1[6] + 7376) = (char *)v1 + 3430;
    *(_QWORD *)(v1[6] + 7384) = (char *)v1 + 3434;
    *(_QWORD *)(v1[6] + 7392) = (char *)v1 + 3438;
    *(_QWORD *)(v1[6] + 7400) = (char *)v1 + 3442;
    *(_QWORD *)(v1[6] + 7408) = (char *)v1 + 3446;
    *(_QWORD *)(v1[6] + 7416) = (char *)v1 + 3450;
    *(_QWORD *)(v1[6] + 7424) = (char *)v1 + 3454;
    *(_QWORD *)(v1[6] + 7432) = (char *)v1 + 3458;
    *(_QWORD *)(v1[6] + 7440) = (char *)v1 + 3462;
    *(_QWORD *)(v1[6] + 7448) = (char *)v1 + 3466;
    *(_QWORD *)(v1[6] + 7456) = (char *)v1 + 3470;
    *(_QWORD *)(v1[6] + 7464) = (char *)v1 + 3474;
    *(_QWORD *)(v1[6] + 7472) = (char *)v1 + 3478;
    *(_QWORD *)(v1[6] + 7480) = (char *)v1 + 3482;
    *(_QWORD *)(v1[6] + 7488) = (char *)v1 + 3486;
    *(_QWORD *)(v1[6] + 7496) = (char *)v1 + 3490;
    *(_QWORD *)(v1[6] + 7504) = (char *)v1 + 3494;
    *(_QWORD *)(v1[6] + 7512) = (char *)v1 + 3498;
    *(_QWORD *)(v1[6] + 7520) = (char *)v1 + 3502;
    *(_QWORD *)(v1[6] + 7528) = (char *)v1 + 3506;
    *(_QWORD *)(v1[6] + 7536) = (char *)v1 + 3510;
    *(_QWORD *)(v1[6] + 7544) = (char *)v1 + 3514;
    *(_QWORD *)(v1[6] + 7552) = (char *)v1 + 3518;
    *(_QWORD *)(v1[6] + 7560) = (char *)v1 + 3522;
    *(_QWORD *)(v1[6] + 7568) = (char *)v1 + 3526;
    *(_QWORD *)(v1[6] + 7576) = (char *)v1 + 3530;
    *(_QWORD *)(v1[6] + 7584) = (char *)v1 + 3534;
    *(_QWORD *)(v1[6] + 7592) = (char *)v1 + 3538;
    *(_QWORD *)(v1[6] + 7600) = (char *)v1 + 3542;
    *(_QWORD *)(v1[6] + 7608) = (char *)v1 + 3546;
    *(_QWORD *)(v1[6] + 7616) = (char *)v1 + 3550;
    *(_QWORD *)(v1[6] + 7624) = (char *)v1 + 3554;
    *(_QWORD *)(v1[6] + 7632) = (char *)v1 + 3558;
    *(_QWORD *)(v1[6] + 7640) = (char *)v1 + 3562;
    *(_QWORD *)(v1[6] + 7648) = (char *)v1 + 3566;
    *(_QWORD *)(v1[6] + 7656) = (char *)v1 + 3570;
    *(_QWORD *)(v1[6] + 7664) = (char *)v1 + 3574;
    *(_QWORD *)(v1[6] + 7672) = (char *)v1 + 3578;
    *(_QWORD *)(v1[6] + 7680) = (char *)v1 + 3582;
    *(_QWORD *)(v1[6] + 7688) = (char *)v1 + 3586;
    *(_QWORD *)(v1[6] + 7696) = (char *)v1 + 3770;
    *(_QWORD *)(v1[6] + 7704) = (char *)v1 + 3802;
    *(_QWORD *)(v1[6] + 7712) = (char *)v1 + 3826;
    *(_QWORD *)(v1[6] + 7720) = (char *)v1 + 3830;
    *(_QWORD *)(v1[6] + 7728) = (char *)v1 + 3834;
    *(_QWORD *)(v1[6] + 7736) = (char *)v1 + 3858;
    *(_QWORD *)(v1[6] + 7744) = (char *)v1 + 3862;
    *(_QWORD *)(v1[6] + 7752) = (char *)v1 + 3866;
    *(_QWORD *)(v1[6] + 7760) = (char *)v1 + 3870;
    *(_QWORD *)(v1[6] + 7768) = (char *)v1 + 3874;
    *(_QWORD *)(v1[6] + 7776) = (char *)v1 + 3898;
    *(_QWORD *)(v1[6] + 7784) = (char *)v1 + 3902;
    *(_QWORD *)(v1[6] + 7792) = (char *)v1 + 3906;
    *(_QWORD *)(v1[6] + 7800) = (char *)v1 + 3910;
    *(_QWORD *)(v1[6] + 7808) = (char *)v1 + 3914;
    *(_QWORD *)(v1[6] + 7816) = (char *)v1 + 3918;
    *(_QWORD *)(v1[6] + 7824) = (char *)v1 + 3922;
    *(_QWORD *)(v1[6] + 7832) = (char *)v1 + 3926;
    *(_QWORD *)(v1[6] + 7840) = (char *)v1 + 3930;
    *(_QWORD *)(v1[6] + 7848) = (char *)v1 + 3934;
    *(_QWORD *)(v1[6] + 7856) = (char *)v1 + 4034;
    *(_QWORD *)(v1[6] + 7864) = (char *)v1 + 4038;
    *(_QWORD *)(v1[6] + 7872) = (char *)v1 + 4058;
    *(_QWORD *)(v1[6] + 7880) = (char *)v1 + 4062;
    *(_QWORD *)(v1[6] + 7888) = (char *)v1 + 4066;
    *(_QWORD *)(v1[6] + 7896) = (char *)v1 + 4070;
    *(_QWORD *)(v1[6] + 7904) = (char *)v1 + 4074;
    *(_QWORD *)(v1[6] + 7912) = (char *)v1 + 4078;
    *(_QWORD *)(v1[6] + 7920) = (char *)v1 + 4242;
    *(_QWORD *)(v1[6] + 7928) = (char *)v1 + 4246;
    *(_QWORD *)(v1[6] + 7936) = (char *)v1 + 4250;
    *(_QWORD *)(v1[6] + 7944) = (char *)v1 + 4254;
    *(_QWORD *)(v1[6] + 7952) = (char *)v1 + 4258;
    *(_QWORD *)(v1[6] + 7960) = (char *)v1 + 4262;
    *(_QWORD *)(v1[6] + 7968) = (char *)v1 + 4266;
    *(_QWORD *)(v1[6] + 7976) = (char *)v1 + 4270;
    *(_QWORD *)(v1[6] + 7984) = (char *)v1 + 4274;
    *(_QWORD *)(v1[6] + 7992) = (char *)v1 + 4278;
    *(_QWORD *)(v1[6] + 8000) = (char *)v1 + 4282;
    *(_QWORD *)(v1[6] + 8008) = (char *)v1 + 4306;
    *(_QWORD *)(v1[6] + 8016) = (char *)v1 + 4310;
    *(_QWORD *)(v1[6] + 8024) = (char *)v1 + 4314;
    *(_QWORD *)(v1[6] + 8032) = (char *)v1 + 4318;
    *(_QWORD *)(v1[6] + 8040) = (char *)v1 + 4322;
    *(_QWORD *)(v1[6] + 8048) = (char *)v1 + 4326;
    *(_QWORD *)(v1[6] + 8056) = (char *)v1 + 4330;
    *(_QWORD *)(v1[6] + 8064) = (char *)v1 + 4334;
    *(_QWORD *)(v1[6] + 8072) = (char *)v1 + 4338;
    *(_QWORD *)(v1[6] + 8080) = (char *)v1 + 4342;
    *(_QWORD *)(v1[6] + 8088) = (char *)v1 + 4346;
    *(_QWORD *)(v1[6] + 8096) = (char *)v1 + 4350;
    *(_QWORD *)(v1[6] + 8104) = (char *)v1 + 4354;
    *(_QWORD *)(v1[6] + 8112) = (char *)v1 + 4358;
    *(_QWORD *)(v1[6] + 8120) = (char *)v1 + 4362;
    *(_QWORD *)(v1[6] + 8128) = (char *)v1 + 4366;
    *(_QWORD *)(v1[6] + 8136) = (char *)v1 + 4370;
    *(_QWORD *)(v1[6] + 8144) = (char *)v1 + 4374;
    *(_QWORD *)(v1[6] + 8152) = (char *)v1 + 4378;
    *(_QWORD *)(v1[6] + 8160) = (char *)v1 + 4382;
    *(_QWORD *)(v1[6] + 8168) = (char *)v1 + 4386;
    *(_QWORD *)(v1[6] + 8176) = (char *)v1 + 4390;
    *(_QWORD *)(v1[6] + 8184) = (char *)v1 + 4394;
    *(_QWORD *)(v1[6] + 0x2000) = (char *)v1 + 4398;
    *(_QWORD *)(v1[6] + 8200) = (char *)v1 + 4402;
    *(_QWORD *)(v1[6] + 8208) = (char *)v1 + 4406;
    *(_QWORD *)(v1[6] + 8216) = (char *)v1 + 4410;
    *(_QWORD *)(v1[6] + 8224) = (char *)v1 + 4414;
    *(_QWORD *)(v1[6] + 8232) = (char *)v1 + 4418;
    *(_QWORD *)(v1[6] + 8240) = (char *)v1 + 4422;
    *(_QWORD *)(v1[6] + 8248) = (char *)v1 + 4426;
    *(_QWORD *)(v1[6] + 8256) = (char *)v1 + 4430;
    *(_QWORD *)(v1[6] + 8264) = (char *)v1 + 4434;
    *(_QWORD *)(v1[6] + 8272) = (char *)v1 + 4438;
    *(_QWORD *)(v1[6] + 8280) = (char *)v1 + 4442;
    *(_QWORD *)(v1[6] + 8288) = (char *)v1 + 4446;
    *(_QWORD *)(v1[6] + 8296) = (char *)v1 + 4450;
    *(_QWORD *)(v1[6] + 8304) = (char *)v1 + 4454;
    *(_QWORD *)(v1[6] + 8312) = (char *)v1 + 4458;
    *(_QWORD *)(v1[6] + 8320) = (char *)v1 + 4462;
    *(_QWORD *)(v1[6] + 8328) = (char *)v1 + 4466;
    *(_QWORD *)(v1[6] + 8336) = (char *)v1 + 4470;
    *(_QWORD *)(v1[6] + 8344) = (char *)v1 + 4474;
    *(_QWORD *)(v1[6] + 8352) = (char *)v1 + 4478;
    *(_QWORD *)(v1[6] + 8360) = (char *)v1 + 4482;
    *(_QWORD *)(v1[6] + 8368) = (char *)v1 + 4486;
    *(_QWORD *)(v1[6] + 8376) = (char *)v1 + 4490;
    *(_QWORD *)(v1[6] + 8384) = (char *)v1 + 4494;
    *(_QWORD *)(v1[6] + 8392) = (char *)v1 + 4498;
    *(_QWORD *)(v1[6] + 8400) = (char *)v1 + 4502;
    *(_QWORD *)(v1[6] + 8408) = (char *)v1 + 4506;
    *(_QWORD *)(v1[6] + 8416) = (char *)v1 + 4510;
    *(_QWORD *)(v1[6] + 8424) = (char *)v1 + 4514;
    *(_QWORD *)(v1[6] + 8432) = (char *)v1 + 4518;
    *(_QWORD *)(v1[6] + 8440) = (char *)v1 + 4522;
    *(_QWORD *)(v1[6] + 8448) = (char *)v1 + 4526;
    *(_QWORD *)(v1[6] + 8456) = (char *)v1 + 4530;
    *(_QWORD *)(v1[6] + 8464) = (char *)v1 + 4534;
    *(_QWORD *)(v1[6] + 8472) = (char *)v1 + 4538;
    *(_QWORD *)(v1[6] + 8480) = (char *)v1 + 4542;
    *(_QWORD *)(v1[6] + 8488) = (char *)v1 + 4546;
    *(_QWORD *)(v1[6] + 8496) = (char *)v1 + 4550;
    *(_QWORD *)(v1[6] + 8504) = (char *)v1 + 4554;
    *(_QWORD *)(v1[6] + 8512) = (char *)v1 + 4558;
    *(_QWORD *)(v1[6] + 8520) = (char *)v1 + 4562;
    *(_QWORD *)(v1[6] + 8528) = (char *)v1 + 4566;
    *(_QWORD *)(v1[6] + 8536) = (char *)v1 + 4570;
    *(_QWORD *)(v1[6] + 8544) = (char *)v1 + 4574;
    *(_QWORD *)(v1[6] + 8552) = (char *)v1 + 4578;
    *(_QWORD *)(v1[6] + 8560) = (char *)v1 + 4582;
    *(_QWORD *)(v1[6] + 8568) = (char *)v1 + 4586;
    *(_QWORD *)(v1[6] + 8576) = (char *)v1 + 4590;
    *(_QWORD *)(v1[6] + 8584) = (char *)v1 + 4594;
    *(_QWORD *)(v1[6] + 8592) = (char *)v1 + 4598;
    *(_QWORD *)(v1[6] + 8600) = (char *)v1 + 4602;
    *(_QWORD *)(v1[6] + 8608) = (char *)v1 + 4606;
    *(_QWORD *)(v1[6] + 8616) = (char *)v1 + 4610;
    *(_QWORD *)(v1[6] + 8624) = (char *)v1 + 4614;
    *(_QWORD *)(v1[6] + 8632) = (char *)v1 + 4618;
    *(_QWORD *)(v1[6] + 8640) = (char *)v1 + 4622;
    *(_QWORD *)(v1[6] + 8648) = (char *)v1 + 4626;
    *(_QWORD *)(v1[6] + 8656) = (char *)v1 + 4630;
    *(_QWORD *)(v1[6] + 8664) = (char *)v1 + 4634;
    *(_QWORD *)(v1[6] + 8672) = (char *)v1 + 4638;
    *(_QWORD *)(v1[6] + 8680) = (char *)v1 + 4706;
    *(_QWORD *)(v1[6] + 8688) = (char *)v1 + 4710;
    *(_QWORD *)(v1[6] + 8696) = (char *)v1 + 4714;
    *(_QWORD *)(v1[6] + 8704) = (char *)v1 + 4718;
    *(_QWORD *)(v1[6] + 8712) = (char *)v1 + 4722;
    *(_QWORD *)(v1[6] + 8720) = (char *)v1 + 4726;
    *(_QWORD *)(v1[6] + 8728) = (char *)v1 + 4730;
    *(_QWORD *)(v1[6] + 8736) = (char *)v1 + 4734;
    *(_QWORD *)(v1[6] + 8744) = (char *)v1 + 4738;
    *(_QWORD *)(v1[6] + 8752) = (char *)v1 + 4938;
    *(_QWORD *)(v1[6] + 8760) = (char *)v1 + 4942;
    *(_QWORD *)(v1[6] + 8768) = (char *)v1 + 4994;
    *(_QWORD *)(v1[6] + 8776) = (char *)v1 + 4998;
    *(_QWORD *)(v1[6] + 8784) = (char *)v1 + 5066;
    *(_QWORD *)(v1[6] + 8792) = (char *)v1 + 5090;
    *(_QWORD *)(v1[6] + 8800) = (char *)v1 + 5114;
    *(_QWORD *)(v1[6] + 8808) = (char *)v1 + 5118;
    *(_QWORD *)(v1[6] + 8816) = (char *)v1 + 5122;
    *(_QWORD *)(v1[6] + 8824) = (char *)v1 + 5126;
    *(_QWORD *)(v1[6] + 8832) = (char *)v1 + 5130;
    *(_QWORD *)(v1[6] + 8840) = (char *)v1 + 5134;
    *(_QWORD *)(v1[6] + 8848) = (char *)v1 + 5138;
    *(_QWORD *)(v1[6] + 8856) = (char *)v1 + 5142;
    *(_QWORD *)(v1[6] + 8864) = (char *)v1 + 5146;
    *(_QWORD *)(v1[6] + 8872) = (char *)v1 + 5150;
    *(_QWORD *)(v1[6] + 8880) = (char *)v1 + 5154;
    *(_QWORD *)(v1[6] + 8888) = (char *)v1 + 5158;
    *(_QWORD *)(v1[6] + 8896) = (char *)v1 + 5162;
    *(_QWORD *)(v1[6] + 8904) = (char *)v1 + 5166;
    *(_QWORD *)(v1[6] + 8912) = (char *)v1 + 5170;
    *(_QWORD *)(v1[6] + 8920) = (char *)v1 + 5242;
    *(_QWORD *)(v1[6] + 8928) = (char *)v1 + 5246;
    *(_QWORD *)(v1[6] + 8936) = (char *)v1 + 5362;
    *(_QWORD *)(v1[6] + 8944) = (char *)v1 + 5418;
    *(_QWORD *)(v1[6] + 8952) = (char *)v1 + 5422;
    *(_QWORD *)(v1[6] + 8960) = (char *)v1 + 5426;
    *(_QWORD *)(v1[6] + 8968) = (char *)v1 + 5430;
    *(_QWORD *)(v1[6] + 8976) = (char *)v1 + 5434;
    *(_QWORD *)(v1[6] + 8984) = (char *)v1 + 5438;
    *(_QWORD *)(v1[6] + 8992) = (char *)v1 + 5458;
    *(_QWORD *)(v1[6] + 9000) = (char *)v1 + 5462;
    *(_QWORD *)(v1[6] + 9008) = (char *)v1 + 5466;
    *(_QWORD *)(v1[6] + 9016) = (char *)v1 + 5470;
    *(_QWORD *)(v1[6] + 9024) = (char *)v1 + 5474;
    *(_QWORD *)(v1[6] + 9032) = (char *)v1 + 5478;
    *(_QWORD *)(v1[6] + 9040) = (char *)v1 + 5482;
    *(_QWORD *)(v1[6] + 9048) = (char *)v1 + 5486;
    *(_QWORD *)(v1[6] + 9056) = (char *)v1 + 5490;
    *(_QWORD *)(v1[6] + 9064) = (char *)v1 + 5494;
    *(_QWORD *)(v1[6] + 9072) = (char *)v1 + 5498;
    *(_QWORD *)(v1[6] + 9080) = (char *)v1 + 5502;
    *(_QWORD *)(v1[6] + 9088) = (char *)v1 + 5506;
    *(_QWORD *)(v1[6] + 9096) = (char *)v1 + 5510;
    *(_QWORD *)(v1[6] + 9104) = (char *)v1 + 5514;
    *(_QWORD *)(v1[6] + 9112) = (char *)v1 + 5518;
    *(_QWORD *)(v1[6] + 9120) = (char *)v1 + 5522;
    *(_QWORD *)(v1[6] + 9128) = (char *)v1 + 5526;
    *(_QWORD *)(v1[6] + 9136) = (char *)v1 + 5530;
    *(_QWORD *)(v1[6] + 9144) = (char *)v1 + 5534;
    *(_QWORD *)(v1[6] + 9152) = (char *)v1 + 5538;
    *(_QWORD *)(v1[6] + 9160) = (char *)v1 + 5542;
    *(_QWORD *)(v1[6] + 9168) = (char *)v1 + 5546;
    *(_QWORD *)(v1[6] + 9176) = (char *)v1 + 5550;
    *(_QWORD *)(v1[6] + 9184) = (char *)v1 + 5554;
    *(_QWORD *)(v1[6] + 9192) = (char *)v1 + 5558;
    *(_QWORD *)(v1[6] + 9200) = (char *)v1 + 5562;
    *(_QWORD *)(v1[6] + 9208) = (char *)v1 + 5566;
    *(_QWORD *)(v1[6] + 9216) = (char *)v1 + 5570;
    *(_QWORD *)(v1[6] + 9224) = (char *)v1 + 5574;
    *(_QWORD *)(v1[6] + 9232) = (char *)v1 + 5578;
    *(_QWORD *)(v1[6] + 9240) = (char *)v1 + 5582;
    *(_QWORD *)(v1[6] + 9248) = (char *)v1 + 5586;
    *(_QWORD *)(v1[6] + 9256) = (char *)v1 + 5590;
    *(_QWORD *)(v1[6] + 9264) = (char *)v1 + 5594;
    *(_QWORD *)(v1[6] + 9272) = (char *)v1 + 5598;
    *(_QWORD *)(v1[6] + 9280) = (char *)v1 + 5602;
    *(_QWORD *)(v1[6] + 9288) = (char *)v1 + 5606;
    *(_QWORD *)(v1[6] + 9296) = (char *)v1 + 5610;
    *(_QWORD *)(v1[6] + 9304) = (char *)v1 + 5614;
    *(_QWORD *)(v1[6] + 9312) = (char *)v1 + 5618;
    *(_QWORD *)(v1[6] + 9320) = (char *)v1 + 5622;
    *(_QWORD *)(v1[6] + 9328) = (char *)v1 + 5626;
    *(_QWORD *)(v1[6] + 9336) = (char *)v1 + 5630;
    *(_QWORD *)(v1[6] + 9344) = (char *)v1 + 5634;
    *(_QWORD *)(v1[6] + 9352) = (char *)v1 + 5638;
    *(_QWORD *)(v1[6] + 9360) = (char *)v1 + 5642;
    *(_QWORD *)(v1[6] + 9368) = (char *)v1 + 5646;
    *(_QWORD *)(v1[6] + 9376) = (char *)v1 + 5650;
    *(_QWORD *)(v1[6] + 9384) = (char *)v1 + 5654;
    *(_QWORD *)(v1[6] + 9392) = (char *)v1 + 5658;
    *(_QWORD *)(v1[6] + 9400) = (char *)v1 + 5662;
    *(_QWORD *)(v1[6] + 9408) = (char *)v1 + 5666;
    *(_QWORD *)(v1[6] + 9416) = (char *)v1 + 5670;
    *(_QWORD *)(v1[6] + 9424) = (char *)v1 + 5674;
    *(_QWORD *)(v1[6] + 9432) = (char *)v1 + 5678;
    *(_QWORD *)(v1[6] + 9440) = (char *)v1 + 5682;
    *(_QWORD *)(v1[6] + 9448) = (char *)v1 + 5686;
    *(_QWORD *)(v1[6] + 9456) = (char *)v1 + 5690;
    *(_QWORD *)(v1[6] + 9464) = (char *)v1 + 5694;
    *(_QWORD *)(v1[6] + 9472) = (char *)v1 + 5698;
    *(_QWORD *)(v1[6] + 9480) = (char *)v1 + 5702;
    *(_QWORD *)(v1[6] + 9488) = (char *)v1 + 5706;
    *(_QWORD *)(v1[6] + 9496) = (char *)v1 + 5710;
    *(_QWORD *)(v1[6] + 9504) = (char *)v1 + 5714;
    *(_QWORD *)(v1[6] + 9512) = (char *)v1 + 5718;
    *(_QWORD *)(v1[6] + 9520) = (char *)v1 + 5722;
    *(_QWORD *)(v1[6] + 9528) = (char *)v1 + 5726;
    *(_QWORD *)(v1[6] + 9536) = (char *)v1 + 5730;
    *(_QWORD *)(v1[6] + 9544) = (char *)v1 + 5734;
    *(_QWORD *)(v1[6] + 9552) = (char *)v1 + 5738;
    *(_QWORD *)(v1[6] + 9560) = (char *)v1 + 5742;
    *(_QWORD *)(v1[6] + 9568) = (char *)v1 + 5746;
    *(_QWORD *)(v1[6] + 9576) = (char *)v1 + 5750;
    *(_QWORD *)(v1[6] + 9584) = (char *)v1 + 5754;
    *(_QWORD *)(v1[6] + 9592) = (char *)v1 + 5758;
    *(_QWORD *)(v1[6] + 9600) = (char *)v1 + 5762;
    *(_QWORD *)(v1[6] + 9608) = (char *)v1 + 5766;
    *(_QWORD *)(v1[6] + 9616) = (char *)v1 + 5770;
    *(_QWORD *)(v1[6] + 9624) = (char *)v1 + 5774;
    *(_QWORD *)(v1[6] + 9632) = (char *)v1 + 5778;
    *(_QWORD *)(v1[6] + 9640) = (char *)v1 + 5782;
    *(_QWORD *)(v1[6] + 9648) = (char *)v1 + 5866;
    *(_QWORD *)(v1[6] + 9656) = (char *)v1 + 5870;
    *(_QWORD *)(v1[6] + 9664) = (char *)v1 + 5874;
    *(_QWORD *)(v1[6] + 9672) = (char *)v1 + 5878;
    *(_QWORD *)(v1[6] + 9680) = (char *)v1 + 5882;
    *(_QWORD *)(v1[6] + 9688) = (char *)v1 + 5886;
    *(_QWORD *)(v1[6] + 9696) = (char *)v1 + 5890;
    *(_QWORD *)(v1[6] + 9704) = (char *)v1 + 5894;
    *(_QWORD *)(v1[6] + 9712) = (char *)v1 + 5898;
    *(_QWORD *)(v1[6] + 9720) = (char *)v1 + 5902;
    *(_QWORD *)(v1[6] + 9728) = (char *)v1 + 5906;
    *(_QWORD *)(v1[6] + 9736) = (char *)v1 + 5910;
    *(_QWORD *)(v1[6] + 9744) = (char *)v1 + 5914;
    *(_QWORD *)(v1[6] + 9752) = (char *)v1 + 5918;
    *(_QWORD *)(v1[6] + 9760) = (char *)v1 + 5922;
    *(_QWORD *)(v1[6] + 9768) = (char *)v1 + 5926;
    *(_QWORD *)(v1[6] + 9776) = (char *)v1 + 5994;
    *(_QWORD *)(v1[6] + 9784) = (char *)v1 + 5998;
    *(_QWORD *)(v1[6] + 9792) = (char *)v1 + 6002;
    *(_QWORD *)(v1[6] + 9800) = (char *)v1 + 6006;
    *(_QWORD *)(v1[6] + 9808) = (char *)v1 + 6010;
    *(_QWORD *)(v1[6] + 9816) = (char *)v1 + 6014;
    *(_QWORD *)(v1[6] + 9824) = (char *)v1 + 6018;
    *(_QWORD *)(v1[6] + 9832) = (char *)v1 + 6022;
    *(_QWORD *)(v1[6] + 9840) = (char *)v1 + 6026;
    *(_QWORD *)(v1[6] + 9848) = (char *)v1 + 6030;
    *(_QWORD *)(v1[6] + 9856) = (char *)v1 + 6034;
    *(_QWORD *)(v1[6] + 9864) = (char *)v1 + 6038;
    *(_QWORD *)(v1[6] + 9872) = (char *)v1 + 6042;
    *(_QWORD *)(v1[6] + 9880) = (char *)v1 + 6046;
    *(_QWORD *)(v1[6] + 9888) = (char *)v1 + 6050;
    *(_QWORD *)(v1[6] + 9896) = (char *)v1 + 6054;
    *(_QWORD *)(v1[6] + 9904) = (char *)v1 + 6058;
    *(_QWORD *)(v1[6] + 9912) = (char *)v1 + 6242;
    *(_QWORD *)(v1[6] + 9920) = (char *)v1 + 6246;
    *(_QWORD *)(v1[6] + 9928) = (char *)v1 + 6266;
    *(_QWORD *)(v1[6] + 9936) = (char *)v1 + 6270;
    *(_QWORD *)(v1[6] + 9944) = (char *)v1 + 6274;
    *(_QWORD *)(v1[6] + 9952) = (char *)v1 + 6278;
    *(_QWORD *)(v1[6] + 9960) = (char *)v1 + 6282;
    *(_QWORD *)(v1[6] + 9968) = (char *)v1 + 6286;
    *(_QWORD *)(v1[6] + 9976) = (char *)v1 + 6290;
    *(_QWORD *)(v1[6] + 9984) = (char *)v1 + 6294;
    *(_QWORD *)(v1[6] + 9992) = (char *)v1 + 6298;
    v7 = malloc_type_malloc(0x390uLL, 0x80040B8603338uLL);
    v1[7] = v7;
    if (v7)
    {
      *v7 = v1 + 130;
      *(_QWORD *)(v1[7] + 8) = v1 + 132;
      *(_QWORD *)(v1[7] + 16) = v1 + 134;
      *(_QWORD *)(v1[7] + 24) = v1 + 136;
      *(_QWORD *)(v1[7] + 32) = v1 + 138;
      *(_QWORD *)(v1[7] + 40) = v1 + 140;
      *(_QWORD *)(v1[7] + 48) = v1 + 220;
      *(_QWORD *)(v1[7] + 56) = v1 + 222;
      *(_QWORD *)(v1[7] + 64) = v1 + 263;
      *(_QWORD *)(v1[7] + 72) = v1 + 265;
      *(_QWORD *)(v1[7] + 80) = v1 + 267;
      *(_QWORD *)(v1[7] + 88) = v1 + 269;
      *(_QWORD *)(v1[7] + 96) = v1 + 271;
      *(_QWORD *)(v1[7] + 104) = v1 + 273;
      *(_QWORD *)(v1[7] + 112) = v1 + 275;
      *(_QWORD *)(v1[7] + 120) = v1 + 277;
      *(_QWORD *)(v1[7] + 128) = v1 + 279;
      *(_QWORD *)(v1[7] + 136) = v1 + 281;
      *(_QWORD *)(v1[7] + 144) = v1 + 283;
      *(_QWORD *)(v1[7] + 152) = v1 + 424;
      *(_QWORD *)(v1[7] + 160) = v1 + 426;
      *(_QWORD *)(v1[7] + 168) = v1 + 470;
      *(_QWORD *)(v1[7] + 176) = v1 + 506;
      *(_QWORD *)(v1[7] + 184) = v1 + 511;
      *(_QWORD *)(v1[7] + 192) = v1 + 513;
      *(_QWORD *)(v1[7] + 200) = v1 + 515;
      *(_QWORD *)(v1[7] + 208) = v1 + 517;
      *(_QWORD *)(v1[7] + 216) = v1 + 519;
      *(_QWORD *)(v1[7] + 224) = v1 + 521;
      *(_QWORD *)(v1[7] + 232) = v1 + 523;
      *(_QWORD *)(v1[7] + 240) = v1 + 525;
      *(_QWORD *)(v1[7] + 248) = v1 + 527;
      *(_QWORD *)(v1[7] + 256) = v1 + 529;
      *(_QWORD *)(v1[7] + 264) = v1 + 537;
      *(_QWORD *)(v1[7] + 272) = v1 + 583;
      *(_QWORD *)(v1[7] + 280) = v1 + 585;
      *(_QWORD *)(v1[7] + 288) = v1 + 621;
      *(_QWORD *)(v1[7] + 296) = v1 + 623;
      *(_QWORD *)(v1[7] + 304) = v1 + 635;
      *(_QWORD *)(v1[7] + 312) = v1 + 648;
      *(_QWORD *)(v1[7] + 320) = v1 + 650;
      *(_QWORD *)(v1[7] + 328) = v1 + 652;
      *(_QWORD *)(v1[7] + 336) = v1 + 672;
      *(_QWORD *)(v1[7] + 344) = v1 + 674;
      *(_QWORD *)(v1[7] + 352) = v1 + 676;
      *(_QWORD *)(v1[7] + 360) = v1 + 681;
      *(_QWORD *)(v1[7] + 368) = v1 + 759;
      *(_QWORD *)(v1[7] + 376) = v1 + 761;
      *(_QWORD *)(v1[7] + 384) = v1 + 763;
      *(_QWORD *)(v1[7] + 392) = v1 + 765;
      *(_QWORD *)(v1[7] + 400) = v1 + 767;
      *(_QWORD *)(v1[7] + 408) = v1 + 769;
      *(_QWORD *)(v1[7] + 416) = v1 + 771;
      *(_QWORD *)(v1[7] + 424) = v1 + 773;
      *(_QWORD *)(v1[7] + 432) = v1 + 775;
      *(_QWORD *)(v1[7] + 440) = v1 + 777;
      *(_QWORD *)(v1[7] + 448) = v1 + 779;
      *(_QWORD *)(v1[7] + 456) = v1 + 130;
      *(_QWORD *)(v1[7] + 464) = v1 + 132;
      *(_QWORD *)(v1[7] + 472) = v1 + 134;
      *(_QWORD *)(v1[7] + 480) = v1 + 136;
      *(_QWORD *)(v1[7] + 488) = v1 + 138;
      *(_QWORD *)(v1[7] + 496) = v1 + 140;
      *(_QWORD *)(v1[7] + 504) = v1 + 220;
      *(_QWORD *)(v1[7] + 512) = v1 + 222;
      *(_QWORD *)(v1[7] + 520) = v1 + 263;
      *(_QWORD *)(v1[7] + 528) = v1 + 265;
      *(_QWORD *)(v1[7] + 536) = v1 + 267;
      *(_QWORD *)(v1[7] + 544) = v1 + 269;
      *(_QWORD *)(v1[7] + 552) = v1 + 271;
      *(_QWORD *)(v1[7] + 560) = v1 + 273;
      *(_QWORD *)(v1[7] + 568) = v1 + 275;
      *(_QWORD *)(v1[7] + 576) = v1 + 277;
      *(_QWORD *)(v1[7] + 584) = v1 + 279;
      *(_QWORD *)(v1[7] + 592) = v1 + 281;
      *(_QWORD *)(v1[7] + 600) = v1 + 283;
      *(_QWORD *)(v1[7] + 608) = v1 + 424;
      *(_QWORD *)(v1[7] + 616) = v1 + 426;
      *(_QWORD *)(v1[7] + 624) = v1 + 470;
      *(_QWORD *)(v1[7] + 632) = v1 + 506;
      *(_QWORD *)(v1[7] + 640) = v1 + 511;
      *(_QWORD *)(v1[7] + 648) = v1 + 513;
      *(_QWORD *)(v1[7] + 656) = v1 + 515;
      *(_QWORD *)(v1[7] + 664) = v1 + 517;
      *(_QWORD *)(v1[7] + 672) = v1 + 519;
      *(_QWORD *)(v1[7] + 680) = v1 + 521;
      *(_QWORD *)(v1[7] + 688) = v1 + 523;
      *(_QWORD *)(v1[7] + 696) = v1 + 525;
      *(_QWORD *)(v1[7] + 704) = v1 + 527;
      *(_QWORD *)(v1[7] + 712) = v1 + 529;
      *(_QWORD *)(v1[7] + 720) = v1 + 537;
      *(_QWORD *)(v1[7] + 728) = v1 + 583;
      *(_QWORD *)(v1[7] + 736) = v1 + 585;
      *(_QWORD *)(v1[7] + 744) = v1 + 621;
      *(_QWORD *)(v1[7] + 752) = v1 + 623;
      *(_QWORD *)(v1[7] + 760) = v1 + 635;
      *(_QWORD *)(v1[7] + 768) = v1 + 648;
      *(_QWORD *)(v1[7] + 776) = v1 + 650;
      *(_QWORD *)(v1[7] + 784) = v1 + 652;
      *(_QWORD *)(v1[7] + 792) = v1 + 672;
      *(_QWORD *)(v1[7] + 800) = v1 + 674;
      *(_QWORD *)(v1[7] + 808) = v1 + 676;
      *(_QWORD *)(v1[7] + 816) = v1 + 681;
      *(_QWORD *)(v1[7] + 824) = v1 + 759;
      *(_QWORD *)(v1[7] + 832) = v1 + 761;
      *(_QWORD *)(v1[7] + 840) = v1 + 763;
      *(_QWORD *)(v1[7] + 848) = v1 + 765;
      *(_QWORD *)(v1[7] + 856) = v1 + 767;
      *(_QWORD *)(v1[7] + 864) = v1 + 769;
      *(_QWORD *)(v1[7] + 872) = v1 + 771;
      *(_QWORD *)(v1[7] + 880) = v1 + 773;
      *(_QWORD *)(v1[7] + 888) = v1 + 775;
      *(_QWORD *)(v1[7] + 896) = v1 + 777;
      *(_QWORD *)(v1[7] + 904) = v1 + 779;
      link_new((uint64_t)v1);
      set_dict_new((uint64_t)v1);
      act_dict_new((uint64_t)v1);
      runtime_new((uint64_t)v1);
    }
    else
    {
LABEL_8:
      delta_delete((uint64_t)v1);
      return 0;
    }
  }
  return v1;
}

void delta_delete(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  if (a1)
  {
    link_delete((_QWORD *)a1);
    set_dict_delete(a1);
    act_dict_delete(a1);
    runtime_delete(a1);
    v2 = *(void **)(a1 + 24);
    if (v2)
    {
      free(v2);
      *(_QWORD *)(a1 + 24) = 0;
    }
    v3 = *(void **)(a1 + 32);
    if (v3)
    {
      free(v3);
      *(_QWORD *)(a1 + 32) = 0;
    }
    v4 = *(void **)(a1 + 48);
    if (v4)
    {
      free(v4);
      *(_QWORD *)(a1 + 48) = 0;
    }
    v5 = *(void **)(a1 + 56);
    if (v5)
    {
      free(v5);
      *(_QWORD *)(a1 + 56) = 0;
    }
    free(*(void **)(a1 + 40));
    free((void *)a1);
  }
}

void *OUTLINED_FUNCTION_0_49(size_t a1)
{
  return malloc_type_malloc(a1, 0x10040436913F5uLL);
}

double viasizes()
{
  double result;

  qword_2577542E8 = 0x400000004;
  *(_QWORD *)&result = 0x700000007;
  qword_257754348 = 0x700000007;
  return result;
}

void link_new(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  *(_BYTE *)(a1 + 232) = 49;
  v2 = OUTLINED_FUNCTION_2_45(9uLL);
  *(_QWORD *)(a1 + 240) = v2;
  if (!v2)
    goto LABEL_7;
  *(_QWORD *)(a1 + 248) = v2;
  v3 = OUTLINED_FUNCTION_2_45(9uLL);
  *(_QWORD *)(a1 + 256) = v3;
  if (!v3)
    goto LABEL_7;
  *(_QWORD *)(a1 + 264) = v3;
  v4 = OUTLINED_FUNCTION_2_45(0xAuLL);
  *(_QWORD *)(a1 + 272) = v4;
  if (!v4)
    goto LABEL_7;
  *(_QWORD *)(a1 + 280) = v4;
  *(_BYTE *)(a1 + 288) = 9;
  *(_DWORD *)(a1 + 290) = 131073;
  *(_QWORD *)(a1 + 296) = vlfnames_glob;
  *(_BYTE *)(a1 + 304) = 12;
  *(_WORD *)(a1 + 306) = 52;
  *(_QWORD *)(a1 + 312) = "kor.ddl";
  *(_WORD *)(a1 + 320) = 20;
  v5 = OUTLINED_FUNCTION_27_32(0xFC0uLL, 0x26C630D6u);
  *(_QWORD *)(a1 + 64) = v5;
  if (!v5)
    goto LABEL_7;
  memcpy(v5, &vsetdtbl_glob, 0xFC0uLL);
  v6 = OUTLINED_FUNCTION_27_32(0x540uLL, 0xE30AAE52);
  *(_QWORD *)(a1 + 72) = v6;
  if (v6)
    memcpy(v6, &vactdtbl_glob, 0x540uLL);
  else
LABEL_7:
    delta_delete(a1);
}

void link_delete(_QWORD *a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  if (a1)
  {
    v2 = (void *)a1[32];
    if (v2)
    {
      free(v2);
      a1[32] = 0;
    }
    v3 = (void *)a1[30];
    if (v3)
    {
      free(v3);
      a1[30] = 0;
    }
    v4 = (void *)a1[34];
    if (v4)
    {
      free(v4);
      a1[34] = 0;
    }
    v5 = (void *)a1[8];
    if (v5)
    {
      free(v5);
      a1[8] = 0;
    }
    v6 = (void *)a1[9];
    if (v6)
    {
      free(v6);
      a1[9] = 0;
    }
  }
}

uint64_t vfg0009(uint64_t a1)
{
  return a1 + 7;
}

uint64_t vfg0019(uint64_t a1)
{
  return a1 + 11;
}

uint64_t vfg0021(uint64_t a1)
{
  return a1 + 13;
}

uint64_t vfp0021(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 13) = *a2;
  return result;
}

uint64_t vfg0035(uint64_t a1)
{
  return a1 + 11;
}

uint64_t vfg0038(uint64_t a1)
{
  return a1 + 16;
}

uint64_t vfg0039(uint64_t a1)
{
  return a1 + 18;
}

uint64_t vfg0040(uint64_t a1)
{
  return a1 + 20;
}

uint64_t vfp0038(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 16) = *a2;
  return result;
}

uint64_t vfp0039(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 18) = *a2;
  return result;
}

uint64_t vfp0040(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 20) = *a2;
  return result;
}

uint64_t vfg0045(uint64_t a1)
{
  return a1 + 7;
}

uint64_t vfp0046(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 8) = *a2;
  return result;
}

uint64_t vfg0057(uint64_t a1)
{
  return a1 + 16;
}

uint64_t vfg0058(uint64_t a1)
{
  return a1 + 24;
}

uint64_t vfg0059(uint64_t a1)
{
  return a1 + 32;
}

uint64_t vfg0060(uint64_t a1)
{
  return a1 + 40;
}

uint64_t vfg0061(uint64_t a1)
{
  return a1 + 42;
}

uint64_t vfg0062(uint64_t a1)
{
  return a1 + 44;
}

uint64_t vfg0063(uint64_t a1)
{
  return a1 + 46;
}

uint64_t vfp0052(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 6) = *a2;
  return result;
}

double vfp0057(uint64_t a1, double *a2)
{
  double result;

  result = *a2;
  *(double *)(a1 + 16) = *a2;
  return result;
}

uint64_t vfp0058(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 24) = *a2;
  return result;
}

double vfp0059(uint64_t a1, double *a2)
{
  double result;

  result = *a2;
  *(double *)(a1 + 32) = *a2;
  return result;
}

uint64_t vfp0060(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 40) = *a2;
  return result;
}

uint64_t vfp0061(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 42) = *a2;
  return result;
}

uint64_t vfp0062(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 44) = *a2;
  return result;
}

uint64_t vfp0063(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 46) = *a2;
  return result;
}

_WORD *OUTLINED_FUNCTION_0_50(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_1_46(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 2) = *a2;
  return result;
}

void *OUTLINED_FUNCTION_2_45(size_t a1)
{
  return malloc_type_malloc(a1, 0x100004077774924uLL);
}

uint64_t OUTLINED_FUNCTION_3_45(uint64_t a1)
{
  return a1 + 2;
}

uint64_t OUTLINED_FUNCTION_4_44(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 3) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_44(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 4) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_6_44(uint64_t a1)
{
  return a1 + 4;
}

uint64_t OUTLINED_FUNCTION_7_43(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 1) = *a2;
  return result;
}

_BYTE *OUTLINED_FUNCTION_8_43(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_43(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 6) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_10_43(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 5) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_43(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 4) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_42(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 8) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_41(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 2) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_14_40(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 14) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_40(uint64_t a1)
{
  return a1 + 3;
}

uint64_t OUTLINED_FUNCTION_16_40(uint64_t a1)
{
  return a1 + 12;
}

uint64_t OUTLINED_FUNCTION_17_40(uint64_t a1)
{
  return a1 + 10;
}

uint64_t OUTLINED_FUNCTION_18_38(uint64_t a1)
{
  return a1 + 6;
}

uint64_t OUTLINED_FUNCTION_19_38(uint64_t a1)
{
  return a1 + 8;
}

uint64_t OUTLINED_FUNCTION_20_37(uint64_t a1)
{
  return a1 + 14;
}

uint64_t OUTLINED_FUNCTION_21_36(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 11) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_35(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 7) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_23_35(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 12) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_24_34(uint64_t result, _BYTE *a2)
{
  *(_BYTE *)(result + 10) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_25_34(uint64_t a1)
{
  return a1 + 1;
}

uint64_t OUTLINED_FUNCTION_26_34(uint64_t a1)
{
  return a1 + 5;
}

void *OUTLINED_FUNCTION_27_32(size_t a1, unsigned int a2)
{
  return malloc_type_malloc(a1, a2 | 0x101004000000000);
}

uint64_t OUTLINED_FUNCTION_28_32(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 12) = *a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_29_32(uint64_t result, _WORD *a2)
{
  *(_WORD *)(result + 10) = *a2;
  return result;
}

void act_dict_new(uint64_t a1)
{
  _QWORD *v2;

  v2 = malloc_type_malloc(0xA0uLL, 0x10040436913F5uLL);
  *(_QWORD *)(a1 + 176) = v2;
  if (v2)
  {
    *v2 = &unk_25775EA77;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 8) = &unk_25775DC54;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 16) = &unk_25775D8E7;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 24) = &unk_25775DB2C;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 32) = &_MergedGlobals_1;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 40) = &unk_25775D92C;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 48) = &kor_words_no_insert_n_bef_y_actentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 56) = &unk_25775DDB0;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 64) = &unk_25775DF65;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 72) = &unk_25775D88E;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 80) = &unk_25775DA34;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 88) = &unk_25775D878;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 96) = &kor_words_to_tensify_actentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 104) = &unk_25775D993;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 112) = &unk_25775E15A;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 120) = &unk_25775E420;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 128) = &unk_25775D8A8;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 136) = &_MergedGlobals_33;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 144) = &unk_25775D866;
    *(_QWORD *)(*(_QWORD *)(a1 + 176) + 152) = &unk_25775D857;
  }
  else
  {
    delta_delete(a1);
  }
}

void act_dict_delete(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    v2 = *(void **)(a1 + 176);
    if (v2)
    {
      free(v2);
      *(_QWORD *)(a1 + 176) = 0;
    }
  }
}

void set_dict_new(uint64_t a1)
{
  _QWORD *v2;

  v2 = malloc_type_malloc(0x1A0uLL, 0x10040436913F5uLL);
  *(_QWORD *)(a1 + 80) = v2;
  if (v2)
  {
    *v2 = &unk_25777402A;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) = &kor_adverbs_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 16) = &unk_2577753A3;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 24) = &unk_257773D1A;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 32) = &unk_2577748B9;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 40) = &_MergedGlobals_3;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 48) = &unk_257776012;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 56) = &ending_conj_sub_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 64) = &unk_257774E94;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 72) = &unk_257773E03;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 80) = &unk_257774288;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 88) = &ending_final_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 96) = &unk_2577738F0;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 104) = &particle_aux_topic_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 112) = &particle_aux_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 120) = &unk_25777414A;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 128) = &unk_257773833;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 136) = &unk_257773AAA;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 144) = &_MergedGlobals_1_0;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 152) = &unk_2577737C4;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 160) = &unk_2577739EE;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 168) = &unk_2577737B9;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 176) = &unk_257775119;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 184) = &unk_25777388E;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 192) = &verb_stem_P_infl_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 200) = &unk_257773812;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 208) = &unk_257774565;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 216) = &unk_2577743D9;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 224) = &unk_2577737DB;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 232) = &unk_257773F0D;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 240) = &_MergedGlobals_2;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 248) = &unk_257774C8C;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 256) = &verb_stem_e_contr_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 264) = &unk_257773B1E;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 272) = &verb_stem_ha_contr_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 280) = &verb_stem_i_contr_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 288) = &verb_stem_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 296) = &unk_257773926;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 304) = &unk_25777395C;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 312) = &unk_257773BA5;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 320) = &copular_ending_setentries;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 328) = &unk_257775947;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 336) = &_MergedGlobals_34;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 344) = &unk_2577738BE;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 352) = &unk_2577767C7;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 360) = &unk_25777399C;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 368) = &unk_257774AA0;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 376) = &unk_257773A43;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 384) = &unk_2577737F4;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 392) = &unk_257775C97;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 400) = &unk_25777385F;
    *(_QWORD *)(*(_QWORD *)(a1 + 80) + 408) = &unk_257773C53;
  }
  else
  {
    delta_delete(a1);
  }
}

void set_dict_delete(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    v2 = *(void **)(a1 + 80);
    if (v2)
    {
      free(v2);
      *(_QWORD *)(a1 + 80) = 0;
    }
  }
}

uint64_t setEngsynError(uint64_t result, int a2)
{
  *(_DWORD *)(*(_QWORD *)(result + 224) + 216) = a2;
  return result;
}

uint64_t resetEngsynError(uint64_t result)
{
  *(_DWORD *)(*(_QWORD *)(result + 224) + 216) = 0;
  return catchDeltaError(result);
}

uint64_t catchEngsynError(uint64_t result)
{
  *(_DWORD *)(*(_QWORD *)(result + 224) + 216) = 0;
  return result;
}

uint64_t setEngsynErrorRange(uint64_t result, int a2, int a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 224);
  *(_DWORD *)(v3 + 208) = a2;
  *(_DWORD *)(v3 + 212) = a3;
  return result;
}

uint64_t getEngsynErrorRange(uint64_t result, _DWORD *a2, _DWORD *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 224);
  *a2 = *(_DWORD *)(v3 + 208);
  *a3 = *(_DWORD *)(v3 + 212);
  return result;
}

BOOL checkEngsynError(uint64_t a1)
{
  return *(_DWORD *)(*(_QWORD *)(a1 + 224) + 216) != 0;
}

uint64_t getEngsynError(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 224) + 216);
}

uint64_t initStreamArrays(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 224);
  if (*(_BYTE *)(v1 + 220))
    return 0;
  v2 = 1;
  *(_BYTE *)(v1 + 220) = 1;
  createStreamArrays(a1, 28);
  if (initStreamArray(a1, 0)
    && initStreamArray(a1, 1)
    && initStreamArray(a1, 2)
    && initStreamArray(a1, 3)
    && initStreamArray(a1, 4)
    && initStreamArray(a1, 5)
    && initStreamArray(a1, 6)
    && initStreamArray(a1, 7)
    && initStreamArray(a1, 8)
    && initStreamArray(a1, 9)
    && initStreamArray(a1, 10)
    && initStreamArray(a1, 11)
    && initStreamArray(a1, 12)
    && initStreamArray(a1, 13)
    && initStreamArray(a1, 14)
    && initStreamArray(a1, 15)
    && initStreamArray(a1, 16)
    && initStreamArray(a1, 17)
    && initStreamArray(a1, 18)
    && initStreamArray(a1, 19)
    && initStreamArray(a1, 20)
    && initStreamArray(a1, 21)
    && initStreamArray(a1, 22)
    && initStreamArray(a1, 23)
    && initStreamArray(a1, 24)
    && initStreamArray(a1, 25)
    && initStreamArray(a1, 26)
    && initStreamArray(a1, 27))
  {
    return 0;
  }
  return v2;
}

uint64_t init_user_dicts(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  setUserDictInputStream(a1, "inp");
  *(_WORD *)(a2 + 2) = 0;
  *(_WORD *)(a3 + 2) = 1;
  *(_WORD *)(a4 + 2) = 2;
  return 0;
}

uint64_t setNonSequential(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int16 *a9, uint64_t a10)
{
  unint64_t i;
  int v13;
  BOOL v15;
  int v16;
  unsigned __int16 **v17;
  unsigned __int16 **j;

  for (i = 0; i < *(unsigned __int8 *)(a1 + 288); ++i)
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + i) = 0;
  clearnonseqIndex(a1);
  if (*(__int16 *)(a2 + 2) >= 1)
  {
    v13 = *(unsigned __int16 *)(a2 + 2);
    for (j = (unsigned __int16 **)&a10; ; ++j)
    {
      v15 = v13-- != 0;
      if (!v15 || !a9)
        break;
      v16 = *a9;
      if (v16 == 65532)
        LOWORD(v16) = a9[1];
      if ((v16 & 0x8000) == 0 && (__int16)v16 < (int)*(unsigned __int8 *)(a1 + 288))
      {
        *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + (__int16)v16) = 1;
        setnonseqIndex(a1, (__int16)v16);
      }
      v17 = j;
      a9 = *v17;
    }
  }
  return 0;
}

void eloqc_new(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    v2 = malloc_type_malloc(0x100uLL, 0x10D0040F3AD890DuLL);
    *(_QWORD *)(a1 + 224) = v2;
    bzero(v2, 0x100uLL);
    ecilink_new(a1);
    *(_BYTE *)(*(_QWORD *)(a1 + 224) + 221) = -1;
  }
}

void eloqc_delete(uint64_t a1)
{
  if (a1)
  {
    if (*(_QWORD *)(a1 + 224))
    {
      ecilink_delete(a1);
      bzero(*(void **)(a1 + 224), 0x100uLL);
      free(*(void **)(a1 + 224));
      *(_QWORD *)(a1 + 224) = 0;
    }
  }
}

uint64_t initializeIO(_QWORD *a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t inited;
  int v6;
  _BOOL8 v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  int v11;
  _BOOL8 v12;
  uint64_t v13;
  _OWORD *v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;

  if (*(_BYTE *)(a1[28] + 248))
    goto LABEL_2;
  inited = initDllLink();
  OUTLINED_FUNCTION_1_47(inited, "cmdout");
  if (v6 == -1)
  {
    v4 = 1;
    goto LABEL_31;
  }
  v7 = showDialogs();
  v9 = (_OWORD *)(v7 ? a1[28] + 136 : a1[27] + 240);
  v4 = 1;
  OUTLINED_FUNCTION_0_51(v7, v8, "Eloquence output", v9);
  if ((_DWORD)v10)
  {
    OUTLINED_FUNCTION_1_47(v10, "pgmout");
    if (v11 != -1)
    {
      v12 = showDialogs();
      v14 = (_OWORD *)(v12 ? a1[28] + 136 : a1[27] + 240);
      OUTLINED_FUNCTION_0_51(v12, v13, "Eloquence program output", v14);
      if (v15)
      {
        v16 = eciLinkNew();
        *(_QWORD *)(a1[28] + 232) = v16;
        if (!v16 || (v16 = eciLinkNew(), (*(_QWORD *)(a1[28] + 240) = v16) == 0))
          exit(v16);
        OUTLINED_FUNCTION_1_47(v16, "wordsin");
        if (v17 != -1)
        {
          OUTLINED_FUNCTION_2_46();
          logicalFileAddPhysical((uint64_t)a1, v18, "ECIinput", v19, v20, 0);
          if ((_DWORD)v21)
          {
            OUTLINED_FUNCTION_1_47(v21, "sprout");
            if (v22 != -1)
            {
              OUTLINED_FUNCTION_2_46();
              OUTLINED_FUNCTION_3_46(v23, v24, "ECIoutput", v25, v26);
              if ((_DWORD)v27)
              {
                OUTLINED_FUNCTION_1_47(v27, "errorout");
                if ((_DWORD)v28 != -1)
                {
                  OUTLINED_FUNCTION_3_46(v28, v28, "ECIoutput", (_OWORD *)(a1[28] + 72), *(_QWORD *)(a1[28] + 240));
                  if (v29)
                  {
                    if (*(_BYTE *)(a1[28] + 248)
                      || (logicalFileOpen((uint64_t)a1, "wordsin", 0), (_DWORD)v30)
                      && (OUTLINED_FUNCTION_4_45(v30, "sprout"), (_DWORD)v31)
                      && (OUTLINED_FUNCTION_4_45(v31, "errorout"), v32))
                    {
LABEL_2:
                      v2 = a1[24];
                      if (*(_QWORD *)(v2 + 9072))
                      {
                        for (i = 0; ; ++i)
                        {
                          v2 = a1[24];
                          if (i == 2)
                            break;
                          *(_BYTE *)(*(_QWORD *)(v2 + 9072) + i) = 1;
                        }
                      }
                      *(_DWORD *)(v2 + 8864) = 0;
                      v4 = 1;
                      if (*(_DWORD *)(v2 + 9080))
                      {
                        *(_DWORD *)(v2 + 8868) = 1;
                        v4 = 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_31:
  *(_BYTE *)(a1[28] + 248) = 1;
  return v4;
}

BOOL showDialogs()
{
  FILE *v0;
  FILE *v1;

  v0 = fopen("debug", "r");
  v1 = v0;
  if (v0)
    fclose(v0);
  return v1 != 0;
}

uint64_t callSetEngsynError(uint64_t a1, uint64_t a2)
{
  return setEngsynError(a1, *(__int16 *)(a2 + 2));
}

uint64_t multitask(uint64_t a1)
{
  checkInterrupt(a1);
  return 0;
}

uint64_t closeIO(uint64_t a1)
{
  uint64_t v1;
  void ***v2;
  void ***v3;

  v1 = *(_QWORD *)(a1 + 224);
  v2 = *(void ****)(v1 + 232);
  if (v2)
    eciLinkDelete(v2);
  v3 = *(void ****)(v1 + 240);
  if (v3)
    eciLinkDelete(v3);
  return 0;
}

void ***eciLinkCleanup(uint64_t a1)
{
  uint64_t v1;
  void ***v2;
  void ***result;

  v1 = *(_QWORD *)(a1 + 224);
  v2 = *(void ****)(v1 + 232);
  if (v2)
    eciLinkDelete(v2);
  result = *(void ****)(v1 + 240);
  if (result)
    eciLinkDelete(result);
  return result;
}

void OUTLINED_FUNCTION_0_51(uint64_t a1, uint64_t a2, const char *a3, _OWORD *a4)
{
  uint64_t v4;
  int v5;

  logicalFileAddPhysical(v4, v5, a3, a4, 0, 1);
}

void OUTLINED_FUNCTION_1_47(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;

  vffind_lf(v2, a2);
}

void OUTLINED_FUNCTION_3_46(uint64_t a1, int a2, const char *a3, _OWORD *a4, uint64_t a5)
{
  uint64_t v5;

  logicalFileAddPhysical(v5, a2, a3, a4, a5, 1);
}

void OUTLINED_FUNCTION_4_45(uint64_t a1, char *a2)
{
  uint64_t v2;

  logicalFileOpen(v2, a2, 1);
}

uint64_t synthesizingWord(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD);

  v2 = *(_QWORD *)(a1 + 224);
  v3 = *(void (**)(_QWORD, _QWORD))(v2 + 8);
  if (v3)
    v3(*(__int16 *)(a2 + 2), *(_QWORD *)(v2 + 16));
  return 0;
}

uint64_t wordIndexCallback(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v3)(_QWORD, _QWORD);

  v2 = *(_QWORD *)(a1 + 224);
  v3 = *(void (**)(_QWORD, _QWORD))(v2 + 24);
  if (v3)
    v3(*(__int16 *)(a2 + 2), *(_QWORD *)(v2 + 32));
  return 0;
}

uint64_t userIndexCallback(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(_QWORD);

  v1 = *(_QWORD *)(a1 + 224);
  v2 = *(void (**)(_QWORD))(v1 + 40);
  if (v2)
    v2(*(_QWORD *)(v1 + 48));
  return 0;
}

uint64_t annoCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);

  v3 = *(_QWORD *)(a1 + 224);
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 56);
  if (v4)
    v4(*(__int16 *)(a2 + 2), *(__int16 *)(a3 + 2), *(_QWORD *)(v3 + 64));
  return 0;
}

uint64_t placePhoneme(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4)
{
  int v5;
  int v6;
  int v7;
  char v10;
  uint64_t i;
  char v13[40];
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  if (**(_BYTE **)(a1 + 224))
  {
    v7 = *a2;
    v5 = (_DWORD)a2 + 16;
    v6 = v7;
    if (v7 < 0)
      return 1;
    if (v6 >= *(unsigned __int8 *)(a1 + 288))
      return 1;
    disptok(a1, v5, v6, 0, v13);
    v10 = strlen(v13);
    if (v10 > 4)
      return 1;
    for (i = v10; i != 4; ++i)
      v13[i] = 0;
    insertPhoneme(a1, *(unsigned int *)v13, *(__int16 *)(a4 + 2) * (uint64_t)*(__int16 *)(a3 + 2) / 0x3E8uLL);
  }
  return 0;
}

void getObject(uint64_t a1, EngineWrapper **a2)
{
  unsigned __int8 v4;
  EngineWrapper *v5;

  v4 = atomic_load((unsigned __int8 *)&_MergedGlobals_36);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&_MergedGlobals_36))
  {
    RequestLicense::RequestLicense((RequestLicense *)&qword_257778020);
    __cxa_guard_release(&_MergedGlobals_36);
  }
  *a2 = 0;
  if ((unint64_t)(a1 - 1) > 1)
  {
    if (a1 == 3)
    {
      v5 = (EngineWrapper *)&qword_257778020;
      goto LABEL_7;
    }
  }
  else if (RequestLicense::licenseGranted((RequestLicense *)&qword_257778020))
  {
    OUTLINED_FUNCTION_10_44();
    v5 = (EngineWrapper *)operator new();
    EngineWrapper::EngineWrapper(v5);
LABEL_7:
    *a2 = v5;
    (*(void (**)(EngineWrapper *))(*(_QWORD *)v5 + 8))(v5);
  }
  OUTLINED_FUNCTION_5_45();
}

void sub_24867D658(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&_MergedGlobals_36);
  _Unwind_Resume(a1);
}

BOOL engsynStart(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = OUTLINED_FUNCTION_9_44(a1);
  v3 = v1[28];
  if (*(_BYTE *)(v3 + 1)
    || (*(_BYTE *)(v3 + 1) = 1, etiwinMainDLL((uint64_t)v1, 0, 0), (int)v2 < 1)
    || (v2 = initializeIO(v1), (_DWORD)v2))
  {
    v4 = -4;
  }
  else
  {
    DeltaProc_start((uint64_t)v1, v6, v7, v8, v9, v10, v11, v12);
    if (!(_DWORD)v2)
      return OUTLINED_FUNCTION_0_52((uint64_t)v1);
    v4 = -3;
  }
  OUTLINED_FUNCTION_3_47(v2, v4);
  return OUTLINED_FUNCTION_0_52((uint64_t)v1);
}

void UnixReg(char *__src, char *a2)
{
  strncpy(libpath, __src, 0x1000uLL);
  if (!a2)
    a2 = getcwd(0, 0x1000uLL);
  reg((uint64_t)a2);
  OUTLINED_FUNCTION_5_45();
}

void *getFullPathName()
{
  return &libpath;
}

BOOL engsynEnd(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_9_44(a1);
  v10 = *(_QWORD *)(v1 + 224);
  if (!*(_BYTE *)(v10 + 2))
  {
    *(_BYTE *)(v10 + 2) = 1;
    DeltaProc_end(v1, v3, v4, v5, v6, v7, v8, v9);
    vcmdend(v1, 0);
  }
  OUTLINED_FUNCTION_3_47(v2, -5);
  return OUTLINED_FUNCTION_0_52(v1);
}

BOOL engsynProcessSentences()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;

  OUTLINED_FUNCTION_6_45();
  if (!v3)
  {
    *(_BYTE *)(v2 + 4) = 1;
    v4 = *(uint64_t **)(v2 + 232);
    if (v4)
    {
      eciLinkDataFromECI(v4, v1);
      if (!v12)
        OUTLINED_FUNCTION_8_44();
      DeltaProc_process_sentences(v0, v5, v6, v7, v8, v9, v10, v11);
      if (!(_DWORD)v4)
      {
        v4 = (uint64_t *)deltaErrorThrown(v0);
        if (!(_DWORD)v4)
          goto LABEL_11;
      }
      v13 = -3;
    }
    else
    {
      v13 = -1;
    }
    OUTLINED_FUNCTION_3_47((uint64_t)v4, v13);
LABEL_11:
    *(_BYTE *)(*(_QWORD *)(v0 + 224) + 4) = 0;
    return OUTLINED_FUNCTION_0_52(v0);
  }
  OUTLINED_FUNCTION_7_44();
  return OUTLINED_FUNCTION_0_52(v0);
}

BOOL engsynProcessRemaining()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  int v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  OUTLINED_FUNCTION_6_45();
  if (!v3)
  {
    *(_BYTE *)(v2 + 4) = 1;
    v4 = *(uint64_t **)(v2 + 232);
    if (v4)
    {
      eciLinkDataFromECI(v4, v1);
      if ((_DWORD)v4)
      {
        DeltaProc_process_remaining(v0, v5, v6, v7, v8, v9, v10, v11);
        if (!(_DWORD)v4)
        {
          v4 = (uint64_t *)deltaErrorThrown(v0);
          if (!(_DWORD)v4)
            goto LABEL_11;
        }
        v12 = -3;
      }
      else
      {
        v12 = -2;
      }
    }
    else
    {
      v12 = -1;
    }
    OUTLINED_FUNCTION_3_47((uint64_t)v4, v12);
LABEL_11:
    *(_BYTE *)(*(_QWORD *)(v0 + 224) + 4) = 0;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_7_44();
LABEL_12:
  flushDelayedSynthQueue();
  return OUTLINED_FUNCTION_0_52(v0);
}

uint64_t engsynGetLastError(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  getEngsynErrorRange(a1, a2, a3);
  return getEngsynError(a1);
}

void engsynRestart(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;

  OUTLINED_FUNCTION_9_44(a1);
  initGlobalVars((int *)v1);
  resetDelayedSynthQueue(v1);
  flushDelayedSynthQueue();
  vdltinit(v1, 1);
  if (v2 && (vinitrun((int *)v1), v3))
  {
    vffind_lf(v1, "wordsin");
    if (v4 != -1)
      vf_clrbuf(v1, v4);
    stopSynthesizing(v1);
    DeltaProc_start(v1, v5, v6, v7, v8, v9, v10, v11);
    if (v12)
      setEngsynError(v1, -3);
    *(_WORD *)(*(_QWORD *)(v1 + 224) + 3) = 0;
    OUTLINED_FUNCTION_0_52(v1);
  }
  else
  {
    OUTLINED_FUNCTION_5_45();
  }
}

BOOL engsynReadPhonemes(uint64_t a1, _BYTE *a2, int a3, int *a4)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 224) + 232);
  if (v5 && !eciLinkDataToECI(v5, a2, a3, a4))
    OUTLINED_FUNCTION_8_44();
  return OUTLINED_FUNCTION_0_52(a1);
}

void engsynReadErrorMessage(uint64_t a1, char *a2, int a3, int *a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 224);
  if (*(_QWORD *)(v4 + 232) && !eciLinkDataToECI(*(_QWORD *)(v4 + 240), a2, a3, a4))
  {
    strncpy(a2, "Unable to get error message from Eloquence.", a3);
    a2[a3] = 0;
  }
  OUTLINED_FUNCTION_5_45();
}

BOOL engsynFlush(uint64_t a1, int a2)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 224) + 3) = a2;
  setInterrupt(a1, a2);
  if (a2)
  {
    throwDeltaErrorNow(a1);
    stopSynthesizing(a1);
  }
  else
  {
    engsynRestart(a1);
  }
  return OUTLINED_FUNCTION_0_52(a1);
}

BOOL engsynClearInput()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_6_45();
  if (v3)
  {
    v4 = -8;
  }
  else
  {
    eciLinkDataFromECI(*(uint64_t **)(v2 + 232), (char *)&unk_2486A531A);
    if ((_DWORD)v1)
    {
      DeltaProc_flush(v0, v6, v7, v8, v9, v10, v11, v12);
      if (!(_DWORD)v1)
        return OUTLINED_FUNCTION_0_52(v0);
      v4 = -3;
    }
    else
    {
      v4 = -2;
    }
  }
  OUTLINED_FUNCTION_3_47(v1, v4);
  return OUTLINED_FUNCTION_0_52(v0);
}

void engsynSetAbort(uint64_t a1)
{
  setEngsynError(a1, -7);
  throwDeltaErrorNow(a1);
  OUTLINED_FUNCTION_5_45();
}

BOOL engsynOutputPlaying(uint64_t a1)
{
  return *(_BYTE *)(*(_QWORD *)(a1 + 224) + 4) || synthDevicePlaying(a1) != 0;
}

BOOL engsynPause(uint64_t a1, unsigned __int8 a2)
{
  int v2;

  v2 = holdSynthDevice(a1, a2);
  return OUTLINED_FUNCTION_2_47(v2);
}

BOOL engsynSetSynthToNamedFile(uint64_t a1, char *a2)
{
  int v2;

  setSynthToNamedFile(a1, a2);
  return OUTLINED_FUNCTION_2_47(v2);
}

BOOL engsynSetSynthToCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  setSynthToCallback(a1, a2, a3);
  return OUTLINED_FUNCTION_2_47(v3);
}

BOOL engsynSetKlattConstHook(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  v3 = setKlattConstantHook(a1, a2, a3);
  return OUTLINED_FUNCTION_2_47(v3);
}

BOOL engsynSetKlattDynamicHook(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;

  v3 = setKlattDynamicHook(a1, a2, a3);
  return OUTLINED_FUNCTION_2_47(v3);
}

uint64_t engsynRegisterWordCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 224);
  *(_QWORD *)(v3 + 8) = a2;
  *(_QWORD *)(v3 + 16) = a3;
  return result;
}

uint64_t engsynRegisterWordIndexCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 224);
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = a3;
  return result;
}

uint64_t engsynRegisterUserIndexCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 224);
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 48) = a3;
  return result;
}

uint64_t engsynRegisterAnnoCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 224);
  *(_QWORD *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 64) = a3;
  return result;
}

BOOL engsynInsertSynthesisIndex(uint64_t a1, uint64_t a2)
{
  int v2;

  insertDelayedSynthIndex(a1, a2);
  return OUTLINED_FUNCTION_2_47(v2);
}

BOOL engsynInsertDelayedSynthesisIndex(uint64_t a1, uint64_t a2)
{
  int v2;

  insertDelayedSynthIndex(a1, a2);
  return OUTLINED_FUNCTION_2_47(v2);
}

uint64_t engsynWantPhonemeIndices(uint64_t result, char a2)
{
  **(_BYTE **)(result + 224) = a2;
  return result;
}

uint64_t engsynClose(uint64_t a1)
{
  if (a1)
  {
    stopSynthesizing(a1);
    eciLinkCleanup(a1);
    deltaCleanup(a1);
  }
  return 0;
}

uint64_t engsynNewDict(uint64_t a1)
{
  uint64_t v2;

  v2 = operator new();
  DictionarySet::DictionarySet(v2, a1);
  return v2;
}

void sub_24867DC70()
{
  OUTLINED_FUNCTION_1_48();
}

void sub_24867DC78()
{
  _Unwind_Exception *v0;

  _Unwind_Resume(v0);
}

void engsynDeleteDict(DictionarySet *this)
{
  if (this)
    DictionarySet::~DictionarySet(this);
  OUTLINED_FUNCTION_1_48();
}

uint64_t sub_24867DCA8()
{
  return 0;
}

void sub_24867DCB8()
{
  OUTLINED_FUNCTION_1_48();
}

void sub_24867DCC0()
{
  _Unwind_Exception *v0;

  _Unwind_Resume(v0);
}

void engsynLoadDict(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 && a4)
    DictionarySet::load();
  else
    OUTLINED_FUNCTION_4_46();
}

void engsynSaveDict(uint64_t a1, int a2, char *a3)
{
  if (a1 && a3)
    DictionarySet::save(a1, a2, a3);
  else
    OUTLINED_FUNCTION_4_46();
}

void engsynUpdateDict(uint64_t a1, int a2, char *a3, char *a4)
{
  if (a1 && a3)
    DictionarySet::updateEntry(a1, a2, a3, a4);
  else
    OUTLINED_FUNCTION_4_46();
}

void engsynDictFindFirst(uint64_t a1, int a2, const char **a3, const char **a4)
{
  if (a1)
    DictionarySet::findFirst(a1, a2, a3, a4);
  else
    OUTLINED_FUNCTION_4_46();
}

void engsynDictFindNext(uint64_t a1, int a2, const char **a3, const char **a4)
{
  if (a1)
    DictionarySet::findNext(a1, a2, a3, a4);
  else
    OUTLINED_FUNCTION_4_46();
}

uint64_t engsynDictLookup(uint64_t a1, int a2, char *a3)
{
  if (a1)
    return DictionarySet::lookup(a1, a2, a3);
  return a1;
}

BOOL OUTLINED_FUNCTION_0_52(uint64_t a1)
{
  return checkEngsynError(a1);
}

void OUTLINED_FUNCTION_1_48()
{
  JUMPOUT(0x249599130);
}

BOOL OUTLINED_FUNCTION_2_47(int a1)
{
  return a1 == 0;
}

uint64_t OUTLINED_FUNCTION_3_47(uint64_t a1, int a2)
{
  uint64_t v2;

  return setEngsynError(v2, a2);
}

uint64_t OUTLINED_FUNCTION_4_46()
{
  return 3;
}

uint64_t OUTLINED_FUNCTION_7_44()
{
  uint64_t v0;

  return setEngsynError(v0, -8);
}

uint64_t OUTLINED_FUNCTION_8_44()
{
  uint64_t v0;

  return setEngsynError(v0, -2);
}

uint64_t OUTLINED_FUNCTION_9_44(uint64_t result)
{
  return resetEngsynError(result);
}

void eciLinkFileOpen(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v3;
  uint64_t *v4;

  *a2 = a1;
  v3 = a2[2];
  if (v3)
  {
    if ((a3 - 1) < 2)
    {
      v4 = (uint64_t *)(v3 + 8);
LABEL_5:
      dynaBufReset(*v4);
      goto LABEL_6;
    }
    v4 = (uint64_t *)a2[2];
    if (!a3)
      goto LABEL_5;
  }
LABEL_6:
  OUTLINED_FUNCTION_2_48();
}

void eciLinkFileRead(uint64_t a1, uint64_t *a2)
{
  uint64_t **v2;
  int v4;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  unint64_t v11;

  v2 = *(uint64_t ***)(a1 + 16);
  if (v2 && OUTLINED_FUNCTION_7_45(*v2))
  {
    while (1)
    {
      v4 = dynaBufCurrentChar(*v2, 1);
      if (!v4 || v4 == 10)
        break;
      OUTLINED_FUNCTION_1_49(a2, v4);
      if (!v6)
        return;
    }
    v7 = dynaBufMoveRel((uint64_t)a2, 0);
    v8 = OUTLINED_FUNCTION_3_48();
    if (OUTLINED_FUNCTION_7_45(a2) == 32)
    {
      if (v7 != v8)
        OUTLINED_FUNCTION_4_47();
    }
    else
    {
      if (v7 != v8)
        OUTLINED_FUNCTION_4_47();
      OUTLINED_FUNCTION_1_49(a2, 32);
    }
    OUTLINED_FUNCTION_1_49(a2, 10);
    if (v9)
    {
      v10 = *v2;
      if (v4)
      {
        v11 = dynaBufMoveRel((uint64_t)v10, 0);
        OUTLINED_FUNCTION_8_45((uint64_t)*v2);
        dynaBufDeleteChars(*v2, v11);
      }
      else
      {
        dynaBufReset((uint64_t)v10);
      }
    }
  }
}

BOOL eciLinkFileWrite(uint64_t a1, char *a2)
{
  uint64_t v2;
  int v3;

  if (!*a2)
    return 1;
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  OUTLINED_FUNCTION_5_46(*(uint64_t **)(v2 + 8), a2);
  return v3 != 0;
}

BOOL eciLinkFileEof(uint64_t a1)
{
  uint64_t **v1;

  v1 = *(uint64_t ***)(a1 + 16);
  return !v1 || OUTLINED_FUNCTION_7_45(*v1) == 0;
}

uint64_t eciLinkFileClose()
{
  return 1;
}

void dialogFileOpen(uint64_t a1, _QWORD *a2)
{
  *a2 = a1;
  a2[2] = OUTLINED_FUNCTION_6_46();
  OUTLINED_FUNCTION_2_48();
}

uint64_t dialogFileRead(uint64_t a1, uint64_t *a2)
{
  if (!*(_QWORD *)(a1 + 16))
    return 0;
  OUTLINED_FUNCTION_1_49(a2, 10);
  return 1;
}

void dialogFileWrite(uint64_t a1, char *a2)
{
  uint64_t *v2;
  int v3;
  int v4;

  v2 = *(uint64_t **)(a1 + 16);
  if (v2)
  {
    OUTLINED_FUNCTION_5_46(*(uint64_t **)(a1 + 16), a2);
    if (v3)
    {
      v4 = dynaBufLength((uint64_t)v2);
      if (dynaBufChar(v2, v4 - 1) == 10)
      {
        dynaBufMoveAbs((uint64_t)v2, 0xFFFFFFFF);
        OUTLINED_FUNCTION_3_48();
        dynaBufDeleteChars(v2, 1uLL);
        dynaBufReset((uint64_t)v2);
      }
    }
  }
  OUTLINED_FUNCTION_2_48();
}

BOOL dialogFileEof(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t dialogFileClose()
{
  return 1;
}

double ecilink_new(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  double result;
  __int128 v7;

  if (a1)
  {
    v1 = *(_QWORD *)(a1 + 224);
    if (v1)
    {
      v2 = unk_257776E10;
      *(_OWORD *)(v1 + 72) = eciLinkFileClass_glob;
      *(_OWORD *)(v1 + 88) = v2;
      v3 = *(_OWORD *)&off_257776E30;
      *(_OWORD *)(v1 + 104) = xmmword_257776E20;
      *(_OWORD *)(v1 + 120) = v3;
      v4 = *(_QWORD *)(a1 + 224);
      v5 = unk_257776E50;
      *(_OWORD *)(v4 + 136) = dialogFileClass_glob;
      *(_OWORD *)(v4 + 152) = v5;
      result = *(double *)&xmmword_257776E60;
      v7 = *(_OWORD *)off_257776E70;
      *(_OWORD *)(v4 + 168) = xmmword_257776E60;
      *(_OWORD *)(v4 + 184) = v7;
    }
  }
  return result;
}

uint64_t eciLinkNew()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v0 = operator new();
  v1 = OUTLINED_FUNCTION_6_46();
  *(_QWORD *)v0 = v1;
  if (!v1)
LABEL_4:
    OUTLINED_FUNCTION_0_53();
  v2 = OUTLINED_FUNCTION_6_46();
  *(_QWORD *)(v0 + 8) = v2;
  if (!v2)
  {
    dynaBufDelete(*(void ***)v0);
    goto LABEL_4;
  }
  return v0;
}

void eciLinkDelete(void ***a1)
{
  dynaBufDelete(*a1);
  dynaBufDelete(a1[1]);
  OUTLINED_FUNCTION_0_53();
}

uint64_t sub_24867E150()
{
  return 0;
}

void eciLinkDataFromECI(uint64_t *a1, char *a2)
{
  int v4;

  if (a1)
  {
    if (a2)
    {
      dynaBufReset(*a1);
      OUTLINED_FUNCTION_5_46((uint64_t *)*a1, a2);
      if (v4)
        OUTLINED_FUNCTION_8_45(*a1);
    }
  }
  OUTLINED_FUNCTION_2_48();
}

uint64_t eciLinkDataToECI(uint64_t result, _BYTE *a2, int a3, int *a4)
{
  uint64_t v4;
  int v8;
  int v9;
  int v10;

  if (result)
  {
    v4 = result;
    result = *(_QWORD *)(result + 8);
    if (result)
    {
      v8 = a3 - 1;
      v9 = dynaBufLength(result);
      if (v9 >= a3)
        v10 = v8;
      else
        v10 = v9;
      *a4 = v10;
      dynaBufExtract(*(_QWORD **)(v4 + 8), 0, (uint64_t)a2, v10);
      OUTLINED_FUNCTION_8_45(*(_QWORD *)(v4 + 8));
      dynaBufDeleteChars(*(uint64_t **)(v4 + 8), *a4);
      if (*a2)
        ++*a4;
      return 1;
    }
  }
  return result;
}

void OUTLINED_FUNCTION_0_53()
{
  JUMPOUT(0x249599130);
}

void OUTLINED_FUNCTION_1_49(uint64_t *a1, char a2)
{
  dynaBufAddChar(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_3_48()
{
  uint64_t v0;

  return dynaBufMoveRel(v0, 0xFFFFFFFF);
}

uint64_t OUTLINED_FUNCTION_4_47()
{
  uint64_t v0;

  return dynaBufMoveRel(v0, 1u);
}

void OUTLINED_FUNCTION_5_46(uint64_t *a1, char *a2)
{
  dynaBufAddString(a1, a2, 0);
}

_QWORD *OUTLINED_FUNCTION_6_46()
{
  return dynaBufNew(0);
}

uint64_t OUTLINED_FUNCTION_7_45(uint64_t *a1)
{
  return dynaBufCurrentChar(a1, 0);
}

uint64_t OUTLINED_FUNCTION_8_45(uint64_t a1)
{
  return dynaBufMoveAbs(a1, 0);
}

void EngineWrapper::EngineWrapper(EngineWrapper *this)
{
  _QWORD *v2;

  *(_QWORD *)this = &off_25198B8D0;
  *((_QWORD *)this + 1) = 0;
  *((_WORD *)this + 12) = 0;
  v2 = delta_new();
  *((_QWORD *)this + 2) = v2;
  if (!v2)
    *((_BYTE *)this + 24) = 1;
  OUTLINED_FUNCTION_4_48();
}

void EngineWrapper::~EngineWrapper(EngineWrapper *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_25198B8D0;
  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    delta_delete(v2);
    *((_QWORD *)this + 2) = 0;
  }
  OUTLINED_FUNCTION_4_48();
}

void EngineWrapper::queryInterface(EngineWrapper *this, uint64_t a2, void **a3)
{
  *a3 = 0;
  if ((unint64_t)(a2 - 1) <= 1)
  {
    *a3 = this;
    (*(void (**)(EngineWrapper *))(*(_QWORD *)this + 8))(this);
  }
  OUTLINED_FUNCTION_1_50();
}

uint64_t EngineWrapper::addRef(EngineWrapper *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 1) + 1;
  *((_QWORD *)this + 1) = v1;
  return v1;
}

void EngineWrapper::release(EngineWrapper *this)
{
  uint64_t v1;

  v1 = *((_QWORD *)this + 1);
  *((_QWORD *)this + 1) = v1 - 1;
  if (v1 == 1)
  {
    EngineWrapper::~EngineWrapper(this);
    OUTLINED_FUNCTION_3_49();
  }
  OUTLINED_FUNCTION_4_48();
}

void sub_24867E3B4()
{
  OUTLINED_FUNCTION_3_49();
}

void sub_24867E3BC()
{
  _Unwind_Exception *v0;

  _Unwind_Resume(v0);
}

void EngineWrapper::start(EngineWrapper *this)
{
  uint64_t v1;
  int v2;
  _BOOL8 v3;

  OUTLINED_FUNCTION_2_49();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    v3 = engsynStart(*(_QWORD *)(v1 + 16));
    if (v3)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v3);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::end(EngineWrapper *this)
{
  uint64_t v1;
  int v2;
  _BOOL8 v3;

  OUTLINED_FUNCTION_2_49();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    v3 = engsynEnd(*(_QWORD *)(v1 + 16));
    if (v3)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v3);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::processSentences(EngineWrapper *this, const char *a2)
{
  uint64_t v2;
  int v3;
  _BOOL8 v4;

  OUTLINED_FUNCTION_2_49();
  if (v3)
  {
    v4 = 1;
  }
  else
  {
    v4 = engsynProcessSentences();
    if (v4)
      *(_BYTE *)(v2 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v4);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::processRemaining(EngineWrapper *this, const char *a2)
{
  uint64_t v2;
  int v3;
  _BOOL8 v4;

  OUTLINED_FUNCTION_2_49();
  if (v3)
  {
    v4 = 1;
  }
  else
  {
    v4 = engsynProcessRemaining();
    if (v4)
      *(_BYTE *)(v2 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v4);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::getLastError(EngineWrapper *this, int *a2, int *a3)
{
  uint64_t v3;
  _DWORD *v4;
  _DWORD *v5;
  int v6;
  uint64_t LastError;

  OUTLINED_FUNCTION_2_49();
  if (v6)
  {
    LastError = 1;
  }
  else
  {
    LastError = engsynGetLastError(*(_QWORD *)(v3 + 16), v4, v5);
    if ((_DWORD)LastError == 1)
      *(_BYTE *)(v3 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(LastError);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::restart(EngineWrapper *this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_49();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    engsynRestart(*(_QWORD *)(v1 + 16));
    if ((_DWORD)v3 == 1)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v3);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::readPhonemes(EngineWrapper *this, char *a2, int a3, int *a4)
{
  uint64_t v4;
  _BYTE *v5;
  int v6;
  int *v7;
  int v8;
  _BOOL8 Phonemes;

  OUTLINED_FUNCTION_2_49();
  if (v8)
  {
    Phonemes = 1;
  }
  else
  {
    Phonemes = engsynReadPhonemes(*(_QWORD *)(v4 + 16), v5, v6, v7);
    if (Phonemes)
      *(_BYTE *)(v4 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(Phonemes);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::readErrorMessage(EngineWrapper *this, char *a2, int a3, int *a4)
{
  uint64_t v4;
  char *v5;
  int v6;
  int *v7;
  int v8;
  uint64_t v9;

  OUTLINED_FUNCTION_2_49();
  if (v8)
  {
    v9 = 1;
  }
  else
  {
    engsynReadErrorMessage(*(_QWORD *)(v4 + 16), v5, v6, v7);
    if ((_DWORD)v9 == 1)
      *(_BYTE *)(v4 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v9);
  OUTLINED_FUNCTION_1_50();
}

BOOL EngineWrapper::flush(EngineWrapper *this, int a2)
{
  *((_BYTE *)this + 24) = 0;
  *((_BYTE *)this + 25) = a2 != 0;
  return engsynFlush(*((_QWORD *)this + 2), a2);
}

void EngineWrapper::clearInput(EngineWrapper *this)
{
  uint64_t v1;
  int v2;
  _BOOL8 v3;

  OUTLINED_FUNCTION_2_49();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    v3 = engsynClearInput();
    if (v3)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v3);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::setAbort(EngineWrapper *this)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_49();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    engsynSetAbort(*(_QWORD *)(v1 + 16));
    if ((_DWORD)v3 == 1)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v3);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::outputPlaying(EngineWrapper *this)
{
  uint64_t v1;
  int v2;
  _BOOL8 v3;

  OUTLINED_FUNCTION_2_49();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    v3 = engsynOutputPlaying(*(_QWORD *)(v1 + 16));
    if (v3)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v3);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::pause(EngineWrapper *this)
{
  uint64_t v1;
  unsigned __int8 v2;
  int v3;
  _BOOL8 v4;

  OUTLINED_FUNCTION_2_49();
  if (v3)
  {
    v4 = 1;
  }
  else
  {
    v4 = engsynPause(*(_QWORD *)(v1 + 16), v2);
    if (v4)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v4);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::setSynthToNamedFile(EngineWrapper *this, const char *a2)
{
  uint64_t v2;
  char *v3;
  int v4;
  _BOOL8 v5;

  OUTLINED_FUNCTION_2_49();
  if (v4)
  {
    v5 = 1;
  }
  else
  {
    v5 = engsynSetSynthToNamedFile(*(_QWORD *)(v2 + 16), v3);
    if (v5)
      *(_BYTE *)(v2 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v5);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::setKlattDynamicHook(EngineWrapper *this, void (*a2)(float *, void *), uint64_t a3)
{
  if (!*((_BYTE *)this + 24) && engsynSetKlattDynamicHook(*((_QWORD *)this + 2), (uint64_t)a2, a3))
    *((_BYTE *)this + 24) = 1;
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::setKlattConstHook(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(_BYTE *)(a1 + 24) && engsynSetKlattConstHook(*(_QWORD *)(a1 + 16), a2, a3))
    *(_BYTE *)(a1 + 24) = 1;
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::setSynthToCallback(EngineWrapper *this, void (*a2)(int, uint64_t *, void *), void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _BOOL8 v7;

  OUTLINED_FUNCTION_2_49();
  if (v6)
  {
    v7 = 1;
  }
  else
  {
    v7 = engsynSetSynthToCallback(*(_QWORD *)(v3 + 16), v4, v5);
    if (v7)
      *(_BYTE *)(v3 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(v7);
  OUTLINED_FUNCTION_1_50();
}

uint64_t EngineWrapper::setDurationCallback(uint64_t this, void (*a2)(uint64_t, uint64_t, void *), void *a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynSetDurationCallback(*(_QWORD *)(this + 16), a2, a3);
  return this;
}

uint64_t EngineWrapper::registerWordCallback(uint64_t this, void (*a2)(int, void *), uint64_t a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynRegisterWordCallback(*(_QWORD *)(this + 16), (uint64_t)a2, a3);
  return this;
}

uint64_t EngineWrapper::registerWordIndexCallback(uint64_t this, void (*a2)(int, void *), uint64_t a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynRegisterWordIndexCallback(*(_QWORD *)(this + 16), (uint64_t)a2, a3);
  return this;
}

uint64_t EngineWrapper::registerUserIndexCallback(uint64_t this, void (*a2)(void *), uint64_t a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynRegisterUserIndexCallback(*(_QWORD *)(this + 16), (uint64_t)a2, a3);
  return this;
}

uint64_t EngineWrapper::registerIndexCallback(uint64_t this, void (*a2)(int, void *), void *a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynRegisterIndexCallback(*(_QWORD *)(this + 16), a2, a3);
  return this;
}

uint64_t EngineWrapper::registerPhonemeCallback(uint64_t this, void (*a2)(int, unsigned int, void *), void *a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynRegisterPhonemeCallback(*(_QWORD *)(this + 16), a2, a3);
  return this;
}

uint64_t EngineWrapper::registerAnnoCallback(uint64_t this, void (*a2)(uint64_t, uint64_t, void *), uint64_t a3)
{
  if (!*(_BYTE *)(this + 24))
    return engsynRegisterAnnoCallback(*(_QWORD *)(this + 16), (uint64_t)a2, a3);
  return this;
}

void EngineWrapper::insertSynthesisIndex(EngineWrapper *this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL8 inserted;

  OUTLINED_FUNCTION_2_49();
  if (v3)
  {
    inserted = 1;
  }
  else
  {
    inserted = engsynInsertSynthesisIndex(*(_QWORD *)(v1 + 16), v2);
    if (inserted)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(inserted);
  OUTLINED_FUNCTION_1_50();
}

void EngineWrapper::insertDelayedSynthesisIndex(EngineWrapper *this)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BOOL8 inserted;

  OUTLINED_FUNCTION_2_49();
  if (v3)
  {
    inserted = 1;
  }
  else
  {
    inserted = engsynInsertDelayedSynthesisIndex(*(_QWORD *)(v1 + 16), v2);
    if (inserted)
      *(_BYTE *)(v1 + 24) = 1;
  }
  OUTLINED_FUNCTION_0_54(inserted);
  OUTLINED_FUNCTION_1_50();
}

uint64_t EngineWrapper::wantPhonemeIndices(uint64_t this, char a2)
{
  if (!*(_BYTE *)(this + 24))
    return engsynWantPhonemeIndices(*(_QWORD *)(this + 16), a2);
  return this;
}

void EngineWrapper::close(EngineWrapper *this)
{
  if (engsynClose(*((_QWORD *)this + 2)))
    *((_BYTE *)this + 24) = 1;
  OUTLINED_FUNCTION_1_50();
}

uint64_t EngineWrapper::newDict(EngineWrapper *this)
{
  return engsynNewDict(*((_QWORD *)this + 2));
}

uint64_t EngineWrapper::getDict(EngineWrapper *this)
{
  return engsynGetDict(*((_QWORD *)this + 2));
}

uint64_t EngineWrapper::setDict(EngineWrapper *this, void *a2)
{
  return engsynSetDict(*((_QWORD *)this + 2), a2);
}

void EngineWrapper::deleteDict(EngineWrapper *this, DictionarySet *a2)
{
  engsynDeleteDict(a2);
}

void EngineWrapper::loadDict(EngineWrapper *this, uint64_t a2, uint64_t a3, const char *a4)
{
  engsynLoadDict(*((_QWORD *)this + 2), a2, a3, (uint64_t)a4);
}

void EngineWrapper::saveDict(EngineWrapper *this, uint64_t a2, int a3, char *a4)
{
  engsynSaveDict(a2, a3, a4);
}

void EngineWrapper::updateDict(EngineWrapper *this, uint64_t a2, int a3, char *a4, char *a5)
{
  engsynUpdateDict(a2, a3, a4, a5);
}

void EngineWrapper::dictFindFirst(EngineWrapper *this, uint64_t a2, int a3, const char **a4, const char **a5)
{
  engsynDictFindFirst(a2, a3, a4, a5);
}

void EngineWrapper::dictFindNext(EngineWrapper *this, uint64_t a2, int a3, const char **a4, const char **a5)
{
  engsynDictFindNext(a2, a3, a4, a5);
}

uint64_t EngineWrapper::dictLookup(EngineWrapper *this, uint64_t a2, int a3, char *a4)
{
  return engsynDictLookup(a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_0_54(uint64_t result)
{
  uint64_t v1;

  if (*(_BYTE *)(v1 + 25))
    return 0;
  else
    return result;
}

void OUTLINED_FUNCTION_3_49()
{
  JUMPOUT(0x249599130);
}

uint64_t LanguageID::getPackedInt(LanguageID *this)
{
  return ((uint64_t)*((char *)this + 1) << 8) | ((uint64_t)*(char *)this << 16) | *((char *)this + 2);
}

void LanguageID::getLanguageString(LanguageID *this)
{
  OUTLINED_FUNCTION_4_49((uint64_t)this, "%d");
  OUTLINED_FUNCTION_1_51();
}

void LanguageID::getDialectString(LanguageID *this)
{
  OUTLINED_FUNCTION_4_49((uint64_t)this, "%d");
  OUTLINED_FUNCTION_1_51();
}

void LanguageID::getLanguageDialectString(LanguageID *this)
{
  OUTLINED_FUNCTION_4_49((uint64_t)this, "%d.%d");
  OUTLINED_FUNCTION_1_51();
}

_BYTE *OUTLINED_FUNCTION_0_55(_BYTE *result, int a2)
{
  *result = BYTE2(a2);
  result[1] = BYTE1(a2);
  result[2] = a2;
  return result;
}

_BYTE *OUTLINED_FUNCTION_2_50(_BYTE *result, char a2, char a3)
{
  *result = a2;
  result[1] = 0;
  result[2] = a3;
  return result;
}

_BYTE *OUTLINED_FUNCTION_3_50(_BYTE *result, char a2, char a3, char a4)
{
  *result = a2;
  result[1] = a3;
  result[2] = a4;
  return result;
}

uint64_t OUTLINED_FUNCTION_4_49(uint64_t a1, const char *a2)
{
  char *v2;

  return sprintf(v2, a2);
}

void reg(uint64_t a1)
{
  _QWORD *v2;
  int v3;

  v2 = delta_new();
  engsynStart((uint64_t)v2);
  ensureInputStream((uint64_t)v2);
  if (v3)
  {
    qword_257778038 = a1;
    DeltaProc_registerLanguages((uint64_t)v2);
  }
  OUTLINED_FUNCTION_4_50();
  OUTLINED_FUNCTION_0_56();
}

void ensureInputStream(uint64_t a1)
{
  int i;
  char *v3;

  if (*(unsigned __int8 *)(*(_QWORD *)(a1 + 224) + 221) == 255)
  {
    for (i = 0; i < (int)num_streams(a1); ++i)
    {
      v3 = stream_name((char)i);
      if (!strcmp(v3, "inp"))
        break;
    }
    if (num_streams(a1) != i)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 224) + 221) = i;
      single_letter_stream((char)i);
    }
  }
  OUTLINED_FUNCTION_0_56();
}

BOOL unreg()
{
  const char *v0;
  _QWORD *v1;
  int v2;
  const char *v3;
  int v4;
  const char *v6[517];
  _BYTE v7[23];
  uint64_t v8;

  v0 = (const char *)MEMORY[0x24BDAC7A8]();
  v8 = *MEMORY[0x24BDAC8D0];
  globalJustGetLanguage = 1;
  v1 = delta_new();
  engsynStart((uint64_t)v1);
  ensureInputStream((uint64_t)v1);
  if (v2)
  {
    DeltaProc_registerLanguages((uint64_t)v1);
    LanguageID::LanguageID((LanguageID *)v7, *(_QWORD *)(v1[28] + 224));
    IniFileWriter::IniFileWriter((IniFileWriter *)v6, v0);
    OUTLINED_FUNCTION_2_51();
    IniFileWriter::deleteSection(v6, v3);
    if (!v4)
      _MergedGlobals_37 = 1;
    IniFileWriter::~IniFileWriter((IniFileWriter *)v6);
    OUTLINED_FUNCTION_4_50();
    return (_MergedGlobals_37 & 1) == 0;
  }
  else
  {
    OUTLINED_FUNCTION_4_50();
    return 1;
  }
}

void sub_24867ECE0(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  IniFileWriter::~IniFileWriter((IniFileWriter *)va);
  OUTLINED_FUNCTION_5_47();
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void registerPhoneme(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[4141];
  char v52[20];
  char v53[23];
  char v54[96];
  int v55;
  uint64_t v56;

  MEMORY[0x24BDAC7A8]();
  v56 = *MEMORY[0x24BDAC8D0];
  if (!globalJustGetLanguage && (_MergedGlobals_37 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_44();
    v55 = 0;
    v22[4] = 0u;
    v22[5] = 0u;
    v22[2] = 0u;
    v22[3] = 0u;
    *v22 = 0u;
    v22[1] = 0u;
    if (sprintf(v54, "%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d", *(__int16 *)(v23 + 2), *(__int16 *)(v24 + 2), *(__int16 *)(v25 + 2), *(__int16 *)(v26 + 2), *(__int16 *)(a9 + 2), *(__int16 *)(a10 + 2), *(__int16 *)(a11 + 2), *(__int16 *)(a12 + 2), *(__int16 *)(a13 + 2), *(__int16 *)(a14 + 2), *(__int16 *)(a15 + 2), *(__int16 *)(a16 + 2), *(__int16 *)(a17 + 2), *(__int16 *)(a18 + 2), *(__int16 *)(a19 + 2)) == -1)
    {
      OUTLINED_FUNCTION_10_45();
    }
    else
    {
      LanguageID::LanguageID((LanguageID *)v53, *(_BYTE *)(v21 + 2), *(_BYTE *)(v20 + 2));
      IniFileWriter::IniFileWriter((IniFileWriter *)v51, (const char *)qword_257778038);
      if (sprintf(v52, "Phoneme%d", *(__int16 *)(v19 + 2)) == -1
        || (LanguageID::getLanguageDialectString((LanguageID *)v53),
            v28 = OUTLINED_FUNCTION_6_47((IniFileWriter *)v51, v27),
            !(_DWORD)v28))
      {
        OUTLINED_FUNCTION_10_45();
        OUTLINED_FUNCTION_8_46(v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50);
      }
      else
      {
        OUTLINED_FUNCTION_8_46(v28, v29, v30, v31, v32, v33, v34, v35, v44, v45, v46, v47, v48, v49, v50);
      }
    }
  }
  OUTLINED_FUNCTION_1_52();
}

#error "24867EEBC: call analysis failed (funcsize=4)"

void registerLanguage()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  LanguageID *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  const char *FullPathName;
  const char *v17;
  const char *v18;
  char v19[4143];
  char v20[10];
  _BYTE v21[23];
  uint64_t v22;

  v0 = MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v5 = v0;
  v22 = *MEMORY[0x24BDAC8D0];
  v8 = LanguageID::LanguageID((LanguageID *)v21, *(_BYTE *)(v6 + 2), *(_BYTE *)(v7 + 2));
  *(_QWORD *)(*(_QWORD *)(v5 + 224) + 224) = LanguageID::getPackedInt(v8);
  v9 = v21[0] - 6;
  if (v9 > 4)
    v10 = 63;
  else
    v10 = dword_2486A3A94[v9];
  sprintf(byte_257778040, "%#x", v10);
  if (!globalJustGetLanguage && (_MergedGlobals_37 & 1) == 0)
  {
    IniFileWriter::IniFileWriter((IniFileWriter *)v19, (const char *)qword_257778038);
    v11 = sprintf(v20, "%d.%d", *(__int16 *)(v4 + 2), *(__int16 *)(v2 + 2));
    if ((_DWORD)v11 == -1)
      goto LABEL_12;
    OUTLINED_FUNCTION_2_51();
    v15 = v14;
    FullPathName = (const char *)getFullPathName();
    v11 = IniFileWriter::writeString((IniFileWriter *)v19, v15, "Path", FullPathName);
    if (!(_DWORD)v11)
      goto LABEL_12;
    OUTLINED_FUNCTION_2_51();
    v11 = IniFileWriter::writeString((IniFileWriter *)v19, v17, "Version", v20);
    if ((_DWORD)v11
      && (OUTLINED_FUNCTION_2_51(),
          v11 = IniFileWriter::writeString((IniFileWriter *)v19, v18, "CallbackFlag", byte_257778040),
          (_DWORD)v11))
    {
      OUTLINED_FUNCTION_9_45(v11, v12, v13);
    }
    else
    {
LABEL_12:
      _MergedGlobals_37 = 1;
      OUTLINED_FUNCTION_9_45(v11, v12, v13);
    }
  }
  OUTLINED_FUNCTION_0_56();
}

void sub_24867F07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_9_45(a1, a2, a3);
  OUTLINED_FUNCTION_5_47();
}

void registerVoice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38[4141];
  char v39[20];
  char v40[23];
  char v41[96];
  int v42;
  uint64_t v43;

  MEMORY[0x24BDAC7A8]();
  v43 = *MEMORY[0x24BDAC8D0];
  if (!globalJustGetLanguage && (_MergedGlobals_37 & 1) == 0)
  {
    OUTLINED_FUNCTION_11_44();
    v42 = 0;
    v17[4] = 0u;
    v17[5] = 0u;
    v17[2] = 0u;
    v17[3] = 0u;
    *v17 = 0u;
    v17[1] = 0u;
    if (sprintf(v41, "%d %d %d %d %d %d %d %d", *(__int16 *)(v18 + 2), *(__int16 *)(v19 + 2), *(__int16 *)(a9 + 2), *(__int16 *)(a10 + 2), *(__int16 *)(a11 + 2), *(__int16 *)(a12 + 2), *(__int16 *)(a13 + 2), *(__int16 *)(a14 + 2)) == -1)
    {
      OUTLINED_FUNCTION_10_45();
    }
    else
    {
      LanguageID::LanguageID((LanguageID *)v40, *(_BYTE *)(v16 + 2), *(_BYTE *)(v15 + 2));
      IniFileWriter::IniFileWriter((IniFileWriter *)v38, (const char *)qword_257778038);
      if (sprintf(v39, "Voice%d", *(__int16 *)(v14 + 2)) == -1
        || (LanguageID::getLanguageDialectString((LanguageID *)v40),
            v21 = OUTLINED_FUNCTION_6_47((IniFileWriter *)v38, v20),
            !(_DWORD)v21))
      {
        OUTLINED_FUNCTION_10_45();
        OUTLINED_FUNCTION_7_46(v29, v30, v31, v32, v33, v34, v35, v36, v37);
      }
      else
      {
        OUTLINED_FUNCTION_7_46(v21, v22, v23, v24, v25, v26, v27, v28, v37);
      }
    }
  }
  OUTLINED_FUNCTION_1_52();
}

#error "24867F20C: call analysis failed (funcsize=4)"

uint64_t registerSAPIVoice()
{
  return 0;
}

uint64_t extractInputStreamString(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, int a5)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  char *i;
  int v12;
  uint64_t v13;

  v8 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a3 + 8);
  result = sync_in_stm();
  if (!(_DWORD)result)
    return result;
  result = sync_in_stm();
  if (!(_DWORD)result)
    return result;
  result = (uint64_t)extract_string(a1, *(char *)(*(_QWORD *)(a1 + 224) + 221), v8, v9, a4, a5);
  if (!result)
    return result;
  if (strlen(a4) < 3)
    return 1;
  for (i = a4; ; ++i)
  {
    v12 = *a4;
    if (v12 != 39)
      break;
    if (a4[1] == 32 && a4[2] == 39)
    {
      LOBYTE(v12) = 32;
      v13 = 3;
      goto LABEL_13;
    }
LABEL_12:
    v13 = 1;
LABEL_13:
    *i = v12;
    a4 += v13;
  }
  if (*a4)
    goto LABEL_12;
  *i = 0;
  return 1;
}

void OUTLINED_FUNCTION_2_51()
{
  uint64_t v0;

  LanguageID::getLanguageDialectString((LanguageID *)(v0 - 63));
}

void OUTLINED_FUNCTION_3_51()
{
  void *v0;

  __clang_call_terminate(v0);
}

void OUTLINED_FUNCTION_4_50()
{
  uint64_t v0;

  delta_delete(v0);
}

void OUTLINED_FUNCTION_5_47()
{
  _Unwind_Exception *v0;

  _Unwind_Resume(v0);
}

uint64_t OUTLINED_FUNCTION_6_47(IniFileWriter *a1, const char *a2)
{
  uint64_t v2;

  return IniFileWriter::writeString(a1, a2, (char *)(v2 - 203), (const char *)(v2 - 160));
}

void OUTLINED_FUNCTION_7_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  IniFileWriter::~IniFileWriter((IniFileWriter *)va);
}

void OUTLINED_FUNCTION_8_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  IniFileWriter::~IniFileWriter((IniFileWriter *)va);
}

void OUTLINED_FUNCTION_9_45(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  IniFileWriter::~IniFileWriter((IniFileWriter *)va);
}

void OUTLINED_FUNCTION_10_45()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 48) = 1;
}

uint64_t sendArrayParameters(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  int v19;
  unsigned int Offset;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  int v25;
  void *v26;
  BOOL v27;
  uint64_t v28;
  uint64_t j;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  __int16 v38;
  unsigned int *v39;
  int *v40;
  uint64_t v41;
  __int16 v42;
  unsigned int *v43;
  int *v44;
  int Val;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  BOOL v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  float v55[62];
  uint64_t v56;

  v13 = a3;
  v14 = a2;
  v56 = *MEMORY[0x24BDAC8D0];
  v16 = *(_QWORD *)(a1 + 208);
  if (!a2)
    *(_DWORD *)(v16 + 140) = 0;
  v17 = 0;
  *(_DWORD *)(v16 + 144) = a3;
  while (v17 != 62)
  {
    v55[v17] = *(float *)(a10 + v17 * 4);
    ++v17;
  }
  v55[0] = (float)a8;
  if (a4)
  {
    if (a5)
    {
      if (!a6)
      {
LABEL_11:
        for (i = 4; i != 252; i += 4)
        {
          v19 = *(_DWORD *)(a9 + i);
          if (v19 != -1)
          {
            Offset = arrayStreamLastOffset(a1, v19);
            if (v13 >= Offset)
              v13 = Offset;
          }
        }
        if (v13 <= v14)
          v21 = v14;
        else
          v21 = v13;
        v13 = v14 + (v21 - v14) / a8 * a8;
        v16 = *(_QWORD *)(a1 + 208);
      }
    }
    else
    {
      v14 = *(_QWORD *)(v16 + 8);
      if (!a6)
        goto LABEL_11;
    }
    *(_QWORD *)(v16 + 8) = v13;
  }
  *(_DWORD *)(v16 + 136) = v13;
  v22 = *(_QWORD **)v16;
  if (!*(_QWORD *)v16)
  {
    v23 = malloc_type_malloc(0x18uLL, 0x102004024DAA5DEuLL);
    if (v23)
    {
      v24 = v23;
      v25 = streamArrayCount(a1);
      v26 = malloc_type_calloc(v25, 0x30uLL, 0x1000040732E9A81uLL);
      *v24 = v26;
      if (v26)
      {
        OUTLINED_FUNCTION_1_53(a1, v24);
        **(_QWORD **)(a1 + 208) = v24;
        goto LABEL_30;
      }
      free(v24);
    }
    result = 0;
    **(_QWORD **)(a1 + 208) = 0;
    return result;
  }
  if (!a4 || a5)
    OUTLINED_FUNCTION_1_53(a1, v22);
  else
    v22[2] = v13;
LABEL_30:
  v27 = 0;
  v53 = a8;
  v54 = v13;
  while (!v27)
  {
    if (checkInterrupt(a1))
      return 1;
    v28 = **(_QWORD **)(a1 + 208);
    if (*(_QWORD *)(v28 + 8) > v14 || *(_QWORD *)(v28 + 16) <= v14)
      return 1;
    for (j = 0; j != 62; ++j)
    {
      v30 = *(_DWORD *)(a9 + 4 * j + 4);
      if (v30 != -1)
      {
        v31 = **(uint64_t ***)(a1 + 208);
        v32 = *v31;
        v33 = *v31 + 48 * v30;
        v34 = (_DWORD *)(v33 + 24);
        v36 = (uint64_t *)(v33 + 16);
        v35 = *(_QWORD *)(v33 + 16);
        while (v35 < v14)
        {
          if (v35 == -1)
          {
            v41 = OUTLINED_FUNCTION_0_57();
            Val = arrayStreamFirstVal(v41, v42, v43, v44);
            *(_QWORD *)v33 = 0;
            *(_DWORD *)(v33 + 8) = 0;
            if (Val)
            {
              v35 = 0;
              *v36 = 0;
            }
            else
            {
              v35 = v31[2];
              *v36 = v35;
            }
            *v34 = 0;
          }
          else
          {
            *(_QWORD *)v33 = v35;
            *(_DWORD *)(v33 + 8) = *v34;
            v37 = OUTLINED_FUNCTION_0_57();
            if (arrayStreamNextVal(v37, v38, v39, v40))
            {
              v35 = 0;
              *v36 = 0;
              *v34 = 0;
            }
            else
            {
              v35 = v31[2];
              *v36 = v35;
            }
          }
        }
        v46 = *(_QWORD *)v33;
        v47 = v35 - *(_QWORD *)v33;
        v48 = v32 + 48 * v30;
        *(_QWORD *)(v48 + 32) = v47;
        v49 = *(_DWORD *)(v33 + 8);
        v50 = *v34 - v49;
        v51 = *v34 == v49;
        *(_DWORD *)(v48 + 40) = v50;
        v51 = v51 || v35 == v46;
        if (!v51)
          v49 = (int)(float)((float)((float)((float)(v14 - v46) * (float)v50) / (float)v47) + (float)v49);
        v55[j] = (float)v49;
      }
    }
    v14 += v53;
    if (v14 > v54)
      v55[0] = (float)(v14 - v54);
    (*(void (**)(float *, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 32))(v55, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 40));
    v27 = !KlattSynth(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 64), (uint64_t)v55);
  }
  return 0;
}

uint64_t valueSetReset(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t i;
  uint64_t result;

  v6 = 0;
  a2[1] = a3;
  a2[2] = a4;
  for (i = 16; ; i += 48)
  {
    result = streamArrayCount(a1);
    if (v6 >= (int)result)
      break;
    *(_QWORD *)(*a2 + i) = -1;
    ++v6;
  }
  return result;
}

void dlangCleanup(uint64_t a1)
{
  void **v1;

  v1 = **(void ****)(a1 + 208);
  if (v1)
  {
    free(*v1);
    free(v1);
  }
}

uint64_t OUTLINED_FUNCTION_0_57()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_1_53(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  return valueSetReset(a1, a2, v2, v3);
}

__int16 *getDeltaCcodeParm(__int16 *result, _WORD *a2, int a3)
{
  int v3;
  int v4;
  double v5;
  uint64_t v6;

  v3 = *result;
  if (v3 != -5)
  {
    if (v3 == -3)
    {
      if (a3 != -5)
      {
        if (a3 != -3)
        {
          if (a3 == -4)
            *a2 = *((_QWORD *)result + 1);
          return result;
        }
        v6 = *((_QWORD *)result + 1);
        goto LABEL_25;
      }
      v5 = (double)*((uint64_t *)result + 1);
    }
    else
    {
      if (v3 != -4)
        return result;
      if (a3 != -5)
      {
        if (a3 != -3)
        {
          if (a3 == -4)
          {
            LOWORD(v4) = result[1];
LABEL_12:
            *a2 = v4;
            return result;
          }
          return result;
        }
        v6 = result[1];
LABEL_25:
        *(_QWORD *)a2 = v6;
        return result;
      }
      v5 = (double)result[1];
    }
LABEL_22:
    *(double *)a2 = v5;
    return result;
  }
  switch(a3)
  {
    case -5:
      v5 = *((double *)result + 1);
      goto LABEL_22;
    case -3:
      v6 = (uint64_t)*((double *)result + 1);
      goto LABEL_25;
    case -4:
      v4 = (int)*((double *)result + 1);
      goto LABEL_12;
  }
  return result;
}

uint64_t setDeltaReturnCode(uint64_t result, char a2)
{
  *(_BYTE *)(*(_QWORD *)(result + 192) + 8024) = a2;
  return result;
}

double *setDeltaCcodeReturnValue(double *result, int a2, double *a3)
{
  int v3;
  int v4;
  double v5;
  double v6;

  v3 = *(__int16 *)a3;
  switch(v3)
  {
    case -5:
      switch(a2)
      {
        case -5:
          v5 = *result;
          break;
        case -3:
          v5 = (double)*(uint64_t *)result;
          break;
        case -4:
          v5 = (double)*(__int16 *)result;
          break;
        default:
          return result;
      }
      a3[1] = v5;
      break;
    case -3:
      switch(a2)
      {
        case -5:
          *(_QWORD *)&v6 = (uint64_t)*result;
          break;
        case -3:
          v6 = *result;
          break;
        case -4:
          *(_QWORD *)&v6 = *(__int16 *)result;
          break;
        default:
          return result;
      }
      a3[1] = v6;
      return result;
    case -4:
      switch(a2)
      {
        case -5:
          v4 = (int)*result;
          goto LABEL_17;
        case -3:
          *((_WORD *)a3 + 1) = *(_QWORD *)result;
          break;
        case -4:
          LOWORD(v4) = *(_WORD *)result;
LABEL_17:
          *((_WORD *)a3 + 1) = v4;
          break;
      }
      break;
  }
  return result;
}

uint64_t setdlookup(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  char __s1[255];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  if (*((__int16 *)vstmtbl[12 * *(unsigned __int8 *)(a4 + 16) + 1] + 15) != -1)
    return 0;
  result = extract(a1, a2, a3, a5, __s1, *(unsigned __int8 *)(a4 + 48));
  if ((_DWORD)result)
  {
    v7 = 0;
    v8 = *(_QWORD *)(a4 + 8);
    v9 = *(_QWORD *)(a4 + 32) * *(unsigned __int8 *)(a4 + 48) - 1;
    v10 = -1;
    while (v9 >= v7)
    {
      v11 = v9;
      v12 = (v9 + v7) >> 1;
      if (v12 >= -1)
        v9 = -1;
      else
        v9 = (v9 + v7) >> 1;
      if ((v12 & 0x8000000000000000) == 0)
      {
        while (*(_BYTE *)(v8 + v12))
        {
          if (--v12 < 0)
            goto LABEL_15;
        }
        v9 = v12;
      }
LABEL_15:
      v13 = v9 + 1;
      if (v9 + 1 == v10)
        break;
      v14 = strcmp(__s1, (const char *)(v8 + v13));
      if (!v14)
        return 1;
      v10 = v9 + 1;
      if ((v14 & 0x80000000) == 0)
      {
        v7 = v9 + 1;
        while (*(unsigned __int8 *)(v8 + v7++))
          ;
        v9 = v11;
        v10 = v13;
      }
    }
    return 0;
  }
  return result;
}

uint64_t extract(uint64_t a1, unint64_t a2, uint64_t a3, unsigned int a4, _BYTE *a5, unsigned int a6)
{
  unsigned int v6;
  unint64_t v11;
  unsigned int v13;
  uint64_t (*v14)(unint64_t);
  unsigned int v15;
  size_t v16;
  BOOL v17;
  const void *v19;

  v6 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a4;
  if ((*(_QWORD *)(a2 + 8 * (int)v6) & 1) == 0 || (*(_QWORD *)(a3 + 8 * (int)v6) & 1) == 0)
    return 0;
  v11 = a2;
  v13 = 0;
  v14 = *(uint64_t (**)(unint64_t))vstmtbl[12 * a4 + 2];
  v15 = 0xFE / a6;
  v16 = a6;
  while (1)
  {
    v17 = v11 == a3 || v11 == *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8);
    if (v17 || v13 >= v15)
      break;
    v11 = *(_QWORD *)(v11 + 8 * (int)(*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a4)) & 0xFFFFFFFFFFFFFFFCLL;
    if (!v11 || (*(_BYTE *)v11 & 2) == 0)
    {
      v19 = (const void *)v14(v11 + 16);
      memcpy(a5, v19, v16);
      a5 += v16;
      v11 = *(_QWORD *)(v11 + 8) & 0xFFFFFFFFFFFFFFFCLL;
    }
    ++v13;
  }
  *a5 = 0;
  return 1;
}

const char *actdlookup(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v5;
  const char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  int v13;
  uint64_t v14;
  char __s1[255];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v5 = *(unsigned __int8 *)(a4 + 16);
  if (*((__int16 *)vstmtbl[12 * v5 + 1] + 15) == -1
    && extract(a1, a2, a3, v5, __s1, *(unsigned __int8 *)(a4 + 48)))
  {
    v8 = 0;
    v9 = *(_QWORD *)(a4 + 8);
    v10 = v9 + 2 * *(_QWORD *)(a4 + 24);
    v11 = *(_QWORD *)(a4 + 24) - 1;
    while (v11 >= v8)
    {
      v12 = (const char *)(v10 + *(__int16 *)(v9 + ((v11 + v8) & 0x1FFFFFFFELL)));
      v13 = strcmp(__s1, v12);
      if (!v13)
      {
        v6 = v12;
        while (*(unsigned __int8 *)v6++)
          ;
        return v6;
      }
      v14 = (v11 + v8) >> 1;
      if (v13 < 0)
        v11 = v14 - 1;
      else
        v8 = v14 + 1;
    }
  }
  return 0;
}

uint64_t vdictinit(uint64_t a1)
{
  __int16 v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t j;

  v2 = *(_WORD *)(a1 + 306);
  if (v2 || *(_WORD *)(a1 + 320))
  {
    v3 = 0;
    for (i = 0; i < v2; ++i)
    {
      dictinit(a1, *(_QWORD *)(a1 + 64) + v3, 0, i);
      v2 = *(_WORD *)(a1 + 306);
      v3 += 64;
    }
    v5 = 0;
    for (j = 0; j < *(__int16 *)(a1 + 320); ++j)
    {
      dictinit(a1, *(_QWORD *)(a1 + 72) + v5, 1, j);
      v5 += 64;
    }
  }
  return 1;
}

void *dictinit(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v8;
  uint64_t *v9;
  void *result;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v14;

  v14 = 0;
  v13 = 0;
  v12 = 0;
  switch(*((_WORD *)vstmtbl[12 * *(unsigned __int8 *)(a2 + 16) + 1] + 15))
  {
    case 0xFFFB:
      v12 = 0x10000000000000;
      v8 = 8;
      v9 = &v12;
      break;
    case 0xFFFC:
      v13 = -32767;
      v8 = 2;
      v9 = (uint64_t *)&v13;
      break;
    case 0xFFFD:
      v14 = -2147483647;
      v8 = 8;
      v9 = &v14;
      break;
    case 0xFFFE:
      v8 = 2;
      v9 = (uint64_t *)&unk_2486A3AAF;
      break;
    case 0xFFFF:
      v8 = 1;
      v9 = (uint64_t *)&unk_2486A3AAD;
      break;
    default:
      v9 = 0;
      v8 = 0;
      break;
  }
  result = memcpy((void *)(a2 + 49), v9, v8);
  *(_BYTE *)(a2 + 48) = v8;
  v11 = 176;
  if (!a3)
    v11 = 80;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(*(_QWORD *)(a1 + v11) + 8 * a4);
  return result;
}

uint64_t vgen_frame(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + 192);
  if (**(unsigned __int8 **)(v1 + 8032) == 195)
    v2 = v1 + 8128;
  else
    v2 = v1 + 8160;
  *(_QWORD *)(v1 + 8400) = v2;
  *(_WORD *)(v1 + 8408) = -4;
  *(_BYTE *)(v1 + 8410) = 0;
  vassign(a1, (void **)(v1 + 8400), (const void **)(v1 + 8384));
  *(_BYTE *)(v2 + 24) |= 1u;
  return 0;
}

uint64_t vgen_time(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 192);
  v2 = v1 + 8128;
  v3 = v1 + 8160;
  v4 = **(unsigned __int8 **)(v1 + 8032) == 196;
  v5 = *(_BYTE *)(v1 + 0x2000);
  if (v4)
    v6 = v2;
  else
    v6 = v3;
  *(_BYTE *)(v6 + 8) = v5;
  *(_BYTE *)(v6 + 24) |= 2u;
  return 0;
}

void vgen_params(uint64_t a1)
{
  uint64_t v2;
  _BYTE *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned int i;
  uint64_t v10;
  uint64_t *v11;
  char *v12;

  v2 = *(_QWORD *)(a1 + 192);
  v3 = (_BYTE *)(v2 + 0x2000);
  v4 = **(unsigned __int8 **)(v2 + 8032);
  v5 = v2 + 8128;
  v6 = v2 + 8160;
  if (v4 == 197)
    v7 = v5;
  else
    v7 = v6;
  *(_BYTE *)(v7 + 9) = *v3;
  if ((*(_BYTE *)(v7 + 24) & 4) != 0)
  {
    v8 = *(_QWORD **)(v7 + 16);
  }
  else
  {
    v8 = dynaBufNew(v3[1]);
    *(_QWORD *)(v7 + 16) = v8;
  }
  dynaBufReset((uint64_t)v8);
  for (i = 1; ; ++i)
  {
    v10 = *(_QWORD *)(a1 + 192);
    if (i > *(unsigned __int8 *)(v10 + 8193))
      break;
    v11 = *(uint64_t **)(v7 + 16);
    v12 = *(char **)(v10 + 8264);
    *(_QWORD *)(v10 + 8264) = v12 + 1;
    dynaBufAddChar(v11, *v12, 0);
  }
  *(_BYTE *)(v7 + 24) |= 4u;
  OUTLINED_FUNCTION_0_58();
}

void vgen_copy(uint64_t a1)
{
  uint64_t v1;
  unsigned int i;
  uint64_t v4;
  uint64_t *v5;
  char v6;

  v1 = *(_QWORD *)(a1 + 192);
  if ((~*(unsigned __int8 *)(v1 + 8152) & 7) == 0)
  {
    *(_QWORD *)(v1 + 8160) = *(_QWORD *)(v1 + 8128);
    *(_WORD *)(v1 + 8168) = *(_WORD *)(v1 + 8136);
    *(_BYTE *)(*(_QWORD *)(a1 + 192) + 0x2000) = dynaBufLength(*(_QWORD *)(v1 + 8144));
    dynaBufReset(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 8176));
    for (i = 0; ; ++i)
    {
      v4 = *(_QWORD *)(a1 + 192);
      if (i >= *(unsigned __int8 *)(v4 + 0x2000))
        break;
      v5 = *(uint64_t **)(v4 + 8176);
      v6 = dynaBufChar(*(_QWORD **)(v4 + 8144), i);
      dynaBufAddChar(v5, v6, 0);
    }
    *(_BYTE *)(v4 + 8184) |= 7u;
  }
  OUTLINED_FUNCTION_0_58();
}

void vgenerate(uint64_t a1)
{
  uint64_t v2;
  unint64_t *v3;
  int v4;

  v2 = a1 + 112;
  v3 = (unint64_t *)(a1 + 144);
  vprt_range(a1, a1 + 112, a1 + 144);
  if (v4)
    vgen(a1, v2, v3, *(_QWORD *)(a1 + 192) + 8160, *(unsigned __int8 *)(*(_QWORD *)(a1 + 192) + 0x2000));
  OUTLINED_FUNCTION_0_58();
}

void ins_tokens(uint64_t *a1, unsigned int a2, _BYTE *a3, int a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v11;
  double *v12;
  const char *v13;
  double *v14;
  __int16 v15;
  const char *v16;
  unsigned __int16 v17;
  __int16 v18;
  const char *v19;
  int v20;
  unint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  double v29;
  __int16 v30;
  unint64_t v31;
  char v32;

  v31 = 0;
  v28 = 0;
  v29 = 0.0;
  v26 = 0;
  v27 = 0;
  v25 = 0;
  if (a4 == 1)
  {
    v6 = a1[14];
    v7 = *(_QWORD *)(v6 + 8 * (int)(*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL;
    v8 = a1[18];
    if (v8 != v7 || v6 != (*(_QWORD *)(v7 + 8 * (a2 + 3)) & 0xFFFFFFFFFFFFFFFCLL))
      vdel_2pt(a1, a2, v6, v8);
  }
  else
  {
    LOWORD(v28) = STMTYP((char)a2);
    v11 = vstmtbl[12 * a2 + 1][32];
    BYTE2(v28) = v11;
    switch(STMTYP((char)a2))
    {
      case 0xFFFFFFFB:
        v12 = &v29;
        goto LABEL_11;
      case 0xFFFFFFFC:
      case 0xFFFFFFFE:
        v12 = (double *)&v30;
        goto LABEL_11;
      case 0xFFFFFFFD:
        v12 = (double *)&v31;
        goto LABEL_11;
      case 0xFFFFFFFF:
        v12 = (double *)&v32;
LABEL_11:
        v27 = v12;
        v13 = a3 + 1;
        switch(*a3)
        {
          case 0xC7:
            LOWORD(v26) = -1;
            v14 = (double *)&v32;
            goto LABEL_18;
          case 0xC8:
            v15 = -2;
            goto LABEL_16;
          case 0xC9:
            LOWORD(v26) = -3;
            v14 = (double *)&v31;
            goto LABEL_18;
          case 0xCA:
            v15 = -4;
LABEL_16:
            LOWORD(v26) = v15;
            v14 = (double *)&v30;
            goto LABEL_18;
          case 0xCB:
            LOWORD(v26) = -5;
            v14 = &v29;
LABEL_18:
            v25 = v14;
            v16 = &a3[a4];
            v32 = 0;
            v30 = 0;
            BYTE2(v26) = v11;
            while (2)
            {
              if (v13 < v16)
              {
                v17 = v26;
                switch((__int16)v26)
                {
                  case -5:
                    v20 = *(unsigned __int8 *)v13;
                    v19 = v13 + 1;
                    v32 = v20;
                    v29 = atof(v19);
                    v13 = &v19[v20];
                    goto LABEL_29;
                  case -4:
                  case -2:
                    v18 = *((unsigned __int8 *)v13 + 1) | ((*v13 & 0x7F) << 8);
                    v30 = v18;
                    if (*v13 < 0)
                      v30 = -v18;
                    v13 += 2;
                    goto LABEL_29;
                  case -3:
                    v21 = ((unint64_t)*((unsigned __int8 *)v13 + 1) << 16) & 0xFFFFFFFF80FFFFFFLL | ((unint64_t)(*v13 & 0x7F) << 24) | ((unint64_t)*((unsigned __int8 *)v13 + 2) << 8) | *((unsigned __int8 *)v13 + 3);
                    v31 = v21;
                    if (*v13 < 0)
                      v31 = -(uint64_t)v21;
                    v13 += 4;
                    goto LABEL_29;
                  case -1:
                    v22 = *v13++;
                    v32 = v22;
LABEL_29:
                    if ((unsigned __int16)v28 != v17)
                      vassign((uint64_t)a1, (void **)&v27, (const void **)&v25);
                    vins_tok(a1, a2, a1[14], a1[18], (uint64_t)&v27);
                    if (!v23)
                      return;
                    if (v13 < v16)
                    {
                      v24 = vins_sync((uint64_t)a1, a2, *(_QWORD *)(a1[18] + 8 * (a2 + 3)) & 0xFFFFFFFFFFFFFFFCLL, a1[18]);
                      a1[14] = v24;
                      if (!v24)
                        return;
                    }
                    continue;
                  default:
                    return;
                }
              }
              break;
            }
            break;
          default:
            return;
        }
        break;
      default:
        return;
    }
  }
}

void ins_rdtoks(_QWORD *a1, unsigned int a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char i;
  int v15;
  uint64_t *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v7 = a1[25];
  v8 = *(unsigned __int8 **)(v7 + 1720);
  if (*v8 != 5)
  {
    STMTYP((char)a2);
    for (i = 1; ; i = 0)
    {
      v15 = *v8;
      if (v15 == 5)
        break;
      if ((i & 1) == 0)
      {
        if (!vins_sync((uint64_t)a1, a2, a3, *(_QWORD *)(a3 + 8 * (int)(*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL))return;
        v15 = *v8;
      }
      if (v15 != 2)
        return;
      v16 = (uint64_t *)OUTLINED_FUNCTION_0_59();
      vins_tok(v16, v17, v18, v19, v20);
      if (!v21)
        return;
      popDeltaStackTop((uint64_t)a1);
      v8 = *(unsigned __int8 **)(a1[25] + 1720);
    }
    v7 = a1[25];
    goto LABEL_15;
  }
  if ((*(_QWORD *)(a3 + 8 * (int)(*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL) == a4
    && (*(_QWORD *)(a4 + 8 * (a2 + 3)) & 0xFFFFFFFFFFFFFFFCLL) == a3)
  {
LABEL_15:
    *(_QWORD *)(v7 + 1760) = *((_QWORD *)v8 + 1);
    goto LABEL_16;
  }
  v9 = (uint64_t *)OUTLINED_FUNCTION_0_59();
  vdel_2pt(v9, v10, v11, v12);
  v13 = *v8;
  *(_QWORD *)(a1[25] + 1760) = *((_QWORD *)v8 + 1);
  if (v13 == 5)
  {
LABEL_16:
    popDeltaStackTop((uint64_t)a1);
    *(_DWORD *)(a1[23] + 452) = 1;
  }
}

uint64_t OUTLINED_FUNCTION_0_59()
{
  uint64_t v0;

  return v0;
}

uint64_t timeDuration(uint64_t a1, _BYTE *a2, _BYTE *a3, int a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  _QWORD *v11;

  v8 = 0;
  while (a2 != a3)
  {
    if (a2 == *(_BYTE **)(*(_QWORD *)(a1 + 200) + 8))
      return 0;
    if (a2 && (*a2 & 2) != 0)
    {
      v11 = &a2[8 * *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + 8 * a4];
    }
    else
    {
      v9 = STMTYP(a4);
      if (v9 == -3)
      {
        v10 = *(_QWORD *)OUTLINED_FUNCTION_0_60();
      }
      else if (v9 == -4)
      {
        LODWORD(v10) = *(__int16 *)OUTLINED_FUNCTION_0_60();
      }
      else
      {
        LODWORD(v10) = 0;
      }
      v8 += (int)v10;
      v11 = a2 + 8;
    }
    a2 = (_BYTE *)(*v11 & 0xFFFFFFFFFFFFFFFCLL);
  }
  return v8;
}

uint64_t OUTLINED_FUNCTION_0_60()
{
  uint64_t v0;
  uint64_t (***v1)(uint64_t);

  return (**v1)(v0 + 16);
}

uint64_t synthesize(uint64_t a1, int a2, char a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, float a11, float a12, float a13, uint64_t a14, unsigned int a15, int a16, int a17, void *__s2)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _BYTE *v31;
  _BYTE *v32;
  int v33;
  int v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  float v41;
  float v42;
  float v43;
  float v44;
  float v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  const char **v53;
  _BOOL4 v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, _QWORD);
  int v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[88];
  _BYTE v69[4];
  float v70;
  int v71;
  int v72;
  float v73;
  float v74;
  float v75;
  float v76;
  uint64_t (*v77)();
  int v78;
  void (*v79)(uint64_t, uint64_t);

  v27 = *(_QWORD *)(a1 + 208);
  v28 = *(_QWORD *)(v27 + 32);
  *(_BYTE *)(v28 + 110) = 1;
  if (*(_BYTE *)(v27 + 48))
  {
    v29 = 0;
    v30 = 0;
    v31 = *(_BYTE **)(v27 + 40);
    *v31 = a3;
    v32 = v31 + 4;
    while (v29 != 62)
    {
      v33 = arrayStreamFind(a1);
      *(_DWORD *)&v32[4 * v29] = v33;
      if (v33 != -1)
        v30 = 1;
      ++v29;
    }
    v27 = *(_QWORD *)(a1 + 208);
    if (!v30)
    {
      v37 = 0;
      v28 = *(_QWORD *)(v27 + 32);
      goto LABEL_67;
    }
    *(_BYTE *)(v27 + 48) = 0;
    v28 = *(_QWORD *)(v27 + 32);
  }
  v34 = *(unsigned __int8 *)(v28 + 108);
  v35 = *(_BYTE *)(v28 + 108) == 0;
  *(_BYTE *)(v28 + 108) = 1;
  v36 = a7 - a6;
  if (a7 - a6 < 0 || a7 == a6 && !a8)
    goto LABEL_12;
  HIDWORD(v65) = v35;
  v38 = a17;
  OUTLINED_FUNCTION_6_48(v69, &unk_25198BA40);
  if (a15)
  {
    v41 = (float)a15;
    v70 = (float)a15;
    *(_DWORD *)(v27 + 148) = a15;
  }
  else
  {
    v41 = 0.0;
  }
  v71 = 16;
  if (a17)
    v72 = a17;
  else
    v38 = 5;
  v42 = 0.0;
  v43 = 0.0;
  if (a9 != 0.0)
  {
    v43 = a9 + 0.0;
    v76 = a9 + 0.0;
  }
  if (a10 != 0.0)
  {
    v42 = a10 + 0.0;
    v74 = a10 + 0.0;
  }
  v44 = 0.0;
  v45 = 0.0;
  if (a11 != 0.0)
  {
    v45 = a11 + 0.0;
    v75 = a11 + 0.0;
  }
  v46 = a16;
  if (a12 != 0.0)
  {
    v44 = a12 + 0.0;
    v73 = a12 + 0.0;
  }
  v66 = a15;
  v77 = errorIgnore;
  v78 = 2;
  v79 = ourKlattCallback;
  if (!a16)
    v46 = 5;
  HIDWORD(v67) = v46;
  v47 = *(_QWORD *)(v27 + 56);
  if (v41 == *(float *)(v47 + 4)
    && v38 == *(_DWORD *)(v47 + 12)
    && v43 == *(float *)(v47 + 44)
    && v42 == *(float *)(v47 + 36)
    && v45 == *(float *)(v47 + 40)
    && v44 == *(float *)(v47 + 32))
  {
    v48 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_6_48((void *)v47, v69);
    v48 = 0;
    v27 = *(_QWORD *)(a1 + 208);
    v28 = *(_QWORD *)(v27 + 32);
  }
  if (*(_BYTE *)(v28 + 111))
  {
    if (v34)
    {
      if (!v48
        || (v49 = *(_QWORD *)(v27 + 56), *(float *)(v49 + 88) != a13)
        || memcmp((const void *)(v49 + 92), __s2, 0xF8uLL))
      {
        v50 = OUTLINED_FUNCTION_5_48(a1, a6, a6, 1, 0, 1, v39, v40, *(_QWORD *)(v27 + 40), (uint64_t)__s2, v65, a15, v67, HIDWORD(v67));
        v27 = *(_QWORD *)(a1 + 208);
        if (!v50)
        {
          v37 = 0;
          v28 = *(_QWORD *)(v27 + 32);
          goto LABEL_13;
        }
      }
    }
    v51 = *(_QWORD *)(v27 + 56);
    *(float *)(v51 + 88) = a13;
    memcpy((void *)(v51 + 92), __s2, 0xF8uLL);
    v27 = *(_QWORD *)(a1 + 208);
  }
  v28 = *(_QWORD *)(v27 + 32);
  if ((v48 & 1) != 0)
  {
    v52 = v66;
    if (*(_BYTE *)(v28 + 109))
      goto LABEL_50;
  }
  else
  {
    (*(void (**)(_BYTE *, _QWORD))(v28 + 48))(v69, *(_QWORD *)(v28 + 56));
    v53 = *(const char ***)(*(_QWORD *)(a1 + 208) + 64);
    OUTLINED_FUNCTION_6_48(v68, v69);
    KlattSetConstParms(v53, v68);
    v27 = *(_QWORD *)(a1 + 208);
    *(_BYTE *)(*(_QWORD *)(v27 + 32) + 109) = 0;
    v52 = v66;
  }
  v54 = KlattOpen(*(const char ***)(v27 + 64));
  v27 = *(_QWORD *)(a1 + 208);
  v28 = *(_QWORD *)(v27 + 32);
  if (!v54)
  {
LABEL_12:
    v37 = 0;
LABEL_13:
    *(_BYTE *)(v28 + 108) = 0;
    goto LABEL_67;
  }
LABEL_50:
  *(_BYTE *)(v28 + 109) = 1;
  if (a8)
  {
    if (v36 <= a8)
      v55 = a8;
    else
      v55 = a7 - a6;
    *(_QWORD *)(v28 + 112) = v55;
    if (*(_QWORD *)v28 && (v56 = *(void (**)(uint64_t, uint64_t, _QWORD))(v28 + 16)) != 0)
    {
      v56(v55 * v52 / 1000, v52 * a14 / 1000, *(_QWORD *)(v28 + 24));
      v57 = 0;
      v27 = *(_QWORD *)(a1 + 208);
    }
    else
    {
      v57 = 0;
    }
  }
  else
  {
    *(_QWORD *)(v28 + 112) = 0;
    v57 = 1;
  }
  klattSetVolumeMultiplier(*(const char ***)(v27 + 64), a13);
  v37 = OUTLINED_FUNCTION_5_48(a1, a6, a7, *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 111), SHIDWORD(v65), v57, v58, v59, *(_QWORD *)(*(_QWORD *)(a1 + 208) + 40), (uint64_t)__s2, v65, v66, v67, HIDWORD(v67));
  v60 = checkInterrupt(a1);
  v28 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  if (v60)
  {
    v61 = 0;
    *(_QWORD *)(v28 + 112) = 0;
  }
  else
  {
    v61 = *(_QWORD *)(v28 + 112);
  }
  v62 = v61 <= v36;
  v63 = v61 - v36;
  if (v62)
    v63 = 0;
  *(_QWORD *)(v28 + 112) = v63;
  if (!a8)
  {
    finishSynthesis(a1);
    v28 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  }
LABEL_67:
  *(_BYTE *)(v28 + 110) = 0;
  return v37;
}

void ourKlattCallback(uint64_t a1, uint64_t a2)
{
  int i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  while (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 128))
  {
    if (checkInterrupt(a1))
      goto LABEL_3;
  }
  for (i = 0; ; i += v5)
  {
    v5 = (*(_DWORD *)a2 - i);
    if (*(_DWORD *)a2 <= i)
      break;
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
    if (*(_QWORD *)(v6 + 80))
    {
      v7 = IndexQueue::reduceLeadTime((IndexQueue *)(v6 + 72), (int)v5);
      v6 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
      v5 = v7;
    }
    if (*(_QWORD *)v6)
      (*(void (**)(uint64_t, uint64_t, _QWORD))v6)(v5, *(_QWORD *)(a2 + 8) + 8 * i, *(_QWORD *)(v6 + 8));
    if (IndexQueue::indexDue((IndexQueue *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 72)))
      IndexQueue::remove((IndexQueue *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 72));
  }
LABEL_3:
  OUTLINED_FUNCTION_7_47();
}

void finishSynthesis(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  KlattClose(*(const char ***)(*(_QWORD *)(a1 + 208) + 64));
  OUTLINED_FUNCTION_2_52();
  *(_BYTE *)(v1 + 109) = 0;
  clock();
  OUTLINED_FUNCTION_2_52();
  *(_QWORD *)(v3 + 120) = v2;
  *(_BYTE *)(v3 + 108) = 0;
}

BOOL callSynthesizeArray(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  unsigned int v28;
  int v29;
  int v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t i;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  double **v40;
  double *v41;
  float v42;
  float v43;
  float v44;
  float v45;
  float v46;
  float v47;
  _BOOL8 v48;
  uint64_t *v52;
  __int16 **v53;
  float __s2[62];
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_3_52();
  operator new[]();
  v23 = 0;
  v24 = *(double *)(a3 + 8);
  v25 = *(double *)(a4 + 8);
  v26 = *(double *)(a5 + 8);
  v27 = *(double *)(a6 + 8);
  v28 = *(__int16 *)(a7 + 2);
  v29 = *(__int16 *)(a8 + 2);
  v30 = *(__int16 *)(a9 + 2);
  v31 = *(double *)(a10 + 8);
  v32 = *(double *)(a11 + 8);
  v33 = *(double *)(a12 + 8);
  v34 = *(double *)(a13 + 8);
  v35 = *(double *)(a14 + 8);
  while (v23 != 62)
    __s2[v23++] = 0.0;
  for (i = 0; i != 496; i += 8)
    __s2[*(int *)((char *)&unk_2486A3AC4 + i)] = (float)*(int *)((char *)&unk_2486A3AC4 + i + 4);
  v37 = (uint64_t)v24;
  v52 = &a15;
  while (1)
  {
    v38 = v52;
    v53 = (__int16 **)(v52 + 1);
    v39 = *(__int16 *)(*v38 + 2);
    if (!v39)
    {
      v43 = v31;
      v44 = v32;
      v45 = v33;
      v46 = v34;
      v47 = v35;
      v48 = synthesize(a1, v20, 1, v21, v22, v37, (uint64_t)v25, (uint64_t)v26, v43, v44, v45, v46, v47, (uint64_t)v27, v28, v29, v30, __s2) == 0;
      goto LABEL_16;
    }
    if ((int)v39 < 1)
      break;
    v40 = (double **)v53;
    v52 = (uint64_t *)(v53 + 1);
    v41 = *v40;
    if (*(__int16 *)v41 == -5)
      v42 = v41[1];
    else
      v42 = (float)*((__int16 *)v41 + 1);
    __s2[(v39 - 1)] = v42;
  }
  v48 = 1;
LABEL_16:
  OUTLINED_FUNCTION_3_52();
  MEMORY[0x249599124]();
  return v48;
}

uint64_t callPlayFile(uint64_t a1, uint64_t a2)
{
  char v3[13];
  uint64_t v4;

  v4 = *MEMORY[0x24BDAC8D0];
  if (*(_WORD *)(a2 + 2) && *(__int16 *)(a2 + 2) <= 999)
    sprintf(v3, "delta%i.%s", *(__int16 *)(a2 + 2), "au");
  return 0;
}

void floatDur(uint64_t a1, __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v6;
  double v7;
  int v9;
  _BYTE *v10;
  int v11;
  _BYTE *v12;

  v6 = *a2;
  v7 = 0.0;
  if ((*a2 & 0x80) == 0)
  {
    v9 = (char)v6;
    if ((char)v6 < (int)*(unsigned __int8 *)(a1 + 288))
    {
      v10 = *(_BYTE **)(a3 + 8);
      v11 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + (char)v6;
      if ((*(_QWORD *)&v10[8 * v11] & 1) != 0)
      {
        v12 = *(_BYTE **)(a4 + 8);
        if ((*(_QWORD *)&v12[8 * v11] & 1) != 0)
          v7 = (double)timeDuration(a1, v10, v12, v9);
      }
    }
  }
  *(double *)(a5 + 8) = v7;
  OUTLINED_FUNCTION_0_61();
}

uint64_t synthDevicePlaying(uint64_t a1)
{
  return *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 108);
}

void stopSynthesizing(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  if (*(_BYTE *)(v1 + 110))
  {
    setInterrupt(a1, 1);
  }
  else if (*(_BYTE *)(v1 + 108))
  {
    *(_QWORD *)(v1 + 112) = 0;
    finishSynthesis(a1);
  }
  OUTLINED_FUNCTION_0_61();
}

uint64_t turnLazyWriteOn(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 111) = 1;
  return OUTLINED_FUNCTION_1_54();
}

uint64_t turnLazyWriteOff(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 111) = 0;
  return OUTLINED_FUNCTION_1_54();
}

void setSynthToNamedFile(uint64_t a1, char *__s1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  if (!*(_BYTE *)(v2 + 108))
  {
    if (*(_QWORD *)v2)
      *(_QWORD *)v2 = 0;
    if (__s1 && *__s1)
    {
      *(_QWORD *)(v2 + 64) = strdup(__s1);
    }
    else
    {
      v3 = *(void **)(v2 + 64);
      if (v3)
      {
        free(v3);
        OUTLINED_FUNCTION_2_52();
        *(_QWORD *)(v4 + 64) = 0;
      }
    }
  }
  OUTLINED_FUNCTION_0_61();
}

void setSynthToCallback(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  if (!*(_BYTE *)(v3 + 108))
  {
    if (*(_QWORD *)(v3 + 64))
    {
      setSynthToNamedFile(a1, 0);
      v3 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
    }
    *(_QWORD *)v3 = a2;
    *(_QWORD *)(v3 + 8) = a3;
  }
  OUTLINED_FUNCTION_7_47();
}

uint64_t setKlattDynamicHook(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  if (*(_BYTE *)(v3 + 108))
    return OUTLINED_FUNCTION_1_54();
  *(_QWORD *)(v3 + 32) = a2;
  *(_QWORD *)(v3 + 40) = a3;
  return OUTLINED_FUNCTION_4_51();
}

uint64_t setKlattConstantHook(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  if (*(_BYTE *)(v3 + 108))
    return OUTLINED_FUNCTION_1_54();
  *(_QWORD *)(v3 + 48) = a2;
  *(_QWORD *)(v3 + 56) = a3;
  return OUTLINED_FUNCTION_4_51();
}

uint64_t setSynthDurationCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(result + 208) + 32);
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return result;
}

uint64_t registerSynthIndexCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(result + 208) + 32);
  *(_QWORD *)(v3 + 136) = a2;
  *(_QWORD *)(v3 + 144) = a3;
  return result;
}

uint64_t registerPhonemeCallback(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(result + 208) + 32);
  *(_QWORD *)(v3 + 152) = a2;
  *(_QWORD *)(v3 + 160) = a3;
  return result;
}

void insertPhoneme(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, _QWORD);

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 32);
  v4 = *(void (**)(uint64_t, uint64_t, _QWORD))(v3 + 152);
  if (v4)
    v4(a2, a3, *(_QWORD *)(v3 + 160));
  else
    insertDelayedSynthIndex(a1, a2);
}

void insertDelayedSynthIndex(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;

  v3 = *(_QWORD *)(a1 + 208);
  v5 = *(_DWORD *)(v3 + 136);
  v4 = *(_DWORD *)(v3 + 140);
  if (v4 <= v5)
    v6 = *(_DWORD *)(v3 + 136);
  else
    v6 = *(_DWORD *)(v3 + 140);
  v7 = *(_DWORD *)(v3 + 144);
  if (v6 <= v7)
    v8 = *(_DWORD *)(v3 + 144);
  else
    v8 = v6;
  *(_DWORD *)(v3 + 140) = v6;
  *(_DWORD *)(v3 + 144) = v8;
  if (v5 < v4 || v6 < v7)
  {
    IndexQueue::addOffsetFromLast((IndexQueue *)(*(_QWORD *)(v3 + 32) + 72), a2, *(_DWORD *)(v3 + 148) * (v8 - v6) / 1000);
    *(_DWORD *)(*(_QWORD *)(a1 + 208) + 140) = *(_DWORD *)(*(_QWORD *)(a1 + 208) + 144);
    OUTLINED_FUNCTION_0_61();
  }
  else
  {
    insertSynthIndex(a1, a2);
  }
}

uint64_t insertSynthIndex(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  void (*v3)(uint64_t, _QWORD);

  v2 = *(_QWORD **)(*(_QWORD *)(a1 + 208) + 32);
  if (!*v2)
    return 0;
  v3 = (void (*)(uint64_t, _QWORD))v2[17];
  if (v3)
    v3(a2, v2[18]);
  return 1;
}

void flushDelayedSynthQueue()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_52();
  if (*(_QWORD *)(v0 + 80))
    IndexQueue::remove((IndexQueue *)(v0 + 72));
  OUTLINED_FUNCTION_0_61();
}

BOOL IndexQueue::isEmpty(IndexQueue *this)
{
  return *((_QWORD *)this + 1) == 0;
}

uint64_t resetDelayedSynthQueue(uint64_t a1)
{
  return IndexQueue::reset((IndexQueue *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 32) + 72));
}

uint64_t IndexQueue::reset(IndexQueue *this)
{
  *((_QWORD *)this + 3) = 0;
  return EList::reset(this);
}

void deltaCleanup(uint64_t a1)
{
  deltaHeapCleanup();
  dlangCleanup(a1);
  vnstackCleanup(a1);
  vdelCleanup(a1);
  logicalIOCleanup(a1);
}

void dlang_new(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;

  v2 = malloc_type_malloc(0x98uLL, 0x1090040BA41C4AEuLL);
  *(_QWORD *)(a1 + 208) = v2;
  bzero(v2, 0x98uLL);
  v3 = malloc_type_malloc(0x100uLL, 0x10000400763368AuLL);
  *(_QWORD *)(*(_QWORD *)(a1 + 208) + 40) = v3;
  bzero(v3, 0x100uLL);
  v4 = operator new();
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 88) = 0;
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 72) = &unk_25198BDF8;
  *(_OWORD *)(v4 + 96) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_BYTE *)(v4 + 128) = 0;
  *(_OWORD *)(v4 + 136) = 0u;
  *(_OWORD *)(v4 + 152) = 0u;
  v5 = *(_QWORD *)(a1 + 208);
  *(_QWORD *)(v5 + 16) = "au";
  *(_QWORD *)(v5 + 24) = "audio.dev";
  *(_QWORD *)(v5 + 32) = v4;
  *(_BYTE *)(v5 + 48) = 1;
  v6 = malloc_type_malloc(0x158uLL, 0x10B2040B50B0513uLL);
  *(_QWORD *)(*(_QWORD *)(a1 + 208) + 56) = v6;
  memcpy(v6, &last_glob, 0x158uLL);
  v7 = malloc_type_malloc(8uLL, 0x2004093837F09uLL);
  *(_QWORD *)(*(_QWORD *)(a1 + 208) + 96) = v7;
  *v7 = 0;
  *(_BYTE *)(*(_QWORD *)(a1 + 208) + 120) = -1;
  stmarray_new(a1);
  klatt_new(a1);
  *(_QWORD *)(*(_QWORD *)(a1 + 208) + 64) = v8;
}

void dlang_delete(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (a1)
  {
    v2 = *(_QWORD *)(a1 + 208);
    if (v2)
    {
      klatt_delete(*(const char ***)(v2 + 64));
      stmarray_delete(a1);
      v3 = *(_QWORD *)(a1 + 208);
      if (*(_QWORD *)(v3 + 32))
      {
        MEMORY[0x249599130](*(_QWORD *)(v3 + 32), 0);
        v3 = *(_QWORD *)(a1 + 208);
        *(_QWORD *)(v3 + 32) = 0;
      }
      if (*(_QWORD *)(v3 + 56))
      {
        bzero(*(void **)(v3 + 56), 0x158uLL);
        free(*(void **)(*(_QWORD *)(a1 + 208) + 56));
        v3 = *(_QWORD *)(a1 + 208);
        *(_QWORD *)(v3 + 56) = 0;
      }
      if (*(_QWORD *)(v3 + 40))
      {
        bzero(*(void **)(v3 + 40), 0x100uLL);
        free(*(void **)(*(_QWORD *)(a1 + 208) + 40));
        v3 = *(_QWORD *)(a1 + 208);
        *(_QWORD *)(v3 + 40) = 0;
      }
      v4 = *(_QWORD **)(v3 + 96);
      if (v4)
      {
        *v4 = 0;
        free(*(void **)(*(_QWORD *)(a1 + 208) + 96));
        v3 = *(_QWORD *)(a1 + 208);
        *(_QWORD *)(v3 + 96) = 0;
      }
      bzero((void *)v3, 0x98uLL);
      free(*(void **)(a1 + 208));
      *(_QWORD *)(a1 + 208) = 0;
    }
  }
}

BOOL EListQueue::isEmpty(EListQueue *this)
{
  return *((_QWORD *)this + 1) == 0;
}

BOOL IndexQueue::indexDue(IndexQueue *this)
{
  return !(**(unsigned int (***)(IndexQueue *))this)(this)
      && *(_QWORD *)((*(uint64_t (**)(IndexQueue *))(*(_QWORD *)this + 24))(this) + 8) == 0;
}

uint64_t ESList::head(ESList *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t ESList::tail(ESList *this)
{
  return *((_QWORD *)this + 2);
}

void IndexQueue::~IndexQueue(IndexQueue *this)
{
  EListQueue::~EListQueue(this);
  JUMPOUT(0x249599130);
}

void sub_24868154C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x249599130](v1, 0x10A1C40A4A8B666);
  _Unwind_Resume(a1);
}

void EListQueue::~EListQueue(EListQueue *this)
{
  EListQueue::~EListQueue(this);
  JUMPOUT(0x249599130);
}

{
  *(_QWORD *)this = &unk_25198BEB8;
  EList::reset(this);
  ESList::~ESList(this);
}

void sub_2486815A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x249599130](v1, 0xA1C409BE6959DLL);
  _Unwind_Resume(a1);
}

void sub_248681600(_Unwind_Exception *a1)
{
  ESList *v1;

  ESList::~ESList(v1);
  _Unwind_Resume(a1);
}

void ESList::~ESList(ESList *this)
{
  *(_QWORD *)this = off_25198BF28;
  EList::reset(this);
}

{
  ESList::~ESList(this);
  JUMPOUT(0x249599130);
}

uint64_t OUTLINED_FUNCTION_1_54()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_4_51()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_5_48(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  return sendArrayParameters(a1, a2, a3, a4, a5, a6, 0, a14, a9, a10);
}

void *OUTLINED_FUNCTION_6_48(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t createStreamArrays(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v3;
  int v4;

  if (a2 < 1)
    return OUTLINED_FUNCTION_1_55();
  v2 = (_QWORD *)OUTLINED_FUNCTION_3_53(a1);
  return !*v2 && StreamArrayList::build((uint64_t)v2, v3, v4) != 0;
}

uint64_t StreamArrayList::build(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;

  v5 = a3;
  v6 = (_QWORD *)operator new[]();
  *v6 = 32;
  v6[1] = v5;
  if (a3)
  {
    v7 = 0;
    v8 = 32 * v5;
    do
    {
      StreamArray::StreamArray((StreamArray *)&v6[v7 / 8 + 2]);
      v7 += 32;
    }
    while (v8 != v7);
  }
  *(_QWORD *)a1 = v6 + 2;
  *(_WORD *)(a1 + 8) = a3;
  return 1;
}

void sub_248681780(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  for (; v2; v2 -= 32)
    StreamArray::~StreamArray((StreamArray *)(v1 - 16 + v2));
  MEMORY[0x249599124](v1, 0x1030C803AA113E6);
  _Unwind_Resume(a1);
}

BOOL initStreamArray(uint64_t a1, int a2)
{
  StreamArrayList *v3;
  const char *v4;

  v3 = (StreamArrayList *)OUTLINED_FUNCTION_3_53(a1);
  return StreamArrayList::addName(v3, v4) == a2;
}

uint64_t StreamArrayList::addName(StreamArrayList *this, const char *a2)
{
  int v2;
  uint64_t v4;

  v2 = *((__int16 *)this + 5);
  if (v2 >= *((__int16 *)this + 4))
    return 0xFFFFFFFFLL;
  v4 = *(_QWORD *)this;
  *((_WORD *)this + 5) = v2 + 1;
  StreamArray::setName((StreamArray *)(v4 + 32 * v2), a2);
  return (*((__int16 *)this + 5) - 1);
}

BOOL addStreamArrayPtValC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;

  StreamArrayList::appendValueToStream(*(StreamArrayList **)(*(_QWORD *)(a1 + 208) + 72), *(__int16 *)(a2 + 2), *(double *)(a4 + 8), *(__int16 *)(a3 + 2));
  return v4 == 0;
}

void StreamArrayList::appendValueToStream(StreamArrayList *this, int a2, unsigned int a3, int a4)
{
  StreamArray::appendValue((StreamArray *)(*(_QWORD *)this + 32 * a2), a3, a4);
}

BOOL addStreamArraySsValC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  double v6;
  __int16 v7;
  int v8;
  int v9;
  int v10;

  v6 = *(double *)(a5 + 8);
  v7 = *(_WORD *)(a2 + 2);
  v8 = *(__int16 *)(a3 + 2);
  StreamArrayList::appendValueToStream(*(StreamArrayList **)(*(_QWORD *)(a1 + 208) + 72), v7, *(double *)(a4 + 8), v8);
  if (!v9)
    return 1;
  StreamArrayList::appendValueToStream(*(StreamArrayList **)(*(_QWORD *)(a1 + 208) + 72), v7, v6, (__int16)v8);
  return v10 == 0;
}

uint64_t resetStreamArrayStreamC(uint64_t a1, uint64_t a2)
{
  StreamArrayList::clear(*(_QWORD **)(*(_QWORD *)(a1 + 208) + 72), a1, *(__int16 *)(a2 + 2));
  return 0;
}

void StreamArrayList::clear(_QWORD *a1, uint64_t a2, int a3)
{
  StreamArray::clear((TimeValueQueue *)(*a1 + 32 * a3), a2);
}

uint64_t resetStreamArrayC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_3_53(a1);
  StreamArrayList::clearAll(v1, v2);
  return 0;
}

void StreamArrayList::clearAll(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t i;

  v4 = 0;
  for (i = 0; i < *(__int16 *)(a1 + 8); ++i)
  {
    StreamArray::clear((TimeValueQueue *)(*(_QWORD *)a1 + v4), a2);
    v4 += 32;
  }
}

uint64_t arrayStreamFind(uint64_t a1)
{
  StreamArrayList *v1;
  const char *v2;

  v1 = (StreamArrayList *)OUTLINED_FUNCTION_3_53(a1);
  return StreamArrayList::findStream(v1, v2);
}

uint64_t StreamArrayList::findStream(StreamArrayList *this, const char *a2)
{
  uint64_t v4;
  uint64_t i;

  v4 = 0;
  for (i = 0; i < *((__int16 *)this + 4); ++i)
  {
    if (!StreamArray::nameMatch((const char **)(*(_QWORD *)this + v4), a2))
      return (__int16)i;
    v4 += 32;
  }
  LOWORD(i) = -1;
  return (__int16)i;
}

uint64_t arrayStreamFirstVal(uint64_t a1, __int16 a2, unsigned int *a3, int *a4)
{
  return StreamArrayList::fetchFirstValue(*(StreamArrayList **)(*(_QWORD *)(a1 + 208) + 72), a2, a3, a4);
}

uint64_t StreamArrayList::fetchFirstValue(StreamArrayList *this, int a2, unsigned int *a3, int *a4)
{
  return StreamArray::fetchNext((StreamArray *)(*(_QWORD *)this + 32 * a2), a3, a4);
}

uint64_t arrayStreamNextVal(uint64_t a1, __int16 a2, unsigned int *a3, int *a4)
{
  return StreamArrayList::fetchNextValue(*(StreamArrayList **)(*(_QWORD *)(a1 + 208) + 72), a2, a3, a4);
}

uint64_t StreamArrayList::fetchNextValue(StreamArrayList *this, int a2, unsigned int *a3, int *a4)
{
  return StreamArray::fetchNext((StreamArray *)(*(_QWORD *)this + 32 * a2), a3, a4);
}

uint64_t arrayStreamLastOffset(uint64_t a1, __int16 a2)
{
  return *(unsigned int *)(**(_QWORD **)(*(_QWORD *)(a1 + 208) + 72) + 32 * a2 + 24);
}

uint64_t streamArrayCount(uint64_t a1)
{
  return *(__int16 *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 72) + 8);
}

uint64_t stmarray_new(uint64_t result)
{
  uint64_t v1;

  if (result)
  {
    v1 = result;
    if (*(_QWORD *)(result + 208))
    {
      result = operator new();
      *(_QWORD *)result = 0;
      *(_DWORD *)(result + 8) = 0;
      *(_QWORD *)(*(_QWORD *)(v1 + 208) + 72) = result;
    }
  }
  return result;
}

uint64_t stmarray_delete(uint64_t result)
{
  uint64_t v1;

  if (result)
  {
    v1 = *(_QWORD *)(result + 208);
    if (v1)
    {
      if (*(_QWORD *)(v1 + 72))
        StreamArrayList::~StreamArrayList(*(StreamArrayList **)(v1 + 72));
      OUTLINED_FUNCTION_0_62();
    }
  }
  return result;
}

void sub_248681B78()
{
  OUTLINED_FUNCTION_0_62();
}

void sub_248681B80()
{
  _Unwind_Exception *v0;

  _Unwind_Resume(v0);
}

char *StreamArray::setName(StreamArray *this, const char *__s)
{
  char *v4;

  if (*((_QWORD *)this + 2))
  {
    OUTLINED_FUNCTION_2_53();
    MEMORY[0x249599124]();
  }
  strlen(__s);
  OUTLINED_FUNCTION_2_53();
  v4 = (char *)operator new[]();
  *((_QWORD *)this + 2) = v4;
  return strcpy(v4, __s);
}

uint64_t StreamArray::nameMatch(const char **this, const char *a2)
{
  return strcasecmp(a2, this[2]);
}

void StreamArray::clear(TimeValueQueue *a1, uint64_t a2)
{
  TimeValueQueue::reset(a1);
  *((_QWORD *)a1 + 3) = *(unsigned int *)(*(_QWORD *)(a2 + 208) + 80);
}

void StreamArray::StreamArray(StreamArray *this)
{
  TimeValueQueue *v1;

  v1 = TimeValueQueue::TimeValueQueue(this, 0x12Cu);
  *((_QWORD *)v1 + 2) = 0;
  *((_DWORD *)v1 + 6) = 0;
}

void StreamArray::~StreamArray(StreamArray *this)
{
  uint64_t v2;

  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    MEMORY[0x249599124](v2, 0x1000C8077774924);
    *((_QWORD *)this + 2) = 0;
  }
  TimeValueQueue::~TimeValueQueue(this);
}

void StreamArray::appendValue(StreamArray *this, unsigned int a2, int a3)
{
  unsigned int v3;
  BOOL v4;
  unsigned int v5;
  int v8;
  int v9;
  unint64_t v10;

  v3 = *((_DWORD *)this + 6);
  v4 = a2 >= v3;
  v5 = a2 - v3;
  if (v4)
  {
    if (v5 > 0xFFFE)
    {
      TimeValueQueue::push(this, ((unsigned __int16)a3 << 16) | 0xFFFF);
      if (!v9)
      {
LABEL_8:
        *((_DWORD *)this + 6) = a2;
        return;
      }
      HIDWORD(v10) = a2;
      LODWORD(v10) = a2;
      v8 = v10 >> 16;
    }
    else
    {
      v8 = v5 | (a3 << 16);
    }
    TimeValueQueue::push(this, v8);
    goto LABEL_8;
  }
}

uint64_t StreamArray::fetchNext(StreamArray *this, unsigned int *a2, int *a3)
{
  int v7;
  int v8;

  if (TimeValueQueue::isEmpty(this))
    return 0;
  TimeValueQueue::pop((uint64_t)this, &v8);
  *a3 = SHIWORD(v8);
  if ((unsigned __int16)v8 == 0xFFFF)
  {
    if (TimeValueQueue::isEmpty(this))
      return 0;
    TimeValueQueue::pop((uint64_t)this, &v8);
    v7 = HIWORD(v8) | ((unsigned __int16)v8 << 16);
  }
  else
  {
    v7 = *((_DWORD *)this + 7) + (unsigned __int16)v8;
  }
  *a2 = v7;
  *((_DWORD *)this + 7) = v7;
  return 1;
}

void StreamArrayList::~StreamArrayList(StreamArrayList *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)this;
  if (*(_QWORD *)this)
  {
    v3 = *(_QWORD *)(v2 - 8);
    if (v3)
    {
      v4 = 32 * v3;
      do
      {
        StreamArray::~StreamArray((StreamArray *)(v2 - 32 + v4));
        v4 -= 32;
      }
      while (v4);
    }
    MEMORY[0x249599124](v2 - 16, 0x1030C803AA113E6);
    *(_QWORD *)this = 0;
  }
}

void OUTLINED_FUNCTION_0_62()
{
  JUMPOUT(0x249599130);
}

uint64_t OUTLINED_FUNCTION_1_55()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_3_53(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 208) + 72);
}

void TimeValueQueue::TimeValueQueue(TimeValueQueue *this, unsigned int a2)
{
  void *v3;

  *(_QWORD *)this = 0;
  *((_WORD *)this + 4) = a2;
  *(_DWORD *)((char *)this + 10) = 0;
  *((_WORD *)this + 7) = a2;
  v3 = OUTLINED_FUNCTION_0_63(4 * a2);
  *(_QWORD *)this = v3;
  if (!v3)
    *((_WORD *)this + 4) = 0;
}

uint64_t TimeValueQueue::size(TimeValueQueue *this)
{
  unsigned int v1;
  unsigned int v2;
  BOOL v3;
  unsigned __int16 v4;

  v1 = *((unsigned __int16 *)this + 5);
  v2 = *((unsigned __int16 *)this + 6);
  v3 = v2 >= v1;
  v4 = v2 - v1;
  if (!v3)
    v4 += *((_WORD *)this + 4);
  return v4;
}

uint64_t TimeValueQueue::totalSize(TimeValueQueue *this)
{
  return *((unsigned __int16 *)this + 4);
}

void TimeValueQueue::~TimeValueQueue(TimeValueQueue *this)
{
  void *v2;

  v2 = *(void **)this;
  if (v2)
  {
    free(v2);
    *(_QWORD *)((char *)this + 6) = 0;
    *(_QWORD *)this = 0;
  }
}

void TimeValueQueue::reset(TimeValueQueue *this)
{
  void *v2;

  free(*(void **)this);
  v2 = OUTLINED_FUNCTION_0_63(4 * *((unsigned __int16 *)this + 7));
  *(_QWORD *)this = v2;
  if (v2)
  {
    *((_WORD *)this + 4) = *((_WORD *)this + 7);
    *(_DWORD *)((char *)this + 10) = 0;
  }
  OUTLINED_FUNCTION_2_54();
}

BOOL TimeValueQueue::isEmpty(TimeValueQueue *this)
{
  return !*(_QWORD *)this || *((unsigned __int16 *)this + 5) == *((unsigned __int16 *)this + 6);
}

void TimeValueQueue::push(TimeValueQueue *this, int a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;
  int v6;
  __int16 v7;

  v2 = *(_QWORD *)this;
  if (*(_QWORD *)this)
  {
    v4 = *((unsigned __int16 *)this + 6);
    *((_WORD *)this + 6) = v4 + 1;
    *(_DWORD *)(v2 + 4 * v4) = a2;
    v5 = *((unsigned __int16 *)this + 6);
    if (v5 == *((unsigned __int16 *)this + 4))
    {
      v5 = 0;
      *((_WORD *)this + 6) = 0;
    }
    if (v5 == *((unsigned __int16 *)this + 5))
    {
      TimeValueQueue::expand(this);
      if (!v6)
      {
        v7 = *((_WORD *)this + 6);
        if (!v7)
          v7 = *((_WORD *)this + 4);
        *((_WORD *)this + 6) = v7 - 1;
      }
    }
  }
  OUTLINED_FUNCTION_2_54();
}

void TimeValueQueue::expand(TimeValueQueue *this)
{
  void *v2;
  __int16 v3;
  char *v4;

  v2 = *(void **)this;
  if (v2)
  {
    v3 = *((_WORD *)this + 4);
    v4 = (char *)OUTLINED_FUNCTION_1_56(v2, 8 * (v3 & 0x7FFF));
    memmove(&v4[4 * *((unsigned __int16 *)this + 4)], v4, 4 * *((unsigned __int16 *)this + 6));
    memmove(v4, &v4[4 * *((unsigned __int16 *)this + 5)], 4 * *((unsigned __int16 *)this + 4));
    if (v4)
    {
      *(_QWORD *)this = v4;
      *((_WORD *)this + 5) = 0;
      *((_WORD *)this + 6) = *((_WORD *)this + 4);
      *((_WORD *)this + 4) = 2 * v3;
    }
  }
  OUTLINED_FUNCTION_3_54();
}

void TimeValueQueue::pop(uint64_t a1, _DWORD *a2)
{
  __int16 v3;
  __int16 v4;

  if (TimeValueQueue::peekHead(a1, a2))
  {
    v3 = *(_WORD *)(a1 + 10);
    if (*(unsigned __int16 *)(a1 + 8) == (unsigned __int16)(v3 + 1))
      v4 = 0;
    else
      v4 = v3 + 1;
    *(_WORD *)(a1 + 10) = v4;
    TimeValueQueue::shrinkIfNeeded((const void **)a1);
  }
  else
  {
    OUTLINED_FUNCTION_2_54();
  }
}

uint64_t TimeValueQueue::peekHead(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;

  if (!*(_QWORD *)a1)
    return 0;
  v2 = *(unsigned __int16 *)(a1 + 10);
  if ((_DWORD)v2 == *(unsigned __int16 *)(a1 + 12))
    return 0;
  *a2 = *(_DWORD *)(*(_QWORD *)a1 + 4 * v2);
  return 1;
}

void TimeValueQueue::shrinkIfNeeded(const void **this)
{
  unsigned int v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  void *v6;
  char *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;
  void *v13;

  v2 = *((unsigned __int16 *)this + 6);
  v3 = *((unsigned __int16 *)this + 5);
  v4 = v2 - v3;
  if (v2 > v3)
  {
    v5 = *((unsigned __int16 *)this + 4);
    if (v5 <= *((unsigned __int16 *)this + 7) || v4 >= (int)(v5 >> 1))
      goto LABEL_13;
    v6 = (void *)*this;
    v7 = (char *)*this + 4 * v3;
    v8 = 4 * v4;
    goto LABEL_11;
  }
  v9 = *((unsigned __int16 *)this + 4);
  v4 = v9 - v3 + v2;
  if (v9 > *((unsigned __int16 *)this + 7) && v4 < (int)(v9 >> 1))
  {
    memmove((char *)*this + 4 * v9 + -4 * v3, *this, 4 * *((unsigned __int16 *)this + 6));
    v6 = (void *)*this;
    v11 = *((unsigned __int16 *)this + 5);
    v7 = (char *)*this + 4 * v11;
    v8 = 4 * (*((unsigned __int16 *)this + 4) - v11);
LABEL_11:
    memmove(v6, v7, v8);
    v12 = *((unsigned __int16 *)this + 4);
    v13 = OUTLINED_FUNCTION_1_56((void *)*this, (2 * (_DWORD)v12) & 0x1FFFC);
    if (v13)
    {
      *this = v13;
      *((_WORD *)this + 5) = 0;
      *((_WORD *)this + 6) = v4;
      *((_WORD *)this + 4) = v12 >> 1;
    }
  }
LABEL_13:
  OUTLINED_FUNCTION_3_54();
}

_DWORD *TimeValueQueue::getElements(TimeValueQueue *this, unsigned int *a2)
{
  unsigned int v4;
  _DWORD *result;
  uint64_t i;

  v4 = TimeValueQueue::size(this);
  result = OUTLINED_FUNCTION_0_63(4 * v4);
  if (result)
  {
    for (i = 0; v4 != i; ++i)
      result[i] = *(_DWORD *)(*(_QWORD *)this
                            + 4
                            * ((i + *((unsigned __int16 *)this + 5)) % *((unsigned __int16 *)this + 4)));
    *a2 = v4;
  }
  return result;
}

void *OUTLINED_FUNCTION_0_63(size_t a1)
{
  return malloc_type_malloc(a1, 0x100004052888210uLL);
}

void *OUTLINED_FUNCTION_1_56(void *a1, size_t a2)
{
  return malloc_type_realloc(a1, a2, 0x100004052888210uLL);
}

void setUserDictInputStream(uint64_t a1, const char *a2)
{
  int i;
  char *v5;

  if (a2 && *a2)
  {
    for (i = 0; i < (int)num_streams(a1); ++i)
    {
      v5 = stream_name((char)i);
      if (!strcmp(v5, a2))
        break;
    }
    if (num_streams(a1) != i)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 208) + 120) = i;
      single_letter_stream((char)i);
    }
  }
  OUTLINED_FUNCTION_2_55();
}

BOOL callUserDictLookup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 112);
  return !v4
      || DictionarySet::lookupAndTranslate(v4, *(__int16 *)(a2 + 2), *(_QWORD *)(a3 + 8), *(_QWORD *)(a4 + 8)) != 0;
}

uint64_t DictionarySet::lookupAndTranslate(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return UserDict::lookupAndTranslate(*(_QWORD *)(a1 + 8 * a2), *(uint64_t **)(a1 + 32), a3, a4);
}

BOOL callInsertLastDictString(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 208) + 112);
  return !v4
      || DictionarySet::lookupUndo(v4, *(__int16 *)(a2 + 2), *(_QWORD *)(a3 + 8), *(_QWORD *)(a4 + 8)) != 0;
}

uint64_t DictionarySet::lookupUndo(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return UserDict::lookupUndo(*(_QWORD *)(a1 + 8 * a2), *(uint64_t **)(a1 + 32), a3, a4);
}

uint64_t getCurrentUserDict(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 208) + 112);
}

uint64_t setCurrentUserDict(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)(a1 + 208) + 112) = a2;
  return 0;
}

void UserDict::UserDict(UserDict *this)
{
  UserDict *v1;
  uint64_t v2;

  v1 = (UserDict *)OUTLINED_FUNCTION_5_49((uint64_t)this);
  UserDict::buildHashTable(v1, v2);
  OUTLINED_FUNCTION_7_48();
}

uint64_t UserDict::buildHashTable(UserDict *this, uint64_t a2)
{
  int v3;
  uint64_t v4;
  _BYTE *v5;

  if (a2)
    v3 = a2;
  else
    v3 = 256;
  v4 = 1;
  v5 = hashNew(v3, 1, 1);
  *((_QWORD *)this + 513) = v5;
  if (!v5)
    return 0;
  *((_DWORD *)this + 1028) = 1;
  return v4;
}

void UserDict::UserDict(uint64_t a1)
{
  OUTLINED_FUNCTION_5_49(a1);
  UserDict::loadDictionary();
  OUTLINED_FUNCTION_7_48();
}

void UserDict::loadDictionary()
{
  UserDict *v0;
  const char *v1;
  const char *v2;
  uint64_t v3;
  uint64_t v4;
  UserDict *v5;
  off_t DictFile;
  char v7[4096];
  uint64_t v8;

  v0 = (UserDict *)MEMORY[0x24BDAC7A8]();
  v2 = v1;
  v4 = v3;
  v5 = v0;
  v8 = *MEMORY[0x24BDAC8D0];
  DictFile = UserDict::findDictFile(v0, v1, v7);
  if (DictFile != -1
    && DictFile
    && (*((_QWORD *)v5 + 513) || UserDict::buildHashTable(v5, (int)(DictFile / 15))))
  {
    UserDict::loadHashTable((int **)v5, v4);
    strcpy((char *)v5, v2);
  }
  OUTLINED_FUNCTION_2_55();
}

void UserDict::~UserDict(int **this)
{
  hashDelete(this[513], 1, 1);
  OUTLINED_FUNCTION_7_48();
}

off_t UserDict::findDictFile(UserDict *this, const char *a2, char *a3)
{
  stat v5;

  if (fileFindInPath() && !stat(a3, &v5))
    return v5.st_size;
  else
    return -1;
}

void UserDict::loadHashTable(int **a1, uint64_t a2)
{
  uint64_t Line;
  char v5[513];
  char __s[129];
  _BYTE v7[705];
  uint64_t v8[73];

  v8[72] = *MEMORY[0x24BDAC8D0];
  std::ifstream::basic_ifstream(v8);
  Line = std::ifstream::open();
  while (UserDict::readNextLine(Line, v8, v7))
  {
    Line = UserDict::parseNextLine((uint64_t)a1, a2, v7, (unint64_t)__s, (uint64_t)v5);
    if ((_DWORD)Line)
      UserDict::addOneEntry(a1, __s, v5);
  }
  std::ifstream::close(v8);
  std::ifstream::~ifstream(v8);
  OUTLINED_FUNCTION_2_55();
}

void sub_2486826BC()
{
  std::ifstream::~ifstream((uint64_t *)&STACK[0x548]);
  OUTLINED_FUNCTION_4_52();
}

uint64_t *std::ifstream::basic_ifstream(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v2 = MEMORY[0x24BEDB838];
  v3 = MEMORY[0x24BEDB838] + 24;
  *a1 = MEMORY[0x24BEDB838] + 24;
  v4 = v2 + 64;
  a1[53] = v2 + 64;
  v5 = a1 + 2;
  std::istream::basic_istream[abi:ne180100](a1, (uint64_t *)(MEMORY[0x24BEDB7E0] + 8), a1 + 2);
  *a1 = v3;
  a1[53] = v4;
  MEMORY[0x249599058](v5);
  return a1;
}

void sub_248682760(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::istream::~istream();
  MEMORY[0x24959910C](v1 + 424);
  _Unwind_Resume(a1);
}

BOOL UserDict::readNextLine(uint64_t a1, _QWORD *a2, _BYTE *a3)
{
  if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 - 24) + 32) & 2) != 0)
    return 0;
  std::istream::getline[abi:ne180100](a2);
  return *a3 != 0;
}

uint64_t UserDict::parseNextLine(uint64_t a1, uint64_t a2, _BYTE *a3, unint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  int v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;

  while (1)
  {
    result = *a3;
    if (!*a3)
      break;
    result = isspace(result);
    if (!(_DWORD)result)
    {
      v10 = *a3;
      if (!*a3)
        return 0;
      v11 = 0;
      do
      {
        if (v10 == 9 || (_DWORD)v11 == 704)
          break;
        result = OUTLINED_FUNCTION_9_46(result, v9, v10);
        if (!(_DWORD)result)
          return result;
        *(_BYTE *)(a4 + v11) = a3[v11];
        v10 = a3[++v11];
      }
      while (v10);
      v12 = (_BYTE *)(a4 + v11);
      *(_BYTE *)(a4 + v11) = 0;
      v13 = &a3[v11];
      do
      {
        v14 = v12;
        if ((unint64_t)v12 <= a4)
          break;
        --v12;
      }
      while (isspace(*(v14 - 1)));
      *v14 = 0;
      while (1)
      {
        result = *v13;
        if ((_DWORD)result != 9 && (_DWORD)result != 32)
          break;
        ++v13;
      }
      if (*v13)
      {
        v15 = 0;
        do
        {
          if ((_DWORD)v15 == 704)
            break;
          v16 = isspace(result);
          if ((_DWORD)v16)
          {
            v18 = 32;
          }
          else
          {
            result = OUTLINED_FUNCTION_9_46(v16, v17, v13[v15]);
            if (!(_DWORD)result)
              return result;
            v18 = v13[v15];
          }
          *(_BYTE *)(a5 + v15) = v18;
          LODWORD(result) = v13[++v15];
        }
        while ((_DWORD)result);
        do
        {
          v19 = v15 - 1;
          v20 = *(_BYTE *)(a5 + v15 - 1) != 32 || v15 == 1;
          --v15;
        }
        while (!v20);
        *(_BYTE *)(a5 + v19 + 1) = 0;
        return 1;
      }
      return result;
    }
    ++a3;
  }
  return result;
}

void UserDict::addOneEntry(int **this, const char *__s, const char *a3)
{
  size_t v6;
  size_t v7;
  malloc_type_id_t v8;
  char *v9;
  size_t v10;
  size_t v11;
  malloc_type_id_t v12;
  char *v13;
  int v14;

  v6 = strlen(__s);
  if (v6 < 0x81)
  {
    v7 = v6 + 1;
    v8 = 3220888891;
  }
  else
  {
    OUTLINED_FUNCTION_8_47();
  }
  v9 = (char *)malloc_type_malloc(v7, v8);
  if (v9)
  {
    if (strlen(__s) < 0x81)
    {
      strcpy(v9, __s);
    }
    else
    {
      strncpy(v9, __s, 0x80uLL);
      if (strlen(__s) >= 0x80)
        v9[128] = 0;
    }
    v10 = OUTLINED_FUNCTION_13_42();
    if (v10 < 0x201)
    {
      v11 = v10 + 1;
      v12 = 3766453158;
    }
    else
    {
      OUTLINED_FUNCTION_8_47();
    }
    v13 = (char *)malloc_type_malloc(v11, v12);
    if (v13)
    {
      if (OUTLINED_FUNCTION_13_42() < 0x201)
      {
        strcpy(v13, a3);
      }
      else
      {
        strncpy(v13, a3, 0x200uLL);
        if (OUTLINED_FUNCTION_13_42() >= 0x200)
          v13[512] = 0;
      }
      hashInsertString(this[513], v9);
      if (v14)
        *((_DWORD *)this + 1028) = 2;
    }
  }
  OUTLINED_FUNCTION_2_55();
}

void std::ifstream::close(_QWORD *a1)
{
  if (!std::filebuf::close())
    std::ios_base::setstate[abi:ne180100]((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 4);
}

uint64_t *std::ifstream::~ifstream(uint64_t *a1)
{
  std::ifstream::~ifstream(a1, MEMORY[0x24BEDB7E0]);
  MEMORY[0x24959910C](a1 + 53);
  return a1;
}

uint64_t std::istream::getline[abi:ne180100](_QWORD *a1)
{
  std::ios::widen[abi:ne180100]((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 10);
  return std::istream::getline();
}

int isspace(int _c)
{
  return __istype(_c, 0x4000uLL);
}

{
  return MEMORY[0x24BDAE910](*(_QWORD *)&_c);
}

uint64_t UserDict::proofCharacter(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v4[2];

  v4[1] = 0;
  v4[0] = a3;
  return non_unique_value(a2, *(char *)(*(_QWORD *)(a2 + 208) + 120), 0, v4);
}

void UserDict::saveDictionary(UserDict *this, const char *a2)
{
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  char *v7;
  _QWORD *v8;
  _BYTE v9[24];
  uint64_t v10[72];

  v10[71] = *MEMORY[0x24BDAC8D0];
  std::ofstream::basic_ofstream(v10);
  std::ofstream::open();
  if ((*((_BYTE *)&v10[4] + *(_QWORD *)(v10[0] - 24)) & 1) == 0)
  {
    v3 = *((_QWORD *)this + 513);
    if (v3)
    {
      if (hashIterConstruct((uint64_t)v9, v3))
      {
        do
        {
          v4 = (char *)hashIterString((uint64_t)v9);
          v5 = std::operator<<[abi:ne180100]<std::char_traits<char>>(v10, v4);
          v6 = std::operator<<[abi:ne180100]<std::char_traits<char>>(v5, "\t");
          v7 = (char *)hashIterRef((uint64_t)v9);
          v8 = std::operator<<[abi:ne180100]<std::char_traits<char>>(v6, v7);
          std::endl[abi:ne180100]<char,std::char_traits<char>>(v8);
        }
        while (hashIterNext((uint64_t)v9));
      }
      std::ofstream::close(v10);
      OUTLINED_FUNCTION_10_46();
    }
    else
    {
      std::ofstream::close(v10);
      OUTLINED_FUNCTION_10_46();
    }
  }
  std::ofstream::~ofstream(v10);
  OUTLINED_FUNCTION_2_55();
}

void sub_248682CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  std::ofstream::~ofstream((uint64_t *)va);
  OUTLINED_FUNCTION_4_52();
}

uint64_t *std::ofstream::basic_ofstream(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v2 = MEMORY[0x24BEDB840];
  v3 = MEMORY[0x24BEDB840] + 24;
  *a1 = MEMORY[0x24BEDB840] + 24;
  v4 = v2 + 64;
  a1[52] = v2 + 64;
  v5 = a1 + 1;
  std::ostream::basic_ostream[abi:ne180100](a1, (uint64_t *)(MEMORY[0x24BEDB7E8] + 8), a1 + 1);
  *a1 = v3;
  a1[52] = v4;
  MEMORY[0x249599058](v5);
  return a1;
}

void sub_248682D9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::ostream::~ostream();
  MEMORY[0x24959910C](v1 + 416);
  _Unwind_Resume(a1);
}

void std::ofstream::close(_QWORD *a1)
{
  if (!std::filebuf::close())
    std::ios_base::setstate[abi:ne180100]((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 4);
}

_QWORD *std::operator<<[abi:ne180100]<std::char_traits<char>>(_QWORD *a1, char *__s)
{
  size_t v4;

  v4 = strlen(__s);
  return std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(a1, (uint64_t)__s, v4);
}

_QWORD *std::endl[abi:ne180100]<char,std::char_traits<char>>(_QWORD *a1)
{
  std::ios::widen[abi:ne180100]((const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 10);
  std::ostream::put();
  std::ostream::flush();
  return a1;
}

uint64_t *std::ofstream::~ofstream(uint64_t *a1)
{
  std::ofstream::~ofstream(a1, MEMORY[0x24BEDB7E8]);
  MEMORY[0x24959910C](a1 + 52);
  return a1;
}

void UserDict::update(UserDict *this, char *a2, const char *a3)
{
  uint64_t v6;

  v6 = *((_QWORD *)this + 513);
  if (v6)
  {
LABEL_4:
    if (hashLookupString(v6, a2))
    {
      hashDeleteString(*((_QWORD *)this + 513), a2, 1, 1);
      if (!a3)
      {
        *((_DWORD *)this + 1028) = 2;
        goto LABEL_9;
      }
    }
    else if (!a3)
    {
      goto LABEL_9;
    }
    UserDict::addOneEntry((int **)this, a2, a3);
    return;
  }
  if (UserDict::buildHashTable(this, 256))
  {
    v6 = *((_QWORD *)this + 513);
    goto LABEL_4;
  }
LABEL_9:
  OUTLINED_FUNCTION_2_55();
}

void UserDict::findFirst(UserDict *this, const char **a2, const char **a3)
{
  uint64_t v3;
  char *v5;
  uint64_t v6;

  v3 = *((_QWORD *)this + 513);
  if (v3)
  {
    v5 = (char *)this + 4120;
    if (hashIterConstruct((uint64_t)this + 4120, v3))
    {
      v6 = hashIterString((uint64_t)v5);
      *a3 = (const char *)OUTLINED_FUNCTION_12_43(v6);
    }
  }
  OUTLINED_FUNCTION_2_55();
}

void UserDict::findNext(UserDict *this, const char **a2, const char **a3)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)this + 4120;
  if (hashIterNext((uint64_t)this + 4120))
  {
    v5 = hashIterString((uint64_t)v4);
    *a3 = (const char *)OUTLINED_FUNCTION_12_43(v5);
  }
  OUTLINED_FUNCTION_2_55();
}

uint64_t UserDict::lookup(UserDict *this, char *a2)
{
  uint64_t v2;

  if (a2 && *a2 && (v2 = *((_QWORD *)this + 513)) != 0)
    return hashLookupString(v2, a2);
  else
    return 0;
}

uint64_t *DictionarySet::DictionarySet(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a1[4] = a2;
  v4 = OUTLINED_FUNCTION_0_64();
  *(_QWORD *)(v4 + 4104) = 0;
  *(_DWORD *)(v4 + 4112) = 0;
  *(_BYTE *)v4 = 0;
  *(_BYTE *)(v4 + 4144) = 0;
  *a1 = v4;
  v5 = OUTLINED_FUNCTION_0_64();
  *(_QWORD *)(v5 + 4104) = 0;
  *(_DWORD *)(v5 + 4112) = 0;
  *(_BYTE *)v5 = 0;
  *(_BYTE *)(v5 + 4144) = 0;
  a1[1] = v5;
  v6 = OUTLINED_FUNCTION_0_64();
  *(_QWORD *)(v6 + 4104) = 0;
  *(_DWORD *)(v6 + 4112) = 0;
  *(_BYTE *)(v6 + 4144) = 0;
  *(_BYTE *)v6 = 0;
  a1[2] = v6;
  a1[3] = *(_QWORD *)(a2 + 208) + 112;
  return a1;
}

void DictionarySet::DictionarySet(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[4] = a2;
  v3 = OUTLINED_FUNCTION_0_64();
  UserDict::UserDict(v3);
  *a1 = v3;
  v4 = OUTLINED_FUNCTION_0_64();
  UserDict::UserDict(v4);
  a1[1] = v4;
  v5 = OUTLINED_FUNCTION_0_64();
  UserDict::UserDict(v5);
  a1[2] = v5;
  OUTLINED_FUNCTION_11_45();
  OUTLINED_FUNCTION_6_49();
}

void sub_248683150()
{
  OUTLINED_FUNCTION_1_57();
}

void DictionarySet::DictionarySet(UserDict **a1, UserDict *a2)
{
  UserDict *v3;
  UserDict *v4;
  UserDict *v5;

  a1[4] = a2;
  v3 = (UserDict *)OUTLINED_FUNCTION_0_64();
  UserDict::UserDict(v3);
  *a1 = v3;
  v4 = (UserDict *)OUTLINED_FUNCTION_0_64();
  UserDict::UserDict(v4);
  a1[1] = v4;
  v5 = (UserDict *)OUTLINED_FUNCTION_0_64();
  UserDict::UserDict(v5);
  a1[2] = v5;
  OUTLINED_FUNCTION_11_45();
  OUTLINED_FUNCTION_6_49();
}

void sub_2486831E0()
{
  OUTLINED_FUNCTION_1_57();
}

void DictionarySet::~DictionarySet(DictionarySet *this)
{
  if (*(_QWORD *)this)
    OUTLINED_FUNCTION_14_41();
  OUTLINED_FUNCTION_1_57();
}

void sub_248683220()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 8))
    OUTLINED_FUNCTION_14_41();
  OUTLINED_FUNCTION_1_57();
}

void sub_248683234()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    OUTLINED_FUNCTION_14_41();
  OUTLINED_FUNCTION_1_57();
}

void sub_248683248()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 208);
  if (**(_QWORD **)(v0 + 24) == *(_QWORD *)(v1 + 112))
    *(_QWORD *)(v1 + 112) = 0;
  OUTLINED_FUNCTION_7_48();
}

void sub_248683270()
{
  OUTLINED_FUNCTION_1_57();
}

void DictionarySet::load()
{
  UserDict::loadDictionary();
}

void DictionarySet::save(uint64_t a1, int a2, char *a3)
{
  UserDict::saveDictionary(*(UserDict **)(a1 + 8 * a2), a3);
}

void DictionarySet::updateEntry(uint64_t a1, int a2, char *a3, char *a4)
{
  UserDict::update(*(UserDict **)(a1 + 8 * a2), a3, a4);
}

void DictionarySet::findFirst(uint64_t a1, int a2, const char **a3, const char **a4)
{
  UserDict::findFirst(*(UserDict **)(a1 + 8 * a2), a3, a4);
}

void DictionarySet::findNext(uint64_t a1, int a2, const char **a3, const char **a4)
{
  UserDict::findNext(*(UserDict **)(a1 + 8 * a2), a3, a4);
}

uint64_t DictionarySet::lookup(uint64_t a1, int a2, char *a3)
{
  return UserDict::lookup(*(UserDict **)(a1 + 8 * a2), a3);
}

uint64_t UserDict::lookupAndTranslate(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8;
  char *v9;

  if (!*(_QWORD *)(a1 + 4104))
    return 2;
  if (!sync_in_stm()
    || !sync_in_stm()
    || !extract_string((uint64_t)a2, *(char *)(a2[26] + 120), a3, a4, (char *)(a1 + 4144), 80))
  {
    return 3;
  }
  v8 = hashLookupString(*(_QWORD *)(a1 + 4104), (char *)(a1 + 4144));
  if (!v8)
    return 5;
  v9 = (char *)v8;
  del_two_point(a2, *(_BYTE *)(a2[26] + 120), a3, a4);
  *(_DWORD *)(a2[23] + 452) = 1;
  if (insert_string(a2, *(char *)(a2[26] + 120), a4, v9))
    return 0;
  else
    return 3;
}

uint64_t UserDict::lookupUndo(uint64_t a1, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  char *v4;

  v4 = (char *)(a1 + 4144);
  if (!*(_BYTE *)(a1 + 4144))
    return 5;
  del_two_point(a2, *(_BYTE *)(a2[26] + 120), a3, a4);
  *(_DWORD *)(a2[23] + 452) = 1;
  if (insert_string(a2, *(char *)(a2[26] + 120), a4, v4))
    return 0;
  else
    return 3;
}

uint64_t std::ifstream::~ifstream(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v2 - 24)) = a2[3];
  MEMORY[0x249599064](a1 + 2);
  return std::istream::~istream();
}

void sub_2486834BC(_Unwind_Exception *a1)
{
  std::istream::~istream();
  _Unwind_Resume(a1);
}

int __istype(__darwin_ct_rune_t _c, unint64_t _f)
{
  BOOL v2;

  if (_c <= 0x7F)
    v2 = (*(_DWORD *)(MEMORY[0x24BDAC740] + 4 * _c + 60) & _f) == 0;
  else
    v2 = __maskrune(_c, _f) == 0;
  return !v2;
}

uint64_t std::ofstream::~ofstream(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v2 - 24)) = a2[3];
  MEMORY[0x249599064](a1 + 1);
  return std::ostream::~ostream();
}

void sub_248683560(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  _Unwind_Resume(a1);
}

uint64_t *std::istream::basic_istream[abi:ne180100](uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4;

  v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v4 - 24)) = a2[1];
  a1[1] = 0;
  std::ios::init[abi:ne180100]((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), a3);
  return a1;
}

void std::ios::init[abi:ne180100](std::ios_base *a1, void *a2)
{
  std::ios_base::init(a1, a2);
  a1[1].__vftable = 0;
  a1[1].__fmtflags_ = -1;
}

void std::ios_base::setstate[abi:ne180100](std::ios_base *a1, int a2)
{
  std::ios_base::clear(a1, a1->__rdstate_ | a2);
}

uint64_t std::ios::widen[abi:ne180100](const std::ios_base *a1, uint64_t a2)
{
  const std::locale::facet *v3;
  uint64_t v4;
  std::locale v6;

  std::ios_base::getloc(a1);
  v3 = std::use_facet[abi:ne180100]<std::ctype<char>>(&v6);
  v4 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v3->__vftable[2].~facet_0)(v3, a2);
  std::locale::~locale(&v6);
  return v4;
}

void sub_248683654(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
  std::locale::~locale(&a10);
  _Unwind_Resume(a1);
}

const std::locale::facet *std::use_facet[abi:ne180100]<std::ctype<char>>(const std::locale *a1)
{
  return std::locale::use_facet(a1, MEMORY[0x24BEDB350]);
}

uint64_t *std::ostream::basic_ostream[abi:ne180100](uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v4;

  v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(v4 - 24)) = a2[1];
  std::ios::init[abi:ne180100]((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), a3);
  return a1;
}

_QWORD *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  const std::ios_base *v6;
  uint64_t rdbuf;
  std::ios_base::fmtflags fmtflags;
  std::string::value_type v9;
  uint64_t v10;
  _BYTE v12[16];

  MEMORY[0x2495990A0](v12, a1);
  if (v12[0])
  {
    v6 = (const std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24));
    rdbuf = (uint64_t)v6->__rdbuf_;
    fmtflags = v6->__fmtflags_;
    v9 = std::ios::fill[abi:ne180100](v6);
    if ((fmtflags & 0xB0) == 0x20)
      v10 = a2 + a3;
    else
      v10 = a2;
    if (!std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(rdbuf, a2, v10, a2 + a3, (uint64_t)v6, v9))
      std::ios_base::setstate[abi:ne180100]((std::ios_base *)((char *)a1 + *(_QWORD *)(*a1 - 24)), 5);
  }
  MEMORY[0x2495990AC](v12);
  return a1;
}

void sub_248683778(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;

  MEMORY[0x2495990AC](&a9);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v9 + *(_QWORD *)(*v9 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x24868375CLL);
}

void sub_2486837B0(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t std::__pad_and_output[abi:ne180100]<char,std::char_traits<char>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, std::string::value_type __c)
{
  uint64_t v6;
  uint64_t v11;
  int64_t v12;
  std::string *v13;
  uint64_t v14;
  uint64_t v15;
  std::string v17;

  v6 = a1;
  if (a1)
  {
    v11 = *(_QWORD *)(a5 + 24);
    if (v11 <= a4 - a2)
      v12 = 0;
    else
      v12 = v11 - (a4 - a2);
    if ((a3 - a2 < 1 || (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 96))(a1) == a3 - a2)
      && (v12 < 1
       || ((std::string::__init(&v17, v12, __c), (v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
         ? (v13 = &v17)
         : (v13 = (std::string *)v17.__r_.__value_.__r.__words[0]),
           v14 = (*(uint64_t (**)(uint64_t, std::string *, int64_t))(*(_QWORD *)v6 + 96))(v6, v13, v12), std::string::~string(&v17), v14 == v12))&& ((v15 = a4 - a3, v15 < 1)|| (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v6 + 96))(v6, a3, v15) == v15))
    {
      *(_QWORD *)(a5 + 24) = 0;
    }
    else
    {
      return 0;
    }
  }
  return v6;
}

void sub_2486838DC(_Unwind_Exception *a1, std::string *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  std::string::~string((std::string *)&a10);
  _Unwind_Resume(a1);
}

uint64_t std::ios::fill[abi:ne180100](const std::ios_base *a1)
{
  std::ios_base::fmtflags fmtflags;

  fmtflags = a1[1].__fmtflags_;
  if (fmtflags == -1)
  {
    fmtflags = std::ios::widen[abi:ne180100](a1, 32);
    a1[1].__fmtflags_ = fmtflags;
  }
  return (char)fmtflags;
}

uint64_t OUTLINED_FUNCTION_0_64()
{
  return operator new();
}

void OUTLINED_FUNCTION_1_57()
{
  JUMPOUT(0x249599130);
}

uint64_t OUTLINED_FUNCTION_3_55(uint64_t result)
{
  *(_QWORD *)(result + 4104) = 0;
  *(_DWORD *)(result + 4112) = 0;
  *(_BYTE *)result = 0;
  *(_BYTE *)(result + 4144) = 0;
  return result;
}

void OUTLINED_FUNCTION_4_52()
{
  _Unwind_Exception *v0;

  _Unwind_Resume(v0);
}

uint64_t OUTLINED_FUNCTION_5_49(uint64_t result)
{
  *(_QWORD *)(result + 4104) = 0;
  *(_DWORD *)(result + 4112) = 0;
  *(_BYTE *)result = 0;
  *(_BYTE *)(result + 4144) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_9_46(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  return UserDict::proofCharacter(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_10_46()
{
  const char *v0;

  return chmod(v0, 0x180u);
}

uint64_t OUTLINED_FUNCTION_11_45()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(v1 + 208) + 112;
  return v0;
}

uint64_t OUTLINED_FUNCTION_12_43(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = a1;
  return hashIterRef(v2);
}

size_t OUTLINED_FUNCTION_13_42()
{
  const char *v0;

  return strlen(v0);
}

void OUTLINED_FUNCTION_14_41()
{
  int **v0;

  UserDict::~UserDict(v0);
}

void settvar_s(uint64_t a1, unsigned __int8 *a2, unsigned __int8 a3)
{
  void *v4;
  uint64_t v5;
  int v6;
  unsigned __int8 v7;

  v7 = a3;
  OUTLINED_FUNCTION_1_58();
  if (v6)
    v4 = OUTLINED_FUNCTION_8_48();
  OUTLINED_FUNCTION_7_49((uint64_t)v4, *a2, v5, &v7);
  OUTLINED_FUNCTION_6_50();
}

void settvar_l(uint64_t a1, unsigned __int8 *a2, __int16 a3)
{
  void *v4;
  uint64_t v5;
  int v6;
  __int16 v7;

  v7 = a3;
  OUTLINED_FUNCTION_1_58();
  if (v6)
    v4 = OUTLINED_FUNCTION_8_48();
  OUTLINED_FUNCTION_7_49((uint64_t)v4, *a2, v5, (unsigned __int8 *)&v7);
  OUTLINED_FUNCTION_6_50();
}

void settvar_lng(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v7 = a3;
  OUTLINED_FUNCTION_1_58();
  if (v6)
    v4 = OUTLINED_FUNCTION_8_48();
  OUTLINED_FUNCTION_7_49((uint64_t)v4, *a2, v5, (unsigned __int8 *)&v7);
  OUTLINED_FUNCTION_6_50();
}

void settvar_i(uint64_t a1, unsigned __int8 *a2, __int16 a3)
{
  void *v4;
  uint64_t v5;
  int v6;
  __int16 v7;

  v7 = a3;
  OUTLINED_FUNCTION_1_58();
  if (v6)
    v4 = OUTLINED_FUNCTION_8_48();
  OUTLINED_FUNCTION_7_49((uint64_t)v4, *a2, v5, (unsigned __int8 *)&v7);
  OUTLINED_FUNCTION_6_50();
}

void settvar_f(double a1, uint64_t a2, unsigned __int8 *a3)
{
  void *v4;
  uint64_t v5;
  int v6;
  double v7;

  v7 = a1;
  OUTLINED_FUNCTION_1_58();
  if (v6)
    v4 = OUTLINED_FUNCTION_8_48();
  OUTLINED_FUNCTION_7_49((uint64_t)v4, *a3, v5, (unsigned __int8 *)&v7);
  OUTLINED_FUNCTION_6_50();
}

void settvar_v(int a1, unsigned __int8 *a2, __int16 *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  unsigned __int8 *v15;

  OUTLINED_FUNCTION_1_58();
  if (v14)
    v6 = OUTLINED_FUNCTION_9_47();
  OUTLINED_FUNCTION_12_44((uint64_t)v6, v7, v8, v9, v10, v11, v12, v13, 0);
  vinitflds(a1, *a2, a2 + 16, v15);
  if ((*a3 & 0x80000000) == 0)
    OUTLINED_FUNCTION_16_41();
}

void copyvar(uint64_t a1, unsigned __int16 *a2, __int16 *a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15[2];
  void *v16[2];

  OUTLINED_FUNCTION_1_58();
  if (v6)
    OUTLINED_FUNCTION_9_47();
  v16[0] = 0;
  v16[1] = 0;
  v15[1] = 0;
  vinitloc_new(a1, (uint64_t)v16, a2);
  OUTLINED_FUNCTION_12_44(v7, v8, v9, v10, v11, v12, v13, v14, 0);
  vassign(a1, v16, v15);
  if (((__int16)*a2 & 0x80000000) == 0)
    a2[1] = -1;
  if ((*a3 & 0x80000000) == 0)
    OUTLINED_FUNCTION_16_41();
}

void c_assvar(uint64_t a1, unsigned __int16 *a2)
{
  uint64_t v3;
  int v4;

  OUTLINED_FUNCTION_1_58();
  if (v4)
    save_var(v3, a2);
  if (((__int16)*a2 & 0x80000000) == 0)
    OUTLINED_FUNCTION_16_41();
}

void assok(uint64_t a1, __int16 *a2)
{
  if ((*a2 & 0x80000000) == 0)
    a2[1] = -1;
}

void noass(uint64_t a1, __int16 *a2)
{
  if ((*a2 & 0x80000000) == 0)
    a2[1] = -1;
}

__n128 savescptr(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  __n128 result;

  v6 = *(_QWORD *)(a1 + 192);
  if (*(_BYTE *)(v6 + 8096))
  {
    OUTLINED_FUNCTION_9_47();
    v6 = *(_QWORD *)(a1 + 192);
  }
  *(_QWORD *)(a3 + 8) = *(_QWORD *)(v6 + 8080);
  v7 = *(_QWORD *)(a1 + 200);
  v8 = *(int *)(v7 + 288);
  v9 = *(_QWORD *)(v7 + 1720) - v8;
  v10 = *(_DWORD *)(v7 + 1728);
  *(_BYTE *)v9 = 3;
  *(_QWORD *)(v9 + 8) = a2;
  v11 = *(int *)(v7 + 284);
  v12 = v9 - v11;
  *(_QWORD *)(v7 + 1720) = v12;
  *(_DWORD *)(v7 + 1728) = v10 - (v8 + v11);
  *(_BYTE *)v12 = 1;
  result = *(__n128 *)(v6 + 8080);
  *(__n128 *)(v12 + 8) = result;
  return result;
}

uint64_t savetok(uint64_t a1, __int16 *a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v6;
  uint64_t result;
  unsigned __int8 *v8;
  const void *v9;
  uint64_t v10;
  void *v11[2];

  v11[0] = 0;
  v11[1] = 0;
  v10 = 0;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 192) + 8088) + 3;
  v4 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 8080) + 8 * v3) & 0xFFFFFFFFFFFFFFFCLL);
  if (!v4)
  {
LABEL_4:
    v6 = 1;
    result = 1;
    if (*a2 < 0)
      return result;
    goto LABEL_5;
  }
  while ((*v4 & 2) != 0)
  {
    v4 = (_BYTE *)(*(_QWORD *)&v4[8 * v3] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v4)
      goto LABEL_4;
  }
  OUTLINED_FUNCTION_14_42(a1, (uint64_t)a2);
  v8 = (unsigned __int8 *)(*(_QWORD *)(a1 + 192) + 8088);
  LOWORD(v10) = *v8;
  v9 = v4 + 16;
  BYTE2(v10) = 0;
  if (v8[8])
    vpush_var(a1, (uint64_t)v11);
  vassign(a1, v11, &v9);
  v6 = 0;
  result = 0;
  if ((*a2 & 0x80000000) == 0)
  {
LABEL_5:
    a2[1] = -1;
    return v6;
  }
  return result;
}

void dur_ass(uint64_t a1, char a2, __int16 *a3, int a4)
{
  unint64_t *v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  const void *v12[2];
  void *v13[2];

  v6 = (unint64_t *)(a1 + 112);
  v7 = (unint64_t *)(a1 + 144);
  v8 = a2;
  v9 = vrange_2pt(a1, (unint64_t *)(a1 + 112), a1 + 144, v8, a4);
  if ((_DWORD)v9)
  {
    if (*a3 < 0)
      return;
  }
  else
  {
    v12[0] = 0;
    v12[1] = 0;
    v11 = 0;
    v13[0] = &v11;
    v13[1] = (void *)65533;
    OUTLINED_FUNCTION_14_42(v9, v10);
    vassign(a1, v13, v12);
    vdur_ass(a1, v6, v7, v8, v11);
    if (*a3 < 0)
      return;
  }
  OUTLINED_FUNCTION_16_41();
}

void setscan_l(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;

  if (!OUTLINED_FUNCTION_2_56(a1))
  {
    if (*v1)
    {
      OUTLINED_FUNCTION_4_53();
      if ((v3 & 1) != 0)
        OUTLINED_FUNCTION_11_46(v2);
    }
  }
  OUTLINED_FUNCTION_0_65();
}

uint64_t vtstsnc_tv(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t result;

  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    v3 = vnormalize(a1, a2);
    result = 1;
    if (v3 < 3)
      return result;
    *(_BYTE *)(a2 + 24) = 1;
  }
  return 0;
}

void setscan_r(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;

  if (!OUTLINED_FUNCTION_2_56(a1))
  {
    if (*v1)
    {
      OUTLINED_FUNCTION_4_53();
      if ((v3 & 1) != 0)
        OUTLINED_FUNCTION_10_47(v2);
    }
  }
  OUTLINED_FUNCTION_0_65();
}

void lpta_loadp_setscan_l(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;

  if (!OUTLINED_FUNCTION_3_56(a1, a2))
  {
    if (*v2)
    {
      OUTLINED_FUNCTION_4_53();
      if ((v4 & 1) != 0)
        OUTLINED_FUNCTION_11_46(v3);
    }
  }
  OUTLINED_FUNCTION_0_65();
}

void lpta_loadp_setscan_r(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;

  if (!OUTLINED_FUNCTION_3_56(a1, a2))
  {
    if (*v2)
    {
      OUTLINED_FUNCTION_4_53();
      if ((v4 & 1) != 0)
        OUTLINED_FUNCTION_10_47(v3);
    }
  }
  OUTLINED_FUNCTION_0_65();
}

void rpta_loadp_setscan_l(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_5_50(a1, a2))
  {
    if (*v2)
    {
      OUTLINED_FUNCTION_17_41();
      if ((v4 & 1) != 0)
      {
        OUTLINED_FUNCTION_13_43(v3);
        *(_WORD *)(v5 + 1) = 256;
      }
    }
  }
  OUTLINED_FUNCTION_0_65();
}

void rpta_loadp_setscan_r(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_5_50(a1, a2))
  {
    if (*v2)
    {
      OUTLINED_FUNCTION_17_41();
      if ((v4 & 1) != 0)
      {
        OUTLINED_FUNCTION_13_43(v3);
        *(_WORD *)(v5 + 1) = 257;
      }
    }
  }
  OUTLINED_FUNCTION_0_65();
}

void setscan_nof_l(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  if (!OUTLINED_FUNCTION_2_56(a1))
  {
    if (*v1)
    {
      OUTLINED_FUNCTION_4_53();
      if ((v3 & 1) != 0)
      {
        OUTLINED_FUNCTION_15_41(v2);
        *(_WORD *)(v4 + 1) = 0;
      }
    }
  }
  OUTLINED_FUNCTION_0_65();
}

void setscan_nof_r(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  __int16 v4;
  uint64_t v5;

  if (!OUTLINED_FUNCTION_2_56(a1))
  {
    if (*v1)
    {
      OUTLINED_FUNCTION_4_53();
      if ((v3 & 1) != 0)
      {
        OUTLINED_FUNCTION_15_41(v2);
        *(_WORD *)(v5 + 1) = v4;
      }
    }
  }
  OUTLINED_FUNCTION_0_65();
}

uint64_t OUTLINED_FUNCTION_2_56(uint64_t a1)
{
  return vtstsnc_tv(a1, a1 + 112);
}

uint64_t OUTLINED_FUNCTION_3_56(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 136) = 1;
  *(_QWORD *)(a1 + 128) = 0;
  return vtstsnc_tv(a1, a1 + 112);
}

uint64_t OUTLINED_FUNCTION_5_50(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 168) = 1;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 128) = 0;
  return vtstsnc_tv(a1, a1 + 112);
}

void *OUTLINED_FUNCTION_7_49(uint64_t a1, unsigned int a2, uint64_t a3, unsigned __int8 *a4)
{
  void *v4;
  int v5;

  return vinitflds(v5, a2, v4, a4);
}

void *OUTLINED_FUNCTION_8_48()
{
  unsigned __int16 *v0;
  uint64_t v1;

  return save_var(v1, v0);
}

void *OUTLINED_FUNCTION_9_47()
{
  unsigned __int16 *v0;
  uint64_t v1;

  return save_var(v1, v0);
}

void OUTLINED_FUNCTION_10_47(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(v1 + 8080) = a1;
  *(_BYTE *)(v1 + 8088) = v2;
  *(_WORD *)(v1 + 8089) = 257;
}

void OUTLINED_FUNCTION_11_46(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(v1 + 8080) = a1;
  *(_BYTE *)(v1 + 8088) = v2;
  *(_WORD *)(v1 + 8089) = 256;
}

void OUTLINED_FUNCTION_12_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int16 *v9;
  uint64_t v10;

  vinitloc_new(v10, (uint64_t)&a9, v9);
}

void OUTLINED_FUNCTION_13_43(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(v1 + 8080) = a1;
  *(_BYTE *)(v1 + 8088) = v2;
}

void OUTLINED_FUNCTION_14_42(uint64_t a1, uint64_t a2, ...)
{
  unsigned __int16 *v2;
  uint64_t v3;
  va_list va;

  va_start(va, a2);
  vinitloc_new(v3, (uint64_t)va, v2);
}

void OUTLINED_FUNCTION_15_41(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)(v1 + 8080) = a1;
  *(_BYTE *)(v1 + 8088) = v2;
}

void OUTLINED_FUNCTION_16_41()
{
  uint64_t v0;

  *(_WORD *)(v0 + 2) = -1;
}

void chstream(_QWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  while (1)
  {
    v6 = a1[24];
    if ((*(_QWORD *)(*(_QWORD *)(v6 + 8080) + 8 * (int)(*(_DWORD *)(v6 + 9084) + a3)) & 1) != 0)
      break;
    if (!OUTLINED_FUNCTION_33_32(a1))
      goto LABEL_5;
  }
  v7 = a1[25];
  v8 = *(int *)(v7 + 288);
  v9 = *(_QWORD *)(v7 + 1720) - v8;
  *(_BYTE *)v9 = 3;
  v10 = *(_DWORD *)(v7 + 1728);
  *(_QWORD *)(v9 + 8) = a2;
  v11 = *(int *)(v7 + 284);
  v12 = v9 - v11;
  *(_QWORD *)(v7 + 1720) = v12;
  *(_DWORD *)(v7 + 1728) = v10 - (v8 + v11);
  *(_BYTE *)v12 = 1;
  *(_OWORD *)(v12 + 8) = *(_OWORD *)(v6 + 8080);
  *(_BYTE *)(a1[35] + *(unsigned __int8 *)(a1[33] + a3)) = 1;
  *(_BYTE *)(a1[24] + 8088) = a3;
LABEL_5:
  OUTLINED_FUNCTION_19_39();
}

BOOL advanc(_QWORD *a1)
{
  return OUTLINED_FUNCTION_33_32(a1) == 0;
}

BOOL advance_tok()
{
  return vscanadvOverToken() == 0;
}

void conj_merge(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;

  v4 = *(_BYTE **)(a2 + 8);
  visleft(a1, *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8080), (unint64_t)v4);
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(_QWORD *)(v5 + 8080);
  if (v7)
  {
    v8 = (unsigned __int8 *)(v5 + 8088);
    while (v4 != (_BYTE *)v6)
    {
      if (!v4 || (*v4 & 2) == 0)
        goto LABEL_17;
      v4 = (_BYTE *)(*(_QWORD *)&v4[8 * *v8 + 24] & 0xFFFFFFFFFFFFFFFCLL);
    }
    if (!v8[1])
LABEL_16:
      *(_QWORD *)(a2 + 8) = v6;
  }
  else
  {
    visright(a1, v6, (uint64_t)v4);
    v9 = *(_QWORD *)(a1 + 192);
    v6 = *(_QWORD *)(v9 + 8080);
    if (v10)
    {
      while (v4 != (_BYTE *)v6)
      {
        if (!v4 || (*v4 & 2) == 0)
          goto LABEL_17;
        v4 = (_BYTE *)(*(_QWORD *)&v4[8 * *(_DWORD *)(v9 + 9084) + 8 * *(unsigned __int8 *)(v9 + 8088)] & 0xFFFFFFFFFFFFFFFCLL);
      }
      if (*(_BYTE *)(v9 + 8089) == 1)
        goto LABEL_16;
    }
  }
LABEL_17:
  OUTLINED_FUNCTION_19_39();
}

uint64_t addfence(uint64_t a1, char a2)
{
  return SETFENCE(a1, *(_QWORD *)(a1 + 112), a2);
}

uint64_t remfence(uint64_t a1, char a2)
{
  return UNSETFENCE(a1, *(_QWORD *)(a1 + 112), a2);
}

void proj_def_mult(uint64_t a1, unsigned int a2, unsigned __int8 *a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;

  v7 = a2;
  if (a2)
  {
    do
    {
      *(_BYTE *)(a1 + 136) = 1;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a4 + 8);
      *(_QWORD *)(a1 + 128) = 0;
      v8 = *a3++;
      proj_def(a1, v8);
      --v7;
    }
    while (v7);
  }
}

void proj_def(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  int v4;
  int v5;

  OUTLINED_FUNCTION_13_44(a1);
  if (!v4 || (vdef_proj(v2, *(_QWORD *)(v2 + 112), a2), !v5))
    OUTLINED_FUNCTION_5_51(v2);
  OUTLINED_FUNCTION_29_33();
}

void proj_l(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  vsync_tv(a1, a1 + 144);
  if (!v2 || (v3 = OUTLINED_FUNCTION_34_31(), vproj_l(v3, v4, v5, v6), !v7))
    OUTLINED_FUNCTION_5_51(a1);
  OUTLINED_FUNCTION_29_33();
}

void proj_r(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;

  OUTLINED_FUNCTION_13_44(a1);
  if (!v2 || (v3 = OUTLINED_FUNCTION_34_31(), vproj_r(v3, v4, v5, v6), !v7))
    OUTLINED_FUNCTION_5_51(v1);
  OUTLINED_FUNCTION_29_33();
}

void merge(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;

  OUTLINED_FUNCTION_13_44(a1);
  if (!v2 || (vsync_tv(v1, v1 + 144), !v3))
    OUTLINED_FUNCTION_31_32();
  if (!vmergable(v1, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 144)))
    OUTLINED_FUNCTION_31_32();
  vmerge(v1, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 144));
}

uint64_t initdelta(uint64_t a1, unsigned int a2, char *a3)
{
  unsigned int i;
  int v6;
  uint64_t v8;
  int v9;

  if (a2)
  {
    if (*(unsigned __int8 *)(a1 + 288) == a2)
    {
      freeDeltaHeapTo(a1, *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8), 0);
      deltaReinit(a1, 1);
    }
    else
    {
      v8 = a2;
      do
      {
        vinit_stm(a1, *a3);
        if (!v9)
          OUTLINED_FUNCTION_31_32();
        --v8;
        ++a3;
      }
      while (v8);
    }
  }
  else
  {
    for (i = 0; i < *(unsigned __int8 *)(a1 + 288); ++i)
    {
      vinit_stm(a1, (char)i);
      if (!v6)
        OUTLINED_FUNCTION_31_32();
    }
  }
  return vscaninit(a1);
}

void delete_1pt(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  int v4;

  OUTLINED_FUNCTION_13_44(a1);
  if (!v4 || !vdel_1pt(v2, a2, *(_QWORD *)(v2 + 112)))
    OUTLINED_FUNCTION_5_51(v2);
  OUTLINED_FUNCTION_29_33();
}

uint64_t delete_2pt(uint64_t a1, char a2, int a3)
{
  if (vrange_2pt(a1, (unint64_t *)(a1 + 112), a1 + 144, a2, a3))
    return 1;
  vdel_2pt((uint64_t *)a1, a2, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 144));
  return 0;
}

void mark_v(uint64_t a1, char a2, uint64_t a3, __int16 *a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v8 = a3;
  if (OUTLINED_FUNCTION_14_43(a1, a2, a3, (uint64_t)a4, a5))
  {
    if ((*a4 & 0x80000000) == 0)
LABEL_3:
      a4[1] = -1;
  }
  else
  {
    v25 = 0;
    v26 = 0;
    OUTLINED_FUNCTION_9_48(v6, (uint64_t)&v25);
    if ((unsigned __int16)v26 == *(unsigned __int16 *)&vstmtbl[12 * v5 + 1][40 * v8 + 30])
    {
      v17 = OUTLINED_FUNCTION_10_48(v9, v10, v11, v12, v13, v14, v15, v16, v25);
      if ((unsigned __int16)v26 >= 0xFFFAu)
        OUTLINED_FUNCTION_10_48(v17, v18, v19, v20, v21, v22, v23, v24, v25);
    }
    if ((*a4 & 0x80000000) == 0)
      goto LABEL_3;
  }
  OUTLINED_FUNCTION_2_57();
}

void mark_s()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;

  OUTLINED_FUNCTION_28_33();
  v10 = v1;
  if (!OUTLINED_FUNCTION_6_51(v2, v3, v4, v1, v5))
  {
    OUTLINED_FUNCTION_0_66();
    if (v9 == -1)
      OUTLINED_FUNCTION_4_54(v6, v7, v8, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 144), (uint64_t)&v10);
  }
  OUTLINED_FUNCTION_2_57();
}

void mark_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;

  v10 = a4;
  if (!OUTLINED_FUNCTION_6_51(a1, a2, a3, a4, a5))
  {
    OUTLINED_FUNCTION_0_66();
    if (v9 == -2)
      OUTLINED_FUNCTION_4_54(v6, v7, v8, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 144), (uint64_t)&v10);
  }
  OUTLINED_FUNCTION_2_57();
}

void mark_lng()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  OUTLINED_FUNCTION_28_33();
  v10 = v1;
  if (!OUTLINED_FUNCTION_6_51(v2, v3, v4, v1, v5))
  {
    OUTLINED_FUNCTION_0_66();
    if (v9 == -3)
      OUTLINED_FUNCTION_4_54(v6, v7, v8, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 144), (uint64_t)&v10);
  }
  OUTLINED_FUNCTION_2_57();
}

void mark_i(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  __int16 v10;

  v10 = a4;
  if (!OUTLINED_FUNCTION_6_51(a1, a2, a3, a4, a5))
  {
    OUTLINED_FUNCTION_0_66();
    if (v9 == -4)
      OUTLINED_FUNCTION_4_54(v6, v7, v8, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 144), (uint64_t)&v10);
  }
  OUTLINED_FUNCTION_2_57();
}

void mark_f()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;

  OUTLINED_FUNCTION_28_33();
  v11 = v1;
  if (!OUTLINED_FUNCTION_6_51(v2, v3, v4, v5, v6))
  {
    OUTLINED_FUNCTION_0_66();
    if (v10 == -5)
      OUTLINED_FUNCTION_4_54(v7, v8, v9, *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 144), (uint64_t)&v11);
  }
  OUTLINED_FUNCTION_2_57();
}

void insert_2pt(uint64_t a1, char a2, uint64_t a3, _BYTE *a4, int a5)
{
  unsigned int v5;
  uint64_t *v6;
  int v8;

  v8 = a3;
  if (!OUTLINED_FUNCTION_14_43(a1, a2, a3, (uint64_t)a4, a5))
  {
    visnonseq((uint64_t)v6, v5, v6[14], v6[18]);
    ins_tokens(v6, v5, a4, v8);
  }
  OUTLINED_FUNCTION_19_39();
}

void insert_2ptv()
{
  __int16 *v0;
  int v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE v38[3];

  OUTLINED_FUNCTION_11_47();
  if (vrange_2pt(v2, v3, v4, v5, v6))
  {
    if ((*v0 & 0x80000000) == 0)
LABEL_3:
      OUTLINED_FUNCTION_22_36();
  }
  else
  {
    OUTLINED_FUNCTION_27_33();
    if (v1 < 0 && (v7 = OUTLINED_FUNCTION_16_42(), v1 != (_DWORD)v7))
    {
      OUTLINED_FUNCTION_16_42();
      OUTLINED_FUNCTION_23_36();
      if (!(!v23 & v22))
        __asm { BR              X10 }
      OUTLINED_FUNCTION_1_59((uint64_t)vstmtbl, v32, v34, v36, *(__int16 *)v38, v38[2]);
      OUTLINED_FUNCTION_12_45(v24, v25, v26, v27, v28, v29, v30, v31, v33, v35, v37);
      OUTLINED_FUNCTION_25_35();
    }
    else
    {
      OUTLINED_FUNCTION_3_57(v7, v8, v9, v10, v11, v12, v13, v14, v32);
      OUTLINED_FUNCTION_24_35();
    }
    OUTLINED_FUNCTION_20_38(v15, v16, v17, v18, v19);
    if (!v20)
      OUTLINED_FUNCTION_15_42();
    if ((*v0 & 0x80000000) == 0)
      goto LABEL_3;
  }
}

void insert_l()
{
  uint64_t v0;
  int v1;
  int v2;

  OUTLINED_FUNCTION_32_32();
  vrange_l();
  if (!v1 || (OUTLINED_FUNCTION_18_39(), !v2))
    OUTLINED_FUNCTION_7_50(v0);
  OUTLINED_FUNCTION_8_49();
}

void insert_r()
{
  uint64_t v0;
  int v1;
  int v2;

  OUTLINED_FUNCTION_32_32();
  vrange_r();
  if (!v1 || (OUTLINED_FUNCTION_18_39(), !v2))
    OUTLINED_FUNCTION_7_50(v0);
  OUTLINED_FUNCTION_8_49();
}

void insert_lv(uint64_t a1, uint64_t a2, __int16 *a3)
{
  int v3;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  _BYTE v37[3];

  vrange_l();
  if (!v5)
    OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_27_33();
  if (v3 < 0 && (v6 = OUTLINED_FUNCTION_16_42(), v3 != (_DWORD)v6))
  {
    OUTLINED_FUNCTION_16_42();
    OUTLINED_FUNCTION_23_36();
    if (!(!v22 & v21))
      __asm { BR              X10 }
    OUTLINED_FUNCTION_1_59((uint64_t)vstmtbl, v31, v33, v35, *(__int16 *)v37, v37[2]);
    OUTLINED_FUNCTION_12_45(v23, v24, v25, v26, v27, v28, v29, v30, v32, v34, v36);
    OUTLINED_FUNCTION_25_35();
  }
  else
  {
    OUTLINED_FUNCTION_3_57(v6, v7, v8, v9, v10, v11, v12, v13, v31);
    OUTLINED_FUNCTION_24_35();
  }
  OUTLINED_FUNCTION_20_38(v14, v15, v16, v17, v18);
  if (!v19)
    OUTLINED_FUNCTION_15_42();
  if ((*a3 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_36();
  OUTLINED_FUNCTION_21_37();
}

void insert_rv()
{
  __int16 *v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v18;
  char v19;
  uint64_t v20;

  OUTLINED_FUNCTION_11_47();
  vrange_r();
  if (!v2)
    OUTLINED_FUNCTION_15_42();
  OUTLINED_FUNCTION_27_33();
  if (v1 < 0)
  {
    v3 = OUTLINED_FUNCTION_16_42();
    if (v1 != (_DWORD)v3)
    {
      OUTLINED_FUNCTION_16_42();
      OUTLINED_FUNCTION_23_36();
      if (!(!v19 & v18))
        __asm { BR              X10 }
      OUTLINED_FUNCTION_15_42();
    }
  }
  OUTLINED_FUNCTION_3_57(v3, v4, v5, v6, v7, v8, v9, v10, v20);
  OUTLINED_FUNCTION_24_35();
  OUTLINED_FUNCTION_20_38(v11, v12, v13, v14, v15);
  if (!v16)
    OUTLINED_FUNCTION_15_42();
  if ((*v0 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_36();
  OUTLINED_FUNCTION_21_37();
}

void generate(uint64_t a1, int a2)
{
  uint64_t v4;
  unint64_t *v5;
  int v6;

  v4 = a1 + 112;
  v5 = (unint64_t *)(a1 + 144);
  vprt_range(a1, a1 + 112, a1 + 144);
  if (!v6 || !vgen(a1, v4, v5, *(_QWORD *)(a1 + 192) + 8160, a2))
    OUTLINED_FUNCTION_7_50(a1);
  OUTLINED_FUNCTION_8_49();
}

void gendef_framedur()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  const void *v12;

  OUTLINED_FUNCTION_37_31();
  v11 = (void *)(v0 + 8128);
  OUTLINED_FUNCTION_9_48(v1, (uint64_t)&v12);
  OUTLINED_FUNCTION_30_32(v2, v3, v4, v5, v6, v7, v8, v9, v11, 65533, v12);
  OUTLINED_FUNCTION_35_31();
  if ((v10 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_36();
  OUTLINED_FUNCTION_26_35();
}

void gendef_timestm(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_42(a2, *(_QWORD *)(a1 + 192));
}

void gendef_params(uint64_t a1, char a2, unsigned int a3)
{
  unsigned int v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = a3;
  v4 = *(_QWORD *)(a1 + 192);
  *(_BYTE *)(v4 + 8137) = a2;
  if ((*(_BYTE *)(v4 + 8152) & 4) != 0)
  {
    v5 = *(_QWORD **)(v4 + 8144);
  }
  else
  {
    v5 = dynaBufNew(a3);
    *(_QWORD *)(v4 + 8144) = v5;
  }
  dynaBufReset((uint64_t)v5);
  for (; v3; --v3)
    OUTLINED_FUNCTION_36_31(*(uint64_t **)(v4 + 8144));
  *(_BYTE *)(v4 + 8152) |= 4u;
  OUTLINED_FUNCTION_8_49();
}

void gencur_framedur()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  const void *v12;

  OUTLINED_FUNCTION_37_31();
  v11 = (void *)(v0 + 8160);
  OUTLINED_FUNCTION_9_48(v1, (uint64_t)&v12);
  OUTLINED_FUNCTION_30_32(v2, v3, v4, v5, v6, v7, v8, v9, v11, 65533, v12);
  OUTLINED_FUNCTION_35_31();
  if ((v10 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_36();
  OUTLINED_FUNCTION_26_35();
}

void gencur_timestm(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_42(a2, *(_QWORD *)(a1 + 192));
}

void gencur_params(uint64_t a1, char a2, unsigned int a3)
{
  unsigned int v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = a3;
  v4 = *(_QWORD *)(a1 + 192);
  *(_BYTE *)(v4 + 8169) = a2;
  if ((*(_BYTE *)(v4 + 8184) & 4) != 0)
  {
    v5 = *(_QWORD **)(v4 + 8176);
  }
  else
  {
    v5 = dynaBufNew(a3);
    *(_QWORD *)(v4 + 8176) = v5;
  }
  dynaBufReset((uint64_t)v5);
  for (; v3; --v3)
    OUTLINED_FUNCTION_36_31(*(uint64_t **)(v4 + 8176));
  *(_BYTE *)(v4 + 8184) |= 4u;
  OUTLINED_FUNCTION_8_49();
}

void OUTLINED_FUNCTION_1_59(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, char a6)
{
  unsigned __int16 *v6;
  uint64_t v7;
  unsigned int v8;

  a6 = *(_BYTE *)(*(_QWORD *)(a1 + 96 * v8 + 8) + 32);
  vinitloc_new(v7, (uint64_t)&a2, v6);
}

void OUTLINED_FUNCTION_3_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int16 *v9;
  uint64_t v10;

  vinitloc_new(v10, (uint64_t)&a9, v9);
}

uint64_t OUTLINED_FUNCTION_4_54(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v6;
  unsigned int v7;
  uint64_t *v8;

  return vmark(v8, v7, v6, a4, a5, a6);
}

void OUTLINED_FUNCTION_5_51(uint64_t a1)
{
  forceErrorBacktrack(a1);
}

uint64_t OUTLINED_FUNCTION_6_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char v5;

  return vrange_2pt(a1, (unint64_t *)(a1 + 112), a1 + 144, v5, a5);
}

void OUTLINED_FUNCTION_7_50(uint64_t a1)
{
  forceErrorBacktrack(a1);
}

void OUTLINED_FUNCTION_9_48(uint64_t a1, uint64_t a2)
{
  unsigned __int16 *v2;

  vinitloc_new(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_10_48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 v9;
  unsigned int v10;
  uint64_t v11;

  return vmark((uint64_t *)v11, v10, v9, *(_QWORD *)(v11 + 112), *(_QWORD *)(v11 + 144), a9);
}

void OUTLINED_FUNCTION_12_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9, uint64_t a10, void *a11)
{
  uint64_t v11;

  vassign(v11, &a11, &a9);
}

void OUTLINED_FUNCTION_13_44(uint64_t a1)
{
  vsync_tv(a1, a1 + 112);
}

uint64_t OUTLINED_FUNCTION_14_43(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  return vrange_2pt(a1, (unint64_t *)(a1 + 112), a1 + 144, a2, a5);
}

void OUTLINED_FUNCTION_15_42()
{
  uint64_t v0;

  forceErrorBacktrack(v0);
}

uint64_t OUTLINED_FUNCTION_16_42()
{
  int v0;

  return STMTYP(v0);
}

void OUTLINED_FUNCTION_17_42(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _BYTE *v3;

  v3 = (_BYTE *)(a2 + v2);
  *v3 = a1;
  v3[16] |= 2u;
}

void OUTLINED_FUNCTION_18_39()
{
  uint64_t *v0;
  _BYTE *v1;
  int v2;
  unsigned int v3;

  ins_tokens(v0, v3, v1, v2);
}

void OUTLINED_FUNCTION_20_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  unsigned int v6;

  vins_tok(v5, v6, a3, a4, a5);
}

void OUTLINED_FUNCTION_22_36()
{
  uint64_t v0;

  *(_WORD *)(v0 + 2) = -1;
}

void OUTLINED_FUNCTION_30_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, const void *a11)
{
  uint64_t v11;

  vassign(v11, &a9, &a11);
}

void OUTLINED_FUNCTION_31_32()
{
  uint64_t v0;

  forceErrorBacktrack(v0);
}

uint64_t OUTLINED_FUNCTION_33_32(_QWORD *a1)
{
  return vscanadv(a1, 0, 1);
}

uint64_t OUTLINED_FUNCTION_34_31()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_35_31()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 24) |= 1u;
}

void OUTLINED_FUNCTION_36_31(uint64_t *a1)
{
  char *v1;

  dynaBufAddChar(a1, *v1, 0);
}

uint64_t ccode_new(uint64_t a1)
{
  void *v2;

  v2 = malloc_type_malloc(0x2460uLL, 0x10F004041F5ADEFuLL);
  *(_QWORD *)(a1 + 192) = v2;
  bzero(v2, 0x2460uLL);
  return ccode_misc_new(a1);
}

void ccode_delete(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    v2 = *(void **)(a1 + 192);
    if (v2)
    {
      bzero(v2, 0x2460uLL);
      free(*(void **)(a1 + 192));
      *(_QWORD *)(a1 + 192) = 0;
    }
  }
}

uint64_t throwDeltaErrorNow(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 192) + 8012) = 1;
  return result;
}

uint64_t catchDeltaError(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 192) + 8012) = 0;
  return result;
}

uint64_t deltaErrorThrown(uint64_t a1)
{
  return *(unsigned __int8 *)(*(_QWORD *)(a1 + 192) + 8012);
}

void forceErrorBacktrack(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 192);
  *(_BYTE *)(v1 + 8012) = 1;
  longjmp(*(int **)(v1 + 8016), 1);
}

void get_parm(uint64_t a1, uint64_t a2, __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int *v10;
  uint64_t v11;
  int v12;
  double v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  __int16 *v18;
  _WORD *v19;
  __int16 *v20;

  *(_WORD *)a2 = a4;
  switch((__int16)a4)
  {
    case -6:
      *(_QWORD *)(a2 + 8) = *((_QWORD *)a3 + 1);
      v10 = *(int **)(a1 + 192);
      v11 = *v10;
      if ((int)v11 <= 998)
      {
        *v10 = v11 + 1;
        *(_QWORD *)&v10[2 * v11 + 2] = a2;
      }
      return;
    case -5:
      v12 = *a3;
      switch(v12)
      {
        case -5:
          v13 = OUTLINED_FUNCTION_4_55();
          goto LABEL_18;
        case -4:
          v13 = (double)a3[1];
          goto LABEL_18;
        case -3:
          v13 = (double)COERCE__INT64(OUTLINED_FUNCTION_4_55());
LABEL_18:
          *(double *)(a2 + 8) = v13;
          return;
      }
      if ((v12 & 0x80000000) == 0)
      {
        OUTLINED_FUNCTION_2_58(a1, a2, (uint64_t)a3, a4, a5, a6, a7, a8, 0);
        *(double *)(a2 + 8) = (double)*v18;
        goto LABEL_31;
      }
      return;
    case -4:
      v14 = *a3;
      if (v14 == -5)
      {
        v17 = (int)OUTLINED_FUNCTION_4_55();
      }
      else
      {
        if (v14 != -4)
        {
          if (v14 == -3)
          {
            *(_WORD *)(a2 + 2) = *((_QWORD *)a3 + 1);
          }
          else if ((v14 & 0x80000000) == 0)
          {
            OUTLINED_FUNCTION_2_58(a1, a2, (uint64_t)a3, a4, a5, a6, a7, a8, 0);
            *(_WORD *)(a2 + 2) = *v19;
            goto LABEL_31;
          }
          return;
        }
        LOWORD(v17) = a3[1];
      }
      *(_WORD *)(a2 + 2) = v17;
      return;
    case -3:
      v15 = *a3;
      switch(v15)
      {
        case -5:
          v16 = (uint64_t)OUTLINED_FUNCTION_4_55();
          goto LABEL_28;
        case -4:
          v16 = a3[1];
          goto LABEL_28;
        case -3:
          v16 = *((_QWORD *)a3 + 1);
LABEL_28:
          *(_QWORD *)(a2 + 8) = v16;
          return;
      }
      if ((v15 & 0x80000000) == 0)
      {
        OUTLINED_FUNCTION_2_58(a1, a2, (uint64_t)a3, a4, a5, a6, a7, a8, 0);
        *(_QWORD *)(a2 + 8) = *v20;
LABEL_31:
        if ((*a3 & 0x80000000) == 0)
          a3[1] = -1;
      }
      return;
    default:
      return;
  }
}

void vinitloc_new(uint64_t a1, uint64_t a2, unsigned __int16 *a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  char v8;
  __int16 *v9;

  v5 = (__int16)*a3;
  if (v5 < 0)
  {
    *(_WORD *)(a2 + 8) = v5;
    switch(v5)
    {
      case -6:
      case -5:
      case -3:
        v9 = (__int16 *)(a3 + 4);
        goto LABEL_9;
      case -4:
        v9 = (__int16 *)(a3 + 1);
LABEL_9:
        v8 = 0;
        goto LABEL_10;
      default:
        v8 = 0;
        goto LABEL_11;
    }
  }
  v6 = (__int16)a3[1];
  if (v6 == -1)
  {
    v8 = 0;
    *(_WORD *)(a2 + 8) = v5;
    v9 = (__int16 *)(a3 + 8);
LABEL_10:
    *(_QWORD *)a2 = v9;
  }
  else
  {
    *(_QWORD *)a2 = (*(uint64_t (**)(__int16 *))&vstmtbl[12 * *a3 + 2][8 * v6])((__int16 *)a3 + 8);
    v7 = &vstmtbl[12 * (__int16)*a3 + 1][40 * (int)v6];
    *(_WORD *)(a2 + 8) = *((_WORD *)v7 + 15);
    v8 = v7[32];
  }
LABEL_11:
  *(_BYTE *)(a2 + 10) = v8;
}

uint64_t push_ptr_init(uint64_t a1, uint64_t a2)
{
  int *v2;
  uint64_t v3;

  *(_QWORD *)(a2 + 8) = 0;
  *(_WORD *)a2 = -6;
  v2 = *(int **)(a1 + 192);
  v3 = *v2;
  if ((int)v3 > 998)
    return 0;
  *v2 = v3 + 1;
  *(_QWORD *)&v2[2 * v3 + 2] = a2;
  return 1;
}

uint64_t set_saved_ptrs(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int *v6;
  int v7;
  int v8;
  uint64_t i;
  uint64_t v10;

  v3 = 0;
  v4 = 8 * (*(_DWORD *)(result + 16) & ~(*(int *)(result + 16) >> 31));
  while (v4 != v3)
  {
    v5 = *(_QWORD **)(*(_QWORD *)(result + 24) + v3);
    if (*v5 == a2)
      *v5 = a3;
    v3 += 8;
  }
  v6 = *(int **)(result + 192);
  v7 = v6[2002];
  v8 = *v6;
  while (v8 >= 1)
  {
    for (i = v7; i < v8; ++i)
    {
      v10 = *(_QWORD *)&v6[2 * i + 2];
      if (*(_QWORD *)(v10 + 8) == a2)
        *(_QWORD *)(v10 + 8) = a3;
    }
    v8 = v7 - 2;
    v7 = v6[2 * v7];
  }
  return result;
}

uint64_t for_loop_preamble(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 192);
  v6 = (_BYTE *)(v5 + 8088);
  *(_QWORD *)(v5 + 8056) = a3;
  *(_QWORD *)(v5 + 8064) = a2;
  *(_BYTE *)(v5 + 8096) = 0;
  *(_BYTE *)(a1 + 136) = 1;
  v7 = *(_QWORD *)(a5 + 8);
  *(_QWORD *)(a1 + 112) = v7;
  if (!v7 || (*(_QWORD *)(v7 + 8 * (*(_DWORD *)(v5 + 9084) + a4)) & 1) == 0)
    return 0;
  *(_QWORD *)(v5 + 8080) = v7;
  *v6 = a4;
  v8 = 1;
  v6[2] = 1;
  *(_BYTE *)(*(_QWORD *)(a1 + 280) + *(unsigned __int8 *)(*(_QWORD *)(a1 + 264) + a4)) = 1;
  return v8;
}

uint64_t vback(_QWORD *a1, int a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;

  if (*(_BYTE *)(a1[24] + 8012))
    return -1;
  while (2)
  {
    v5 = a1[25];
    v6 = *(_QWORD *)(v5 + 1720);
    switch(*(_BYTE *)v6)
    {
      case 0:
        OUTLINED_FUNCTION_0_67(v5);
        if (a2)
          continue;
        break;
      case 1:
        OUTLINED_FUNCTION_0_67(v5);
        *(_OWORD *)(a1[24] + 8080) = *(_OWORD *)(v6 + 8);
        continue;
      case 2:
        v7 = *(int *)(v5 + 280);
        v8 = *(int *)(v6 + 16);
        v9 = v7 + ((v8 - 1) | 3) + 1;
        *(_DWORD *)(v5 + 1728) += v9;
        *(_QWORD *)(v5 + 1720) = v6 + v9;
        memcpy(*(void **)(v6 + 8), (const void *)(v6 + v7), v8);
        continue;
      case 3:
        OUTLINED_FUNCTION_0_67(v5);
        if (a2 || !vscanadv(a1, 0, 1))
          continue;
        break;
      case 4:
        OUTLINED_FUNCTION_0_67(v5);
        a2 -= a2 > 0;
        continue;
      case 5:
        OUTLINED_FUNCTION_0_67(v5);
        *(_QWORD *)(v10 + 1760) = *(_QWORD *)(v6 + 8);
        continue;
      case 6:
        OUTLINED_FUNCTION_0_67(v5);
        ++a2;
        continue;
      default:
        return -1;
    }
    break;
  }
  return *(_QWORD *)(v6 + 8);
}

void vinitrun(int *a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = 0;
  *(_BYTE *)(*((_QWORD *)a1 + 24) + 8121) = 0;
  while (1)
  {
    v3 = *((unsigned __int8 *)a1 + 288);
    if (v2 >= v3)
      break;
    *(_BYTE *)(*((_QWORD *)a1 + 31) + v2) = 0;
    *(_BYTE *)(*((_QWORD *)a1 + 33) + v2) = *((_BYTE *)a1 + 288);
    *(_BYTE *)(*((_QWORD *)a1 + 35) + v2++) = 0;
  }
  *(_BYTE *)(*((_QWORD *)a1 + 35) + v3) = 0;
  v5 = *((_QWORD *)a1 + 24);
  v4 = (uint64_t *)*((_QWORD *)a1 + 25);
  v7 = *v4;
  v6 = v4[1];
  v8 = *((_QWORD *)a1 + 12);
  *(_QWORD *)(*((_QWORD *)a1 + 11) + 8) = v7;
  *(_QWORD *)(v8 + 8) = v6;
  *(_BYTE *)(v5 + 8152) = 0;
  *(_BYTE *)(v5 + 8184) = 0;
  *(_DWORD *)(v5 + 9296) = 0;
  v9 = *(unsigned __int8 *)(v5 + 8024);
  if (v9 == 255 || v9 == 249)
  {
    vdltinit((uint64_t)a1, 1);
    if (!v10)
      goto LABEL_11;
    v11 = (uint64_t *)*((_QWORD *)a1 + 25);
    v13 = *v11;
    v12 = v11[1];
    v14 = *((_QWORD *)a1 + 12);
    *(_QWORD *)(*((_QWORD *)a1 + 11) + 8) = v13;
    *(_QWORD *)(v14 + 8) = v12;
  }
  v15 = 0;
  v16 = 0;
  *(_DWORD *)(*((_QWORD *)a1 + 23) + 452) = 0;
  while (v16 < *a1)
  {
    OUTLINED_FUNCTION_1_60();
    ++v16;
    v15 += 16;
  }
LABEL_11:
  OUTLINED_FUNCTION_5_52();
}

void *save_var(uint64_t a1, unsigned __int16 *a2)
{
  _QWORD v4[2];

  v4[0] = 0;
  v4[1] = 0;
  vinitloc_new(a1, (uint64_t)v4, a2);
  return vpush_var(a1, (uint64_t)v4);
}

uint64_t ventproc(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)(a1 + 104) = 0;
  if (!a2)
    return 1;
  v7 = *(int **)(a1 + 192);
  v8 = *v7;
  if ((int)v8 > 998)
    return 1;
  result = 0;
  v10 = v7[2002];
  *v7 = v8 + 1;
  *(_QWORD *)&v7[2 * v8 + 2] = v10;
  v11 = *(_QWORD *)(a1 + 192);
  *(_DWORD *)(v11 + 8008) = *(_DWORD *)v11;
  *(_QWORD *)a2 = *(_QWORD *)(v11 + 8104);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v11 + 8056);
  v12 = *(_QWORD *)(a1 + 192);
  v13 = *(_QWORD *)(a1 + 200);
  *(_BYTE *)(a2 + 48) = *(_BYTE *)(v12 + 8096);
  v14 = *(_QWORD *)(v13 + 1720);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(v12 + 8112);
  *(_QWORD *)(a2 + 64) = v14;
  *(_QWORD *)(a2 + 72) = *(_QWORD *)(v13 + 1760);
  *(_BYTE *)(a2 + 80) = *(_BYTE *)(v12 + 8121);
  *(_QWORD *)(a2 + 88) = *(_QWORD *)(v12 + 8016);
  *(_OWORD *)(a2 + 96) = *(_OWORD *)(v12 + 8080);
  v15 = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(a2 + 112) = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(a2 + 128) = v15;
  v16 = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(a2 + 144) = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(a2 + 160) = v16;
  v17 = *(_QWORD *)(a1 + 192);
  v18 = *(_QWORD *)(a1 + 200);
  *(_BYTE *)(a2 + 176) = *(_BYTE *)(v17 + 8120);
  *(_BYTE *)(a2 + 177) = *(_BYTE *)(v18 + 272);
  v19 = *(int *)(v18 + 276);
  v20 = *(_QWORD *)(v18 + 1720) - v19;
  LODWORD(v14) = *(_DWORD *)(v18 + 1728);
  *(_QWORD *)(v18 + 1720) = v20;
  *(_DWORD *)(v18 + 1728) = v14 - v19;
  *(_BYTE *)v20 = 7;
  v21 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = a4;
  v22 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(v20 + 8) = a2;
  *(_QWORD *)(v20 + 16) = v22;
  *(_QWORD *)(a1 + 264) = a3;
  v23 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(v20 + 24) = v21;
  *(_QWORD *)(v20 + 32) = v23;
  *(_QWORD *)(a1 + 280) = a5;
  *(_QWORD *)(v17 + 8112) = v20;
  *(_QWORD *)(v17 + 8016) = a6;
  return result;
}

void vretproc(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 192);
  if (*(int *)v2 >= 1)
  {
    v3 = *(int *)(v2 + 8008) - 1;
    *(_DWORD *)v2 = v3;
    *(_DWORD *)(v2 + 8008) = *(_QWORD *)(v2 + 8 * v3 + 8);
  }
  v4 = *(_QWORD *)(v2 + 8112);
  v5 = *(unsigned __int8 *)(v4 + *(int *)(*(_QWORD *)(a1 + 200) + 276));
  freeDeltaStackTo(a1, v4);
  v6 = *(_QWORD *)(a1 + 192);
  v7 = *(_QWORD **)(*(_QWORD *)(a1 + 200) + 1720);
  v8 = v7[2];
  *(_QWORD *)(a1 + 248) = v7[3];
  v9 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)(a1 + 264) = v8;
  *(_QWORD *)(a1 + 280) = v7[4];
  *(_QWORD *)(v6 + 8104) = *(_QWORD *)v9;
  *(_OWORD *)(v6 + 8056) = *(_OWORD *)(v9 + 32);
  v10 = *(_QWORD *)(a1 + 192);
  *(_BYTE *)(v10 + 8096) = *(_BYTE *)(v9 + 48);
  v11 = *(_QWORD *)(v9 + 64);
  *(_QWORD *)(v10 + 8112) = *(_QWORD *)(v9 + 56);
  freeDeltaStackTo(a1, v11);
  v12 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 1760) = *(_QWORD *)(v9 + 72);
  *(_BYTE *)(v12 + 8121) = *(_BYTE *)(v9 + 80);
  *(_QWORD *)(v12 + 8016) = *(_QWORD *)(v9 + 88);
  *(_OWORD *)(v12 + 8080) = *(_OWORD *)(v9 + 96);
  v13 = *(_OWORD *)(v9 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(v9 + 112);
  *(_OWORD *)(a1 + 128) = v13;
  v14 = *(_OWORD *)(v9 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(v9 + 144);
  *(_OWORD *)(a1 + 160) = v14;
  v15 = *(_QWORD *)(a1 + 192);
  v16 = *(_QWORD *)(a1 + 200);
  *(_BYTE *)(v15 + 8120) = *(_BYTE *)(v9 + 176);
  *(_BYTE *)(v16 + 272) = *(_BYTE *)(v9 + 177);
  *(_DWORD *)(v15 + 9296) = 0;
  if (v5 == 8)
  {
    *(_DWORD *)(*(_QWORD *)(a1 + 184) + 432) = 234;
  }
  else if (*(_BYTE *)(v15 + 8012))
  {
    forceErrorBacktrack(a1);
  }
  OUTLINED_FUNCTION_5_52();
}

uint64_t freeDeltaStackTo(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 200);
  v3 = *(_QWORD *)(v2 + 1744);
  if (v3)
  {
    *(_QWORD *)(v2 + 1720) = a2;
    *(_DWORD *)(v2 + 1728) = *(_DWORD *)(v2 + 1780) + a2 - *(_DWORD *)(v3 + 32);
  }
  return result;
}

void vprt_var(uint64_t a1, int a2, __int16 *a3)
{
  uint64_t v5;
  const char *v6;
  int v7;
  char __s1[80];
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  switch(*a3)
  {
    case -6:
      v5 = *((_QWORD *)a3 + 1);
      if (v5 == 1)
      {
        v6 = "dangling";
      }
      else
      {
        if (v5)
        {
          absoluteSyncNum(a1, v5);
          goto LABEL_13;
        }
        v6 = "NULL";
      }
      vf_puts(a1, a2, (uint64_t)v6, 1);
      return;
    case -5:
      __sprintf_chk(__s1, 0, 0x50uLL, "%f");
      goto LABEL_14;
    case -4:
LABEL_13:
      __sprintf_chk(__s1, 0, 0x50uLL, "%d");
      goto LABEL_14;
    case -3:
      __sprintf_chk(__s1, 0, 0x50uLL, "%ld");
      goto LABEL_14;
    default:
      v7 = a3[1];
      if (v7 == 255)
        return;
      disptok(a1, (_DWORD)a3 + 16, *a3, v7, __s1);
      if (__s1[0] == 92)
        cleanLiteral((unsigned __int8 *)__s1, 0, 0);
LABEL_14:
      vf_puts(a1, a2, (uint64_t)__s1, 1);
      return;
  }
}

void initGlobalVars(int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = 0;
  v3 = 8 * (a1[4] & ~(a1[4] >> 31));
  while (v3 != v2)
    OUTLINED_FUNCTION_3_58(v2);
  v4 = 0;
  for (i = 0; i < *a1; ++i)
  {
    OUTLINED_FUNCTION_1_60();
    v4 += 16;
  }
  v6 = 0;
  v7 = 8 * (a1[1] & ~(a1[1] >> 31));
  while (v7 != v6)
    OUTLINED_FUNCTION_3_58(v6);
  v8 = 0;
  v9 = 8 * (a1[2] & ~(a1[2] >> 31));
  while (v9 != v8)
  {
    **(_WORD **)(*((_QWORD *)a1 + 6) + v8) = 0;
    v8 += 8;
  }
  v10 = 0;
  v11 = 8 * (a1[3] & ~(a1[3] >> 31));
  while (v11 != v10)
    OUTLINED_FUNCTION_3_58(v10);
}

void runtime_new(uint64_t a1)
{
  if (a1)
  {
    init_new(a1);
    ccode_new(a1);
    delta_lib_new(a1);
    dlang_new(a1);
    logio_new(a1);
    eloqc_new(a1);
  }
}

double runtime_delete(uint64_t a1)
{
  double result;

  if (a1)
  {
    init_delete(a1);
    ccode_delete(a1);
    delta_lib_delete(a1);
    dlang_delete(a1);
    logio_delete(a1);
    eloqc_delete(a1);
    result = 0.0;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
  }
  return result;
}

void OUTLINED_FUNCTION_0_67(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(a1 + 1728) += v1;
  *(_QWORD *)(a1 + 1720) = v2 + v1;
}

void OUTLINED_FUNCTION_1_60()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  _WORD *v4;
  size_t v5;

  v3 = *(_QWORD *)(v0 + 32) + v1;
  v4 = *(_WORD **)v3;
  v5 = *(int *)(v3 + 12);
  *v4 = *(_DWORD *)(v3 + 8);
  v4[1] = v2;
  bzero(v4 + 8, v5);
}

void OUTLINED_FUNCTION_2_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int16 *v9;

  vinitloc_new(a1, (uint64_t)&a9, v9);
}

void OUTLINED_FUNCTION_3_58(uint64_t a1@<X8>)
{
  uint64_t v1;

  **(_QWORD **)(v1 + a1) = 0;
}

double OUTLINED_FUNCTION_4_55()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t startloop(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8064) = a2;
  result = clearDeltaStackBack(a1);
  *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8096) = 0;
  return result;
}

uint64_t clearDeltaStackBack(uint64_t a1)
{
  _BYTE *v1;

  v1 = *(_BYTE **)(*(_QWORD *)(a1 + 200) + 1760);
  if (*v1 == 8)
    v1 = *(_BYTE **)(*(_QWORD *)(a1 + 192) + 8112);
  return freeDeltaStackTo_0(a1, (uint64_t)v1);
}

void forall_adv_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  if (OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6))
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = 0;
    if (OUTLINED_FUNCTION_2_59())
    {
      clearDeltaStackBack(v6);
      v7 = *(_QWORD *)(v6 + 192);
      *(_DWORD *)(*(_QWORD *)(v6 + 200) + 256) = 0;
      *(_BYTE *)(v7 + 8096) = 1;
      OUTLINED_FUNCTION_3_59();
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forall_adv_upto_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  _BYTE *v7;
  char v8;
  _BYTE *v9;

  if (OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6))
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = 0;
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_7_51();
    if (!v8 && (*v7 & 2) == 0)
    {
      if (OUTLINED_FUNCTION_2_59())
      {
        OUTLINED_FUNCTION_9_49();
        OUTLINED_FUNCTION_7_51();
        if (!v8 && (*v9 & 2) == 0)
          OUTLINED_FUNCTION_0_68();
      }
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forall_adv_over_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  _BYTE *v7;
  char v8;
  uint64_t v9;

  if (OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6))
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = 0;
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_7_51();
    if (!v8 && (*v7 & 2) == 0 && OUTLINED_FUNCTION_2_59())
    {
      clearDeltaStackBack(v6);
      v9 = *(_QWORD *)(v6 + 192);
      *(_DWORD *)(*(_QWORD *)(v6 + 200) + 256) = 0;
      *(_BYTE *)(v9 + 8096) = 1;
      OUTLINED_FUNCTION_3_59();
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forall_adv_r(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  int v8;

  OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6);
  v7 = OUTLINED_FUNCTION_17_43();
  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = v7;
    if (OUTLINED_FUNCTION_2_59())
      OUTLINED_FUNCTION_0_68();
  }
  OUTLINED_FUNCTION_4_56();
}

void forall_adv_upto_r(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  int v8;
  _BYTE *v9;
  char v10;
  _BYTE *v11;

  OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6);
  v7 = OUTLINED_FUNCTION_17_43();
  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = v7;
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_5_53();
    if (!v10 && (*v9 & 2) == 0)
    {
      if (OUTLINED_FUNCTION_2_59())
      {
        OUTLINED_FUNCTION_9_49();
        OUTLINED_FUNCTION_5_53();
        if (!v10 && (*v11 & 2) == 0)
          OUTLINED_FUNCTION_0_68();
      }
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forall_adv_over_r(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  int v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;

  OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6);
  v7 = OUTLINED_FUNCTION_17_43();
  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = v7;
    OUTLINED_FUNCTION_9_49();
    OUTLINED_FUNCTION_5_53();
    if (!v10 && (*v9 & 2) == 0 && OUTLINED_FUNCTION_2_59())
    {
      clearDeltaStackBack(v6);
      v11 = *(_QWORD *)(v6 + 192);
      *(_DWORD *)(*(_QWORD *)(v6 + 200) + 256) = 0;
      *(_BYTE *)(v11 + 8096) = 1;
      OUTLINED_FUNCTION_3_59();
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forto_adv_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;

  if (OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6))
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = 0;
    if (OUTLINED_FUNCTION_2_59())
    {
      OUTLINED_FUNCTION_12_46();
      if (!v7)
        OUTLINED_FUNCTION_0_68();
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forto_adv_upto_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;

  if (OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6))
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = 0;
    OUTLINED_FUNCTION_8_50();
    OUTLINED_FUNCTION_6_52();
    if (!v7)
    {
      OUTLINED_FUNCTION_11_48();
      if (!v7 && (*v8 & 2) == 0)
      {
        if (OUTLINED_FUNCTION_2_59())
        {
          OUTLINED_FUNCTION_27_34();
          if (!v7)
          {
            OUTLINED_FUNCTION_8_50();
            OUTLINED_FUNCTION_6_52();
            if (!v7)
            {
              OUTLINED_FUNCTION_11_48();
              if (!v7 && (*v9 & 2) == 0)
                OUTLINED_FUNCTION_0_68();
            }
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forto_adv_over_l(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  _BYTE *v8;

  if (OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6))
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = 0;
    OUTLINED_FUNCTION_8_50();
    OUTLINED_FUNCTION_6_52();
    if (!v7)
    {
      OUTLINED_FUNCTION_11_48();
      if (!v7 && (*v8 & 2) == 0)
      {
        if (OUTLINED_FUNCTION_2_59())
        {
          OUTLINED_FUNCTION_12_46();
          if (!v7)
            OUTLINED_FUNCTION_0_68();
        }
      }
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forto_adv_r(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  int v8;
  char v9;

  OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6);
  v7 = OUTLINED_FUNCTION_17_43();
  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = v7;
    if (OUTLINED_FUNCTION_2_59())
    {
      OUTLINED_FUNCTION_12_46();
      if (!v9)
        OUTLINED_FUNCTION_0_68();
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forto_adv_upto_r(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  _BYTE *v10;
  _BYTE *v11;

  OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6);
  v7 = OUTLINED_FUNCTION_17_43();
  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = v7;
    OUTLINED_FUNCTION_8_50();
    OUTLINED_FUNCTION_6_52();
    if (!v9)
    {
      OUTLINED_FUNCTION_10_49();
      if (!v9 && (*v10 & 2) == 0)
      {
        if (OUTLINED_FUNCTION_2_59())
        {
          OUTLINED_FUNCTION_27_34();
          if (!v9)
          {
            OUTLINED_FUNCTION_8_50();
            OUTLINED_FUNCTION_6_52();
            if (!v9)
            {
              OUTLINED_FUNCTION_10_49();
              if (!v9 && (*v11 & 2) == 0)
                OUTLINED_FUNCTION_0_68();
            }
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_4_56();
}

void forto_adv_over_r(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  _BYTE *v10;

  OUTLINED_FUNCTION_1_61(a1, a2, a3, a4, a5, a6);
  v7 = OUTLINED_FUNCTION_17_43();
  if (v8)
  {
    *(_BYTE *)(*(_QWORD *)(v6 + 192) + 8089) = v7;
    OUTLINED_FUNCTION_8_50();
    OUTLINED_FUNCTION_6_52();
    if (!v9)
    {
      OUTLINED_FUNCTION_10_49();
      if (!v9 && (*v10 & 2) == 0)
      {
        if (OUTLINED_FUNCTION_2_59())
        {
          OUTLINED_FUNCTION_12_46();
          if (!v9)
            OUTLINED_FUNCTION_0_68();
        }
      }
    }
  }
  OUTLINED_FUNCTION_4_56();
}

uint64_t forall_to_test(uint64_t a1, unsigned __int16 *a2, __int16 *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16[2];
  uint64_t *v17[2];

  v17[0] = 0;
  v17[1] = 0;
  v16[1] = 0;
  vinitloc_new(a1, (uint64_t)v17, a2);
  OUTLINED_FUNCTION_14_44(v6, v7, v8, v9, v10, v11, v12, v13, 0);
  vcompare(a1, v17, v16);
  if (((__int16)*a2 & 0x80000000) == 0)
    a2[1] = -1;
  if ((*a3 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_37();
  v14 = *(_QWORD *)(a1 + 192);
  if (*(_BYTE *)(v14 + 8120))
    return 0;
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(v14 + 8064);
  return 2;
}

void forall_cont_from()
{
  __int16 *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;

  OUTLINED_FUNCTION_13_45();
  if (v9)
    v1 = OUTLINED_FUNCTION_26_36();
  OUTLINED_FUNCTION_15_43((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v27, v30, v32, v34);
  OUTLINED_FUNCTION_25_36(v10, v11, v12, v13, v14, v15, v16, v17, v28);
  OUTLINED_FUNCTION_19_40(v18, v19, v20, v21, v22, v23, v24, v25, v29, v31, v33);
  OUTLINED_FUNCTION_18_40();
  if ((v26 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_37();
  if ((*v0 & 0x80000000) == 0)
    v0[1] = -1;
  OUTLINED_FUNCTION_16_43();
}

void for_adv(uint64_t a1, uint64_t a2, uint64_t a3, __int16 *a4, __int16 *a5, __int16 *a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  double *v36[2];

  OUTLINED_FUNCTION_23_37();
  *(_QWORD *)(v11 + 8056) = v10;
  *(_QWORD *)(v11 + 8064) = v12;
  *(_BYTE *)(v11 + 8096) = 0;
  vinitloc_new(v13, (uint64_t)v36, v14);
  OUTLINED_FUNCTION_14_44(v15, v16, v17, v18, v19, v20, v21, v22, (uint64_t)v35);
  OUTLINED_FUNCTION_20_39(v23, v24);
  vadd(v6, v36, &v35);
  OUTLINED_FUNCTION_24_36(v25, v26);
  if ((*a4 & 0x80000000) == 0)
    a4[1] = -1;
  if ((*a5 & 0x80000000) == 0)
    a5[1] = -1;
  if ((*a6 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_37();
  OUTLINED_FUNCTION_28_34(v27, v28, v29, v30, v31, v32, v33, v34, v35);
  OUTLINED_FUNCTION_21_38();
}

void for_test(uint64_t a1, unsigned __int16 *a2, __int16 *a3, __int16 *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL4 v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  double *v34;
  _BYTE v35[16];

  OUTLINED_FUNCTION_23_37();
  *(_BYTE *)(v8 + 8096) = 0;
  vinitloc_new(v9, (uint64_t)v35, a2);
  OUTLINED_FUNCTION_20_39(v10, v11);
  OUTLINED_FUNCTION_14_44(v12, v13, v14, v15, v16, v17, v18, v19, v33);
  OUTLINED_FUNCTION_24_36(v20, v21);
  if (((__int16)*a2 & 0x80000000) == 0)
    a2[1] = -1;
  if ((*a3 & 0x80000000) == 0)
    a3[1] = -1;
  if ((*a4 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_37();
  v30 = OUTLINED_FUNCTION_28_34(v22, v23, v24, v25, v26, v27, v28, v29, v34);
  v31 = *(_QWORD *)(v4 + 192);
  v32 = *(unsigned __int8 *)(v31 + 8120);
  if (!v30)
  {
    if (v32 != 1)
      goto LABEL_11;
    goto LABEL_9;
  }
  if (v32 == 255)
LABEL_9:
    *(_QWORD *)(v4 + 104) = *(_QWORD *)(v31 + 8064);
LABEL_11:
  OUTLINED_FUNCTION_21_38();
}

void for_cont_from()
{
  __int16 *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;

  OUTLINED_FUNCTION_13_45();
  if (v9)
    v1 = OUTLINED_FUNCTION_26_36();
  OUTLINED_FUNCTION_15_43((uint64_t)v1, v2, v3, v4, v5, v6, v7, v8, v27, v30, v32, v34);
  OUTLINED_FUNCTION_25_36(v10, v11, v12, v13, v14, v15, v16, v17, v28);
  OUTLINED_FUNCTION_19_40(v18, v19, v20, v21, v22, v23, v24, v25, v29, v31, v33);
  OUTLINED_FUNCTION_18_40();
  if ((v26 & 0x80000000) == 0)
    OUTLINED_FUNCTION_22_37();
  if ((*v0 & 0x80000000) == 0)
    v0[1] = -1;
  OUTLINED_FUNCTION_16_43();
}

uint64_t while_iterate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(v4 + 8056) = a3;
  *(_QWORD *)(v4 + 8064) = a2;
  result = clearDeltaStackBack(a1);
  *(_DWORD *)(*(_QWORD *)(a1 + 200) + 256) = 0;
  return result;
}

uint64_t freeDeltaStackTo_0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 200);
  v3 = *(_QWORD *)(v2 + 1744);
  if (v3)
  {
    *(_QWORD *)(v2 + 1720) = a2;
    *(_DWORD *)(v2 + 1728) = *(_DWORD *)(v2 + 1780) + a2 - *(_DWORD *)(v3 + 32);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  clearDeltaStackBack((uint64_t)v2);
  v3 = v2[24];
  *(_DWORD *)(v2[25] + 256) = 0;
  *(_BYTE *)(v3 + 8096) = 1;
  v2[13] = v1;
  *(_QWORD *)(v0 + 8) = *(_QWORD *)(v3 + 8080);
  return 2;
}

uint64_t OUTLINED_FUNCTION_1_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  return for_loop_preamble(a1, a2, a3, a5, a6);
}

uint64_t OUTLINED_FUNCTION_2_59()
{
  _QWORD *v0;

  return vscanadv(v0, 1, 0);
}

uint64_t OUTLINED_FUNCTION_3_59()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 104) = v2;
  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v0 + 8080);
  return 2;
}

uint64_t OUTLINED_FUNCTION_8_50()
{
  return vscanadvUptoTokenOrMarker();
}

uint64_t OUTLINED_FUNCTION_9_49()
{
  return vscanadvUptoToken();
}

void OUTLINED_FUNCTION_14_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  unsigned __int16 *v10;

  vinitloc_new(v9, (uint64_t)&a9, v10);
}

void OUTLINED_FUNCTION_15_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unsigned __int16 *v12;
  uint64_t v13;

  a11 = 0;
  a12 = 0;
  vinitloc_new(v13, (uint64_t)&a11, v12);
}

uint64_t OUTLINED_FUNCTION_17_43()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_18_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v3 + 8056) = v2;
  *(_QWORD *)(v3 + 8064) = v1;
  result = clearDeltaStackBack(v0);
  *(_DWORD *)(*(_QWORD *)(v0 + 200) + 256) = 0;
  return result;
}

void OUTLINED_FUNCTION_19_40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9, uint64_t a10, void *a11)
{
  uint64_t v11;

  vassign(v11, &a11, &a9);
}

void OUTLINED_FUNCTION_20_39(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  unsigned __int16 *v3;
  va_list va;

  va_start(va, a2);
  vinitloc_new(v2, (uint64_t)va, v3);
}

void OUTLINED_FUNCTION_22_37()
{
  uint64_t v0;

  *(_WORD *)(v0 + 2) = -1;
}

void OUTLINED_FUNCTION_24_36(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t *v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, uint64_t *);
  v5 = va_arg(va1, _QWORD);
  vcompare(v2, (uint64_t **)va1, (uint64_t **)va);
}

void OUTLINED_FUNCTION_25_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int16 *v9;
  uint64_t v10;

  vinitloc_new(v10, (uint64_t)&a9, v9);
}

void *OUTLINED_FUNCTION_26_36()
{
  unsigned __int16 *v0;
  uint64_t v1;

  return save_var(v1, v0);
}

BOOL OUTLINED_FUNCTION_28_34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double *a9)
{
  uint64_t v9;

  return vnegative(v9, &a9);
}

void read_2pt(uint64_t a1, char a2, unsigned int a3)
{
  int v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  OUTLINED_FUNCTION_3_60(a1, a2, a3);
  if (!v3)
  {
    v4 = OUTLINED_FUNCTION_8_51();
    if (!vrange_2pt(v4, v5, v6, v7, v8))
    {
      OUTLINED_FUNCTION_2_60();
      OUTLINED_FUNCTION_0_69();
    }
  }
  OUTLINED_FUNCTION_6_53();
}

void read_l(uint64_t a1, char a2, unsigned int a3)
{
  int v3;
  int v4;

  OUTLINED_FUNCTION_3_60(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_8_51();
    vrange_l();
    if (!v4)
      OUTLINED_FUNCTION_9_50();
    OUTLINED_FUNCTION_2_60();
    OUTLINED_FUNCTION_0_69();
  }
  OUTLINED_FUNCTION_6_53();
}

void read_r(uint64_t a1, char a2, unsigned int a3)
{
  int v3;
  int v4;

  OUTLINED_FUNCTION_3_60(a1, a2, a3);
  if (!v3)
  {
    OUTLINED_FUNCTION_8_51();
    vrange_r();
    if (!v4)
      OUTLINED_FUNCTION_9_50();
    OUTLINED_FUNCTION_2_60();
    OUTLINED_FUNCTION_0_69();
  }
  OUTLINED_FUNCTION_6_53();
}

uint64_t read_nvar(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_4_57(a1, a2, a3, a4, a5, a6, a7, a8, v10, v11);
  result = vrd_nvar();
  if ((*v8 & 0x80000000) == 0)
    v8[1] = -1;
  return result;
}

BOOL read_tvar(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 *v8;
  char v9;
  uint64_t v10;
  int v11;
  uint64_t v13[2];

  OUTLINED_FUNCTION_4_57(a1, a2, a3, a4, a5, a6, a7, a8, v13[0], v13[1]);
  v11 = vrd_tvar(v10, v9, (uint64_t)v13);
  if ((*v8 & 0x80000000) == 0)
    v8[1] = -1;
  return v11 != 0;
}

void open_input(uint64_t a1, char a2)
{
  uint64_t v2;
  char *v3;
  int v4;

  v3 = (char *)OUTLINED_FUNCTION_7_52(a1, a2);
  logicalFileOpen(v2, v3, 0);
  if (!v4)
    OUTLINED_FUNCTION_1_62(v2);
  OUTLINED_FUNCTION_5_54();
}

void open_output(uint64_t a1, char a2)
{
  uint64_t v2;
  char *v3;
  int v4;

  v3 = (char *)OUTLINED_FUNCTION_7_52(a1, a2);
  logicalFileOpen(v2, v3, 1);
  if (!v4)
    OUTLINED_FUNCTION_1_62(v2);
  OUTLINED_FUNCTION_5_54();
}

void open_append(uint64_t a1, char a2)
{
  uint64_t v2;
  char *v3;
  int v4;

  v3 = (char *)OUTLINED_FUNCTION_7_52(a1, a2);
  logicalFileOpen(v2, v3, 2);
  if (!v4)
    OUTLINED_FUNCTION_1_62(v2);
  OUTLINED_FUNCTION_5_54();
}

void closeLF()
{
  vfclose_lf();
}

void print_delta1(uint64_t a1, char a2, uint64_t a3, _BYTE *a4, int a5, uint64_t a6, unsigned int a7)
{
  int v13;
  uint64_t v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  OUTLINED_FUNCTION_10_50(a1);
  if (!v13)
    OUTLINED_FUNCTION_9_50();
  v14 = 0;
  v15[0] = a5;
  v15[1] = 0;
  while (a5 != v14)
  {
    v15[v14 + 2] = *(_BYTE *)(a6 + v14);
    ++v14;
  }
  lf_print_delta(a1, a2, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 144), a4, (a7 >> 1) & 1, 0, (uint64_t)v15, 0, 0, 0, 80);
}

void print_stream(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v8;

  OUTLINED_FUNCTION_10_50(a1);
  if (!v8)
    forceErrorBacktrack(a1);
  vprt_strm(a1, a2, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 144), a3, a4);
}

void print_lit(uint64_t a1, char a2, uint64_t a3)
{
  vf_puts(a1, a2, a3, 1);
}

void print_var(uint64_t a1, char a2, __int16 *a3)
{
  vprt_var(a1, a2, a3);
  if ((*a3 & 0x80000000) == 0)
    a3[1] = -1;
  OUTLINED_FUNCTION_5_54();
}

void print_tvar(uint64_t a1, char a2, __int16 *a3, uint64_t a4, uint64_t a5)
{
  _WORD *v6;

  v6 = a3 + 1;
  prt_tvar(a2, a3 + 1, a5);
  if ((*a3 & 0x80000000) == 0)
    *v6 = -1;
  OUTLINED_FUNCTION_5_54();
}

void OUTLINED_FUNCTION_0_69()
{
  unsigned int v0;
  _QWORD *v1;

  ins_rdtoks(v1, v0, v1[14], v1[18]);
}

void OUTLINED_FUNCTION_1_62(uint64_t a1)
{
  forceErrorBacktrack(a1);
}

void OUTLINED_FUNCTION_2_60()
{
  int v0;
  uint64_t v1;

  visnonseq(v1, v0, *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 144));
}

void OUTLINED_FUNCTION_3_60(uint64_t a1, char a2, unsigned int a3)
{
  vrd_delta(a1, a2, a3);
}

void OUTLINED_FUNCTION_4_57(uint64_t a1, uint64_t a2, unsigned __int16 *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a9 = 0;
  a10 = 0;
  vinitloc_new(a1, (uint64_t)&a9, a3);
}

unint64_t OUTLINED_FUNCTION_7_52(uint64_t a1, char a2)
{
  return logicalFileName(a1, a2);
}

uint64_t OUTLINED_FUNCTION_8_51()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_9_50()
{
  uint64_t v0;

  forceErrorBacktrack(v0);
}

void OUTLINED_FUNCTION_10_50(uint64_t a1)
{
  vprt_range(a1, a1 + 112, a1 + 144);
}

uint64_t ccode_misc_new(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 192) + 8024) = -1;
  return result;
}

uint64_t etiwinMain(uint64_t a1, int a2, uint64_t *a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  v5 = *a3;
  v4 = a3 + 1;
  v7 = *(_QWORD *)(a1 + 184);
  v6 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(v6 + 9304) = v5;
  v8 = __OFSUB__(a2, 1);
  v9 = a2 - 1;
  *(_DWORD *)(v7 + 480) = v9;
  if ((v9 < 0) ^ v8 | (v9 == 0))
    v4 = 0;
  *(_QWORD *)(v7 + 488) = v4;
  *(_DWORD *)(v6 + 8872) = 0;
  vcmdinit(a1);
  if (v10)
  {
    vinitrun((int *)a1);
    if (v18)
    {
      DeltaProc_main(a1, v11, v12, v13, v14, v15, v16, v17);
      vcmdend(a1, 0);
    }
  }
  return 1;
}

void etiwinMainDLL(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = *(_QWORD *)(a1 + 184);
  *(_DWORD *)(v4 + 480) = a2 - 1;
  if (a2 < 2)
    v5 = 0;
  else
    v5 = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(v4 + 488) = v5;
  *(_DWORD *)(*(_QWORD *)(a1 + 192) + 8872) = 0;
  vcmdinit(a1);
  if (v6)
    vinitrun((int *)a1);
}

uint64_t getProgramName(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 192) + 9304);
}

void halt()
{
  exit(0);
}

void abort_1(void)
{
  exit(5);
}

void dur_expr(uint64_t a1, char a2, __int16 *a3)
{
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  v6 = (uint64_t *)(a1 + 112);
  vtimept_tv(a1, a1 + 112);
  if (!v7 || (vtimept_tv(a1, a1 + 144), !(_DWORD)v8))
    forceErrorBacktrack(a1);
  v15[3] = 0;
  v15[0] = 0;
  v15[1] = 0;
  OUTLINED_FUNCTION_3_61(v8, (uint64_t)v15);
  vdur(a1, v6, (unint64_t *)(a1 + 144), a2);
  OUTLINED_FUNCTION_0_70();
  OUTLINED_FUNCTION_2_61(v9, v10, v11, v12, v13, v14);
  if ((*a3 & 0x80000000) == 0)
    a3[1] = -1;
  OUTLINED_FUNCTION_1_63();
}

void val_expr1(uint64_t a1, __int16 *a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17[4];

  if (val_expr(a1, a1 + 112, a3, a4, 0, a6, a7, a8) == -2147483647)
  {
    if ((*a2 & 0x80000000) == 0)
      a2[1] = -1;
    forceErrorBacktrack(a1);
  }
  v17[3] = 0;
  v17[0] = 0;
  v17[1] = 0;
  OUTLINED_FUNCTION_0_70();
  OUTLINED_FUNCTION_3_61(v10, v11);
  OUTLINED_FUNCTION_2_61(v12, v17, v13, v14, v15, v16);
  if ((*a2 & 0x80000000) == 0)
    a2[1] = -1;
  OUTLINED_FUNCTION_1_63();
}

uint64_t actd_lookup(_QWORD *a1, int a2, uint64_t a3, uint64_t a4)
{
  _BYTE **v8;
  int v9;
  uint64_t v10;
  const char *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  _BYTE *v16;
  _QWORD *v17;
  uint64_t v18;

  v8 = (_BYTE **)(a1 + 14);
  vprt_range((uint64_t)a1, (uint64_t)(a1 + 14), (uint64_t)(a1 + 18));
  if (!v9)
    forceErrorBacktrack((uint64_t)a1);
  v10 = a1[9] + ((uint64_t)a2 << 6);
  v11 = actdlookup((uint64_t)a1, a1[14], a1[18], v10);
  if (v11)
  {
    v12 = 0;
    *(_WORD *)(a1[24] + 9300) = *((_WORD *)v11 + 1);
    while (1)
    {
      if (v12 == 2)
        return 0;
      v14 = *(unsigned __int8 *)v11++;
      v13 = v14;
      if (v14 != 255)
      {
        v15 = 0;
        v16 = *v8;
        while (v15 < v13)
        {
          if (v16 && (*v16 & 2) != 0)
          {
            v17 = &v16[8 * *(_DWORD *)(a1[24] + 9084) + 8 * *(unsigned __int8 *)(v10 + 16)];
          }
          else
          {
            v17 = v16 + 8;
            ++v15;
          }
          v16 = (_BYTE *)(*v17 & 0xFFFFFFFFFFFFFFFCLL);
        }
        if (v12)
        {
          v18 = a4;
          if (!a4)
            goto LABEL_17;
LABEL_16:
          *(_QWORD *)(v18 + 8) = v16;
          goto LABEL_17;
        }
        v18 = a3;
        if (a3)
          goto LABEL_16;
      }
LABEL_17:
      ++v12;
    }
  }
  return 1;
}

BOOL setd_lookup(_QWORD *a1, unsigned __int8 a2, int a3)
{
  int v6;

  if (!a1[14] || !a1[18])
    return 1;
  vprt_range((uint64_t)a1, (uint64_t)(a1 + 14), (uint64_t)(a1 + 18));
  if (!v6)
    forceErrorBacktrack((uint64_t)a1);
  return setdlookup((uint64_t)a1, a1[14], a1[18], a1[8] + ((uint64_t)a3 << 6), a2) == 0;
}

uint64_t actd_goto(uint64_t result)
{
  *(_QWORD *)(result + 104) = *(__int16 *)(*(_QWORD *)(result + 192) + 9300);
  return result;
}

void OUTLINED_FUNCTION_2_61(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  vassign(v6, a2, (const void **)va);
}

void OUTLINED_FUNCTION_3_61(uint64_t a1, uint64_t a2)
{
  unsigned __int16 *v2;
  uint64_t v3;

  vinitloc_new(v3, a2, v2);
}

void if_testeq_v_lng(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_27_35(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testeq(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v8 = OUTLINED_FUNCTION_6_54(a1, a2, a3, a4, a5, a6, a7, a8, v24, v27, v29, v31);
  v16 = OUTLINED_FUNCTION_13_46(v8, v9, v10, v11, v12, v13, v14, v15, v25);
  OUTLINED_FUNCTION_8_52(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30);
  OUTLINED_FUNCTION_37_32();
  OUTLINED_FUNCTION_16_44();
}

void if_testle_v_lng(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_25_37(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testle(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v8 = OUTLINED_FUNCTION_6_54(a1, a2, a3, a4, a5, a6, a7, a8, v24, v27, v29, v31);
  v16 = OUTLINED_FUNCTION_13_46(v8, v9, v10, v11, v12, v13, v14, v15, v25);
  OUTLINED_FUNCTION_8_52(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30);
  OUTLINED_FUNCTION_35_32();
  OUTLINED_FUNCTION_16_44();
}

void if_testge_v_lng(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_22_38(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testge(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v8 = OUTLINED_FUNCTION_6_54(a1, a2, a3, a4, a5, a6, a7, a8, v24, v27, v29, v31);
  v16 = OUTLINED_FUNCTION_13_46(v8, v9, v10, v11, v12, v13, v14, v15, v25);
  OUTLINED_FUNCTION_8_52(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30);
  OUTLINED_FUNCTION_36_32();
  OUTLINED_FUNCTION_16_44();
}

void if_testgt_v_lng(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_26_37(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testgt(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v8 = OUTLINED_FUNCTION_6_54(a1, a2, a3, a4, a5, a6, a7, a8, v24, v27, v29, v31);
  v16 = OUTLINED_FUNCTION_13_46(v8, v9, v10, v11, v12, v13, v14, v15, v25);
  OUTLINED_FUNCTION_8_52(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30);
  OUTLINED_FUNCTION_35_32();
  OUTLINED_FUNCTION_16_44();
}

void if_testlt_v_lng(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_23_38(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testlt(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v8 = OUTLINED_FUNCTION_6_54(a1, a2, a3, a4, a5, a6, a7, a8, v24, v27, v29, v31);
  v16 = OUTLINED_FUNCTION_13_46(v8, v9, v10, v11, v12, v13, v14, v15, v25);
  OUTLINED_FUNCTION_8_52(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30);
  OUTLINED_FUNCTION_36_32();
  OUTLINED_FUNCTION_16_44();
}

void if_testneq_v_lng(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_15_44();
  OUTLINED_FUNCTION_24_37(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testneq(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v8 = OUTLINED_FUNCTION_6_54(a1, a2, a3, a4, a5, a6, a7, a8, v24, v27, v29, v31);
  v16 = OUTLINED_FUNCTION_13_46(v8, v9, v10, v11, v12, v13, v14, v15, v25);
  OUTLINED_FUNCTION_8_52(v16, v17, v18, v19, v20, v21, v22, v23, v26, v28, v30);
  OUTLINED_FUNCTION_37_32();
  OUTLINED_FUNCTION_16_44();
}

void if_testeq_v_i(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_14_45();
  OUTLINED_FUNCTION_27_35(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testle_v_i(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_14_45();
  OUTLINED_FUNCTION_25_37(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testge_v_i(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_14_45();
  OUTLINED_FUNCTION_22_38(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testgt_v_i(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_14_45();
  OUTLINED_FUNCTION_26_37(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testlt_v_i(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_14_45();
  OUTLINED_FUNCTION_23_38(v8, v9, v10, v11, v12, v13, v14, v15);
}

void if_testneq_v_i(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_12_47(a1, a2, a3, a4, a5, a6, a7, a8);
  OUTLINED_FUNCTION_14_45();
  OUTLINED_FUNCTION_24_37(v8, v9, v10, v11, v12, v13, v14, v15);
}

BOOL testeq_tvars(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  compare_tvars(a1, a2, a3);
  return testeq(a1);
}

BOOL testneq_tvars(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  compare_tvars(a1, a2, a3);
  return testneq(a1);
}

BOOL testFldeq(uint64_t a1, unsigned int a2, int a3, int a4)
{
  uint64_t v4;
  unsigned __int8 *v5;
  _BYTE *v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a1 + 192);
  v5 = (unsigned __int8 *)(v4 + 8088);
  v6 = *(_BYTE **)(v4 + 8080);
  while (1)
  {
    v7 = *(_BYTE *)(v4 + 8089) ? *(int *)(v4 + 9084) + (unint64_t)*v5 : *v5 + 3;
    v6 = (_BYTE *)(*(_QWORD *)&v6[8 * v7] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v6)
      break;
    if ((*v6 & 2) == 0)
      return *(unsigned __int8 *)(*(uint64_t (**)(_BYTE *))&vstmtbl[12 * a2 + 2][8 * a3])(v6 + 16) != a4;
  }
  return 1;
}

void move_lng(uint64_t a1, __int16 *a2, const void *a3)
{
  int v5;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13[3];

  v13[2] = a3;
  OUTLINED_FUNCTION_29_34();
  if (v5)
    OUTLINED_FUNCTION_28_35();
  OUTLINED_FUNCTION_34_32();
  if (!(!v9 & v8))
    __asm { BR              X10 }
  if (v7 < 0)
    OUTLINED_FUNCTION_17_44(a1);
  OUTLINED_FUNCTION_11_49(0xFFFDu, v11, 0, 0, (uint64_t)v13[0], (uint64_t)v13[1]);
  OUTLINED_FUNCTION_20_40(v10, &v12, v13);
  if ((*a2 & 0x80000000) == 0)
    a2[1] = -1;
  OUTLINED_FUNCTION_31_33();
}

void move_i(uint64_t a1, __int16 *a2, __int16 a3)
{
  int v5;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13[2];
  __int16 v14;

  v14 = a3;
  OUTLINED_FUNCTION_29_34();
  if (v5)
    OUTLINED_FUNCTION_28_35();
  OUTLINED_FUNCTION_34_32();
  if (!(!v9 & v8))
    __asm { BR              X10 }
  if (v7 < 0)
    OUTLINED_FUNCTION_17_44(a1);
  OUTLINED_FUNCTION_11_49(0xFFFCu, v11, 0, 0, (uint64_t)v13[0], (uint64_t)v13[1]);
  OUTLINED_FUNCTION_20_40(v10, &v12, v13);
  if ((*a2 & 0x80000000) == 0)
    a2[1] = -1;
  OUTLINED_FUNCTION_31_33();
}

void move_f(uint64_t a1, __int16 *a2, double a3)
{
  int v5;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13[3];

  v13[2] = *(const void **)&a3;
  OUTLINED_FUNCTION_29_34();
  if (v5)
    OUTLINED_FUNCTION_28_35();
  OUTLINED_FUNCTION_34_32();
  if (!(!v9 & v8))
    __asm { BR              X10 }
  if (v7 < 0)
    OUTLINED_FUNCTION_17_44(a1);
  OUTLINED_FUNCTION_11_49(0xFFFBu, v11, 0, 0, (uint64_t)v13[0], (uint64_t)v13[1]);
  OUTLINED_FUNCTION_20_40(v10, &v12, v13);
  if ((*a2 & 0x80000000) == 0)
    a2[1] = -1;
}

void bspush_ca_boa(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_38_30(a1);
  bspush_ca(v1);
}

double bspush_ca_scan_boa(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  OUTLINED_FUNCTION_38_30(a1);
  *(_QWORD *)&result = bspush_ca_scan(v2, v1).n128_u64[0];
  return result;
}

uint64_t lpta_rpta_loadp(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(_BYTE *)(result + 168) = 1;
  *(_BYTE *)(result + 136) = 1;
  *(_QWORD *)(result + 112) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(result + 144) = *(_QWORD *)(a3 + 8);
  *(_QWORD *)(result + 160) = 0;
  *(_QWORD *)(result + 128) = 0;
  return result;
}

#error "248687AD8: call analysis failed (funcsize=53)"

#error "248687BD8: call analysis failed (funcsize=63)"

#error "248687CE0: call analysis failed (funcsize=64)"

#error "248687DD8: call analysis failed (funcsize=60)"

void ins_tokens_f()
{
  uint64_t v0;
  const char *v1;
  int v2;
  char v3;
  int v4;
  double *v5;
  unsigned __int8 *v6;
  const char *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  double *v23;
  double v24;
  __int16 v25;
  char v26;

  OUTLINED_FUNCTION_33_33();
  if (v4)
  {
    OUTLINED_FUNCTION_4_58();
    switch(OUTLINED_FUNCTION_0_71())
    {
      case 0xFFFFFFFB:
        v5 = &v24;
        goto LABEL_8;
      case 0xFFFFFFFC:
      case 0xFFFFFFFE:
        v5 = (double *)&v25;
        goto LABEL_8;
      case 0xFFFFFFFF:
        v5 = (double *)&v26;
LABEL_8:
        v23 = v5;
        v26 = 0;
        v25 = 0;
        v24 = 0.0;
        v6 = (unsigned __int8 *)&v1[v2];
        v22 = 65531;
        v21 = &v24;
        BYTE2(v22) = v3;
        OUTLINED_FUNCTION_3_62();
        while (v1 < (const char *)v6)
        {
          v9 = *(unsigned __int8 *)v1;
          v7 = v1 + 1;
          v8 = v9;
          v26 = v9;
          v24 = atof(v7);
          OUTLINED_FUNCTION_19_41();
          if (!v18)
            OUTLINED_FUNCTION_10_51(v10, v11, v12, v13, v14, v15, v16, v17, v21, v22, v23);
          OUTLINED_FUNCTION_5_55(v10, v11, v21, v22, v23);
          if (!v19)
            break;
          v1 = &v7[v8];
          if (v1 < (const char *)v6)
          {
            v20 = OUTLINED_FUNCTION_2_62();
            *(_QWORD *)(v0 + 112) = v20;
            if (!v20)
              break;
          }
        }
        break;
      default:
        return;
    }
  }
  else
  {
    OUTLINED_FUNCTION_3_62();
  }
}

void insert_2pt_s(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  if (!OUTLINED_FUNCTION_1_64(a1, a2, a3, a4, a5))
  {
    v5 = OUTLINED_FUNCTION_9_51();
    ins_tokens_s(v5);
  }
  OUTLINED_FUNCTION_18_41();
}

void insert_2pt_l(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  if (!OUTLINED_FUNCTION_1_64(a1, a2, a3, a4, a5))
  {
    v5 = OUTLINED_FUNCTION_9_51();
    ins_tokens_l(v5);
  }
  OUTLINED_FUNCTION_18_41();
}

void insert_2pt_lng(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  if (!OUTLINED_FUNCTION_1_64(a1, a2, a3, a4, a5))
  {
    v5 = OUTLINED_FUNCTION_9_51();
    ins_tokens_lng(v5);
  }
  OUTLINED_FUNCTION_18_41();
}

void insert_2pt_i(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;

  if (!OUTLINED_FUNCTION_1_64(a1, a2, a3, a4, a5))
  {
    v5 = OUTLINED_FUNCTION_9_51();
    ins_tokens_i(v5);
  }
  OUTLINED_FUNCTION_18_41();
}

void insert_2pt_f(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!OUTLINED_FUNCTION_1_64(a1, a2, a3, a4, a5))
  {
    OUTLINED_FUNCTION_9_51();
    ins_tokens_f();
  }
  OUTLINED_FUNCTION_18_41();
}

uint64_t OUTLINED_FUNCTION_0_71()
{
  int v0;

  return STMTYP(v0);
}

uint64_t OUTLINED_FUNCTION_1_64(uint64_t a1, char a2, uint64_t a3, uint64_t a4, int a5)
{
  return vrange_2pt(a1, (unint64_t *)(a1 + 112), a1 + 144, a2, a5);
}

uint64_t OUTLINED_FUNCTION_2_62()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return vins_sync(v1, v0, *(_QWORD *)(*(_QWORD *)(v1 + 144) + 8 * v2) & 0xFFFFFFFFFFFFFFFCLL, *(_QWORD *)(v1 + 144));
}

uint64_t OUTLINED_FUNCTION_3_62()
{
  char v0;
  uint64_t *v1;

  return vdel_2pt(v1, v0, v1[14], v1[18]);
}

uint64_t OUTLINED_FUNCTION_4_58()
{
  char v0;

  return STMTYP(v0);
}

void OUTLINED_FUNCTION_5_55(uint64_t a1, uint64_t a2, ...)
{
  unsigned int v2;
  uint64_t *v3;
  va_list va;

  va_start(va, a2);
  vins_tok(v3, v2, v3[14], v3[18], (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_6_54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a11 = 0;
  a12 = 0;
  return vnspop(a1, (uint64_t)&a11);
}

void OUTLINED_FUNCTION_8_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t *a11)
{
  uint64_t v11;

  vcompare(v11, &a11, &a9);
}

uint64_t OUTLINED_FUNCTION_9_51()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_10_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, const void *a9, uint64_t a10, void *a11)
{
  uint64_t v11;

  vassign(v11, &a11, &a9);
}

void OUTLINED_FUNCTION_11_49(unsigned __int16 a1@<W8>, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unsigned __int16 *v7;
  uint64_t v8;

  a5 = v6;
  a6 = a1;
  BYTE2(a6) = 0;
  vinitloc_new(v8, (uint64_t)&a3, v7);
}

void OUTLINED_FUNCTION_12_47(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  npush_v(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_13_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return vnspop(v9, (uint64_t)&a9);
}

void OUTLINED_FUNCTION_14_45()
{
  uint64_t v0;

  npush_i(v0);
}

void OUTLINED_FUNCTION_15_44()
{
  uint64_t v0;

  npush_lng(v0);
}

void OUTLINED_FUNCTION_17_44(uint64_t a1)
{
  forceErrorBacktrack(a1);
}

void OUTLINED_FUNCTION_20_40(uint64_t a1, void **a2, const void **a3)
{
  uint64_t v3;

  vassign(v3, a2, a3);
}

void OUTLINED_FUNCTION_22_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if_testge(a1, a2, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_23_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if_testlt(a1, a2, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_24_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if_testneq(a1, a2, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_25_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if_testle(a1, a2, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_26_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if_testgt(a1, a2, a3, a4, a5, a6, a7, a8);
}

void OUTLINED_FUNCTION_27_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if_testeq(a1, a2, a3, a4, a5, a6, a7, a8);
}

void *OUTLINED_FUNCTION_28_35()
{
  unsigned __int16 *v0;
  uint64_t v1;

  return save_var(v1, v0);
}

void OUTLINED_FUNCTION_38_30(uint64_t a1)
{
  bspush_boa(a1);
}

uint64_t lpta_loadv(uint64_t a1, char a2, __int16 *a3)
{
  int v3;
  uint64_t v4;

  *(_BYTE *)(a1 + 136) = 2;
  *(_BYTE *)(a1 + 120) = a2;
  v3 = *a3;
  switch(v3)
  {
    case -5:
      v4 = (uint64_t)*((double *)a3 + 1);
      break;
    case -4:
      v4 = a3[1];
      break;
    case -3:
      v4 = *((_QWORD *)a3 + 1);
      break;
    default:
      forceErrorBacktrack(a1);
  }
  *(_QWORD *)(a1 + 128) = v4;
  return a1;
}

uint64_t rpta_loadv(uint64_t a1, char a2, __int16 *a3)
{
  int v3;
  uint64_t v4;

  *(_BYTE *)(a1 + 168) = 2;
  *(_BYTE *)(a1 + 152) = a2;
  v3 = *a3;
  switch(v3)
  {
    case -5:
      v4 = (uint64_t)*((double *)a3 + 1);
      break;
    case -4:
      v4 = a3[1];
      break;
    case -3:
      v4 = *((_QWORD *)a3 + 1);
      break;
    default:
      forceErrorBacktrack(a1);
  }
  *(_QWORD *)(a1 + 160) = v4;
  return a1;
}

void lpta_loadlng(uint64_t a1, char a2, uint64_t a3)
{
  int v5;

  v5 = OUTLINED_FUNCTION_3_63(a1, a2);
  if ((v5 + 4) < 2)
    goto LABEL_4;
  if (v5 == -5)
  {
    a3 = (uint64_t)(double)a3;
LABEL_4:
    *(_QWORD *)(a1 + 128) = a3;
  }
  OUTLINED_FUNCTION_2_63();
}

void rpta_loadl(uint64_t a1, char a2, uint64_t a3)
{
  int v5;

  v5 = OUTLINED_FUNCTION_4_59((char *)a1, a2);
  if ((v5 + 4) < 2)
    goto LABEL_4;
  if (v5 == -5)
  {
    a3 = (uint64_t)(double)a3;
LABEL_4:
    *(_QWORD *)(a1 + 160) = a3;
  }
  OUTLINED_FUNCTION_2_63();
}

void lpta_loadi(uint64_t a1, char a2, int a3)
{
  char v5;
  char v6;

  OUTLINED_FUNCTION_3_63(a1, a2);
  OUTLINED_FUNCTION_19_42();
  if (!(!v6 & v5))
    *(_QWORD *)(a1 + 128) = a3;
  OUTLINED_FUNCTION_2_63();
}

void rpta_loadi(uint64_t a1, char a2, int a3)
{
  char v5;
  char v6;

  OUTLINED_FUNCTION_4_59((char *)a1, a2);
  OUTLINED_FUNCTION_19_42();
  if (!(!v6 & v5))
    *(_QWORD *)(a1 + 160) = a3;
  OUTLINED_FUNCTION_2_63();
}

void lpta_loadf(uint64_t a1, char a2, double a3)
{
  char v5;
  char v6;

  OUTLINED_FUNCTION_3_63(a1, a2);
  OUTLINED_FUNCTION_19_42();
  if (!(!v6 & v5))
    *(_QWORD *)(a1 + 128) = (uint64_t)a3;
  OUTLINED_FUNCTION_20_41();
}

void rpta_loadf(uint64_t a1, char a2, double a3)
{
  char v5;
  char v6;

  OUTLINED_FUNCTION_4_59((char *)a1, a2);
  OUTLINED_FUNCTION_19_42();
  if (!(!v6 & v5))
    *(_QWORD *)(a1 + 160) = (uint64_t)a3;
  OUTLINED_FUNCTION_20_41();
}

uint64_t lpta_leftmost(uint64_t a1, char a2)
{
  return OUTLINED_FUNCTION_22_39(a1, a2, 6);
}

uint64_t rpta_leftmost(uint64_t a1, char a2)
{
  return OUTLINED_FUNCTION_21_40(a1, a2, 6);
}

uint64_t lpta_rightmost(uint64_t a1, char a2)
{
  return OUTLINED_FUNCTION_22_39(a1, a2, 10);
}

uint64_t rpta_rightmost(uint64_t a1, char a2)
{
  return OUTLINED_FUNCTION_21_40(a1, a2, 10);
}

void lpta_ctxtl(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  OUTLINED_FUNCTION_14_46(a1);
  if (!v2)
    OUTLINED_FUNCTION_9_52();
  OUTLINED_FUNCTION_0_72();
  if ((v5 & 1) == 0)
    *(_QWORD *)(v1 + 112) = OUTLINED_FUNCTION_1_65(v1, 1, v3, v4);
  OUTLINED_FUNCTION_2_63();
}

void rpta_ctxtl(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  OUTLINED_FUNCTION_12_48(a1);
  if (!v2)
    OUTLINED_FUNCTION_9_52();
  OUTLINED_FUNCTION_0_72();
  if ((v5 & 1) == 0)
    *(_QWORD *)(v1 + 144) = OUTLINED_FUNCTION_1_65(v1, 1, v3, v4);
  OUTLINED_FUNCTION_2_63();
}

void lpta_ctxtr(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  OUTLINED_FUNCTION_14_46(a1);
  if (!v2)
    OUTLINED_FUNCTION_9_52();
  OUTLINED_FUNCTION_0_72();
  if ((v5 & 1) == 0)
    *(_QWORD *)(v1 + 112) = OUTLINED_FUNCTION_1_65(v1, 0, v3, v4);
  OUTLINED_FUNCTION_2_63();
}

void rpta_ctxtr(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  OUTLINED_FUNCTION_12_48(a1);
  if (!v2)
    OUTLINED_FUNCTION_9_52();
  OUTLINED_FUNCTION_0_72();
  if ((v5 & 1) == 0)
    *(_QWORD *)(v1 + 144) = OUTLINED_FUNCTION_1_65(v1, 0, v3, v4);
  OUTLINED_FUNCTION_2_63();
}

void lpta_movel(uint64_t a1)
{
  _QWORD *v1;
  int v2;

  v1 = (_QWORD *)(a1 + 112);
  vmove_tv(a1, a1 + 112);
  if (!v2)
    OUTLINED_FUNCTION_15_45();
  *v1 = OUTLINED_FUNCTION_5_56();
  OUTLINED_FUNCTION_7_54();
}

void rpta_movel(uint64_t a1)
{
  _QWORD *v1;
  int v2;

  v1 = (_QWORD *)(a1 + 144);
  vmove_tv(a1, a1 + 144);
  if (!v2)
    OUTLINED_FUNCTION_15_45();
  *v1 = OUTLINED_FUNCTION_5_56();
  OUTLINED_FUNCTION_7_54();
}

void lpta_mover(uint64_t a1)
{
  uint64_t v2;

  vmove_tv(a1, a1 + 112);
  if (!(_DWORD)v2)
    OUTLINED_FUNCTION_9_52();
  *(_QWORD *)(a1 + 112) = OUTLINED_FUNCTION_8_53(v2, *(_BYTE **)(a1 + 112));
  OUTLINED_FUNCTION_2_63();
}

void rpta_mover(uint64_t a1)
{
  uint64_t v2;

  vmove_tv(a1, a1 + 144);
  if (!(_DWORD)v2)
    OUTLINED_FUNCTION_9_52();
  *(_QWORD *)(a1 + 144) = OUTLINED_FUNCTION_8_53(v2, *(_BYTE **)(a1 + 144));
  OUTLINED_FUNCTION_2_63();
}

void lpta_tstctxtl()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  OUTLINED_FUNCTION_17_45();
  vtstctx_tv(v1, v2);
  if (!v3)
  {
    OUTLINED_FUNCTION_0_72();
    if ((v6 & 1) == 0)
      *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_1_65(v0, 1, v4, v5);
  }
  OUTLINED_FUNCTION_16_45();
}

void rpta_tstctxtl(uint64_t a1)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  vtstctx_tv(a1, a1 + 144);
  if (!v2)
  {
    OUTLINED_FUNCTION_0_72();
    if ((v5 & 1) == 0)
      *(_QWORD *)(a1 + 144) = OUTLINED_FUNCTION_1_65(a1, 1, v3, v4);
  }
  OUTLINED_FUNCTION_16_45();
}

void lpta_tstctxtr(uint64_t a1)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  char v5;

  vtstctx_tv(a1, a1 + 112);
  if (!v2)
  {
    OUTLINED_FUNCTION_0_72();
    if ((v5 & 1) == 0)
      *(_QWORD *)(a1 + 112) = OUTLINED_FUNCTION_1_65(a1, 0, v3, v4);
  }
  OUTLINED_FUNCTION_6_55();
}

void rpta_tstctxtr()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  OUTLINED_FUNCTION_13_47();
  vtstctx_tv(v1, v2);
  if (!v3)
  {
    OUTLINED_FUNCTION_0_72();
    if ((v6 & 1) == 0)
      *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_1_65(v0, 0, v4, v5);
  }
  OUTLINED_FUNCTION_6_55();
}

void lpta_tstmovel(uint64_t a1)
{
  _QWORD *v1;
  int v2;

  v1 = (_QWORD *)(a1 + 112);
  vtsttmark_tv(a1, a1 + 112);
  if (!v2)
    *v1 = OUTLINED_FUNCTION_5_56();
  OUTLINED_FUNCTION_16_45();
}

void rpta_tstmovel(uint64_t a1)
{
  _QWORD *v1;
  int v2;

  v1 = (_QWORD *)(a1 + 144);
  vtsttmark_tv(a1, a1 + 144);
  if (!v2)
    *v1 = OUTLINED_FUNCTION_5_56();
  OUTLINED_FUNCTION_6_55();
}

void lpta_tstmover()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_45();
  vtsttmark_tv(v1, v2);
  if (!(_DWORD)v3)
    *(_QWORD *)(v0 + 112) = OUTLINED_FUNCTION_8_53(v3, *(_BYTE **)(v0 + 112));
  OUTLINED_FUNCTION_16_45();
}

void rpta_tstmover()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_47();
  vtsttmark_tv(v1, v2);
  if (!(_DWORD)v3)
    *(_QWORD *)(v0 + 144) = OUTLINED_FUNCTION_8_53(v3, *(_BYTE **)(v0 + 144));
  OUTLINED_FUNCTION_6_55();
}

void lpta_storep(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;

  v4 = (_QWORD *)(a1 + 112);
  vsync_tv(a1, a1 + 112);
  if (!v5)
    OUTLINED_FUNCTION_15_45();
  if (*(_BYTE *)(*(_QWORD *)(a1 + 192) + 8096))
    OUTLINED_FUNCTION_18_42();
  *(_QWORD *)(a2 + 8) = *v4;
  OUTLINED_FUNCTION_7_54();
}

void rpta_storep(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;

  v4 = (_QWORD *)(a1 + 144);
  vsync_tv(a1, a1 + 144);
  if (!v5)
    OUTLINED_FUNCTION_15_45();
  if (*(_BYTE *)(*(_QWORD *)(a1 + 192) + 8096))
    OUTLINED_FUNCTION_18_42();
  *(_QWORD *)(a2 + 8) = *v4;
  OUTLINED_FUNCTION_7_54();
}

unint64_t OUTLINED_FUNCTION_1_65(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  unsigned int v4;

  return vgetsc(a1, a2, 1, a4, v4);
}

uint64_t OUTLINED_FUNCTION_3_63(uint64_t a1, char a2)
{
  *(_BYTE *)(a1 + 136) = 2;
  *(_BYTE *)(a1 + 120) = a2;
  return STMTYP(a2);
}

uint64_t OUTLINED_FUNCTION_4_59(char *a1, char a2)
{
  a1[168] = 2;
  a1[152] = a2;
  return STMTYP(a1[120]);
}

_BYTE *OUTLINED_FUNCTION_5_56()
{
  _BYTE **v0;
  int v1;

  return vmovel(*v0, v1);
}

_BYTE *OUTLINED_FUNCTION_8_53(uint64_t a1, _BYTE *a2)
{
  uint64_t v2;
  int v3;

  return vmover(v2, a2, v3);
}

void OUTLINED_FUNCTION_9_52()
{
  uint64_t v0;

  forceErrorBacktrack(v0);
}

uint64_t OUTLINED_FUNCTION_10_52(uint64_t result, uint64_t a2)
{
  *(_BYTE *)(result + 136) = 1;
  *(_QWORD *)(result + 112) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(result + 128) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_11_50(uint64_t result, uint64_t a2)
{
  *(_BYTE *)(result + 168) = 1;
  *(_QWORD *)(result + 144) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(result + 128) = 0;
  return result;
}

void OUTLINED_FUNCTION_12_48(uint64_t a1)
{
  vctxt_tv(a1, a1 + 144);
}

void OUTLINED_FUNCTION_14_46(uint64_t a1)
{
  vctxt_tv(a1, a1 + 112);
}

void OUTLINED_FUNCTION_15_45()
{
  uint64_t v0;

  forceErrorBacktrack(v0);
}

void *OUTLINED_FUNCTION_18_42()
{
  unsigned __int16 *v0;
  uint64_t v1;

  return save_var(v1, v0);
}

uint64_t OUTLINED_FUNCTION_21_40@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W8>)
{
  *(_BYTE *)(result + 168) = a3;
  *(_BYTE *)(result + 152) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_22_39@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W8>)
{
  *(_BYTE *)(result + 136) = a3;
  *(_BYTE *)(result + 120) = a2;
  return result;
}

void npush_v(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_2_64(a1, a2, a3, a4, a5, a6, a7, a8, v17, v19);
  OUTLINED_FUNCTION_6_56(v9, v10, v11, v12, v13, v14, v15, v16, v18);
  if ((*v8 & 0x80000000) == 0)
    v8[1] = -1;
  OUTLINED_FUNCTION_1_66();
}

void npush_vf(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _WORD *v18;
  uint64_t v19;

  OUTLINED_FUNCTION_2_64(a1, a2, a3, a4, a5, a6, a7, a8, v17, v19);
  OUTLINED_FUNCTION_6_56(v9, v10, v11, v12, v13, v14, v15, v16, v18);
  if ((*v8 & 0x80000000) == 0)
    v8[1] = -1;
  OUTLINED_FUNCTION_1_66();
}

void npush_s(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_73(a1, 0xFFFFu, v1, v2, v3);
  OUTLINED_FUNCTION_1_66();
}

void npush_l(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_73(a1, 0xFFFEu, v1, v2, v3);
  OUTLINED_FUNCTION_1_66();
}

void npush_lng(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_73(a1, 0xFFFDu, v1, v2, v3);
  OUTLINED_FUNCTION_1_66();
}

void npush_i(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_73(a1, 0xFFFCu, v1, v2, v3);
  OUTLINED_FUNCTION_1_66();
}

void npush_f(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_0_73(a1, 0xFFFBu, v1, v2, v3);
  OUTLINED_FUNCTION_1_66();
}

uint64_t npush_fld(uint64_t a1, unsigned int a2, int a3)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _WORD *v13;
  uint64_t v14;

  v14 = 0;
  v4 = &vstmtbl[12 * a2 + 1][40 * a3];
  LOWORD(v14) = *((_WORD *)v4 + 15);
  BYTE2(v14) = v4[32];
  v5 = *(_QWORD *)(a1 + 192);
  v6 = *(unsigned __int8 *)(v5 + 8088);
  if (*(_BYTE *)(v5 + 8089))
    v7 = *(int *)(v5 + 9084) + v6;
  else
    v7 = v6 + 3;
  v8 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 8080) + 8 * v7) & 0xFFFFFFFFFFFFFFFCLL);
  if (!v8)
    return 1;
  v9 = *(unsigned __int8 *)(v5 + 8088);
  while ((*v8 & 2) != 0)
  {
    v10 = *(unsigned __int8 *)(v5 + 8088);
    v11 = v10 + 3;
    if (*(_BYTE *)(v5 + 8089))
    {
      v11 = *(int *)(v5 + 9084) + (uint64_t)(int)v9;
      v10 = v9;
    }
    v9 = v10;
    v8 = (_BYTE *)(*(_QWORD *)&v8[8 * v11] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v8)
      return 1;
  }
  v13 = (_WORD *)(*(uint64_t (**)(_BYTE *))&vstmtbl[12 * a2 + 2][8 * a3])(v8 + 16);
  vnspush(a1, &v13);
  return 0;
}

void npop(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void *v10[2];
  const void *v11[2];

  OUTLINED_FUNCTION_4_60(a1, (uint64_t)a2, a3, a4, a5, a6, a7, a8, (uint64_t)v10[0], (uint64_t)v10[1], (uint64_t)v11[0], (uint64_t)v11[1]);
  if (*(_BYTE *)(*(_QWORD *)(a1 + 192) + 8096))
    save_var(a1, a2);
  vinitloc_new(a1, (uint64_t)v10, a2);
  vassign(a1, v10, v11);
  if (((__int16)*a2 & 0x80000000) == 0)
    a2[1] = -1;
  OUTLINED_FUNCTION_7_55();
}

void ncompare(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v9[2];
  uint64_t *v10[2];

  OUTLINED_FUNCTION_4_60(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)v9[0], (uint64_t)v9[1], (uint64_t)v10[0], (uint64_t)v10[1]);
  vnspop(a1, (uint64_t)v9);
  vcompare(a1, v10, v9);
  OUTLINED_FUNCTION_7_55();
}

void ncompare_s(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;

  v10 = a2;
  v9 = 0;
  v6 = 0;
  v7 = 0;
  vnspop(a1, (uint64_t)&v6);
  if ((__int16)v7 == -1)
  {
    v4 = *(unsigned __int8 *)v6;
    if (v4 == a2)
    {
      *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) = 0;
    }
    else
    {
      if (v4 <= a2)
        v5 = -1;
      else
        v5 = 1;
      *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) = v5;
    }
  }
  else
  {
    LOWORD(v9) = -1;
    v8 = &v10;
    BYTE2(v9) = 0;
    vcompare(a1, (uint64_t **)&v8, &v6);
  }
}

uint64_t clearDeltaStackBack_0(uint64_t a1)
{
  _BYTE *v1;

  v1 = *(_BYTE **)(*(_QWORD *)(a1 + 200) + 1760);
  if (*v1 == 8)
    v1 = *(_BYTE **)(*(_QWORD *)(a1 + 192) + 8112);
  return freeDeltaStackTo_1(a1, (uint64_t)v1);
}

void bsclr_pushca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  clearDeltaStackBack_0(a1);
  OUTLINED_FUNCTION_3_64(*(_QWORD *)(a1 + 200));
  *(_QWORD *)(v4 + 8) = a2;
}

void bspush_ca(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_64(*(_QWORD *)(a1 + 200));
  *(_QWORD *)(v2 + 8) = v1;
}

__n128 bspush_ca_scan(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;

  v3 = *(__n128 **)(a1 + 192);
  v2 = *(_QWORD *)(a1 + 200);
  v4 = *(int *)(v2 + 288);
  v5 = *(_QWORD *)(v2 + 1720) - v4;
  v6 = *(_DWORD *)(v2 + 1728);
  *(_BYTE *)v5 = 0;
  *(_QWORD *)(v5 + 8) = a2;
  v7 = *(int *)(v2 + 284);
  v8 = v5 - v7;
  *(_QWORD *)(v2 + 1720) = v8;
  *(_DWORD *)(v2 + 1728) = v6 - (v4 + v7);
  *(_BYTE *)v8 = 1;
  result = v3[505];
  *(__n128 *)(v8 + 8) = result;
  return result;
}

void bspush_boa(uint64_t a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_5_57(*(_QWORD *)(a1 + 200));
  *v1 = 4;
}

void bspush_nboa(uint64_t a1)
{
  _BYTE *v1;

  OUTLINED_FUNCTION_5_57(*(_QWORD *)(a1 + 200));
  *v1 = 6;
}

void bspush_vbot(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_57(*(_QWORD *)(a1 + 200));
  *(_BYTE *)v1 = 5;
  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v2 + 1760);
  *(_QWORD *)(v2 + 1760) = v1;
}

uint64_t bspop_vbot(uint64_t a1)
{
  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 1760) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 1720) + 8);
  return popDeltaStackTop(a1);
}

uint64_t back()
{
  return 1;
}

uint64_t back_nboa(uint64_t a1)
{
  *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9296) = 1;
  return 1;
}

uint64_t freeDeltaStackTo_1(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 200);
  v3 = *(_QWORD *)(v2 + 1744);
  if (v3)
  {
    *(_QWORD *)(v2 + 1720) = a2;
    *(_DWORD *)(v2 + 1728) = *(_DWORD *)(v2 + 1780) + a2 - *(_DWORD *)(v3 + 32);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_73@<X0>(uint64_t a1@<X0>, unsigned __int16 a2@<W8>, uint64_t a3, _WORD *a4, uint64_t a5)
{
  _WORD *v5;

  a4 = v5;
  a5 = a2;
  return vnspush(a1, &a4);
}

void OUTLINED_FUNCTION_2_64(uint64_t a1, unsigned __int16 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  a9 = 0;
  a10 = 0;
  vinitloc_new(a1, (uint64_t)&a9, a2);
}

void OUTLINED_FUNCTION_3_64(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE *v2;

  v1 = *(int *)(a1 + 288);
  v2 = (_BYTE *)(*(_QWORD *)(a1 + 1720) - v1);
  *(_QWORD *)(a1 + 1720) = v2;
  *(_DWORD *)(a1 + 1728) -= v1;
  *v2 = 0;
}

uint64_t OUTLINED_FUNCTION_4_60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a11 = 0;
  a12 = 0;
  return vnspop(a1, (uint64_t)&a11);
}

void OUTLINED_FUNCTION_5_57(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 1720) -= v1;
  *(_DWORD *)(a1 + 1728) -= v1;
}

uint64_t OUTLINED_FUNCTION_6_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _WORD *a9)
{
  uint64_t v9;

  return vnspush(v9, &a9);
}

void starttest_l(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_74(a1, a2);
  OUTLINED_FUNCTION_18_43();
}

uint64_t clearDeltaStackBack_1(uint64_t a1)
{
  _BYTE *v1;

  v1 = *(_BYTE **)(*(_QWORD *)(a1 + 200) + 1760);
  if (*v1 == 8)
    v1 = *(_BYTE **)(*(_QWORD *)(a1 + 192) + 8112);
  return freeDeltaStackTo_2(a1, (uint64_t)v1);
}

void starttest_e(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_74(a1, a2);
  OUTLINED_FUNCTION_18_43();
}

void starttest(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_0_74(a1, a2);
  OUTLINED_FUNCTION_18_43();
}

BOOL testeq(uint64_t a1)
{
  return *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) != 0;
}

BOOL testneq(uint64_t a1)
{
  return *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) == 0;
}

BOOL testgt(uint64_t a1)
{
  return *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) != 1;
}

BOOL testge(uint64_t a1)
{
  return *(unsigned __int8 *)(*(_QWORD *)(a1 + 192) + 8120) == 255;
}

BOOL testlt(uint64_t a1)
{
  return *(unsigned __int8 *)(*(_QWORD *)(a1 + 192) + 8120) != 255;
}

BOOL testle(uint64_t a1)
{
  return *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) == 1;
}

BOOL compare_ptas(uint64_t a1)
{
  int v1;

  vcomp_pta(a1, a1 + 112, a1 + 144);
  return v1 != 0;
}

void compare_tvars(uint64_t a1, unsigned __int16 *a2, unsigned __int16 *a3)
{
  uint64_t *v6[2];
  uint64_t *v7[2];

  v7[0] = 0;
  v7[1] = 0;
  v6[0] = 0;
  v6[1] = 0;
  vinitloc_new(a1, (uint64_t)v7, a2);
  vinitloc_new(a1, (uint64_t)v6, a3);
  vcompare(a1, v7, v6);
  if (((__int16)*a2 & 0x80000000) == 0)
    a2[1] = -1;
  if (((__int16)*a3 & 0x80000000) == 0)
    a3[1] = -1;
}

BOOL test_string(_QWORD *a1, uint64_t a2, int a3, _BYTE *a4)
{
  uint64_t *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (***v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int16 v17;
  uint64_t *v19[2];
  uint64_t *v20;
  uint64_t v21;
  double v22;
  __int16 v23;
  unint64_t v24;

  v24 = 0;
  v23 = 0;
  v22 = 0.0;
  if (!a3)
    return vscanadvOverToken() == 0;
  v20 = 0;
  v21 = 0;
  v5 = (uint64_t *)(a4 + 1);
  v6 = *a4 - 199;
  switch(*a4)
  {
    case 0xC7:
      LOWORD(v21) = -1;
      break;
    case 0xC8:
      v8 = -2;
      goto LABEL_8;
    case 0xC9:
      LOWORD(v21) = -3;
      v9 = (uint64_t *)&v24;
      goto LABEL_10;
    case 0xCA:
      v8 = -4;
LABEL_8:
      LOWORD(v21) = v8;
      v9 = (uint64_t *)&v23;
      goto LABEL_10;
    case 0xCB:
      LOWORD(v21) = -5;
      v9 = (uint64_t *)&v22;
LABEL_10:
      v20 = v9;
      break;
    default:
      break;
  }
  v10 = (uint64_t *)&a4[a3];
  v19[0] = 0;
  v19[1] = 0;
  OUTLINED_FUNCTION_10_53();
  v12 = (uint64_t (***)(uint64_t))(v11 + 16);
  while (v5 < v10)
  {
    if (*(_BYTE *)(a1[24] + 8089))
      OUTLINED_FUNCTION_6_57();
    else
      OUTLINED_FUNCTION_11_51();
    v15 = *(_QWORD *)(*(_QWORD *)(v13 + 8080) + 8 * v14);
    if ((v15 & 0xFFFFFFFFFFFFFFFCLL) == 0)
      return 1;
    if ((*(_BYTE *)(v15 & 0xFFFFFFFFFFFFFFFCLL) & 2) == 0)
    {
      switch(v6)
      {
        case 0:
          v20 = v5;
          v5 = (uint64_t *)((char *)v5 + 1);
          break;
        case 1:
        case 2:
          v16 = ((unint64_t)*((unsigned __int8 *)v5 + 1) << 16) & 0xFFFFFFFF80FFFFFFLL | ((unint64_t)(*(_BYTE *)v5 & 0x7F) << 24) | ((unint64_t)*((unsigned __int8 *)v5 + 2) << 8) | *((unsigned __int8 *)v5 + 3);
          v24 = v16;
          if (*(char *)v5 < 0)
            v24 = -(uint64_t)v16;
          v5 = (uint64_t *)((char *)v5 + 4);
          break;
        case 3:
          v17 = *((unsigned __int8 *)v5 + 1) | ((*(_BYTE *)v5 & 0x7F) << 8);
          v23 = v17;
          if (*(char *)v5 < 0)
            v23 = -v17;
          v5 = (uint64_t *)((char *)v5 + 2);
          break;
        case 4:
          v22 = atof((const char *)v5);
          break;
        default:
          break;
      }
      v19[0] = (uint64_t *)OUTLINED_FUNCTION_20_42(*v12);
      vcompare((uint64_t)a1, &v20, v19);
      if (*(_BYTE *)(a1[24] + 8120))
        return 1;
    }
    v7 = 1;
    if (!OUTLINED_FUNCTION_5_58(a1, 1))
      return v7;
  }
  return 0;
}

uint64_t test_string_s(uint64_t a1, unsigned int a2, unsigned int a3, uint64_t *a4)
{
  uint64_t *v4;
  unint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  int v10;
  _BYTE *v11;
  char v12;
  int v13;
  int v14;
  _BYTE *v15;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  v4 = a4;
  v19 = 0;
  v20 = 0;
  v17 = 0;
  v18 = 0;
  v6 = (unint64_t)a4 + a3;
  v7 = vstmtbl[12 * a2 + 1];
  v8 = *((unsigned __int16 *)v7 + 15);
  if (v8 == 0xFFFF)
  {
    OUTLINED_FUNCTION_19_43();
    v9 = 1;
    while ((unint64_t)v4 < v6)
    {
      OUTLINED_FUNCTION_9_53();
      if (v14)
        OUTLINED_FUNCTION_6_57();
      else
        OUTLINED_FUNCTION_11_51();
      OUTLINED_FUNCTION_8_54();
      if (v12)
        return 1;
      if ((*v15 & 2) == 0)
      {
        if (*(unsigned __int8 *)OUTLINED_FUNCTION_4_61((uint64_t)v15) != *(unsigned __int8 *)v4)
          return 1;
        v4 = (uint64_t *)((char *)v4 + 1);
      }
      if (!OUTLINED_FUNCTION_2_65())
        return v9;
    }
  }
  else
  {
    LOWORD(v20) = -1;
    BYTE2(v20) = v7[32];
    BYTE2(v18) = BYTE2(v20);
    LOWORD(v18) = v8;
    OUTLINED_FUNCTION_19_43();
    v9 = 1;
    while ((unint64_t)v4 < v6)
    {
      OUTLINED_FUNCTION_9_53();
      if (v10)
        OUTLINED_FUNCTION_6_57();
      else
        OUTLINED_FUNCTION_11_51();
      OUTLINED_FUNCTION_8_54();
      if (v12)
        return 1;
      if ((*v11 & 2) == 0)
      {
        v19 = v4;
        v17 = (uint64_t *)OUTLINED_FUNCTION_4_61((uint64_t)v11);
        vcompare(a1, &v19, &v17);
        OUTLINED_FUNCTION_21_41();
        if (v13)
          return 1;
        v4 = (uint64_t *)((char *)v4 + 1);
      }
      if (!OUTLINED_FUNCTION_2_65())
        return v9;
    }
  }
  return 0;
}

void test_string_l()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  _BYTE *v3;
  char v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;

  OUTLINED_FUNCTION_15_46();
  OUTLINED_FUNCTION_1_67();
  do
  {
    if (v0 >= v1)
      break;
    OUTLINED_FUNCTION_9_53();
    if (v2)
      OUTLINED_FUNCTION_6_57();
    else
      OUTLINED_FUNCTION_11_51();
    OUTLINED_FUNCTION_8_54();
    if (v4)
      break;
    if ((*v3 & 2) == 0)
    {
      OUTLINED_FUNCTION_17_46();
      v6 = (uint64_t *)OUTLINED_FUNCTION_4_61(v5);
      OUTLINED_FUNCTION_3_65(v6, v7);
      OUTLINED_FUNCTION_21_41();
      if (v8)
        break;
      v0 += 2;
    }
  }
  while (OUTLINED_FUNCTION_2_65());
  OUTLINED_FUNCTION_7_56();
}

void test_string_lng(uint64_t a1, uint64_t a2, unsigned int a3, unint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  _BYTE *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  int v11;

  v4 = a4;
  v5 = a4 + a3;
  OUTLINED_FUNCTION_1_67();
  do
  {
    if (v4 >= v5)
      break;
    OUTLINED_FUNCTION_9_53();
    if (v6)
      OUTLINED_FUNCTION_6_57();
    else
      OUTLINED_FUNCTION_11_51();
    OUTLINED_FUNCTION_8_54();
    if (v8)
      break;
    if ((*v7 & 2) == 0)
    {
      v9 = (uint64_t *)OUTLINED_FUNCTION_4_61((uint64_t)v7);
      OUTLINED_FUNCTION_3_65(v9, v10);
      OUTLINED_FUNCTION_21_41();
      if (v11)
        break;
      v4 += 4;
    }
  }
  while (OUTLINED_FUNCTION_2_65());
  OUTLINED_FUNCTION_7_56();
}

void test_string_i()
{
  unint64_t v0;
  unint64_t v1;
  int v2;
  _BYTE *v3;
  char v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  int v8;

  OUTLINED_FUNCTION_15_46();
  OUTLINED_FUNCTION_1_67();
  do
  {
    if (v0 >= v1)
      break;
    OUTLINED_FUNCTION_9_53();
    if (v2)
      OUTLINED_FUNCTION_6_57();
    else
      OUTLINED_FUNCTION_11_51();
    OUTLINED_FUNCTION_8_54();
    if (v4)
      break;
    if ((*v3 & 2) == 0)
    {
      OUTLINED_FUNCTION_17_46();
      v6 = (uint64_t *)OUTLINED_FUNCTION_4_61(v5);
      OUTLINED_FUNCTION_3_65(v6, v7);
      OUTLINED_FUNCTION_21_41();
      if (v8)
        break;
      v0 += 2;
    }
  }
  while (OUTLINED_FUNCTION_2_65());
  OUTLINED_FUNCTION_7_56();
}

uint64_t test_string_f()
{
  uint64_t v0;
  const char *v1;
  uint64_t v2;
  int v3;
  const char *v4;
  uint64_t v5;
  uint64_t (***v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_10_53();
  if (!v3)
    return 0;
  v4 = v1;
  v5 = v0;
  v6 = (uint64_t (***)(uint64_t))(v2 + 16);
  while (1)
  {
    if (*(_BYTE *)(*(_QWORD *)(v5 + 192) + 8089))
      OUTLINED_FUNCTION_6_57();
    else
      OUTLINED_FUNCTION_11_51();
    v9 = *(_QWORD *)(*(_QWORD *)(v7 + 8080) + 8 * v8);
    if ((v9 & 0xFFFFFFFFFFFFFFFCLL) == 0)
      break;
    if ((*(_BYTE *)(v9 & 0xFFFFFFFFFFFFFFFCLL) & 2) == 0)
    {
      atof(v4);
      v10 = (uint64_t *)OUTLINED_FUNCTION_20_42(*v6);
      OUTLINED_FUNCTION_3_65(v10, v11);
      if (*(_BYTE *)(*(_QWORD *)(v5 + 192) + 8120))
        break;
    }
    v12 = 1;
    if (!OUTLINED_FUNCTION_2_65())
      return v12;
  }
  return 1;
}

uint64_t test_ptr(uint64_t a1)
{
  uint64_t v2;

  if (!*(_QWORD *)(a1 + 112))
    return 1;
  if ((*(_BYTE *)(a1 + 136) & 2) != 0)
    vnormalize(a1, a1 + 112);
  v2 = 1;
  while (*(_QWORD *)(*(_QWORD *)(a1 + 192) + 8080) != *(_QWORD *)(a1 + 112))
  {
    if (!OUTLINED_FUNCTION_5_58((_QWORD *)a1, 0))
      return v2;
  }
  return 0;
}

uint64_t test_time(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD v17[2];

  v4 = *(_OWORD *)(a1 + 128);
  v17[0] = *(_OWORD *)(a1 + 112);
  v17[1] = v4;
  vtsttmark_tv(a1, (uint64_t)v17);
  v5 = 1;
  if (!v6)
  {
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8080);
    *(_BYTE *)(a1 + 168) = 1;
    OUTLINED_FUNCTION_14_47();
    if (!v7)
    {
      while (1)
      {
        v9 = *(_QWORD *)(a1 + 192);
        if (!*(_BYTE *)(v9 + 8120))
          break;
        if (!OUTLINED_FUNCTION_5_58((_QWORD *)a1, 0))
          return v5;
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8080);
        OUTLINED_FUNCTION_14_47();
        if (v10)
          return 1;
      }
      v5 = 0;
      v11 = *(_QWORD *)(a1 + 200);
      v12 = *(int *)(v11 + 288);
      v13 = *(_QWORD *)(v11 + 1720) - v12;
      v14 = *(_DWORD *)(v11 + 1728);
      *(_BYTE *)v13 = 3;
      *(_QWORD *)(v13 + 8) = a2;
      v15 = *(int *)(v11 + 284);
      v16 = v13 - v15;
      *(_QWORD *)(v11 + 1720) = v16;
      *(_DWORD *)(v11 + 1728) = v14 - (v12 + v15);
      *(_BYTE *)v16 = 1;
      *(_OWORD *)(v16 + 8) = *(_OWORD *)(v9 + 8080);
      *(_BYTE *)(*(_QWORD *)(a1 + 280) + *(unsigned __int8 *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a1 + 120))) = 1;
    }
  }
  return v5;
}

void test_synch(_QWORD *a1, uint64_t a2, unsigned int a3, unsigned __int8 *a4)
{
  int v7;
  unint64_t v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unsigned int v14;

  v7 = 0;
  v8 = a3;
  while (!v7)
  {
    v9 = 0;
    v7 = 1;
    while (v9 < v8 && v7)
    {
      if ((*(_QWORD *)(*(_QWORD *)(a1[24] + 8080) + 8 * (*(_DWORD *)(a1[24] + 9084) + a4[v9])) & 1) != 0)
      {
        v7 = 1;
      }
      else
      {
        v10 = OUTLINED_FUNCTION_5_58(a1, 0);
        v7 = 0;
        if (!v10)
          goto LABEL_13;
      }
      ++v9;
    }
  }
  OUTLINED_FUNCTION_13_48(a1[25]);
  *(_QWORD *)(v11 + 8) = a2;
  *(_QWORD *)(v12 + 1720) = v11 - *(int *)(v12 + 284);
  OUTLINED_FUNCTION_12_49(v12);
  for (; v8; --v8)
  {
    v14 = *a4++;
    *(_BYTE *)(a1[35] + *(unsigned __int8 *)(a1[33] + v14)) = v13;
  }
LABEL_13:
  OUTLINED_FUNCTION_16_46();
}

void test_fence(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  int v8;
  char v9;
  uint64_t v10;
  int v11;
  int v12;
  char v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  if (a3)
  {
    v8 = 0;
    while (!v8)
    {
      v9 = 0;
      v8 = 1;
      while (a3 > v9 && v8)
      {
        v10 = *(unsigned __int8 *)(a4 + v9);
        if (*(unsigned __int8 *)(*(_QWORD *)(a1 + 264) + v10) == *(unsigned __int8 *)(a1 + 288)
          && !FENCED(a1, *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8080), (char)v10))
        {
          v11 = OUTLINED_FUNCTION_5_58((_QWORD *)a1, 0);
          v8 = 0;
          if (!v11)
            goto LABEL_30;
        }
        else
        {
          v8 = 1;
        }
        ++v9;
      }
    }
    v18 = 0;
    v20 = *(_QWORD *)(a1 + 192);
    v19 = *(_QWORD *)(a1 + 200);
    v21 = *(int *)(v19 + 288);
    v22 = *(_QWORD *)(v19 + 1720) - v21;
    *(_BYTE *)v22 = 3;
    *(_QWORD *)(v22 + 8) = a2;
    v23 = *(int *)(v19 + 284);
    v24 = v22 - v23;
    LODWORD(v21) = v21 + v23;
    LODWORD(v23) = *(_DWORD *)(v19 + 1728);
    *(_QWORD *)(v19 + 1720) = v24;
    *(_DWORD *)(v19 + 1728) = v23 - v21;
    *(_BYTE *)v24 = 1;
    *(_OWORD *)(v24 + 8) = *(_OWORD *)(v20 + 8080);
    while (a3 > v18)
      *(_BYTE *)(*(_QWORD *)(a1 + 280) + *(unsigned __int8 *)(*(_QWORD *)(a1 + 264) + *(unsigned __int8 *)(a4 + v18++))) = 1;
  }
  else
  {
    v12 = 0;
    while (!v12)
    {
      v13 = 0;
      v12 = 1;
      while (1)
      {
        v14 = v13;
        v15 = *(unsigned __int8 *)(a1 + 288);
        if (!v12 || v14 >= v15)
          break;
        v16 = *(_QWORD *)(a1 + 192);
        if (v14 == *(unsigned __int8 *)(v16 + 8088)
          || *(unsigned __int8 *)(*(_QWORD *)(a1 + 264) + v14) != v15
          || FENCED(a1, *(_QWORD *)(v16 + 8080), v14))
        {
          v12 = 1;
        }
        else
        {
          v17 = OUTLINED_FUNCTION_5_58((_QWORD *)a1, 0);
          v12 = 0;
          if (!v17)
            goto LABEL_30;
        }
        v13 = v14 + 1;
      }
    }
    OUTLINED_FUNCTION_13_48(*(_QWORD *)(a1 + 200));
    *(_QWORD *)(v25 + 8) = a2;
    *(_QWORD *)(v26 + 1720) = v25 - *(int *)(v26 + 284);
    OUTLINED_FUNCTION_12_49(v26);
    *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8090) = v27;
  }
LABEL_30:
  OUTLINED_FUNCTION_16_46();
}

BOOL test_eof(uint64_t a1, char a2)
{
  return !vf_eof(a1, a2);
}

uint64_t test_hasval(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 184);
  *(_DWORD *)(v1 + 436) = 0;
  *(_BYTE *)(v1 + 32) = 0;
  return 1;
}

uint64_t freeDeltaStackTo_2(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(result + 200);
  v3 = *(_QWORD *)(v2 + 1744);
  if (v3)
  {
    *(_QWORD *)(v2 + 1720) = a2;
    *(_DWORD *)(v2 + 1728) = *(_DWORD *)(v2 + 1780) + a2 - *(_DWORD *)(v3 + 32);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_74(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8064) = a2;
  result = clearDeltaStackBack_1(a1);
  v5 = *(_QWORD *)(a1 + 192);
  v4 = *(_QWORD *)(a1 + 200);
  v6 = *(int *)(v4 + 288);
  v7 = *(_QWORD *)(v4 + 1720) - v6;
  *(_QWORD *)(v4 + 1720) = v7;
  *(_DWORD *)(v4 + 1728) -= v6;
  *(_BYTE *)v7 = 0;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v5 + 8064);
  *(_BYTE *)(v5 + 8096) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_2_65()
{
  _QWORD *v0;

  return vscanadv(v0, 1, 1);
}

void OUTLINED_FUNCTION_3_65(uint64_t *a1, uint64_t a2, ...)
{
  uint64_t v2;
  uint64_t *v3;
  va_list va;
  uint64_t v5;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v3 = a1;
  vcompare(v2, (uint64_t **)va1, (uint64_t **)va);
}

uint64_t OUTLINED_FUNCTION_4_61@<X0>(uint64_t a1@<X8>)
{
  uint64_t (***v1)(uint64_t);

  return (**v1)(a1 + 16);
}

uint64_t OUTLINED_FUNCTION_5_58(_QWORD *a1, int a2)
{
  return vscanadv(a1, a2, 1);
}

__n128 OUTLINED_FUNCTION_12_49@<Q0>(uint64_t a1@<X8>)
{
  __n128 *v1;
  int v2;
  uint64_t v3;
  int v4;
  __n128 result;

  *(_DWORD *)(a1 + 1728) = v4 - v2;
  *(_BYTE *)v3 = 1;
  result = v1[505];
  *(__n128 *)(v3 + 8) = result;
  return result;
}

void OUTLINED_FUNCTION_13_48(uint64_t a1@<X8>)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 1720) - *(int *)(a1 + 288)) = 3;
}

void OUTLINED_FUNCTION_14_47()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  vcomp_pta(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_20_42@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return (*a1)(v1 + 16);
}

uint64_t num_streams(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 288);
}

uint64_t num_fields_in_stream(int a1)
{
  return LODWORD(vstmtbl[12 * a1 + 8]);
}

char *stream_name(int a1)
{
  return vstmtbl[12 * a1];
}

uint64_t single_letter_stream(int a1)
{
  return LOBYTE(vstmtbl[12 * a1 + 10]);
}

uint64_t time_stream(int a1)
{
  return BYTE6(vstmtbl[12 * a1 + 10]);
}

uint64_t num_fields(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = 0;
  result = 0;
  while (16 * (*(_DWORD *)a1 & ~(*(int *)a1 >> 31)) != v2)
  {
    result = (*(_DWORD *)(*(_QWORD *)(a1 + 8) + v2 + 4) + result);
    v2 += 16;
  }
  return result;
}

uint64_t field_name(int a1, int a2)
{
  return *(_QWORD *)&vstmtbl[12 * a1 + 1][40 * a2];
}

uint64_t first_field(uint64_t a1, uint64_t a2, _BYTE *a3, _DWORD *a4)
{
  uint64_t v4;

  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 300) = 0;
  if (*(int *)a2 < 1)
    return OUTLINED_FUNCTION_7_57();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(int *)(v4 + 4) < 1)
    return OUTLINED_FUNCTION_7_57();
  else
    return OUTLINED_FUNCTION_3_66(a1, a2, a3, a4, *(_BYTE *)v4);
}

uint64_t next_field(uint64_t a1, uint64_t a2, _BYTE *a3, _DWORD *a4)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 200);
  v5 = *(_DWORD *)(v4 + 304) + 1;
  *(_DWORD *)(v4 + 304) = v5;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(int *)(v4 + 300);
  if (v5 < *(_DWORD *)(v6 + 16 * v7 + 4))
    return OUTLINED_FUNCTION_3_66(a1, a2, a3, a4, *(_BYTE *)(v6 + 16 * v7));
  LODWORD(v7) = v7 + 1;
  *(_DWORD *)(v4 + 300) = v7;
  if ((int)v7 < *(_DWORD *)a2)
  {
    *(_DWORD *)(v4 + 304) = 0;
    v7 = (int)v7;
    return OUTLINED_FUNCTION_3_66(a1, a2, a3, a4, *(_BYTE *)(v6 + 16 * v7));
  }
  return OUTLINED_FUNCTION_7_57();
}

uint64_t left_delta(uint64_t a1)
{
  return **(_QWORD **)(a1 + 200);
}

uint64_t right_delta(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8);
}

unint64_t sync_to_right(uint64_t a1, int a2, uint64_t a3)
{
  return VRSYNC(a1, a3, a2);
}

_QWORD *sync_to_left(uint64_t a1, int a2, uint64_t a3)
{
  return VLSYNC(a3, a2);
}

uint64_t is_token_prev(int a1, uint64_t a2)
{
  if ((*(_QWORD *)(a2 + 8 * a1 + 24) & 0xFFFFFFFFFFFFFFFCLL) != 0
    && (*(_BYTE *)(*(_QWORD *)(a2 + 8 * a1 + 24) & 0xFFFFFFFFFFFFFFFCLL) & 2) != 0)
  {
    return OUTLINED_FUNCTION_7_57();
  }
  else
  {
    return OUTLINED_FUNCTION_5_59();
  }
}

uint64_t is_token_next()
{
  uint64_t v0;
  _BYTE *v1;

  OUTLINED_FUNCTION_24_38();
  v1 = (_BYTE *)(v0 & 0xFFFFFFFFFFFFFFFCLL);
  if (v1 && (*v1 & 2) != 0)
    return OUTLINED_FUNCTION_7_57();
  else
    return OUTLINED_FUNCTION_5_59();
}

unint64_t prev_token(int a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 8 * a1 + 24) & 0xFFFFFFFFFFFFFFFCLL;
}

unint64_t next_token()
{
  uint64_t v0;

  OUTLINED_FUNCTION_24_38();
  return v0 & 0xFFFFFFFFFFFFFFFCLL;
}

_QWORD *left_context()
{
  int v0;
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_24_38();
  if ((v2 & 1) == 0)
    return VLSYNC(v1, v0);
  return (_QWORD *)v1;
}

unint64_t right_context(uint64_t a1, int a2, uint64_t a3)
{
  if ((*(_QWORD *)(a3 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2)) & 1) == 0)
    return VRSYNC(a1, a3, a2);
  return a3;
}

BOOL syncmark_equ(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void valid_prefix()
{
  char v1;
  char v2;

  OUTLINED_FUNCTION_9_54();
  if (!(!v2 & v1))
    __asm { BR              X10 }
  OUTLINED_FUNCTION_4_62();
}

BOOL allchrs(unsigned __int8 *a1)
{
  int v1;

  while (1)
  {
    v1 = *a1;
    if (v1 != 45)
      break;
    ++a1;
  }
  return v1 == 0;
}

uint64_t strprefix(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;

  while (1)
  {
    v3 = *a2++;
    v2 = v3;
    if (!v3)
      break;
    v4 = *a1++;
    if (v4 != v2)
      return OUTLINED_FUNCTION_7_57();
  }
  return OUTLINED_FUNCTION_5_59();
}

void legal_long()
{
  _QWORD *v0;
  uint64_t v1;
  int *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  char *v12;

  v2 = OUTLINED_FUNCTION_6_58();
  OUTLINED_FUNCTION_10_54(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  OUTLINED_FUNCTION_22_40();
  if (!v10 && *__error() != 34 && v0)
    *v0 = v1;
  OUTLINED_FUNCTION_20_43();
}

void legal_int()
{
  _DWORD *v0;
  uint64_t v1;
  int *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v12;
  uint64_t v13;
  char *v14;

  v2 = OUTLINED_FUNCTION_6_58();
  OUTLINED_FUNCTION_10_54(v2, v3, v4, v5, v6, v7, v8, v9, v13, v14);
  OUTLINED_FUNCTION_22_40();
  if (!v10)
  {
    v12 = *__error() == 34 || v1 > 0x7FFFFFFF || v1 < (uint64_t)0xFFFFFFFF80000000;
    if (!v12 && v0)
      *v0 = v1;
  }
  OUTLINED_FUNCTION_20_43();
}

uint64_t legal_double()
{
  double *v0;
  const char *v1;
  double v2;
  double v3;
  char *v5;

  *OUTLINED_FUNCTION_6_58() = 35;
  v2 = strtod(v1, &v5);
  if (*v5)
    return 0;
  v3 = v2;
  if (*__error() == 34)
    return 0;
  if (v0)
    *v0 = v3;
  return 1;
}

void valid_prefix_char(int a1, int a2, int a3)
{
  unsigned __int8 v3;
  char *v4;
  unsigned int v5;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v3 = a3;
  v4 = vstmtbl[12 * a1 + 1];
  v5 = *(__int16 *)&v4[40 * a2 + 30];
  if (v5 + 4 >= 2 && v5 >= 0xFFFFFFFE)
  {
    v7 = *(_WORD *)&v4[40 * a2 + 28];
    if (a3 == 45)
    {
      v8 = 0;
      v9 = v7 & ~(v7 >> 31);
      while (8 * v9 != v8)
      {
        v8 += 8;
        if (!OUTLINED_FUNCTION_17_47())
          goto LABEL_14;
      }
    }
    else
    {
      v9 = v7 & ~(v7 >> 31);
    }
    v10 = 0;
    do
    {
      if (8 * v9 == v10)
        break;
      v11 = **(unsigned __int8 **)(*(_QWORD *)&v4[40 * a2 + 16] + v10);
      v10 += 8;
    }
    while (v11 != v3);
  }
LABEL_14:
  OUTLINED_FUNCTION_4_62();
}

uint64_t unique_value(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  char v5;
  char v6;

  if (*a4)
  {
    OUTLINED_FUNCTION_9_54();
    if (!(!v6 & v5))
      __asm { BR              X10 }
  }
  return 0;
}

uint64_t non_unique_value(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  char v5;
  char v6;

  if (*a4)
  {
    OUTLINED_FUNCTION_9_54();
    if (!(!v6 & v5))
      __asm { BR              X10 }
  }
  return 0;
}

BOOL enum_field(int a1, int a2)
{
  return *(unsigned __int16 *)&vstmtbl[12 * a1 + 1][40 * a2 + 30] > 0xFFFDu;
}

char *field_value(int a1, uint64_t a2, int a3, char *a4)
{
  char **v5;
  char *v6;
  _QWORD *v7;
  char *v8;
  _QWORD *v10;
  double v11;
  BOOL v12;
  int v13;
  int v14;
  double v15;
  BOOL v16;
  _QWORD *v17;
  double v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v5 = &vstmtbl[12 * a1];
  v8 = v5[1];
  v7 = v5 + 1;
  v6 = v8;
  switch(*(_WORD *)&v8[40 * a3 + 30])
  {
    case 0xFFFB:
      v10 = (_QWORD *)OUTLINED_FUNCTION_0_75(a2, (uint64_t)vstmtbl);
      v11 = *(double *)v10;
      if (*(_BYTE *)(*v7 + 40 * a3 + 32))
        v12 = v11 == 2.22507386e-308;
      else
        v12 = 0;
      if (v12)
        goto LABEL_19;
      sprintf(a4, *(const char **)(*v7 + 40 * a3 + 8), v11, *v10);
      return a4;
    case 0xFFFC:
      v14 = *(unsigned __int16 *)OUTLINED_FUNCTION_0_75(a2, (uint64_t)vstmtbl);
      if (*(_BYTE *)(*v7 + 40 * a3 + 32))
        v16 = v14 == 32769;
      else
        v16 = 0;
      if (v16)
        goto LABEL_19;
      sprintf(a4, *(const char **)(*v7 + 40 * a3 + 8), v15, (__int16)v14);
      return a4;
    case 0xFFFD:
      v17 = (_QWORD *)OUTLINED_FUNCTION_0_75(a2, (uint64_t)vstmtbl);
      if (*(_BYTE *)(*v7 + 40 * a3 + 32))
        v19 = *v17 == -2147483647;
      else
        v19 = 0;
      if (v19)
      {
LABEL_19:
        v13 = 5259591;
        goto LABEL_26;
      }
      sprintf(a4, *(const char **)(*v7 + 40 * a3 + 8), v18, *v17);
      return a4;
    case 0xFFFE:
      v20 = *(_QWORD *)&v6[40 * a3 + 16];
      v21 = *(int *)OUTLINED_FUNCTION_0_75(a2, (uint64_t)vstmtbl);
      goto LABEL_22;
    case 0xFFFF:
      v20 = *(_QWORD *)&v6[40 * a3 + 16];
      v21 = *(unsigned __int8 *)OUTLINED_FUNCTION_0_75(a2, (uint64_t)vstmtbl);
LABEL_22:
      v22 = strcpy(a4, *(const char **)(v20 + 8 * v21));
      if (!strcmp(v22, "undefined"))
      {
        v13 = 2960685;
      }
      else
      {
        if (strcmp(a4, " "))
          return a4;
        v13 = 2564135;
      }
LABEL_26:
      *(_DWORD *)a4 = v13;
      return a4;
    default:
      v13 = 4144959;
      goto LABEL_26;
  }
}

uint64_t time_field_value(int a1, uint64_t a2)
{
  int v2;

  if (!BYTE6(vstmtbl[12 * a1 + 10]))
    return 0xFFFFFFFFLL;
  v2 = *((__int16 *)vstmtbl[12 * a1 + 1] + 15);
  if (v2 != -4)
  {
    if (v2 == -3)
      return *(unsigned int *)OUTLINED_FUNCTION_11_52(a2, (uint64_t)vstmtbl);
    return 0xFFFFFFFFLL;
  }
  return *(__int16 *)OUTLINED_FUNCTION_11_52(a2, (uint64_t)vstmtbl);
}

unsigned __int8 *first_fieldval(uint64_t a1, char a2, int a3, unsigned __int8 *a4)
{
  uint64_t v5;
  BOOL v6;

  v5 = *(_QWORD *)(a1 + 200);
  *(_BYTE *)(v5 + 308) = a2;
  *(_DWORD *)(v5 + 312) = a3;
  *(_QWORD *)(v5 + 320) = a4;
  *(_DWORD *)(v5 + 328) = -1;
  if (a4)
    v6 = allchrs(a4);
  else
    v6 = 0;
  *(_BYTE *)(v5 + 332) = v6;
  return next_fieldval(a1);
}

unsigned __int8 *next_fieldval(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  _BYTE *v6;
  uint64_t v7;
  char *v8;
  int v9;
  unsigned __int8 *v10;

  v1 = *(_QWORD *)(a1 + 200);
  v2 = *(int *)(v1 + 328);
  v3 = v2 + 1;
  *(_DWORD *)(v1 + 328) = v2 + 1;
  v4 = vstmtbl[12 * *(char *)(v1 + 308) + 1];
  v5 = *(_DWORD *)(v1 + 312);
  if ((int)v2 + 1 < *(__int16 *)&v4[40 * v5 + 28])
  {
    v6 = *(_BYTE **)(v1 + 320);
    if (!v6 || !*v6)
      return *(unsigned __int8 **)(*(_QWORD *)&v4[40 * v5 + 16] + 8 * (int)v3);
  }
  v7 = *(__int16 *)&v4[40 * v5 + 28];
  v8 = &v4[40 * v5 + 16];
  v9 = v2 + 2;
  while (v3 < v7)
  {
    v10 = *(unsigned __int8 **)(*(_QWORD *)v8 + 8 * v3);
    if (strprefix(v10, *(unsigned __int8 **)(v1 + 320))
      || *(_BYTE *)(v1 + 332) && !strcmp((const char *)v10, "undefined"))
    {
      return v10;
    }
    ++v3;
    *(_DWORD *)(v1 + 328) = v9++;
  }
  return 0;
}

uint64_t can_del_sync(uint64_t a1, int a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  char v15[81];
  char v16[81];
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v3 = *(_QWORD **)(a1 + 200);
  if (*v3 == a3 || v3[1] == a3)
    return 0;
  if (!is_token_next() || !is_token_prev(a2, a3))
    return 1;
  v8 = *(_QWORD *)(a3 + 8 * a2 + 24) & 0xFFFFFFFFFFFFFFFCLL;
  v9 = *(_QWORD *)(a3 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL;
  if (BYTE6(vstmtbl[12 * a2 + 10])
    || (OUTLINED_FUNCTION_21_42(a2, v8, v7, v16), result = 0, *(_DWORD *)v16 == 5259591)
    && (OUTLINED_FUNCTION_21_42(a2, v9, v14, v15), result = 0, *(_DWORD *)v15 == 5259591))
  {
    if (SLODWORD(vstmtbl[12 * a2 + 8]) > 1)
    {
      OUTLINED_FUNCTION_9_54();
      if (!(!v12 & v11))
        __asm { BR              X9 }
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sync_in_stm()
{
  char v0;

  OUTLINED_FUNCTION_24_38();
  return v0 & 1;
}

unsigned __int16 *pvlist_size(unsigned __int16 *result)
{
  if (result)
    return (unsigned __int16 *)(bswap32(*result) >> 17);
  return result;
}

void *pvlist_name()
{
  uint64_t v0;
  __int16 v1;
  unsigned __int16 v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_12_50();
  v4 = vardesc(v0, v1, v2, v3);
  if (v4)
    return *(void **)v4;
  else
    return &unk_2486A531A;
}

uint64_t pvlist_val()
{
  uint64_t v0;
  __int16 v1;
  unsigned __int16 v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12_50();
  return *(_QWORD *)varloc(v0, v1, v2, v3);
}

uint64_t allow_left_ctxt(uint64_t a1, _BYTE *a2, int a3, _BYTE *a4)
{
  int v4;

  if (a2 != a4)
  {
    v4 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3;
    if ((*(_QWORD *)&a2[8 * v4] & 1) != 0)
    {
      while (a2 != a4)
      {
        a2 = (_BYTE *)(*(_QWORD *)&a2[8 * v4] & 0xFFFFFFFFFFFFFFFCLL);
        if (!a2 || (*a2 & 2) == 0)
          return OUTLINED_FUNCTION_7_57();
      }
    }
  }
  return OUTLINED_FUNCTION_5_59();
}

uint64_t allow_right_ctxt(uint64_t a1, _BYTE *a2, int a3, _BYTE *a4)
{
  int v4;

  if (a2 != a4)
  {
    v4 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3;
    if ((*(_QWORD *)&a2[8 * v4] & 1) != 0)
    {
      while (a2 != a4)
      {
        a2 = (_BYTE *)(*(_QWORD *)&a2[8 * v4] & 0xFFFFFFFFFFFFFFFCLL);
        if (!a2 || (*a2 & 2) == 0)
          return OUTLINED_FUNCTION_7_57();
      }
    }
  }
  return OUTLINED_FUNCTION_5_59();
}

char *extract_string(uint64_t a1, int a2, uint64_t a3, unint64_t a4, char *a5, int a6)
{
  unint64_t v9;
  int v12;
  int v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  char v19[81];
  uint64_t v20;

  v9 = a3;
  v20 = *MEMORY[0x24BDAC8D0];
  visleft(a1, a3, a4);
  if (!v12)
    return 0;
  v13 = a6 - 1;
  v14 = a5;
  while (v9 != a4 && v13)
  {
    if (is_token_next())
    {
      v16 = v19;
      OUTLINED_FUNCTION_21_42(a2, *(_QWORD *)(v9 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL, v15, v19);
      while (1)
      {
        v17 = *v16;
        if (!*v16 || !v13)
          break;
        ++v16;
        *v14++ = v17;
        --v13;
      }
    }
    v9 = VRSYNC(a1, v9, a2);
  }
  *v14 = 0;
  return a5;
}

BOOL init_stream(uint64_t a1, int a2)
{
  int v2;

  vinit_stm(a1, a2);
  return v2 != 0;
}

BOOL ins_tok_named(uint64_t *a1, int a2, uint64_t a3, char *__s1, uint64_t a5)
{
  _QWORD *v8;
  int v9;
  uint64_t v11;
  uint64_t v12;

  v12 = 0;
  v11 = a3;
  LOWORD(v12) = *((_WORD *)vstmtbl[12 * a2 + 1] + 15);
  *(_DWORD *)((char *)&v12 + 2) = strcmp(__s1, "GAP") == 0;
  v8 = VLSYNC(a5, a2);
  vins_tok(a1, a2, (uint64_t)v8, a5, (uint64_t)&v11);
  return v9 != 0;
}

void set_fld_value(uint64_t *a1, int a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned __int8 v9;
  _QWORD *v11;

  v9 = a2;
  v11 = VLSYNC(a6, a2);
  vmark(a1, v9, a3, (unint64_t)v11, a6, a4);
  OUTLINED_FUNCTION_18_44();
}

_QWORD *ins_sync(uint64_t a1, int a2, unint64_t a3, int a4)
{
  if (a4)
  {
    vins_sync(a1, a2, *(_QWORD *)(a3 + 8 * a2 + 24) & 0xFFFFFFFFFFFFFFFCLL, a3);
    return VLSYNC(a3, a2);
  }
  else
  {
    vins_sync(a1, a2, a3, *(_QWORD *)(a3 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL);
    return (_QWORD *)VRSYNC(a1, a3, a2);
  }
}

uint64_t del_two_point(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  vdel_2pt(a1, a2, a3, a4);
  return 1;
}

BOOL del_sync(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return vdel_1pt(a1, a2, a3) != 0;
}

uint64_t project_sync(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;

  v5 = 0;
  if (a2 && a4)
  {
    if (a5)
    {
      vproj_l(a1, a2, a4, a3);
      if (v6)
        return 1;
    }
    else
    {
      vproj_r(a1, a2, a4, a3);
      if (v7)
        return 1;
    }
    return 0;
  }
  return v5;
}

void merge_sync(uint64_t a1, unint64_t a2, int a3, unint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  int v25;

  if ((*(_QWORD *)(a4 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3)) & 1) != 0
    && project_sync(a1, a2, a3, a4, 0))
  {
    if (a2 == a4)
    {
LABEL_37:
      vmerge(a1, a4, a2);
    }
    else
    {
      v7 = *(uint64_t **)(a1 + 200);
      v8 = *v7;
      v9 = v7[1];
      if ((v8 != a2 || v9 != a4) && (v8 != a4 || v9 != a2))
      {
        for (i = 0; ; ++i)
        {
          if (i >= *(unsigned __int8 *)(a1 + 288))
            goto LABEL_37;
          v13 = i + *(int *)(*(_QWORD *)(a1 + 192) + 9084);
          v14 = *(_QWORD *)(a2 + 8 * v13);
          v15 = *(_QWORD *)(a4 + 8 * v13);
          if ((v14 & 1) != 0)
          {
            if ((v15 & 1) != 0)
            {
              if ((v14 & 0xFFFFFFFFFFFFFFFCLL) != a4 && (*(_QWORD *)(a2 + 8 * i + 24) & 0xFFFFFFFFFFFFFFFCLL) != a4)
                break;
            }
            else
            {
              v18 = *(_QWORD *)(a4 + 8 * i + 24) & 0xFFFFFFFFFFFFFFFCLL;
              if (v18 != a2)
              {
                visleft(a1, v18, a2);
                if (!v19)
                  break;
              }
              v20 = v15 & 0xFFFFFFFFFFFFFFFCLL;
              if ((v15 & 0xFFFFFFFFFFFFFFFCLL) != a2)
              {
                v21 = a1;
                v22 = a2;
                goto LABEL_29;
              }
            }
          }
          else if ((v15 & 1) != 0)
          {
            v23 = *(_QWORD *)(a2 + 8 * i + 24) & 0xFFFFFFFFFFFFFFFCLL;
            if (v23 != a4)
            {
              visleft(a1, v23, a4);
              if (!v24)
                break;
            }
            v20 = v14 & 0xFFFFFFFFFFFFFFFCLL;
            if ((v14 & 0xFFFFFFFFFFFFFFFCLL) != a4)
            {
              v21 = a1;
              v22 = a4;
LABEL_29:
              visright(v21, v20, v22);
              if (!v25)
                break;
              continue;
            }
          }
          else
          {
            visleft(a1, v14 & 0xFFFFFFFFFFFFFFFCLL, *(_QWORD *)(a4 + 8 * i + 24) & 0xFFFFFFFFFFFFFFFCLL);
            if (v16)
              break;
            visright(a1, *(_QWORD *)(a2 + 8 * i + 24) & 0xFFFFFFFFFFFFFFFCLL, *(_QWORD *)(a4 + 8 * (i + *(int *)(*(_QWORD *)(a1 + 192) + 9084))) & 0xFFFFFFFFFFFFFFFCLL);
            if (v17)
              break;
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_18_44();
}

BOOL divide_time(uint64_t *a1, unsigned __int8 a2, unint64_t a3, __int16 a4)
{
  return vsplit_time(a1, a2, a3, a4) != 0;
}

void fill_stream_list(uint64_t a1, int *a2, _BYTE *a3)
{
  void *v5;
  uint64_t v6;
  int i;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  unsigned __int8 *j;
  _BYTE *v18;
  int v19;
  BOOL v20;
  _QWORD *v21;
  uint64_t k;
  uint64_t v23;
  char *v24;
  size_t v25;
  void *v26;
  uint64_t m;
  char *v28;
  uint64_t v29;

  if (*a3)
  {
    v5 = OUTLINED_FUNCTION_8_55(*a3);
    *((_QWORD *)a2 + 1) = v5;
    if (!v5)
      goto LABEL_28;
    v6 = 0;
    for (i = 1; ; i = v12)
    {
      v8 = *a2;
      if (v6 >= v8)
        break;
      v9 = &a3[i];
      v10 = *((_QWORD *)a2 + 1);
      *(_BYTE *)(v10 + 16 * v6) = *v9;
      v11 = v9[1];
      v12 = i + 2;
      v13 = &a3[i + 2];
      v14 = 1;
      v15 = v11;
      for (j = v13; v15; --v15)
      {
        if (*j++)
          ++v14;
      }
      *(_DWORD *)(v10 + 16 * v6 + 4) = v14;
      v18 = OUTLINED_FUNCTION_13_49(v14);
      *(_QWORD *)(*((_QWORD *)a2 + 1) + 16 * v6 + 8) = v18;
      if (v18)
      {
        *v18 = 0;
        v12 = i + v11 + 2;
        v19 = 1;
        while (1)
        {
          v20 = __OFSUB__((_DWORD)v11, 1);
          LODWORD(v11) = v11 - 1;
          if ((int)v11 < 0 != v20)
            break;
          if (*v13)
            *(_BYTE *)(*(_QWORD *)(*((_QWORD *)a2 + 1) + 16 * v6 + 8) + v19++) = *v13;
          ++v13;
        }
      }
      ++v6;
    }
    v29 = *((_QWORD *)a2 + 1) + 16 * v8;
  }
  else
  {
    v21 = OUTLINED_FUNCTION_8_55(*(unsigned __int8 *)(a1 + 288));
    *((_QWORD *)a2 + 1) = v21;
    if (!v21)
      goto LABEL_28;
    for (k = 0; ; ++k)
    {
      v23 = *a2;
      if (k >= v23)
        break;
      v24 = (char *)&v21[2 * k];
      *v24 = k;
      v25 = SLODWORD(vstmtbl[12 * k + 8]);
      *((_DWORD *)v24 + 1) = v25;
      v26 = OUTLINED_FUNCTION_13_49(v25);
      v21 = (_QWORD *)*((_QWORD *)a2 + 1);
      v21[2 * k + 1] = v26;
      if (v26)
      {
        for (m = 0; ; ++m)
        {
          v28 = (char *)&v21[2 * k];
          if (m >= *((int *)v28 + 1))
            break;
          *(_BYTE *)(*((_QWORD *)v28 + 1) + m) = m;
          v21 = (_QWORD *)*((_QWORD *)a2 + 1);
        }
      }
    }
    v29 = (uint64_t)&v21[2 * v23];
  }
  if (!*(_QWORD *)(v29 - 8))
    free_stream_list(a2);
LABEL_28:
  OUTLINED_FUNCTION_4_62();
}

void free_stream_list(int *a1)
{
  uint64_t v2;
  uint64_t i;
  char *v4;

  v2 = 0;
  for (i = 8; ; i += 16)
  {
    v4 = (char *)*((_QWORD *)a1 + 1);
    if (v2 >= *a1)
      break;
    free(*(void **)&v4[i]);
    ++v2;
  }
  free(v4);
  *((_QWORD *)a1 + 1) = 0;
}

BOOL insert_string(uint64_t *a1, int a2, unint64_t a3, char *a4)
{
  _BOOL8 result;
  char **v6;
  char **v7;
  char *v8;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __int16 *v15;
  __int16 v17;
  char v18;
  char __s2[2];

  result = 0;
  *(_WORD *)__s2 = 0;
  v6 = &vstmtbl[12 * a2];
  v8 = v6[1];
  v7 = v6 + 1;
  if (*((unsigned __int16 *)v8 + 15) >= 0xFFFEu)
  {
    if (LOBYTE(vstmtbl[12 * a2 + 10]))
    {
      if (is_token_prev(a2, a3))
LABEL_7:
        ins_sync((uint64_t)a1, a2, a3, 1);
LABEL_8:
      if (!*a4)
      {
        result = 1;
        *(_DWORD *)(a1[23] + 452) = 1;
        return result;
      }
      v12 = 0;
      __s2[0] = *a4;
      v13 = *v7;
      v14 = *((__int16 *)*v7 + 14) & ~(*((__int16 *)*v7 + 14) >> 31);
      while (v14 != v12)
      {
        if (!strcmp(*(const char **)(*((_QWORD *)v13 + 2) + 8 * v12), __s2))
        {
          if (*((__int16 *)v13 + 15) == -1)
          {
            v18 = v12;
            v15 = (__int16 *)&v18;
          }
          else
          {
            v17 = v12;
            v15 = &v17;
          }
          result = ins_tok_named(a1, a2, (uint64_t)v15, __s2, a3);
          if (!result)
            return result;
          if (*++a4)
            goto LABEL_7;
          goto LABEL_8;
        }
        ++v12;
      }
    }
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_75@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 96 * v2 + 16) + 8 * v3))(a1 + 16);
}

uint64_t OUTLINED_FUNCTION_1_68()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t))(*v2 + 8 * v1))(v0);
}

uint64_t OUTLINED_FUNCTION_2_66()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t))(*v2 + 8 * v1))(v0);
}

uint64_t OUTLINED_FUNCTION_3_66@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, _DWORD *a4@<X3>, char a5@<W8>)
{
  *a3 = a5;
  *a4 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 16 * *(int *)(*(_QWORD *)(a1 + 200) + 300) + 8)
                           + *(int *)(*(_QWORD *)(a1 + 200) + 304));
  return 1;
}

uint64_t OUTLINED_FUNCTION_5_59()
{
  return 1;
}

int *OUTLINED_FUNCTION_6_58()
{
  return __error();
}

uint64_t OUTLINED_FUNCTION_7_57()
{
  return 0;
}

void *OUTLINED_FUNCTION_8_55(size_t a1)
{
  _DWORD *v1;

  *v1 = a1;
  return malloc_type_calloc(a1, 0x10uLL, 0x1010040449DF08BuLL);
}

uint64_t OUTLINED_FUNCTION_10_54(_DWORD *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *__endptr)
{
  const char *v10;

  *a1 = 35;
  return strtol(v10, &__endptr, 0);
}

uint64_t OUTLINED_FUNCTION_11_52@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v2;

  return (**(uint64_t (***)(uint64_t))(a2 + 96 * v2 + 16))(a1 + 16);
}

void *OUTLINED_FUNCTION_13_49(size_t a1)
{
  return malloc_type_calloc(a1, 4uLL, 0x100004052888210uLL);
}

void OUTLINED_FUNCTION_14_48()
{
  legal_long();
}

void OUTLINED_FUNCTION_15_47()
{
  legal_int();
}

uint64_t OUTLINED_FUNCTION_16_47()
{
  return legal_double();
}

uint64_t OUTLINED_FUNCTION_17_47()
{
  const char *v0;
  uint64_t v1;
  _QWORD *v2;

  return strcmp(*(const char **)(*v2 + v1), v0);
}

char *OUTLINED_FUNCTION_21_42(int a1, uint64_t a2, uint64_t a3, char *a4)
{
  return field_value(a1, a2, 0, a4);
}

uint64_t OUTLINED_FUNCTION_22_40()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_23_39@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v2;

  return strprefix(*(unsigned __int8 **)(a1 + 8 * v2), v1);
}

uint64_t OUTLINED_FUNCTION_25_38@<X0>(uint64_t a1@<X8>)
{
  const char *v1;
  uint64_t v2;

  return strcmp(*(const char **)(a1 + 8 * v2), v1);
}

void vproj_r(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  if ((*(_QWORD *)(a2 + 8 * (*(int *)(*(_QWORD *)(a1 + 192) + 9084) + (unint64_t)a4)) & 1) == 0)
  {
    OUTLINED_FUNCTION_11_53();
    if (*(_DWORD *)(v9 + 8864))
    {
      OUTLINED_FUNCTION_2_67(v5, 1);
      OUTLINED_FUNCTION_2_67(v5, 0);
      v8 = *(int *)(*(_QWORD *)(v5 + 192) + 9084) + (unint64_t)v6;
    }
    v10 = (uint64_t *)(*(_QWORD *)(v7 + 8 * v8) & 0xFFFFFFFFFFFFFFFCLL);
    if (!v10 || (v11 = *(_QWORD *)(v7 + 8 * v8) & 0xFFFFFFFFFFFFFFFCLL, (*(_BYTE *)v10 & 2) == 0))
      v11 = v10[1] & 0xFFFFFFFFFFFFFFFCLL;
    project_rl(v5, v4, v7, v10, v6);
    if (NONSEQ(v4) && *(_DWORD *)(*(_QWORD *)(v5 + 192) + 8868))
    {
      OUTLINED_FUNCTION_10_55();
      INSSPINEL(v5, v4, v11);
    }
  }
  OUTLINED_FUNCTION_4_63();
}

unint64_t vgetsc(uint64_t a1, int a2, int a3, unint64_t a4, unsigned int a5)
{
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int j;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int i;

  v6 = a4;
  if (a3)
  {
    if (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 8868))
    {
      if (!OUTLINED_FUNCTION_8_56())
      {
        v9 = *(_QWORD *)(a1 + 192);
        if (!*(_BYTE *)(*(_QWORD *)(v9 + 9072) + a5))
        {
          if (!a2)
          {
            for (i = *(_DWORD *)(v9 + 9084); ; v6 = *(_QWORD *)(v6 + 8 * (i - 2)) & 0xFFFFFFFFFFFFFFFCLL)
            {
              if ((*(_QWORD *)(v6 + 8 * (int)(i + a5)) & 1) != 0)
              {
                if (!OUTLINED_FUNCTION_8_56())
                  return v6;
                i = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084);
              }
            }
          }
          while (1)
          {
            if ((*(_QWORD *)(v6 + 8 * (int)(*(_DWORD *)(v9 + 9084) + a5)) & 1) != 0)
            {
              if (!OUTLINED_FUNCTION_8_56())
                return v6;
              v9 = *(_QWORD *)(a1 + 192);
            }
            v6 = *(_QWORD *)(v6 + 8) & 0xFFFFFFFFFFFFFFFCLL;
          }
        }
      }
    }
    v10 = 0;
    v11 = 1;
    v12 = v6;
    v13 = v6;
LABEL_6:
    if (v11 >= 1 && v6)
    {
      while (1)
      {
        v14 = v6;
        v15 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084);
        if ((*(_QWORD *)(v6 + 8 * (int)(v15 + a5)) & 1) == 0)
          break;
        v6 = *(_QWORD *)(v6 + 8 * (v15 - 1)) & 0xFFFFFFFFFFFFFFFCLL;
        v10 = v14;
        if (!v6)
          goto LABEL_29;
      }
      for (j = 0; ; ++j)
      {
        v17 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084);
        if (j >= *(unsigned __int8 *)(a1 + 288))
        {
          v21 = v17 - 1;
          v22 = *(_QWORD *)(v14 + 8 * v21);
          v6 = v22 & 0xFFFFFFFFFFFFFFFCLL;
          *(_QWORD *)(v14 + 8 * v21) = v22 & 3;
          if (v10)
          {
            v23 = v10 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
            *(_QWORD *)(v23 - 8) = *(_QWORD *)(v23 - 8) & 3 | v6;
          }
          else
          {
            v13 = v22 & 0xFFFFFFFFFFFFFFFCLL;
          }
          --v11;
          goto LABEL_6;
        }
        if ((*(_QWORD *)(v14 + 8 * (int)(j + v17)) & 1) == 0)
          goto LABEL_23;
        if (a2)
        {
          v18 = (unint64_t)VLSYNC(v14, (char)j);
          if (!v18)
            goto LABEL_23;
        }
        else
        {
          v18 = VRSYNC(a1, v14, (char)j);
          if (!v18)
            goto LABEL_23;
        }
        v19 = *(int *)(*(_QWORD *)(a1 + 192) + 9084) - 1;
        if (*(_QWORD *)(v18 + 8 * v19) <= 3uLL && v18 != v12)
        {
          *(_QWORD *)(v12 + 8 * v19) = *(_QWORD *)(v12 + 8 * v19) & 3 | v18;
          ++v11;
          goto LABEL_24;
        }
LABEL_23:
        v18 = v12;
LABEL_24:
        v12 = v18;
      }
    }
LABEL_29:
    v6 = 0;
    v24 = *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * (a2 != 0));
LABEL_30:
    while (1)
    {
      v25 = v13;
      if (v11 < 2)
        break;
      while (v25)
      {
        v26 = v25;
        v25 = *(_QWORD *)(v25 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084) - 8) & 0xFFFFFFFFFFFFFFFCLL;
        v27 = *(_QWORD *)(v26 + 16);
        if ((v27 & 1) == 0)
        {
          v28 = v27 & 0xFFFFFFFFFFFFFFFCLL;
          if (v28)
            v29 = v28;
          else
            v29 = v26;
          if (a2)
            v30 = VRSYNC(a1, v29, (char)a5);
          else
            v30 = (unint64_t)VLSYNC(v29, (char)a5);
          if (v30 == v24)
          {
            v11 = 1;
            v6 = v26;
            goto LABEL_30;
          }
          if (*(_QWORD *)(v30 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084) - 8) > 3uLL || v30 == v12)
          {
            *(_QWORD *)(v26 + 16) |= 1uLL;
            --v11;
          }
          else
          {
            *(_QWORD *)(v26 + 16) = *(_QWORD *)(v26 + 16) & 3 | v30;
          }
        }
      }
    }
    while (v13)
    {
      if (!v6)
      {
        if ((*(_BYTE *)(v13 + 16) & 1) != 0)
          v6 = 0;
        else
          v6 = v13;
      }
      v32 = v13 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
      v33 = *(_QWORD *)(v32 - 8);
      *(_QWORD *)(v32 - 8) = v33 & 3;
      *(_QWORD *)(v13 + 16) &= 2uLL;
      v34 = v13 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
      v13 = v33 & 0xFFFFFFFFFFFFFFFCLL;
      *(_QWORD *)(v34 - 8) &= ~1uLL;
    }
  }
  else
  {
    if (a2)
      v35 = a5 + 3;
    else
      v35 = *(int *)(*(_QWORD *)(a1 + 192) + 9084) + (unint64_t)a5;
    return *(_QWORD *)(a4 + 8 * v35) & 0xFFFFFFFFFFFFFFFCLL;
  }
  return v6;
}

uint64_t project_rl(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unsigned int a5)
{
  unsigned int v10;
  uint64_t result;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;

  v10 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a5;
  *(_QWORD *)(a2 + 8 * (int)v10) |= 1uLL;
  CLRONESTM(a2);
  result = OUTLINED_FUNCTION_9_55();
  if ((_DWORD)result && !*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + a5))
    result = OUTLINED_FUNCTION_7_58();
  if ((uint64_t *)a3 != a4)
  {
    v12 = a5 + 3;
    *(_QWORD *)(a2 + 8 * v12) = *(_QWORD *)(a2 + 8 * v12) & 3 | a3;
    v13 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a5;
    *(_QWORD *)(a2 + 8 * (int)v13) = *(_QWORD *)(a2 + 8 * (int)v13) & 3 | (unint64_t)a4;
    if (a3 && (*(_BYTE *)a3 & 2) != 0)
    {
      v14 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a5;
      *(_QWORD *)(a3 + 8 * (int)v14) = *(_QWORD *)(a3 + 8 * (int)v14) & 3 | a2;
      if (!a4)
      {
LABEL_11:
        *a4 = a2;
        return result;
      }
    }
    else
    {
      *(_QWORD *)(a3 + 8) = a2;
      if (!a4)
        goto LABEL_11;
    }
    if ((*(_BYTE *)a4 & 2) == 0)
      goto LABEL_11;
    a4[v12] = a4[v12] & 3 | a2;
  }
  return result;
}

void vproj_l(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;

  if ((*(_QWORD *)(a2 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a4)) & 1) != 0)
    goto LABEL_13;
  OUTLINED_FUNCTION_11_53();
  if (*(_DWORD *)(v8 + 8864))
  {
    OUTLINED_FUNCTION_2_67(v5, 1);
    if ((*(_QWORD *)(v4 + 8 * (int)(*(_DWORD *)(*(_QWORD *)(v5 + 192) + 9084) + v6)) & 1) == 0)
      OUTLINED_FUNCTION_2_67(v5, 0);
  }
  v9 = (uint64_t *)(v7[v6 + 3] & 0xFFFFFFFFFFFFFFFCLL);
  if (v9)
  {
    v10 = *v9;
    v11 = v7[v6 + 3] & 0xFFFFFFFFFFFFFFFCLL;
    if ((*v9 & 2) != 0)
      goto LABEL_10;
  }
  else
  {
    v10 = MEMORY[0];
  }
  v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
LABEL_10:
  project_rl(v5, v4, (unint64_t)v9, v7, v6);
  if (NONSEQ(v4) && *(_DWORD *)(*(_QWORD *)(v5 + 192) + 8868))
  {
    OUTLINED_FUNCTION_10_55();
    INSSPINER(v5, v4, v11);
  }
LABEL_13:
  OUTLINED_FUNCTION_4_63();
}

uint64_t vctxtinit(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  void *v4;

  if (*(_BYTE *)(a1 + 288))
  {
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 352) = OUTLINED_FUNCTION_0_76(*(unsigned __int8 *)(a1 + 288));
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 360) = OUTLINED_FUNCTION_0_76(*(unsigned __int8 *)(a1 + 288));
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 368) = OUTLINED_FUNCTION_0_76(*(unsigned __int8 *)(a1 + 288));
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 376) = OUTLINED_FUNCTION_0_76(*(unsigned __int8 *)(a1 + 288));
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 384) = malloc_type_malloc(*(unsigned __int8 *)(a1 + 288), 0x7908F214uLL);
    v2 = malloc_type_malloc(*(unsigned __int8 *)(a1 + 288), 0xED8631DFuLL);
    v3 = *(_QWORD **)(a1 + 200);
    v3[49] = v2;
  }
  else
  {
    v3 = *(_QWORD **)(a1 + 200);
  }
  v4 = (void *)v3[44];
  if (v4 && v3[45] && v3[46] && v3[47] && v3[48] && v3[49])
    return 1;
  free(v4);
  free(*(void **)(*(_QWORD *)(a1 + 200) + 360));
  free(*(void **)(*(_QWORD *)(a1 + 200) + 368));
  free(*(void **)(*(_QWORD *)(a1 + 200) + 376));
  free(*(void **)(*(_QWORD *)(a1 + 200) + 384));
  free(*(void **)(*(_QWORD *)(a1 + 200) + 392));
  return 0;
}

void vproject(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v5 = *(int *)(*(_QWORD *)(a1 + 192) + 9084) + (unint64_t)a5;
  if ((*(_QWORD *)(a2 + 8 * v5) & 1) != 0)
    goto LABEL_26;
  if (!a3 || !a4 || (*(_QWORD *)a3 & 2) == 0)
  {
    if (a4 && (*a4 & 2) != 0)
    {
      OUTLINED_FUNCTION_1_69(v5);
      v16 = OUTLINED_FUNCTION_9_55();
      v17 = *(_QWORD *)(a1 + 192);
      if (v16 && !*(_BYTE *)(*(_QWORD *)(v17 + 9072) + a5))
      {
        OUTLINED_FUNCTION_7_58();
        v17 = *(_QWORD *)(a1 + 192);
      }
      *(_QWORD *)(a3 + 8) = a2;
      OUTLINED_FUNCTION_3_67(v17);
      v11 = a5 + 3;
      *(_QWORD *)&a4[8 * v11] = *(_QWORD *)&a4[8 * v11] & 3 | a2;
      goto LABEL_23;
    }
    if (!a3)
      goto LABEL_26;
LABEL_13:
    if ((*(_BYTE *)a3 & 2) == 0)
      goto LABEL_26;
    OUTLINED_FUNCTION_1_69(v5);
    v14 = OUTLINED_FUNCTION_9_55();
    v15 = *(_QWORD *)(a1 + 192);
    if (v14 && !*(_BYTE *)(*(_QWORD *)(v15 + 9072) + a5))
    {
      OUTLINED_FUNCTION_7_58();
      v15 = *(_QWORD *)(a1 + 192);
    }
    OUTLINED_FUNCTION_5_60(v15);
    OUTLINED_FUNCTION_3_67(*(_QWORD *)(a1 + 192));
    *(_QWORD *)a4 = a2;
    v11 = a5 + 3;
    goto LABEL_23;
  }
  if ((*a4 & 2) == 0)
    goto LABEL_13;
  v11 = a5 + 3;
  OUTLINED_FUNCTION_1_69(v5);
  v12 = OUTLINED_FUNCTION_9_55();
  v13 = *(_QWORD *)(a1 + 192);
  if (v12 && !*(_BYTE *)(*(_QWORD *)(v13 + 9072) + a5))
  {
    OUTLINED_FUNCTION_7_58();
    v13 = *(_QWORD *)(a1 + 192);
  }
  OUTLINED_FUNCTION_5_60(v13);
  *(_QWORD *)&a4[8 * v11] = *(_QWORD *)&a4[8 * v11] & 3 | a2;
  OUTLINED_FUNCTION_3_67(*(_QWORD *)(a1 + 192));
LABEL_23:
  *(_QWORD *)(a2 + 8 * v11) = *(_QWORD *)(a2 + 8 * v11) & 3 | a3;
  if (OUTLINED_FUNCTION_8_56() && *(_DWORD *)(*(_QWORD *)(a1 + 192) + 8868))
  {
    DELSPINE(a1, a2);
    INSSPINEL(a1, a2, (uint64_t)a4);
  }
LABEL_26:
  OUTLINED_FUNCTION_4_63();
}

void vdef_proj(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unint64_t v6;
  _BYTE *v7;

  if ((*(_QWORD *)(a2 + 8 * (int)(*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3)) & 1) == 0)
  {
    v6 = OUTLINED_FUNCTION_6_59(a1, 1);
    if (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 8864))
      v7 = (_BYTE *)OUTLINED_FUNCTION_6_59(a1, 0);
    else
      v7 = (_BYTE *)VRSYNC(a1, v6, (char)a3);
    vproject(a1, a2, v6, v7, a3);
  }
}

uint64_t vsetsc(uint64_t result, int a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  uint64_t v6;

  if (a2)
    v6 = a5 + 3;
  else
    v6 = *(int *)(*(_QWORD *)(result + 192) + 9084) + (unint64_t)a5;
  *(_QWORD *)(a4 + 8 * v6) = *(_QWORD *)(a4 + 8 * v6) & 3 | a6;
  return result;
}

void *OUTLINED_FUNCTION_0_76@<X0>(uint64_t a1@<X8>)
{
  return malloc_type_malloc(8 * a1, 0x80040B8603338uLL);
}

uint64_t OUTLINED_FUNCTION_1_69@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(*(_QWORD *)(v3 + 184) + 452) = 1;
  *(_QWORD *)(v2 + 8 * a1) = v1 | 1;
  return CLRONESTM(v2);
}

unint64_t OUTLINED_FUNCTION_2_67(uint64_t a1, int a2)
{
  unint64_t v2;
  unsigned int v3;

  return vgetsc(a1, a2, 1, v2, v3);
}

void OUTLINED_FUNCTION_3_67(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(v2 + 8 * (*(_DWORD *)(a1 + 9084) + v3)) = *(_QWORD *)(v2 + 8 * (*(_DWORD *)(a1 + 9084) + v3)) & 3 | v1;
}

void OUTLINED_FUNCTION_5_60(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_QWORD *)(v2 + 8 * (*(_DWORD *)(a1 + 9084) + v3)) = *(_QWORD *)(v2 + 8 * (*(_DWORD *)(a1 + 9084) + v3)) & 3 | v1;
}

unint64_t OUTLINED_FUNCTION_6_59(uint64_t a1, int a2)
{
  unsigned int v2;
  unint64_t v3;

  return vgetsc(a1, a2, 1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_7_58()
{
  uint64_t v0;

  return CLRALLNSQ(v0);
}

uint64_t OUTLINED_FUNCTION_8_56()
{
  uint64_t v0;

  return NONSEQ(v0);
}

uint64_t OUTLINED_FUNCTION_9_55()
{
  uint64_t v0;

  return ALLNSQ(v0);
}

void OUTLINED_FUNCTION_10_55()
{
  uint64_t v0;
  uint64_t v1;

  DELSPINE(v1, v0);
}

double delta_lib_new(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  double result;

  v2 = malloc_type_malloc(0x930uLL, 0x10B00402BA2B37CuLL);
  *(_QWORD *)(a1 + 200) = v2;
  bzero(v2, 0x930uLL);
  v3 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(v3 + 336) = "---";
  *(_DWORD *)(v3 + 344) = 1;
  result = NAN;
  *(_QWORD *)(v3 + 656) = -1;
  *(_QWORD *)(v3 + 2232) = 0;
  return result;
}

void delta_lib_delete(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    v2 = *(void **)(a1 + 200);
    if (v2)
    {
      bzero(v2, 0x930uLL);
      free(*(void **)(a1 + 200));
      *(_QWORD *)(a1 + 200) = 0;
    }
  }
}

uint64_t absoluteSyncNumPtr(uint64_t a1)
{
  if (a1)
    return a1 & 0xFFFFFFFC;
  else
    return -1;
}

uint64_t absoluteSyncNum(uint64_t a1, uint64_t a2)
{
  if (a2)
    return getDeltaHeapSegNumber(a1, a2, *(_DWORD *)(*(_QWORD *)(a1 + 200) + 248));
  else
    return 0xFFFFFFFFLL;
}

char *streamName(int a1)
{
  return vstmtbl[12 * a1];
}

_QWORD *VLSYNC(uint64_t a1, int a2)
{
  _QWORD *result;

  result = (_QWORD *)(*(_QWORD *)(a1 + 8 * a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
  if (result)
  {
    if ((*result & 2) == 0)
      return (_QWORD *)(*result & 0xFFFFFFFFFFFFFFFCLL);
  }
  return result;
}

unint64_t VRSYNC(uint64_t a1, uint64_t a2, int a3)
{
  unint64_t result;

  result = *(_QWORD *)(a2 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3)) & 0xFFFFFFFFFFFFFFFCLL;
  if (result)
  {
    if ((*(_BYTE *)result & 2) == 0)
      return *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFFFCLL;
  }
  return result;
}

uint64_t FENCED(uint64_t a1, uint64_t a2, int a3)
{
  return (*(_QWORD *)(a2 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3)) >> 1) & 1;
}

uint64_t SETFENCE(uint64_t result, uint64_t a2, int a3)
{
  int v3;

  v3 = *(_DWORD *)(*(_QWORD *)(result + 192) + 9084) + a3;
  *(_QWORD *)(a2 + 8 * v3) |= 2uLL;
  return result;
}

uint64_t UNSETFENCE(uint64_t result, uint64_t a2, int a3)
{
  int v3;

  v3 = *(_DWORD *)(*(_QWORD *)(result + 192) + 9084) + a3;
  *(_QWORD *)(a2 + 8 * v3) &= ~2uLL;
  return result;
}

uint64_t NONSEQ(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 1) & 1;
}

uint64_t SETNONSEQ(uint64_t result)
{
  *(_QWORD *)(result + 16) |= 2uLL;
  return result;
}

uint64_t CLRNONSEQ(uint64_t result)
{
  *(_QWORD *)(result + 16) &= ~2uLL;
  return result;
}

uint64_t SETSPINEL(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_6_60(a1, *(_QWORD *)(a1 + 8) & 3 | a2);
}

uint64_t SETSPINER(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = a2 + 8 * *(int *)(*(_QWORD *)(result + 192) + 9084);
  *(_QWORD *)(v3 - 16) = *(_QWORD *)(v3 - 16) & 3 | a3;
  return result;
}

uint64_t ONESTM(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) & 1;
}

uint64_t SETONESTM(uint64_t a1)
{
  return OUTLINED_FUNCTION_6_60(a1, *(_QWORD *)(a1 + 8) | 1);
}

uint64_t CLRONESTM(uint64_t a1)
{
  return OUTLINED_FUNCTION_6_60(a1, *(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFFELL);
}

uint64_t ALLNSQ(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 8) >> 1) & 1;
}

uint64_t SETALLNSQ(uint64_t a1)
{
  return OUTLINED_FUNCTION_6_60(a1, *(_QWORD *)(a1 + 8) | 2);
}

uint64_t CLRALLNSQ(uint64_t a1)
{
  return OUTLINED_FUNCTION_6_60(a1, *(_QWORD *)(a1 + 8) & 0xFFFFFFFFFFFFFFFDLL);
}

uint64_t SETCTXL(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_4_64(a1, 1, a3, a2, a3, a4);
}

uint64_t SETCTXR(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return OUTLINED_FUNCTION_4_64(a1, 0, a3, a2, a3, a4);
}

uint64_t STMTYP(int a1)
{
  return *((__int16 *)vstmtbl[12 * a1 + 1] + 15);
}

void INSSPINER(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084) - 16;
  v4 = *(_QWORD *)(a3 + v3) & 0xFFFFFFFFFFFFFFFCLL;
  *(_QWORD *)(a2 + v3) = v4 | *(_QWORD *)(a2 + v3) & 3;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)(v4 + 8) & 3 | a2;
  v5 = a3 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
  *(_QWORD *)(v5 - 16) = *(_QWORD *)(v5 - 16) & 3 | a2;
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a2 + 8) & 3 | a3;
  OUTLINED_FUNCTION_1_70(&spine_changed);
}

void INSSPINEL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a3 + 8) & 0xFFFFFFFFFFFFFFFCLL;
  *(_QWORD *)(a2 + 8) = v3 | *(_QWORD *)(a2 + 8) & 3;
  v4 = v3 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
  *(_QWORD *)(v4 - 16) = *(_QWORD *)(v4 - 16) & 3 | a2;
  *(_QWORD *)(a3 + 8) = *(_QWORD *)(a3 + 8) & 3 | a2;
  v5 = a2 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
  *(_QWORD *)(v5 - 16) = *(_QWORD *)(v5 - 16) & 3 | a3;
  OUTLINED_FUNCTION_1_70(&spine_changed);
}

void DELSPINE(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 8);
  v3 = 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084) - 16;
  v4 = *(_QWORD *)(a2 + v3) & 0xFFFFFFFFFFFFFFFCLL;
  *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFFFCLL) + v3) = v4 | *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFFFCLL) + v3) & 3;
  *(_QWORD *)(v4 + 8) = v2 & 0xFFFFFFFFFFFFFFFCLL | *(_QWORD *)(v4 + 8) & 3;
  OUTLINED_FUNCTION_1_70(&spine_changed);
}

void vinit_stm(uint64_t a1, int a2)
{
  unsigned int v4;
  char **v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2;
  vdel_2pt((uint64_t *)a1, a2, **(_QWORD **)(a1 + 200), *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8));
  if (LOBYTE(vstmtbl[12 * a2 + 6]))
  {
    v9 = 0;
    v5 = &vstmtbl[12 * a2];
    v6 = v5[1];
    v7 = v5[2];
    LOWORD(v9) = *((_WORD *)v6 + 15);
    BYTE2(v9) = v6[32];
    v8 = (*(uint64_t (**)(char *))v7)(v5[5]);
    vins_tok((uint64_t *)a1, v4, **(_QWORD **)(a1 + 200), *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8), (uint64_t)&v8);
  }
}

uint64_t vdel_2pt(uint64_t *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t *v11;

  v8 = a1[25];
  *(_BYTE *)(v8 + 136) = a2;
  *(_QWORD *)(v8 + 120) = a3;
  *(_QWORD *)(v8 + 128) = a4;
  v9 = a2;
  v10 = VRSYNC((uint64_t)a1, a3, a2);
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 112) = VLSYNC(a4, v9);
  OUTLINED_FUNCTION_9_56(a1[23]);
  if (v10 == a4)
  {
    v11 = (uint64_t *)(*(_QWORD *)(a3 + 8 * (*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL);
    if (!v11 || (*(_BYTE *)v11 & 2) == 0)
      fdeldel((uint64_t)a1, v11, (uint64_t)v11);
  }
  else
  {
    fdel((uint64_t)a1, 0);
  }
  return 1;
}

void vins_tok(uint64_t *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unint64_t v11;
  signed int v12;
  void *v13;
  uint64_t v14;

  v10 = a1[24];
  *(_DWORD *)(a1[23] + 452) = 1;
  if ((*(_QWORD *)(a3 + 8 * (int)(*(_DWORD *)(v10 + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL) != a4
    || (*(_QWORD *)(a4 + 8 * (a2 + 3)) & 0xFFFFFFFFFFFFFFFCLL) != a3)
  {
    vdel_2pt(a1, a2, a3, a4);
  }
  v11 = (unint64_t)alloc_tok((uint64_t)a1, (uint64_t)&vstmtbl[12 * a2]);
  if (v11)
  {
    v12 = *(_DWORD *)(a1[24] + 9084) + a2;
    *(_QWORD *)(a3 + 8 * v12) = *(_QWORD *)(a3 + 8 * v12) & 3 | v11;
    *(_QWORD *)(a4 + 8 * (a2 + 3)) = *(_QWORD *)(a4 + 8 * (a2 + 3)) & 3 | v11;
    *(_QWORD *)v11 = a3;
    *(_QWORD *)(v11 + 8) = a4;
    v13 = (void *)(v11 + 16);
    if (*(__int16 *)(a5 + 8) < 0)
      vinitflds((int)v13, a2, v13, *(unsigned __int8 **)a5);
    else
      memcpy(v13, *(const void **)a5, SHIDWORD(vstmtbl[12 * a2 + 8]));
    v14 = a1[24];
    *(_DWORD *)(a1[23] + 452) = 1;
    *(_DWORD *)(v14 + 9080) = 0;
  }
  OUTLINED_FUNCTION_2_68();
}

uint64_t vmergable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  result = 1;
  if (a2 != a3 && *(_DWORD *)(*(_QWORD *)(a1 + 192) + 8864))
  {
    v5 = *(uint64_t **)(a1 + 200);
    v6 = *v5;
    v7 = v5[1];
    if (v6 == a2 && v7 == a3)
      return OUTLINED_FUNCTION_5_61();
    else
      return v6 != a3 || v7 != a2;
  }
  return result;
}

void vmerge(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  int v8;
  int v9;
  _BOOL4 v10;
  unsigned __int8 i;
  unsigned __int8 v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  int v24;

  if (a2 != a3)
  {
    v4 = a3;
    *(_DWORD *)(*(_QWORD *)(a1 + 184) + 452) = 1;
    v5 = *(_QWORD **)(a1 + 200);
    if (*v5 == a3 || v5[1] == a3 || *(_DWORD *)(*(_QWORD *)(a1 + 192) + 8868) && (*(_BYTE *)(a2 + 16) & 2) != 0)
    {
      v6 = a3;
      v4 = a2;
    }
    else
    {
      v6 = a2;
    }
    v7 = 0;
    v8 = *(unsigned __int8 *)(a1 + 288);
    while (1)
    {
      if (v7 >= v8)
      {
        v10 = 0;
        goto LABEL_15;
      }
      v9 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + v7;
      if ((*(_QWORD *)(v6 + 8 * v9) & 1) != 0 && (*(_QWORD *)(v4 + 8 * v9) & 1) != 0)
        break;
      ++v7;
    }
    v10 = v6 == (*(_QWORD *)(v4 + 8 * (v7 + 3)) & 0xFFFFFFFFFFFFFFFCLL);
LABEL_15:
    for (i = 0; ; i = v12 + 1)
    {
      v12 = i;
      if ((char)i >= v8)
        break;
      v13 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + (char)i;
      if ((*(_QWORD *)(v4 + 8 * v13) & 1) != 0)
      {
        if ((*(_QWORD *)(v6 + 8 * v13) & 1) == 0 && v10)
        {
          v15 = OUTLINED_FUNCTION_12_51();
          vproj_l(v15, v16, v17, v18);
          if (!v19)
            break;
          v20 = OUTLINED_FUNCTION_12_51();
          vproj_r(v20, v21, v22, v23);
          if (!v24)
            break;
        }
        vdel_1pt(a1, v12, v4);
        v8 = *(unsigned __int8 *)(a1 + 288);
      }
    }
  }
  OUTLINED_FUNCTION_2_68();
}

uint64_t vdel_1pt(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unint64_t v14;
  char **v15;
  uint64_t (**v16)(uint64_t);
  int v17;
  unint64_t v18;
  signed int v19;
  double *v21;
  uint64_t v22;
  void *__dst;
  uint64_t v24;

  OUTLINED_FUNCTION_9_56(*(_QWORD *)(a1 + 184));
  v7 = *(_QWORD *)(v6 + 200);
  *(_BYTE *)(v7 + 136) = v8;
  *(_QWORD *)(v7 + 104) = v9;
  *(_QWORD *)(v7 + 112) = v9;
  v10 = v8;
  *(_QWORD *)(v7 + 120) = VLSYNC(v9, v8);
  *(_QWORD *)(v7 + 128) = VRSYNC(a1, a3, v10);
  v11 = *(_QWORD *)(a3 + 8 * (int)(*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2));
  if ((v11 & 1) != 0)
  {
    v24 = 0;
    v22 = 0;
    v12 = a2 + 3;
    v13 = (_BYTE *)(*(_QWORD *)(a3 + 8 * v12) & 0xFFFFFFFFFFFFFFFCLL);
    if (!v13 || (*v13 & 2) == 0)
    {
      v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
      if ((v11 & 0xFFFFFFFFFFFFFFFCLL) == 0 || (*(_BYTE *)v14 & 2) == 0)
      {
        LOWORD(v22) = *((_WORD *)vstmtbl[12 * (char)a2 + 1] + 15);
        LOWORD(v24) = v22;
        v15 = &vstmtbl[12 * a2];
        v16 = (uint64_t (**)(uint64_t))v15[2];
        BYTE2(v22) = v15[1][32];
        BYTE2(v24) = BYTE2(v22);
        __dst = (void *)(*v16)((uint64_t)(v13 + 16));
        v21 = (double *)(*(uint64_t (**)(unint64_t))v15[2])(v14 + 16);
        if (*((_BYTE *)v15 + 86))
        {
          vadd(a1, &v21, (double **)&__dst);
          vinitflds(v17, a2, __dst, (unsigned __int8 *)v21);
          OUTLINED_FUNCTION_9_56(*(_QWORD *)(a1 + 184));
          v18 = *(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFFCLL;
          v19 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2;
          *(_QWORD *)(a3 + 8 * v19) = v18 | *(_QWORD *)(a3 + 8 * v19) & 3;
          *(_QWORD *)(v18 + 8 * v12) = *(_QWORD *)(v18 + 8 * v12) & 3 | a3;
          cacheDeletedDeltaObject(a1, v14);
        }
      }
    }
    fdel(a1, 1);
  }
  return 1;
}

uint64_t vscanadv(_QWORD *a1, int a2, int a3)
{
  unint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  i = 0;
  v4 = a1[24];
  v5 = *(_QWORD *)(v4 + 8080);
  v6 = *(unsigned __int8 *)(v4 + 8088);
  if (a3)
  {
    v7 = *(unsigned __int8 *)(v4 + 8121);
    if (*(_BYTE *)(v4 + 8121))
    {
      if (*(_BYTE *)(v4 + 8090))
      {
        i = 0;
      }
      else
      {
        for (i = 0; i < v7; ++i)
        {
          v11 = *(_DWORD *)(v4 + 9084);
          v12 = *(unsigned __int8 *)(a1[31] + i);
          if ((*(_QWORD *)(v5 + 8 * (v11 + v12)) & 1) != 0)
            return OUTLINED_FUNCTION_5_61();
          v13 = *(_QWORD *)(v5 + 8 * (v11 + (char)v12));
          v14 = a1[35];
          if ((v13 & 2) != 0 && (_DWORD)v6 != v12 && !*(_BYTE *)(v14 + i))
            return OUTLINED_FUNCTION_5_61();
          *(_BYTE *)(v14 + i) = 0;
          v4 = a1[24];
          v7 = *(unsigned __int8 *)(v4 + 8121);
        }
      }
    }
  }
  if (!v5)
    return OUTLINED_FUNCTION_5_61();
  v8 = *(_BYTE *)(v4 + 8089) ? *(int *)(v4 + 9084) + v6 : v6 + 3;
  v9 = (_BYTE *)(*(_QWORD *)(v5 + 8 * v8) & 0xFFFFFFFFFFFFFFFCLL);
  if (!v9)
    return OUTLINED_FUNCTION_5_61();
  if ((*v9 & 2) != 0)
    goto LABEL_13;
  if (!a2)
    return OUTLINED_FUNCTION_5_61();
  v9 = (_BYTE *)(*(_QWORD *)&v9[8 * (*(_BYTE *)(v4 + 8089) != 0)] & 0xFFFFFFFFFFFFFFFCLL);
LABEL_13:
  *(_QWORD *)(v4 + 8080) = v9;
  *(_BYTE *)(v4 + 8090) = 0;
  while (i < *(unsigned __int8 *)(v4 + 8121))
  {
    *(_BYTE *)(a1[35] + i++) = 0;
    v4 = a1[24];
  }
  return OUTLINED_FUNCTION_8_57();
}

uint64_t vscanadvUptoTokenOrMarker()
{
  _QWORD *v0;
  _BYTE *v1;
  int v2;
  _BYTE *v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t i;
  unsigned __int8 v11;
  unint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_0_77();
  do
  {
    if (v3)
    {
      LODWORD(i) = 0;
      if (v2)
      {
        v11 = *(_BYTE *)(v9 + v6 + 31);
        if (v11)
        {
          if (*(_BYTE *)(v9 + v6))
          {
            LODWORD(i) = 0;
          }
          else
          {
            for (i = 0; i < v11; ++i)
            {
              v13 = *(_DWORD *)(v9 + 9084);
              v14 = *(unsigned __int8 *)(v0[31] + i);
              if ((*(_QWORD *)&v3[8 * v13 + 8 * v14] & 1) != 0)
                return OUTLINED_FUNCTION_5_61();
              v15 = *(_QWORD *)&v3[8 * v13 + 8 * (char)v14];
              v16 = v0[35];
              if ((v15 & 2) != 0 && v4 != v14 && !*(_BYTE *)(v16 + i))
                return OUTLINED_FUNCTION_5_61();
              *(_BYTE *)(v16 + i) = 0;
              v9 = v0[24];
              v11 = *(_BYTE *)(v9 + v7);
            }
          }
        }
      }
      v12 = v5;
      if (*(_BYTE *)(v9 + v8))
        v12 = *(int *)(v9 + 9084) + (unint64_t)v4;
      v3 = (_BYTE *)(*(_QWORD *)&v3[8 * v12] & 0xFFFFFFFFFFFFFFFCLL);
      if (v3)
        goto LABEL_10;
    }
    return OUTLINED_FUNCTION_5_61();
LABEL_10:
    if ((*v3 & 2) == 0)
      break;
    *(_QWORD *)(v9 + 8080) = v3;
    *(_BYTE *)(v9 + v8 + 1) = 0;
    for (i = i; i < *(unsigned __int8 *)(v9 + v7); ++i)
    {
      *(_BYTE *)(v0[35] + i) = 0;
      v9 = v0[24];
    }
  }
  while (v3 != v1);
  return OUTLINED_FUNCTION_8_57();
}

uint64_t vscanadvUptoToken()
{
  _QWORD *v0;
  int v1;
  _BYTE *v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  unsigned __int8 v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_0_77();
  while (1)
  {
    if (!v2)
      return OUTLINED_FUNCTION_5_61();
    LODWORD(i) = 0;
    if (v1)
    {
      v10 = *(_BYTE *)(v8 + v5 + 31);
      if (v10)
      {
        if (*(_BYTE *)(v8 + v5))
        {
          LODWORD(i) = 0;
        }
        else
        {
          for (i = 0; i < v10; ++i)
          {
            v12 = *(_DWORD *)(v8 + 9084);
            v13 = *(unsigned __int8 *)(v0[31] + i);
            if ((*(_QWORD *)&v2[8 * v12 + 8 * v13] & 1) != 0)
              return OUTLINED_FUNCTION_5_61();
            v14 = *(_QWORD *)&v2[8 * v12 + 8 * (char)v13];
            v15 = v0[35];
            if ((v14 & 2) != 0 && v3 != v13 && !*(_BYTE *)(v15 + i))
              return OUTLINED_FUNCTION_5_61();
            *(_BYTE *)(v15 + i) = 0;
            v8 = v0[24];
            v10 = *(_BYTE *)(v8 + v6);
          }
        }
      }
    }
    v11 = v4;
    if (*(_BYTE *)(v8 + v7))
      v11 = *(int *)(v8 + 9084) + (unint64_t)v3;
    v2 = (_BYTE *)(*(_QWORD *)&v2[8 * v11] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v2)
      return OUTLINED_FUNCTION_5_61();
    if ((*v2 & 2) == 0)
      break;
    *(_QWORD *)(v8 + 8080) = v2;
    *(_BYTE *)(v8 + v7 + 1) = 0;
    for (i = i; i < *(unsigned __int8 *)(v8 + v6); ++i)
    {
      *(_BYTE *)(v0[35] + i) = 0;
      v8 = v0[24];
    }
  }
  return OUTLINED_FUNCTION_8_57();
}

uint64_t vscanadvOverToken()
{
  _QWORD *v0;
  int v1;
  _BYTE *v2;
  unsigned int v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  unsigned __int8 v10;
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_0_77();
  while (v2)
  {
    LODWORD(i) = 0;
    if (v1)
    {
      v10 = *(_BYTE *)(v8 + v5 + 31);
      if (v10)
      {
        if (*(_BYTE *)(v8 + v5))
        {
          LODWORD(i) = 0;
        }
        else
        {
          for (i = 0; i < v10; ++i)
          {
            v12 = *(_DWORD *)(v8 + 9084);
            v13 = *(unsigned __int8 *)(v0[31] + i);
            if ((*(_QWORD *)&v2[8 * v12 + 8 * v13] & 1) != 0)
              return OUTLINED_FUNCTION_5_61();
            v14 = *(_QWORD *)&v2[8 * v12 + 8 * (char)v13];
            v15 = v0[35];
            if ((v14 & 2) != 0 && v3 != v13 && !*(_BYTE *)(v15 + i))
              return OUTLINED_FUNCTION_5_61();
            *(_BYTE *)(v15 + i) = 0;
            v8 = v0[24];
            v10 = *(_BYTE *)(v8 + v6);
          }
        }
      }
    }
    v11 = v4;
    if (*(_BYTE *)(v8 + v7))
      v11 = *(int *)(v8 + 9084) + (unint64_t)v3;
    v2 = (_BYTE *)(*(_QWORD *)&v2[8 * v11] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v2)
      break;
    *(_QWORD *)(v8 + 8080) = v2;
    *(_BYTE *)(v8 + v7 + 1) = 0;
    for (i = i; i < *(unsigned __int8 *)(v8 + v7 + 32); ++i)
    {
      *(_BYTE *)(v0[35] + i) = 0;
      v8 = v0[24];
    }
    if ((*v2 & 2) == 0)
    {
      *(_QWORD *)(v8 + 8080) = *(_QWORD *)&v2[8 * (*(_BYTE *)(v8 + v7) != 0)] & 0xFFFFFFFFFFFFFFFCLL;
      return OUTLINED_FUNCTION_8_57();
    }
  }
  return OUTLINED_FUNCTION_5_61();
}

_BYTE *vmovel(_BYTE *a1, int a2)
{
  _BYTE *v2;

  do
  {
    v2 = a1;
    a1 = (_BYTE *)(*(_QWORD *)&a1[8 * a2 + 24] & 0xFFFFFFFFFFFFFFFCLL);
  }
  while (a1 && (*a1 & 2) != 0);
  return v2;
}

_BYTE *vmover(uint64_t a1, _BYTE *a2, int a3)
{
  uint64_t v3;
  _BYTE *result;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a3;
  do
  {
    result = a2;
    a2 = (_BYTE *)(*(_QWORD *)&a2[8 * v3] & 0xFFFFFFFFFFFFFFFCLL);
  }
  while (a2 && (*a2 & 2) != 0);
  return result;
}

uint64_t vmark(uint64_t *a1, unsigned int a2, unsigned __int8 a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  char **v12;
  uint64_t v13;
  unsigned __int8 v16;

  v16 = a3;
  v11 = a1[25];
  *(_WORD *)(v11 + 96) = -1;
  *(_QWORD *)(v11 + 88) = &v16;
  *(_BYTE *)(v11 + 98) = 0;
  v12 = &vstmtbl[12 * a2 + 3];
LABEL_2:
  v13 = *(_QWORD *)(v11 + 8);
  while (a4 != a5 && a4 != v13)
  {
    a4 = *(_QWORD *)(a4 + 8 * (int)(*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL;
    if (!a4 || (*(_BYTE *)a4 & 2) == 0)
    {
      (*(void (**)(unint64_t, uint64_t))&(*v12)[8 * v16])(a4 + 16, a6);
      a4 = *(_QWORD *)(a4 + 8) & 0xFFFFFFFFFFFFFFFCLL;
      v11 = a1[25];
      goto LABEL_2;
    }
  }
  OUTLINED_FUNCTION_9_56(a1[23]);
  return 1;
}

uint64_t vsplit_time(uint64_t *a1, unsigned int a2, unint64_t a3, uint64_t a4)
{
  int v4;
  unint64_t v5;
  _BYTE *v8;
  void *v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  unsigned __int8 *v15;
  __int16 v17;
  uint64_t v18;
  int v19;
  __int16 *v20;
  int v21;
  __int16 *v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a4;
  v5 = a3;
  v25 = 0;
  v26 = 0;
  if ((a4 & 0x8000000000000000) == 0)
  {
    v8 = (_BYTE *)(*(_QWORD *)(a3 + 8 * (int)(*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL);
    if (v8 && (*v8 & 2) != 0)
      v9 = 0;
    else
      v9 = (void *)(*(_QWORD *)(a3 + 8 * (int)(*(_DWORD *)(a1[24] + 9084) + a2)) & 0xFFFFFFFFFFFFFFFCLL);
    v11 = vins_sync((uint64_t)a1, a2, a3, (unint64_t)v8);
    v12 = v5;
    v5 = v11;
    if (v11)
      goto LABEL_10;
    return 0;
  }
  v10 = (_BYTE *)(*(_QWORD *)(a3 + 8 * a2 + 24) & 0xFFFFFFFFFFFFFFFCLL);
  if (v10 && (*v10 & 2) != 0)
    v9 = 0;
  else
    v9 = v10;
  v11 = vins_sync((uint64_t)a1, a2, (unint64_t)v10, v5);
  v12 = v11;
  if (!v11)
    return 0;
LABEL_10:
  v24 = 0;
  v22 = 0;
  v23 = 0;
  if (!v9)
    goto LABEL_19;
  v13 = *((__int16 *)vstmtbl[12 * a2 + 1] + 15);
  if (v13 == -4)
  {
    OUTLINED_FUNCTION_3_68();
    OUTLINED_FUNCTION_13_50();
    v24 = v17;
    v15 = (unsigned __int8 *)&v24;
  }
  else
  {
    if (v13 != -3)
      goto LABEL_19;
    OUTLINED_FUNCTION_3_68();
    OUTLINED_FUNCTION_13_50();
    v15 = (unsigned __int8 *)&v26;
  }
  vinitflds(v14, a2, v9, v15);
LABEL_19:
  if (v4 >= 0)
    v18 = v4;
  else
    v18 = -v4;
  v25 = v18;
  v19 = *((__int16 *)vstmtbl[12 * a2 + 1] + 15);
  if (v19 == -4)
  {
    LOWORD(v23) = -4;
    v24 = v18;
    v20 = &v24;
  }
  else
  {
    if (v19 != -3)
      goto LABEL_27;
    LOWORD(v23) = -3;
    v20 = (__int16 *)&v25;
  }
  v22 = v20;
  BYTE2(v23) = 0;
LABEL_27:
  vins_tok(a1, a2, v12, v5, (uint64_t)&v22);
  if (v21)
    return v11;
  else
    return 0;
}

uint64_t vins_sync(uint64_t a1, unsigned int a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  uint64_t v24;

  v8 = (uint64_t)alloc_sync(a1);
  if (v8)
  {
    OUTLINED_FUNCTION_14_49();
    *(_QWORD *)(v8 + 8 * v10) = v9 | 1;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + a2))
      *(_QWORD *)(v8 + 8) |= 2uLL;
    OUTLINED_FUNCTION_9_56(*(_QWORD *)(a1 + 184));
    if (a3 && (v11 = *(_QWORD *)a3, (*(_QWORD *)a3 & 2) != 0))
    {
      v12 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a2;
      *(_QWORD *)(a3 + 8 * (int)v12) = *(_QWORD *)(a3 + 8 * (int)v12) & 3 | v8;
      v13 = a3;
    }
    else
    {
      v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
      *(_QWORD *)(a3 + 8) = v8;
    }
    v14 = a2 + 3;
    *(_QWORD *)(v8 + 8 * v14) = *(_QWORD *)(v8 + 8 * v14) & 3 | a3;
    if (a4 && (*(_BYTE *)a4 & 2) != 0)
    {
      *(_QWORD *)(a4 + 8 * v14) = *(_QWORD *)(a4 + 8 * v14) & 3 | v8;
      v15 = a4;
    }
    else
    {
      v15 = *(_QWORD *)(a4 + 8) & 0xFFFFFFFFFFFFFFFCLL;
      *(_QWORD *)a4 = v8;
    }
    OUTLINED_FUNCTION_14_49();
    *(_QWORD *)(v8 + 8 * v17) = v16 & 3 | a4;
    v18 = *(_QWORD *)(a1 + 192);
    if (*(_DWORD *)(v18 + 8868))
    {
      v19 = *(int *)(v18 + 9084) - 2;
      v20 = *(_QWORD *)(v13 + 8 * v19);
      v21 = v20 & 0xFFFFFFFFFFFFFFFCLL;
      if (v15 != (v20 & 0xFFFFFFFFFFFFFFFCLL))
      {
        if (*(_BYTE *)(*(_QWORD *)(v18 + 9072) + a2))
        {
LABEL_15:
          *(_QWORD *)(v8 + 16) |= 2uLL;
          if (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 8864)
            && (*(_BYTE *)(v8 + 8) & 1) == 0
            && !vchkseqbad(a1, v8))
          {
            return 0;
          }
        }
        else
        {
          while (v21 != v15)
          {
            if ((*(_BYTE *)(v21 + 8) & 3) == 0)
              goto LABEL_15;
            v21 = *(_QWORD *)(v21 + 8 * v19) & 0xFFFFFFFFFFFFFFFCLL;
          }
          while (1)
          {
            v23 = v20 & 0xFFFFFFFFFFFFFFFCLL;
            if (v15 == (v20 & 0xFFFFFFFFFFFFFFFCLL))
              break;
            *(_QWORD *)(v23 + 16) |= 2uLL;
            v24 = *(_QWORD *)(a1 + 192);
            if (*(_DWORD *)(v24 + 8864) && (*(_BYTE *)(v23 + 8) & 1) == 0)
            {
              if (!vchkseqbad(a1, v23))
                return 0;
              v24 = *(_QWORD *)(a1 + 192);
            }
            v20 = *(_QWORD *)(v23 + 8 * *(int *)(v24 + 9084) - 16);
          }
        }
      }
      INSSPINER(a1, v8, v13);
      v18 = *(_QWORD *)(a1 + 192);
    }
    *(_DWORD *)(v18 + 9080) = 0;
  }
  return v8;
}

void *vinitflds(int a1, unsigned int a2, void *__dst, unsigned __int8 *a4)
{
  char **v7;
  void *result;
  char *v9;
  int v10;
  int v11;

  v7 = &vstmtbl[12 * a2];
  memmove(__dst, v7[5], *((int *)v7 + 17));
  result = (void *)(*(uint64_t (**)(void *, unsigned __int8 *))v7[3])(__dst, a4);
  v9 = v7[4];
  if (v9)
  {
    v10 = *((unsigned __int16 *)vstmtbl[12 * a2 + 1] + 15);
    if (v10 == 0xFFFF)
    {
      v11 = *a4;
      return memmove(__dst, &v9[SLODWORD(vstmtbl[12 * a2 + 9]) * (uint64_t)v11], SHIDWORD(vstmtbl[12 * a2 + 9]));
    }
    if (v10 == 65534)
    {
      v11 = *(__int16 *)a4;
      return memmove(__dst, &v9[SLODWORD(vstmtbl[12 * a2 + 9]) * (uint64_t)v11], SHIDWORD(vstmtbl[12 * a2 + 9]));
    }
  }
  return result;
}

uint64_t vchkseqbad(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;

  if ((*(_BYTE *)(a2 + 8) & 3) != 0)
  {
    v2 = 0;
    v3 = 0;
    v4 = 0;
    while (*(unsigned __int8 *)(a1 + 288) != v2)
    {
      v5 = *(_QWORD *)(a1 + 192);
      if ((*(_QWORD *)(a2 + 8 * (v2 + *(int *)(v5 + 9084))) & 1) != 0)
      {
        ++v3;
        if (*(_BYTE *)(*(_QWORD *)(v5 + 9072) + v2))
          ++v4;
      }
      ++v2;
    }
    if (v3 < 2 || v4 >= v3)
      return 1;
  }
  vseqbad();
  return 0;
}

uint64_t vnsqflags(uint64_t result, uint64_t a2)
{
  unsigned int v2;
  int v3;
  char *v4;
  unsigned __int8 v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v13;

  v2 = 0;
  v3 = 0;
  v4 = *(char **)(*(_QWORD *)(result + 200) + 160);
  while (1)
  {
    v6 = *v4++;
    v5 = v6;
    if (v6 < 0)
      break;
    v7 = *(_QWORD *)(a2 + 8 * (*(_DWORD *)(*(_QWORD *)(result + 192) + 9084) + v5)) & 1;
    v2 += v7;
    if (v7)
      v3 = 1;
  }
  v8 = *(unsigned __int8 *)(result + 288);
LABEL_6:
  v9 = v8;
  while (1)
  {
    v8 = v9 - 1;
    if (v9 < 1)
      break;
    v10 = *(_QWORD *)(result + 192);
    v11 = *(_QWORD *)(a2 + 8 * (v9 + *(int *)(v10 + 9084)) - 8);
    --v9;
    if ((v11 & 1) != 0)
    {
      if (!*(_BYTE *)(*(_QWORD *)(v10 + 9072) + v8))
      {
        ++v2;
        v3 = 0;
      }
      if (v2 >= 2 && v3 == 0)
      {
        v3 = 0;
        goto LABEL_19;
      }
      goto LABEL_6;
    }
  }
  if (v2 == 1)
  {
    v13 = *(_QWORD *)(a2 + 8) | 1;
    goto LABEL_20;
  }
LABEL_19:
  v13 = *(_QWORD *)(a2 + 8) & 0xFFFFFFFFFFFFFFFELL;
LABEL_20:
  *(_QWORD *)(a2 + 8) = v13 & 0xFFFFFFFFFFFFFFFDLL | (2 * (v3 != 0));
  return result;
}

void visnonseq(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  uint64_t v10;

  v7 = 0;
  v8 = *(unsigned __int8 *)(a1 + 288);
  while (v8 != (_DWORD)v7)
  {
    if (a2 != (_DWORD)v7)
    {
      v10 = v7 + *(int *)(*(_QWORD *)(a1 + 192) + 9084);
      if ((*(_QWORD *)(a3 + 8 * v10) & 1) != 0
        && (*(_QWORD *)(a4 + 8 * v10) & 1) != 0
        && VRSYNC(a1, a3, (char)v7) != a4)
      {
        break;
      }
    }
    ++v7;
  }
  OUTLINED_FUNCTION_2_68();
}

uint64_t fdeldel(uint64_t result, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t i;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unint64_t v44;

  v4 = (unint64_t)a2;
  v5 = result;
  *(_DWORD *)(*(_QWORD *)(result + 184) + 452) = 1;
  if (a2)
  {
    v6 = *a2;
    if ((*a2 & 2) != 0)
      v6 = a2[*(char *)(*(_QWORD *)(result + 200) + 136) + 3];
    v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  }
  else
  {
    v7 = 0;
  }
  do
  {
    if (!v4)
      return result;
    if ((*(_BYTE *)v4 & 2) == 0)
    {
      v8 = *(_QWORD *)(v4 + 8);
LABEL_35:
      result = cacheDeletedDeltaObject(v5, v4);
      goto LABEL_36;
    }
    v9 = *(_DWORD *)(*(_QWORD *)(v5 + 192) + 9084) + *(char *)(*(_QWORD *)(v5 + 200) + 136);
    v8 = *(_QWORD *)(v4 + 8 * v9);
    v10 = *(_QWORD *)(v4 + 8);
    *(_QWORD *)(v4 + 8 * v9) = v8 & 0xFFFFFFFFFFFFFFFELL;
    v11 = v4 + 8 * *(char *)(*(_QWORD *)(v5 + 200) + 136);
    *(_QWORD *)(v11 + 24) &= 3uLL;
    LODWORD(v11) = *(_DWORD *)(*(_QWORD *)(v5 + 192) + 9084) + *(char *)(*(_QWORD *)(v5 + 200) + 136);
    *(_QWORD *)(v4 + 8 * (int)v11) &= 3uLL;
    if ((v10 & 1) != 0)
    {
      if (*(_DWORD *)(*(_QWORD *)(v5 + 192) + 8868))
        DELSPINE(v5, v4);
      goto LABEL_35;
    }
    result = vnsqflags(v5, v4);
    v12 = *(_QWORD *)(v5 + 192);
    if (!*(_DWORD *)(v12 + 8868))
      goto LABEL_36;
    v13 = *(_QWORD *)(v5 + 200);
    v14 = v4;
    do
      v14 = *(_QWORD *)(v14 + 8) & 0xFFFFFFFFFFFFFFFCLL;
    while ((*(_BYTE *)(v14 + 16) & 2) != 0);
    v15 = *(int *)(v12 + 9084);
    v16 = v4;
    do
      v16 = *(_QWORD *)(v16 + 8 * (v15 - 2)) & 0xFFFFFFFFFFFFFFFCLL;
    while ((*(_BYTE *)(v16 + 16) & 2) != 0);
    LODWORD(v17) = 0;
    v18 = 0;
    v19 = 0;
    v20 = *(unsigned __int8 *)(v5 + 288);
    v21 = v16 + 8 * v15 - 8;
    v22 = v14 + 8 * v15 - 8;
LABEL_16:
    v23 = v17;
    for (i = v20; i > *(unsigned __int8 *)(v13 + 136); --i)
    {
      if ((*(_QWORD *)(v4 + 8 * v15 - 8 + 8 * i) & 1) == 0)
      {
        v20 = i - 1;
        LODWORD(v17) = 1;
        if (!v23)
        {
          LODWORD(v17) = 0;
          if ((*(_QWORD *)(v22 + 8 * i) & 1) != 0)
            v17 = *(_QWORD *)(v21 + 8 * i) & 1;
        }
        goto LABEL_16;
      }
      if ((*(_QWORD *)(v22 + 8 * i) & 1) != 0)
      {
        if (v19 || (*(_QWORD *)(v21 + 8 * i) & 1) != 0)
          goto LABEL_36;
        v19 = 0;
        ++v18;
      }
      else
      {
        if (v19)
          goto LABEL_21;
        if ((*(_QWORD *)(v21 + 8 * i) & 1) != 0)
        {
          if (v18)
            goto LABEL_36;
LABEL_21:
          v19 = 1;
          continue;
        }
        v19 = 0;
      }
    }
    v26 = 8 * v15;
    v27 = *(unsigned __int8 *)(v13 + 136);
    if (*(_BYTE *)(v13 + 136))
    {
      do
      {
        if ((*(_BYTE *)(v4 + v26) & 1) != 0)
        {
          if ((*(_BYTE *)(v14 + v26) & 1) != 0)
          {
            if (v19 || (*(_BYTE *)(v16 + v26) & 1) != 0)
              goto LABEL_36;
            v19 = 0;
            ++v18;
          }
          else if (v19)
          {
            v19 = 1;
          }
          else
          {
            if (v18)
              goto LABEL_36;
            v19 = *(_DWORD *)(v16 + v26) & 1;
          }
        }
        else if (v23)
        {
          v23 = 1;
        }
        else if ((*(_BYTE *)(v14 + v26) & 1) != 0)
        {
          v23 = *(_DWORD *)(v16 + v26) & 1;
        }
        else
        {
          v23 = 0;
        }
        v26 += 8;
        --v27;
      }
      while (v27);
    }
    if (!v19 || !v18)
    {
      if (v23)
      {
        *(_BYTE *)(v13 + 16) = 0;
        *(_QWORD *)(v13 + 24) = v4;
        *(_QWORD *)(v13 + 32) = v4;
        *(_DWORD *)(v13 + 20) = (*(_QWORD *)(v4 + 8) & 3) == 0;
        if (v19 | v18)
        {
          if (v19)
            v28 = -1;
          else
            v28 = 1;
          if (v19)
            v29 = v14;
          else
            v29 = v16;
          *(_QWORD *)(v13 + 48) = v29;
        }
        else
        {
          v28 = 2;
        }
        *(_BYTE *)(v13 + 40) = v28;
LABEL_79:
        switch(v28)
        {
          case -1:
LABEL_82:
            result = OUTLINED_FUNCTION_7_59(result, (unsigned __int8 *)(v13 + 40));
            v13 = *(_QWORD *)(v5 + 200);
            break;
          case 2:
            if (*(_QWORD *)(v13 + 24) == v14 && *(unsigned __int8 *)(v13 + 16) == 255)
            {
              *(_BYTE *)(v13 + 64) = -1;
              v42 = *(_QWORD *)(v13 + 32);
              *(_QWORD *)(v13 + 72) = v14;
              *(_QWORD *)(v13 + 80) = v42;
              *(_DWORD *)(v13 + 68) = *(_DWORD *)(v13 + 20);
            }
            else
            {
              *(_BYTE *)(v13 + 64) = -1;
              v35 = v13 + 64;
              *(_QWORD *)(v35 + 8) = v14;
              result = OUTLINED_FUNCTION_7_59(result, (unsigned __int8 *)v35);
              v13 = *(_QWORD *)(v5 + 200);
            }
            *(_BYTE *)(v13 + 40) = 1;
            v36 = v13 + 40;
            *(_QWORD *)(v36 + 8) = v16;
            result = OUTLINED_FUNCTION_7_59(result, (unsigned __int8 *)v36);
            v13 = *(_QWORD *)(v5 + 200);
            *(_QWORD *)(v13 + 48) = *(_QWORD *)(v13 + 80);
            *(_DWORD *)(v13 + 44) |= *(_DWORD *)(v13 + 68);
            break;
          case 1:
            goto LABEL_82;
        }
        v37 = v13 + 24 * (*(_DWORD *)(v13 + 20) != 0);
        v38 = *(char *)(v37 + 16);
        v39 = *(_QWORD *)(v37 + 24);
        v40 = (_QWORD *)(v37 + 32);
        while (1)
        {
          *(_QWORD *)(v39 + 16) |= 2uLL;
          if (*(_DWORD *)(*(_QWORD *)(v5 + 192) + 8864))
          {
            if ((*(_BYTE *)(v39 + 8) & 1) == 0)
            {
              result = vchkseqbad(v5, v39);
              if (!(_DWORD)result)
                break;
            }
          }
          if (v39 == *v40)
            break;
          if (v38 < 0)
            v41 = 1;
          else
            v41 = *(int *)(*(_QWORD *)(v5 + 192) + 9084) - 2;
          v39 = *(_QWORD *)(v39 + 8 * v41) & 0xFFFFFFFFFFFFFFFCLL;
        }
      }
      else if (v19 | v18)
      {
        v30 = v19 == 0;
        if (v19)
          v31 = -1;
        else
          v31 = 1;
        if (v19)
          v32 = v14;
        else
          v32 = v16;
        *(_BYTE *)(v13 + 16) = v31;
        v33 = v13 + 16;
        *(_QWORD *)(v33 + 8) = v32;
        if (v30)
          v34 = -1;
        else
          v34 = 1;
        *(_QWORD *)(v33 + 32) = v4;
        *(_BYTE *)(v33 + 24) = v34;
        result = OUTLINED_FUNCTION_7_59(result, (unsigned __int8 *)v33);
        v13 = *(_QWORD *)(v5 + 200);
        v28 = *(_BYTE *)(v13 + 40);
        goto LABEL_79;
      }
    }
LABEL_36:
    v25 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    v30 = v4 == a3;
    v4 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  }
  while (!v30);
  if (v7 && (*(_BYTE *)v7 & 2) != 0)
  {
    v43 = *(_DWORD *)(*(_QWORD *)(v5 + 192) + 9084) + *(char *)(*(_QWORD *)(v5 + 200) + 136);
    *(_QWORD *)(v7 + 8 * v43) = *(_QWORD *)(v7 + 8 * v43) & 3 | v25;
    if (v25 && (*(_BYTE *)v25 & 2) != 0)
    {
LABEL_106:
      v44 = v25 + 8 * *(char *)(*(_QWORD *)(v5 + 200) + 136);
      *(_QWORD *)(v44 + 24) = *(_QWORD *)(v44 + 24) & 3 | v7;
    }
    else
    {
      *(_QWORD *)v25 = v7;
    }
  }
  else if (v25 && (*(_BYTE *)v25 & 2) != 0)
  {
    *(_QWORD *)(v7 + 8) = v25;
    goto LABEL_106;
  }
  return result;
}

uint64_t fdel(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t *v3;
  unint64_t v4;
  int v5;

  v2 = *(_QWORD *)(a1 + 200);
  if (a2)
  {
    v3 = *(uint64_t **)(v2 + 104);
    v4 = *(_QWORD *)(v2 + 112);
  }
  else
  {
    v5 = *(char *)(v2 + 136);
    v3 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v2 + 120) + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + v5)) & 0xFFFFFFFFFFFFFFFCLL);
    v4 = *(_QWORD *)(*(_QWORD *)(v2 + 128) + 8 * (v5 + 3)) & 0xFFFFFFFFFFFFFFFCLL;
  }
  return fdeldel(a1, v3, v4);
}

uint64_t vdelinit(uint64_t a1)
{
  void *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t i;

  *(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) = malloc_type_malloc(*(unsigned __int8 *)(a1 + 288), 0x92BB8A27uLL);
  v2 = malloc_type_malloc(*(unsigned __int8 *)(a1 + 288), 0xB32BBAE7uLL);
  result = 0;
  v4 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 160) = v2;
  if (*(_QWORD *)(v4 + 9072) && v2)
  {
    for (i = 0; i < *(unsigned __int8 *)(a1 + 288); ++i)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + i) = 0;
    **(_BYTE **)(*(_QWORD *)(a1 + 200) + 160) = -1;
    return 1;
  }
  return result;
}

void vdelCleanup(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)(*(_QWORD *)(a1 + 200) + 160);
  if (v2)
  {
    free(v2);
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 160) = 0;
  }
  v3 = *(void **)(*(_QWORD *)(a1 + 192) + 9072);
  if (v3)
  {
    free(v3);
    *(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) = 0;
  }
}

uint64_t setnonseqIndex(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = 0;
  v3 = *(_QWORD *)(*(_QWORD *)(result + 200) + 160);
  while (1)
  {
    v4 = *(char *)(v3 + v2);
    if (v4 == -1)
      break;
    if (v4 == a2)
      return result;
    ++v2;
  }
  *(_BYTE *)(v3 + v2) = a2;
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(result + 200) + 160) + (v2 + 1)) = -1;
  return result;
}

uint64_t clearnonseqIndex(uint64_t result)
{
  **(_BYTE **)(*(_QWORD *)(result + 200) + 160) = -1;
  return result;
}

uint64_t mapsyncs(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;

  result = absoluteSyncNum(a1, a2);
  v5 = 0;
  v6 = a2 + 8 * *(int *)(*(_QWORD *)(a1 + 192) + 9084);
  *(_QWORD *)(v6 - 24) |= 2uLL;
  v7 = *(_QWORD *)(a1 + 200);
  v8 = *(_DWORD *)(v7 + 200);
  *(_DWORD *)(v7 + 200) = v8 + 1;
  *(_WORD *)(*(_QWORD *)(v7 + 192) + 2 * (int)result) = v8;
  while (1)
  {
    v9 = v5;
    if (v5 >= (int)*(unsigned __int8 *)(a1 + 288))
      break;
    v10 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084);
    if ((*(_QWORD *)(a2 + 8 * (v10 + v5)) & 1) != 0)
    {
      result = VRSYNC(a1, a2, v5);
      if (result)
      {
        if ((*(_QWORD *)(result + 8 * (v10 - 3)) & 2) == 0)
          result = mapsyncs(a1, result);
      }
    }
    v5 = v9 + 1;
  }
  return result;
}

void vredoctxt(uint64_t a1, int a2)
{
  signed __int8 v4;
  _DWORD *v5;
  _QWORD *i;
  uint64_t v7;
  unint64_t v8;
  BOOL v9;
  BOOL v10;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = 0;
  v5 = *(_DWORD **)(a1 + 200);
  v5[86] = 0;
  v5[56] = a2;
  v5[57] = 0;
  while (*(unsigned __int8 *)(a1 + 288) > v4)
  {
    for (i = *(_QWORD **)(*(_QWORD *)(a1 + 200) + 8); i; i = VLSYNC((uint64_t)i, v4))
    {
      v7 = *(_QWORD *)(a1 + 192);
      if (*(_DWORD *)(*(_QWORD *)(a1 + 200) + 224))
      {
        v8 = i[*(int *)(v7 + 9084) - 3];
        if ((v8 & 2) != 0
          || (v8 <= 3 ? (v9 = *i > 3uLL) : (v9 = 1),
              !v9 ? (v10 = ((*i | v8) & 1) == 0) : (v10 = 0),
              !v10))
        {
          v11 = checkInterrupt(a1);
          v12 = *(_QWORD *)(a1 + 200);
          if (v11)
          {
            *(_DWORD *)(v12 + 224) = 0;
          }
          else if (*(_DWORD *)(v12 + 224))
          {
            *(_DWORD *)(v12 + 228) = 1;
            goto LABEL_20;
          }
          v7 = *(_QWORD *)(a1 + 192);
        }
      }
      v13 = &i[*(int *)(v7 + 9084)];
      *(v13 - 3) &= ~2uLL;
      OUTLINED_FUNCTION_10_56(*i & 0xFFFFFFFFFFFFFFFELL);
      *(_QWORD *)(v15 - 24) = v14 & 0xFFFFFFFFFFFFFFFELL;
      OUTLINED_FUNCTION_10_56(*i & 3);
      *(_QWORD *)(v17 - 24) = v16 & 3;
    }
    ++v4;
  }
LABEL_20:
  vclrctxt(a1);
  v22 = *(_QWORD *)(a1 + 200);
  if (a2 && !*(_DWORD *)(v22 + 228))
  {
    vf_printf(a1, *(char *)(*(_QWORD *)(a1 + 216) + 4), 1, "The delta is correct.\n", v18, v19, v20, v21, v23);
    v22 = *(_QWORD *)(a1 + 200);
  }
  *(_DWORD *)(v22 + 344) = 1;
  OUTLINED_FUNCTION_11_54();
}

void vclrctxt(uint64_t a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  _QWORD *i;
  uint64_t j;
  uint64_t v6;

  v2 = 0;
  v3 = *(unsigned __int8 *)(a1 + 288);
  while (v3 > v2)
  {
    for (i = *(_QWORD **)(*(_QWORD *)(a1 + 200) + 8); i; i = VLSYNC((uint64_t)i, (char)v2))
    {
      for (j = 0; v3 != j; ++j)
      {
        if ((i[j + *(int *)(*(_QWORD *)(a1 + 192) + 9084)] & 1) == 0)
        {
          i[j + 3] &= 3uLL;
          v6 = j + *(int *)(*(_QWORD *)(a1 + 192) + 9084);
          i[v6] &= 3uLL;
          *(_DWORD *)(*(_QWORD *)(a1 + 200) + 228) = 1;
        }
      }
    }
    ++v2;
  }
  OUTLINED_FUNCTION_11_54();
}

uint64_t cacheDeletedDeltaObject(uint64_t a1, uint64_t a2)
{
  return free_heap(a1, a2, 0);
}

uint64_t seqscan(uint64_t result, unsigned __int8 *a2)
{
  int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unint64_t v7;
  int v8;
  unsigned __int8 v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v12[100];
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v2 = *a2;
  v3 = *((_QWORD *)a2 + 1);
  *((_QWORD *)a2 + 2) = v3;
  if (v2 == 1)
    v4 = 1;
  else
    v4 = *(int *)(*(_QWORD *)(result + 192) + 9084) - 2;
  v5 = 0;
  v6 = 0;
  v7 = *(_QWORD *)(v3 + 8 * v4) & 0xFFFFFFFFFFFFFFFCLL;
  v8 = *(unsigned __int8 *)(result + 288);
  while (v8 != (_DWORD)v5)
  {
    if ((*(_QWORD *)(v7 + 8 * (v5 + *(int *)(*(_QWORD *)(result + 192) + 9084))) & 1) != 0)
      v12[v6++] = v5;
    ++v5;
  }
LABEL_9:
  v9 = 0;
  do
  {
    if (v6 <= v9)
    {
      v11 = (_QWORD *)(v3 + 8);
      if ((~*(_DWORD *)(v3 + 8) & 3) != 0)
        *((_DWORD *)a2 + 1) = 1;
      *((_QWORD *)a2 + 2) = v3;
      if (v2 == 1)
        v11 = (_QWORD *)(v3 + 8 * *(int *)(*(_QWORD *)(result + 192) + 9084) - 16);
      v3 = *v11 & 0xFFFFFFFFFFFFFFFCLL;
      goto LABEL_9;
    }
    v10 = *(_QWORD *)(v3 + 8 * (*(_DWORD *)(*(_QWORD *)(result + 192) + 9084) + v12[v9++]));
  }
  while ((v10 & 1) == 0);
  return result;
}

void OUTLINED_FUNCTION_1_70(_DWORD *a1@<X8>)
{
  ++*a1;
}

uint64_t OUTLINED_FUNCTION_3_68()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;

  return (**(uint64_t (***)(uint64_t))(v2 + 96 * v1 + 16))(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_4_64(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  return vsetsc(a1, a2, 1, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_5_61()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_60@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(result + 8) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_7_59(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return seqscan(v2, a2);
}

uint64_t OUTLINED_FUNCTION_8_57()
{
  return 1;
}

void OUTLINED_FUNCTION_9_56(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 + 452) = 1;
}

void OUTLINED_FUNCTION_10_56(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
}

uint64_t OUTLINED_FUNCTION_12_51()
{
  uint64_t v0;

  return v0;
}

uint64_t varloc(uint64_t a1, __int16 a2, unsigned __int16 a3, uint64_t a4)
{
  __int16 v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v4 = a3 | (a2 << 8);
  if ((a2 & 0x80) != 0)
  {
    v7 = *(_QWORD *)(a1 + 192) + 8 * ((a3 | (unsigned __int16)(a2 << 8)) & 0x3FFF) + 9288;
    return *(_QWORD *)v7;
  }
  v5 = *(_QWORD *)(a1 + 192);
  if (!a4 || *(_QWORD *)(v5 + 8104) == a4)
  {
    result = *(_QWORD *)(*(_QWORD *)(v5 + 8112) + 8);
    if (!result)
      return result;
    goto LABEL_8;
  }
  result = vonstack(a1, a4);
  if (result)
  {
LABEL_8:
    v7 = *(_QWORD *)(result + 16) + 8 * (v4 & 0x3FFF);
    return *(_QWORD *)v7;
  }
  return result;
}

uint64_t vrd_nvar()
{
  unsigned __int8 v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  char *v6;
  char v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char v25[40];
  uint64_t v26;

  OUTLINED_FUNCTION_34_33();
  v3 = 0;
  v4 = 0;
  v26 = *MEMORY[0x24BDAC8D0];
LABEL_2:
  while ((v4 & 1) == 0)
  {
    v5 = 1;
    v6 = v25;
    while (1)
    {
      v7 = v5;
      OUTLINED_FUNCTION_56_18();
      if (v8 == 10)
        break;
      if ((v8 + 1) < 2)
      {
        *v6 = 0;
        v9 = 1;
        OUTLINED_FUNCTION_2_69(v1, *(char *)(*(_QWORD *)(v1 + 216) + 5), *(_QWORD *)(v1 + 184) + 32);
        *(_BYTE *)(*(_QWORD *)(v1 + 184) + 32) = 0;
        *(_DWORD *)(*(_QWORD *)(v1 + 184) + 436) = 0;
        OUTLINED_FUNCTION_32_34();
        v3 = 0;
        v4 = 0;
        if (!v10)
          goto LABEL_2;
        return v9;
      }
      if (v8 == 32)
      {
        v5 = 1;
        if ((v7 & 1) == 0)
        {
          v3 = 32;
          goto LABEL_13;
        }
      }
      else
      {
        v5 = 0;
        *v6++ = v8;
      }
    }
    v3 = 10;
LABEL_13:
    *v6 = 0;
    v11 = *(__int16 *)(v2 + 8);
    if (v11 == -4)
    {
      if (chk_itok((unsigned __int8 *)v25))
      {
        **(_WORD **)v2 = atoi(v25);
        v4 = 1;
        continue;
      }
      readErrorReport(v1, v0, v17, "\"%s\" is not an integer", v18, v19, v20, v21, (uint64_t)v25);
    }
    else
    {
      v4 = 1;
      if (v11 != -3)
        continue;
      if (chk_itok((unsigned __int8 *)v25))
      {
        **(_QWORD **)v2 = atol(v25);
        v4 = 1;
        continue;
      }
      readErrorReport(v1, v0, v12, "\"%s\" is not an long integer (longint)", v13, v14, v15, v16, (uint64_t)v25);
    }
    OUTLINED_FUNCTION_32_34();
    v4 = 1;
    if (v22)
      return 1;
  }
  if (v3 != 10)
  {
    OUTLINED_FUNCTION_56_18();
    if (v23 != 10)
      vf_ungetc();
  }
  return 0;
}

void var_rderr()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_34_33();
  OUTLINED_FUNCTION_16_48(v4, v5, "cmdwin");
  if (v6 || (v2 = 1, OUTLINED_FUNCTION_16_48(v1, v0, "pgmwin"), v7))
  {
    v8 = OUTLINED_FUNCTION_57_18();
    OUTLINED_FUNCTION_46_24(v8);
    v9 = OUTLINED_FUNCTION_40_26();
    OUTLINED_FUNCTION_36_33(v9);
    OUTLINED_FUNCTION_38_31();
    OUTLINED_FUNCTION_37_33();
    v10 = dynaBufContents(v2);
    v11 = OUTLINED_FUNCTION_35_33();
    OUTLINED_FUNCTION_33_34(v11, v12, v13, "Error in <%s>, re-enter:\n", v14, v15, v16, v17, v10 + v3 - v11);
    OUTLINED_FUNCTION_58_18();
  }
  OUTLINED_FUNCTION_8_58();
}

uint64_t chk_itok(unsigned __int8 *a1)
{
  int v1;
  char *v2;
  int v3;
  int v4;

  v1 = *a1;
  if (v1 != 43 && v1 != 45 && ((char)v1 - 48) > 9)
    return 0;
  v2 = (char *)(a1 + 1);
  while (1)
  {
    v4 = *v2++;
    v3 = v4;
    if (!v4)
      break;
    if ((v3 - 48) >= 0xA)
      return 0;
  }
  return 1;
}

void readErrorReport(uint64_t a1, unsigned __int8 a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v11 = *(_QWORD *)(a1 + 216);
  v12 = 4;
  if (*(unsigned __int8 *)(v11 + 1) != a2)
    v12 = 5;
  v13 = *(char *)(v11 + v12);
  vf_printf(a1, v13, 0, "Error: %s: ", a5, a6, a7, a8, (char)"DELTIO");
  vf_printf(a1, v13, 1, a4, v14, v15, v16, v17, (char)&a9);
}

void lithex(_BYTE *a1, char *a2, int a3)
{
  uint64_t v5;
  char *v6;
  int v7;
  char *v9;
  int v10;
  size_t v11;
  char *v12;
  int v13;
  size_t v14;
  char __src[20];
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  v5 = a3 - 8;
  v6 = a2;
  while (1)
  {
    v7 = (char)*a1;
    if (!*a1 || v6 - a2 >= v5)
      break;
    if ((v7 - 127) >= 0xA1u)
    {
      *v6++ = v7;
    }
    else
    {
      switch(*a1)
      {
        case 7:
        case 8:
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
        case 0xD:
          goto LABEL_14;
        default:
          if (v7 == 34 || v7 == 39 || v7 == 63 || v7 == 92)
          {
LABEL_14:
            OUTLINED_FUNCTION_62_16();
            __sprintf_chk(v9, v10, v11, "'\\%s'");
          }
          else
          {
            OUTLINED_FUNCTION_62_16();
            __sprintf_chk(v12, v13, v14, "'\\x%2x'");
          }
          strcpy(v6, __src);
          v6 += strlen(__src);
          break;
      }
    }
    ++a1;
  }
  *v6 = 0;
  OUTLINED_FUNCTION_15_48();
}

uint64_t vrd_tvar(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v5;
  int v6;
  char v7;
  unsigned int v8;
  char **v9;
  int v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  char **v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char **v43;
  char *v44;
  int v45;
  uint64_t v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v52;
  void **v53;
  int v54;
  double v55;
  __int16 v56;
  uint64_t v57;
  int v58;
  unsigned __int8 v59;
  char __s1[40];
  uint64_t v61;

  v5 = 0;
  LOBYTE(v6) = 0;
  v7 = 0;
  v61 = *MEMORY[0x24BDAC8D0];
  v59 = 0;
  v58 = 0;
  v57 = 0;
  v56 = 0;
  v55 = 0.0;
  v53 = (void **)a3;
  v8 = *(unsigned __int8 *)(a3 + 8);
  v9 = &vstmtbl[12 * *(unsigned __int8 *)(a3 + 8) + 1];
  v10 = (char)v8;
  while (1)
  {
    v11 = v5;
    if ((v7 & 1) != 0)
    {
      vinitflds(a1, v8, *v53, v5);
      if (v6 != 10)
      {
        OUTLINED_FUNCTION_14_50();
        vf_getc();
        if (v52 != 10)
        {
          OUTLINED_FUNCTION_14_50();
          vf_ungetc();
        }
      }
      return 0;
    }
    v12 = gettok_0(a1, v8, a2, __s1);
    if (!v12)
      break;
    v6 = v12;
    if (OUTLINED_FUNCTION_43_26())
      break;
    v7 = 0;
    v5 = v11;
    if (v6 != 10)
    {
      v13 = STMTYP(v10);
      v7 = 1;
      v5 = v11;
      switch((int)v13)
      {
        case -5:
          v19 = chk_ftok((unsigned __int8 *)__s1);
          if ((_DWORD)v19)
          {
            v55 = atof(__s1);
            v7 = 1;
            v5 = (unsigned __int8 *)&v55;
          }
          else
          {
            OUTLINED_FUNCTION_5_62(v19, v20, v21, v22, v23, v24);
            v7 = 0;
            v5 = (unsigned __int8 *)&v55;
            if (v48)
              return 1;
          }
          continue;
        case -4:
          v30 = chk_itok((unsigned __int8 *)__s1);
          if ((_DWORD)v30)
          {
            v56 = atoi(__s1);
            v7 = 1;
            v5 = (unsigned __int8 *)&v56;
          }
          else
          {
            OUTLINED_FUNCTION_5_62(v30, v31, v32, v33, v34, v35);
            v7 = 0;
            v5 = (unsigned __int8 *)&v56;
            if (v49)
              return 1;
          }
          continue;
        case -3:
          v36 = chk_itok((unsigned __int8 *)__s1);
          if ((_DWORD)v36)
          {
            v57 = atol(__s1);
            v7 = 1;
            v5 = (unsigned __int8 *)&v57;
          }
          else
          {
            OUTLINED_FUNCTION_5_62(v36, v37, v38, v39, v40, v41);
            v7 = 0;
            v5 = (unsigned __int8 *)&v57;
            if (v50)
              return 1;
          }
          break;
        case -2:
          v54 = v10;
          v42 = 0;
          v43 = v9;
          v44 = *v9;
          v45 = *((__int16 *)v44 + 14);
          v46 = v45 & ~(v45 >> 31);
          while (1)
          {
            v58 = v42;
            if (v46 == v42)
              break;
            v13 = strcmp(__s1, *(const char **)(*((_QWORD *)v44 + 2) + 8 * v42++));
            if (!(_DWORD)v13)
            {
              LODWORD(v46) = v42 - 1;
              break;
            }
          }
          v7 = 1;
          v5 = (unsigned __int8 *)&v58;
          v9 = v43;
          v10 = v54;
          if ((_DWORD)v46 != v45)
            continue;
LABEL_23:
          OUTLINED_FUNCTION_5_62(v13, v14, v15, v16, v17, v18, v53);
          v7 = 0;
          v5 = v11;
          if (v47)
            return 1;
          continue;
        case -1:
          v25 = 0;
          v26 = v9;
          v27 = *v9;
          v28 = *((__int16 *)v27 + 14);
          do
          {
            v59 = v25;
            v29 = v25;
            if (v25 >= v28)
              break;
            v13 = strcmp(__s1, *(const char **)(*((_QWORD *)v27 + 2) + 8 * v25));
            v25 = v29 + 1;
          }
          while ((_DWORD)v13);
          v7 = 1;
          v5 = &v59;
          v9 = v26;
          if (v29 != v28)
            continue;
          goto LABEL_23;
        default:
          continue;
      }
    }
  }
  OUTLINED_FUNCTION_59_18();
  return 1;
}

uint64_t gettok_0(uint64_t a1, unsigned int a2, uint64_t a3, _BYTE *a4)
{
  int v6;
  _BOOL4 v7;
  char v8;
  char v9;
  char **v10;
  _BYTE *v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  char v17;
  int v18;
  int v19;
  char v20;
  BOOL v21;
  BOOL v23;
  char v24;
  _BOOL4 v26;
  char *v27;

  v6 = (int)vstmtbl[12 * a2 + 10];
  v7 = OUTLINED_FUNCTION_25_39() == -4
    || OUTLINED_FUNCTION_25_39() == -3
    || OUTLINED_FUNCTION_25_39() == -5;
  v8 = 0;
  v9 = 0;
  v10 = &vstmtbl[12 * a2];
  v11 = (char *)v10 + 84;
  v27 = (char *)v10 + 85;
  if (v6 != 1)
    v7 = 1;
  v26 = v7;
  while (1)
  {
    OUTLINED_FUNCTION_11_55();
    v13 = v12;
    v14 = v12;
    if (v12 == 92)
    {
      OUTLINED_FUNCTION_11_55();
      v16 = v15;
      if ((v15 & 0xFFFFFFF8) == 0x30)
      {
        v17 = 0;
        while ((v16 & 0xFFFFFFF8) == 0x30)
        {
          v17 = v16 + 8 * v17 - 48;
          OUTLINED_FUNCTION_11_55();
          v16 = v18;
        }
        OUTLINED_FUNCTION_21_43();
        LOBYTE(v16) = v17;
      }
      else
      {
        if ((v15 & 0xFFFFFFDF) == 0x58)
        {
          for (LOBYTE(v16) = 0; ; LOBYTE(v16) = v19 + 16 * v16 + v20)
          {
            OUTLINED_FUNCTION_11_55();
            if ((v19 - 48) >= 0xA)
            {
              if ((v19 - 97) >= 6)
              {
                if ((v19 - 65) > 5)
                {
                  OUTLINED_FUNCTION_21_43();
                  goto LABEL_26;
                }
                v20 = -55;
              }
              else
              {
                v20 = -87;
              }
            }
            else
            {
              v20 = -48;
            }
          }
        }
        switch(v15)
        {
          case 'n':
            LOBYTE(v16) = 10;
            break;
          case 'o':
          case 'p':
          case 'q':
          case 's':
          case 'u':
            break;
          case 'r':
            LOBYTE(v16) = 13;
            break;
          case 't':
            LOBYTE(v16) = 9;
            break;
          case 'v':
            LOBYTE(v16) = 11;
            break;
          default:
            switch(v15)
            {
              case 'a':
                LOBYTE(v16) = 7;
                break;
              case 'f':
                LOBYTE(v16) = 12;
                break;
              case 'b':
                LOBYTE(v16) = 8;
                break;
            }
            break;
        }
      }
LABEL_26:
      v14 = (char)v16;
    }
    v21 = v13 != 92 && v14 == 10;
    if (v21)
      break;
    if (v13 != 92 && (v14 + 1) <= 1)
    {
      LOBYTE(v14) = 0;
LABEL_69:
      *a4 = 0;
      return (char)v14;
    }
    if (v13 == 92)
      goto LABEL_45;
    if (v14 == (char)*v11)
    {
      v21 = v8 == 0;
      v8 = 1;
      if (!v21)
      {
        if (v14 == *v27)
          goto LABEL_76;
        goto LABEL_71;
      }
    }
    else
    {
      if (v14 == *v27)
      {
        if (v8)
        {
LABEL_76:
          *a4 = 0;
LABEL_77:
          LOBYTE(v14) = *(a4 - 1);
          return (char)v14;
        }
LABEL_71:
        LOBYTE(v14) = 0;
        return (char)v14;
      }
LABEL_45:
      if (v13 == 92 || (v14 == 32 ? (v23 = v6 == 1) : (v23 = 1), v23 || v8))
      {
        *a4++ = v14;
        if (v8)
          v24 = 1;
        else
          v24 = v26;
        if (v26)
          v9 = 1;
        else
          v8 = 1;
        if ((v24 & 1) == 0)
          goto LABEL_69;
      }
      else
      {
        v8 = 0;
        v21 = v9 == 0;
        v9 = 0;
        if (!v21)
        {
          *a4 = 0;
          LOBYTE(v14) = 32;
          return (char)v14;
        }
      }
    }
  }
  if (v8)
  {
    if (v6 == 1)
    {
      LOBYTE(v14) = *v11;
      *(_WORD *)a4 = *v11;
      return (char)v14;
    }
    goto LABEL_71;
  }
  *a4 = 0;
  if (v9)
  {
    OUTLINED_FUNCTION_21_43();
    goto LABEL_77;
  }
  LOBYTE(v14) = 10;
  return (char)v14;
}

void rdtokverr(uint64_t a1, unsigned __int8 a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11[75];
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  lithex(a4, v11, 75);
  readErrorReport(a1, a2, v6, "\"%s\" is not a token name in stream \"%s\"", v7, v8, v9, v10, (uint64_t)v11);
  var_rderr();
}

uint64_t chk_ftok(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;
  _BYTE *i;

  v1 = *a1;
  v2 = v1 > 0x2E || ((1 << v1) & 0x680000000000) == 0;
  if (v2 && ((char)v1 - 48) > 9)
    return 0;
  v3 = 0;
  for (i = a1 + 1; ; ++i)
  {
    if (v1 == 46)
    {
      if (v3)
        return 0;
      v1 = *i;
      if (!*i)
        return 0;
      v3 = 1;
    }
    else
    {
      v1 = *i;
    }
    if (v1 != 46)
      break;
LABEL_14:
    ;
  }
  if (v1)
  {
    if (((char)v1 - 48) >= 0xA)
      return 0;
    goto LABEL_14;
  }
  return 1;
}

void vrd_delta(uint64_t a1, uint64_t a2, unsigned int a3)
{
  char **v6;
  char **v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int v27;
  uint64_t v28;
  unsigned __int8 v30;
  char *v31;
  int v32;
  int v33;
  int v34;
  int v35;
  double *v36;
  uint64_t v37;
  double v38;
  __int16 v39;
  uint64_t v40;
  int v41;
  unsigned __int8 v42;
  char __s1[40];
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v42 = 0;
  v41 = 0;
  v40 = 0;
  v39 = 0;
  v38 = 0.0;
  v36 = 0;
  v37 = (unsigned __int16)OUTLINED_FUNCTION_25_39();
  v6 = &vstmtbl[12 * a3];
  v8 = v6[1];
  v7 = v6 + 1;
  BYTE2(v37) = v8[32];
  v9 = *(_QWORD *)(a1 + 200);
  v10 = *(int *)(v9 + 292);
  v11 = *(_QWORD *)(v9 + 1720) - v10;
  *(_QWORD *)(v9 + 1720) = v11;
  *(_DWORD *)(v9 + 1728) -= v10;
  *(_BYTE *)v11 = 5;
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v9 + 1760);
  *(_QWORD *)(v9 + 1760) = v11;
  while (1)
  {
    v12 = OUTLINED_FUNCTION_14_50();
    v15 = gettok_0(v12, v13, a2, v14);
    if (v15 == 10)
      break;
    v16 = v15;
    if (OUTLINED_FUNCTION_43_26())
      break;
    if (!v16)
    {
      OUTLINED_FUNCTION_59_18();
      break;
    }
    v17 = OUTLINED_FUNCTION_25_39();
    switch((int)v17)
    {
      case -5:
        v36 = &v38;
        if (!chk_ftok((unsigned __int8 *)__s1))
          goto LABEL_22;
        v38 = atof(__s1);
        goto LABEL_24;
      case -4:
        if (!OUTLINED_FUNCTION_47_24(v17, v18, v19, v20, v21, v22, v23, v24))
          goto LABEL_22;
        v39 = atoi(__s1);
        goto LABEL_24;
      case -3:
        if (!OUTLINED_FUNCTION_47_24(v17, v18, v19, v20, v21, v22, v23, v24))
          goto LABEL_22;
        v40 = atol(__s1);
        goto LABEL_24;
      case -2:
        v25 = 0;
        v36 = (double *)&v41;
        v26 = *v7;
        v27 = *((__int16 *)*v7 + 14);
        v28 = v27 & ~(v27 >> 31);
        break;
      case -1:
        v30 = 0;
        v36 = (double *)&v42;
        v31 = *v7;
        v32 = *((__int16 *)*v7 + 14);
        do
        {
          v42 = v30;
          v33 = v30;
          if (v30 >= v32)
            break;
          v34 = strcmp(__s1, *(const char **)(*((_QWORD *)v31 + 2) + 8 * v30));
          v30 = v33 + 1;
        }
        while (v34);
        if (v33 != v32)
          goto LABEL_24;
LABEL_22:
        readErrorReport(a1, a2, v19, "\"%s\" is not a token name", v21, v22, v23, v24, (uint64_t)__s1);
        goto LABEL_23;
      default:
        goto LABEL_24;
    }
    while (1)
    {
      v41 = v25;
      if (v28 == v25)
        break;
      if (!strcmp(__s1, *(const char **)(*((_QWORD *)v26 + 2) + 8 * v25++)))
      {
        LODWORD(v28) = v25 - 1;
        break;
      }
    }
    if ((_DWORD)v28 == v27)
    {
      readErrorReport(a1, a2, v19, "\"%s\" is not a token name", v21, v22, v23, v24, (uint64_t)__s1);
      v36 = 0;
LABEL_23:
      dlt_rderr();
      if (v35)
        break;
    }
LABEL_24:
    vpush_var(a1, (uint64_t)&v36);
  }
  OUTLINED_FUNCTION_18_45();
}

void dlt_rderr()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_34_33();
  OUTLINED_FUNCTION_16_48(v4, v5, "cmdwin");
  if (v6 || (v2 = 1, OUTLINED_FUNCTION_16_48(v1, v0, "pgmwin"), v7))
  {
    v8 = OUTLINED_FUNCTION_57_18();
    OUTLINED_FUNCTION_46_24(v8);
    v9 = OUTLINED_FUNCTION_40_26();
    OUTLINED_FUNCTION_36_33(v9);
    OUTLINED_FUNCTION_38_31();
    OUTLINED_FUNCTION_37_33();
    v10 = dynaBufContents(v2);
    v11 = OUTLINED_FUNCTION_35_33();
    OUTLINED_FUNCTION_33_34(v11, v12, v13, "Error in <%s>, re-enter:\n", v14, v15, v16, v17, v10 + v3 - v11);
    v18 = *(_QWORD *)(v1 + 200);
    v19 = *(_QWORD *)(v18 + 1744);
    if (v19)
    {
      v20 = *(_QWORD *)(v18 + 1760);
      *(_QWORD *)(v18 + 1720) = v20;
      *(_DWORD *)(v18 + 1728) = *(_DWORD *)(v18 + 1780) + v20 - *(_DWORD *)(v19 + 32);
    }
    OUTLINED_FUNCTION_58_18();
  }
  OUTLINED_FUNCTION_8_58();
}

void vprt_strm(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5, int a6)
{
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char __s1[80];
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  while (1)
  {
    OUTLINED_FUNCTION_49_22();
    if (a3 == a4 || a3 == v12)
      break;
    a3 = *(_QWORD *)(a3 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + a5)) & 0xFFFFFFFFFFFFFFFCLL;
    if (!a3 || (*(_BYTE *)a3 & 2) == 0)
    {
      disptok(v11, a3 + 16, a5, a6, __s1);
      if (__s1[0] == 92)
        cleanLiteral((unsigned __int8 *)__s1, 0, 0);
      v14 = __strcat_chk();
      OUTLINED_FUNCTION_28_36(v14, v15, v14);
      a3 = *(_QWORD *)(a3 + 8) & 0xFFFFFFFFFFFFFFFCLL;
    }
  }
  v16 = OUTLINED_FUNCTION_35_33();
  v17 = OUTLINED_FUNCTION_54_19();
  __s1[v16] = 0;
  OUTLINED_FUNCTION_28_36(v17, v18, (uint64_t)__s1);
  OUTLINED_FUNCTION_54_19();
  v19 = OUTLINED_FUNCTION_14_50();
  OUTLINED_FUNCTION_2_69(v19, v20, v21);
}

uint64_t disptok(int a1, int a2, int a3, int a4, char *__s1)
{
  char **v6;
  char *v7;
  _QWORD *v8;
  char *v9;
  const char *v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;

  v6 = &vstmtbl[12 * a3];
  v9 = v6[1];
  v8 = v6 + 1;
  v7 = v9;
  switch(*(_WORD *)&v9[40 * a4 + 30])
  {
    case 0xFFFB:
      OUTLINED_FUNCTION_3_69();
      v11 = *(const char **)(*v8 + 40 * a4 + 8);
      v19 = *(_QWORD *)OUTLINED_FUNCTION_3_69();
      sprintf(__s1, v11, v19);
      break;
    case 0xFFFC:
      OUTLINED_FUNCTION_3_69();
      v12 = *(const char **)(*v8 + 40 * a4 + 8);
      v13 = *(__int16 *)OUTLINED_FUNCTION_3_69();
      sprintf(__s1, v12, v13);
      break;
    case 0xFFFD:
      OUTLINED_FUNCTION_3_69();
      v14 = *(const char **)(*v8 + 40 * a4 + 8);
      v15 = *(_QWORD *)OUTLINED_FUNCTION_3_69();
      sprintf(__s1, v14, v15);
      break;
    case 0xFFFE:
      v16 = *(_QWORD *)&v7[40 * a4 + 16];
      v17 = *(__int16 *)OUTLINED_FUNCTION_4_65((uint64_t)vstmtbl[12 * a3 + 2]);
      goto LABEL_9;
    case 0xFFFF:
      v16 = *(_QWORD *)&v7[40 * a4 + 16];
      v17 = *(unsigned __int8 *)OUTLINED_FUNCTION_4_65((uint64_t)vstmtbl[12 * a3 + 2]);
LABEL_9:
      strcpy(__s1, *(const char **)(v16 + 8 * v17));
      break;
    default:
      break;
  }
  result = strcmp(__s1, "undefined");
  if (!(_DWORD)result)
    *(_DWORD *)__s1 = 2960685;
  return result;
}

void vsvdelta(_QWORD *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char **v9;
  char *v10;
  int v11;
  size_t v12;
  char *v13;
  int v14;
  size_t v15;
  uint64_t v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char **v26;
  char *v27;
  const char *v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const char *v34;
  const char *v35;
  const char *v36;

  v2 = a1[25];
  if (*(_DWORD *)(v2 + 248))
  {
    v3 = (uint64_t)a1;
    *(_BYTE *)(v2 + 478) = a2;
    if (*(_QWORD *)(v2 + 400)
      || (a1 = malloc_type_malloc(8 * *((unsigned __int8 *)a1 + 288), 0x80040B8603338uLL),
          (*(_QWORD *)(*(_QWORD *)(v3 + 200) + 400) = a1) != 0))
    {
      v4 = 0;
      v5 = 8 * *(unsigned __int8 *)(v3 + 288);
      while (1)
      {
        v6 = *(_QWORD *)(v3 + 200);
        if (v5 == v4)
          break;
        *(_QWORD *)(*(_QWORD *)(v6 + 400) + v4) = *(_QWORD *)v6;
        v4 += 8;
      }
      OUTLINED_FUNCTION_1_71((uint64_t)a1, *(char *)(v6 + 478), (uint64_t)"\nprint \"clearing...\" to cmdout");
      v8 = 0;
      v9 = vstmtbl;
      while (v8 < *(unsigned __int8 *)(v3 + 288))
      {
        OUTLINED_FUNCTION_10_57();
        __sprintf_chk(v10, v11, v12, "\nset ^_%s = ^left", v35);
        OUTLINED_FUNCTION_0_78();
        OUTLINED_FUNCTION_50_22();
        v9 += 12;
        OUTLINED_FUNCTION_10_57();
        __sprintf_chk(v13, v14, v15, "\ndelta delete %s ^left...^right", v36);
        OUTLINED_FUNCTION_0_78();
        ++v8;
      }
      OUTLINED_FUNCTION_1_71(v7, *(char *)(*(_QWORD *)(v3 + 200) + 478), (uint64_t)"\nprint \"restoring\" to cmdout");
      v17 = *(unsigned __int8 *)(v3 + 288);
      while (1)
      {
        v18 = __OFSUB__(v17--, 1);
        if (v17 < 0 != v18)
          break;
        OUTLINED_FUNCTION_2_69(v3, *(char *)(*(_QWORD *)(v3 + 200) + 478), (uint64_t)"\nprint \".\" to cmdout");
        v19 = OUTLINED_FUNCTION_14_50();
        reach(v19, v20, v21, 0xFFFFFFFF);
      }
      OUTLINED_FUNCTION_1_71(v16, *(char *)(*(_QWORD *)(v3 + 200) + 478), (uint64_t)"\nprint \"cleaning up...\" to cmdout");
      v25 = 0;
      v26 = (const char **)vstmtbl;
      while (v25 < *(unsigned __int8 *)(v3 + 288))
      {
        v27 = (char *)OUTLINED_FUNCTION_50_22();
        v28 = *v26;
        v26 += 12;
        __sprintf_chk(v27, 0, 0x46uLL, "\ndelta delete %s ^_%s", v28, v28);
        OUTLINED_FUNCTION_0_78();
        ++v25;
      }
      v29 = 9186;
      for (i = 1162; ; ++i)
      {
        if (i - 1161 >= *(int *)(v3 + 16))
        {
          OUTLINED_FUNCTION_1_71(v22, *(char *)(*(_QWORD *)(v3 + 200) + 478), (uint64_t)"\nprint \"\\n\" to cmdout\n");
          break;
        }
        v31 = *(_QWORD *)(v3 + 192);
        if (*(__int16 *)(v31 + v29 - 2) == -6 && (*(_BYTE *)(v31 + v29) & 0x20) == 0)
        {
          v32 = **(_QWORD **)(v31 + 8 * i);
          v33 = *(_QWORD *)(v3 + 200);
          if (v32 == *(_QWORD *)v33)
          {
            v34 = "\nset %s = ^left";
          }
          else
          {
            if (v32 != *(_QWORD *)(v33 + 8))
              goto LABEL_25;
            v34 = "\nset %s = ^right";
          }
          OUTLINED_FUNCTION_7_60((char *)(v33 + 408), v23, v24, v34);
          OUTLINED_FUNCTION_0_78();
        }
LABEL_25:
        v29 += 24;
      }
    }
  }
  OUTLINED_FUNCTION_8_58();
}

void reach(uint64_t a1, int a2, _BYTE *a3, unsigned int a4)
{
  uint64_t v5;
  _BYTE *i;
  unint64_t v8;
  int v9;
  const char **v10;
  char v11;
  const char *v12;
  uint64_t v13;
  _BYTE *v14;
  char *v15;
  int v16;
  size_t v17;
  uint64_t j;
  char v19;
  uint64_t v20;
  _BYTE *v21;
  const char *v22;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 400) + 8 * a2);
  if ((_BYTE *)v5 != a3)
  {
    for (i = (_BYTE *)VRSYNC(a1, v5, (char)a2); i != a3; i = (_BYTE *)VRSYNC(a1, (uint64_t)i, (char)a2))
    {
      v8 = 0;
      v9 = 0;
      v10 = (const char **)vstmtbl;
      while (v8 < *(unsigned __int8 *)(a1 + 288))
      {
        if (a2 != v8)
        {
          OUTLINED_FUNCTION_48_23();
          if ((v11 & 1) != 0)
          {
            v12 = ",";
            if (!v9)
            {
              v13 = OUTLINED_FUNCTION_61_17();
              prstuff(v13, a2, v14, i, 0xFFFFFFFFLL);
              *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 400) + 8 * a2) = i;
              OUTLINED_FUNCTION_2_69(a1, *(char *)(*(_QWORD *)(a1 + 200) + 478), (uint64_t)"\ndelta project ");
              v12 = (const char *)&unk_2486A531A;
            }
            __sprintf_chk((char *)(*(_QWORD *)(a1 + 200) + 408), 0, 0x46uLL, "%s%s", v12, *v10);
            v9 = 1;
            OUTLINED_FUNCTION_2_69(a1, *(char *)(*(_QWORD *)(a1 + 200) + 478), *(_QWORD *)(a1 + 200) + 408);
          }
        }
        ++v8;
        v10 += 12;
      }
      if (v9)
      {
        OUTLINED_FUNCTION_10_57();
        __sprintf_chk(v15, v16, v17, " (.1) ^_%s", v22);
        OUTLINED_FUNCTION_2_69(a1, *(char *)(*(_QWORD *)(a1 + 200) + 478), *(_QWORD *)(a1 + 200) + 408);
        for (j = 0; j < *(unsigned __int8 *)(a1 + 288); ++j)
        {
          if (a2 != (_DWORD)j)
          {
            OUTLINED_FUNCTION_48_23();
            if ((v19 & 1) != 0)
              reach(a1, j, i, a2);
          }
        }
      }
    }
    v20 = OUTLINED_FUNCTION_61_17();
    prstuff(v20, a2, v21, a3, a4);
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 400) + 8 * a2) = a3;
  }
  OUTLINED_FUNCTION_15_48();
}

uint64_t svgetl()
{
  void *v0;
  size_t v1;
  size_t v2;
  FILE *v3;
  unsigned int v5;

  v0 = (void *)OUTLINED_FUNCTION_30_34();
  fread(v0, v1, v2, v3);
  return bswap32(v5);
}

void svgeti()
{
  void *v0;
  size_t v1;
  size_t v2;
  FILE *v3;

  v0 = (void *)OUTLINED_FUNCTION_29_35();
  fread(v0, v1, v2, v3);
  OUTLINED_FUNCTION_39_28();
}

void svgetc(uint64_t a1)
{
  OUTLINED_FUNCTION_12_52(a1);
  OUTLINED_FUNCTION_39_28();
}

void svgetu(uint64_t a1)
{
  OUTLINED_FUNCTION_12_52(a1);
  OUTLINED_FUNCTION_39_28();
}

uint64_t svgets(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 200);
  v3 = 496;
  do
  {
    fread((void *)(v2 + v3), 1uLL, 1uLL, *(FILE **)(v2 + 480));
    v2 = *(_QWORD *)(a1 + 200);
  }
  while (*(unsigned __int8 *)(v2 + v3++));
  return v2 + 496;
}

void svputl()
{
  const void *v0;
  size_t v1;
  size_t v2;
  FILE *v3;

  v0 = (const void *)OUTLINED_FUNCTION_30_34();
  fwrite(v0, v1, v2, v3);
  OUTLINED_FUNCTION_27_36();
}

void svputi()
{
  const void *v0;
  size_t v1;
  size_t v2;
  FILE *v3;

  v0 = (const void *)OUTLINED_FUNCTION_29_35();
  fwrite(v0, v1, v2, v3);
  OUTLINED_FUNCTION_27_36();
}

void svputc(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_48(a1, a2);
  OUTLINED_FUNCTION_27_36();
}

void svputu(uint64_t a1, char a2)
{
  OUTLINED_FUNCTION_17_48(a1, a2);
  OUTLINED_FUNCTION_27_36();
}

size_t svputs(uint64_t a1, char *__s)
{
  size_t v4;

  v4 = strlen(__s) + 1;
  return fwrite(__s, 1uLL, v4, *(FILE **)(*(_QWORD *)(a1 + 200) + 480));
}

uint64_t svputlptrs(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v2 = *(_QWORD *)(result + 192);
  v3 = *(_QWORD *)(v2 + 8112);
  if (v3)
  {
    v4 = *(_QWORD *)(v3 + 8);
    if (v4)
    {
      v5 = *(_QWORD *)(v2 + 8104);
      if (v5)
      {
        v7 = result;
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (v9 < *(__int16 *)(v5 + 58))
        {
          v11 = *(_QWORD *)(v5 + 16);
          if (*(__int16 *)(v11 + v8 + 16) == -6
            && (*(char *)(v11 + v8 + 18) & 0x80000000) == 0
            && **(_QWORD **)(*(_QWORD *)(v4 + 16) + 8 * v9) == a2)
          {
            if (!v10)
            {
              v12 = OUTLINED_FUNCTION_14_50();
              svputc(v12, v13);
              v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v7 + 192) + 8104) + 16);
            }
            result = OUTLINED_FUNCTION_22_41(result, *(char **)(v11 + v8));
            v5 = *(_QWORD *)(*(_QWORD *)(v7 + 192) + 8104);
            v10 = 1;
          }
          ++v9;
          v8 += 24;
        }
        if (v10)
          return svputs(v7, (char *)&unk_2486A531A);
      }
    }
  }
  return result;
}

void vsv2delta(uint64_t a1, char *__filename)
{
  FILE *v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v6;
  char **v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t j;
  uint64_t k;
  uint64_t v13;
  char **v14;
  _BYTE *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t n;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int m;
  char v35[50];
  uint64_t v36;

  v36 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 488) = __filename;
  v3 = fopen(__filename, "wb");
  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 480) = v3;
  if (v3)
  {
    OUTLINED_FUNCTION_22_41((uint64_t)v3, (char *)&unk_2486A531A);
    OUTLINED_FUNCTION_44_26();
    svputi();
    OUTLINED_FUNCTION_44_26();
    OUTLINED_FUNCTION_13_51();
    for (i = 0; ; ++i)
    {
      v6 = *(unsigned __int8 *)(a1 + 288);
      if (i >= v6)
        break;
      v7 = &vstmtbl[12 * i];
      OUTLINED_FUNCTION_22_41(v4, *v7);
      v8 = (int *)(v7 + 8);
      OUTLINED_FUNCTION_13_51();
      OUTLINED_FUNCTION_23_40(v9, *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + i));
      v10 = 0;
      for (j = 0; j < *v8; ++j)
      {
        OUTLINED_FUNCTION_22_41(v4, *(char **)(*((_QWORD *)v8 - 7) + v10));
        OUTLINED_FUNCTION_13_51();
        OUTLINED_FUNCTION_13_51();
        OUTLINED_FUNCTION_13_51();
        v10 += 40;
      }
    }
    for (k = -2; k < v6; k = v13)
    {
      v13 = k + 1;
      if (k != -1)
      {
        svputc(a1, 125);
        OUTLINED_FUNCTION_14_50();
        svputi();
        if (k == -2)
          v14 = 0;
        else
          v14 = &vstmtbl[12 * k];
        v15 = **(_BYTE ***)(a1 + 200);
        if (k == -2)
          v16 = -99;
        else
          v16 = -2;
        for (m = v16; v15; v15 = (_BYTE *)(*v27 & 0xFFFFFFFFFFFFFFFCLL))
        {
          if ((*v15 & 2) != 0)
          {
            v22 = *(_QWORD **)(a1 + 200);
            if (v15 != (_BYTE *)*v22 && v15 != (_BYTE *)v22[1])
            {
              svputc(a1, 124);
              absoluteSyncNum(a1, (uint64_t)v15);
              OUTLINED_FUNCTION_13_51();
              v24 = *(_QWORD *)(a1 + 192);
              v25 = m;
              if (!*(_DWORD *)(v24 + 8868))
              {
                for (n = 0; ; ++n)
                {
                  if (*(unsigned __int8 *)(a1 + 288) + 2 == (_DWORD)n)
                  {
                    v25 = -99;
                    goto LABEL_39;
                  }
                  if ((_DWORD)n != 1 && k > n - 2 && (*(_QWORD *)&v15[8 * n - 16 + 8 * *(int *)(v24 + 9084)] & 1) != 0)
                    break;
                }
                v25 = n - 2;
              }
LABEL_39:
              OUTLINED_FUNCTION_23_40(v23, v25);
              if (v25 == -99)
              {
                v28 = NONSEQ((uint64_t)v15);
                OUTLINED_FUNCTION_23_40(v28, v28);
                v29 = ONESTM((uint64_t)v15);
                OUTLINED_FUNCTION_23_40(v29, v29);
                v30 = ALLNSQ((uint64_t)v15);
                OUTLINED_FUNCTION_23_40(v30, v30);
                svputlptrs(a1, (uint64_t)v15);
              }
            }
            OUTLINED_FUNCTION_60_18();
            v27 = &v15[8 * k + 8 * v31];
          }
          else
          {
            svputc(a1, 123);
            v17 = 0;
            v18 = 30;
            while (v17 < *((int *)v14 + 16))
            {
              v19 = v14[1];
              v20 = (char *)(*(uint64_t (**)(_BYTE *))&v14[2][8 * v17])(v15 + 16);
              switch(*(_WORD *)&v19[v18])
              {
                case 0xFFFB:
                  v21 = __sprintf_chk(v35, 0, 0x32uLL, "%g", *(double *)v20);
                  OUTLINED_FUNCTION_22_41(v21, v35);
                  break;
                case 0xFFFC:
                case 0xFFFE:
                  OUTLINED_FUNCTION_13_51();
                  break;
                case 0xFFFD:
                  svputl();
                  break;
                case 0xFFFF:
                  svputu(a1, *v20);
                  break;
                default:
                  break;
              }
              ++v17;
              v18 += 40;
            }
            v27 = v15 + 8;
          }
        }
        v6 = *(unsigned __int8 *)(a1 + 288);
        v13 = k + 1;
      }
    }
    OUTLINED_FUNCTION_52_20();
    svputlptrs(a1, v32);
    OUTLINED_FUNCTION_51_21();
    svputlptrs(a1, v33);
    svputc(a1, 121);
    OUTLINED_FUNCTION_53_19();
    vclrctxt(a1);
  }
}

_QWORD *findsync(uint64_t a1, int a2, char a3)
{
  uint64_t v4;
  _QWORD *v5;
  int i;

  v4 = (4 * a2);
  v5 = **(_QWORD ***)(a1 + 200);
  for (i = a3; v5; v5 = (_QWORD *)VRSYNC(a1, (uint64_t)v5, i))
  {
    if ((*v5 & 0xFFFFFFFFFFFFFFFCLL) == v4)
      break;
  }
  return v5;
}

void vrsdelta2(uint64_t a1, char *__filename)
{
  char v2;
  char *v3;
  FILE *v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char **v20;
  char **v21;
  int *v22;
  int v23;
  int v24;
  char v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char **v29;
  char **v30;
  uint64_t v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  uint64_t j;
  uint64_t v42;
  int v43;
  char **v44;
  int *v45;
  unint64_t v46;
  char v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char **v55;
  unsigned __int8 *v56;
  const char *v57;
  __int16 v58;
  char v59;
  _QWORD *v60;
  char *v61;
  int v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  unint64_t v70;
  char **v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;
  int v78;
  int v79;
  unint64_t *v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  _QWORD *k;
  _QWORD *v90;
  uint64_t v91;
  int v92;
  unsigned __int8 v93;
  int *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char **v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  char v103;

  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 488) = __filename;
  v5 = fopen(__filename, "rb");
  *(_QWORD *)(*(_QWORD *)(a1 + 200) + 480) = v5;
  if (!v5)
    goto LABEL_98;
  if (*(_BYTE *)OUTLINED_FUNCTION_45_25())
    goto LABEL_98;
  OUTLINED_FUNCTION_6_61();
  if (v6)
    goto LABEL_98;
  OUTLINED_FUNCTION_6_61();
  if (v7 != 1)
    goto LABEL_98;
  OUTLINED_FUNCTION_6_61();
  if (v8)
    goto LABEL_98;
  OUTLINED_FUNCTION_6_61();
  if (v9 != *(_DWORD *)(*(_QWORD *)(a1 + 192) + 8868))
    goto LABEL_98;
  vdltinit(a1, 0);
  *(_DWORD *)(*(_QWORD *)(a1 + 184) + 452) = 1;
  OUTLINED_FUNCTION_52_20();
  ***(_QWORD ***)(a1 + 200) = (4 * OUTLINED_FUNCTION_55_18(v10, v11)) | (unint64_t)(v2 & 3);
  OUTLINED_FUNCTION_51_21();
  **(_QWORD **)(*(_QWORD *)(a1 + 200) + 8) = (4 * OUTLINED_FUNCTION_55_18(v12, v13)) | (unint64_t)(v2 & 3);
  v14 = *(int *)(a1 + 16);
  v15 = 9184;
  for (i = 1162; ; ++i)
  {
    v17 = i - 1161;
    if (i - 1161 >= v14)
      break;
    v18 = *(_QWORD *)(a1 + 192);
    if (*(__int16 *)(v18 + v15) == -6 && v17 != *(__int16 *)(a1 + 290) && v17 != *(__int16 *)(a1 + 292))
      **(_QWORD **)(v18 + 8 * i) = 0;
    v15 += 24;
  }
  v19 = 0;
  v20 = vstmtbl;
  while (v19 < *(unsigned __int8 *)(a1 + 288))
  {
    svgets(a1);
    v21 = &v20[12 * v19];
    v23 = *((_DWORD *)v21 + 16);
    v22 = (int *)(v21 + 8);
    OUTLINED_FUNCTION_6_61();
    if (v23 != v24)
      goto LABEL_98;
    OUTLINED_FUNCTION_19_45();
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + v19) = v25;
    v26 = OUTLINED_FUNCTION_14_50();
    setnonseqIndex(v26, v27);
    if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 9072) + v19) > 1u)
      goto LABEL_98;
    v28 = 0;
    v29 = v20;
    v30 = &v20[12 * v19 + 1];
    v31 = -1;
    while (++v31 < *v22)
    {
      v32 = *v30;
      OUTLINED_FUNCTION_45_25();
      v3 = &v32[v28];
      v33 = *(__int16 *)&v32[v28 + 30];
      OUTLINED_FUNCTION_6_61();
      if (v34 == v33)
      {
        v35 = *((__int16 *)v3 + 14);
        OUTLINED_FUNCTION_6_61();
        if (v36 == v35)
        {
          v37 = v32[v28 + 32];
          OUTLINED_FUNCTION_6_61();
          v28 += 40;
          if (v38 == v37)
            continue;
        }
      }
      goto LABEL_98;
    }
    ++v19;
    v20 = v29;
  }
  svgetc(a1);
  if (v39 != 125)
    goto LABEL_98;
  v40 = 0;
  for (j = -2; ; j = v42)
  {
    if (j >= *(unsigned __int8 *)(a1 + 288))
    {
      OUTLINED_FUNCTION_53_19();
      if (v40)
      {
        v88 = 0;
        do
        {
          if (v88 >= *(unsigned __int8 *)(a1 + 288))
            break;
          for (k = **(_QWORD ***)(a1 + 200); k; k = (_QWORD *)(*v90 & 0xFFFFFFFFFFFFFFFCLL))
          {
            if ((*k & 2) != 0)
            {
              *k &= 3uLL;
              v90 = &k[*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + v88];
            }
            else
            {
              v90 = k + 1;
            }
          }
          ++v88;
        }
        while (!OUTLINED_FUNCTION_43_26());
        *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9080) = 0;
      }
      goto LABEL_98;
    }
    v42 = j + 1;
    if (j != -1)
      break;
LABEL_87:
    ;
  }
  if (v40)
    goto LABEL_98;
  v91 = j + 1;
  OUTLINED_FUNCTION_6_61();
  v93 = v43;
  if (v43 != (_DWORD)j)
    goto LABEL_98;
  v40 = 0;
  v44 = &v20[12 * j];
  v96 = j + 3;
  v97 = j;
  v45 = (int *)(v44 + 8);
  v46 = **(_QWORD **)(a1 + 200);
  v98 = v44 + 3;
  v99 = v44 + 1;
  v94 = (int *)v44 + 17;
  v95 = (uint64_t)v44;
  v47 = 1;
  while (2)
  {
    if ((v47 & 1) == 0)
    {
      v42 = v91;
      goto LABEL_87;
    }
    OUTLINED_FUNCTION_19_45();
    v47 = 1;
    switch(v48)
    {
      case 't':
        OUTLINED_FUNCTION_51_21();
        goto LABEL_36;
      case 'u':
        OUTLINED_FUNCTION_52_20();
LABEL_36:
        v50 = a1;
        goto LABEL_38;
      case 'v':
        v50 = a1;
        v49 = v46;
LABEL_38:
        svgetptrs(v50, v49, 0);
        continue;
      case 'w':
        OUTLINED_FUNCTION_51_21();
        goto LABEL_41;
      case 'x':
        OUTLINED_FUNCTION_52_20();
LABEL_41:
        v52 = a1;
        goto LABEL_44;
      case 'y':
        v47 = 0;
        v40 = 1;
        continue;
      case 'z':
        v52 = a1;
        v51 = v46;
LABEL_44:
        svgetptrs(v52, v51, 1);
        continue;
      case '{':
        v92 = v40;
        v53 = 0;
        v54 = 30;
LABEL_46:
        if (v53 >= *v45)
        {
          v47 = 1;
          v40 = v92;
          continue;
        }
        v103 = 0;
        v102 = 0;
        v101 = 0;
        v100 = 0;
        v55 = v20;
        switch(*(_WORD *)&(*v99)[v54])
        {
          case 0xFFFB:
            v57 = (const char *)OUTLINED_FUNCTION_45_25();
            v56 = (unsigned __int8 *)&v100;
            sscanf(v57, "%lg", &v100);
            break;
          case 0xFFFC:
            OUTLINED_FUNCTION_6_61();
            v101 = v58;
            v56 = (unsigned __int8 *)&v101;
            break;
          case 0xFFFD:
          case 0xFFFE:
            v102 = svgetl();
            v56 = (unsigned __int8 *)&v102;
            break;
          case 0xFFFF:
            svgetu(a1);
            v103 = v59;
            v56 = (unsigned __int8 *)&v103;
            break;
          default:
            v56 = 0;
            break;
        }
        if (v53)
        {
          (*(void (**)(uint64_t, unsigned __int8 *))(*v98 + 8 * v53))(16, v56);
          v60 = (_QWORD *)v46;
LABEL_60:
          ++v53;
          v54 += 40;
          v46 = (unint64_t)v60;
          v20 = v55;
          goto LABEL_46;
        }
        v61 = v3;
        v62 = *((__int16 *)*v99 + 15);
        v63 = alloc_tok(a1, v95);
        if (v63)
        {
          v60 = v63;
          OUTLINED_FUNCTION_60_18();
          *(_QWORD *)(v46 + 8 * (v97 + v64)) = *(_QWORD *)(v46 + 8 * (v97 + v64)) & 3 | v65;
          OUTLINED_FUNCTION_49_22();
          *(_QWORD *)(v66 + 8 * v67) = *(_QWORD *)(v66 + 8 * v67) & 3 | v68;
          OUTLINED_FUNCTION_49_22();
          *v69 = v46;
          v69[1] = v70;
          if (v62 < 0)
            vinitflds(a1, v93, v69 + 2, v56);
          else
            memcpy(v69 + 2, v56, *v94);
          v3 = v61;
          goto LABEL_60;
        }
LABEL_98:
        OUTLINED_FUNCTION_18_45();
        return;
      case '|':
        v71 = v20;
        OUTLINED_FUNCTION_6_61();
        v73 = v72;
        OUTLINED_FUNCTION_19_45();
        v75 = (4 * v73);
        if (v74 == -99)
        {
          v76 = alloc_sync(a1);
          if (!v76)
            goto LABEL_98;
          v77 = (unint64_t)v76;
          *v76 = *v76 & 3 | v75;
          OUTLINED_FUNCTION_19_45();
          if (v78)
            SETNONSEQ(v77);
          else
            CLRNONSEQ(v77);
          v81 = v97;
          OUTLINED_FUNCTION_19_45();
          if (v82)
            SETONESTM(v77);
          else
            CLRONESTM(v77);
          OUTLINED_FUNCTION_19_45();
          if (v83)
            SETALLNSQ(v77);
          else
            CLRALLNSQ(v77);
        }
        else
        {
          v79 = v74;
          v80 = *(unint64_t **)(a1 + 200);
          v77 = *v80;
          while (1)
          {
            if (v77 == v80[1])
              goto LABEL_98;
            if ((*(_QWORD *)v77 & 0xFFFFFFFFFFFFFFFCLL) == v75)
              break;
            v77 = VRSYNC(a1, v77, v79);
            v80 = *(unint64_t **)(a1 + 200);
          }
          v81 = v97;
        }
        if (v81 != -2)
        {
          OUTLINED_FUNCTION_60_18();
          *(_QWORD *)(v77 + 8 * (v81 + v84)) |= 1uLL;
        }
        OUTLINED_FUNCTION_49_22();
        *(_QWORD *)(v85 + 8 * v96) = *(_QWORD *)(v85 + 8 * v96) & 3 | v77;
        v86 = v81 + *(int *)(*(_QWORD *)(a1 + 192) + 9084);
        *(_QWORD *)(v77 + 8 * v86) = *(_QWORD *)(v77 + 8 * v86) & 3 | *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8);
        *(_QWORD *)(v77 + 8 * v96) = *(_QWORD *)(v77 + 8 * v96) & 3 | v46;
        if (v46 && (*(_BYTE *)v46 & 2) != 0)
        {
          OUTLINED_FUNCTION_60_18();
          *(_QWORD *)(v46 + 8 * (v97 + v87)) = *(_QWORD *)(v46 + 8 * (v97 + v87)) & 3 | v77;
        }
        else
        {
          *(_QWORD *)(v46 + 8) = v77;
        }
        v47 = 1;
        v46 = v77;
        v20 = v71;
        continue;
      case '}':
        v47 = 0;
        continue;
      default:
        continue;
    }
  }
}

_BYTE *svgetptrs(uint64_t a1, uint64_t a2, int a3)
{
  _BYTE *result;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  while (1)
  {
    result = (_BYTE *)svgets(a1);
    if (!*result)
      break;
    v6 = OUTLINED_FUNCTION_26_38();
    if (a3)
    {
      getgptr(v6, v7, v8);
      if (!v9)
      {
        v10 = OUTLINED_FUNCTION_26_38();
        getlptr(v10, v11, v12);
      }
    }
    else
    {
      getlptr(v6, v7, v8);
      if (!v13)
      {
        v14 = OUTLINED_FUNCTION_26_38();
        getgptr(v14, v15, v16);
      }
    }
  }
  return result;
}

void prstuff(uint64_t a1, int a2, _BYTE *a3, _BYTE *a4, uint64_t a5)
{
  _BYTE *v6;
  int v9;
  int v10;
  char **v11;
  _BYTE *v12;
  __int16 v13;
  uint64_t v14;
  int v15;
  const char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  int v28;
  size_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  const char *v40;

  if (a3 != a4)
  {
    v6 = a3;
    v9 = 0;
    v10 = 0;
    v11 = &vstmtbl[12 * a2 + 1];
    v12 = a3;
    if (a3)
      goto LABEL_3;
LABEL_4:
    if (!v10)
      OUTLINED_FUNCTION_42_26();
    v13 = *((_WORD *)*v11 + 15);
    disptok(a1, (_DWORD)v12 + 16, a2, 0, (char *)(*(_QWORD *)(a1 + 200) + 408));
    v14 = *(_QWORD *)(a1 + 200);
    v15 = *(char *)(v14 + 478);
    if ((unsigned __int16)(v13 + 5) > 2u)
    {
      OUTLINED_FUNCTION_2_69(a1, v15, (uint64_t)"'");
      OUTLINED_FUNCTION_0_78();
      v15 = *(char *)(*(_QWORD *)(a1 + 200) + 478);
      v17 = a1;
      v16 = "'";
    }
    else
    {
      v16 = (const char *)(v14 + 408);
      v17 = a1;
    }
    OUTLINED_FUNCTION_2_69(v17, v15, (uint64_t)v16);
    v10 = 1;
    OUTLINED_FUNCTION_2_69(a1, *(char *)(*(_QWORD *)(a1 + 200) + 478), (uint64_t)" ");
    v9 = 0;
    v18 = v12 + 8;
    while (1)
    {
      v12 = (_BYTE *)(*v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (!v12)
        goto LABEL_4;
LABEL_3:
      if ((*v12 & 2) == 0)
        goto LABEL_4;
      if (v9)
      {
        if (v10)
          OUTLINED_FUNCTION_41_26();
        OUTLINED_FUNCTION_42_26();
        v10 = 0;
      }
      v19 = a5;
      v21 = (int)a5 >= 0 && v12 == a4;
      v22 = v6;
      if (v12 != v6 && !v21)
      {
        v23 = 1162;
        v24 = 9184;
        while (v23 - 1161 < *(int *)(a1 + 16))
        {
          v25 = *(_QWORD *)(a1 + 192);
          if (*(__int16 *)(v25 + v24) == -6 && **(_BYTE ***)(v25 + 8 * v23) == v12)
          {
            v26 = *(_QWORD **)(a1 + 200);
            if (v12 != (_BYTE *)*v26 && v12 != (_BYTE *)v26[1])
            {
              OUTLINED_FUNCTION_10_57();
              __sprintf_chk(v27, v28, v29, "!%s ", v40);
              OUTLINED_FUNCTION_0_78();
            }
          }
          v24 += 24;
          ++v23;
        }
      }
      if (v9)
        OUTLINED_FUNCTION_41_26();
      if (v12 == a4)
        break;
      v18 = &v12[8 * *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + 8 * a2];
      v9 = 1;
      a5 = v19;
      v6 = v22;
    }
    if (v10)
      prrange(a1);
    if ((v19 & 0x80000000) == 0)
    {
      v30 = (char *)OUTLINED_FUNCTION_50_22();
      OUTLINED_FUNCTION_7_60(v30, v31, v32, "^_%s");
      OUTLINED_FUNCTION_0_78();
      if (!v10)
      {
        v33 = (char *)OUTLINED_FUNCTION_50_22();
        OUTLINED_FUNCTION_7_60(v33, v34, v35, "\nset ^_%s = ^_%s");
        v36 = OUTLINED_FUNCTION_9_57();
        vf_puts(v36, v37, v38, v39);
      }
    }
  }
}

void prrange(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (char *)OUTLINED_FUNCTION_31_34(a1);
  OUTLINED_FUNCTION_7_60(v1, v2, v3, "!^_%s ] ^_%s...");
  v4 = OUTLINED_FUNCTION_9_57();
  OUTLINED_FUNCTION_20_44(v4, v5, v6, v7);
}

void prinsert(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (char *)OUTLINED_FUNCTION_31_34(a1);
  OUTLINED_FUNCTION_7_60(v1, v2, v3, "\ndelta insert [%s%s ");
  v4 = OUTLINED_FUNCTION_9_57();
  OUTLINED_FUNCTION_20_44(v4, v5, v6, v7);
}

void getgptr(uint64_t a1, uint64_t a2, char *__s2)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(int *)(a1 + 16);
  v7 = 1162;
  v8 = 9184;
  while (v7 - 1161 < v6)
  {
    v9 = *(_QWORD *)(a1 + 192);
    if (*(__int16 *)(v9 + v8) == -6 && !strcmp(*(const char **)(v9 + v8 - 16), __s2))
    {
      **(_QWORD **)(v9 + 8 * v7) = a2;
      break;
    }
    ++v7;
    v8 += 24;
  }
  OUTLINED_FUNCTION_24_39();
}

void getlptr(uint64_t a1, uint64_t a2, char *__s2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = 0;
  v6 = 0;
  v7 = *(_QWORD *)(a1 + 192);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 8112) + 8);
  v9 = *(_QWORD *)(v7 + 8104);
  v10 = 8 * (*(__int16 *)(v9 + 58) & ~(*(__int16 *)(v9 + 58) >> 31));
  while (v10 != v6)
  {
    v11 = *(_QWORD *)(v9 + 16);
    if (*(__int16 *)(v11 + v5 + 16) == -6 && !strcmp(*(const char **)(v11 + v5), __s2))
    {
      **(_QWORD **)(*(_QWORD *)(v8 + 16) + v6) = a2;
      break;
    }
    v6 += 8;
    v5 += 24;
  }
  OUTLINED_FUNCTION_24_39();
}

void OUTLINED_FUNCTION_0_78()
{
  uint64_t v0;

  vf_puts(v0, *(char *)(*(_QWORD *)(v0 + 200) + 478), *(_QWORD *)(v0 + 200) + 408, 1);
}

void OUTLINED_FUNCTION_1_71(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  vf_puts(v3, a2, a3, 1);
}

void OUTLINED_FUNCTION_2_69(uint64_t a1, int a2, uint64_t a3)
{
  vf_puts(a1, a2, a3, 1);
}

uint64_t OUTLINED_FUNCTION_3_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 16) + 8 * v1))(v0);
}

uint64_t OUTLINED_FUNCTION_4_65@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(a1 + 8 * v2))(v1);
}

void OUTLINED_FUNCTION_5_62(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  va_list va;

  va_start(va, a6);
  rdtokverr(v6, v7, v8, va);
}

void OUTLINED_FUNCTION_6_61()
{
  svgeti();
}

uint64_t OUTLINED_FUNCTION_7_60(char *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  return __sprintf_chk(a1, 0, 0x46uLL, a4);
}

uint64_t OUTLINED_FUNCTION_9_57()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_11_55()
{
  vf_getc();
}

size_t OUTLINED_FUNCTION_12_52(uint64_t a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 1) = 0;
  return fread((void *)(v1 - 1), 1uLL, 1uLL, *(FILE **)(*(_QWORD *)(a1 + 200) + 480));
}

void OUTLINED_FUNCTION_13_51()
{
  svputi();
}

uint64_t OUTLINED_FUNCTION_14_50()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_16_48(uint64_t a1, int a2, _BYTE *a3)
{
  logicalFileFindPhysical(a1, a2, a3, 1);
}

size_t OUTLINED_FUNCTION_17_48(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 - 1) = a2;
  return fwrite((const void *)(v2 - 1), 1uLL, 1uLL, *(FILE **)(*(_QWORD *)(a1 + 200) + 480));
}

void OUTLINED_FUNCTION_19_45()
{
  uint64_t v0;

  svgetc(v0);
}

void OUTLINED_FUNCTION_20_44(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  vf_puts(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_21_43()
{
  return vf_ungetc();
}

size_t OUTLINED_FUNCTION_22_41(uint64_t a1, char *a2)
{
  uint64_t v2;

  return svputs(v2, a2);
}

void OUTLINED_FUNCTION_23_40(uint64_t a1, char a2)
{
  uint64_t v2;

  svputc(v2, a2);
}

uint64_t OUTLINED_FUNCTION_25_39()
{
  int v0;

  return STMTYP(v0);
}

uint64_t OUTLINED_FUNCTION_26_38()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_28_36(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;

  vf_puts(v3, v4, a3, 0);
}

uint64_t OUTLINED_FUNCTION_29_35()
{
  uint64_t v0;

  return v0 - 2;
}

uint64_t OUTLINED_FUNCTION_30_34()
{
  uint64_t v0;

  return v0 - 4;
}

uint64_t OUTLINED_FUNCTION_31_34(uint64_t a1)
{
  return *(_QWORD *)(a1 + 200) + 408;
}

void OUTLINED_FUNCTION_32_34()
{
  var_rderr();
}

void OUTLINED_FUNCTION_33_34(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  int v9;
  uint64_t v10;

  vf_printf(v10, v9, 1, a4, a5, a6, a7, a8, a9);
}

size_t OUTLINED_FUNCTION_35_33()
{
  const char *v0;

  return strlen(v0);
}

uint64_t OUTLINED_FUNCTION_36_33(int a1)
{
  uint64_t v1;

  return dynaBufMoveAbs(v1, a1 - 1);
}

uint64_t OUTLINED_FUNCTION_37_33()
{
  uint64_t v0;
  unsigned int v1;

  return dynaBufMoveAbs(v0, v1);
}

uint64_t *OUTLINED_FUNCTION_38_31()
{
  uint64_t *v0;

  return dynaBufDeleteChars(v0, 1uLL);
}

uint64_t OUTLINED_FUNCTION_40_26()
{
  uint64_t v0;

  return dynaBufLength(v0);
}

void OUTLINED_FUNCTION_41_26()
{
  uint64_t v0;

  prrange(v0);
}

void OUTLINED_FUNCTION_42_26()
{
  uint64_t v0;

  prinsert(v0);
}

uint64_t OUTLINED_FUNCTION_43_26()
{
  uint64_t v0;

  return checkInterrupt(v0);
}

void OUTLINED_FUNCTION_44_26()
{
  svputi();
}

uint64_t OUTLINED_FUNCTION_45_25()
{
  uint64_t v0;

  return svgets(v0);
}

uint64_t OUTLINED_FUNCTION_46_24(uint64_t a1)
{
  return dynaBufMoveRel(a1, 0);
}

uint64_t OUTLINED_FUNCTION_47_24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return chk_itok((unsigned __int8 *)va);
}

uint64_t OUTLINED_FUNCTION_50_22()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200) + 408;
}

uint64_t OUTLINED_FUNCTION_53_19()
{
  uint64_t v0;

  return fclose(*(FILE **)(*(_QWORD *)(v0 + 200) + 480));
}

uint64_t OUTLINED_FUNCTION_54_19()
{
  return __memset_chk();
}

uint64_t OUTLINED_FUNCTION_55_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return absoluteSyncNum(v2, a2);
}

void OUTLINED_FUNCTION_56_18()
{
  vf_getc();
}

uint64_t OUTLINED_FUNCTION_57_18()
{
  int v0;
  uint64_t v1;

  return logicalFileInputBuffer(v1, v0);
}

uint64_t OUTLINED_FUNCTION_58_18()
{
  int v0;
  uint64_t v1;

  return vf_clrbuf(v1, v0);
}

void OUTLINED_FUNCTION_59_18()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 184) + 32) = 0;
  *(_DWORD *)(*(_QWORD *)(v0 + 184) + 436) = 0;
}

uint64_t OUTLINED_FUNCTION_61_17()
{
  uint64_t v0;

  return v0;
}

uint64_t vdur_ass(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  int v6;
  uint64_t v11;
  __n128 v12;
  double v13;
  char **v14;
  uint64_t (***v15)(_QWORD, __n128);
  char *v16;
  int v17;
  double v18;
  double v19;
  _BYTE *i;
  int v21;
  uint64_t *v22;
  unsigned __int8 *v23;
  _QWORD *v24;
  __int16 v25;
  uint64_t v26;

  v6 = a4;
  v26 = a5;
  v25 = 0;
  if (vrange_2pt(a1, a2, (uint64_t)a3, a4, 0))
    return 1;
  vdur(a1, (uint64_t *)a2, a3, v6);
  v12.n128_u64[0] = 0;
  v13 = 0.0;
  if (v11)
    v13 = (double)a5 / (double)v11;
  v14 = &vstmtbl[12 * v6];
  v16 = v14[1];
  v15 = (uint64_t (***)(_QWORD, __n128))(v14 + 1);
  v17 = *((_WORD *)v16 + 15) & 0xFFFE;
  v18 = -0.5;
  if (v13 >= 0.0)
    v18 = 0.5;
  if (v17 == 65532)
    v19 = v18;
  else
    v19 = 0.0;
  for (i = (_BYTE *)*a2; i != (_BYTE *)*a3; i = (_BYTE *)(*v24 & 0xFFFFFFFFFFFFFFFCLL))
  {
    if (i && (*i & 2) != 0)
    {
      v24 = &i[8 * *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + 8 * v6];
    }
    else
    {
      v21 = *((__int16 *)*v15 + 15);
      v22 = (uint64_t *)(*v15[1])(i + 16, v12);
      if (v21 == -3)
      {
        v26 = (uint64_t)(v19 + (double)*v22 * v13);
        v23 = (unsigned __int8 *)&v26;
      }
      else
      {
        v26 = (uint64_t)(v19 + (double)*(__int16 *)v22 * v13);
        v25 = v26;
        v23 = (unsigned __int8 *)&v25;
      }
      vinitflds(a1, v6, i + 16, v23);
      v24 = i + 8;
    }
  }
  return 0;
}

uint64_t vrange_2pt(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t *v7;
  _BYTE *v9;
  unint64_t v10;
  _QWORD *v11;
  __int128 v12;
  __int128 v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  int v24;
  _OWORD v26[2];
  _OWORD v27[2];

  v7 = (uint64_t *)a1;
  if (a5)
  {
    v9 = (_BYTE *)*a2;
    if ((*(_QWORD *)(*a2 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + *((unsigned __int8 *)a2 + 8))) & 1) == 0
      || a2[2])
    {
      a1 = vnormalize(a1, (uint64_t)a2);
      if ((_DWORD)a1 == 2)
      {
        *a2 = vsplit_time(v7, *((unsigned __int8 *)a2 + 8), *a2, a2[2]);
        OUTLINED_FUNCTION_38_32();
        v20 = *(_QWORD *)(v16 + 8 * v19);
        goto LABEL_27;
      }
      if ((_DWORD)a1 == 4)
      {
LABEL_13:
        if (a5 == 205)
        {
          v10 = *a2;
          v11 = (_QWORD *)v7[25];
          v21 = (_QWORD *)v11[1];
          if ((_QWORD *)*a2 == v21)
            goto LABEL_21;
        }
        else
        {
          if (a5 == 206)
          {
            v10 = *a2;
            v11 = (_QWORD *)v7[25];
LABEL_21:
            if (v10 == *v11)
              return 1;
            *(_QWORD *)a3 = v10;
            a1 = OUTLINED_FUNCTION_33_35(a1, *((unsigned __int8 *)a2 + 8), *(_QWORD *)(*a2 + 8 * *((unsigned __int8 *)a2 + 8) + 24) & 0xFFFFFFFFFFFFFFFCLL, *a2);
            *a2 = a1;
            if (!a1)
              return 1;
            goto LABEL_28;
          }
          v10 = *a2;
          v21 = *(_QWORD **)(v7[25] + 8);
        }
        if ((_QWORD *)v10 == v21)
          return 1;
        OUTLINED_FUNCTION_38_32();
        v20 = *(_QWORD *)(v18 + 8 * v22);
LABEL_27:
        a1 = OUTLINED_FUNCTION_33_35(v16, v17, v18, v20 & 0xFFFFFFFFFFFFFFFCLL);
        *(_QWORD *)a3 = a1;
        if (a1)
        {
LABEL_28:
          v15 = 1;
          *((_BYTE *)a2 + 24) = 1;
          *(_BYTE *)(a3 + 24) = 1;
          goto LABEL_29;
        }
        return 1;
      }
      if ((_DWORD)a1 != 3)
        return 1;
      v9 = (_BYTE *)*a2;
    }
    *(_QWORD *)a3 = v9;
    if ((a5 + 51) <= 1u)
    {
      a1 = (uint64_t)lmost(*((char *)a2 + 8), (_QWORD *)*a2);
      *a2 = a1;
      v9 = *(_BYTE **)a3;
    }
    if ((a5 & 0xFFFFFFFD) == 0xCD)
    {
      a1 = (uint64_t)rmost((uint64_t)v7, *((char *)a2 + 8), v9);
      v9 = (_BYTE *)a1;
      *(_QWORD *)a3 = a1;
    }
    if ((_BYTE *)*a2 != v9)
      goto LABEL_28;
    goto LABEL_13;
  }
  v12 = *((_OWORD *)a2 + 1);
  v27[0] = *(_OWORD *)a2;
  v27[1] = v12;
  v13 = *(_OWORD *)(a3 + 16);
  v26[0] = *(_OWORD *)a3;
  v26[1] = v13;
  vcomp_pta(a1, (uint64_t)v27, (uint64_t)v26);
  if (v14 || !*(_BYTE *)(v7[24] + 8120))
    return 1;
  vtmark_tv((uint64_t)v7, (uint64_t)a2);
  v15 = 1;
  vtmark_tv((uint64_t)v7, a3);
LABEL_29:
  OUTLINED_FUNCTION_31_35(a1, *a2);
  if ((_DWORD)v23)
  {
    OUTLINED_FUNCTION_31_35(v23, *(_QWORD *)a3);
    if (v24)
      return 0;
  }
  return v15;
}

void vdur(uint64_t a1, uint64_t *a2, unint64_t *a3, int a4)
{
  dur2(a1, a2, a3, a4, 0);
}

void gcql(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  char v6;

  while (1)
  {
    OUTLINED_FUNCTION_42_27();
    if ((v6 & 1) != 0)
      break;
    VLSYNC(v5, a4);
  }
  OUTLINED_FUNCTION_43_27();
}

void gcqr(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v6;
  char v7;

  while (1)
  {
    OUTLINED_FUNCTION_42_27();
    if ((v7 & 1) != 0)
      break;
    VRSYNC(a1, v6, a4);
  }
  OUTLINED_FUNCTION_43_27();
}

void dur2(uint64_t a1, uint64_t *a2, unint64_t *a3, int a4, int a5)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  _BYTE *v11;
  _BYTE **v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;

  v7 = *a2;
  v8 = *a3;
  if (v7 != *a3)
  {
    v10 = a1;
    if (a5)
    {
      v11 = (_BYTE *)v7;
    }
    else
    {
      visleft(a1, v7, *a3);
      if ((_DWORD)a1)
        v12 = (_BYTE **)a2;
      else
        v12 = (_BYTE **)a3;
      if ((_DWORD)a1)
        v13 = a3;
      else
        v13 = (unint64_t *)a2;
      v8 = *v13;
      v11 = *v12;
      v7 = *a2;
    }
    v14 = *(int *)(*(_QWORD *)(v10 + 192) + 9084) + (uint64_t)a4;
    if ((*(_QWORD *)(v7 + 8 * v14) & 1) == 0)
    {
      a1 = OUTLINED_FUNCTION_44_27(a1, v7);
      if (!(_DWORD)a1)
        goto LABEL_28;
      v14 = *(int *)(*(_QWORD *)(v10 + 192) + 9084) + (uint64_t)a4;
    }
    if ((*(_QWORD *)(*a3 + 8 * v14) & 1) != 0 || OUTLINED_FUNCTION_44_27(a1, *a3))
    {
      v15 = 0;
      while (v11 != (_BYTE *)v8 && v11)
      {
        if ((*v11 & 2) != 0)
        {
          v17 = &v11[8 * *(_DWORD *)(*(_QWORD *)(v10 + 192) + 9084) + 8 * a4];
        }
        else
        {
          v16 = *((__int16 *)vstmtbl[12 * a4 + 1] + 15);
          if (v16 == -4)
          {
            v15 += *(__int16 *)OUTLINED_FUNCTION_16_49();
          }
          else if (v16 == -3)
          {
            v15 += *(_QWORD *)OUTLINED_FUNCTION_16_49();
          }
          v17 = v11 + 8;
        }
        v11 = (_BYTE *)(*v17 & 0xFFFFFFFFFFFFFFFCLL);
      }
    }
  }
LABEL_28:
  OUTLINED_FUNCTION_9_58();
}

uint64_t val_expr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v9;

  return val_expr2(a1, a2, a3, a4, a5, 9, &v9, a8);
}

uint64_t val_expr2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7, uint64_t a8)
{
  unsigned int v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  _QWORD *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  char **v30;
  _QWORD *v31;
  _BYTE *v32;
  uint64_t *v33;
  unint64_t v34;
  int v35;
  uint64_t *v36;
  __int16 *v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t *v52;
  int v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t *v80;
  int v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v86;
  uint64_t v87;
  _QWORD *v88;
  int v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;

  v8 = a4;
  v9 = a3;
  v10 = (uint64_t *)a2;
  v11 = a1;
  *a7 = 0;
  v12 = (_QWORD *)*(char *)(a2 + 8);
  if (!(_DWORD)a5)
  {
    if (BYTE4(vstmtbl[12 * (int)a3 + 11]))
      a5 = LODWORD(vstmtbl[12 * *(char *)(a2 + 8) + 11]);
    else
      a5 = 0;
  }
  v92 = 0u;
  v93 = 0u;
  v90 = 0u;
  v91 = 0u;
  v86 = a7;
  LODWORD(v87) = a5;
  if ((_DWORD)a6 == 9)
  {
    a1 = vnormalize(a1, a2);
    v13 = -2147483647;
    switch((int)a1)
    {
      case 1:
        return v13;
      case 2:
        v14 = *v10;
        if (v10[2] < 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v14 + 8 * (_QWORD)v12 + 24) & 0xFFFFFFFFFFFFFFFCLL) & 0xFFFFFFFFFFFFFFFCLL;
        }
        else
        {
          v15 = *v10;
          v14 = *(_QWORD *)((*(_QWORD *)(v14 + 8 * (*(_DWORD *)(*(_QWORD *)(v11 + 192) + 9084) + (int)v12)) & 0xFFFFFFFFFFFFFFFCLL)
                          + 8) & 0xFFFFFFFFFFFFFFFCLL;
        }
        *(_QWORD *)&v92 = v15;
        *(_QWORD *)&v90 = v14;
        OUTLINED_FUNCTION_5_63(a1, v15);
        v17 = v28;
        v27 = v11;
        v26 = v14;
        goto LABEL_15;
      case 3:
        v19 = rmost(v11, (int)v12, (_BYTE *)*v10);
        firstdefd(v11, (int)v12, v19, v9, 0);
        v21 = v20;
        v22 = lmost((int)v12, (_QWORD *)*v10);
        HIDWORD(v87) = 1;
        firstdefd(v11, (int)v12, v22, v9, 1);
        OUTLINED_FUNCTION_5_63(v23, v23);
        v17 = v24;
        OUTLINED_FUNCTION_22_42(v11, v21);
        v18 = (_QWORD *)a1;
        goto LABEL_17;
      case 4:
        OUTLINED_FUNCTION_5_63(a1, *v10);
        v17 = v25;
        v26 = *v10;
        v27 = v11;
LABEL_15:
        OUTLINED_FUNCTION_22_42(v27, v26);
        v18 = (_QWORD *)a1;
        break;
      default:
        v89 = (int)v12;
        v17 = 0;
        v18 = 0;
        break;
    }
    HIDWORD(v87) = 1;
  }
  else
  {
    v89 = (int)v12;
    HIDWORD(v87) = 0;
    v16 = *(_QWORD *)(a1 + 200);
    v17 = *(_BYTE **)(*(_QWORD *)(v16 + 616) + 8 * (int)a3);
    v18 = *(_QWORD **)(*(_QWORD *)(v16 + 624) + 8 * (int)a3);
  }
LABEL_17:
  v29 = 0;
  v30 = &vstmtbl[12 * v9];
  v31 = v30 + 1;
  v88 = v30 + 2;
  v32 = v17;
  v13 = -2147483647;
  while (v32 != (_BYTE *)v18)
  {
    if (v32 && (*v32 & 2) != 0)
    {
      v33 = v10;
      v34 = *(_QWORD *)&v32[8 * *(_DWORD *)(*(_QWORD *)(v11 + 192) + 9084) + 8 * v9] & 0xFFFFFFFFFFFFFFFCLL;
      v35 = *(__int16 *)(*v31 + 40 * v8 + 30);
      if (v35 == -4)
      {
        v37 = (__int16 *)OUTLINED_FUNCTION_8_59(a1, a2, a3, a4, a5, a6, (uint64_t)a7, a8, (uint64_t)v86, v87, v88);
        v31 = v12;
        if (*v37 == -32767)
          v29 = -2147483647;
        else
          v29 = *v37;
      }
      else if (v35 == -3)
      {
        v36 = (uint64_t *)OUTLINED_FUNCTION_8_59(a1, a2, a3, a4, a5, a6, (uint64_t)a7, a8, (uint64_t)v86, v87, v88);
        v31 = v12;
        v29 = *v36;
      }
      a1 = v29;
      if (v13 != -2147483647)
      {
        a1 = v13;
        if (v13 != v29)
          return -2147483647;
      }
      v32 = (_BYTE *)(*(_QWORD *)(v34 + 8) & 0xFFFFFFFFFFFFFFFCLL);
      v13 = a1;
      v10 = v33;
    }
  }
  if (v13 != -2147483647)
    return v13;
  *(_QWORD *)&v93 = 0;
  BYTE8(v93) = 1;
  *(_QWORD *)&v91 = 0;
  BYTE8(v91) = 1;
  if (!v17)
  {
LABEL_34:
    v13 = -2147483647;
    if (v18)
      goto LABEL_45;
    goto LABEL_47;
  }
  while ((*v17 & 2) != 0)
  {
    v17 = (_BYTE *)(*(_QWORD *)&v17[8 * v9 + 24] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v17)
      goto LABEL_34;
  }
  OUTLINED_FUNCTION_19_46();
  if ((v39 & 1) == 0)
    v38 = vgetsc(v11, 0, 1, v38, v89);
  *(_QWORD *)&v92 = v38;
  OUTLINED_FUNCTION_28_37();
  v13 = -2147483647;
  if (v48 == -4)
  {
    OUTLINED_FUNCTION_4_66(v40, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v86, v87, v88);
    v13 = -2147483647;
    OUTLINED_FUNCTION_24_40();
    if (!v73)
      v13 = v49;
  }
  else if (v48 == -3)
  {
    v13 = *(_QWORD *)OUTLINED_FUNCTION_4_66(v40, v41, v42, v43, v44, v45, v46, v47, (uint64_t)v86, v87, v88);
    if (v18)
      goto LABEL_45;
    goto LABEL_47;
  }
  if (!v18)
  {
LABEL_47:
    if (!v17)
      return -32767;
    v50 = OUTLINED_FUNCTION_35_34();
    durcalc(v50, v51, v52, v53, v54, SHIDWORD(v87));
    if (v55)
    {
      v56 = v13;
      v13 = -2147483647;
      if (v55 == -2147483647)
        return v56;
    }
    return v13;
  }
LABEL_45:
  while ((*v18 & 2) != 0)
  {
    v18 = (_QWORD *)(v18[*(_DWORD *)(*(_QWORD *)(v11 + 192) + 9084) + v9] & 0xFFFFFFFFFFFFFFFCLL);
    if (!v18)
      goto LABEL_47;
  }
  OUTLINED_FUNCTION_19_46();
  if ((v58 & 1) == 0)
    v57 = vgetsc(v11, 1, 1, v57, v89);
  *(_QWORD *)&v90 = v57;
  OUTLINED_FUNCTION_28_37();
  if (v67 == -4)
  {
    OUTLINED_FUNCTION_11_56(v59, v60, v61, v62, v63, v64, v65, v66, (uint64_t)v86, v87, v88);
    OUTLINED_FUNCTION_24_40();
    if (v73)
      v68 = -2147483647;
    else
      v68 = v69;
  }
  else if (v67 == -3)
  {
    v68 = *(_QWORD *)OUTLINED_FUNCTION_11_56(v59, v60, v61, v62, v63, v64, v65, v66, (uint64_t)v86, v87, v88);
  }
  v70 = *(_QWORD *)(v11 + 200);
  if (v17)
  {
    v71 = v13;
    v13 = v68;
    durcalc(v11, (uint64_t *)&v92, (unint64_t *)&v90, v89, (uint64_t *)(*(_QWORD *)(v70 + 632) + 24 * v9), SHIDWORD(v87));
    v73 = v72 == -2147483647 || v72 == 0;
    if (v73)
    {
      if ((_DWORD)v87 == -1)
        return v71;
      if ((_DWORD)v87 == 1)
        return v13;
      if ((_DWORD)v87)
        return -2147483647;
      return (uint64_t)((double)(v13 + v71) * 0.5);
    }
    else
    {
      v77 = v72;
      *v86 = 1;
      v78 = OUTLINED_FUNCTION_35_34();
      durcalc(v78, v79, v80, v81, v82, SHIDWORD(v87));
      if (v83 == -2147483647)
        v84 = 0;
      else
        v84 = v83;
      return (uint64_t)((double)v71 + (double)(v13 - v71) * ((double)v84 / (double)v77));
    }
  }
  v75 = v68;
  durcalc(v11, v10, (unint64_t *)&v90, v89, (uint64_t *)(*(_QWORD *)(v70 + 648) + 24 * v9), SHIDWORD(v87));
  if (!v76)
    return v75;
  v13 = -2147483647;
  if (v76 == -2147483647)
    return v75;
  return v13;
}

uint64_t vnormalize(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(_BYTE *);
  uint64_t v7;
  int v8;
  _QWORD *v9;
  _QWORD *v10;
  _BYTE *v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _BYTE *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t *v21;
  char v23;
  int v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD *v28;
  _BYTE *v31;
  int v32;
  BOOL v33;

  v4 = *(_QWORD **)a2;
  v5 = *(char *)(a2 + 8);
  v6 = *(uint64_t (**)(_BYTE *))vstmtbl[12 * v5 + 2];
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 < 0)
  {
    v16 = &v4[v5 + 3];
LABEL_18:
    v15 = v7;
    v17 = v16;
    while (v4 != **(_QWORD ***)(a1 + 200))
    {
      v16 = (_BYTE *)(*v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (!v16 || (*v16 & 2) == 0)
      {
        OUTLINED_FUNCTION_15_49();
        if (v33)
        {
          OUTLINED_FUNCTION_25_40();
          OUTLINED_FUNCTION_24_40();
          if (v33)
            v18 = v20;
        }
        else if (v19 == -3)
        {
          v21 = (uint64_t *)OUTLINED_FUNCTION_25_40();
          v20 = -2147483647;
          v18 = *v21;
        }
        v7 += v18;
        if (v18 != v20 && v7 < 1)
          goto LABEL_18;
        break;
      }
      v17 = &v16[8 * v5 + 24];
      v4 = v16;
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_46();
    v9 = &v4[v8];
LABEL_3:
    v10 = *(_QWORD **)(*(_QWORD *)(a1 + 200) + 8);
    while (v4 != v10)
    {
      v11 = (_BYTE *)(*v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (!v11 || (*v11 & 2) == 0)
      {
        OUTLINED_FUNCTION_15_49();
        if (v33)
        {
          v13 = *(__int16 *)OUTLINED_FUNCTION_25_40();
          if (v13 == -32767)
            break;
        }
        else
        {
          if (v14 == -3)
            v13 = *(_QWORD *)OUTLINED_FUNCTION_25_40();
          if (v13 == -2147483647)
            break;
        }
        if (v7 - v13 < 0)
          break;
        v9 = v11 + 8;
        v7 -= v13;
        goto LABEL_3;
      }
      OUTLINED_FUNCTION_18_46();
      v9 = &v11[8 * v12];
      v4 = v11;
    }
    v15 = v7;
  }
  v23 = *(_BYTE *)(a2 + 24);
  if ((v23 & 4) != 0)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      if (!v15)
      {
        v4 = lmost(v5, v4);
        v23 = *(_BYTE *)(a2 + 24);
      }
      goto LABEL_50;
    }
    if ((v4[v5 + 3] & 0xFFFFFFFFFFFFFFFCLL) != 0)
    {
      v26 = *(_QWORD *)(v4[v5 + 3] & 0xFFFFFFFFFFFFFFFCLL);
      if ((v26 & 2) != 0)
        goto LABEL_50;
    }
    else
    {
      v26 = MEMORY[0];
    }
    v4 = (_QWORD *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
LABEL_50:
    v27 = v23 ^ 4;
    goto LABEL_51;
  }
  if ((*(_BYTE *)(a2 + 24) & 8) == 0)
  {
    v24 = 1;
    goto LABEL_52;
  }
  if (v15 < 1)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v4 = rmost(a1, v5, v4);
      v23 = *(_BYTE *)(a2 + 24);
    }
  }
  else
  {
    v25 = v4[*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + (int)v5] & 0xFFFFFFFFFFFFFFFCLL;
    if (!v25 || (*(_BYTE *)v25 & 2) == 0)
      v4 = (_QWORD *)(*(_QWORD *)(v25 + 8) & 0xFFFFFFFFFFFFFFFCLL);
  }
  v27 = v23 ^ 8;
LABEL_51:
  v15 = 0;
  v24 = 0;
  *(_BYTE *)(a2 + 24) = v27;
LABEL_52:
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 16) = v15;
  v28 = *(_QWORD **)(a1 + 200);
  if (v4 == (_QWORD *)*v28 && v15 < 0)
    return 1;
  if (v4 == (_QWORD *)v28[1] && v15 > 0)
    return 1;
  if (v15)
    return 2;
  if (!v24)
    return 4;
  OUTLINED_FUNCTION_15_49();
  if (!v33)
  {
    v33 = v32 != -3 || v31 == 0;
    if (!v33 && ((*v31 & 2) != 0 || !*(_QWORD *)v6(v31 + 16)))
      return 3;
    return 4;
  }
  if (!v31 || (*v31 & 2) == 0 && *(_WORD *)v6(v31 + 16))
    return 4;
  return 3;
}

void firstdefd(uint64_t a1, int a2, _BYTE *a3, int a4, int a5)
{
  char **v9;
  uint64_t (*v10)(_BYTE *);
  int v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  int v15;
  BOOL v16;
  int v17;
  uint64_t v18;
  _QWORD *v19;

  v9 = &vstmtbl[12 * a2];
  v10 = *(uint64_t (**)(_BYTE *))v9[2];
  v11 = *((unsigned __int8 *)v9 + 86);
  v12 = a2 + 3;
  v13 = a3;
  if (a3)
    goto LABEL_2;
  while (1)
  {
LABEL_3:
    OUTLINED_FUNCTION_15_49();
    if (v16)
    {
      v14 = 0;
      if (v13 && v11)
      {
        v16 = *(unsigned __int16 *)v10(v13 + 16) == 0;
LABEL_15:
        v14 = v16;
      }
    }
    else if (v15 == -3)
    {
      v14 = 0;
      if (v13)
      {
        if (v11)
        {
          v16 = *(_QWORD *)v10(v13 + 16) == 0;
          goto LABEL_15;
        }
      }
    }
    if (!v14)
      break;
    if (a5)
      v19 = v13 + 8;
    else
      v19 = v13;
    while (1)
    {
      v13 = (_BYTE *)(*v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (!v13)
        break;
LABEL_2:
      if ((*v13 & 2) == 0)
        goto LABEL_3;
      v17 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084);
      if ((*(_QWORD *)&v13[8 * v17 + 8 * a4] & 1) != 0)
        goto LABEL_24;
      v18 = v17 + a2;
      if (!a5)
        v18 = v12;
      v19 = &v13[8 * v18];
    }
  }
LABEL_24:
  OUTLINED_FUNCTION_9_58();
}

_BYTE *rmost(uint64_t a1, int a2, _BYTE *a3)
{
  _BYTE *v3;
  char **v4;
  uint64_t (*v5)(_BYTE *);
  int v6;
  _QWORD *i;
  _BYTE *v8;
  char v9;
  int v10;
  BOOL v11;
  int v12;

  v3 = a3;
  v4 = &vstmtbl[12 * a2];
  v5 = *(uint64_t (**)(_BYTE *))v4[2];
  v6 = *((unsigned __int8 *)v4 + 86);
  for (i = &a3[8 * *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + 8 * a2]; ; i = v8 + 8)
  {
    while (1)
    {
      v8 = (_BYTE *)(*i & 0xFFFFFFFFFFFFFFFCLL);
      if (!v8 || (*v8 & 2) == 0)
        break;
      OUTLINED_FUNCTION_18_46();
      i = &v8[8 * v12];
      v3 = v8;
    }
    OUTLINED_FUNCTION_15_49();
    if (v11)
    {
      v9 = 0;
      if (v8 && v6)
      {
        v11 = *(unsigned __int16 *)v5(v8 + 16) == 0;
LABEL_12:
        v9 = v11;
      }
    }
    else if (v10 == -3)
    {
      v9 = 0;
      if (v8)
      {
        if (v6)
        {
          v11 = *(_QWORD *)v5(v8 + 16) == 0;
          goto LABEL_12;
        }
      }
    }
    if (!v9)
      break;
  }
  return v3;
}

_QWORD *lmost(int a1, _QWORD *a2)
{
  char **v3;
  uint64_t (*v4)(_QWORD *);
  int v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  int v9;
  BOOL v10;

  v3 = &vstmtbl[12 * a1];
  v4 = *(uint64_t (**)(_QWORD *))v3[2];
  v5 = *((unsigned __int8 *)v3 + 86);
  v6 = a1 + 3;
LABEL_2:
  v7 = &a2[v6];
  do
  {
    v7 = (_QWORD *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7 && (*(_BYTE *)v7 & 2) != 0)
    {
      a2 = v7;
      goto LABEL_2;
    }
    OUTLINED_FUNCTION_15_49();
    if (v10)
    {
      v8 = 0;
      if (v7 && v5)
      {
        v10 = *(unsigned __int16 *)v4(v7 + 2) == 0;
LABEL_13:
        v8 = v10;
      }
    }
    else if (v9 == -3)
    {
      v8 = 0;
      if (v7)
      {
        if (v5)
        {
          v10 = *(_QWORD *)v4(v7 + 2) == 0;
          goto LABEL_13;
        }
      }
    }
  }
  while (v8);
  return a2;
}

void durcalc(uint64_t a1, uint64_t *a2, unint64_t *a3, int a4, uint64_t *a5, int a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[4];
  uint64_t v16[4];

  if (a6)
  {
    dur2(a1, a2, a3, a4, 0);
  }
  else
  {
    v16[2] = 0;
    v15[2] = 0;
    v15[3] = 1;
    v16[3] = 1;
    v10 = a5[1];
    v16[0] = *a5;
    v16[1] = 0;
    v15[0] = v10;
    v15[1] = 0;
    v11 = a5[2];
    OUTLINED_FUNCTION_40_27(a1, v15, a3);
    v13 = v12 + v11;
    OUTLINED_FUNCTION_40_27(a1, v16, (unint64_t *)a2);
    a5[2] = v13 - v14 - a3[2] + a2[2];
    *a5 = *a2;
    a5[1] = *a3;
  }
}

uint64_t vgen(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, int a5)
{
  uint64_t result;
  unint64_t *v10;
  int v11;
  uint64_t v12;
  char v13;
  int v14;
  float64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  char v21;
  int v22;
  signed __int8 *v23;
  signed __int8 v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL4 v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  unsigned __int8 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  _QWORD *v82;
  uint64_t v83;
  _BOOL4 v84;
  unsigned int v85;
  char *v86;
  int v87;
  size_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  unint64_t v98;
  char *v99;
  int v100;
  size_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  int v111;
  size_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  void *v140;
  void *v141;
  unint64_t *v142;
  uint64_t v143;
  unint64_t *v144;
  void **v145;
  char v146[21];
  uint64_t v147;

  result = 0;
  v147 = *MEMORY[0x24BDAC8D0];
  v146[0] = 0;
  if ((~*(unsigned __int8 *)(a4 + 24) & 7) != 0)
    return result;
  v10 = (unint64_t *)a2;
  v11 = *(char *)(a4 + 8);
  *(_BYTE *)(a2 + 8) = *(_BYTE *)(a4 + 8);
  *(_BYTE *)(a2 + 24) = 2;
  *(_QWORD *)(a2 + 16) = 0;
  result = (uint64_t)dynaBufNew(40);
  v145 = (void **)result;
  if (!result)
    return result;
  v12 = *(_QWORD *)(a1 + 200);
  if (!*(_QWORD *)(v12 + 616))
  {
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 616) = OUTLINED_FUNCTION_6_62();
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 624) = OUTLINED_FUNCTION_6_62();
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 640) = OUTLINED_FUNCTION_0_79();
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 632) = OUTLINED_FUNCTION_0_79();
    v43 = OUTLINED_FUNCTION_0_79();
    v12 = *(_QWORD *)(a1 + 200);
    *(_QWORD *)(v12 + 648) = v43;
    v44 = *(void **)(v12 + 616);
    if (!v44 || !*(_QWORD *)(v12 + 624) || !*(_QWORD *)(v12 + 640) || !v43)
    {
      free(v44);
      free(*(void **)(*(_QWORD *)(a1 + 200) + 624));
      free(*(void **)(*(_QWORD *)(a1 + 200) + 640));
      free(*(void **)(*(_QWORD *)(a1 + 200) + 632));
      v45 = *(void **)(*(_QWORD *)(a1 + 200) + 648);
      goto LABEL_35;
    }
  }
  v13 = 0;
  v14 = *(unsigned __int8 *)(a1 + 288);
  while (v14 > v13)
  {
    *(_QWORD *)(*(_QWORD *)(v12 + 624) + 8 * v13) = 0;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 616) + 8 * v13) = 0;
    v12 = *(_QWORD *)(a1 + 200);
    v15 = vld1q_dup_f64((const double *)v12);
    v16 = *(_QWORD *)(v12 + 648) + 24 * v13;
    *(float64x2_t *)v16 = v15;
    v17 = *(_QWORD *)(v12 + 632) + 24 * v13;
    *(float64x2_t *)v17 = v15;
    v18 = *(_QWORD *)(v12 + 640) + 24 * v13;
    *(float64x2_t *)v18 = v15;
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v17 + 16) = 0;
    *(_QWORD *)(v18 + 16) = 0;
    ++v13;
  }
  v142 = a3;
  LODWORD(v138) = a5;
  v19 = (char *)dynaBufContents(*(_QWORD *)(a4 + 16));
  v20 = 0;
  v21 = 0;
  v23 = v19 + 1;
  v22 = *v19;
  v144 = v10;
  LODWORD(v139) = v22;
  while (v22 > v21)
  {
    v24 = *v23;
    v25 = *v23;
    v26 = (_BYTE *)vgetsc(a1, 1, 1, *v10, *v23);
    if (v26)
    {
      do
      {
        v27 = (uint64_t)v26;
        v26 = (_BYTE *)(*(_QWORD *)&v26[8 * v24 + 24] & 0xFFFFFFFFFFFFFFFCLL);
      }
      while (v26 && (*v26 & 2) != 0);
    }
    else
    {
      v27 = 0;
    }
    v28 = v24;
    v29 = (_BYTE *)vgetsc(a1, 0, 1, *v142, v28);
    if (v29)
    {
      do
      {
        v37 = v29;
        v29 = (_BYTE *)(*(_QWORD *)&v29[8 * *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + 8 * (int)v28] & 0xFFFFFFFFFFFFFFFCLL);
      }
      while (v29 && (*v29 & 2) != 0);
      if (v27)
      {
LABEL_20:
        while ((*(_QWORD *)(v27 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + v11)) & 1) != 0)
        {
          v29 = (_BYTE *)VRSYNC(a1, v27, v25);
          if (v29)
          {
            v27 = (uint64_t)v29;
            if (v29 != v37)
              continue;
          }
          goto LABEL_23;
        }
        goto LABEL_85;
      }
    }
    else
    {
      v37 = 0;
      if (v27)
        goto LABEL_20;
    }
LABEL_23:
    v10 = v144;
    gcql(a1, *v144, v28, v11);
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 616) + 8 * (int)v28) = v38;
    gcqr(a1, *v144, v25, v11);
    v39 = 0;
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 624) + 8 * (int)v28) = v40;
    v41 = v23[1];
    while (v39 < v41)
    {
      if (*(unsigned __int8 *)(a4 + 9) == v20)
        v42 = v20 + 1;
      else
        v42 = v20;
      v20 = v42 + 1;
      ++v39;
    }
    v23 += v41 + 2;
    ++v21;
    v22 = (int)v139;
  }
  v29 = malloc_type_malloc(8 * v20 * (unint64_t)*(unsigned __int8 *)(a1 + 288), 0xAD43788BuLL);
  v139 = v29;
  if (!v29)
  {
LABEL_85:
    OUTLINED_FUNCTION_39_29((uint64_t)v29, v30, v31, v32, v33, v34, v35, v36, v123, v128, v129, v130, v131, v132, v133, v134, v136, v138, (uint64_t)v139,
      (uint64_t)v142,
      (uint64_t)v144,
      v145);
    return 0;
  }
  vdur(a1, (uint64_t *)v10, v142, *(char *)(a4 + 8));
  v135 = 0;
  v137 = 0;
  v54 = 0;
  v55 = 1;
  HIDWORD(v128) = (char)v138;
  v143 = v46;
  v56 = v46;
LABEL_38:
  if (v56 < 1)
  {
LABEL_88:
    OUTLINED_FUNCTION_39_29(v46, v47, v48, v49, v50, v51, v52, v53, v123, v128, v129, v130, v131, v132, v133, v135, v137, v138, (uint64_t)v139,
      v143,
      (uint64_t)v144,
      v145);
    free(v140);
    return 1;
  }
  v57 = *v144;
  if (v137 == 3 && (v54 & 1) != 0)
    v57 = (uint64_t)OUTLINED_FUNCTION_29_36();
  v58 = (char *)vnormalize(a1, (uint64_t)v144);
  v137 = v58;
  v133 = v57;
  if ((unint64_t)v58 - 3 < 2)
  {
    v66 = 1;
LABEL_45:
    LODWORD(v130) = v66;
    v67 = *(_QWORD *)a4;
    if (v56 < *(_QWORD *)a4)
      v67 = v56;
    v135 = v67;
    v145 = (void **)dynaBufReset((uint64_t)v145);
    v58 = (char *)dynaBufContents(*(_QWORD *)(a4 + 16));
    v68 = 0;
    v69 = 0;
    v71 = (unsigned __int8 *)(v58 + 1);
    v70 = *v58;
    LODWORD(v132) = v55 | ((_DWORD)v137 != 2);
    v138 = v56;
    HIDWORD(v130) = v70;
    while (1)
    {
      if (v70 <= (char)v69)
      {
LABEL_81:
        v46 = OUTLINED_FUNCTION_30_35();
        if ((_DWORD)v46)
          goto LABEL_88;
        if (*(unsigned __int8 *)(a4 + 9) == v68)
        {
          v110 = (char *)OUTLINED_FUNCTION_26_39();
          v113 = __sprintf_chk(v110, v111, v112, "%d ", v135);
          OUTLINED_FUNCTION_7_61(v113, v114, v115, v116, v117, v118, v119, v120, v127, v128, v129, v130, v131, v132, v133, v135, v137, v138, (uint64_t)v139,
            v143,
            (uint64_t)v144,
            (uint64_t *)v145);
        }
        dynaBufAddChar((uint64_t *)v145, 10, 0);
        dynaBufAddChar((uint64_t *)v145, 0, 0);
        v121 = dynaBufContents((uint64_t)v145);
        v54 = 1;
        vf_puts(a1, SHIDWORD(v128), v121, 1);
        v55 = 0;
        *((_BYTE *)v144 + 24) = 2;
        v122 = *(_QWORD *)a4;
        v144[2] += *(_QWORD *)a4;
        v56 = v138 - v122;
        goto LABEL_38;
      }
      HIDWORD(v132) = v69;
      v72 = (char)*v71;
      v73 = *(_QWORD *)(a1 + 200);
      v74 = *(_QWORD *)(*(_QWORD *)(v73 + 616) + 8 * v72);
      v75 = v71[1];
      v131 = *(_QWORD *)(*(_QWORD *)(v73 + 624) + 8 * v72);
      v76 = *v144;
      if (v137 != 2)
      {
        if (v137 != 4)
        {
          if (v137 != 3)
            goto LABEL_89;
          firstdefd(a1, v11, (_BYTE *)*v144, *v71, 0);
          v129 = v74;
          v77 = OUTLINED_FUNCTION_29_36();
          firstdefd(a1, v11, v77, v72, 1);
          v76 = v78;
        }
        OUTLINED_FUNCTION_36_34();
        if ((v80 & 1) != 0)
          break;
      }
      if ((_DWORD)v130)
      {
        while (1)
        {
          OUTLINED_FUNCTION_36_34();
          if ((v81 & 1) != 0)
            break;
          if (v76 == v133)
            goto LABEL_61;
          v76 = (uint64_t)VLSYNC(v76, v11);
        }
        *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 616) + 8 * v72) = v76;
        v76 = VRSYNC(a1, v76, v72);
        v82 = (_QWORD *)(*(_QWORD *)(a1 + 200) + 624);
        goto LABEL_60;
      }
LABEL_61:
      v84 = (v132 & 1) == 0
         && (v83 = *(_QWORD *)(a1 + 200), v74 == *(_QWORD *)(*(_QWORD *)(v83 + 616) + 8 * v72))
         && v131 == *(_QWORD *)(*(_QWORD *)(v83 + 624) + 8 * v72);
      v85 = 0;
      v71 += 2;
      do
      {
        if (v85 >= v75)
          break;
        if (*(unsigned __int8 *)(a4 + 9) == v68)
        {
          v86 = (char *)OUTLINED_FUNCTION_26_39();
          v89 = __sprintf_chk(v86, v87, v88, "%d ", v135);
          OUTLINED_FUNCTION_7_61(v89, v90, v91, v92, v93, v94, v95, v96, v124, v128, v129, v130, v131, v132, v133, v135, v137, v138, (uint64_t)v139,
            v143,
            (uint64_t)v144,
            (uint64_t *)v145);
          ++v68;
        }
        if (v56 == v143)
          v62 = LODWORD(vstmtbl[12 * *(unsigned __int8 *)(a4 + 8) + 11]);
        else
          v62 = 0;
        v97 = *v71++;
        v61 = v97;
        if (!v84 || (v58 = (char *)v139[v68], v58 == (char *)0x8000000000000000))
        {
          v58 = (char *)val_expr2(a1, (uint64_t)v144, v72, v61, v62, v137, v146, v65);
          v98 = 0x8000000000000000;
          if (!v146[0])
            v98 = (int)v58;
          v139[v68] = v98;
        }
        if ((_DWORD)v58 == -2147483647)
          goto LABEL_89;
        v125 = (int)v58;
        v99 = (char *)OUTLINED_FUNCTION_26_39();
        v102 = __sprintf_chk(v99, v100, v101, "%d ", v125);
        OUTLINED_FUNCTION_7_61(v102, v103, v104, v105, v106, v107, v108, v109, v126, v128, v129, v130, v131, v132, v133, v135, v137, v138, (uint64_t)v139,
          v143,
          (uint64_t)v144,
          (uint64_t *)v145);
        ++v68;
        ++v85;
        v56 = v138;
      }
      while (!OUTLINED_FUNCTION_30_35());
      v58 = (char *)OUTLINED_FUNCTION_30_35();
      v69 = HIDWORD(v132) + 1;
      v70 = HIDWORD(v130);
      if ((_DWORD)v58)
        goto LABEL_81;
    }
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 624) + 8 * v72) = v79;
    v82 = (_QWORD *)(*(_QWORD *)(a1 + 200) + 616);
LABEL_60:
    *(_QWORD *)(*v82 + 8 * v72) = v76;
    goto LABEL_61;
  }
  if (v58 == 2)
  {
    v66 = (uint64_t)v144[2] <= v135;
    goto LABEL_45;
  }
LABEL_89:
  OUTLINED_FUNCTION_39_29((uint64_t)v58, v59, v60, v61, v62, v63, v64, v65, v123, v128, v129, v130, v131, v132, v133, v135, v137, v138, (uint64_t)v139,
    v143,
    (uint64_t)v144,
    v145);
  v45 = v141;
LABEL_35:
  free(v45);
  return 0;
}

void visleft(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5;
  unsigned __int8 v6;
  int v7;
  unsigned __int8 v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *i;
  uint64_t j;
  int v17;
  _DWORD *v18;
  int v19;
  int v20;
  uint64_t v21;

  if (a2 != a3)
  {
    if (a2)
    {
      v5 = a3;
      if (a3)
      {
        if (!*(_DWORD *)(*(_QWORD *)(a1 + 192) + 8868) || NONSEQ(a2) || NONSEQ(v5))
        {
          v6 = 0;
          LOBYTE(v7) = *(_BYTE *)(a1 + 288);
          while (1)
          {
            v8 = v7 - 1;
            if ((((_BYTE)v7 - 1) & 0x80) != 0)
            {
              v10 = vgetsc(a1, 1, 1, v5, v6);
              LOBYTE(v7) = v6;
              goto LABEL_15;
            }
            v7 = (char)v8;
            v9 = *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + v8;
            if ((*(_QWORD *)(a2 + 8 * v9) & 1) != 0)
            {
              v6 = v7;
              if ((*(_QWORD *)(v5 + 8 * v9) & 1) != 0)
                break;
            }
          }
          v10 = (unint64_t)VLSYNC(v5, v7);
          if (!v10)
            goto LABEL_21;
LABEL_15:
          v11 = (char)v7 + 3;
          while (v10 != a2)
          {
            v12 = (_QWORD *)(*(_QWORD *)(v10 + 8 * v11) & 0xFFFFFFFFFFFFFFFCLL);
            if (!v12)
              break;
            if ((*v12 & 2) != 0)
              v10 = *(_QWORD *)(v10 + 8 * v11) & 0xFFFFFFFFFFFFFFFCLL;
            else
              v10 = *v12 & 0xFFFFFFFFFFFFFFFCLL;
          }
        }
        else
        {
          v13 = *(_QWORD *)(a1 + 200);
          if (*(_DWORD *)(v13 + 656) == spine_changed)
          {
            v14 = 0;
            for (i = (_QWORD *)(v13 + 664); ; ++i)
            {
              if (v14 == 50)
              {
                v19 = *(_DWORD *)(v13 + 660);
                if (v19 <= 48)
                  v20 = v19 + 1;
                else
                  v20 = 0;
                *(_DWORD *)(v13 + 660) = v20;
                v17 = v20;
                while (*(int *)(v13 + 4 * v17 + 1516) >= 13)
                {
                  if (v17 <= 48)
                    ++v17;
                  else
                    v17 = 0;
                  if (v17 == v20)
                  {
                    v21 = v20;
                    v17 = v20;
LABEL_43:
                    *(_DWORD *)(v13 + 660) = v17;
                    *(_QWORD *)(v13 + 8 * v21 + 664) = a2;
                    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * v21 + 1064) = v5;
                    v18 = *(_DWORD **)(a1 + 200);
                    v18[v21 + 379] = 1;
                    goto LABEL_44;
                  }
                }
                v21 = v17;
                goto LABEL_43;
              }
              if (*i == a2 && i[50] == v5)
                break;
              ++v14;
            }
            ++*(_DWORD *)(v13 + 1064 + 4 * v14 + 452);
          }
          else
          {
            for (j = 0; j != 50; ++j)
            {
              *(_QWORD *)(v13 + 8 * j + 664) = 0;
              *(_QWORD *)(*(_QWORD *)(a1 + 200) + 8 * j + 1064) = 0;
              v13 = *(_QWORD *)(a1 + 200);
              *(_DWORD *)(v13 + 4 * j + 1516) = 0;
            }
            v17 = 0;
            *(_QWORD *)(v13 + 664) = a2;
            *(_QWORD *)(*(_QWORD *)(a1 + 200) + 1064) = v5;
            v18 = *(_DWORD **)(a1 + 200);
            v18[379] = 1;
            v18[165] = 0;
            v18[164] = spine_changed;
LABEL_44:
            while (1)
            {
              v5 = *(_QWORD *)(v5 + 8) & 0xFFFFFFFFFFFFFFFCLL;
              if (!v5)
                break;
              if (v5 == a2)
              {
                *((_BYTE *)v18 + v17 + 1464) = 1;
                goto LABEL_21;
              }
            }
            *((_BYTE *)v18 + v17 + 1464) = 0;
          }
        }
      }
    }
LABEL_21:
    OUTLINED_FUNCTION_2_70();
  }
}

void visright(uint64_t a1, unint64_t a2, uint64_t a3)
{
  visleft(a1, a3, a2);
}

void vsync_tv(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    if (vnormalize(a1, a2) == 2)
      *(_QWORD *)a2 = OUTLINED_FUNCTION_14_51();
    OUTLINED_FUNCTION_10_58();
  }
  OUTLINED_FUNCTION_37_34();
}

void vtmark_tv(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  char v5;
  _QWORD *v6;
  uint64_t v7;

  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    v4 = OUTLINED_FUNCTION_1_72(a1, a2);
    if (v4 == 2)
    {
      v7 = OUTLINED_FUNCTION_14_51();
    }
    else
    {
      if (v4 != 3)
      {
LABEL_9:
        OUTLINED_FUNCTION_10_58();
        goto LABEL_10;
      }
      v5 = *(_BYTE *)(v2 + 8);
      v6 = *(_QWORD **)v2;
      if (v3)
        v7 = (uint64_t)OUTLINED_FUNCTION_13_52(v6, v5);
      else
        v7 = (uint64_t)OUTLINED_FUNCTION_12_53(v6, v5);
    }
    *(_QWORD *)v2 = v7;
    goto LABEL_9;
  }
LABEL_10:
  OUTLINED_FUNCTION_3_70();
}

void vtimept_tv(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  char v5;
  _QWORD *v6;
  void *v7;

  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    v4 = OUTLINED_FUNCTION_1_72(a1, a2);
    if (v4 != 2)
    {
      if (v4 != 4)
      {
        if (v4 != 3)
          goto LABEL_11;
        v5 = *(_BYTE *)(v2 + 8);
        v6 = *(_QWORD **)v2;
        if (v3)
          v7 = OUTLINED_FUNCTION_13_52(v6, v5);
        else
          v7 = OUTLINED_FUNCTION_12_53(v6, v5);
        *(_QWORD *)v2 = v7;
      }
      OUTLINED_FUNCTION_10_58();
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_3_70();
}

void vctxt_tv(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 24) & 1) == 0 && vnormalize(a1, a2) - 3 < 2)
    OUTLINED_FUNCTION_10_58();
  OUTLINED_FUNCTION_37_34();
}

void vmove_tv(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    vnormalize(a1, a2);
    OUTLINED_FUNCTION_10_58();
  }
  OUTLINED_FUNCTION_37_34();
}

void vtsttmark_tv(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  char v5;
  _QWORD *v6;
  void *v7;

  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
    v4 = OUTLINED_FUNCTION_1_72(a1, a2);
    if ((v4 - 1) >= 2)
    {
      if (v4 == 3)
      {
        v5 = *(_BYTE *)(v2 + 8);
        v6 = *(_QWORD **)v2;
        if (v3)
          v7 = OUTLINED_FUNCTION_13_52(v6, v5);
        else
          v7 = OUTLINED_FUNCTION_12_53(v6, v5);
        *(_QWORD *)v2 = v7;
      }
      OUTLINED_FUNCTION_10_58();
    }
  }
  OUTLINED_FUNCTION_3_70();
}

void vtstctx_tv(uint64_t a1, uint64_t a2)
{
  unint64_t *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);
  int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(uint64_t);
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    goto LABEL_34;
  v4 = OUTLINED_FUNCTION_1_72(a1, a2);
  if (v4 == 2)
  {
    v5 = v2[2];
    if (v3 == 1 && v5 >= 1)
    {
      OUTLINED_FUNCTION_34_34();
      if (v11)
      {
        v14 = *(_QWORD *)OUTLINED_FUNCTION_17_49(v12);
        v15 = -2147483647;
      }
      else
      {
        if (v13 != -4)
        {
          v14 = 0;
LABEL_25:
          v2[2] -= v14;
LABEL_26:
          v16 = *(_QWORD *)(*v2 + 8);
LABEL_33:
          *v2 = v16 & 0xFFFFFFFFFFFFFFFCLL;
          goto LABEL_34;
        }
        v14 = *(__int16 *)OUTLINED_FUNCTION_17_49(v12);
        v15 = -32767;
      }
      if (v14 == v15)
        goto LABEL_26;
      goto LABEL_25;
    }
    if (v3 || (v5 & 0x8000000000000000) == 0)
      goto LABEL_34;
    OUTLINED_FUNCTION_34_34();
    if (v11)
    {
      v9 = *(_QWORD *)OUTLINED_FUNCTION_17_49(v7);
      v10 = -2147483647;
    }
    else
    {
      if (v8 != -4)
      {
        v9 = 0;
LABEL_31:
        v2[2] += v9;
LABEL_32:
        v16 = *(_QWORD *)*v2;
        goto LABEL_33;
      }
      v9 = *(__int16 *)OUTLINED_FUNCTION_17_49(v7);
      v10 = -32767;
    }
    if (v9 == v10)
      goto LABEL_32;
    goto LABEL_31;
  }
  if (v4 == 4 || v4 == 3)
    OUTLINED_FUNCTION_10_58();
LABEL_34:
  OUTLINED_FUNCTION_3_70();
}

void vcomp_pta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE **v3;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  int v15;
  char v16;
  BOOL v17;

  v3 = (_BYTE **)a3;
  if ((*(_BYTE *)(a2 + 24) & 1) != 0 && (*(_BYTE *)(a3 + 24) & 1) != 0)
  {
    v17 = *(_QWORD *)a2 == *(_QWORD *)a3;
LABEL_23:
    v16 = !v17;
  }
  else
  {
    if ((*(_BYTE *)(a2 + 24) & 2) == 0)
    {
      v6 = (unint64_t *)a2;
LABEL_7:
      v7 = *v6;
      switch(OUTLINED_FUNCTION_32_35())
      {
        case 1u:
        case 2u:
          goto LABEL_20;
        case 3u:
          v8 = lmost(*((char *)v3 + 8), *v3);
          v9 = rmost(a1, *((char *)v3 + 8), *v3);
          v10 = a1 + 192;
          v11 = *((unsigned __int8 *)v3 + 8);
          v12 = *(_QWORD *)(v7 + 8 * (*(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + (int)v11));
          v13 = v7;
          if ((v12 & 1) == 0)
          {
            v7 = *(_QWORD *)(v7 + 8 * v11 + 24) & 0xFFFFFFFFFFFFFFFCLL;
            v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
          }
          if ((_QWORD *)v7 != v8)
          {
            visleft(a1, (uint64_t)v8, v7);
            if (!v14)
              goto LABEL_21;
          }
          if ((_BYTE *)v13 != v9)
          {
            visleft(a1, v13, (unint64_t)v9);
            if (!v15)
              goto LABEL_21;
          }
          v16 = 0;
          goto LABEL_27;
        case 4u:
          v17 = *v3 == (_BYTE *)v7;
          goto LABEL_23;
        default:
          goto LABEL_28;
      }
    }
    if ((*(_BYTE *)(a3 + 24) & 2) == 0)
    {
      v6 = (unint64_t *)a3;
      v3 = (_BYTE **)a2;
      goto LABEL_7;
    }
    vnormalize(a1, a2);
    OUTLINED_FUNCTION_32_35();
    if (*(unsigned __int8 *)(a2 + 8) != *((unsigned __int8 *)v3 + 8)
      || *(_BYTE **)a2 != *v3
      || *(_BYTE **)(a2 + 16) != v3[2])
    {
LABEL_20:
      v10 = a1 + 192;
LABEL_21:
      v16 = 1;
      goto LABEL_27;
    }
    v16 = 0;
  }
  v10 = a1 + 192;
LABEL_27:
  *(_BYTE *)(*(_QWORD *)v10 + 8120) = v16;
LABEL_28:
  OUTLINED_FUNCTION_2_70();
}

void vrange_l()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_27_37();
  vtmark_tv(v5, v6);
  OUTLINED_FUNCTION_23_41();
  if ((_DWORD)v7)
  {
    if (*v2 != **(_QWORD **)(v1 + 200))
    {
      v9 = OUTLINED_FUNCTION_20_45(v7, v8, *(_QWORD *)(*v2 + 8 * v4 + 24) & 0xFFFFFFFFFFFFFFFCLL, *v2);
      *(_QWORD *)v0 = v9;
      if (v9)
      {
        if (v3)
          dupsync(v1, v9, (_BYTE *)*v2, 1);
        *(_BYTE *)(v0 + 24) = 1;
      }
    }
  }
  OUTLINED_FUNCTION_2_70();
}

void dupsync(uint64_t a1, uint64_t a2, _BYTE *a3, int a4)
{
  unint64_t v7;
  char v8;
  int v9;
  uint64_t v10;
  int v11;

  v7 = 0;
  if (a4)
  {
    while (v7 < *(unsigned __int8 *)(a1 + 288))
    {
      OUTLINED_FUNCTION_41_27();
      if ((v8 & 1) != 0)
      {
        vproject(a1, a2, *(_QWORD *)&a3[8 * v7 + 24] & 0xFFFFFFFFFFFFFFFCLL, a3, v7);
        if (!v9)
          break;
      }
      ++v7;
    }
  }
  else
  {
    while (v7 < *(unsigned __int8 *)(a1 + 288))
    {
      OUTLINED_FUNCTION_41_27();
      if ((v10 & 1) != 0)
      {
        vproject(a1, a2, (uint64_t)a3, (_BYTE *)(v10 & 0xFFFFFFFFFFFFFFFCLL), v7);
        if (!v11)
          break;
      }
      LODWORD(v7) = v7 + 1;
    }
  }
}

void vrange_r()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_27_37();
  vtmark_tv(v5, v6);
  OUTLINED_FUNCTION_23_41();
  if ((_DWORD)v7)
  {
    if (*v2 != *(_QWORD *)(*(_QWORD *)(v1 + 200) + 8))
    {
      v9 = OUTLINED_FUNCTION_20_45(v7, v8, *v2, *(_QWORD *)(*v2 + 8 * (*(_DWORD *)(*(_QWORD *)(v1 + 192) + 9084) + v4)) & 0xFFFFFFFFFFFFFFFCLL);
      *(_QWORD *)v0 = v9;
      if (v9)
      {
        if (v3)
          dupsync(v1, v9, (_BYTE *)*v2, 0);
        *(_BYTE *)(v0 + 24) = 1;
      }
    }
  }
  OUTLINED_FUNCTION_2_70();
}

void vprt_range(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  int v7;

  vtimept_tv(a1, a2);
  if (v6)
  {
    vtimept_tv(a1, a3);
    if (v7)
    {
      if ((*(_BYTE *)(a2 + 24) & 2) != 0 && *(uint64_t *)(a2 + 16) >= 1)
        *(_QWORD *)a2 = VRSYNC(a1, *(_QWORD *)a2, *(char *)(a2 + 8));
      if ((*(_BYTE *)(a3 + 24) & 2) != 0 && (*(_QWORD *)(a3 + 16) & 0x8000000000000000) != 0)
        *(_QWORD *)a3 = VLSYNC(*(_QWORD *)a3, *(char *)(a3 + 8));
    }
  }
  OUTLINED_FUNCTION_3_70();
}

uint64_t ctxt_clstr(uint64_t a1, uint64_t a2, int a3)
{
  char **v5;
  uint64_t (*v6)(_BYTE *);
  _BYTE *v7;
  unint64_t v8;
  int v9;
  _QWORD *v10;

  v5 = &vstmtbl[12 * a3];
  v6 = *(uint64_t (**)(_BYTE *))v5[2];
  v7 = (_BYTE *)OUTLINED_FUNCTION_21_44(a1, 1);
  v8 = OUTLINED_FUNCTION_21_44(a1, 0);
  while (1)
  {
    if (v7 == (_BYTE *)v8)
      return 1;
    if (v7 && (*v7 & 2) != 0)
    {
      v10 = &v7[8 * *(_DWORD *)(*(_QWORD *)(a1 + 192) + 9084) + 8 * a3];
      goto LABEL_12;
    }
    v9 = *((__int16 *)v5[1] + 15);
    if (v9 == -4)
    {
      if (*(_WORD *)v6(v7 + 16))
        return 0;
      goto LABEL_11;
    }
    if (v9 == -3 && *(_QWORD *)v6(v7 + 16))
      return 0;
LABEL_11:
    v10 = v7 + 8;
LABEL_12:
    v7 = (_BYTE *)(*v10 & 0xFFFFFFFFFFFFFFFCLL);
  }
}

void *OUTLINED_FUNCTION_0_79()
{
  uint64_t v0;

  return malloc_type_malloc(24 * *(unsigned __int8 *)(v0 + 288), 0x1080040CC6EE3FDuLL);
}

uint64_t OUTLINED_FUNCTION_1_72(uint64_t a1, uint64_t a2)
{
  return vnormalize(a1, a2);
}

uint64_t OUTLINED_FUNCTION_4_66(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t))(*a11 + 8 * v12))(v11 + 16);
}

void OUTLINED_FUNCTION_5_63(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  gcql(v3, a2, v4, v2);
}

void *OUTLINED_FUNCTION_6_62()
{
  uint64_t v0;

  return malloc_type_malloc(8 * *(unsigned __int8 *)(v0 + 288), 0x80040B8603338uLL);
}

void OUTLINED_FUNCTION_7_61(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t *a22)
{
  uint64_t v22;

  dynaBufAddString(a22, (char *)(v22 - 108), 0);
}

uint64_t OUTLINED_FUNCTION_8_59(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t))(*a11 + 8 * v12))(v11 + 16);
}

void OUTLINED_FUNCTION_10_58()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 24) = 1;
}

uint64_t OUTLINED_FUNCTION_11_56(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v11;
  uint64_t v12;

  return (*(uint64_t (**)(uint64_t))(*a11 + 8 * v12))(v11 + 16);
}

_BYTE *OUTLINED_FUNCTION_12_53@<X0>(_BYTE *a1@<X2>, char a2@<W8>)
{
  uint64_t v2;

  return rmost(v2, a2, a1);
}

_QWORD *OUTLINED_FUNCTION_13_52@<X0>(_QWORD *a1@<X2>, char a2@<W8>)
{
  return lmost(a2, a1);
}

uint64_t OUTLINED_FUNCTION_14_51()
{
  uint64_t v0;
  uint64_t *v1;

  return vsplit_time(v1, *(unsigned __int8 *)(v0 + 8), *(_QWORD *)v0, *(_QWORD *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_16_49()
{
  uint64_t v0;
  uint64_t (***v1)(uint64_t);

  return (**v1)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_17_49@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_20_45(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  unsigned __int8 v5;

  return vins_sync(v4, v5, a3, a4);
}

unint64_t OUTLINED_FUNCTION_21_44(uint64_t a1, int a2)
{
  unint64_t v2;
  unsigned int v3;

  return vgetsc(a1, a2, 1, v2, v3);
}

void OUTLINED_FUNCTION_22_42(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  gcqr(a1, a2, v3, v2);
}

void OUTLINED_FUNCTION_23_41()
{
  uint64_t v0;
  uint64_t *v1;
  unsigned __int8 v2;

  vdef_proj(v0, *v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_40()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_26_39()
{
  uint64_t v0;

  return v0 - 108;
}

_QWORD *OUTLINED_FUNCTION_29_36()
{
  int v0;
  _QWORD *v1;

  return lmost(v0, v1);
}

uint64_t OUTLINED_FUNCTION_30_35()
{
  uint64_t v0;

  return checkInterrupt(v0);
}

void OUTLINED_FUNCTION_31_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  vdef_proj(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_32_35()
{
  uint64_t v0;
  uint64_t v1;

  return vnormalize(v0, v1);
}

uint64_t OUTLINED_FUNCTION_33_35(uint64_t a1, unsigned int a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;

  return vins_sync(v4, a2, a3, a4);
}

void OUTLINED_FUNCTION_34_34()
{
  uint64_t v0;
  unint64_t *v1;

  *v1 = v0 & 0xFFFFFFFFFFFFFFFCLL;
}

uint64_t OUTLINED_FUNCTION_35_34()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_39_29(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void **a22)
{
  return dynaBufDelete(a22);
}

void OUTLINED_FUNCTION_40_27(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  int v3;

  dur2(a1, a2, a3, v3, 1);
}

uint64_t OUTLINED_FUNCTION_44_27(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  return ctxt_clstr(v3, a2, v2);
}

BOOL initializeDeltaHeap(uint64_t a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = OUTLINED_FUNCTION_0_80(a1, a2);
  v5 = 0;
  v6 = *(_QWORD *)(v3 + 200);
  *(_QWORD *)(v6 + 1736) = v4;
  *(_QWORD *)(v6 + 1752) = v4;
  *(_DWORD *)(v6 + 1776) = v2;
  v7 = v6 + 1800;
  while (v5 != 400)
  {
    *(_BYTE *)(v7 + v5) = 1;
    v5 += 40;
  }
  return v4 != 0;
}

_DWORD *allocDynaSegment(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v8;
  void *v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 200);
  v3 = *(_DWORD **)(v2 + 2192);
  if (v3)
  {
    v3[4] = 0;
    v4 = *((_QWORD *)v3 + 4);
    *(_QWORD *)(v2 + 2192) = *((_QWORD *)v3 + 5);
    --*(_DWORD *)(v2 + 2184);
    v5 = v4 & 3;
    if ((v4 & 7) == 0)
      v5 = v4 & 3 | 4;
    *((_QWORD *)v3 + 5) = 0;
    *(_QWORD *)v3 = 0;
    *((_QWORD *)v3 + 1) = v5;
  }
  else
  {
    v8 = malloc_type_malloc(0x30uLL, 0x10A0040B1233896uLL);
    v3 = v8;
    if (v8)
    {
      v8[5] = 0;
      *v8 = 0;
      *((_DWORD *)v8 + 4) = 0;
      v9 = malloc_type_malloc(a2, 0xE65396F9uLL);
      *((_QWORD *)v3 + 3) = v9;
      if (v9)
      {
        v10 = (uint64_t)v9 + a2 - 1;
        *((_QWORD *)v3 + 4) = v10;
        *((_QWORD *)v3 + 1) = v10 & 3;
        if ((v10 & 7) == 0)
          *((_QWORD *)v3 + 1) = v10 & 3 | 4;
      }
      else
      {
        free(v3);
        return 0;
      }
    }
  }
  return v3;
}

_QWORD *allocDeltaHeapObject(uint64_t a1, int a2)
{
  uint64_t v2;
  _QWORD *v3;
  signed int v4;
  uint64_t v5;
  uint64_t v6;
  signed int v7;
  _QWORD *result;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 200);
  v3 = *(_QWORD **)(v2 + 1752);
  if (a2 + 8 < 1)
  {
    LODWORD(v6) = *((_DWORD *)v3 + 2);
  }
  else
  {
    v4 = (a2 + 15) & 0xFFFFFFF8;
    v5 = v3[1];
    v6 = v5 + v4;
    v3[1] = v6;
    v7 = *(_DWORD *)(v2 + 1776);
    if (v7 <= (int)v6)
    {
      v3[1] = v5;
      result = allocDynaSegment(a1, v7);
      v3[5] = result;
      if (!result)
        return result;
      v6 = result[1] + v4;
      *result = v3;
      result[1] = v6;
      v2 = *(_QWORD *)(a1 + 200);
      if (*(_DWORD *)(v2 + 1776) < (int)v6)
        return 0;
      v3 = result;
    }
  }
  v10 = v3[4];
  if (!v10)
    return 0;
  v11 = (_QWORD *)(v10 - v6);
  v12 = *(_QWORD *)(v2 + 1752);
  v13 = *(_QWORD *)(v12 + 40);
  if (v13)
  {
    *(_QWORD *)(v2 + 1752) = v13;
    v12 = v13;
  }
  *v11 = v12;
  result = v11 + 1;
  ++*(_DWORD *)(v12 + 16);
  return result;
}

void freeDeltaHeapObject(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(uint64_t **)(a2 - 8);
  v3 = *((_DWORD *)v2 + 4) - 1;
  *((_DWORD *)v2 + 4) = v3;
  if (v3)
    goto LABEL_2;
  v4 = *(_QWORD *)(a1 + 200);
  if (v2 == *(uint64_t **)(v4 + 1752))
  {
    v2[1] = v2[4] & 3;
LABEL_2:
    OUTLINED_FUNCTION_1_73();
    return;
  }
  v5 = *(_DWORD *)(v4 + 2184);
  v6 = *v2;
  *(_QWORD *)(*v2 + 40) = v2[5];
  v7 = (_QWORD *)v2[5];
  if (v5 <= 19)
  {
    if (v7)
      *v7 = v6;
    v2[5] = *(_QWORD *)(v4 + 2192);
    *(_QWORD *)(v4 + 2192) = v2;
    *(_DWORD *)(v4 + 2184) = v5 + 1;
    goto LABEL_2;
  }
  if (v7)
    *v7 = v6;
  free((void *)v2[3]);
  free(v2);
}

BOOL resetDeltaHeap()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_71();
  freeDynaMem(*(_QWORD *)(v1 + 1736));
  return initializeDeltaHeap(v0, *(_DWORD *)(*(_QWORD *)(v0 + 200) + 1776));
}

void freeDynaMem(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1;
  if (a1)
  {
    do
    {
      v2 = *(_QWORD *)(v1 + 40);
      free(*(void **)(v1 + 24));
      free((void *)v1);
      v1 = v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_1_73();
}

void freeDeltaHeapTo(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  for (i = 0; i != 10; ++i)
  {
    v7 = *(_QWORD *)(a1 + 200);
    if (!*(_BYTE *)(v7 + 40 * i + 1800) && *(_QWORD *)(v7 + 40 * i + 1784) == a2)
    {
      while (1)
      {
        v10 = *(_QWORD *)(v7 + 1752);
        if (!v10 || v10 == *(_QWORD *)(v7 + 40 * i + 1792))
          break;
        free(*(void **)(v10 + 24));
        v8 = *(_QWORD *)(a1 + 200);
        v9 = **(_QWORD **)(v8 + 1752);
        *(_QWORD *)(v8 + 1752) = v9;
        free(*(void **)(v9 + 40));
        v7 = *(_QWORD *)(a1 + 200);
      }
      if (v10)
      {
        v12 = v7 + 40 * i;
        *(_QWORD *)(v10 + 8) = *(_QWORD *)(v12 + 1808);
        *(_DWORD *)(v10 + 16) = *(_DWORD *)(v12 + 1816);
        if (a3)
          *(_BYTE *)(v7 + 40 * i + 1800) = 1;
        return;
      }
    }
  }
}

uint64_t recordDeltaHeapPos(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = 0;
  v2 = *(_QWORD *)(a1 + 200);
  while (1)
  {
    v3 = v1 + 40;
    if (v1 == 400)
      break;
    v4 = *(unsigned __int8 *)(v2 + v1 + 1800);
    v1 += 40;
    if (v4)
    {
      v5 = v2 + v3;
      *(_BYTE *)(v5 + 1760) = 0;
      v6 = *(_QWORD *)(v2 + 1752);
      v7 = *(_QWORD *)(v6 + 8);
      *(_QWORD *)(v5 + 1744) = *(_QWORD *)(v6 + 32) - v7;
      *(_QWORD *)(v5 + 1768) = v7;
      *(_DWORD *)(v5 + 1776) = *(_DWORD *)(v6 + 16);
      *(_QWORD *)(v5 + 1752) = v6;
      return 1;
    }
  }
  return 0;
}

uint64_t getDeltaHeapSegNumber(uint64_t a1, uint64_t a2, unsigned int a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *i;
  uint64_t v7;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;

  v3 = 0;
  v4 = *(_QWORD *)(a2 - 8);
  v5 = *(_QWORD *)(a1 + 200);
  for (i = (uint64_t *)(v5 + 1736); ; i = (uint64_t *)(v7 + 40))
  {
    v7 = *i;
    if (!v7 || v7 == v4)
      break;
    ++v3;
  }
  if (v7)
    return ((*(_QWORD *)(v4 + 32) - a2) / (int)a3) + *(_DWORD *)(v5 + 1776) / a3 * v3;
  v10 = (_QWORD *)(v5 + 2192);
  do
  {
    v11 = *v10;
    v10 = (_QWORD *)(*v10 + 40);
    if (v11)
      v12 = v11 == v4;
    else
      v12 = 1;
  }
  while (!v12);
  if (v11)
    return 4294967294;
  else
    return 0xFFFFFFFFLL;
}

BOOL initializeDeltaStack(uint64_t a1, unsigned int a2)
{
  int v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v4 = OUTLINED_FUNCTION_0_80(a1, a2);
  v5 = *(_QWORD *)(v3 + 200);
  *(_QWORD *)(v5 + 1744) = v4;
  v6 = *((_QWORD *)v4 + 1);
  v7 = *((_QWORD *)v4 + 4) - v6;
  *(_DWORD *)(v5 + 1780) = v2;
  v8 = *(int *)(v5 + 296);
  v9 = (_BYTE *)(v7 - v8);
  *(_QWORD *)(v5 + 1720) = v9;
  *(_DWORD *)(v5 + 1728) = v2 - v6 - v8;
  *v9 = 8;
  *(_QWORD *)(v5 + 1760) = v9;
  return v4 != 0;
}

BOOL resetDeltaStack()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_71();
  freeDynaMem(*(_QWORD *)(v1 + 1744));
  v2 = *(_QWORD *)(v0 + 200);
  *(_QWORD *)(v2 + 1744) = 0;
  return initializeDeltaStack(v0, *(_DWORD *)(v2 + 1780));
}

uint64_t peekDeltaStackStart()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_71();
  *(_QWORD *)(v1 + 1768) = *(_QWORD *)(v1 + 1720);
  peekDeltaStackNext(v2);
  return *(_QWORD *)(*(_QWORD *)(v0 + 200) + 1768);
}

uint64_t peekDeltaStackNext(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int v3;

  v1 = *(_QWORD *)(a1 + 200);
  result = *(_QWORD *)(v1 + 1768);
  switch(*(_BYTE *)result)
  {
    case 0:
    case 3:
      v3 = *(_DWORD *)(v1 + 288);
      break;
    case 1:
      v3 = *(_DWORD *)(v1 + 284);
      break;
    case 2:
      v3 = *(_DWORD *)(v1 + 280) + ((*(_DWORD *)(result + 16) - 1) | 3) + 1;
      break;
    case 4:
    case 6:
      v3 = *(_DWORD *)(v1 + 296);
      break;
    case 5:
      v3 = *(_DWORD *)(v1 + 292);
      break;
    case 7:
      v3 = *(_DWORD *)(v1 + 276);
      break;
    case 8:
      v3 = 2;
      break;
    default:
      v3 = 0;
      break;
  }
  *(_QWORD *)(v1 + 1768) = result + v3;
  return result;
}

uint64_t popDeltaStackTop(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  int v3;

  v1 = *(_QWORD *)(a1 + 200);
  result = *(_QWORD *)(v1 + 1720);
  switch(*(_BYTE *)result)
  {
    case 0:
    case 3:
      v3 = *(_DWORD *)(v1 + 288);
      break;
    case 1:
      v3 = *(_DWORD *)(v1 + 284);
      break;
    case 2:
      v3 = *(_DWORD *)(v1 + 280) + ((*(_DWORD *)(result + 16) - 1) | 3) + 1;
      break;
    case 4:
    case 6:
      v3 = *(_DWORD *)(v1 + 296);
      break;
    case 5:
      v3 = *(_DWORD *)(v1 + 292);
      break;
    case 7:
      v3 = *(_DWORD *)(v1 + 276);
      break;
    default:
      v3 = 0;
      break;
  }
  *(_QWORD *)(v1 + 1720) = result + v3;
  *(_DWORD *)(v1 + 1728) += v3;
  return result;
}

void deltaHeapCleanup()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2_71();
  v2 = v1[274];
  if (v2)
  {
    freeDynaMem(v2);
    v1 = *(_QWORD **)(v0 + 200);
  }
  v3 = v1[217];
  if (v3)
  {
    freeDynaMem(v3);
    v1 = *(_QWORD **)(v0 + 200);
  }
  v4 = v1[218];
  if (v4)
  {
    freeDynaMem(v4);
    v1 = *(_QWORD **)(v0 + 200);
  }
  v1[274] = 0;
  v1[217] = 0;
  v1[219] = 0;
  v1[218] = 0;
  OUTLINED_FUNCTION_1_73();
}

_DWORD *OUTLINED_FUNCTION_0_80(uint64_t a1, unsigned int a2)
{
  return allocDynaSegment(a1, a2);
}

uint64_t vmeminit(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 200);
  *(_DWORD *)(v2 + 276) = ((*(unsigned __int8 *)(a1 + 232) - 1) | 3) + 1;
  *(_OWORD *)(v2 + 280) = xmmword_2486A3D90;
  *(_DWORD *)(v2 + 296) = 4;
  result = initializeDeltaStack(a1, 0xFA00u);
  if ((_DWORD)result)
  {
    result = initializeDeltaHeap(a1, 0x2000u);
    if ((_DWORD)result)
    {
      v4 = *(_QWORD *)(a1 + 200);
      *(_QWORD *)(*(_QWORD *)(a1 + 192) + 8112) = *(_QWORD *)(v4 + 1720);
      *(_DWORD *)(v4 + 252) = 0;
      *(_DWORD *)(v4 + 256) = 0;
      result = (uint64_t)malloc_type_malloc(0x50uLL, 0x100004090896170uLL);
      v5 = *(_QWORD *)(a1 + 200);
      *(_QWORD *)(v5 + 264) = result;
      if (result)
      {
        *(_BYTE *)(v5 + 272) = -1;
        viasizes();
        return 1;
      }
    }
  }
  return result;
}

void *vpush_var(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;

  v2 = *(__int16 *)(a2 + 8);
  v3 = (char *)&unk_2486A3DB8 + 4 * v2 + 24;
  if (v2 <= 0xFFFFFFF9)
    v3 = (char *)&vstmtbl[12 * *(__int16 *)(a2 + 8) + 8] + 4;
  v4 = *(int *)v3;
  v5 = *(_QWORD *)(a1 + 200);
  v6 = *(int *)(v5 + 280);
  v7 = ((v4 - 1) | 3) + 1;
  v8 = *(_QWORD *)(v5 + 1720) - (v7 + v6);
  *(_QWORD *)(v5 + 1720) = v8;
  *(_DWORD *)(v5 + 1728) -= v7 + v6;
  *(_BYTE *)v8 = 2;
  *(_WORD *)(v8 + 2) = v2;
  *(_DWORD *)(v8 + 16) = v4;
  v9 = *(const void **)a2;
  *(_QWORD *)(v8 + 8) = v9;
  return memcpy((void *)(v8 + v6), v9, (int)v7);
}

void vadd(uint64_t a1, double **a2, double **a3)
{
  int v3;
  int v4;
  int v5;
  double *v6;
  double v7;
  double v8;
  int v9;

  v3 = *((__int16 *)a2 + 4);
  switch(v3)
  {
    case -5:
      v5 = *((__int16 *)a3 + 4);
      switch(v5)
      {
        case -5:
          v6 = *a2;
          v7 = **a2;
          v8 = **a3;
          break;
        case -4:
          v6 = *a2;
          v7 = **a2;
          v8 = (double)*(__int16 *)*a3;
          break;
        case -3:
          v6 = *a2;
          v7 = **a2;
          v8 = (double)*(uint64_t *)*a3;
          break;
        default:
          return;
      }
      *v6 = v7 + v8;
      break;
    case -4:
      v9 = *((__int16 *)a3 + 4);
      if (v9 == -5 || v9 == -4 || v9 == -3)
        OUTLINED_FUNCTION_1_74(*a2);
      break;
    case -3:
      v4 = *((__int16 *)a3 + 4);
      if (v4 == -5 || v4 == -4 || v4 == -3)
        OUTLINED_FUNCTION_2_72(*a2);
      break;
  }
}

void vsub(uint64_t a1, double **a2, double **a3)
{
  int v3;
  int v4;
  int v5;
  double *v6;
  double v7;
  double v8;
  int v9;

  v3 = *((__int16 *)a2 + 4);
  switch(v3)
  {
    case -5:
      v5 = *((__int16 *)a3 + 4);
      switch(v5)
      {
        case -5:
          v6 = *a2;
          v7 = **a2;
          v8 = **a3;
          break;
        case -4:
          v6 = *a2;
          v7 = **a2;
          v8 = (double)*(__int16 *)*a3;
          break;
        case -3:
          v6 = *a2;
          v7 = **a2;
          v8 = (double)*(uint64_t *)*a3;
          break;
        default:
          return;
      }
      *v6 = v7 - v8;
      break;
    case -4:
      v9 = *((__int16 *)a3 + 4);
      if (v9 == -5 || v9 == -4 || v9 == -3)
        OUTLINED_FUNCTION_1_74(*a2);
      break;
    case -3:
      v4 = *((__int16 *)a3 + 4);
      if (v4 == -5 || v4 == -4 || v4 == -3)
        OUTLINED_FUNCTION_2_72(*a2);
      break;
  }
}

void vmult(uint64_t a1, double **a2, double **a3)
{
  int v3;
  int v4;
  int v5;
  double *v6;
  double v7;
  double v8;
  int v9;

  v3 = *((__int16 *)a2 + 4);
  switch(v3)
  {
    case -5:
      v5 = *((__int16 *)a3 + 4);
      switch(v5)
      {
        case -5:
          v6 = *a2;
          v7 = **a2;
          v8 = **a3;
          break;
        case -4:
          v6 = *a2;
          v7 = **a2;
          v8 = (double)*(__int16 *)*a3;
          break;
        case -3:
          v6 = *a2;
          v7 = **a2;
          v8 = (double)*(uint64_t *)*a3;
          break;
        default:
          return;
      }
      *v6 = v7 * v8;
      break;
    case -4:
      v9 = *((__int16 *)a3 + 4);
      if (v9 == -5 || v9 == -4 || v9 == -3)
        OUTLINED_FUNCTION_1_74(*a2);
      break;
    case -3:
      v4 = *((__int16 *)a3 + 4);
      if (v4 == -5 || v4 == -4 || v4 == -3)
        OUTLINED_FUNCTION_2_72(*a2);
      break;
  }
}

void vdiv(uint64_t a1, double **a2, uint64_t **a3)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  double *v7;
  double v8;
  double v9;
  int v10;

  v3 = *((__int16 *)a2 + 4);
  switch(v3)
  {
    case -5:
      v6 = *((__int16 *)a3 + 4);
      if (v6 != -5)
      {
        if (v6 == -4)
        {
          v7 = *a2;
          v8 = **a2;
          v9 = (double)*(__int16 *)*a3;
        }
        else
        {
          if (v6 != -3)
            return;
          v7 = *a2;
          v8 = **a2;
          v9 = (double)**a3;
        }
        *v7 = v8 / v9;
        return;
      }
      **a2 = **a2 / *(double *)*a3;
      break;
    case -4:
      v10 = *((__int16 *)a3 + 4);
      switch(v10)
      {
        case -5:
          OUTLINED_FUNCTION_1_74(*a2);
          break;
        case -4:
          *(__int16 *)*a2 /= *(__int16 *)*a3;
          break;
        case -3:
          *(_WORD *)*a2 = *(__int16 *)*a2 / **a3;
          break;
      }
      break;
    case -3:
      v4 = *((__int16 *)a3 + 4);
      switch(v4)
      {
        case -5:
          OUTLINED_FUNCTION_2_72(*a2);
          return;
        case -4:
          v5 = *(__int16 *)*a3;
          goto LABEL_18;
        case -3:
          v5 = **a3;
LABEL_18:
          *(uint64_t *)*a2 /= v5;
          break;
      }
      break;
  }
}

BOOL vnegative(uint64_t a1, double **a2)
{
  int v2;

  v2 = *((__int16 *)a2 + 4);
  switch(v2)
  {
    case -5:
      return **a2 < 0.0;
    case -4:
      return *(__int16 *)*a2 < 0;
    case -3:
      return *(_QWORD *)*a2 >> 63;
  }
  return 0;
}

void vnegate(uint64_t a1, _QWORD **a2)
{
  int v2;

  v2 = *((__int16 *)a2 + 4);
  switch(v2)
  {
    case -5:
      *(double *)*a2 = -*(double *)*a2;
      break;
    case -4:
      OUTLINED_FUNCTION_1_74(*a2);
      break;
    case -3:
      OUTLINED_FUNCTION_2_72(*a2);
      break;
  }
}

void vassign(uint64_t a1, void **a2, const void **a3)
{
  int v3;
  uint64_t v4;
  double v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  double v11;
  double v12;

  switch(*((_WORD *)a2 + 4))
  {
    case 0xFFFA:
      goto LABEL_26;
    case 0xFFFB:
      v3 = *((__int16 *)a3 + 4);
      if (v3 == -5)
      {
        v5 = *(double *)*a3;
        goto LABEL_29;
      }
      if (v3 == -4)
      {
        v10 = *(unsigned __int16 *)*a3;
        if (v10 == 32769)
          goto LABEL_26;
        v5 = (double)(__int16)v10;
        goto LABEL_29;
      }
      if (v3 != -3)
        return;
      v4 = *(_QWORD *)*a3;
      if (v4 != -2147483647)
      {
        v5 = (double)v4;
LABEL_29:
        *(double *)*a2 = v5;
        return;
      }
LABEL_26:
      OUTLINED_FUNCTION_2_72(*a2);
      return;
    case 0xFFFC:
      v6 = *((__int16 *)a3 + 4);
      switch(v6)
      {
        case -5:
          v11 = *(double *)*a3;
          if (v11 == 2.22507386e-308)
          {
            OUTLINED_FUNCTION_1_74(*a2);
            return;
          }
          v7 = (int)v11;
LABEL_13:
          *(_WORD *)*a2 = v7;
          return;
        case -4:
LABEL_12:
          LOWORD(v7) = *(_WORD *)*a3;
          goto LABEL_13;
        case -3:
          *(_WORD *)*a2 = *(_QWORD *)*a3;
          break;
      }
      return;
    case 0xFFFD:
      v8 = *((__int16 *)a3 + 4);
      switch(v8)
      {
        case -5:
          v12 = *(double *)*a3;
          if (v12 == 2.22507386e-308)
            goto LABEL_26;
          v9 = (uint64_t)v12;
          break;
        case -4:
          v9 = *(__int16 *)*a3;
          break;
        case -3:
          v9 = *(_QWORD *)*a3;
          break;
        default:
          return;
      }
      *(_QWORD *)*a2 = v9;
      return;
    case 0xFFFE:
      goto LABEL_12;
    case 0xFFFF:
      *(_BYTE *)*a2 = *(_BYTE *)*a3;
      return;
    default:
      memcpy(*a2, *a3, SHIDWORD(vstmtbl[12 * *((__int16 *)a2 + 4) + 8]));
      return;
  }
}

void vcompare(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  double v12;
  uint64_t v13;
  double v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;

  switch(*((_WORD *)a2 + 4))
  {
    case 0xFFFA:
      v5 = absoluteSyncNumPtr(**a2);
      v6 = absoluteSyncNumPtr(**a3);
      v7 = (_BYTE *)(*(_QWORD *)(a1 + 192) + 8120);
      if (v5 == v6)
        goto LABEL_32;
      goto LABEL_3;
    case 0xFFFB:
      v11 = *((__int16 *)a3 + 4);
      if (v11 == -5)
      {
        v12 = OUTLINED_FUNCTION_6_63(a1, (uint64_t)a2);
      }
      else
      {
        if (v11 != -3)
          return;
        v12 = OUTLINED_FUNCTION_6_63(a1, (uint64_t)a2);
        v14 = (double)v13;
      }
      if (v12 < v14)
        goto LABEL_29;
      v7 = (_BYTE *)(*(_QWORD *)(a1 + 192) + 8120);
      if (v12 == v14)
LABEL_32:
        *v7 = 0;
      else
LABEL_3:
        *v7 = 1;
      return;
    case 0xFFFC:
      v15 = *((__int16 *)a3 + 4);
      if (v15 == -4)
        goto LABEL_17;
      if (v15 != -3)
        return;
      if (**a3 > *(__int16 *)*a2)
        goto LABEL_29;
      OUTLINED_FUNCTION_3_71();
      if (v18 != v17)
        goto LABEL_26;
      goto LABEL_21;
    case 0xFFFD:
      v8 = *((__int16 *)a3 + 4);
      if (v8 == -4)
      {
        v9 = **a2;
        v10 = *(__int16 *)*a3;
      }
      else
      {
        if (v8 != -3)
          return;
        v9 = **a2;
        v10 = **a3;
      }
      if (v9 < v10)
      {
LABEL_29:
        v21 = *(_QWORD *)(a1 + 192);
        v22 = -1;
        goto LABEL_30;
      }
      OUTLINED_FUNCTION_3_71();
      if (v23 == v24)
LABEL_21:
        *v16 = 0;
      else
LABEL_26:
        *v16 = 1;
      break;
    case 0xFFFE:
LABEL_17:
      if (*(__int16 *)*a2 < *(__int16 *)*a3)
        goto LABEL_29;
      goto LABEL_20;
    case 0xFFFF:
      if (*(unsigned __int8 *)*a2 < *(unsigned __int8 *)*a3)
        goto LABEL_29;
LABEL_20:
      OUTLINED_FUNCTION_3_71();
      if (v19 == v20)
        goto LABEL_21;
      goto LABEL_26;
    default:
      if (*((unsigned __int16 *)a3 + 4) == *((unsigned __int16 *)a2 + 4))
      {
        *(_BYTE *)(*(_QWORD *)(a1 + 192) + 8120) = memcmp(*a2, *a3, SHIDWORD(vstmtbl[12 * *((__int16 *)a2 + 4) + 8]));
      }
      else
      {
        v21 = *(_QWORD *)(a1 + 192);
        v22 = 1;
LABEL_30:
        *(_BYTE *)(v21 + 8120) = v22;
      }
      break;
  }
}

BOOL vcompareTypeCheck(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  _BOOL8 result;
  BOOL v5;

  v3 = *(__int16 *)(a2 + 8);
  switch(*(_WORD *)(a2 + 8))
  {
    case 0xFFFA:
      v5 = *(__int16 *)(a3 + 8) == -6;
      goto LABEL_8;
    case 0xFFFB:
    case 0xFFFC:
    case 0xFFFD:
      return (*(__int16 *)(a3 + 8) + 5) < 3;
    case 0xFFFE:
      v5 = *(__int16 *)(a3 + 8) == -2;
      goto LABEL_8;
    case 0xFFFF:
      v5 = *(__int16 *)(a3 + 8) == -1;
LABEL_8:
      result = v5;
      break;
    default:
      result = (v3 & 0x80000000) == 0 && v3 < *(unsigned __int8 *)(a1 + 288);
      break;
  }
  return result;
}

uint64_t vinitloc(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  char v9;

  v3 = result;
  v4 = *(__int16 *)(*(_QWORD *)a2 + 16);
  if (v4 < 0 || (v5 = *(__int16 *)(a2 + 8), v5 == -1))
  {
    v9 = 0;
    *(_WORD *)(result + 8) = v4;
    *(_QWORD *)result = *(_QWORD *)(a2 + 16);
  }
  else
  {
    v6 = *(uint64_t (**)(uint64_t))&vstmtbl[12 * *(unsigned __int16 *)(*(_QWORD *)a2 + 16) + 2][8 * v5];
    v7 = TVFLDS(*(_QWORD *)(a2 + 16));
    result = v6(v7);
    *(_QWORD *)v3 = result;
    v8 = &vstmtbl[12 * *(__int16 *)(*(_QWORD *)a2 + 16) + 1][40 * *(__int16 *)(a2 + 8)];
    *(_WORD *)(v3 + 8) = *((_WORD *)v8 + 15);
    v9 = v8[32];
  }
  *(_BYTE *)(v3 + 10) = v9;
  return result;
}

uint64_t vnspush(uint64_t result, _WORD **a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *((__int16 *)a2 + 4);
  v3 = *(_QWORD *)(result + 200);
  v4 = *(_QWORD *)(v3 + 264);
  v5 = *(_BYTE *)(v3 + 272) + 1;
  *(_BYTE *)(v3 + 272) = v5;
  *(_WORD *)(v4 + 16 * v5 + 8) = v2;
  switch(v2)
  {
    case -5:
      *(_QWORD *)(v4 + 16 * v5) = *(_QWORD *)*a2;
      break;
    case -4:
    case -2:
      *(_WORD *)(v4 + 16 * v5) = **a2;
      break;
    case -3:
      *(_QWORD *)(v4 + 16 * v5) = *(_QWORD *)*a2;
      break;
    case -1:
      *(_BYTE *)(v4 + 16 * v5) = *(_BYTE *)*a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t vnspop(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v2 = *(_QWORD *)(result + 200);
  v3 = *(char *)(v2 + 272);
  v4 = *(_QWORD *)(v2 + 264) + 16 * v3;
  v5 = *(unsigned __int16 *)(v4 + 8);
  *(_WORD *)(a2 + 8) = v5;
  *(_BYTE *)(a2 + 10) = 0;
  if (v5 >= 0xFFFB)
    *(_QWORD *)a2 = v4;
  *(_BYTE *)(v2 + 272) = v3 - 1;
  return result;
}

uint64_t vonstack(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 192) + 8112;
  while (1)
  {
    v3 = *(_QWORD *)v2;
    if (!v3)
      break;
    v4 = *(uint64_t **)(v3 + 8);
    v5 = *v4;
    v2 = (uint64_t)(v4 + 7);
    if (v5 == a2)
      return *(_QWORD *)(*(_QWORD *)v2 + 8);
  }
  return 0;
}

_QWORD *alloc_sync(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;

  v2 = allocDeltaHeapObject(a1, *(_DWORD *)(*(_QWORD *)(a1 + 200) + 248));
  v3 = v2;
  if (v2)
  {
    bzero(v2, *(int *)(*(_QWORD *)(a1 + 200) + 248));
    *v3 |= 2uLL;
    SETONESTM((uint64_t)v3);
    CLRALLNSQ((uint64_t)v3);
  }
  return v3;
}

_QWORD *alloc_tok(uint64_t a1, uint64_t a2)
{
  return allocDeltaHeapObject(a1, *(_DWORD *)(a2 + 68) + 16);
}

void vdltinit(uint64_t a1, int a2)
{
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;

  *(_DWORD *)(*(_QWORD *)(a1 + 200) + 248) = 16 * *(unsigned __int8 *)(a1 + 288) + 48;
  resetDeltaHeap();
  **(_QWORD **)(a1 + 200) = alloc_sync(a1);
  v4 = alloc_sync(a1);
  v5 = *(_QWORD **)(a1 + 200);
  v5[1] = v4;
  if (*v5 && v4 && recordDeltaHeapPos(a1))
  {
    CLRONESTM(**(_QWORD **)(a1 + 200));
    OUTLINED_FUNCTION_7_62();
    v6 = 0;
    v7 = (char *)&unk_257754278;
    while (v6 < *(unsigned __int8 *)(a1 + 288))
    {
      OUTLINED_FUNCTION_0_81();
      if (a2)
      {
        OUTLINED_FUNCTION_5_64();
        if (!v8)
          return;
      }
      ++v6;
      v7 += 96;
    }
    OUTLINED_FUNCTION_4_67();
    SETSPINEL(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 8), **(_QWORD **)(a1 + 200));
    v9 = *(_QWORD *)(a1 + 192);
    *(_QWORD *)(v9 + 8080) = 0;
    *(_WORD *)(v9 + 8088) = 256;
    *(_BYTE *)(v9 + 8090) = 1;
    *(_DWORD *)(v9 + 9080) = 1;
  }
}

uint64_t vscaninit(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 192);
  *(_QWORD *)(v1 + 8080) = 0;
  *(_WORD *)(v1 + 8088) = 256;
  *(_BYTE *)(v1 + 8090) = 1;
  return result;
}

uint64_t deltaReinit(uint64_t a1, int a2)
{
  unint64_t v4;
  char *v5;

  CLRONESTM(**(_QWORD **)(a1 + 200));
  OUTLINED_FUNCTION_7_62();
  v4 = 0;
  v5 = (char *)&unk_257754278;
  while (v4 < *(unsigned __int8 *)(a1 + 288))
  {
    OUTLINED_FUNCTION_0_81();
    if (a2)
      OUTLINED_FUNCTION_5_64();
    ++v4;
    v5 += 96;
  }
  OUTLINED_FUNCTION_4_67();
  return SETSPINEL(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 8), **(_QWORD **)(a1 + 200));
}

void vnstackCleanup(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)(a1 + 200) + 264);
  if (v2)
  {
    free(v2);
    *(_QWORD *)(*(_QWORD *)(a1 + 200) + 264) = 0;
  }
}

void OUTLINED_FUNCTION_0_81()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *v2 = 0;
  v3 = v1 + *(int *)(*(_QWORD *)(v0 + 192) + 9084);
  *(_QWORD *)(**(_QWORD **)(v0 + 200) + 8 * v3) |= 1uLL;
  v4 = v1 + *(int *)(*(_QWORD *)(v0 + 192) + 9084);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 200) + 8) + 8 * v4) |= 1uLL;
  v5 = v1 + *(int *)(*(_QWORD *)(v0 + 192) + 9084);
  *(_QWORD *)(**(_QWORD **)(v0 + 200) + 8 * v5) = *(_QWORD *)(**(_QWORD **)(v0 + 200) + 8 * v5) & 3 | *(_QWORD *)(*(_QWORD *)(v0 + 200) + 8);
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 200) + 8) + 8 * v1;
  *(_QWORD *)(v6 + 24) = *(_QWORD *)(v6 + 24) & 3 | **(_QWORD **)(v0 + 200);
}

void OUTLINED_FUNCTION_1_74(_WORD *a1@<X8>)
{
  __int16 v1;

  *a1 = v1;
}

void OUTLINED_FUNCTION_2_72(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_4_67()
{
  uint64_t v0;

  return SETSPINER(v0, **(_QWORD **)(v0 + 200), *(_QWORD *)(*(_QWORD *)(v0 + 200) + 8));
}

void OUTLINED_FUNCTION_5_64()
{
  uint64_t v0;
  char v1;

  vinit_stm(v0, v1);
}

double OUTLINED_FUNCTION_6_63(uint64_t a1, uint64_t a2)
{
  return **(double **)a2;
}

uint64_t OUTLINED_FUNCTION_7_62()
{
  uint64_t v0;

  return CLRONESTM(*(_QWORD *)(*(_QWORD *)(v0 + 200) + 8));
}

uint64_t print_delta(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, int a9, char a10, char a11)
{
  _DWORD *v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _BYTE *v22;
  _BYTE *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  int v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _DWORD *v42;
  int i;
  int v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  signed int v54;
  int v55;
  uint64_t v56;
  uint64_t k;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  unint64_t v63;
  int v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int off;
  uint64_t v69;
  int v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  unint64_t token;
  int v76;
  unint64_t v77;
  int v78;
  int v79;
  int v80;
  uint64_t v81;
  uint64_t j;
  int v83;
  int v84;
  uint64_t m;
  uint64_t sync;
  int v87;
  int v88;
  int n;
  unsigned __int8 *v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  char v95[16];
  uint64_t v96;

  v96 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)v95 = a4;
  *(_QWORD *)&v95[8] = a5;
  v15 = malloc_type_malloc(0x58uLL, 0x10300406A7A1B15uLL);
  if (!v15)
    return 0;
  v16 = (uint64_t)v15;
  v15[16] = a9 + 2;
  v15[6] = a9;
  *(_OWORD *)v15 = *(_OWORD *)v95;
  *((_QWORD *)v15 + 2) = a8;
  *((_BYTE *)v15 + 68) = a6;
  v17 = num_fields((uint64_t)v15);
  *(_DWORD *)(v16 + 28) = v17;
  v18 = (char *)malloc_type_calloc(v17 + 1, 0x10uLL, 0x1010040449DF08BuLL);
  *(_QWORD *)(v16 + 32) = v18;
  if (!v18)
    goto LABEL_20;
  v19 = 0;
  v20 = *(int *)(v16 + 28);
  v21 = v18 + 8;
  while (v19 <= v20)
  {
    *v21 = 0;
    v21 += 2;
    ++v19;
  }
  v22 = OUTLINED_FUNCTION_33_36();
  *(_QWORD *)(v16 + 72) = v22;
  if (!v22)
  {
LABEL_19:
    free_lines(v16);
LABEL_20:
    free((void *)v16);
    return 0;
  }
  v23 = OUTLINED_FUNCTION_33_36();
  *(_QWORD *)(v16 + 80) = v23;
  if (!v23)
  {
LABEL_18:
    *(_QWORD *)(v16 + 72) = OUTLINED_FUNCTION_12_54(*(int **)(v16 + 72));
    goto LABEL_19;
  }
  v24 = rb_alloc(*(_DWORD *)(v16 + 28), 0);
  *(_QWORD *)(v16 + 40) = v24;
  if (!v24)
  {
LABEL_17:
    *(_QWORD *)(v16 + 80) = OUTLINED_FUNCTION_12_54(*(int **)(v16 + 80));
    goto LABEL_18;
  }
  if (a6)
  {
    v25 = OUTLINED_FUNCTION_55_19();
    *(_QWORD *)(v16 + 48) = v25;
    if (!v25)
      goto LABEL_16;
  }
  else
  {
    *(_QWORD *)(v16 + 48) = 0;
  }
  if ((int)OUTLINED_FUNCTION_52_21() < 1)
  {
    *(_QWORD *)(v16 + 56) = 0;
  }
  else
  {
    v26 = OUTLINED_FUNCTION_55_19();
    *(_QWORD *)(v16 + 56) = v26;
    if (!v26)
    {
      rb_free(*(_QWORD **)(v16 + 48));
LABEL_16:
      rb_free(*(_QWORD **)(v16 + 40));
      goto LABEL_17;
    }
  }
  v28 = OUTLINED_FUNCTION_43_28();
  if (first_field(v28, v29, v30, v31))
  {
    v32 = 0;
    do
    {
      v33 = *(_QWORD *)(v16 + 32) + 16 * v32;
      *(_BYTE *)v33 = 0;
      *(_DWORD *)(v33 + 4) = 0;
      v34 = stream_name(0);
      v35 = 0;
      *(_QWORD *)(*(_QWORD *)(v16 + 32) + 16 * v32 + 8) = strdup(v34);
      while (1)
      {
        v36 = OUTLINED_FUNCTION_49_23();
        if (v35 >= v38)
          break;
        place_char(v36, v37, v35++, 32);
      }
      place_char(v36, v37, v35, 0);
      ++v32;
      v39 = OUTLINED_FUNCTION_43_28();
    }
    while (next_field(v39, v40, v41, v42));
  }
  for (i = 0; ; ++i)
  {
    v44 = *(_DWORD *)(v16 + 28);
    if (i >= *(_DWORD *)(v16 + 64))
      break;
    OUTLINED_FUNCTION_51_22(v16, v44, i);
  }
  place_char(v16, v44, i, 0);
  v45 = 0;
  while (1)
  {
    v46 = *(_DWORD *)(v16 + 28);
    if (v45 >= v46)
      break;
    left_delta(a1);
    v47 = OUTLINED_FUNCTION_49_23();
    register_sync(v47, v48, v49, 0);
    if (v50)
    {
      right_delta(a1);
      v51 = OUTLINED_FUNCTION_49_23();
      register_sync(v51, v52, v53, v54);
      ++v45;
      if (v55)
        continue;
    }
    goto LABEL_37;
  }
  if (!a7)
  {
    v81 = 0;
    for (j = 0; j < v46; ++j)
    {
      if (OUTLINED_FUNCTION_35_35())
      {
        OUTLINED_FUNCTION_22_43();
        if (!v83)
          goto LABEL_37;
        if (a11)
        {
          OUTLINED_FUNCTION_23_42();
          if (!v84)
            goto LABEL_37;
        }
      }
      v46 = *(_DWORD *)(v16 + 28);
      v81 += 16;
    }
  }
  v56 = 0;
  for (k = 0; k < v46; ++k)
  {
    if (!OUTLINED_FUNCTION_35_35())
    {
      OUTLINED_FUNCTION_22_43();
      if (!v58)
        goto LABEL_37;
      if (a11)
      {
        OUTLINED_FUNCTION_23_42();
        if (!v59)
          goto LABEL_37;
      }
    }
    v46 = *(_DWORD *)(v16 + 28);
    v56 += 16;
  }
  if (a7)
  {
    v60 = 0;
    while (v60 < v46)
    {
      v94 = v60;
      v61 = 16 * v60;
      if (!time_stream(*(char *)(*(_QWORD *)(v16 + 32) + 16 * v60)))
        goto LABEL_73;
      v62 = *(_BYTE *)(*(_QWORD *)(v16 + 32) + v61);
      if (OUTLINED_FUNCTION_11_57())
        goto LABEL_37;
      v63 = left_delta(a1);
      v64 = 0;
      while (1)
      {
        v65 = right_delta(a1);
        if (syncmark_equ(v63, v65))
          break;
        v66 = v63;
        do
        {
          v66 = sync_to_right(a1, v62, v66);
          v67 = hashLookupInt(*(_QWORD *)(v16 + 80), v66);
        }
        while (!v67);
        off = find_off(v67, v16, v66);
        OUTLINED_FUNCTION_34_35(v16, v94, off);
        v70 = find_off(v69, v16, v63);
        OUTLINED_FUNCTION_32_36(v16, v94, v70 + 1);
        if (v72)
          goto LABEL_37;
        v73 = v71;
        v74 = 1;
        while (1)
        {
          v63 = sync_to_right(a1, v62, v63);
          if (syncmark_equ(v63, v66))
            break;
          if (is_token_prev(v62, v63))
          {
            if ((v74 & 1) != 0)
              v64 = 0;
            token = prev_token(v62, v63);
            v74 = 0;
            v64 += OUTLINED_FUNCTION_41_28(token);
          }
        }
        if (is_token_prev(v62, v66))
        {
          if ((v74 & 1) != 0)
            v76 = 0;
          else
            v76 = v64;
          v77 = prev_token(v62, v66);
          v64 = OUTLINED_FUNCTION_41_28(v77) + v76;
          goto LABEL_68;
        }
        v63 = v66;
        if ((v74 & 1) == 0)
        {
LABEL_68:
          __sprintf_chk(v95, 0, 0x10uLL, "%i", v64);
          insert_token_name(v16, v94, v73, (uint64_t)v95);
          if (v78 == -1)
            goto LABEL_37;
          insert_padding(v16, v94, v78);
          v63 = v66;
          if (v79 == -1)
            goto LABEL_37;
        }
      }
      if (a11)
      {
        space_syncs(a1, v16, v94);
        if (!v80)
          goto LABEL_37;
      }
LABEL_73:
      v60 = v94 + 1;
      v46 = *(_DWORD *)(v16 + 28);
    }
  }
  if (a6)
  {
    for (m = 0; m < *(int *)(v16 + 64); ++m)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 40) + 16) + 8 * *(int *)(v16 + 28)) + m) == 43)
      {
        sync = find_sync(v16, m);
        v87 = absoluteSyncNum(a1, sync);
        __sprintf_chk(v95, 0, 6uLL, "%i", v87);
        rb_stradd(*(int **)(v16 + 48), m, (unsigned __int8 *)v95);
        if (!v88)
          goto LABEL_37;
      }
    }
  }
  if (OUTLINED_FUNCTION_11_57())
  {
LABEL_37:
    close_ddisp(v16);
    return 0;
  }
  if ((int)OUTLINED_FUNCTION_52_21() >= 1)
  {
    for (n = 0; n < (int)OUTLINED_FUNCTION_52_21(); ++n)
    {
      v90 = (unsigned __int8 *)pvlist_name();
      v91 = pvlist_val();
      if (v91)
      {
        v92 = find_off(v91, v16, v91);
        if ((v92 & 0x80000000) == 0)
        {
          rb_stradd(*(int **)(v16 + 56), v92, v90);
          if (!v93)
            goto LABEL_37;
        }
      }
    }
  }
  return v16;
}

void add_tokens(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  int off;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unsigned int sync;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  unint64_t token;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  int v44;
  int v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  _DWORD *v50;
  char *v51;
  int v52;
  char v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  int v62;
  unint64_t v63;
  int v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  char v69[81];
  uint64_t v70;

  v5 = a1;
  v70 = *MEMORY[0x24BDAC8D0];
  v6 = *(_QWORD *)(a2 + 32) + 16 * (int)a3;
  LOBYTE(v7) = *(_BYTE *)v6;
  v8 = *(_DWORD *)(v6 + 4);
  if (!checkInterrupt(a1))
  {
    v9 = left_delta(v5);
    v7 = (char)v7;
    while (1)
    {
      v10 = right_delta(v5);
      if (syncmark_equ(v9, v10))
        break;
      v11 = v9;
      do
      {
        v11 = sync_to_right(v5, v7, v11);
        v12 = hashLookupInt(*(_QWORD *)(a2 + 80), v11);
      }
      while (!v12);
      find_off(v12, a2, v11);
      v13 = OUTLINED_FUNCTION_2_73();
      OUTLINED_FUNCTION_34_35(v13, v14, v15);
      off = find_off(v16, a2, v9);
      OUTLINED_FUNCTION_32_36(a2, a3, off + 1);
      if (v19)
        break;
      v20 = v18;
      while (1)
      {
        v9 = sync_to_right(v5, v7, v9);
        if (syncmark_equ(v9, v11))
          break;
        sync = v20;
        while (col_next_sync(a2, sync) != -1)
        {
          v22 = OUTLINED_FUNCTION_40_28();
          if (!syncmark_order(v5, v22, v9))
            break;
          v23 = OUTLINED_FUNCTION_21_45();
          ensure_spaces(v23, v24, v25, v26);
          sync = v27;
          if (v27 == -1)
            return;
        }
        v28 = hashLookupInt(*(_QWORD *)(a2 + 72), sync);
        if (v28)
        {
          if (!syncmark_equ(*(_QWORD *)(v28 + 8), v9))
          {
            v29 = OUTLINED_FUNCTION_21_45();
            insert_space_0(v29, v30, v31);
            if (!v32)
              return;
          }
        }
        v33 = OUTLINED_FUNCTION_2_73();
        register_sync(v33, v34, v9, sync);
        if (is_token_prev(v7, v9))
        {
          v66 = v5;
          v63 = v9;
          token = prev_token(v7, v9);
          v64 = v7;
          v65 = v8;
          v37 = OUTLINED_FUNCTION_38_33(token, token, v36, v69);
          v38 = 0;
          v39 = (int)v20;
          v68 = v20;
          v40 = v37 + 1;
          v41 = (int)a3;
          while (1)
          {
            v42 = v37[v38];
            if (!v42
              || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 40) + 16) + 8 * (int)a3) + v39 + v38) != 32)
            {
              break;
            }
            v43 = OUTLINED_FUNCTION_2_73();
            place_char(v43, v44, v45, v46);
            ++v38;
            LODWORD(v20) = v20 + 1;
            ++v40;
          }
          while (1)
          {
            if (!v42)
              goto LABEL_28;
            OUTLINED_FUNCTION_53_20();
            if (*(_BYTE *)(*(_QWORD *)(v47 + 8 * v41) + v39 + v38) != 124
              || *(_BYTE *)(*(_QWORD *)(v47 + 8 * *(int *)(a2 + 28)) + v39 + v38 + 1) == 43)
            {
              break;
            }
            OUTLINED_FUNCTION_31_36(a2, a3);
            v48 = OUTLINED_FUNCTION_2_73();
            place_char_in_stream(v48, v49);
            OUTLINED_FUNCTION_51_22(a2, *(_DWORD *)(a2 + 28), v68 + v38);
            place_char(a2, *(_DWORD *)(a2 + 28), v68 + v38 + 1, 43);
            v67 = v20;
            v20 = v39;
            v50 = (_DWORD *)hashLookupInt(*(_QWORD *)(a2 + 72), v68 + (int)v38);
            *v50 = v68 + v38 + 1;
            hashDeleteInt();
            hashInsertInt(*(_QWORD *)(a2 + 72), v68 + v38 + 1, (uint64_t)v50);
            v51 = &v37[v38];
            place_char(a2, a3, v68 + v38, v37[v38]);
            ++v38;
            v42 = v51[1];
            v39 = v20;
            v41 = (int)a3;
            LODWORD(v20) = v67 + 1;
            ++v40;
          }
          v42 = 1;
LABEL_28:
          while (v42)
          {
            insert_space_0(a2, a3, v20);
            if (!v52)
              return;
            place_char(a2, a3, v20, *(v40 - 1));
            v53 = *v40++;
            v42 = v53;
            LODWORD(v20) = v20 + 1;
          }
          if ((_DWORD)v20 == -1)
            return;
          OUTLINED_FUNCTION_32_36(a2, a3, v20);
          if (v19)
            return;
          v54 = OUTLINED_FUNCTION_21_45();
          sync = next_sync(v54, v55, v56);
          v5 = v66;
          v7 = v64;
          v8 = v65;
          v9 = v63;
        }
        insert_padding(a2, a3, sync + 1);
        v20 = v57;
        if ((_DWORD)v57 == -1)
          return;
      }
      v9 = v11;
      if (is_token_prev(v7, v11))
      {
        v58 = prev_token(v7, v11);
        v60 = OUTLINED_FUNCTION_38_33(v58, v58, v59, v69);
        insert_token_name(a2, a3, v20, (uint64_t)v60);
        if (v61 == -1)
          break;
        OUTLINED_FUNCTION_17_50(v61);
        v9 = v11;
        if (v62 == -1)
          break;
      }
    }
  }
}

void space_syncs(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  int v6;
  int i;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;

  if (!checkInterrupt(a1))
  {
    v5 = OUTLINED_FUNCTION_2_73();
    for (i = next_sync(v5, v6, 1); i < *(_DWORD *)(a2 + 64); i = next_sync(v13, v14, v15))
    {
      OUTLINED_FUNCTION_53_20();
      if (*(_BYTE *)(*(_QWORD *)(v8 + 8 * a3) + i - 1) == 124)
      {
        v9 = OUTLINED_FUNCTION_7_63();
        insert_space_0(v9, v10, v11);
        if (!v12)
          break;
      }
      v13 = OUTLINED_FUNCTION_2_73();
    }
  }
  OUTLINED_FUNCTION_0_82();
}

void close_ddisp(uint64_t a1)
{
  if (a1)
  {
    *(_QWORD *)(a1 + 80) = OUTLINED_FUNCTION_12_54(*(int **)(a1 + 80));
    *(_QWORD *)(a1 + 72) = hashDelete(*(int **)(a1 + 72), 0, 1);
    rb_free(*(_QWORD **)(a1 + 40));
    rb_free(*(_QWORD **)(a1 + 48));
    rb_free(*(_QWORD **)(a1 + 56));
    free_lines(a1);
    free((void *)a1);
  }
}

BOOL sync_in_ticks(uint64_t a1, int a2)
{
  return *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * *(int *)(a1 + 28)) + a2) == 43;
}

uint64_t find_sync(uint64_t a1, unsigned int a2)
{
  uint64_t v4;

  do
    v4 = hashLookupInt(*(_QWORD *)(a1 + 72), a2--);
  while (!v4);
  return *(_QWORD *)(v4 + 8);
}

uint64_t find_off(uint64_t a1, uint64_t a2, unsigned int a3)
{
  unsigned int *v3;

  v3 = (unsigned int *)hashLookupInt(*(_QWORD *)(a2 + 80), a3);
  if (v3)
    return *v3;
  else
    return 0xFFFFFFFFLL;
}

void lf_print_delta(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, _BYTE *a5, int a6, int a7, uint64_t a8, int a9, char a10, char a11, int a12)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int i;
  int v38;
  int j;
  char v40;
  char v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int k;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t m;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE v99[80];
  uint64_t v100;

  v100 = *MEMORY[0x24BDAC8D0];
  v97 = 0;
  v98 = 0;
  if (a12)
    v17 = a12;
  else
    v17 = 77;
  fill_stream_list(a1, (int *)&v97, a5);
  if (v20)
  {
    v21 = print_delta(a1, v18, v19, v97, v98, a6, a7, a8, a9, 0, a11);
    if (v21)
    {
      v22 = v21;
      v95 = a1;
      v96 = a2;
      v23 = 0;
      v24 = 0;
      v25 = 16 * (*(_DWORD *)(v21 + 28) & ~(*(int *)(v21 + 28) >> 31));
      while (v25 != v23)
      {
        v26 = *(_QWORD *)(v22 + 32) + v23;
        v27 = strlen(*(const char **)(v26 + 8));
        if (*(_DWORD *)(v26 + 4))
          v28 = 3;
        else
          v28 = 2;
        v29 = v28 + v27;
        if (v24 <= v29)
          v24 = v29;
        v23 += 16;
      }
      __memset_chk();
      LODWORD(v30) = 0;
      v99[v24] = 0;
      HIDWORD(v94) = v17 - v24;
LABEL_15:
      while ((v30 & 0x80000000) == 0)
      {
        v31 = *(_DWORD *)(v22 + 64);
        if ((int)v30 >= v31)
          break;
        v32 = 0;
        v33 = v30 + HIDWORD(v94);
        if ((int)v30 + HIDWORD(v94) >= v31)
          v34 = *(_DWORD *)(v22 + 64);
        else
          v34 = v30 + HIDWORD(v94);
        v35 = *(_DWORD *)(v22 + 28) & ~(*(int *)(v22 + 28) >> 31);
        v36 = v34;
        while ((_DWORD)v32 != v35)
        {
          for (i = v34; i > (int)v30; --i)
          {
            can_split_stream_line(v22, v32, i);
            if (v38)
              break;
          }
          if (v36 >= i)
            v36 = i;
          v32 = (v32 + 1);
        }
        if (*(_BYTE *)(v22 + 68))
        {
          for (j = 0; j < (int)rb_lines(*(unsigned int **)(v22 + 48)); ++j)
          {
            OUTLINED_FUNCTION_20_46();
            OUTLINED_FUNCTION_37_35();
            if (v40 == v41)
              OUTLINED_FUNCTION_20_46();
            OUTLINED_FUNCTION_25_41();
            if (v36 >= v42)
            {
              OUTLINED_FUNCTION_20_46();
              OUTLINED_FUNCTION_37_35();
              if (v40 == v41)
                OUTLINED_FUNCTION_20_46();
              OUTLINED_FUNCTION_25_41();
              v36 = v43;
            }
          }
        }
        v44 = (uint64_t)OUTLINED_FUNCTION_14_52();
        if ((int)v44 >= 1)
        {
          for (k = 0; ; ++k)
          {
            v44 = (uint64_t)OUTLINED_FUNCTION_14_52();
            if (k >= (int)v44)
              break;
            OUTLINED_FUNCTION_13_53();
            OUTLINED_FUNCTION_37_35();
            if (v40 == v41)
              OUTLINED_FUNCTION_13_53();
            OUTLINED_FUNCTION_24_41();
            if (v36 >= v52)
            {
              OUTLINED_FUNCTION_13_53();
              OUTLINED_FUNCTION_37_35();
              if (v40 == v41)
                OUTLINED_FUNCTION_13_53();
              OUTLINED_FUNCTION_24_41();
              v36 = v53;
            }
          }
        }
        if (v36 == (_DWORD)v30)
        {
          if (v33 >= *(_DWORD *)(v22 + 64))
            v36 = *(_DWORD *)(v22 + 64);
          else
            v36 = v30 + HIDWORD(v94);
        }
        v54 = 0;
        while (1)
        {
          v55 = *(int *)(v22 + 28);
          if (v54 >= v55)
            break;
          v56 = *(_QWORD *)(v22 + 32);
          if (*(int *)(v56 + 16 * v54 + 4) < 1)
          {
            v57 = 0;
          }
          else
          {
            heading_string_buf[0] = 32;
            v57 = 1u;
          }
          for (m = 0; ; ++m)
          {
            v59 = *(unsigned __int8 *)(*(_QWORD *)(v56 + 16 * v54 + 8) + m);
            if (!v59)
              break;
            heading_string_buf[v57 + m] = v59;
            v56 = *(_QWORD *)(v22 + 32);
          }
          v60 = v57 + m;
          v61 = (v57 + m);
          v62 = 58;
          do
          {
            heading_string_buf[v61] = v62;
            v61 = v60 + 1;
            LODWORD(v57) = v57 + 1;
            v62 = 32;
            ++v60;
          }
          while (v24 > (int)m + (int)v57);
          heading_string_buf[(m + v57)] = 0;
          v63 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40) + 16) + 8 * v54);
          OUTLINED_FUNCTION_9_59();
          next_stream_split();
          v65 = v64;
          OUTLINED_FUNCTION_8_60();
          next_stream_split();
          lf_put_disp_line(v95, v96, (uint64_t)heading_string_buf, v63, v30, v65);
          v44 = OUTLINED_FUNCTION_11_57();
          ++v54;
          if ((_DWORD)v44)
          {
LABEL_74:
            LODWORD(v30) = -1;
            goto LABEL_15;
          }
        }
        if (*(_BYTE *)(v22 + 68))
        {
          OUTLINED_FUNCTION_5_65(v44, v45, v46, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40) + 16) + 8 * v55), v47, v48, v49, v50, v92, HIDWORD(v92), v93, v94);
          v66 = 0;
          while (v66 < (int)rb_lines(*(unsigned int **)(v22 + 48)))
          {
            OUTLINED_FUNCTION_45_26(*(_QWORD *)(v22 + 48));
            OUTLINED_FUNCTION_9_59();
            next_abs_split();
            OUTLINED_FUNCTION_8_60();
            next_abs_split();
            OUTLINED_FUNCTION_3_72(v67, v68, v69, v70, v71, v72, v73, v74);
            ++v66;
            if (OUTLINED_FUNCTION_11_57())
              goto LABEL_74;
          }
        }
        v75 = OUTLINED_FUNCTION_14_52();
        if ((_DWORD)v75)
        {
          OUTLINED_FUNCTION_5_65((uint64_t)v75, v76, v77, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40) + 16) + 8 * *(int *)(v22 + 28)), v78, v79, v80, v81, v92, HIDWORD(v92), v93, v94);
          v82 = 0;
          while (v82 < (int)OUTLINED_FUNCTION_14_52())
          {
            OUTLINED_FUNCTION_45_26(*(_QWORD *)(v22 + 56));
            OUTLINED_FUNCTION_9_59();
            next_ptr_split();
            OUTLINED_FUNCTION_8_60();
            next_ptr_split();
            OUTLINED_FUNCTION_3_72(v83, v84, v85, v86, v87, v88, v89, v90);
            ++v82;
            if (OUTLINED_FUNCTION_11_57())
              goto LABEL_74;
          }
        }
        vf_puts(v95, v96, (uint64_t)"\n", 1);
        v30 = v36;
        if (v36 <= v33)
          v91 = v33;
        else
          v91 = v36;
        while (v30 < v33)
        {
          if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40) + 16) + 8 * *(int *)(v22 + 28)) + v30) == 43)
            goto LABEL_15;
          ++v30;
        }
        LODWORD(v30) = v91;
      }
      close_ddisp(v22);
    }
  }
}

void free_lines(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  char *v4;

  v2 = 0;
  for (i = 8; ; i += 16)
  {
    v4 = *(char **)(a1 + 32);
    if (v2 > *(int *)(a1 + 28))
      break;
    free(*(void **)&v4[i]);
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + i) = 0;
    ++v2;
  }
  free(v4);
  *(_QWORD *)(a1 + 32) = 0;
}

void delta_erase(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t sync;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  int v34;

  if (*(_DWORD *)(a2 + 28) <= (int)a3)
    goto LABEL_17;
  if (a4 == a5)
  {
    OUTLINED_FUNCTION_53_20();
    v10 = (int)a3;
    if (*(_BYTE *)(*(_QWORD *)(v11 + 8 * (int)a3) + a4) == 124)
    {
      v12 = *(char *)(*(_QWORD *)(a2 + 32) + 16 * (int)a3);
      v13 = OUTLINED_FUNCTION_10_59();
      if (can_del_sync((uint64_t)a1, v12, v13))
      {
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + 32) + 16 * (int)a3);
        v15 = OUTLINED_FUNCTION_10_59();
        if (del_sync((uint64_t)a1, v14, v15))
        {
          v16 = OUTLINED_FUNCTION_7_63();
          unregister_sync(v16, v17, v18);
          update_token(a2, a3, (a4 - 1));
        }
      }
      goto LABEL_17;
    }
  }
  else
  {
    v10 = (int)a3;
  }
  v19 = *(_BYTE *)(*(_QWORD *)(a2 + 32) + 16 * v10);
  v20 = OUTLINED_FUNCTION_10_59();
  sync = find_sync(a2, a5);
  if (del_two_point(a1, v19, v20, sync))
  {
    v22 = OUTLINED_FUNCTION_7_63();
    v25 = prev_sync(v22, v23, v24);
    v26 = OUTLINED_FUNCTION_2_73();
    v28 = v25;
    v29 = (int)(next_sync(v26, v27, a5) - 1);
    v30 = v25 + 1;
    while (v28 < v29)
    {
      OUTLINED_FUNCTION_53_20();
      v31 = OUTLINED_FUNCTION_7_63();
      if (v34 == 124)
        unregister_sync(v31, v32, v33);
      else
        OUTLINED_FUNCTION_31_36(v31, v32);
      ++v30;
      ++v28;
    }
  }
LABEL_17:
  OUTLINED_FUNCTION_4_68();
}

void unregister_sync(uint64_t a1, int a2, int a3)
{
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;

  if (a3 && *(_DWORD *)(a1 + 64) - 1 != a3)
  {
    OUTLINED_FUNCTION_31_36(a1, a2);
    v5 = 0;
    v6 = *(_DWORD *)(a1 + 28);
    while (8 * (v6 & ~(v6 >> 31)) != v5)
    {
      v7 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + v5) + a3);
      v5 += 8;
      if (v7 == 124)
        return;
    }
    OUTLINED_FUNCTION_51_22(a1, v6, a3);
    v8 = OUTLINED_FUNCTION_2_73();
    find_sync(v8, v9);
    hashDeleteInt();
    hashDeleteInt();
    if (*(_BYTE *)(a1 + 68))
      rb_strdel(*(_QWORD *)(a1 + 48), a3);
    if (rb_lines(*(unsigned int **)(a1 + 56)))
      rb_strdel(*(_QWORD *)(a1 + 56), a3);
  }
}

unint64_t update_token(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int sync;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t result;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int i;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  char *v26;
  int v27;
  char v28[81];
  uint64_t v29;

  v3 = a3;
  v4 = a2;
  v29 = *MEMORY[0x24BDAC8D0];
  sync = prev_sync(a1, a2, a3);
  v7 = next_sync(a1, v4, v3);
  v8 = *(char *)(*(_QWORD *)(a1 + 32) + 16 * v4);
  v9 = OUTLINED_FUNCTION_49_23();
  v11 = find_sync(v9, v10);
  result = prev_token(v8, v11);
  if (result)
  {
    v13 = result;
    v14 = v4;
    v15 = v4;
    v16 = sync + 1;
    for (i = v16; i < v7; ++i)
      OUTLINED_FUNCTION_31_36(a1, v4);
    OUTLINED_FUNCTION_32_36(a1, v4, v16);
    if (v19)
    {
      return 0;
    }
    else
    {
      v20 = v18;
      v21 = 0;
      v22 = 16 * v14;
      v23 = v18;
      while (v14 + v21 < *(int *)(a1 + 28))
      {
        v24 = *(_QWORD *)(a1 + 32);
        v25 = *(unsigned __int8 *)(v24 + v22);
        if (v25 != *(unsigned __int8 *)(v24 + 16 * v14))
          break;
        v26 = field_value((char)v25, v13, *(_DWORD *)(v24 + v22 + 4), v28);
        insert_token_name(a1, (v15 + v21), v20, (uint64_t)v26);
        if (v27 == -1)
          return 0;
        if (v23 <= v27)
          v23 = v27;
        v22 += 16;
        ++v21;
      }
      OUTLINED_FUNCTION_32_36(a1, v15, v23);
      return !v19;
    }
  }
  return result;
}

uint64_t prev_sync(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a1 + 28);
  if ((int)a3 >= -1)
    result = 0xFFFFFFFFLL;
  else
    result = a3;
  if ((int)v4 <= (int)a2)
  {
    while ((a3 & 0x80000000) == 0)
    {
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * v4) + a3) == 43)
        return OUTLINED_FUNCTION_28_38(result, a2, a3);
      a3 = (a3 - 1);
    }
  }
  else if ((a3 & 0x80000000) == 0)
  {
    while (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * (int)a2) + a3) != 124)
    {
      a3 = (a3 - 1);
      if ((a3 & 0x80000000) != 0)
        return result;
    }
    return OUTLINED_FUNCTION_28_38(result, a2, a3);
  }
  return result;
}

uint64_t next_sync(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = *(int *)(a1 + 28);
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  result = a3;
  if ((int)v3 <= a2)
  {
    v7 = *(_QWORD *)(v4 + 8 * v3);
    while (*(_BYTE *)(v7 + result) && *(_BYTE *)(v7 + result) != 43)
      ++result;
  }
  else
  {
    v6 = *(_QWORD *)(v4 + 8 * a2);
    while (*(_BYTE *)(v6 + result) && *(_BYTE *)(v6 + result) != 124)
      ++result;
  }
  return result;
}

void place_char_in_stream(uint64_t a1, int a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t i;

  v3 = a2;
  v4 = a2;
  v5 = 16 * a2;
  while (v4 >= 1)
  {
    if (*(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 16 * --v4) != *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + v5))
      break;
    OUTLINED_FUNCTION_39_30(a1, v4);
  }
  for (i = v5;
        v3 < *(int *)(a1 + 28)
     && *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + i) == *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + v5);
        i += 16)
  {
    OUTLINED_FUNCTION_39_30(a1, v3++);
  }
  OUTLINED_FUNCTION_16_50();
}

void insert_spaces(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t i;
  int v9;
  int *v10;
  int v11;
  int space_or_sync;
  int v13;
  int v14;
  int v15;

  for (i = 0; ; i = (i + 1))
  {
    v9 = *(_DWORD *)(a1 + 28);
    if ((int)i >= v9)
      break;
    if (a2 == (_DWORD)i)
    {
      v10 = *(int **)(a1 + 40);
      v11 = a2;
      space_or_sync = a3;
    }
    else
    {
      space_or_sync = next_space_or_sync(a1, i, a3);
      v10 = *(int **)(a1 + 40);
      v11 = i;
    }
    rb_inscn(v10, v11, space_or_sync, 32, a4);
    if (!v13)
      goto LABEL_11;
  }
  rb_inscn(*(int **)(a1 + 40), v9, a3, 45, a4);
  if (v14)
  {
    shift_table_right(*(_QWORD *)(a1 + 72), a3, *(_DWORD *)(a1 + 64), a4);
    *(_DWORD *)(a1 + 64) += a4;
    OUTLINED_FUNCTION_56_19(*(_QWORD *)(a1 + 48));
    if (v15)
      OUTLINED_FUNCTION_56_19(*(_QWORD *)(a1 + 56));
  }
LABEL_11:
  OUTLINED_FUNCTION_15_50();
}

uint64_t next_space_or_sync(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *i;
  int v4;

  for (i = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * (int)a2) + (int)a3); ; ++i)
  {
    v4 = *i;
    if (v4 != 39)
      break;
    if (i[1] == 32 && i[2] == 39)
    {
      LODWORD(a3) = a3 + 2;
      i += 2;
    }
LABEL_10:
    a3 = (a3 + 1);
  }
  if (*i && v4 != 32 && v4 != 124)
    goto LABEL_10;
  return OUTLINED_FUNCTION_28_38(a1, a2, a3);
}

void shift_table_right(uint64_t a1, int a2, unsigned int a3, int a4)
{
  signed int v7;
  _DWORD *v8;

  v7 = a4 + a2;
  while ((int)(a4 + a3) >= v7)
  {
    v8 = (_DWORD *)hashMoveInt(a1, a3, a4 + a3);
    if (v8)
      *v8 = a4 + a3;
    --a3;
  }
  OUTLINED_FUNCTION_16_50();
}

void place_char(uint64_t a1, int a2, int a3, char a4)
{
  rb_putc(*(_QWORD *)(a1 + 40), a2, a3, a4);
}

void place_sync(uint64_t a1, uint64_t a2, int a3, signed int a4)
{
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  unsigned int sync;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  char v29[6];

  preceded_by_token(a2, a3);
  if (v8)
  {
    v9 = OUTLINED_FUNCTION_6_64();
    followed_by_token(v9, v10);
    if (v11)
      return;
    v21 = *(char *)(*(_QWORD *)(a2 + 32) + 16 * a3);
    v22 = OUTLINED_FUNCTION_6_64();
    sync = next_sync(v22, v23, v24);
    v17 = OUTLINED_FUNCTION_36_35(sync);
    v18 = a1;
    v19 = v21;
    v20 = 1;
  }
  else
  {
    v12 = *(char *)(*(_QWORD *)(a2 + 32) + 16 * a3);
    v13 = OUTLINED_FUNCTION_6_64();
    v16 = prev_sync(v13, v14, v15);
    v17 = OUTLINED_FUNCTION_36_35(v16);
    v18 = a1;
    v19 = v12;
    v20 = 0;
  }
  v26 = ins_sync(v18, v19, v17, v20);
  place_char_in_stream(a2, a3);
  OUTLINED_FUNCTION_54_20();
  if (*(_BYTE *)(v27 + a4) != 43 && new_sync(a2, (uint64_t)v26, a4))
  {
    if (*(_BYTE *)(a2 + 68))
    {
      v28 = OUTLINED_FUNCTION_42_28();
      __sprintf_chk(v29, 0, 6uLL, "%i", v28);
      rb_stradd(*(int **)(a2 + 48), a4, (unsigned __int8 *)v29);
    }
  }
}

void preceded_by_token(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_DWORD *)(a1 + 28) > a2)
  {
    OUTLINED_FUNCTION_29_37();
    prev_non_blank(v3, v4, (v2 - 1));
  }
  OUTLINED_FUNCTION_30_36();
}

void followed_by_token(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  if (*(_DWORD *)(a1 + 28) > a2)
  {
    OUTLINED_FUNCTION_29_37();
    next_non_blank(v3, v4, (v2 + 1));
  }
  OUTLINED_FUNCTION_30_36();
}

void *new_sync(uint64_t a1, uint64_t a2, unsigned int a3)
{
  void *v6;
  _DWORD *v8;
  int v9;
  int v10;

  if (!hashLookupInt(*(_QWORD *)(a1 + 72), a3) && !hashLookupInt(*(_QWORD *)(a1 + 80), a2))
  {
    v8 = malloc_type_malloc(0x10uLL, 0x10800407411B482uLL);
    v6 = v8;
    if (!v8)
      return v6;
    *v8 = a3;
    *((_QWORD *)v8 + 1) = a2;
    hashInsertInt(*(_QWORD *)(a1 + 72), a3, (uint64_t)v8);
    if (v9)
    {
      hashInsertInt(*(_QWORD *)(a1 + 80), a2, (uint64_t)v6);
      if (v10)
      {
        place_char(a1, *(_DWORD *)(a1 + 28), a3, 43);
        return v6;
      }
    }
    free(v6);
  }
  return 0;
}

void insert_token(uint64_t *a1, uint64_t a2, uint64_t a3, unsigned int a4, char *a5, uint64_t a6)
{
  int v12;
  uint64_t v13;
  signed int sync;

  v12 = *(char *)(*(_QWORD *)(a2 + 32) + 16 * (int)a3);
  v13 = OUTLINED_FUNCTION_44_28((uint64_t)a1, a2, a3, a4);
  if (ins_tok_named(a1, v12, a6, a5, v13) && update_token(a2, a3, a4 - 1))
  {
    sync = next_sync(a2, a3, a4);
    change_field(a1, a2, a3, sync, (uint64_t)a5, a6);
  }
  else
  {
    OUTLINED_FUNCTION_4_68();
  }
}

void change_field(uint64_t *a1, uint64_t a2, uint64_t a3, signed int a4, uint64_t a5, uint64_t a6)
{
  char *v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int i;
  uint64_t v20;
  int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;

  v10 = (char *)(*(_QWORD *)(a2 + 32) + 16 * (int)a3);
  v11 = *v10;
  v12 = *((_DWORD *)v10 + 1);
  v13 = OUTLINED_FUNCTION_44_28((uint64_t)a1, a2, a3, a4);
  set_fld_value(a1, v11, v12, a6, a5, v13);
  if (v14)
  {
    v15 = OUTLINED_FUNCTION_2_73();
    v18 = prev_sync(v15, v16, v17) + 1;
    for (i = v18; ; ++i)
    {
      v20 = OUTLINED_FUNCTION_2_73();
      if (i >= a4)
        break;
      place_char(v20, v21, i, 32);
    }
    OUTLINED_FUNCTION_32_36(v20, v21, v18);
    if (!v22)
    {
      v23 = OUTLINED_FUNCTION_2_73();
      insert_token_name(v23, v24, v25, a5);
      if (v26 != -1)
        OUTLINED_FUNCTION_17_50(v26);
    }
  }
  OUTLINED_FUNCTION_4_68();
}

void insert_padding(uint64_t a1, int a2, int a3)
{
  ensure_spaces(a1, a2, a3, *(_DWORD *)(a1 + 24));
}

void insert_token_name(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  uint64_t v6;
  uint64_t v7;
  char *i;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v4 = a2;
  v6 = (int)a2;
  v7 = (int)a3;
  for (i = (char *)(a4 + 1); ; ++i)
  {
    v9 = *(i - 1);
    if (!v9)
      break;
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * v6) + v7) == 124)
    {
      v9 = 1;
      break;
    }
    OUTLINED_FUNCTION_27_38(a1, a2, a3, v9);
    ++v7;
  }
  while (v9)
  {
    insert_space_0(a1, v4, v7);
    if (!(_DWORD)v10)
      break;
    OUTLINED_FUNCTION_27_38(v10, v11, v12, *(i - 1));
    v13 = *i++;
    v9 = v13;
    LODWORD(v7) = v7 + 1;
  }
  OUTLINED_FUNCTION_15_50();
}

uint64_t col_prev_sync(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if ((int)a2 >= -1)
    result = 0xFFFFFFFFLL;
  else
    result = a2;
  if ((a2 & 0x80000000) == 0)
  {
    while (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * *(int *)(a1 + 28)) + a2) == 45)
    {
      a2 = (a2 - 1);
      if ((a2 & 0x80000000) != 0)
        return result;
    }
    return a2;
  }
  return result;
}

uint64_t col_next_sync(uint64_t a1, unsigned int a2)
{
  unsigned __int8 *v2;
  int v3;
  int v4;

  v2 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * *(int *)(a1 + 28)) + (int)a2);
  while (1)
  {
    v4 = *v2++;
    v3 = v4;
    if (v4 != 45)
      break;
    ++a2;
  }
  if (v3 == 43)
    return a2;
  else
    return 0xFFFFFFFFLL;
}

uint64_t prev_non_blank(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  BOOL v5;

  v3 = *(_DWORD *)(a1 + 28);
  if (v3 <= (int)a2)
  {
    if ((a3 & 0x80000000) == 0 && v3 == (_DWORD)a2)
    {
      while (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * (int)a2) + a3) == 45)
      {
        v5 = (int)a3 <= 0;
        a3 = (a3 - 1);
        if (v5)
        {
          a3 = 0xFFFFFFFFLL;
          return OUTLINED_FUNCTION_28_38(a1, a2, a3);
        }
      }
    }
  }
  else
  {
    if ((int)a3 >= -1)
      v4 = 0xFFFFFFFFLL;
    else
      v4 = a3;
    if ((a3 & 0x80000000) != 0)
    {
LABEL_8:
      a3 = v4;
    }
    else
    {
      while (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * (int)a2) + a3) == 32)
      {
        a3 = (a3 - 1);
        if ((a3 & 0x80000000) != 0)
          goto LABEL_8;
      }
    }
  }
  return OUTLINED_FUNCTION_28_38(a1, a2, a3);
}

uint64_t next_non_blank(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned __int8 *v4;
  int v5;
  unsigned __int8 *v6;
  int v7;

  v3 = *(_DWORD *)(a1 + 28);
  if (v3 <= (int)a2)
  {
    if (v3 == (_DWORD)a2)
    {
      v6 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * (int)a2) + (int)a3);
      LODWORD(a3) = a3 + 1;
      do
      {
        v7 = *v6--;
        a3 = (a3 - 1);
      }
      while (v7 == 45);
    }
  }
  else
  {
    v4 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * (int)a2) + (int)a3);
    LODWORD(a3) = a3 - 1;
    do
    {
      v5 = *v4++;
      a3 = (a3 + 1);
    }
    while (v5 == 32);
  }
  return OUTLINED_FUNCTION_28_38(a1, a2, a3);
}

uint64_t num_to_sync(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t i;
  uint64_t v6;
  uint64_t v7;

  for (i = 0; i < *(int *)(a2 + 64); ++i)
  {
    OUTLINED_FUNCTION_54_20();
    if (*(_BYTE *)(v6 + i) == 43)
    {
      v7 = OUTLINED_FUNCTION_40_28();
      if (OUTLINED_FUNCTION_42_28() == a3)
        return v7;
    }
  }
  return 0;
}

void bet_tokens()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;

  OUTLINED_FUNCTION_48_24();
  preceded_by_token(v2, v3);
  if (v4)
    followed_by_token(v1, v0);
  OUTLINED_FUNCTION_0_82();
}

void ensure_spaces(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v5;

  v5 = a3;
  while (a4 >= 1)
  {
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * a2) + v5) != 32)
    {
      insert_spaces(a1, a2, v5, a4);
      break;
    }
    ++v5;
    --a4;
  }
  OUTLINED_FUNCTION_30_36();
}

void register_sync(uint64_t a1, int a2, uint64_t a3, signed int a4)
{
  OUTLINED_FUNCTION_34_35(a1, a2, a4);
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 16) + 8 * *(int *)(a1 + 28)) + a4) != 43)
    new_sync(a1, a3, a4);
  OUTLINED_FUNCTION_0_82();
}

void insert_space_0(uint64_t a1, int a2, int a3)
{
  int i;
  int v7;
  int *v8;
  int v9;
  int space_or_sync;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;

  for (i = 0; ; ++i)
  {
    v7 = *(_DWORD *)(a1 + 28);
    if (i >= v7)
      break;
    if (a2 == i)
    {
      v8 = *(int **)(a1 + 40);
      v9 = a2;
      space_or_sync = a3;
    }
    else
    {
      v11 = OUTLINED_FUNCTION_6_64();
      space_or_sync = next_space_or_sync(v11, v12, v13);
      v8 = *(int **)(a1 + 40);
      v9 = i;
    }
    rb_insc(v8, v9, space_or_sync, 32);
    if (!v14)
      goto LABEL_11;
  }
  rb_insc(*(int **)(a1 + 40), v7, a3, 45);
  if (v15)
  {
    shift_table_right(*(_QWORD *)(a1 + 72), a3, *(_DWORD *)(a1 + 64), 1);
    ++*(_DWORD *)(a1 + 64);
    OUTLINED_FUNCTION_47_25(*(_QWORD *)(a1 + 48));
    if (v16)
      OUTLINED_FUNCTION_47_25(*(_QWORD *)(a1 + 56));
  }
LABEL_11:
  OUTLINED_FUNCTION_0_82();
}

void prev_abs_split()
{
  int v0;
  int v1;
  int v2;

  OUTLINED_FUNCTION_1_75();
  while (v0 > v1)
  {
    OUTLINED_FUNCTION_18_47();
    if (v2)
      break;
    --v0;
  }
  OUTLINED_FUNCTION_0_82();
}

void prev_ptr_split()
{
  int v0;
  int v1;
  int v2;

  OUTLINED_FUNCTION_1_75();
  while (v0 > v1)
  {
    OUTLINED_FUNCTION_19_47();
    if (v2)
      break;
    --v0;
  }
  OUTLINED_FUNCTION_0_82();
}

void lf_put_disp_line(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  _BYTE *i;
  int j;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_48_24();
  v17 = v16;
  v18 = *(_BYTE *)(v14 + v16);
  *(_BYTE *)(v14 + v16) = 0;
  v19 = v14 + v15;
  if (!v20)
    goto LABEL_6;
  for (i = (_BYTE *)(v14 + v15); *i == 32; ++i)
    ;
  if (*i)
  {
LABEL_6:
    OUTLINED_FUNCTION_26_40(v11, v12, v13);
    for (j = (a6 - a5) & ~((a6 - a5) >> 31); j; --j)
      vf_puts(v7, v6, (uint64_t)" ", 0);
    vf_puts(v7, v6, v19, 0);
    OUTLINED_FUNCTION_26_40(v23, v24, (uint64_t)"\n");
  }
  *(_BYTE *)(a4 + v17) = v18;
}

void next_stream_split()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  OUTLINED_FUNCTION_1_75();
  while (v0 < v1)
  {
    can_split_stream_line(v3, v2, v0);
    if (v4)
      break;
    ++v0;
  }
  OUTLINED_FUNCTION_0_82();
}

void next_abs_split()
{
  int v0;
  int v1;
  int v2;

  OUTLINED_FUNCTION_1_75();
  while (v0 < v1)
  {
    OUTLINED_FUNCTION_18_47();
    if (v2)
      break;
    ++v0;
  }
  OUTLINED_FUNCTION_0_82();
}

void next_ptr_split()
{
  int v0;
  int v1;
  int v2;

  OUTLINED_FUNCTION_1_75();
  while (v0 < v1)
  {
    OUTLINED_FUNCTION_19_47();
    if (v2)
      break;
    ++v0;
  }
  OUTLINED_FUNCTION_0_82();
}

void can_split_stream_line(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_DWORD *)(a1 + 64) != a3)
  {
    OUTLINED_FUNCTION_29_37();
    if (*(_BYTE *)(v3 + (int)v6) == 32)
      next_non_blank(v4, v5, v6);
  }
  OUTLINED_FUNCTION_30_36();
}

void can_split_abs_line(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_48_24();
  if (rb_width(*(_QWORD *)(v4 + 48)) != a3)
  {
    if (a3)
    {
      OUTLINED_FUNCTION_46_25();
      if (!v5)
        OUTLINED_FUNCTION_50_23();
    }
  }
  OUTLINED_FUNCTION_0_82();
}

void can_split_ptr_line(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_48_24();
  if (rb_width(*(_QWORD *)(v4 + 56)) != a3)
  {
    if (a3)
    {
      OUTLINED_FUNCTION_46_25();
      if (!v5)
        OUTLINED_FUNCTION_50_23();
    }
  }
  OUTLINED_FUNCTION_0_82();
}

uint64_t OUTLINED_FUNCTION_2_73()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_3_72(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  int v9;
  int v10;
  va_list va;

  va_start(va, a8);
  lf_put_disp_line(a4, a6, (uint64_t)va, v8, v9, v10);
}

void OUTLINED_FUNCTION_5_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, ...)
{
  int v12;
  va_list va;

  va_start(va, a12);
  lf_put_disp_line(a8, a10, (uint64_t)va, a4, v12, v12);
}

uint64_t OUTLINED_FUNCTION_6_64()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_63()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_60()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_59()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_59()
{
  uint64_t v0;
  unsigned int v1;

  return find_sync(v0, v1);
}

uint64_t OUTLINED_FUNCTION_11_57()
{
  uint64_t v0;

  return checkInterrupt(v0);
}

uint64_t OUTLINED_FUNCTION_12_54(int *a1)
{
  return hashDelete(a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_13_53()
{
  uint64_t v0;

  return rb_width(*(_QWORD *)(v0 + 56));
}

unsigned int *OUTLINED_FUNCTION_14_52()
{
  uint64_t v0;

  return rb_lines(*(unsigned int **)(v0 + 56));
}

void OUTLINED_FUNCTION_17_50(int a1)
{
  int v1;
  uint64_t v2;

  insert_padding(v2, v1, a1);
}

void OUTLINED_FUNCTION_18_47()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  can_split_abs_line(v2, v1, v0);
}

void OUTLINED_FUNCTION_19_47()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  can_split_ptr_line(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_46()
{
  uint64_t v0;

  return rb_width(*(_QWORD *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_21_45()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_22_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  add_tokens(v1, v0, v2);
}

void OUTLINED_FUNCTION_23_42()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  space_syncs(v1, v0, v2);
}

void OUTLINED_FUNCTION_24_41()
{
  prev_ptr_split();
}

void OUTLINED_FUNCTION_25_41()
{
  prev_abs_split();
}

void OUTLINED_FUNCTION_26_40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  vf_puts(v4, v3, a3, 0);
}

void OUTLINED_FUNCTION_27_38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v4;
  int v5;
  uint64_t v6;

  place_char(v6, v5, v4, a4);
}

uint64_t OUTLINED_FUNCTION_28_38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

void OUTLINED_FUNCTION_31_36(uint64_t a1, int a2)
{
  place_char_in_stream(a1, a2);
}

void OUTLINED_FUNCTION_32_36(uint64_t a1, int a2, int a3)
{
  insert_padding(a1, a2, a3);
}

_BYTE *OUTLINED_FUNCTION_33_36()
{
  return hashNew(347, 0, 0);
}

void OUTLINED_FUNCTION_34_35(uint64_t a1, int a2, int a3)
{
  place_char(a1, a2, a3, 124);
}

uint64_t OUTLINED_FUNCTION_35_35()
{
  uint64_t v0;
  uint64_t v1;

  return time_stream(*(char *)(*(_QWORD *)(v0 + 32) + v1));
}

uint64_t OUTLINED_FUNCTION_36_35(unsigned int a1)
{
  uint64_t v1;

  return find_sync(v1, a1);
}

char *OUTLINED_FUNCTION_38_33(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  int v4;
  int v5;

  return field_value(v4, a2, v5, a4);
}

void OUTLINED_FUNCTION_39_30(uint64_t a1, int a2)
{
  char v2;
  int v3;

  place_char(a1, a2, v3, v2);
}

uint64_t OUTLINED_FUNCTION_40_28()
{
  uint64_t v0;
  unsigned int v1;

  return find_sync(v0, v1);
}

uint64_t OUTLINED_FUNCTION_41_28(uint64_t a1)
{
  int v1;

  return time_field_value(v1, a1);
}

uint64_t OUTLINED_FUNCTION_42_28()
{
  uint64_t v0;
  uint64_t v1;

  return absoluteSyncNum(v0, v1);
}

uint64_t OUTLINED_FUNCTION_43_28()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_44_28(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return find_sync(a2, a4);
}

uint64_t OUTLINED_FUNCTION_45_26(uint64_t a1)
{
  int v1;

  return rb_gets(a1, v1, 0);
}

void OUTLINED_FUNCTION_47_25(uint64_t a1)
{
  int v1;

  rb_push(a1, v1, 1);
}

uint64_t OUTLINED_FUNCTION_49_23()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_51_22(uint64_t a1, int a2, int a3)
{
  place_char(a1, a2, a3, 45);
}

unsigned __int16 *OUTLINED_FUNCTION_52_21()
{
  uint64_t v0;

  return pvlist_size(*(unsigned __int16 **)(v0 + 16));
}

_QWORD *OUTLINED_FUNCTION_55_19()
{
  return rb_alloc(1, 0);
}

void OUTLINED_FUNCTION_56_19(uint64_t a1)
{
  int v1;
  int v2;

  rb_push(a1, v2, v1);
}

uint64_t vardesc(uint64_t a1, __int16 a2, unsigned __int16 a3, uint64_t a4)
{
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = a3 | (a2 << 8);
  if ((a2 & 0x80) != 0)
    return *(_QWORD *)(a1 + 192) + 24 * ((a3 | (unsigned __int16)(a2 << 8)) & 0x3FFF) + 9144;
  v5 = a4;
  v6 = *(_QWORD *)(a1 + 192);
  if (!a4)
  {
    v5 = *(_QWORD *)(v6 + 8104);
LABEL_8:
    result = *(_QWORD *)(*(_QWORD *)(v6 + 8112) + 8);
    if (!result)
      return result;
    return *(_QWORD *)(v5 + 16) + 24 * (v4 & 0x3FFF);
  }
  if (*(_QWORD *)(v6 + 8104) == a4)
    goto LABEL_8;
  result = vonstack(a1, a4);
  if (result)
    return *(_QWORD *)(v5 + 16) + 24 * (v4 & 0x3FFF);
  return result;
}

_QWORD *rb_alloc(int a1, int a2)
{
  size_t v3;
  _DWORD *v4;
  _QWORD *v5;
  int v6;
  void *v7;
  uint64_t i;
  void *v9;
  void **v10;

  LODWORD(v3) = a1;
  v4 = malloc_type_malloc(0x18uLL, 0x1080040216EE090uLL);
  v5 = v4;
  if (v4)
  {
    if (a2 >= 1)
      v6 = 96 * (a2 / 0x60u) + 96;
    else
      v6 = 96;
    if ((int)v3 <= 1)
      v3 = 1;
    else
      v3 = v3;
    *v4 = v3;
    v4[1] = v6;
    v4[2] = -1;
    v7 = malloc_type_calloc(v3, 8uLL, 0x10040436913F5uLL);
    v5[2] = v7;
    if (v7)
    {
      for (i = 0; v3 != i; ++i)
      {
        v9 = OUTLINED_FUNCTION_1_76(v6 + 1);
        *(_QWORD *)(v5[2] + 8 * i) = v9;
        if (!v9)
        {
          while (1)
          {
            v10 = (void **)v5[2];
            if ((i & 0x80000000) != 0)
              break;
            free(v10[i]);
            LODWORD(i) = i - 1;
          }
          free(v10);
          goto LABEL_16;
        }
        init_line(*(void **)(v5[2] + 8 * i), v6);
      }
    }
    else
    {
LABEL_16:
      free(v5);
      return 0;
    }
  }
  return v5;
}

void *init_line(void *a1, int a2)
{
  void *result;

  result = memset(a1, 32, a2);
  *((_BYTE *)a1 + a2) = 0;
  return result;
}

void rb_free(_QWORD *a1)
{
  uint64_t i;
  void **v3;

  if (a1)
  {
    for (i = 0; ; ++i)
    {
      v3 = (void **)a1[2];
      if (i >= *(int *)a1)
        break;
      free(v3[i]);
    }
    free(v3);
    free(a1);
  }
}

void rb_putc(uint64_t a1, int a2, int a3, char a4)
{
  int v8;
  int v9;
  int v10;

  expand_lines((int *)a1, a2);
  if (v8)
  {
    expand_cols((int *)a1, a3);
    if (v9)
    {
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2) + a3) = a4;
      v10 = *(_DWORD *)(a1 + 8);
      if (v10 <= a3)
        v10 = a3;
      *(_DWORD *)(a1 + 8) = v10;
    }
  }
  OUTLINED_FUNCTION_0_83();
}

void expand_lines(int *a1, int a2)
{
  int v4;
  void *v5;
  uint64_t i;
  void *v7;
  uint64_t v8;
  void **v9;

  if (*a1 <= a2)
  {
    v4 = a2 + 1;
    v5 = OUTLINED_FUNCTION_2_74(*((void **)a1 + 2), 8 * (a2 + 1));
    if (v5)
    {
      *((_QWORD *)a1 + 2) = v5;
      for (i = *a1; ; ++i)
      {
        if (i > a2)
        {
          *a1 = v4;
          goto LABEL_11;
        }
        v7 = OUTLINED_FUNCTION_1_76(a1[1] + 1);
        *(_QWORD *)(*((_QWORD *)a1 + 2) + 8 * i) = v7;
        if (!v7)
          break;
        init_line(*(void **)(*((_QWORD *)a1 + 2) + 8 * i), a1[1]);
      }
      while (1)
      {
        v8 = *a1;
        v9 = (void **)*((_QWORD *)a1 + 2);
        if (i < v8)
          break;
        free(v9[i--]);
      }
      *((_QWORD *)a1 + 2) = OUTLINED_FUNCTION_2_74(v9, 8 * v8);
    }
  }
LABEL_11:
  OUTLINED_FUNCTION_0_83();
}

void expand_cols(int *a1, int a2)
{
  uint64_t v3;
  int v4;
  int v5;
  size_t v6;
  uint64_t v7;
  void *v8;

  if (a1[1] <= a2)
  {
    v3 = 0;
    v4 = 96 * ((a2 + 1) / 96);
    v5 = v4 + 96;
    v6 = v4 + 97;
    while (1)
    {
      v7 = *a1;
      if (v3 >= v7)
        break;
      v8 = malloc_type_realloc(*(void **)(*((_QWORD *)a1 + 2) + 8 * v3), v6, 0x100004077774924uLL);
      if (!v8)
      {
        LODWORD(v7) = *a1;
        break;
      }
      *(_QWORD *)(*((_QWORD *)a1 + 2) + 8 * v3) = v8;
      init_line((void *)(*(_QWORD *)(*((_QWORD *)a1 + 2) + 8 * v3++) + a1[1]), v5 - a1[1]);
    }
    if ((int)v7 <= (int)v3)
    {
      a1[1] = v5;
    }
    else
    {
      for (; (v3 & 0x80000000) == 0; LODWORD(v3) = v3 - 1)
        *(_QWORD *)(*((_QWORD *)a1 + 2) + 8 * v3) = malloc_type_realloc(*(void **)(*((_QWORD *)a1 + 2)+ 8 * v3), a1[1] + 1, 0x421C09F8uLL);
    }
  }
  OUTLINED_FUNCTION_0_83();
}

void rb_insc(int *a1, int a2, int a3, char a4)
{
  uint64_t v4;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  _BYTE *v13;

  OUTLINED_FUNCTION_6_65(a1, a2);
  if (v8)
  {
    expand_cols((int *)v4, a3);
    if (v9)
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * a2);
      v11 = *(int *)(v4 + 4);
      if (*(_BYTE *)(v11 + v10 - 1) == 32)
      {
LABEL_6:
        v13 = (_BYTE *)(v10 + a3);
        memmove(v13 + 1, v13, (int)v11 + ~a3);
        *v13 = a4;
        ++*(_DWORD *)(v4 + 8);
        goto LABEL_7;
      }
      expand_cols((int *)v4, v11 + 1);
      if (v12)
      {
        v10 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * a2);
        LODWORD(v11) = *(_DWORD *)(v4 + 4);
        goto LABEL_6;
      }
    }
  }
LABEL_7:
  OUTLINED_FUNCTION_0_83();
}

void rb_inscn(int *a1, int a2, int a3, int a4, int a5)
{
  uint64_t v5;
  int v10;
  int v11;
  int v12;
  int v13;
  int v15;
  char *v16;
  int v17;

  OUTLINED_FUNCTION_6_65(a1, a2);
  if (v10)
  {
    v11 = *(_DWORD *)(v5 + 8);
    v12 = v11 - a5;
    if (v11 >= -1)
      v13 = -1;
    else
      v13 = *(_DWORD *)(v5 + 8);
    if ((v11 & 0x80000000) == 0)
    {
      while (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * a2) + v11) == 32 && v11 > v12)
      {
        if (--v11 < 0)
          goto LABEL_13;
      }
      v13 = v11;
    }
LABEL_13:
    expand_cols((int *)v5, v13 + a5);
    if (v15)
    {
      v16 = (char *)(*(_QWORD *)(*(_QWORD *)(v5 + 16) + 8 * a2) + a3);
      if ((v11 & 0x80000000) == 0)
        memmove(&v16[a5], v16, v13 - a3 + 1);
      memset(v16, a4, a5);
      v17 = *(_DWORD *)(v5 + 8);
      if (v17 <= v13 + a5)
        v17 = v13 + a5;
      *(_DWORD *)(v5 + 8) = v17;
    }
  }
  OUTLINED_FUNCTION_3_73();
}

void rb_puts(int *a1, int a2, int a3, char *a4)
{
  uint64_t v4;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  char v12;
  int v13;

  OUTLINED_FUNCTION_6_65(a1, a2);
  if (v8)
  {
    v9 = 0;
    v10 = a3;
    while (*a4)
    {
      expand_cols((int *)v4, a3 + v9);
      if (!v11)
        goto LABEL_9;
      v12 = *a4++;
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) + 8 * a2) + v10) = v12;
      ++v9;
      ++v10;
    }
    v13 = *(_DWORD *)(v4 + 8);
    if (v13 < v9)
      v13 = v9 - 2;
    *(_DWORD *)(v4 + 8) = v13;
  }
LABEL_9:
  OUTLINED_FUNCTION_4_69();
}

void rb_puts_v(int *a1, int a2, int a3, char *a4)
{
  int v8;
  int v9;
  char v10;
  char v11;
  int v12;

  expand_cols(a1, a3);
  if (v8)
  {
    while (*a4)
    {
      expand_lines(a1, a2);
      if (!v9)
        goto LABEL_11;
      v10 = *a4++;
      OUTLINED_FUNCTION_5_66(v10);
    }
    v11 = 32;
    while (a2 < (uint64_t)*a1)
      OUTLINED_FUNCTION_5_66(v11);
    v12 = a1[2];
    if (v12 <= a3)
      v12 = a3;
    a1[2] = v12;
  }
LABEL_11:
  OUTLINED_FUNCTION_4_69();
}

void rb_stradd(int *a1, int a2, unsigned __int8 *a3)
{
  int v4;
  int v6;
  int v7;
  uint64_t v8;
  int i;
  int v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  char v23;
  int v24;

  v4 = a2;
  v6 = 0;
  v7 = a2 - 1;
  v8 = a2;
  if (!a1)
    goto LABEL_3;
LABEL_2:
  for (i = *a1; v6 < i; i = 0)
  {
    v10 = a1[1];
    v11 = v4 < 1 || v10 < v4;
    if (v11 || (v12 = OUTLINED_FUNCTION_7_64(), rb_getc(v12, v13, v7) == 32))
    {
      v14 = v10;
      if (v10 <= v4)
        goto LABEL_23;
      v15 = v8;
      v16 = a3;
      while (*v16++)
      {
        if (v15 >= v14 || (v18 = OUTLINED_FUNCTION_7_64(), rb_getc(v18, v19, v15) != 32))
        {
          if ((int)v15 < (int)v14)
            goto LABEL_20;
          goto LABEL_23;
        }
        ++v15;
      }
      if ((int)v15 >= (int)v14)
        goto LABEL_23;
      v20 = OUTLINED_FUNCTION_7_64();
      if (rb_getc(v20, v21, v15) == 32)
        goto LABEL_23;
    }
LABEL_20:
    ++v6;
    if (a1)
      goto LABEL_2;
LABEL_3:
    ;
  }
  do
  {
LABEL_23:
    v24 = *a3++;
    v23 = v24;
    if (!v24)
      break;
    rb_putc((uint64_t)a1, v6, v4++, v23);
  }
  while (v22);
}

unsigned int *rb_lines(unsigned int *result)
{
  if (result)
    return (unsigned int *)*result;
  return result;
}

uint64_t rb_getc(uint64_t a1, int a2, int a3)
{
  if (*(_DWORD *)a1 <= a2 || *(_DWORD *)(a1 + 4) <= a3)
    return 0;
  else
    return *(char *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2) + a3);
}

void rb_strdel(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int i;
  uint64_t j;

  v4 = 0;
  v5 = a2;
  v6 = a2 - 1;
  if (!a1)
    goto LABEL_3;
LABEL_2:
  for (i = *(_DWORD *)a1; v4 < i; i = 0)
  {
    if (rb_getc(a1, v4, a2) != 32
      && (!a2 || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4) + v6) == 32))
    {
      for (j = v5; *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v4) + j) != 32; ++j)
        rb_putc(a1, v4, j, 32);
    }
    ++v4;
    if (a1)
      goto LABEL_2;
LABEL_3:
    ;
  }
}

void rb_push(uint64_t a1, int a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int i;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int *v18;
  int v19;
  int v20;
  int v21;

  v6 = 0;
  v7 = a2 - 1;
  v8 = a2 + 1;
  v9 = a2 + 1;
  if (!a1)
    goto LABEL_3;
LABEL_2:
  for (i = *(_DWORD *)a1; v6 < i; i = 0)
  {
    if (a2)
    {
      v11 = rb_getc(a1, v6, a2);
      v12 = a2;
      if (v11 != 32)
      {
        v13 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * v6);
        v12 = a2;
        if (*(_BYTE *)(v13 + v7) != 32)
        {
          v14 = *(int *)(a1 + 4);
          if ((int)v14 <= v8)
            v15 = v8;
          else
            v15 = *(_DWORD *)(a1 + 4);
          v16 = v9;
          v12 = a2;
          while (v16 < v14)
          {
            v17 = *(unsigned __int8 *)(v13 + v16);
            ++v12;
            ++v16;
            if (v17 == 32)
              goto LABEL_16;
          }
          v12 = v15;
        }
      }
    }
    else
    {
      v12 = 0;
    }
LABEL_16:
    if (v12 < *(_DWORD *)(a1 + 4))
    {
      v18 = (int *)OUTLINED_FUNCTION_7_64();
      rb_inscn(v18, v19, v20, 32, a3);
      if (!v21)
        break;
    }
    ++v6;
    if (a1)
      goto LABEL_2;
LABEL_3:
    ;
  }
  OUTLINED_FUNCTION_3_73();
}

uint64_t rb_gets(uint64_t a1, int a2, int a3)
{
  if (*(_DWORD *)a1 > a2 && *(_DWORD *)(a1 + 4) >= a3)
    return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8 * a2) + a3;
  else
    return 0;
}

uint64_t rb_width(uint64_t result)
{
  if (result)
    return (*(_DWORD *)(result + 8) + 1);
  return result;
}

void *OUTLINED_FUNCTION_1_76(size_t a1)
{
  return malloc_type_calloc(a1, 1uLL, 0x100004077774924uLL);
}

void *OUTLINED_FUNCTION_2_74(void *a1, size_t a2)
{
  return malloc_type_realloc(a1, a2, 0x10040436913F5uLL);
}

void OUTLINED_FUNCTION_5_66(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) + 8 * v2) + v3) = a1;
}

void OUTLINED_FUNCTION_6_65(int *a1, int a2)
{
  expand_lines(a1, a2);
}

uint64_t OUTLINED_FUNCTION_7_64()
{
  uint64_t v0;

  return v0;
}

uint64_t calcMidline(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;

  v3 = *(__int16 *)(a2 + 2) & ~(*(__int16 *)(a2 + 2) >> 31);
  if (v3 >= 0x64)
    v3 = 100;
  *(_WORD *)(a3 + 2) = MidlineVals[v3];
  return OUTLINED_FUNCTION_0_84();
}

uint64_t f0_stepi(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;

  v6 = *(__int16 *)(a3 + 2);
  v7 = *(__int16 *)(a5 + 2) * *(__int16 *)(a4 + 2);
  if (v7 + v6 < 1)
    v7 = 20 - v6;
  if (v7 << 16)
  {
    v8 = (__int16)v7;
    if (v6 >= 4208)
      v9 = 4208;
    else
      v9 = *(__int16 *)(a3 + 2);
    v10 = v9 & ~(v9 >> 31);
    v11 = v10 >> 4;
    v12 = v10 & 0xF;
    if (v12)
    {
      v13 = LnTable[v11 + 1];
      v14 = LnTable[v11];
      v11 = v14 + (((v13 - v14) * v12) >> 4);
    }
    else
    {
      LOWORD(v11) = LnTable[v11];
    }
    v16 = v8 + v6;
    if (v16 >= 4208)
      v16 = 4208;
    v17 = (__int16)v16;
    if (v16 < 0)
      v17 = 0;
    v18 = v17 >> 4;
    v19 = v17 % 16;
    if (v19)
      v18 = LnTable[v18] + (((LnTable[v18 + 1] - LnTable[v18]) * (__int16)v19) >> 4);
    else
      LOWORD(v18) = LnTable[(__int16)v18];
    v15 = ((__int16)v11 - (__int16)v18) / *(__int16 *)(a2 + 2);
  }
  else
  {
    LOWORD(v15) = 0;
  }
  *(_WORD *)(a6 + 2) = v15;
  return OUTLINED_FUNCTION_0_84();
}

uint64_t calcIntoni(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_WORD *)(a2 + 2);
  if (*(_WORD *)(a3 + 2))
  {
    LODWORD(v6) = *(__int16 *)(a4 + 2) * *(__int16 *)(a3 + 2);
    if ((int)v6 >= 1023)
      LODWORD(v6) = 1023;
    if ((int)v6 >= 0)
      v6 = (__int16)v6;
    else
      v6 = 0;
    v7 = ExpTable[v6] * (uint64_t)*(__int16 *)(a2 + 2);
    if (v7 <= 0x1FFFFFFF)
      v5 = (unint64_t)v7 >> 14;
    else
      v5 = 0x7FFF;
  }
  *(_WORD *)(a5 + 2) = v5;
  return OUTLINED_FUNCTION_0_84();
}

uint64_t scaleValue100i(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(__int16 *)(a1 + 2);
  v5 = *(__int16 *)(a2 + 2);
  if (v5 >= *(__int16 *)(a4 + 2) * *(__int16 *)(a3 + 2) / 100)
    v5 = *(__int16 *)(a4 + 2) * *(__int16 *)(a3 + 2) / 100;
  if (v5 >= v4)
    LOWORD(v4) = v5;
  *(_WORD *)(a4 + 2) = v4;
  return OUTLINED_FUNCTION_0_84();
}

uint64_t calcSpeedFactori(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;

  v3 = *(__int16 *)(a2 + 2) & ~(*(__int16 *)(a2 + 2) >> 31);
  if (v3 >= 0x96)
    v3 = 150;
  *(_QWORD *)(a3 + 8) = SpeedTable[v3];
  return OUTLINED_FUNCTION_0_84();
}

uint64_t modulate_pwindi(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;

  v4 = *(__int16 *)(a2 + 2);
  if (v4 >= 9)
    v4 = 9;
  if (v4 <= 1)
    v4 = 1;
  *(_WORD *)(a3 + 2) = (PwindModTable[v4] * *(__int16 *)(a3 + 2)) >> 7;
  if (v4 <= 4)
    v5 = v4 + 95;
  else
    v5 = 105 - v4;
  *(_WORD *)(a4 + 2) = v5 * *(__int16 *)(a4 + 2) / 100;
  return OUTLINED_FUNCTION_0_84();
}

uint64_t modulo(uint64_t a1, __int16 *a2, __int16 *a3, double *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  getDeltaCcodeParm(a2, &v9, -3);
  getDeltaCcodeParm(a3, &v8, -3);
  v7 = v9 % v8;
  setDeltaCcodeReturnValue((double *)&v7, -3, a4);
  return 0;
}

uint64_t IntLog(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  int v4;

  v3 = *(__int16 *)(a2 + 2) & ~(*(__int16 *)(a2 + 2) >> 31);
  if (v3 >= 0x1400)
    v3 = 5120;
  v4 = LogTab[v3 >> 5];
  *(_WORD *)(a3 + 2) = v4 + (((LogTab[(v3 >> 5) + 1] - v4) * (v3 & 0x1F)) >> 5);
  return OUTLINED_FUNCTION_0_84();
}

uint64_t IntExp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  unsigned int v4;
  int v5;

  v3 = *(__int16 *)(a2 + 2);
  if (v3 <= 2400)
    v3 = 2400;
  if (v3 >= 0x1450)
    v3 = 5200;
  v4 = (v3 - 2400) >> 4;
  v5 = ExpTab[v4];
  *(_WORD *)(a3 + 2) = v5 + (((ExpTab[v4 + 1] - v5) * (v3 & 0xFu)) >> 4);
  return OUTLINED_FUNCTION_0_84();
}

uint64_t OUTLINED_FUNCTION_0_84()
{
  return 0;
}

_DWORD *clr_vector(_DWORD *result, uint64_t a2)
{
  uint64_t i;

  for (i = a2 & ~(a2 >> 63); i; --i)
    *result++ = 0;
  return result;
}

__int16 *mul1_vector(__int16 *result, float a2, float *a3, uint64_t a4)
{
  uint64_t i;
  int v5;

  for (i = a4 & ~(a4 >> 63); i; --i)
  {
    v5 = *result++;
    *a3 = *a3 + (float)(a2 * (float)v5);
    ++a3;
  }
  return result;
}

float *mulf_vector(float *result, float a2, float *a3, uint64_t a4)
{
  uint64_t i;
  float v5;

  for (i = a4 & ~(a4 >> 63); i; --i)
  {
    v5 = *result++;
    *a3 = *a3 + (float)(a2 * v5);
    ++a3;
  }
  return result;
}

float parallel0_filter(float *a1, float *a2, uint64_t a3)
{
  float *v3;
  float v4;
  float *v5;
  uint64_t i;
  float *v7;
  float result;

  *(a2 - 2) = a1[13];
  v3 = a1 + 12;
  v4 = a1[12];
  *(a2 - 1) = v4;
  v5 = a2;
  for (i = a3 & ~(a3 >> 63); i; --i)
  {
    v4 = (float)(a1[2] * *(v5 - 2)) + (float)(a1[1] * v4);
    *v5++ = v4;
  }
  v7 = &a2[a3 & ~(a3 >> 63)];
  if (a3 > 1)
    v3 = v7 - 2;
  a1[13] = *v3;
  result = *(v7 - 1);
  a1[12] = result;
  return result;
}

uint64_t output_speech(uint64_t result, uint64_t a2)
{
  _BYTE *v2;
  uint64_t *v3;
  float v4;
  uint64_t i;
  int v6;
  uint64_t v7;

  v2 = (_BYTE *)(result + 8662);
  if (*(_BYTE *)(result + 8866))
  {
    v6 = a2;
    v3 = (uint64_t *)(result + 2048);
    v7 = result + 2048;
    v4 = *(float *)(result + 148);
    if (v4 != 1.0)
    {
      for (i = a2 & ~(a2 >> 63); i; --i)
      {
        *v3 = (uint64_t)(float)(v4 * (float)*v3);
        ++v3;
      }
    }
    if (*(_DWORD *)(result + 3720) == 2)
    {
      result = (*(uint64_t (**)(_QWORD, int *))(result + 3728))(*(_QWORD *)(result + 8), &v6);
      *v2 = result;
    }
  }
  return result;
}

BOOL verifyKlattHandle(const char **a1)
{
  return strcmp(*a1, KlattVersion) == 0;
}

void klatt_new(uint64_t a1)
{
  char *v2;

  v2 = (char *)malloc_type_calloc(1uLL, 0x22A8uLL, 0x10F20402EFE26D7uLL);
  if (v2)
  {
    *(_QWORD *)v2 = KlattVersion;
    *((_QWORD *)v2 + 1) = a1;
    *((_DWORD *)v2 + 38) = 0;
    *((_DWORD *)v2 + 1588) = 0;
    *((_WORD *)v2 + 4330) = 0;
    *(_OWORD *)(v2 + 6504) = 0u;
    *((_QWORD *)v2 + 817) = 0;
    *((_QWORD *)v2 + 819) = 0;
    *((_QWORD *)v2 + 818) = 0;
    v2[8866] = 1;
  }
  OUTLINED_FUNCTION_13_54();
}

void klatt_delete(const char **a1)
{
  void *v1;

  if (OUTLINED_FUNCTION_2_75(a1))
    free(v1);
  else
    OUTLINED_FUNCTION_12_55();
}

uint64_t errorKlattIgnore()
{
  return 0;
}

void *KlattSetConstParms(const char **a1, const void *a2)
{
  uint64_t v2;
  void *result;
  float v5;
  __int16 v6;
  float v7;
  int v8;

  result = (void *)OUTLINED_FUNCTION_2_75(a1);
  if ((_DWORD)result)
  {
    if (*(_DWORD *)(v2 + 152) == 2)
      KlattClose((const char **)v2);
    result = memcpy((void *)(v2 + 3648), a2, 0x58uLL);
    v5 = *(float *)(v2 + 3652);
    *(float *)(v2 + 6412) = 1000.0 / v5;
    *(float *)(v2 + 6408) = v5 * 0.001;
    v6 = *(_WORD *)(v2 + 3664);
    *(_WORD *)(v2 + 8656) = v6;
    *(_WORD *)(v2 + 8658) = v6;
    *(_QWORD *)(v2 + 6392) = 0;
    v7 = (float)((float)(1000.0 / v5) * 3.1416) * 0.001;
    *(float *)(v2 + 6400) = v7;
    *(float *)(v2 + 6404) = v7 + v7;
    *(_QWORD *)(v2 + 8160) = *(int *)(v2 + 3660);
    *(_BYTE *)(v2 + 8865) = 0;
    *(_QWORD *)(v2 + 8200) = (uint64_t)*(float *)(v2 + 3680);
    *(_QWORD *)(v2 + 8208) = (uint64_t)*(float *)(v2 + 3692);
    *(_QWORD *)(v2 + 8216) = (uint64_t)*(float *)(v2 + 3684);
    *(_QWORD *)(v2 + 8224) = (uint64_t)*(float *)(v2 + 3688);
    if (v5 == 11025.0)
    {
      v8 = 1;
    }
    else if (v5 == 16000.0)
    {
      v8 = 2;
    }
    else
    {
      if (v5 == 8000.0)
      {
        *(_DWORD *)(v2 + 8868) = 0;
        goto LABEL_9;
      }
      v8 = 3;
    }
    *(_DWORD *)(v2 + 8868) = v8;
LABEL_9:
    *(_BYTE *)(v2 + 24) = 1;
  }
  return result;
}

void KlattClose(const char **a1)
{
  uint64_t v1;

  if (OUTLINED_FUNCTION_2_75(a1))
    *(_DWORD *)(v1 + 152) = 0;
  OUTLINED_FUNCTION_12_55();
}

BOOL KlattOpen(const char **a1)
{
  uint64_t v1;
  _BOOL8 result;
  uint64_t v3;
  uint64_t v4;

  result = OUTLINED_FUNCTION_2_75(a1);
  if (result)
  {
    if (*(_BYTE *)(v1 + 24) != 1)
    {
      (*(void (**)(_QWORD, const char *, const char *))(v1 + 3712))(*(_QWORD *)(v1 + 8), " KlattOpen error", "Call KlattSetConstParms at least once before KlattOpen!");
      return 0;
    }
    if (*(_DWORD *)(v1 + 152) == 2)
    {
      (*(void (**)(_QWORD, const char *, const char *))(v1 + 3712))(*(_QWORD *)(v1 + 8), " KlattOpen error", "Synthesizer is already open!");
      return 0;
    }
    v3 = 0;
    *(_DWORD *)(v1 + 152) = 2;
    *(_QWORD *)(v1 + 4544) = v1 + 3744;
    *(_QWORD *)(v1 + 6168) = v1 + 5364;
    *(_DWORD *)(v1 + 6364) = 0;
    while (v3 != 1848)
    {
      v4 = v1 + v3;
      *(_DWORD *)(v4 + 232) = 0;
      *(_DWORD *)(v4 + 216) = 0;
      *(_QWORD *)(v4 + 208) = 0;
      v3 += 88;
      *(_QWORD *)(v4 + 240) = 0;
    }
    *(_QWORD *)(v1 + 16) = 0;
    *(_DWORD *)(v1 + 6360) = 0;
    *(_QWORD *)(v1 + 6352) = 0;
    *(_OWORD *)(v1 + 6504) = 0u;
    *(_QWORD *)(v1 + 6536) = 0;
    *(_QWORD *)(v1 + 6552) = 0;
    *(_QWORD *)(v1 + 6544) = 0;
    result = 1;
    *(_BYTE *)(v1 + 8866) = 1;
    *(_WORD *)(v1 + 8660) = 0;
  }
  return result;
}

void KlattSetOutputSamplesOption(uint64_t a1, char a2)
{
  if (verifyKlattHandle((const char **)a1))
    *(_BYTE *)(a1 + 8866) = a2;
  OUTLINED_FUNCTION_12_55();
}

void KlattLength(const char **a1)
{
  OUTLINED_FUNCTION_2_75(a1);
  OUTLINED_FUNCTION_13_54();
}

void KlattMax(const char **a1)
{
  OUTLINED_FUNCTION_2_75(a1);
  OUTLINED_FUNCTION_13_54();
}

BOOL KlattSynth(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  _QWORD *v5;
  float v6;
  float v7;
  float v8;
  uint64_t v9;
  uint64_t v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;
  float v20;
  float v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int64x2_t v31;
  int64x2_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  float v39;
  double v40;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  float v47;
  float v48;
  float v49;
  float v50;
  float *v51;
  uint64_t i;
  float *v53;
  uint64_t v54;
  float v55;
  float v56;
  float v57;
  float v58;
  uint64_t v59;
  uint64_t v60;
  float v61;
  float v62;
  float v63;
  uint64_t v64;
  float *v65;
  float v66;
  float v67;
  float v68;
  uint64_t v69;
  float v70;
  uint64_t v71;
  float v72;
  uint64_t v73;
  uint64_t v74;
  float *v75;
  float v76;
  uint64_t v77;
  float v78;
  uint64_t v79;
  uint64_t j;
  uint64_t v81;
  uint64_t v82;
  uint64_t k;
  float *v84;
  float v85;
  uint64_t v86;
  uint64_t v87;
  float v88;
  uint64_t v89;
  uint64_t v90;
  float v91;
  float v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  float v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  float v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  float v113;
  float v114;
  float v115;
  float v116;
  float v117;
  float v118;
  float v119;
  float v120;
  float v121;
  uint64_t v122;
  float v123;
  float v124;
  float v125;
  uint64_t v126;
  uint64_t v127;
  _DWORD *v128;
  float v129;
  float v130;
  float v131;
  uint64_t v132;
  float v133;
  float v134;
  float v135;
  int v136;
  char *v137;
  uint64_t m;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int v142;
  float v143;
  float v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  float v157;
  float v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  float *v172;
  uint64_t v173;
  float *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  float *v179;
  uint64_t v180;
  double v181;
  double v182;
  int v183;
  int v184;
  float v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  float *v191;
  uint64_t v192;
  float *n;
  float v194;
  float v195;
  float *v196;
  uint64_t v197;
  float v198;
  float v199;
  float v200;
  float *ii;
  uint64_t v202;
  uint64_t v203;
  float *v204;
  float *v205;
  float *v206;
  float *v207;
  float v208;
  __int16 v209;
  uint64_t v210;
  uint64_t v211;
  float *v212;
  uint64_t v213;
  float v214;
  uint64_t v215;
  uint64_t v216;
  float *v217;
  float v218;
  float *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t jj;
  float v223;
  uint64_t v224;
  uint64_t v225;
  float v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  float *v230;
  int v231;
  float v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _OWORD v243[2];
  uint64_t v244;
  int64x2_t v245;
  uint64_t v246;
  float v247[5];
  _DWORD v248[8];
  __int128 v249;
  int v250;
  uint64_t v251;
  int v252;
  _DWORD v253[5];
  _DWORD v254[5];
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  int v260;
  int v261;
  int v262;
  int v263;
  int v264;
  int v265;
  uint64_t v266;

  v266 = *MEMORY[0x24BDAC8D0];
  result = verifyKlattHandle((const char **)a1);
  if (!result)
    return result;
  v5 = (_QWORD *)(a1 + 6420);
  ++*(_QWORD *)(a1 + 16);
  v6 = *(float *)a2;
  v7 = *(float *)(a1 + 3648);
  v8 = *(float *)(a1 + 6408);
  v9 = (uint64_t)*(float *)(a2 + 8);
  *(_QWORD *)(a1 + 8176) = v9;
  v10 = (uint64_t)*(float *)(a2 + 28);
  *(_QWORD *)(a1 + 8184) = v10;
  v11 = *(float *)(a2 + 32);
  *(_QWORD *)(a1 + 0x2000) = (uint64_t)v11;
  if (v9 | v10)
    *(_DWORD *)(a1 + 6356) = 1101004800;
  v12 = v6 * v7;
  if ((uint64_t)v11)
    *(_DWORD *)(a1 + 6360) = 1101004800;
  v13 = v12 * v8;
  *(_BYTE *)(a1 + 8663) = 0;
  v14 = *(float *)(a2 + 108);
  v15 = *(float *)(a2 + 112);
  v17 = *(float *)(a2 + 116);
  v16 = *(float *)(a2 + 120);
  v19 = *(float *)(a2 + 124);
  v18 = *(float *)(a2 + 128);
  *(float *)&v253[3] = v14;
  *(float *)&v253[4] = v19;
  v247[3] = v15;
  v247[4] = v18;
  v21 = *(float *)(a2 + 132);
  v20 = *(float *)(a2 + 136);
  *(float *)&v253[1] = v17;
  *(float *)&v253[2] = v21;
  v247[1] = v16;
  v247[2] = v20;
  v22 = *(_DWORD *)(a2 + 40);
  v23 = *(_DWORD *)(a2 + 52);
  v24 = *(_DWORD *)(a2 + 56);
  v254[0] = *(_DWORD *)(a2 + 36);
  v254[1] = v23;
  v248[0] = v22;
  v248[1] = v24;
  v25 = *(_DWORD *)(a2 + 60);
  v26 = *(_DWORD *)(a2 + 64);
  v259 = v23;
  v260 = v25;
  v27 = *(_DWORD *)(a2 + 68);
  v28 = *(_DWORD *)(a2 + 72);
  v254[2] = v25;
  v254[3] = v27;
  v248[2] = v26;
  v248[3] = v28;
  v29 = *(_DWORD *)(a2 + 76);
  v30 = *(_DWORD *)(a2 + 80);
  v261 = v27;
  v262 = v29;
  v258 = v254[0];
  v254[4] = v29;
  v248[4] = v30;
  v31 = vcvtq_s64_f64(vcvtq_f64_f32(*(float32x2_t *)(a2 + 140)));
  v249 = *(_OWORD *)(a2 + 176);
  v32 = vcvtq_s64_f64(vcvtq_f64_f32(*(float32x2_t *)(a2 + 148)));
  v243[0] = v31;
  v243[1] = v32;
  v250 = *(_DWORD *)(a2 + 192);
  v244 = (uint64_t)*(float *)(a2 + 156);
  v33 = *(_QWORD *)(a1 + 8160);
  if (v33 >= 6)
  {
    v34 = *(_DWORD *)(a2 + 88);
    v35 = *(_DWORD *)(a2 + 92);
    v36 = *(_DWORD *)(a2 + 96);
    v255 = *(_DWORD *)(a2 + 84);
    v256 = v35;
    v248[5] = v34;
    v248[6] = v36;
    v37 = *(_DWORD *)(a2 + 100);
    v38 = *(_DWORD *)(a2 + 104);
    v264 = v35;
    v265 = v37;
    v263 = v255;
    v257 = v37;
    v248[7] = v38;
    v251 = *(_QWORD *)(a2 + 196);
    v245 = vcvtq_s64_f64(vcvtq_f64_f32(*(float32x2_t *)(a2 + 160)));
    v252 = *(_DWORD *)(a2 + 204);
    v246 = (uint64_t)*(float *)(a2 + 168);
  }
  v234 = (uint64_t)v13;
  v39 = *(float *)(a1 + 6356);
  v40 = v39;
  if (v39 > 0.00001)
  {
    if (v14 == v17 && v15 == v16)
    {
      *(_DWORD *)(a1 + 320) = 0;
      *(_DWORD *)(a1 + 496) = 0;
    }
    else
    {
      *(float *)(a1 + 320) = v39;
      *(float *)(a1 + 496) = v39;
      if (v14 != *(float *)(a1 + 480))
        *(float *)(a1 + 6188) = OUTLINED_FUNCTION_5_67(v14);
      if (v17 != *(float *)(a1 + 304))
        *(float *)(a1 + 6180) = cosf(v17 * *(float *)(a1 + 6404));
      if (v15 != *(float *)(a1 + 484))
        *(float *)(a1 + 6272) = OUTLINED_FUNCTION_9_60();
      if (v16 != *(float *)(a1 + 308))
        *(float *)(a1 + 6264) = expf(-(float)(*(float *)(a1 + 6400) * v16));
    }
    if (v19 == v21 && v18 == v20)
    {
      *(_DWORD *)(a1 + 408) = 0;
      *(_DWORD *)(a1 + 584) = 0;
    }
    else
    {
      *(float *)(a1 + 408) = v39;
      *(float *)(a1 + 584) = v39;
      if (v19 != *(float *)(a1 + 568))
        *(float *)(a1 + 6192) = cosf(v19 * *(float *)(a1 + 6404));
      if (v21 != *(float *)(a1 + 392))
        *(float *)(a1 + 6184) = cosf(v21 * *(float *)(a1 + 6404));
      if (v18 != *(float *)(a1 + 572))
        *(float *)(a1 + 6276) = expf(-(float)(*(float *)(a1 + 6400) * v18));
      if (v20 != *(float *)(a1 + 396))
        *(float *)(a1 + 6268) = expf(-(float)(*(float *)(a1 + 6400) * v20));
    }
  }
  v237 = a2;
  v43 = 0;
  v44 = 0;
  v45 = 0;
  v46 = v33 + 5;
  while (v43 + 5 < v46)
  {
    *(_DWORD *)(a1 + v44 + 672) = *(_DWORD *)(a1 + 6356);
    v47 = *(float *)&v254[v45 / 4];
    if (v47 != *(float *)(a1 + v44 + 656))
      *(float *)(a1 + v45 + 6196) = OUTLINED_FUNCTION_5_67(v47);
    v48 = *(float *)&v248[v45 / 4];
    if (v48 != *(float *)(a1 + v44 + 660) && *(float *)(a1 + 6356) != 0.0)
      *(float *)(a1 + v45 + 6280) = OUTLINED_FUNCTION_10_60(v48);
    v49 = *(float *)(a1 + 6360);
    if (v49 <= 0.00001)
    {
      *(_DWORD *)(a1 + v44 + 1376) = 0;
    }
    else
    {
      if (*((_QWORD *)v243 + v43))
        *(float *)(a1 + v44 + 1376) = v49;
      *(_DWORD *)(a1 + v45 + 6228) = *(_DWORD *)(a1 + v45 + 6196);
      v50 = *(float *)((char *)&v249 + v45);
      if (v50 != *(float *)(a1 + v44 + 1364))
        *(float *)(a1 + v45 + 6312) = OUTLINED_FUNCTION_10_60(v50);
    }
    v45 += 4;
    v44 += 88;
    ++v43;
  }
  v51 = (float *)(a1 + 284);
  for (i = 1; i < v46; ++i)
  {
    if (*(float *)(a1 + 88 * i + 232) != 0.0)
    {
      v53 = (float *)(a1 + 88 * i);
      v54 = a1 + 4 * i;
      v55 = *(float *)(v54 + 6260);
      v56 = -(float)(v55 * v55);
      v53[42] = v56;
      v57 = (float)(v55 * *(float *)(v54 + 6176)) + (float)(v55 * *(float *)(v54 + 6176));
      v53[40] = (float)(1.0 - v57) - v56;
      v53[41] = v57;
      v58 = v53[54];
      if (v58 == 0.0 || *(float *)&v253[i] == v58 && v247[i] == *(float *)(a1 + 88 * i + 220))
      {
        *(_QWORD *)(a1 + 88 * i + 240) = 0;
      }
      else
      {
        v59 = a1 + 88 * i;
        v61 = *(float *)(v59 + 228);
        v60 = v59 + 228;
        *(_QWORD *)(v60 + 12) = 3;
        v62 = (float)(v57 - *(float *)(v60 - 4)) * 0.25;
        v63 = (float)(v56 - v61) * 0.25;
        v64 = -3;
        v65 = v51;
        do
        {
          v66 = (float)(v64 + 4);
          v67 = *(float *)v60 + (float)(v66 * v63);
          *v65 = v67;
          v68 = *(float *)(v60 - 4) + (float)(v66 * v62);
          *(v65 - 3) = v68;
          *(v65 - 6) = (float)(1.0 - v68) - v67;
          ++v64;
          ++v65;
        }
        while (v64);
      }
    }
    v51 += 22;
  }
  v69 = *(_QWORD *)(a1 + 8208) + *(_QWORD *)(a1 + 0x2000) + *(_QWORD *)(a1 + 8224);
  v70 = *(float *)(v237 + 172);
  if (v70 != 0.0)
    *(float *)(a1 + 4552) = db2lin(v69 + (uint64_t)v70) * -0.0000000033599;
  v71 = 0;
  v72 = 0.0000000033599;
  v73 = 6312;
  v74 = 1304;
  while (v71 + 13 < *(_QWORD *)(a1 + 8160) + 13)
  {
    v75 = (float *)(a1 + v74);
    if (*(float *)(a1 + v74 + 72) != 0.0)
    {
      v76 = *(float *)(a1 + v73);
      v75[2] = -(float)(v76 * v76);
      v75[1] = (float)(v76 * *(float *)(a1 + v73 - 84)) + (float)(v76 * *(float *)(a1 + v73 - 84));
      v77 = *((_QWORD *)v243 + v71);
      if (v77)
        v78 = (float)(v72 * db2lin(v77 + v69)) * (float)((float)(1.0 - v75[1]) - v75[2]);
      else
        v78 = 0.0;
      *v75 = v78;
    }
    v72 = -v72;
    ++v71;
    v73 += 4;
    v74 += 88;
  }
  if (*(float *)(a1 + 6356) > 0.0001)
  {
    v79 = a1 + 260;
    for (j = 1; j != 3; ++j)
    {
      if (*(float *)(a1 + 88 * j + 232) != 0.0)
      {
        v81 = a1 + 88 * j;
        LODWORD(v40) = *(_DWORD *)(v81 + 160);
        v82 = a1 + 12 * j;
        *(float *)(v82 + 2008) = 1.0 / *(float *)&v40;
        v40 = COERCE_DOUBLE(vdiv_f32(vneg_f32(*(float32x2_t *)(v81 + 164)), (float32x2_t)vdup_lane_s32(*(int32x2_t *)&v40, 0)));
        *(double *)(v82 + 2012) = v40;
        if (*(_QWORD *)(v81 + 240))
        {
          for (k = 0; k != 12; k += 4)
          {
            v84 = (float *)(v79 + k);
            v85 = *(float *)(v79 + k);
            *v84 = 1.0 / v85;
            v84[3] = (float)-*(float *)(v79 + k + 12) / v85;
            v84[6] = (float)-*(float *)(v79 + k + 24) / v85;
          }
        }
      }
      v79 += 88;
    }
  }
  *(_DWORD *)(a1 + 6376) = *(_DWORD *)(v237 + 4);
  *(_DWORD *)(a1 + 6372) = *(_DWORD *)(v237 + 24);
  *(float *)(a1 + 6388) = *(float *)(v237 + 12) * 0.01;
  v86 = 200;
  if (v234 < 200)
    v86 = v234;
  *(_QWORD *)(a1 + 6448) = v86;
  v87 = *(_QWORD *)(a1 + 8184);
  if (v87)
    v88 = db2lin(*(_QWORD *)(a1 + 8208) + v87 + *(_QWORD *)(a1 + 8216)) * 0.000011921;
  else
    v88 = 0.0;
  v238 = (uint64_t *)(a1 + 6504);
  v239 = a1 + 160;
  v235 = a1 + 512;
  v89 = a1 + 8665;
  v90 = a1 + 2048;
  v91 = 10000.0;
  v92 = 0.001;
  v233 = 1;
  v236 = 1;
  v93 = v234;
  while (v93 >= 1)
  {
    if (*(_QWORD *)(a1 + 6448) >= v93)
      v94 = v93;
    else
      v94 = *(_QWORD *)(a1 + 6448);
    *(_QWORD *)(a1 + 6448) = v94;
    *(float *)(a1 + 6364) = (float)(1000 * v94) / *(float *)(a1 + 3652);
    v241 = v93;
    if (*(float *)(a1 + 6356) >= 0.0001)
    {
      v95 = *v238;
LABEL_94:
      *(_QWORD *)(a1 + 8232) = 0;
      *(_QWORD *)(a1 + 6560) = 0;
      if (v95)
        goto LABEL_95;
      v96 = 0;
      goto LABEL_103;
    }
    v95 = *(_QWORD *)(a1 + 6504);
    if (*(float *)(a1 + 6360) >= 0.0001)
      goto LABEL_94;
    if (v95)
    {
      *(_QWORD *)(a1 + 8232) = 0;
      *(_QWORD *)(a1 + 6560) = 0;
LABEL_95:
      if (v95 >= v94)
        v96 = v94;
      else
        v96 = v95;
      clr_vector(*(_DWORD **)(a1 + 4544), v96);
      *(_QWORD *)(a1 + 6504) -= v96;
      v97 = v94 - v96;
      OUTLINED_FUNCTION_7_65();
      v95 = *(_QWORD *)(a1 + 8232);
      goto LABEL_104;
    }
    if (!*(_QWORD *)(a1 + 6536))
    {
      v98 = *(_QWORD *)(a1 + 6512);
      if (!v98)
      {
        for (m = v94; v98 < m; m = *(_QWORD *)(a1 + 6448))
          *(_QWORD *)(v90 + 8 * v98++) = 0;
        goto LABEL_294;
      }
    }
    v95 = 0;
    v96 = 0;
    *(_QWORD *)(a1 + 6560) = 0;
LABEL_103:
    v97 = v94;
LABEL_104:
    v242 = v94;
    OUTLINED_FUNCTION_0_85(v95);
    v99 = *(_QWORD *)(a1 + 6512);
    if (v99)
    {
      if (v99 >= v97)
        v100 = v97;
      else
        v100 = *(_QWORD *)(a1 + 6512);
      *(_QWORD *)(a1 + 6480) = v100;
      v101 = *(float *)(a1 + 6416);
      v102 = v100 + v96;
      while (v96 < v102)
      {
        *(float *)(*(_QWORD *)(a1 + 4544) + 4 * v96) = v101
                                                     + (float)((float)-(float)(*(float *)(a1 + 6424) * v101) * v101);
        v101 = v101 + *(float *)(a1 + 6420);
        ++v96;
      }
      *(float *)(a1 + 6416) = v101;
      *(_QWORD *)(a1 + 6512) = v99 - v100;
      v97 -= v100;
      OUTLINED_FUNCTION_1_77(v100);
    }
    else
    {
      v102 = v96;
    }
    OUTLINED_FUNCTION_0_85(*(_QWORD *)(a1 + 8232));
    v104 = *(_QWORD *)(a1 + 6536);
    if (v104 && v97)
    {
      if (v104 >= v97)
        v105 = v97;
      else
        v105 = *(_QWORD *)(a1 + 6536);
      *(_QWORD *)(a1 + 6496) = v105;
      OUTLINED_FUNCTION_4_70(v103, v105);
      v106 = *(_QWORD *)(a1 + 6496);
      *(_QWORD *)(a1 + 6536) -= v106;
      v97 -= v106;
      v102 += v106;
      OUTLINED_FUNCTION_1_77(v106);
    }
    if (v102 < 1)
    {
      v107 = 0;
    }
    else
    {
      pole_filter(v239, *(float **)(a1 + 4544), v102);
      v107 = v102;
    }
    v240 = v107;
    if (v97 < 1)
      goto LABEL_199;
    v108 = *(float *)(a1 + 6376);
    if (v108 != 0.0)
    {
      v112 = *(_QWORD *)(a1 + 8176);
      if (v112)
      {
        if (v236)
        {
          v113 = *(float *)(v237 + 20);
          if (v113 != 0.0)
          {
            v114 = v92;
            v115 = v91;
            v116 = (float)(v108 * v113) * 0.0002;
            v117 = OUTLINED_FUNCTION_14_53(0.079796);
            v118 = v117 + OUTLINED_FUNCTION_14_53(0.044611);
            v119 = v116 * (float)(OUTLINED_FUNCTION_14_53(0.029531) + v118);
            v91 = v115;
            v92 = v114;
            *(_QWORD *)(a1 + 8248) = (uint64_t)v119;
            v108 = v108 + (float)(uint64_t)v119;
            *(float *)(a1 + 6376) = v108;
            if (v108 <= 0.0)
            {
              *(_DWORD *)(a1 + 6376) = 1065353216;
              v108 = 1.0;
            }
          }
          *(float *)(a1 + 6380) = v91 / v108;
          v120 = (float)(v91 / v108) * (float)(*(float *)(a1 + 3652) * v92);
          *(float *)(a1 + 6384) = v120;
          v121 = *(float *)(a1 + 6388);
          if (v121 > 0.0)
          {
            v122 = *(_QWORD *)(a1 + 8200) + v112 + *(_QWORD *)(a1 + 8208);
            if (v122 < 1)
            {
              *(_QWORD *)(a1 + 6436) = 0;
            }
            else
            {
              *(float *)(a1 + 6440) = 1.5 / (float)(v121 * v120);
              v123 = db2lin(v122);
              v124 = *(float *)(a1 + 6440);
              v125 = (float)(v123 * 18.469) * v124;
              *(float *)(a1 + 6436) = v125;
              *(float *)(a1 + 6440) = v124 / v125;
            }
          }
          v129 = *(float *)(a1 + 6372);
          if (*(_BYTE *)(a1 + 8660))
          {
            if (v129 == 0.0)
            {
              *(_WORD *)(a1 + 8660) = 0;
              goto LABEL_144;
            }
LABEL_142:
            v130 = 1.0 - (float)(v129 * 0.01);
            *(float *)(a1 + 6368) = v130;
            *(_QWORD *)(a1 + 6464) = (uint64_t)(float)((float)((float)(v129 * *(float *)(a1 + 6384))
                                                            * (float)(1.0 - *(float *)(a1 + 6388)))
                                                    * 0.01);
            if (v130 <= 0.0)
            {
              *(_QWORD *)(a1 + 6428) = 0;
            }
            else
            {
              *(float *)(a1 + 6428) = v130 * *(float *)(a1 + 6436);
              *(float *)(a1 + 6432) = *(float *)(a1 + 6440) / v130;
            }
          }
          else
          {
            if (v129 > 0.0)
            {
              *(_WORD *)(a1 + 8660) = 1;
              goto LABEL_142;
            }
LABEL_144:
            *v5 = *(_QWORD *)(a1 + 6436);
          }
          v131 = *(float *)(v237 + 16);
          if (v131 >= 35.0)
            v131 = 35.0;
          v132 = (uint64_t)v131;
          *(_QWORD *)(a1 + 8168) = (uint64_t)v131;
          if ((uint64_t)v131 && (v133 = *(float *)(a1 + 6356), v133 > 0.0001))
          {
            *(float *)(a1 + 232) = v133;
            *(_QWORD *)(a1 + 240) = 0;
            v134 = tl_table[v132];
            *(float *)v253 = v134;
            v135 = v134 * 0.375;
            v247[0] = v134 * 0.375;
            v136 = *(_DWORD *)(a1 + 8868);
            if (v136)
            {
              if (v136 == 2 || v136 == 1)
              {
                v233 = 0;
                v137 = (char *)&tilt16;
                goto LABEL_159;
              }
              if (v134 != *(float *)(a1 + 216))
                *(float *)(a1 + 6176) = OUTLINED_FUNCTION_5_67(v134);
              if (v135 != *(float *)(a1 + 220))
                *(float *)(a1 + 6260) = OUTLINED_FUNCTION_9_60();
              v233 = 0;
              if (v133 != 0.0)
              {
                v198 = *(float *)(a1 + 6260);
                v199 = -(float)(v198 * v198);
                *(float *)(a1 + 168) = v199;
                v200 = (float)(v198 * *(float *)(a1 + 6176)) + (float)(v198 * *(float *)(a1 + 6176));
                *(float *)(a1 + 160) = (float)(1.0 - v200) - v199;
                *(float *)(a1 + 164) = v200;
                *(_QWORD *)(a1 + 240) = 0;
              }
            }
            else
            {
              v233 = 0;
              v137 = (char *)&tilt8;
LABEL_159:
              v139 = &v137[12 * v132];
              *(_QWORD *)(a1 + 160) = *(_QWORD *)v139;
              *(_DWORD *)(a1 + 168) = *((_DWORD *)v139 + 2);
            }
          }
          else
          {
            *(_DWORD *)(a1 + 232) = 0;
          }
        }
        compute_voicing_size((float *)a1);
        v236 = 0;
        goto LABEL_172;
      }
    }
    if (*(_QWORD *)(a1 + 8184))
    {
      *(_QWORD *)(a1 + 6456) = v97;
      *(_QWORD *)(a1 + 6472) = v97;
      OUTLINED_FUNCTION_11_58();
      v111 = (uint64_t *)(v110 + 6560);
    }
    else
    {
      *(_QWORD *)(a1 + 6472) = 0;
      OUTLINED_FUNCTION_0_85(*(_QWORD *)(a1 + 8232));
      v111 = (uint64_t *)(a1 + 6456);
      v109 = v97;
    }
    *v111 = v97;
    *(_QWORD *)(a1 + 6488) = v109;
    OUTLINED_FUNCTION_11_58();
    *(_QWORD *)(v127 + 6560) = v126;
    v128 = clr_vector((_DWORD *)(*(_QWORD *)(a1 + 4544) + 4 * v102), v97);
    v97 = 0;
    *(_DWORD *)(a1 + 6392) = 0;
LABEL_172:
    while (v97 >= 1 && v97 >= *(_QWORD *)(a1 + 6456))
    {
      if (*(_BYTE *)(a1 + 8660))
      {
        if (*(_BYTE *)(a1 + 8661))
        {
          *v5 = *(_QWORD *)(a1 + 6428);
          v140 = *(_QWORD *)(a1 + 6464);
          *(_QWORD *)(a1 + 6496) = *(_QWORD *)(a1 + 6488) - v140;
          OUTLINED_FUNCTION_4_70((uint64_t)v128, v140);
          v141 = *(_QWORD *)(a1 + 6464);
          v102 += v141;
          OUTLINED_FUNCTION_1_77(v141);
          v142 = *(unsigned __int8 *)(a1 + 8661);
        }
        else
        {
          OUTLINED_FUNCTION_15_51();
        }
        *(_BYTE *)(a1 + 8661) = v142 == 0;
      }
      OUTLINED_FUNCTION_0_85(*(_QWORD *)(a1 + 8232));
      v143 = *(float *)(a1 + 6420);
      if (v143 == 0.0)
      {
        clr_vector((_DWORD *)(*(_QWORD *)(a1 + 4544) + 4 * v102), *(_QWORD *)(a1 + 6472));
        v145 = *(_QWORD *)(a1 + 6472);
        v146 = v145 + v102;
      }
      else
      {
        v144 = v143 * (float)(*(float *)(a1 + 6392) * *(float *)(a1 + 6408));
        v145 = *(_QWORD *)(a1 + 6472);
        v146 = v145 + v102;
        while (v102 < v146)
        {
          *(float *)(*(_QWORD *)(a1 + 4544) + 4 * v102) = v144
                                                        + (float)((float)-(float)(*(float *)(a1 + 6424) * v144) * v144);
          v144 = v144 + *(float *)(a1 + 6420);
          ++v102;
        }
      }
      v147 = a1 + 6560;
      *(_QWORD *)(a1 + 6560 + 8 * *(_QWORD *)(a1 + 8232)) += v145;
      OUTLINED_FUNCTION_3_74();
      *(_QWORD *)(v147 + 8 * v148) = 0;
      clr_vector((_DWORD *)(*(_QWORD *)(a1 + 4544) + 4 * v146), *(_QWORD *)(a1 + 6496));
      v149 = *(_QWORD *)(a1 + 6496);
      v102 = v149 + v146;
      *(_QWORD *)(v147 + 8 * *(_QWORD *)(a1 + 8232)) += v149;
      v97 -= *(_QWORD *)(a1 + 6456);
      compute_v_start((float *)a1);
      compute_voicing_size((float *)a1);
    }
    if (v97 < 1)
    {
      *(_QWORD *)(a1 + 6536) = 0;
      *v238 = 0;
      *(_QWORD *)(a1 + 6512) = 0;
    }
    else
    {
      if (*(_BYTE *)(a1 + 8660))
      {
        if (*(_BYTE *)(a1 + 8661))
        {
          *v5 = *(_QWORD *)(a1 + 6428);
          v151 = *(_QWORD *)(a1 + 6464);
          *(_QWORD *)(a1 + 6496) -= v151;
          if (v151 >= v97)
            v152 = v97;
          else
            v152 = v151;
          clr_vector((_DWORD *)(*(_QWORD *)(a1 + 4544) + 4 * v102), v152);
          *(_QWORD *)(a1 + 6504) = *(_QWORD *)(a1 + 6464) - v152;
          v102 += v152;
          v97 -= v152;
          OUTLINED_FUNCTION_7_65();
          v153 = *(unsigned __int8 *)(a1 + 8661);
        }
        else
        {
          OUTLINED_FUNCTION_15_51();
          *(_QWORD *)(a1 + 6504) = 0;
        }
        *(_BYTE *)(a1 + 8661) = v153 == 0;
      }
      OUTLINED_FUNCTION_0_85(*(_QWORD *)(a1 + 8232));
      v155 = *(_QWORD *)(a1 + 6472);
      if (v155 >= v97)
        v156 = v97;
      else
        v156 = *(_QWORD *)(a1 + 6472);
      *(_QWORD *)(a1 + 6480) = v156;
      v157 = *(float *)(a1 + 6420);
      v158 = (float)(*(float *)(a1 + 6392) * *(float *)(a1 + 6408)) * v157;
      if (v157 == 0.0)
      {
        OUTLINED_FUNCTION_4_70(v154, v156);
        v155 = *(_QWORD *)(a1 + 6472);
        v156 = *(_QWORD *)(a1 + 6480);
        v157 = *(float *)(a1 + 6420);
      }
      else
      {
        v159 = v156 + v102;
        while (v102 < v159)
        {
          *(float *)(*(_QWORD *)(a1 + 4544) + 4 * v102) = v158
                                                        + (float)((float)-(float)(*(float *)(a1 + 6424) * v158) * v158);
          v157 = *(float *)(a1 + 6420);
          v158 = v158 + v157;
          ++v102;
        }
      }
      *(float *)(a1 + 6416) = v158;
      *(_QWORD *)(a1 + 6512) = v155 - v156;
      *(_QWORD *)(a1 + 6520) = v155;
      *(_QWORD *)(a1 + 6528) = (uint64_t)v157;
      *(_QWORD *)(a1 + 6560 + 8 * *(_QWORD *)(a1 + 8232)) += v156;
      OUTLINED_FUNCTION_3_74();
      *(_QWORD *)(a1 + 6560 + 8 * v162) = 0;
      if (*(_QWORD *)(a1 + 6496) >= v97 - v160)
        v163 = v97 - v160;
      else
        v163 = *(_QWORD *)(a1 + 6496);
      clr_vector((_DWORD *)(*(_QWORD *)(a1 + 4544) + 4 * v161), v163);
      *(_QWORD *)(a1 + 6536) = *(_QWORD *)(a1 + 6496) - v163;
      *(_QWORD *)(a1 + 6560 + 8 * *(_QWORD *)(a1 + 8232)) += v163;
      compute_v_start((float *)a1);
    }
LABEL_199:
    OUTLINED_FUNCTION_3_74();
    *(_QWORD *)(a1 + 6560 + 8 * v164) = 0;
    OUTLINED_FUNCTION_3_74();
    *(_QWORD *)(v166 + 8 * v165) = 0;
    v167 = a1 + 8256;
    v94 = v242;
    if (*(_BYTE *)(a1 + 8663))
    {
      v168 = 0;
      v169 = 0;
      v170 = 0;
      while (v169 < *(_QWORD *)(a1 + 8232) / 2)
      {
        v171 = *(_QWORD *)(a1 + 16 * v169 + 6560) + v170;
        while (v168 < v171)
          *(_BYTE *)(v89 + v168++) = 0;
        v170 = *(_QWORD *)(a1 + ((16 * v169) | 8) + 6560) + v171;
        while (v168 < v170)
          *(_BYTE *)(v89 + v168++) = 1;
        ++v169;
      }
    }
    pole_filter(v239, (float *)(*(_QWORD *)(a1 + 4544) + 4 * v240), *(_QWORD *)(a1 + 6448) - v240);
    if (!*(_DWORD *)(a1 + 3676))
    {
      if (*(float *)(a1 + 6356) > 0.0001)
      {
        if (*(_QWORD *)(a1 + 8184))
        {
          *(_WORD *)(a1 + 8656) = noise((_BYTE *)a1, *(_WORD *)(a1 + 8656));
          mul1_vector((__int16 *)(a1 + 8256), v88, *(float **)(a1 + 4544), *(_QWORD *)(a1 + 6448));
        }
        OUTLINED_FUNCTION_8_61();
        pole_filter(a1 + 424, v172, v173);
        zero_filter(a1 + 248, (float *)(a1 + 2020), *(float **)(a1 + 4544), *(_QWORD *)(a1 + 6448));
        OUTLINED_FUNCTION_8_61();
        pole_filter(v235, v174, v175);
        zero_filter(a1 + 336, (float *)(a1 + 2032), *(float **)(a1 + 4544), *(_QWORD *)(a1 + 6448));
        v176 = *(_QWORD *)(a1 + 8160);
        v177 = v176 + 4;
        v178 = v235 + 88 * v176;
        while (v177 >= 6)
        {
          pole_filter(v178, *(float **)(a1 + 4544), *(_QWORD *)(a1 + 6448));
          --v177;
          v178 -= 88;
        }
        OUTLINED_FUNCTION_8_61();
        if (v183)
        {
          v167 = a1 + 8256;
          v184 = 2;
          v94 = v242;
          if (*(float *)(a1 + 672) != 0.0)
          {
            *(v179 - 2) = *(float *)(a1 + 652);
            v185 = *(float *)(a1 + 648);
            *(v179 - 1) = v185;
            v186 = 0;
            v187 = 0;
            v188 = 0;
            switch(*(_DWORD *)(a1 + 156))
            {
              case 0:
                v189 = *(_QWORD *)(a1 + 680);
                if (v189 >= v180)
                  v190 = v180;
                else
                  v190 = *(_QWORD *)(a1 + 680);
                v186 = v190 & ~(v190 >> 63);
                v191 = (float *)(a1 + 648 - 4 * v189);
                v192 = v186;
                for (n = v179; v192; --v192)
                {
                  v194 = (float)(v185 * *(v191 - 3)) + (float)(*(v191 - 6) * *n);
                  v195 = *v191++;
                  v185 = v194 + (float)(v195 * *(n - 2));
                  *n++ = v185;
                }
                *(_QWORD *)(a1 + 680) = v189 - v190;
                goto LABEL_240;
              case 1:
                goto LABEL_240;
              case 2:
                goto LABEL_228;
              case 3:
                goto LABEL_248;
              default:
                v186 = 0;
                if (*(_BYTE *)(a1 + 8665))
                  goto LABEL_227;
                break;
            }
LABEL_247:
            *(_DWORD *)(a1 + 156) = 3;
            v188 = v186;
LABEL_248:
            v205 = &v179[v188];
            v186 = v188;
            while (2)
            {
              if (v186 < v180)
              {
                if (!*(_BYTE *)(v89 + v186))
                {
                  *(float *)&v182 = *(v205 - 1);
                  *(float *)&v181 = *(float *)(a1 + 604) * *(float *)&v182;
                  OUTLINED_FUNCTION_6_66(*(float *)&v181 + (float)(*(float *)(a1 + 600) * *v205), *(float *)(a1 + 608), v181, v182, *(v205 - 2));
                  continue;
                }
                v197 = 3;
LABEL_296:
                *(_QWORD *)(a1 + 8240) = v197;
                *(_DWORD *)(a1 + 156) = 1;
LABEL_240:
                for (ii = &v179[v186];
                      ;
                      OUTLINED_FUNCTION_6_66(*(float *)&v181 + (float)(v204[3] * *ii), v204[9], v181, v182, *(ii - 2)))
                {
                  if (v186 >= v180)
                    goto LABEL_252;
                  v202 = *(_QWORD *)(a1 + 8240);
                  if (*(_BYTE *)(v89 + v186))
                  {
                    v203 = v202 - 1;
                    *(_QWORD *)(a1 + 8240) = v202 - 1;
                    if (v202 < 1)
                    {
LABEL_227:
                      *(_DWORD *)(a1 + 156) = v184;
                      v187 = v186;
LABEL_228:
                      v196 = &v179[v187];
                      v186 = v187;
                      while (1)
                      {
                        if (v186 >= v180)
                          goto LABEL_252;
                        if (!*(_BYTE *)(v89 + v186))
                          break;
                        *(float *)&v182 = *(v196 - 1);
                        *(float *)&v181 = *(float *)algn_2577782C4 * *(float *)&v182;
                        OUTLINED_FUNCTION_6_66((float)(*(float *)algn_2577782C4 * *(float *)&v182) + (float)(*(float *)f1d * *v196), *(float *)&dword_2577782C8, v181, v182, *(v196 - 2));
                      }
                      v197 = -1;
                      goto LABEL_296;
                    }
                  }
                  else
                  {
                    v203 = v202 + 1;
                    *(_QWORD *)(a1 + 8240) = v202 + 1;
                    if (v202 > 1)
                      goto LABEL_247;
                  }
                  v204 = (float *)&f1d[v203];
                  *(float *)&v182 = *(ii - 1);
                  *(float *)&v181 = v204[6] * *(float *)&v182;
                }
              }
              break;
            }
LABEL_252:
            v206 = &v179[v186];
            v207 = v206 - 2;
            if (v180 <= 1)
              v207 = (float *)(a1 + 648);
            *(float *)(a1 + 652) = *v207;
            *(float *)(a1 + 648) = *(v206 - 1);
          }
        }
        else
        {
          pole_filter(a1 + 600, v179, v180);
          v167 = a1 + 8256;
          v94 = v242;
        }
        if (!*(_QWORD *)(a1 + 8184) && !*(_QWORD *)(a1 + 8176))
        {
          v208 = *(float *)(a1 + 6356) - *(float *)(a1 + 6364);
          *(float *)(a1 + 6356) = v208;
          if (v208 < 0.00001)
            *(_DWORD *)(a1 + 6356) = 0;
        }
      }
      if (*(float *)(a1 + 6360) <= 0.0001)
        goto LABEL_287;
      if (*(_QWORD *)(a1 + 0x2000))
      {
        v209 = noise((_BYTE *)a1, *(_WORD *)(a1 + 8658));
        v210 = 0;
        *(_WORD *)(a1 + 8658) = v209;
        v211 = *(_QWORD *)(a1 + 6448) & ~(*(uint64_t *)(a1 + 6448) >> 63);
        while (v211 != v210)
        {
          *(float *)(v167 + 4 * v210 - 3700) = (float)*(__int16 *)(v167 + 2 * v210);
          ++v210;
        }
      }
      if (*(float *)(v237 + 172) != 0.0 && *(_QWORD *)(a1 + 0x2000))
      {
        OUTLINED_FUNCTION_8_61();
        mulf_vector((float *)(a1 + 4556), v214, v212, v213);
      }
      v215 = 13;
      while (2)
      {
        if (v215 >= *(_QWORD *)(a1 + 8160) + 13)
        {
          v94 = v242;
          if (!*(_QWORD *)(a1 + 0x2000))
          {
            v226 = *(float *)(a1 + 6360) - *(float *)(a1 + 6364);
            *(float *)(a1 + 6360) = v226;
            if (v226 < 0.0001)
              *(_DWORD *)(a1 + 6360) = 0;
          }
          break;
        }
        v216 = a1 + 88 * v215;
        v218 = *(float *)(v216 + 232);
        v217 = (float *)(v216 + 232);
        if (v218 != 0.0)
        {
          v219 = v217 - 18;
          if (*(_QWORD *)(a1 + 0x2000))
          {
            v220 = v215 - 13;
            v221 = *(_QWORD *)(a1 + 6448);
            if (*((_QWORD *)&v243[-6] + v215 - 1))
            {
              for (jj = 0; (v221 & ~(v221 >> 63)) != jj; ++jj)
                *(_DWORD *)(*(_QWORD *)(a1 + 6168) + 4 * jj) = *(_DWORD *)(a1 + 4556 + 4 * jj);
              pole_filter((uint64_t)v219, *(float **)(a1 + 6168), v221);
              goto LABEL_280;
            }
          }
          else
          {
            v221 = *(_QWORD *)(a1 + 6448);
            v220 = v215 - 13;
          }
          parallel0_filter(v219, *(float **)(a1 + 6168), v221);
          if (!*((_QWORD *)v243 + v220))
          {
            v223 = *v217 - *(float *)(a1 + 6364);
            *v217 = v223;
            if (v223 < 0.0)
              *v217 = 0.0;
          }
LABEL_280:
          v224 = 0;
          v225 = *(_QWORD *)(a1 + 6448) & ~(*(uint64_t *)(a1 + 6448) >> 63);
          while (v225 != v224)
          {
            *(float *)(*(_QWORD *)(a1 + 4544) + 4 * v224) = *(float *)(*(_QWORD *)(a1 + 6168) + 4 * v224)
                                                          + *(float *)(*(_QWORD *)(a1 + 4544) + 4 * v224);
            ++v224;
          }
        }
        ++v215;
        continue;
      }
    }
LABEL_287:
    v227 = 0;
    v93 = v241;
    while (1)
    {
      m = *(_QWORD *)(a1 + 6448);
      if (v227 >= m)
        break;
      v228 = (uint64_t)*(float *)(*(_QWORD *)(a1 + 4544) + 4 * v227);
      *(_QWORD *)(v90 + 8 * v227) = v228;
      if (v228 < 0)
        v228 = -v228;
      if (v228 > *(_QWORD *)(a1 + 6552))
        *(_QWORD *)(a1 + 6552) = v228;
      ++v227;
    }
LABEL_294:
    v93 -= v94;
    output_speech(a1, m);
  }
  *(float *)(a1 + 6352) = *(float *)(a1 + 6352) + (float)(*(float *)v237 * *(float *)(a1 + 3648));
  *(_QWORD *)(a1 + 6544) += v234;
  v229 = v233;
  v230 = (float *)(a1 + 88 * v233 + 232);
  while (v229 <= 20)
  {
    if (*v230 == 0.0)
    {
      *((_QWORD *)v230 - 3) = 0;
      v231 = 0;
      v232 = 0.0;
    }
    else
    {
      v231 = v253[v229];
      v232 = v247[v229];
      *((_QWORD *)v230 - 1) = *(_QWORD *)(v230 - 17);
    }
    *((_DWORD *)v230 - 4) = v231;
    *(v230 - 3) = v232;
    ++v229;
    v230 += 22;
  }
  return 1;
}

float db2lin(uint64_t a1)
{
  ldiv_t v1;

  if (a1 < 1)
    return 0.0;
  if (a1 >= 400)
    a1 = 400;
  v1 = ldiv(a1, 20);
  return p10[v1.quot] * l10[v1.rem];
}

float pole_filter(uint64_t a1, float *a2, uint64_t a3)
{
  float result;
  float *v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float *v9;
  float *v10;
  uint64_t i;
  float v12;
  float v13;
  float *v14;

  result = *(float *)(a1 + 72);
  if (result != 0.0)
  {
    *(a2 - 2) = *(float *)(a1 + 52);
    v4 = (float *)(a1 + 48);
    v5 = *(float *)(a1 + 48);
    *(a2 - 1) = v5;
    v6 = *(_QWORD *)(a1 + 80);
    if (v6)
    {
      if (v6 >= a3)
        v7 = a3;
      else
        v7 = *(_QWORD *)(a1 + 80);
      v8 = v7 & ~(v7 >> 63);
      v9 = (float *)(a1 - 4 * v6 + 48);
      v10 = a2;
      for (i = v8; i; --i)
      {
        v12 = (float)(*(v9 - 3) * v5) + (float)(*(v9 - 6) * *v10);
        v13 = *v9++;
        v5 = v12 + (float)(v13 * *(v10 - 2));
        *v10++ = v5;
      }
      *(_QWORD *)(a1 + 80) = v6 - v7;
    }
    else
    {
      v8 = 0;
    }
    v14 = &a2[v8 - 2];
    while (v8 < a3)
    {
      v14[2] = (float)((float)(*(float *)(a1 + 4) * v14[1]) + (float)(*(float *)a1 * v14[2]))
             + (float)(*(float *)(a1 + 8) * *v14);
      ++v8;
      ++v14;
    }
    if (a3 > 1)
      v4 = v14;
    *(float *)(a1 + 52) = *v4;
    result = v14[1];
    *(float *)(a1 + 48) = result;
  }
  return result;
}

double compute_voicing_size(float *a1)
{
  float v1;
  float v2;
  float v3;
  uint64_t v4;
  double result;
  uint64_t v6;

  v1 = a1[1595];
  v2 = a1[1598];
  v3 = a1[1602];
  v4 = (uint64_t)((float)((float)(v1 - v2) * v3) + 0.9999);
  result = (float)(v3 * (float)-(float)(v2 - (float)(a1[1597] * v1))) + 0.4999;
  *((_QWORD *)a1 + 807) = v4;
  *((_QWORD *)a1 + 809) = (uint64_t)result;
  *((_QWORD *)a1 + 810) = (uint64_t)result;
  v6 = v4 - (uint64_t)result;
  *((_QWORD *)a1 + 811) = v6;
  *((_QWORD *)a1 + 812) = v6;
  return result;
}

float compute_v_start(float *a1)
{
  float result;

  result = (float)(a1[1598] + (float)((float)*((uint64_t *)a1 + 807) * a1[1603])) - a1[1595];
  a1[1598] = result;
  return result;
}

uint64_t noise(_BYTE *a1, __int16 a2)
{
  uint64_t v2;
  _WORD *v3;
  uint64_t i;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;

  a1[8865] = 0;
  *((_WORD *)a1 + 4128) = 20077 * a2 + 12345;
  v2 = *((_QWORD *)a1 + 806);
  v3 = a1 + 8258;
  for (i = 1; ; ++i)
  {
    v5 = *(v3 - 1);
    if (i >= v2)
      break;
    *v3++ = 20077 * v5 + 12345;
  }
  if (*((_QWORD *)a1 + 1022))
  {
    v6 = 0;
    v7 = 0;
    v8 = *((_QWORD *)a1 + 820);
    v9 = (*((_QWORD *)a1 + 1029) / 2) & ~((*((_QWORD *)a1 + 1029) / 2) >> 63);
    while (v6 != v9)
    {
      while (v7 < v8)
      {
        *(_WORD *)&a1[2 * v7 + 8256] = *(__int16 *)&a1[2 * v7 + 8256] >> 1;
        ++v7;
      }
      v10 = &a1[16 * v6];
      v7 += *((_QWORD *)v10 + 821);
      v8 = v7 + *((_QWORD *)v10 + 822);
      ++v6;
    }
  }
  return v5;
}

uint64_t zero_filter(uint64_t result, float *a2, float *a3, uint64_t a4)
{
  float v4;
  float v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float *v9;
  uint64_t v10;
  float *v11;
  float v12;
  float v13;

  if (*(float *)(result + 72) != 0.0)
  {
    v5 = *(float *)(result + 48);
    v4 = *(float *)(result + 52);
    v6 = *(_QWORD *)(result + 80);
    if (v6)
    {
      if (v6 >= a4)
        v7 = a4;
      else
        v7 = *(_QWORD *)(result + 80);
      v8 = v7 & ~(v7 >> 63);
      v9 = (float *)(result - 4 * v6 + 24);
      v10 = v8;
      v11 = a3;
      while (1)
      {
        v12 = v5;
        if (!v10)
          break;
        v5 = *v11;
        *v11 = (float)((float)(v12 * v9[3]) + (float)(*v9 * *v11)) + (float)(v9[6] * v4);
        ++v11;
        --v10;
        ++v9;
        v4 = v12;
      }
      *(_QWORD *)(result + 80) = v6 - v7;
    }
    else
    {
      v8 = 0;
    }
    while (1)
    {
      v13 = v5;
      if (v8 >= a4)
        break;
      v5 = a3[v8];
      a3[v8++] = (float)((float)(v13 * a2[1]) + (float)(*a2 * v5)) + (float)(a2[2] * v4);
      v4 = v13;
    }
    if (a4 <= 1)
      v4 = *(float *)(result + 48);
    *(float *)(result + 48) = v5;
    *(float *)(result + 52) = v4;
  }
  return result;
}

BOOL klattSetVolumeMultiplier(const char **a1, float a2)
{
  uint64_t v2;
  _BOOL8 result;

  result = OUTLINED_FUNCTION_2_75(a1);
  if (result)
    *(float *)(v2 + 148) = a2;
  return result;
}

void OUTLINED_FUNCTION_0_85(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1 + 1;
  *(_QWORD *)(v1 + 8232) = v2;
  *(_QWORD *)(v1 + 8 * v2 + 6560) = 0;
}

void OUTLINED_FUNCTION_1_77(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8 * *(_QWORD *)(v1 + 8232) + 6560) += a1;
}

BOOL OUTLINED_FUNCTION_2_75(const char **a1)
{
  return verifyKlattHandle(a1);
}

void OUTLINED_FUNCTION_3_74()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 8232);
}

_DWORD *OUTLINED_FUNCTION_4_70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return clr_vector((_DWORD *)(*(_QWORD *)(v2 + 4544) + 4 * v3), a2);
}

float OUTLINED_FUNCTION_5_67(float a1)
{
  uint64_t v1;

  return cosf(a1 * *(float *)(v1 + 6404));
}

float OUTLINED_FUNCTION_6_66(float a1, float a2, double a3, double a4, float a5)
{
  float *v5;
  float result;

  result = a1 + (float)(a2 * a5);
  *v5 = result;
  return result;
}

void OUTLINED_FUNCTION_7_65()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 8 * *(_QWORD *)(v0 + 8232) + 6560) += v1;
}

float OUTLINED_FUNCTION_9_60()
{
  uint64_t v0;
  float v1;

  return expf(-(float)(*(float *)(v0 + 6400) * v1));
}

float OUTLINED_FUNCTION_10_60(float a1)
{
  uint64_t v1;

  return expf(-(float)(*(float *)(v1 + 6400) * a1));
}

void OUTLINED_FUNCTION_11_58()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 8232);
}

float OUTLINED_FUNCTION_14_53(float a1)
{
  float v1;

  return sinf(v1 * a1);
}

double OUTLINED_FUNCTION_15_51()
{
  uint64_t v0;
  double *v1;
  double result;

  result = v1[2];
  *v1 = result;
  *(_QWORD *)(v0 + 6496) = *(_QWORD *)(v0 + 6488);
  return result;
}

_QWORD *dynaBufNew(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;

  v2 = malloc_type_malloc(0x20uLL, 0x1CE13EC1uLL);
  v3 = v2;
  if (v2)
  {
    *v2 = 0;
    if (a1)
      v4 = a1 + 1;
    else
      v4 = 16;
    if (v4)
      v5 = ((v4 - 1) & 0xFFFFFFFFFFFFFFF0) + 16;
    else
      v5 = 16;
    if (resize((uint64_t)v2, v5))
    {
      *(_BYTE *)*v3 = 0;
      v3[2] = 0;
      v3[3] = 0;
    }
    else
    {
      free(v3);
      return 0;
    }
  }
  return v3;
}

uint64_t resize(uint64_t a1, size_t size)
{
  void *v4;
  uint64_t result;

  if (!size)
    return 0;
  v4 = *(void **)a1;
  if (v4)
  {
    result = (uint64_t)malloc_type_realloc(v4, size, 0xC70FC592uLL);
    if (!result)
      return result;
    *(_QWORD *)a1 = result;
  }
  else
  {
    result = (uint64_t)malloc_type_malloc(size, 0x82F6DFB8uLL);
    *(_QWORD *)a1 = result;
    if (!result)
      return result;
  }
  *(_QWORD *)(a1 + 8) = size;
  return 1;
}

uint64_t dynaBufDelete(void **a1)
{
  if (a1)
  {
    free(*a1);
    free(a1);
  }
  return 0;
}

uint64_t dynaBufReset(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  **(_BYTE **)result = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

void dynaBufAddChar(uint64_t *a1, char a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t i;
  _BYTE *v9;
  uint64_t v10;

  if (a3)
  {
    v6 = a1[2];
  }
  else
  {
    v7 = a1[2];
    v6 = a1[3];
    if (v6 != v7)
      goto LABEL_10;
  }
  if (setUsed((uint64_t)a1, v6 + 1))
  {
    if (a3)
    {
      for (i = a1[2]; ; --i)
      {
        v6 = a1[3];
        if (i < v6 + 1)
          break;
        v9 = (_BYTE *)(*a1 + i);
        *v9 = *(v9 - 1);
      }
LABEL_12:
      v10 = *a1;
      a1[3] = v6 + 1;
      *(_BYTE *)(v10 + v6) = a2;
      goto LABEL_13;
    }
    v7 = a1[2];
    v6 = a1[3];
LABEL_10:
    if (v6 == v7 - 1)
    {
      *(_BYTE *)(*a1 + v7) = 0;
      v6 = a1[3];
    }
    goto LABEL_12;
  }
LABEL_13:
  OUTLINED_FUNCTION_0_86();
}

uint64_t setUsed(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 8) >= (unint64_t)(a2 + 1)
    || (result = resize(a1, (a2 & 0xFFFFFFFFFFFFFFF0) + 16), (_DWORD)result))
  {
    *(_QWORD *)(a1 + 16) = a2;
    return 1;
  }
  return result;
}

void dynaBufAddString(uint64_t *a1, char *__s, int a3)
{
  char *v4;
  size_t v6;
  size_t v7;
  unint64_t v8;
  unint64_t i;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v4 = __s;
  v6 = strlen(__s);
  v7 = v6;
  if (a3 || (v8 = a1[2] - a1[3], v7 = v6 - v8, v6 > v8))
  {
    if (v7)
    {
      if (!setUsed((uint64_t)a1, a1[2] + v7))
        goto LABEL_11;
      *(_BYTE *)(*a1 + a1[2]) = 0;
      if (a3)
      {
        for (i = a1[2] - 1; i >= a1[3] + v7; OUTLINED_FUNCTION_1_78(i))
          ;
      }
    }
  }
  while (1)
  {
    v12 = *v4;
    if (!*v4)
      break;
    v10 = *a1;
    v11 = a1[3];
    a1[3] = v11 + 1;
    *(_BYTE *)(v10 + v11) = v12;
    ++v4;
  }
LABEL_11:
  OUTLINED_FUNCTION_0_86();
}

void dynaBufAddInt(uint64_t *a1, int a2, int a3)
{
  char __s[20];
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  __sprintf_chk(__s, 0, 0x14uLL, "%d", a2);
  dynaBufAddString(a1, __s, a3);
}

void dynaBufAddDynaBuf(uint64_t *a1, _QWORD *a2, int a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t i;
  unint64_t j;
  char v11;
  uint64_t v12;
  uint64_t v13;

  if (a3)
  {
    v6 = a2[2];
  }
  else
  {
    v7 = a1[2] - a1[3];
    v8 = a2[2];
    v6 = v8 - v7;
    if (v8 <= v7)
      goto LABEL_10;
  }
  if (v6)
  {
    if (!setUsed((uint64_t)a1, a1[2] + v6))
      goto LABEL_14;
    if (a3)
    {
      for (i = a1[2]; i >= a1[3] + v6; OUTLINED_FUNCTION_1_78(i))
        ;
    }
  }
LABEL_10:
  for (j = 0; j < a2[2]; ++j)
  {
    v11 = *(_BYTE *)(*a2 + j);
    v12 = *a1;
    v13 = a1[3];
    a1[3] = v13 + 1;
    *(_BYTE *)(v12 + v13) = v11;
  }
  *(_BYTE *)(*a1 + a1[2]) = 0;
LABEL_14:
  OUTLINED_FUNCTION_0_86();
}

uint64_t *dynaBufDeleteChars(uint64_t *result, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = result[2];
  v2 = result[3];
  if (v3 - v2 <= a2)
  {
    v5 = *result;
    result[2] = v2;
    *(_BYTE *)(v5 + v2) = 0;
  }
  else if (a2)
  {
    v4 = v3 - a2;
    result[2] = v4;
    while (v2 <= v4)
    {
      *(_BYTE *)(*result + v2) = *(_BYTE *)(*result + v2 + a2);
      ++v2;
      v4 = result[2];
    }
  }
  return result;
}

uint64_t dynaBufLength(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t dynaBufMoveRel(uint64_t a1, unsigned int a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;

  if ((a2 & 0x80000000) != 0)
  {
    v3 = -a2;
    v4 = *(_QWORD *)(a1 + 24);
    v5 = v4 >= v3;
    v2 = v4 - v3;
    if (!v5)
      v2 = 0;
  }
  else
  {
    v2 = *(_QWORD *)(a1 + 24) + a2;
    if (v2 >= *(_QWORD *)(a1 + 16))
      v2 = *(_QWORD *)(a1 + 16);
  }
  return OUTLINED_FUNCTION_2_76(a1, v2);
}

uint64_t dynaBufMoveAbs(uint64_t a1, unsigned int a2)
{
  uint64_t v2;

  if ((a2 & 0x80000000) != 0)
    v2 = *(_QWORD *)(a1 + 16);
  else
    v2 = a2;
  return OUTLINED_FUNCTION_2_76(a1, v2);
}

BOOL dynaBufAtEnd(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) == *(_QWORD *)(a1 + 16);
}

uint64_t dynaBufChar(_QWORD *a1, unsigned int a2)
{
  if ((a2 & 0x80000000) != 0 || a1[2] < (unint64_t)a2)
    return 0;
  else
    return *(char *)(*a1 + a2);
}

uint64_t dynaBufCurrentChar(uint64_t *a1, int a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = a1[3];
  if (a2 && v2 < a1[2])
  {
    v3 = *a1;
    a1[3] = v2 + 1;
  }
  else
  {
    v3 = *a1;
  }
  return *(char *)(v3 + v2);
}

uint64_t dynaBufContents(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t dynaBufExtract(_QWORD *a1, unsigned int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;

  if ((a2 & 0x80000000) != 0 || a1[2] < (unint64_t)a2)
    return 0;
  v4 = 0;
  v5 = a4;
  while (a4 != v4)
  {
    if (a1[2] <= (unint64_t)a2 + v4)
    {
      v5 = v4;
      break;
    }
    *(_BYTE *)(a3 + v4) = *(_BYTE *)(*a1 + a2 + v4);
    ++v4;
  }
  *(_BYTE *)(a3 + v5) = 0;
  return a3;
}

void OUTLINED_FUNCTION_1_78(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + a1) = *(_BYTE *)(v2 + a1 + v1);
}

uint64_t OUTLINED_FUNCTION_2_76@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a1 + 24) = a2;
  return a2;
}

uint64_t errorIgnore()
{
  return 0;
}

uint64_t errorStd(uint64_t a1, const char *a2, char *a3, ...)
{
  FILE **v4;
  va_list va;

  va_start(va, a3);
  v4 = (FILE **)MEMORY[0x24BDAC8D8];
  if (a2 && *a2)
    fprintf((FILE *)*MEMORY[0x24BDAC8D8], "%s: ", a2);
  vfprintf(*v4, a3, va);
  fwrite(".\n", 2uLL, 1uLL, *v4);
  return 0;
}

int strcasecmp(const char *a1, const char *a2)
{
  __darwin_ct_rune_t v4;
  int v5;
  __darwin_ct_rune_t v6;
  __darwin_ct_rune_t v7;
  __darwin_ct_rune_t v8;

  while (1)
  {
    v4 = *a2;
    v5 = *(unsigned __int8 *)a2;
    if (!*a1)
      goto LABEL_10;
    if (!*a2)
      return 1;
    v6 = __tolower(*a1);
    if (v6 != __tolower(v4))
      break;
    ++a1;
    ++a2;
  }
  v7 = *a2;
  v5 = v7;
  if (!*a1)
  {
LABEL_10:
    if (v5)
      return -1;
    else
      return 0;
  }
  if (!(_BYTE)v7)
    return 1;
  v8 = __tolower(*a1);
  if (v8 < __tolower(v7))
    return -1;
  else
    return 1;
}

char *__cdecl strdup(const char *__s1)
{
  size_t v2;
  char *result;

  v2 = strlen(__s1);
  result = (char *)malloc_type_malloc(v2 + 1, 0xEF87DF6uLL);
  if (result)
    return strcpy(result, __s1);
  return result;
}

uint64_t atoiOK(char *a1, _DWORD *a2)
{
  int v3;
  char *v4;
  char v5;
  int v6;
  char i;
  int v8;
  unsigned int v9;
  int v10;
  char v11;
  uint64_t result;
  uint64_t v13;

  v3 = *a1;
  *a2 = 0;
  if (v3 == 45)
    v4 = a1 + 1;
  else
    v4 = a1;
  while (1)
  {
    v5 = *v4;
    if (!*v4)
      return 0;
    if (!isspace(*v4))
      break;
    ++v4;
  }
  v6 = 0;
  for (i = v5; ; i = v11)
  {
    v8 = i;
    v9 = i - 48;
    if (v9 >= 0xA)
      break;
    if (v6 > 214748364)
      return 0;
    v10 = 10 * v6;
    *a2 = 10 * v6;
    if (10 * v6 > -2147483601 - v8)
      return 0;
    v6 = v10 + v9;
    *a2 = v10 + v9;
    v11 = *++v4;
  }
  v13 = 1;
  while (i)
  {
    result = isspace(i);
    if (!(_DWORD)result)
      return result;
    i = v4[v13++];
  }
  if (v3 == 45)
    *a2 = -v6;
  return 1;
}

uint64_t cleanLiteral(unsigned __int8 *a1, int a2, unsigned __int8 a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  unsigned __int8 *i;
  int v6;
  int v7;
  int v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  char v14;

  v3 = a1;
  if (a2)
  {
    if (*a1 != a2)
      return 0xFFFFFFFFLL;
    v3 = a1 + 1;
  }
  v4 = 0;
  for (i = v3; ; v3 = i)
  {
    v7 = *i++;
    v6 = v7;
    if (v7 == a3 || v6 == 0)
      break;
    if (v6 == 92)
    {
      i = v3 + 2;
      v9 = (char)v3[1];
      if ((v9 - 48) >= 8)
      {
        if (v9 == 98)
        {
          LOBYTE(v6) = 8;
        }
        else if (v9 == 102)
        {
          LOBYTE(v6) = 12;
        }
        else
        {
          if (v9 == 116)
            v14 = 9;
          else
            v14 = v3[1];
          if (v9 == 114)
            v14 = 13;
          if (v9 == 110)
            LOBYTE(v6) = 10;
          else
            LOBYTE(v6) = v14;
        }
      }
      else
      {
        v10 = 0;
        LOBYTE(v6) = v3[1] - 48;
        v11 = v3 + 4;
        while (1)
        {
          if ((_DWORD)v10 == 2)
          {
            i = v11;
            goto LABEL_32;
          }
          v12 = (char)i[v10];
          if (v12 > 55 || (v12 - 48) > 9)
            break;
          LOBYTE(v6) = v12 + 8 * v6 - 48;
          ++v10;
        }
        i += v10;
      }
    }
LABEL_32:
    *a1++ = v6;
    v4 = (v4 + 1);
  }
  *a1 = 0;
  return v4;
}

uint64_t strncpyWithEllipsis(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t i;
  uint64_t v4;
  int v5;

  for (i = 0; a3 != i; ++i)
  {
    if (!*(_BYTE *)(a2 + i))
    {
      a3 = i;
      break;
    }
    *(_BYTE *)(result + i) = *(_BYTE *)(a2 + i);
  }
  *(_BYTE *)(result + a3) = 0;
  if (*(_BYTE *)(a2 + a3))
  {
    v4 = 0;
    v5 = a3 - 1;
    while (v4 != -3)
    {
      if (((v5 + (_DWORD)v4) & 0x80000000) == 0)
        *(_BYTE *)(result + (v5 + v4)) = 46;
      --v4;
    }
  }
  return result;
}

uint64_t changeExtension(uint64_t result, uint64_t a2, int a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  v4 = 0;
  v5 = a3 & ~(a3 >> 31);
  while (v5 != v4)
  {
    v6 = *(unsigned __int8 *)(result + v4);
    if (!*(_BYTE *)(result + v4) || v6 == 46)
    {
      if (a4 && *a4)
      {
        v7 = 0;
        LODWORD(v5) = v4 + 1;
        *(_BYTE *)(a2 + v4) = 46;
        if (a3 > (int)v4 + 1)
          LODWORD(v5) = a3;
        while ((int)v4 + (int)v7 + 1 < a3)
        {
          if (!a4[v7])
          {
            LODWORD(v5) = v4 + v7 + 1;
            goto LABEL_15;
          }
          *(_BYTE *)(a2 + v7 + v4 + 1) = a4[v7];
          ++v7;
        }
      }
      else
      {
        LODWORD(v5) = v4;
      }
      break;
    }
    *(_BYTE *)(a2 + v4++) = v6;
  }
LABEL_15:
  *(_BYTE *)(a2 + (int)v5) = 0;
  return result;
}

uint64_t changeMatchingExt(uint64_t a1, _BYTE *a2, uint64_t a3, int a4, _BYTE *a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  result = hasExtension(a1, a2);
  if ((_DWORD)result)
    return changeExtension(a1, a3, a4, a5);
  v10 = 0;
  v11 = a4 & ~(a4 >> 31);
  while (1)
  {
    if (v11 == v10)
    {
      v10 = a4 & ~(a4 >> 31);
      goto LABEL_9;
    }
    if (!*(_BYTE *)(a1 + v10))
      break;
    *(_BYTE *)(a3 + v10) = *(_BYTE *)(a1 + v10);
    ++v10;
  }
  LODWORD(v11) = v10;
LABEL_9:
  *(_BYTE *)(a3 + v10) = 46;
  if (a4 <= (int)v11 + 1)
    v12 = v11 + 1;
  else
    v12 = a4;
  while (++v10 < a4)
  {
    if (!*a5)
    {
      v12 = v10;
      break;
    }
    *(_BYTE *)(a3 + v10) = *a5++;
  }
  *(_BYTE *)(a3 + v12) = 0;
  return result;
}

BOOL hasExtension(_BOOL8 result, _BYTE *a2)
{
  unsigned __int8 *i;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;

  if (result)
  {
    for (i = (unsigned __int8 *)(result + 1); ; ++i)
    {
      v3 = *(i - 1);
      if (!*(i - 1) || v3 == 46)
        break;
    }
    if (a2 && *(i - 1))
    {
      if (!*a2)
        return 0;
      do
      {
        v5 = *i++;
        v4 = v5;
        v7 = *a2++;
        v6 = v7;
      }
      while (v4 == v7 && v6 != 0);
      return v4 == v6;
    }
    result = v3 == 0;
    if (a2 && !*(i - 1))
      return *a2 == 0;
  }
  return result;
}

uint64_t stripPath(uint64_t result)
{
  uint64_t v1;
  uint64_t i;

  if (result)
  {
    v1 = 0;
LABEL_3:
    for (i = v1; *(_BYTE *)(result + i); ++i)
    {
      if (*(_BYTE *)(result + i) == 47)
      {
        v1 = i + 1;
        goto LABEL_3;
      }
    }
    result += (int)v1;
  }
  return result;
}

_BYTE *stripFileName(_BYTE *result, _BYTE *a2)
{
  _BYTE *v2;
  int v3;

  v2 = a2;
  while (1)
  {
    v3 = *result;
    if (!*result)
      break;
    if (v3 == 47)
      v2 = a2;
    *a2++ = v3;
    ++result;
  }
  *v2 = 0;
  return result;
}

uint64_t bareFilename(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;

  v5 = stripPath(a1);
  return changeExtension(v5, a2, a3, 0);
}

_BYTE *fileExists(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (result)
  {
    if (*result)
    {
      OUTLINED_FUNCTION_0_87((uint64_t)result, a2, a3, a4, a5, a6, a7, a8, v16);
      return (_BYTE *)(OUTLINED_FUNCTION_1_79(v8, v9, v10, v11, v12, v13, v14, v15, v17) == 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

_BYTE *filenameModTime(_BYTE *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (result)
  {
    if (!*result)
      return 0;
    OUTLINED_FUNCTION_0_87((uint64_t)result, a2, a3, a4, a5, a6, a7, a8, v16);
    if ((OUTLINED_FUNCTION_1_79(v8, v9, v10, v11, v12, v13, v14, v15, v17) & 0x80000000) != 0)
      return 0;
    else
      return (_BYTE *)v18;
  }
  return result;
}

__darwin_time_t fileModTime(__darwin_time_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FILE *v8;
  int v9;
  stat v10;

  if (result)
  {
    v8 = (FILE *)result;
    OUTLINED_FUNCTION_0_87(result, a2, a3, a4, a5, a6, a7, a8, *(uint64_t *)&v10.st_dev);
    v9 = fileno(v8);
    if (fstat(v9, &v10) < 0)
      return 0;
    else
      return v10.st_mtimespec.tv_sec;
  }
  return result;
}

uint64_t fileFindProgDir(uint64_t __s, char *a2)
{
  char *v2;
  size_t v4;

  if (__s)
  {
    v2 = (char *)__s;
    if (!*(_BYTE *)__s)
      return 0;
    if (strchr((char *)__s, 47))
    {
      stripFileName(v2, a2);
    }
    else
    {
      __s = fileFindInPath();
      if (!(_DWORD)__s)
        return __s;
      v4 = strlen(a2);
      a2[v4 - strlen(v2)] = 0;
    }
    return 1;
  }
  return __s;
}

uint64_t fileFindInPath()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  const char *v12;
  size_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char __s[4097];
  uint64_t v26;

  v0 = (char *)MEMORY[0x24BDAC7A8]();
  v26 = *MEMORY[0x24BDAC8D0];
  if (!v0)
    return 0;
  v8 = v0;
  if (!*v0)
    return 0;
  v9 = (char *)v1;
  if (fileExists(v0, v1, v2, v3, v4, v5, v6, v7))
  {
    if (v9)
      strcpy(v9, v8);
    return 1;
  }
  v11 = getenv("PATH");
  if (!v11)
    return 0;
  v12 = v11;
  v13 = strlen(v11);
  v14 = (char *)malloc_type_malloc(v13 + 1, 0xE885C551uLL);
  v15 = strcpy(v14, v12);
  if (strtok(v15, ":"))
  {
    while (1)
    {
      __strcpy_chk();
      v16 = &__s[strlen(__s)];
      *v16 = 47;
      strcpy(v16 + 1, v8);
      if (fileExists(__s, v17, v18, v19, v20, v21, v22, v23))
        break;
      if (!strtok(0, ":"))
        goto LABEL_11;
    }
    if (v9)
      strcpy(v9, __s);
    v10 = 1;
  }
  else
  {
LABEL_11:
    v10 = 0;
  }
  free(v14);
  return v10;
}

void OUTLINED_FUNCTION_0_87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  bzero(&a9, 0x90uLL);
}

uint64_t OUTLINED_FUNCTION_1_79(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  const char *v9;

  return stat(v9, (stat *)&a9);
}

_BYTE *hashNew(int a1, char a2, int a3)
{
  _BYTE *v6;
  _BYTE *v7;
  int v9;
  void *v11;

  v6 = malloc_type_malloc(0x18uLL, 0x10A0040E78F1B74uLL);
  v7 = v6;
  if (v6)
  {
    if (a1 < 1)
    {
      a1 = 211;
    }
    else if (a3)
    {
      if ((a1 & 1) == 0 && a1 < 0x7FFFFFFE)
        ++a1;
LABEL_9:
      if (a1 <= 2147483645)
      {
        v9 = 2;
        while (v9 < a1)
        {
          if (!(a1 % v9++))
          {
            a1 += 2;
            goto LABEL_9;
          }
        }
      }
    }
    *(_DWORD *)v6 = a1;
    v6[4] = a2;
    v11 = malloc_type_calloc(a1, 8uLL, 0x2004093837F09uLL);
    *((_QWORD *)v7 + 1) = v11;
    if (!v11)
    {
      OUTLINED_FUNCTION_4_71();
      return 0;
    }
  }
  return v7;
}

uint64_t hashDelete(int *a1, int a2, int a3)
{
  uint64_t i;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (a1)
  {
    if (*((_QWORD *)a1 + 1))
    {
      for (i = 0; ; ++i)
      {
        v7 = (_QWORD *)*((_QWORD *)a1 + 1);
        if (i >= *a1)
          break;
        v8 = v7[i];
        if (v8)
        {
          do
          {
            v9 = *(_QWORD *)(v8 + 8);
            if (a2 && *((_BYTE *)a1 + 4))
              free(*(void **)v8);
            if (a3)
              free(*(void **)(v8 + 16));
            free((void *)v8);
            v8 = v9;
          }
          while (v9);
        }
      }
      free(v7);
    }
    OUTLINED_FUNCTION_4_71();
  }
  return OUTLINED_FUNCTION_5_68();
}

void hashInsertInt(uint64_t a1, int a2, uint64_t a3)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  OUTLINED_FUNCTION_2_77();
  v9 = (v6 - v8 * v7);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 8) + 8 * v9);
  v12 = OUTLINED_FUNCTION_1_80();
  if (v12)
  {
    *(_DWORD *)v12 = a2;
    v12[1] = v11;
    v12[2] = a3;
    *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v9) = v12;
  }
  OUTLINED_FUNCTION_0_88();
}

uint64_t hashLookupInt(uint64_t a1, unsigned int a2)
{
  _DWORD **i;
  _DWORD *v3;

  for (i = (_DWORD **)(*(_QWORD *)(a1 + 8)
                      + 8
                      * (((((unsigned __int16)a2 ^ HIWORD(a2)) >> 10) & 0xF ^ (unsigned __int16)a2 ^ HIWORD(a2))
                       % *(_DWORD *)a1)); ; i = (_DWORD **)(v3 + 2))
  {
    v3 = *i;
    if (!v3)
      return OUTLINED_FUNCTION_5_68();
    if (*v3 == a2)
      break;
  }
  return OUTLINED_FUNCTION_7_66((uint64_t)v3);
}

uint64_t hashDeleteInt()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_2_77();
  v5 = (v2 - v4 * v3);
  v7 = *(_QWORD *)(v6 + 8);
  v8 = *(_QWORD *)(v7 + 8 * v5);
  if (*(_DWORD *)v8 == v0)
  {
    *(_QWORD *)(v7 + 8 * v5) = *(_QWORD *)(v8 + 8);
    if (v1)
LABEL_3:
      free(*(void **)(v8 + 16));
  }
  else
  {
    do
    {
      v10 = v8;
      v8 = *(_QWORD *)(v8 + 8);
      if (!v8)
        return 0;
    }
    while (*(_DWORD *)v8 != v0);
    *(_QWORD *)(v10 + 8) = *(_QWORD *)(v8 + 8);
    if (v1)
      goto LABEL_3;
  }
  OUTLINED_FUNCTION_4_71();
  return 1;
}

uint64_t hashMoveInt(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  unsigned int v8;
  _QWORD *v9;
  uint64_t v10;

  v3 = 0;
  v4 = ((((unsigned __int16)a2 ^ HIWORD(a2)) >> 10) & 0xF ^ (unsigned __int16)a2 ^ HIWORD(a2))
     % *(_DWORD *)a1;
  v5 = (uint64_t *)(*(_QWORD *)(a1 + 8) + 8 * v4);
  while (1)
  {
    v6 = *v5;
    if (!*v5)
      return OUTLINED_FUNCTION_5_68();
    if (*(_DWORD *)v6 == a2)
      break;
    v5 = (uint64_t *)(v6 + 8);
    v3 = v6;
  }
  v8 = ((((unsigned __int16)a3 ^ HIWORD(a3)) >> 10) & 0xF ^ (unsigned __int16)a3 ^ HIWORD(a3))
     % *(_DWORD *)a1;
  *(_DWORD *)v6 = a3;
  if (v8 != (_DWORD)v4)
  {
    if (v3)
      v9 = (_QWORD *)(v3 + 8);
    else
      v9 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v4);
    *v9 = *(_QWORD *)(v6 + 8);
    v10 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(v6 + 8) = *(_QWORD *)(v10 + 8 * v8);
    *(_QWORD *)(v10 + 8 * v8) = v6;
  }
  return OUTLINED_FUNCTION_7_66(v6);
}

void hashInsertString(int *a1, _BYTE *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = OUTLINED_FUNCTION_3_75(a1, a2);
  v6 = *(_QWORD *)(*(_QWORD *)(v2 + 8) + 8 * v5);
  v7 = OUTLINED_FUNCTION_1_80();
  if (v7)
  {
    v7[1] = v6;
    v7[2] = v3;
    *v7 = v4;
    *(_QWORD *)(*(_QWORD *)(v2 + 8) + 8 * v5) = v7;
  }
  OUTLINED_FUNCTION_0_88();
}

uint64_t stringHashFunction(int *a1, _BYTE *a2)
{
  unint64_t v2;

  v2 = 0;
  while (*a2)
  {
    v2 = (char)*a2 + 16 * v2;
    if ((v2 & 0xF0000000) != 0)
      v2 = v2 & 0xFFFFFFFF0FFFFFFFLL ^ ((unint64_t)(v2 & 0xF0000000) >> 24);
    ++a2;
  }
  return (v2 % *a1);
}

uint64_t hashLookupString(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  for (i = (uint64_t *)(v3 + 8 * (int)stringHashFunction((int *)a1, a2)); ; i = (uint64_t *)(v5 + 8))
  {
    v5 = *i;
    if (!*i)
      return 0;
    if (!strcmp(*(const char **)v5, a2))
      break;
  }
  return *(_QWORD *)(v5 + 16);
}

void hashDeleteString(uint64_t a1, _BYTE *a2, int a3, int a4)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = stringHashFunction((int *)a1, a2);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(v8 + 8 * v7);
  if (OUTLINED_FUNCTION_6_67())
  {
    while (1)
    {
      v10 = v9;
      v9 = *(_QWORD *)(v9 + 8);
      if (!v9)
        break;
      if (!OUTLINED_FUNCTION_6_67())
      {
        *(_QWORD *)(v10 + 8) = *(_QWORD *)(v9 + 8);
        if (a3)
          goto LABEL_7;
        goto LABEL_8;
      }
    }
  }
  else
  {
    *(_QWORD *)(v8 + 8 * v7) = *(_QWORD *)(v9 + 8);
    if (a3)
LABEL_7:
      free(*(void **)v9);
LABEL_8:
    if (a4)
      free(*(void **)(v9 + 16));
    OUTLINED_FUNCTION_4_71();
  }
  OUTLINED_FUNCTION_0_88();
}

uint64_t hashMoveString(int *a1, _BYTE *a2)
{
  uint64_t v2;
  _BYTE *v3;
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  int v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = 0;
  v6 = (int)OUTLINED_FUNCTION_3_75(a1, a2);
  v7 = (uint64_t *)(*(_QWORD *)(v2 + 8) + 8 * v6);
  while (1)
  {
    v8 = *v7;
    if (!*v7)
      return 0;
    if (!strcmp(*(const char **)v8, v4))
      break;
    v7 = (uint64_t *)(v8 + 8);
    v5 = v8;
  }
  v10 = stringHashFunction((int *)v2, v3);
  *(_QWORD *)v8 = v3;
  if (v10 != (_DWORD)v6)
  {
    if (v5)
      v11 = (_QWORD *)(v5 + 8);
    else
      v11 = (_QWORD *)(*(_QWORD *)(v2 + 8) + 8 * v6);
    *v11 = *(_QWORD *)(v8 + 8);
    v12 = *(_QWORD *)(v2 + 8);
    *(_QWORD *)(v8 + 8) = *(_QWORD *)(v12 + 8 * v10);
    *(_QWORD *)(v12 + 8 * v10) = v8;
  }
  return *(_QWORD *)(v8 + 16);
}

BOOL hashIterConstruct(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)a1 = a2;
  *(_DWORD *)(a1 + 8) = 0;
  v2 = **(_QWORD **)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v2;
  return v2 || hashIterNext(a1);
}

BOOL hashIterNext(uint64_t a1)
{
  uint64_t i;
  uint64_t v2;

  i = *(_QWORD *)(a1 + 16);
  if (!i)
    goto LABEL_4;
  for (i = *(_QWORD *)(i + 8); ; i = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 8) + 8 * v2))
  {
    *(_QWORD *)(a1 + 16) = i;
LABEL_4:
    if (i)
      break;
    v2 = *(int *)(a1 + 8) + 1;
    *(_DWORD *)(a1 + 8) = v2;
    if ((int)v2 >= **(_DWORD **)a1)
    {
      *(_DWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      return i != 0;
    }
  }
  return i != 0;
}

uint64_t hashIterInt(uint64_t a1)
{
  return **(unsigned int **)(a1 + 16);
}

uint64_t hashIterString(uint64_t a1)
{
  return **(_QWORD **)(a1 + 16);
}

uint64_t hashIterRef(uint64_t a1)
{
  return OUTLINED_FUNCTION_7_66(*(_QWORD *)(a1 + 16));
}

void *OUTLINED_FUNCTION_1_80()
{
  return malloc_type_malloc(0x18uLL, 0x10F2040DD287011uLL);
}

uint64_t OUTLINED_FUNCTION_3_75(int *a1, _BYTE *a2)
{
  return stringHashFunction(a1, a2);
}

void OUTLINED_FUNCTION_4_71()
{
  void *v0;

  free(v0);
}

uint64_t OUTLINED_FUNCTION_5_68()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_6_67()
{
  const char **v0;
  const char *v1;

  return strcmp(*v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_66@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t ECollection::size(ECollection *this)
{
  unsigned int (***v1)(_QWORD);
  uint64_t v2;
  void *v4;
  unsigned int (***v5)(_QWORD);

  v4 = &unk_25198C180;
  v1 = (unsigned int (***)(_QWORD))(*(uint64_t (**)(ECollection *))(*(_QWORD *)this + 8))(this);
  v2 = 0;
  v5 = v1;
  while ((**v1)(v1))
  {
    ((void (*)(unsigned int (***)(_QWORD), _QWORD))(*v5)[5])(v5, 0);
    v2 = (v2 + 1);
    v1 = v5;
  }
  ECollectIter::~ECollectIter((ECollectIter *)&v4);
  return v2;
}

void sub_24869BB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  ECollectIter::~ECollectIter((ECollectIter *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ECollectIter::inBounds(ECollectIter *this)
{
  return (***((uint64_t (****)(_QWORD))this + 1))(*((_QWORD *)this + 1));
}

uint64_t ECollectIter::operator++(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 40))(*(_QWORD *)(a1 + 8));
}

{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 32))(*(_QWORD *)(a1 + 8));
}

uint64_t EList::reset(EList *this)
{
  uint64_t result;

  while (1)
  {
    result = OUTLINED_FUNCTION_6_68();
    if ((_DWORD)result)
      break;
    (*(void (**)(EList *))(*(_QWORD *)this + 64))(this);
  }
  return result;
}

void ESList::ESList(ESList *this, const ESList *a2)
{
  uint64_t *v2;
  uint64_t v3;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  v2 = (uint64_t *)((char *)a2 + 8);
  *(_QWORD *)this = off_25198BF28;
  while (1)
  {
    v3 = *v2;
    if (!*v2)
      break;
    OUTLINED_FUNCTION_4_72();
    v2 = (uint64_t *)(v3 + 16);
  }
  OUTLINED_FUNCTION_8_62();
}

BOOL ESListIter::inBounds(ESListIter *this)
{
  return *((_QWORD *)this + 2) != 0;
}

uint64_t ESListIter::operator()(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t ESListIter::operator++(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v1 + 16);
  return v1;
}

{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  *(_QWORD *)(a1 + 16) = v1;
  return v1;
}

void ESList::operator=(EList *a1)
{
  uint64_t v1;
  uint64_t *i;
  uint64_t v3;

  OUTLINED_FUNCTION_14_54(a1);
  for (i = (uint64_t *)(v1 + 8); ; i = (uint64_t *)(v3 + 16))
  {
    v3 = *i;
    if (!*i)
      break;
    OUTLINED_FUNCTION_4_72();
  }
  OUTLINED_FUNCTION_8_62();
}

void ESList::addToHead(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  v6 = (_QWORD *)OUTLINED_FUNCTION_3_76();
  *v6 = a2;
  v6[1] = a3;
  v6[2] = *(_QWORD *)(a1 + 8);
  if (OUTLINED_FUNCTION_13_55())
    *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 8) = v6;
  OUTLINED_FUNCTION_2_78();
}

void ESList::addToTail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;

  v6 = (_QWORD *)OUTLINED_FUNCTION_3_76();
  *v6 = a2;
  v6[1] = a3;
  v6[2] = 0;
  if (OUTLINED_FUNCTION_6_68())
    v7 = (_QWORD *)(a1 + 8);
  else
    v7 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  *v7 = v6;
  *(_QWORD *)(a1 + 16) = v6;
  OUTLINED_FUNCTION_2_78();
}

uint64_t ESList::addToTail(ESList *this, ESList *a2)
{
  _QWORD *v4;
  uint64_t v5;

  if ((**(unsigned int (***)(ESList *))this)(this))
    v4 = (_QWORD *)((char *)this + 8);
  else
    v4 = (_QWORD *)(*((_QWORD *)this + 2) + 16);
  *v4 = *((_QWORD *)a2 + 1);
  v5 = *((_QWORD *)a2 + 2);
  if (v5)
    *((_QWORD *)this + 2) = v5;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  return 1;
}

void ESList::addAfter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_10_61();
  if (v3)
  {
    OUTLINED_FUNCTION_12_56();
    OUTLINED_FUNCTION_5_69(v8, v9, v10, v11);
  }
  else
  {
    v4 = v2;
    v5 = (_QWORD *)OUTLINED_FUNCTION_3_76();
    v6 = *(_QWORD *)(v4 + 16);
    v7 = *(_QWORD *)(v6 + 16);
    *v5 = v1;
    v5[1] = v0;
    v5[2] = v7;
    *(_QWORD *)(v6 + 16) = v5;
    OUTLINED_FUNCTION_2_78();
  }
}

void ESList::removeHead(ESList *this)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *((_QWORD *)this + 1);
  if (v2 == *((_QWORD *)this + 2))
  {
    v3 = 0;
    *((_QWORD *)this + 2) = 0;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 16);
  }
  *((_QWORD *)this + 1) = v3;
  OUTLINED_FUNCTION_0_89();
}

void ESList::removeAfter(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v4 + 16);
  if (v4 == *(_QWORD *)(a1 + 16))
    *(_QWORD *)(a1 + 16) = v3;
  OUTLINED_FUNCTION_0_89();
}

void ESList::newIter(ESList *this)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)OUTLINED_FUNCTION_7_67();
  *v2 = &off_25198C070;
  v2[1] = v1;
  v2[2] = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_8_62();
}

BOOL ESListIter::atEnd(ESListIter *this)
{
  return *((_QWORD *)this + 2) == *(_QWORD *)(*((_QWORD *)this + 1) + 16);
}

uint64_t ESListIter::resetToTail(ESListIter *this)
{
  return OUTLINED_FUNCTION_11_59((uint64_t)this, *(_QWORD *)(*((_QWORD *)this + 1) + 16));
}

uint64_t ESListIter::reset(ESListIter *this)
{
  return OUTLINED_FUNCTION_11_59((uint64_t)this, *(_QWORD *)(*((_QWORD *)this + 1) + 8));
}

void EDList::EDList(EDList *this, const EDList *a2)
{
  uint64_t *v2;
  uint64_t v3;

  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  v2 = (uint64_t *)((char *)a2 + 8);
  *(_QWORD *)this = off_25198BF98;
  while (1)
  {
    v3 = *v2;
    if (!*v2)
      break;
    OUTLINED_FUNCTION_4_72();
    v2 = (uint64_t *)(v3 + 16);
  }
  OUTLINED_FUNCTION_8_62();
}

BOOL EDListIter::inBounds(EDListIter *this)
{
  return *((_QWORD *)this + 2) != 0;
}

uint64_t EDListIter::operator()(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t EDListIter::operator++(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v1 + 16);
  return v1;
}

{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  *(_QWORD *)(a1 + 16) = v1;
  return v1;
}

void EDList::operator=(EList *a1)
{
  uint64_t v1;
  uint64_t *i;
  uint64_t v3;

  OUTLINED_FUNCTION_14_54(a1);
  for (i = (uint64_t *)(v1 + 8); ; i = (uint64_t *)(v3 + 16))
  {
    v3 = *i;
    if (!*i)
      break;
    OUTLINED_FUNCTION_4_72();
  }
  OUTLINED_FUNCTION_8_62();
}

void EDList::addToHead(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;

  v6 = (_QWORD *)OUTLINED_FUNCTION_1_81();
  *v6 = a2;
  v6[1] = a3;
  v6[2] = *(_QWORD *)(a1 + 8);
  v6[3] = 0;
  if (OUTLINED_FUNCTION_13_55())
    v7 = (_QWORD *)(a1 + 16);
  else
    v7 = (_QWORD *)(*(_QWORD *)(a1 + 8) + 24);
  *v7 = v6;
  *(_QWORD *)(a1 + 8) = v6;
  OUTLINED_FUNCTION_2_78();
}

void EDList::addToTail(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (_QWORD *)OUTLINED_FUNCTION_1_81();
  v7 = *(_QWORD *)(a1 + 16);
  *v6 = a2;
  v6[1] = a3;
  v6[2] = 0;
  v6[3] = v7;
  if (OUTLINED_FUNCTION_6_68())
    v8 = (_QWORD *)(a1 + 8);
  else
    v8 = (_QWORD *)(*(_QWORD *)(a1 + 16) + 16);
  *v8 = v6;
  *(_QWORD *)(a1 + 16) = v6;
  OUTLINED_FUNCTION_2_78();
}

void EDList::addAfter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);

  OUTLINED_FUNCTION_10_61();
  if (v3)
  {
    OUTLINED_FUNCTION_12_56();
    OUTLINED_FUNCTION_5_69(v8, v9, v10, v11);
  }
  else
  {
    v4 = v2;
    v5 = (_QWORD *)OUTLINED_FUNCTION_1_81();
    v6 = *(_QWORD *)(v4 + 16);
    v7 = *(_QWORD *)(v6 + 16);
    *v5 = v1;
    v5[1] = v0;
    v5[2] = v7;
    v5[3] = v6;
    *(_QWORD *)(v7 + 24) = v5;
    *(_QWORD *)(v6 + 16) = v5;
    OUTLINED_FUNCTION_2_78();
  }
}

void EDList::addBefore(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16) == a1[1])
  {
    OUTLINED_FUNCTION_5_69((uint64_t)a1, a3, a4, *(uint64_t (**)(void))(*a1 + 40));
  }
  else
  {
    v7 = (_QWORD *)OUTLINED_FUNCTION_1_81();
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    *v7 = a3;
    v7[1] = a4;
    v7[2] = v8;
    v7[3] = v9;
    *(_QWORD *)(v9 + 16) = v7;
    *(_QWORD *)(v8 + 24) = v7;
    OUTLINED_FUNCTION_2_78();
  }
}

void EDList::removeHead(EDList *this)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)((char *)this + 16);
  v2 = *((_QWORD *)this + 1);
  if (v2 == *((_QWORD *)this + 2))
  {
    v3 = 0;
  }
  else
  {
    v3 = *(_QWORD *)(v2 + 16);
    v1 = (_QWORD *)(v3 + 24);
  }
  *v1 = 0;
  *((_QWORD *)this + 1) = v3;
  OUTLINED_FUNCTION_0_89();
}

void EDList::removeTail(EDList *this)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = *((_QWORD *)this + 2);
  v2 = (_QWORD *)((char *)this + 8);
  if (*((_QWORD *)this + 1) == v1)
  {
    v3 = 0;
  }
  else
  {
    v3 = *(_QWORD *)(v1 + 24);
    v2 = (_QWORD *)(v3 + 16);
  }
  *v2 = 0;
  *((_QWORD *)this + 2) = v3;
  OUTLINED_FUNCTION_0_89();
}

uint64_t EDList::removeAt(EDList *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != *((_QWORD *)a1 + 1))
  {
    if (v3 != *((_QWORD *)a1 + 2))
    {
      v4 = *(_QWORD *)(v3 + 16);
      *(_QWORD *)(v4 + 24) = *(_QWORD *)(v3 + 24);
      *(_QWORD *)(*(_QWORD *)(v3 + 24) + 16) = v4;
      OUTLINED_FUNCTION_0_89();
    }
    OUTLINED_FUNCTION_9_61(a1);
  }
  return (*(uint64_t (**)(EDList *))(*(_QWORD *)a1 + 64))(a1);
}

void EDList::removeAfter(EDList *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 != *((_QWORD *)a1 + 2))
  {
    v5 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(v5 + 24) = v3;
    *(_QWORD *)(v3 + 16) = v5;
    OUTLINED_FUNCTION_0_89();
  }
  OUTLINED_FUNCTION_9_61(a1);
}

void EDList::newIter(EDList *this)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)OUTLINED_FUNCTION_7_67();
  *v2 = &off_25198C118;
  v2[1] = v1;
  v2[2] = *(_QWORD *)(v1 + 8);
  OUTLINED_FUNCTION_8_62();
}

BOOL EDListIter::atStart(EDListIter *this)
{
  return *((_QWORD *)this + 2) == *(_QWORD *)(*((_QWORD *)this + 1) + 8);
}

BOOL EDListIter::atEnd(EDListIter *this)
{
  return *((_QWORD *)this + 2) == *(_QWORD *)(*((_QWORD *)this + 1) + 16);
}

uint64_t EDListIter::resetToTail(EDListIter *this)
{
  return OUTLINED_FUNCTION_11_59((uint64_t)this, *(_QWORD *)(*((_QWORD *)this + 1) + 16));
}

uint64_t EDListIter::reset(EDListIter *this)
{
  return OUTLINED_FUNCTION_11_59((uint64_t)this, *(_QWORD *)(*((_QWORD *)this + 1) + 8));
}

BOOL ESList::isEmpty(ESList *this)
{
  return *((_QWORD *)this + 1) == 0;
}

void sub_24869C23C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x249599130](v1, 0xA1C409BE6959DLL);
  _Unwind_Resume(a1);
}

uint64_t ESListIter::next(ESListIter *this)
{
  return *(_QWORD *)(*((_QWORD *)this + 2) + 16);
}

BOOL EDList::isEmpty(EDList *this)
{
  return *((_QWORD *)this + 1) == 0;
}

uint64_t EDList::head(EDList *this)
{
  return *((_QWORD *)this + 1);
}

uint64_t EDList::tail(EDList *this)
{
  return *((_QWORD *)this + 2);
}

void EDList::~EDList(EDList *this)
{
  EDList::~EDList(this);
  JUMPOUT(0x249599130);
}

{
  *(_QWORD *)this = off_25198BF98;
  EList::reset(this);
}

void sub_24869C2D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x249599130](v1, 0xA1C409BE6959DLL);
  _Unwind_Resume(a1);
}

uint64_t EDListIter::next(EDListIter *this)
{
  return *(_QWORD *)(*((_QWORD *)this + 2) + 16);
}

uint64_t ECollectIter::operator()(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 8))(*(_QWORD *)(a1 + 8));
}

uint64_t ECollectIter::atEnd(ECollectIter *this)
{
  return (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 1) + 16))(*((_QWORD *)this + 1));
}

uint64_t ECollectIter::next(ECollectIter *this)
{
  return (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 1) + 24))(*((_QWORD *)this + 1));
}

uint64_t ECollectIter::reset(ECollectIter *this)
{
  return (*(uint64_t (**)(_QWORD))(**((_QWORD **)this + 1) + 48))(*((_QWORD *)this + 1));
}

void ECollectIter::~ECollectIter(ECollectIter *this)
{
  ECollectIter::~ECollectIter(this);
  JUMPOUT(0x249599130);
}

{
  *(_QWORD *)this = &unk_25198C180;
  MEMORY[0x249599130](*((_QWORD *)this + 1), 0x81C40B8603338);
}

void OUTLINED_FUNCTION_0_89()
{
  JUMPOUT(0x249599130);
}

uint64_t OUTLINED_FUNCTION_1_81()
{
  return operator new();
}

uint64_t OUTLINED_FUNCTION_3_76()
{
  return operator new();
}

uint64_t OUTLINED_FUNCTION_4_72()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)v0 + 48))(v0, *v1, v1[1]);
}

uint64_t OUTLINED_FUNCTION_5_69(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_6_68()
{
  uint64_t (***v0)(_QWORD);

  return (**v0)(v0);
}

uint64_t OUTLINED_FUNCTION_7_67()
{
  return operator new();
}

void OUTLINED_FUNCTION_9_61(EDList *a1@<X8>)
{
  EDList::removeTail(a1);
}

uint64_t OUTLINED_FUNCTION_11_59@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(result + 16) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_13_55()
{
  uint64_t (**v0)(uint64_t);
  uint64_t v1;

  return (*v0)(v1);
}

uint64_t OUTLINED_FUNCTION_14_54(EList *a1)
{
  return EList::reset(a1);
}

uint64_t IndexQueue::addOffsetFromLast(IndexQueue *this, unsigned int a2, uint64_t a3)
{
  uint64_t result;

  result = (*(uint64_t (**)(IndexQueue *, _QWORD))(*(_QWORD *)this + 48))(this, a2);
  if ((_DWORD)result)
  {
    *((_QWORD *)this + 3) += a3;
    return 1;
  }
  return result;
}

uint64_t IndexQueue::reduceLeadTime(IndexQueue *this, unint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  v2 = a2;
  if (*(_QWORD *)(OUTLINED_FUNCTION_1_82((uint64_t)this) + 8) < a2)
    v2 = *(_QWORD *)(OUTLINED_FUNCTION_0_90() + 8);
  v3 = OUTLINED_FUNCTION_0_90();
  *(_QWORD *)(v3 + 8) -= v2;
  return OUTLINED_FUNCTION_2_79();
}

uint64_t IndexQueue::reduceLeadTime(IndexQueue *this)
{
  OUTLINED_FUNCTION_1_82((uint64_t)this);
  *(_QWORD *)(OUTLINED_FUNCTION_0_90() + 8) = 0;
  return OUTLINED_FUNCTION_2_79();
}

uint64_t IndexQueue::increaseLeadTime(IndexQueue *this, uint64_t a2)
{
  uint64_t result;

  result = (**(uint64_t (***)(IndexQueue *))this)(this);
  if (!(_DWORD)result)
  {
    *((_QWORD *)this + 3) += a2;
    result = (*(uint64_t (**)(IndexQueue *))(*(_QWORD *)this + 24))(this);
    *(_QWORD *)(result + 8) += a2;
  }
  return result;
}

void IndexQueue::remove(IndexQueue *this)
{
  ESList *v1;

  OUTLINED_FUNCTION_1_82((uint64_t)this);
  *((_QWORD *)v1 + 3) -= *(_QWORD *)(OUTLINED_FUNCTION_0_90() + 8);
  ESList::removeHead(v1);
}

uint64_t sub_24869C62C()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_0_90()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v0 + 24))(v0);
}

uint64_t OUTLINED_FUNCTION_1_82(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 24))(a1);
}

uint64_t OUTLINED_FUNCTION_2_79()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) -= v1;
  return v1;
}

void IniFileWriter::IniFileWriter(IniFileWriter *this, const char *a2)
{
  char *v2;
  char *v3;

  *(_QWORD *)this = 0;
  *((_QWORD *)this + 514) = 0;
  *((_QWORD *)this + 516) = 0;
  *((_QWORD *)this + 515) = 0;
  if (a2)
  {
    v2 = (char *)this + 8;
    v3 = strcpy((char *)this + 8, a2);
    *(_WORD *)&v2[strlen(v3)] = 47;
    *(_QWORD *)&v2[OUTLINED_FUNCTION_10_62()] = 0x696E692E696365;
  }
}

void IniFileWriter::~IniFileWriter(IniFileWriter *this)
{
  if (*((_QWORD *)this + 514))
    OUTLINED_FUNCTION_0_91();
}

uint64_t IniFileWriter::writeString(IniFileWriter *this, const char *a2, char *a3, const char *a4)
{
  uint64_t v7;
  const char *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  const char *v14;
  int v15;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  int v22;
  int v23;
  int v24;
  char *v25;
  int v26;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  int v33;
  int v34;
  int v35;
  int v36;
  uint64_t v38;

  if (IniFileWriter::readFileIntoMemory(this, "r+")
    || IniFileWriter::readFileIntoMemory(this, "a+"))
  {
    strlen(a2);
    v7 = OUTLINED_FUNCTION_1_83();
    *(_WORD *)v7 = 23306;
    strcpy((char *)(v7 + 2), a2);
    *(_WORD *)(v7 + OUTLINED_FUNCTION_10_62()) = 93;
    v8 = (const char *)*((_QWORD *)this + 514);
    v9 = strlen(v8);
    v10 = IniFileWriter::stringSearch(this, (const char *)(v7 + 1), 0, v9);
    v11 = v10;
    *((_QWORD *)this + 515) = v10;
    if (v8[v10])
    {
      v12 = strlen(a2);
      if (IniFileWriter::goEndSection(this))
      {
        v13 = IniFileWriter::stringSearch(this, a3, v11 + v12 + 2, *((_QWORD *)this + 515));
        *((_QWORD *)this + 515) = v13;
        v14 = (const char *)(*((_QWORD *)this + 514) + v13);
        v15 = *(unsigned __int8 *)v14;
        if (v15 == 10 || v15 == 0)
        {
          strlen(v14);
          v17 = (char *)OUTLINED_FUNCTION_1_83();
          OUTLINED_FUNCTION_8_63();
          strcpy(v20, (const char *)(v18 + v19));
          OUTLINED_FUNCTION_7_68(this, 0, a3);
          if (v21)
          {
            while (1)
            {
              v22 = *v17;
              v23 = OUTLINED_FUNCTION_2_80();
              v24 = v23;
              if (!v22)
                break;
              if (v23)
                OUTLINED_FUNCTION_4_73(*v17);
              OUTLINED_FUNCTION_11_60();
              if (!v24)
                goto LABEL_38;
            }
            if (v23)
              OUTLINED_FUNCTION_5_70();
          }
LABEL_38:
          OUTLINED_FUNCTION_0_91();
        }
        if (IniFileWriter::goEndKey(this))
        {
          v38 = *((_QWORD *)this + 515);
          v28 = IniFileWriter::goEndData(this, &v38);
          v29 = v38;
          strlen((const char *)(*((_QWORD *)this + 514) + v38));
          v30 = (char *)OUTLINED_FUNCTION_1_83();
          v31 = v30;
          if (v28)
          {
            strcpy(v30, (const char *)(*((_QWORD *)this + 514) + v29));
            OUTLINED_FUNCTION_7_68(this, 0, 0);
            v32 = v31;
            if (v33)
            {
              while (1)
              {
                v34 = *v32;
                v35 = OUTLINED_FUNCTION_2_80();
                v36 = v35;
                if (!v34)
                  break;
                if (v35)
                  OUTLINED_FUNCTION_4_73(*v32);
                OUTLINED_FUNCTION_3_77();
                ++v32;
                if (!v36)
                  goto LABEL_38;
              }
              if (v35)
                OUTLINED_FUNCTION_5_70();
            }
          }
          goto LABEL_38;
        }
      }
    }
    else
    {
      if (v10)
        v25 = (char *)v7;
      else
        v25 = (char *)(v7 + 1);
      OUTLINED_FUNCTION_7_68(this, v25, a3);
      if (v26 && OUTLINED_FUNCTION_2_80())
      {
        OUTLINED_FUNCTION_5_70();
        IniFileWriter::writeFileFromMemory(this);
      }
    }
    OUTLINED_FUNCTION_0_91();
  }
  return 0;
}

uint64_t IniFileWriter::readFileIntoMemory(IniFileWriter *this, const char *a2)
{
  FILE *v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)((char *)this + 4120) = xmmword_2486A52E0;
  if (*((_QWORD *)this + 514))
    OUTLINED_FUNCTION_0_91();
  *((_QWORD *)this + 514) = OUTLINED_FUNCTION_1_83();
  v4 = fopen((const char *)this + 8, a2);
  *(_QWORD *)this = v4;
  if (!v4)
    return 0;
LABEL_4:
  v5 = fgetc(v4);
  v6 = 1;
  while (v6 && v5 != -1)
  {
    v6 = OUTLINED_FUNCTION_2_80();
    if (v6)
    {
      OUTLINED_FUNCTION_8_63();
      *(_BYTE *)(v7 + v8) = v5;
      OUTLINED_FUNCTION_3_77();
      v4 = *(FILE **)this;
      goto LABEL_4;
    }
  }
  if (v6)
  {
    v9 = OUTLINED_FUNCTION_2_80();
    if ((_DWORD)v9)
      OUTLINED_FUNCTION_5_70();
  }
  else
  {
    v9 = 0;
  }
  fclose(*(FILE **)this);
  return v9;
}

uint64_t IniFileWriter::stringSearch(IniFileWriter *this, const char *__s, uint64_t a3, uint64_t a4)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  BOOL v20;
  uint64_t v22;

  v8 = strlen(__s);
  while (1)
  {
    v9 = a3;
    if (a3 >= a4)
      break;
    v10 = *((_QWORD *)this + 514);
    v11 = *(unsigned __int8 *)(v10 + a3);
    if (v11 == *(unsigned __int8 *)__s)
    {
      v12 = 0;
      v13 = v10 + a3 + 1;
      v14 = a3;
      do
      {
        ++v14;
        v15 = v12 + 1;
        v16 = v12 + 1 + a3;
        v17 = *(unsigned __int8 *)(v13 + v12);
        v18 = __s[v12 + 1];
        v20 = v16 < a4 && v17 == v18 && v15 < v8;
        v12 = v15;
      }
      while (v20);
      a3 += v15;
      if (v8 == v15)
      {
        if (v17 <= 0x3D && ((1 << v17) & 0x2000000000000401) != 0)
        {
          v9 = v14;
          return v9 - v8;
        }
        if (!strcmp(__s, "["))
        {
          v9 += v15;
          return v9 - v8;
        }
      }
    }
    else
    {
      if (a3 <= a4)
        v22 = a4;
      else
        v22 = a3;
      if (*(_BYTE *)(v10 + a3))
      {
        while (v11 != 10)
        {
          if (v9 >= a4)
          {
            v9 = v22;
            break;
          }
          v11 = *(unsigned __int8 *)(v10 + 1 + v9++);
          if (!v11)
            break;
        }
      }
      if (v9 >= a4)
        a3 = v9;
      else
        a3 = v9 + 1;
    }
  }
  v8 = 0;
  return v9 - v8;
}

void IniFileWriter::writeToMemory(IniFileWriter *this, char *a2, char *a3, char *a4)
{
  char *v5;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;

  v5 = a3;
  if (!a2)
  {
    if (a3)
      goto LABEL_12;
    goto LABEL_8;
  }
  while (1)
  {
    v8 = *a2;
    v9 = OUTLINED_FUNCTION_2_80();
    if (!v8)
      break;
    if (v9)
      OUTLINED_FUNCTION_4_73(*a2);
    OUTLINED_FUNCTION_11_60();
    if (!v10)
      return;
  }
  if (v9)
  {
    OUTLINED_FUNCTION_6_69();
    if (v5)
    {
LABEL_12:
      while (1)
      {
        v11 = *v5;
        v12 = OUTLINED_FUNCTION_2_80();
        if (!v11)
          break;
        if (v12)
          OUTLINED_FUNCTION_4_73(*v5);
        OUTLINED_FUNCTION_3_77();
        ++v5;
        if (!v13)
          return;
      }
      if (v12)
      {
        v14 = *((_QWORD *)this + 514);
        v15 = *((_QWORD *)this + 515);
        *((_QWORD *)this + 515) = v15 + 1;
        *(_BYTE *)(v14 + v15) = 61;
        if (a4)
        {
LABEL_19:
          while (1)
          {
            v16 = *a4;
            v17 = OUTLINED_FUNCTION_2_80();
            if (!v16)
              break;
            if (v17)
              OUTLINED_FUNCTION_4_73(*a4);
            OUTLINED_FUNCTION_3_77();
            ++a4;
            if (!v18)
              return;
          }
          if (v17)
            OUTLINED_FUNCTION_6_69();
        }
      }
      return;
    }
LABEL_8:
    if (a4)
      goto LABEL_19;
  }
}

uint64_t IniFileWriter::ensureBufferSpace(IniFileWriter *this)
{
  if (*((_QWORD *)this + 516) <= *((_QWORD *)this + 515))
    IniFileWriter::doubleBuffer(this);
  return 1;
}

uint64_t IniFileWriter::goEndSection(IniFileWriter *this)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v3;
  int v4;

  v1 = *((_QWORD *)this + 514);
  for (i = *((_QWORD *)this + 515); ; *((_QWORD *)this + 515) = i)
  {
    v3 = *(unsigned __int8 *)(v1 + i);
    if ((_DWORD)v3 == 10)
      break;
    if (!*(_BYTE *)(v1 + i))
      return v3;
    ++i;
LABEL_9:
    ;
  }
  ++i;
  v4 = *(unsigned __int8 *)(v1 + i);
  if (v4 != 10 && v4 != 0)
    goto LABEL_9;
  *((_QWORD *)this + 515) = i;
  return 1;
}

uint64_t IniFileWriter::goEndKey(IniFileWriter *this)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v3;

  v1 = *((_QWORD *)this + 514);
  for (i = *((_QWORD *)this + 515); ; *((_QWORD *)this + 515) = i)
  {
    v3 = *(unsigned __int8 *)(v1 + i);
    if (!*(_BYTE *)(v1 + i))
      break;
    if ((_DWORD)v3 == 61)
    {
      *((_QWORD *)this + 515) = i + 1;
      return 1;
    }
    ++i;
  }
  return v3;
}

uint64_t IniFileWriter::goEndData(IniFileWriter *this, uint64_t *a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t result;

  v2 = *((_QWORD *)this + 514);
  for (i = *a2; ; *a2 = i)
  {
    result = *(unsigned __int8 *)(v2 + i);
    if (!*(_BYTE *)(v2 + i))
      break;
    if ((_DWORD)result == 10)
    {
      *a2 = i + 1;
      return 1;
    }
    ++i;
  }
  return result;
}

uint64_t IniFileWriter::writeFileFromMemory(IniFileWriter *this)
{
  FILE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *((_QWORD *)this + 515) = 0;
  v2 = fopen((const char *)this + 8, "w");
  *(_QWORD *)this = v2;
  if (!v2)
    return 0;
  v3 = *((_QWORD *)this + 515);
  while (1)
  {
    v4 = *((_QWORD *)this + 514);
    if (!*(_BYTE *)(v4 + v3))
    {
      v5 = 1;
      goto LABEL_9;
    }
    if (fputc(*(char *)(v4 + v3), *(FILE **)this) == -1)
      break;
    OUTLINED_FUNCTION_3_77();
  }
  v5 = 0;
LABEL_9:
  fclose(*(FILE **)this);
  return v5;
}

uint64_t IniFileWriter::deleteKeyFromSection(IniFileWriter *this, const char *a2, const char *a3)
{
  return 0;
}

void IniFileWriter::deleteSection(const char **this, const char *a2)
{
  uint64_t v4;
  size_t v5;

  if (IniFileWriter::readFileIntoMemory((IniFileWriter *)this, "r"))
  {
    OUTLINED_FUNCTION_10_62();
    v4 = OUTLINED_FUNCTION_1_83();
    *(_BYTE *)v4 = 91;
    strcpy((char *)(v4 + 1), a2);
    *(_WORD *)(v4 + strlen((const char *)v4)) = 93;
    v5 = strlen(this[514]);
    this[515] = (const char *)IniFileWriter::stringSearch((IniFileWriter *)this, (const char *)v4, 0, v5);
    OUTLINED_FUNCTION_0_91();
  }
  OUTLINED_FUNCTION_9_62();
}

void IniFileWriter::doubleBuffer(IniFileWriter *this)
{
  uint64_t v2;
  void *v3;
  const void *v4;

  v2 = 2 * *((_QWORD *)this + 516);
  v3 = (void *)OUTLINED_FUNCTION_1_83();
  v4 = (const void *)*((_QWORD *)this + 514);
  memcpy(v3, v4, *((_QWORD *)this + 516));
  if (v4)
    OUTLINED_FUNCTION_0_91();
  *((_QWORD *)this + 514) = v3;
  *((_QWORD *)this + 516) = v2;
  OUTLINED_FUNCTION_9_62();
}

void OUTLINED_FUNCTION_0_91()
{
  JUMPOUT(0x249599124);
}

uint64_t OUTLINED_FUNCTION_1_83()
{
  return operator new[]();
}

uint64_t OUTLINED_FUNCTION_2_80()
{
  IniFileWriter *v0;

  return IniFileWriter::ensureBufferSpace(v0);
}

void OUTLINED_FUNCTION_3_77()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 4120);
}

void OUTLINED_FUNCTION_4_73(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)(v1 + 4112) + *(_QWORD *)(v1 + 4120)) = a1;
}

void OUTLINED_FUNCTION_5_70()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 4112) + *(_QWORD *)(v0 + 4120)) = 0;
}

void OUTLINED_FUNCTION_6_69()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 4112);
  v2 = *(_QWORD *)(v0 + 4120);
  *(_QWORD *)(v0 + 4120) = v2 + 1;
  *(_BYTE *)(v1 + v2) = 10;
}

void OUTLINED_FUNCTION_7_68(IniFileWriter *a1, char *a2, char *a3)
{
  char *v3;

  IniFileWriter::writeToMemory(a1, a2, a3, v3);
}

size_t OUTLINED_FUNCTION_10_62()
{
  const char *v0;

  return strlen(v0);
}

void OUTLINED_FUNCTION_11_60()
{
  uint64_t v0;

  ++*(_QWORD *)(v0 + 4120);
}

void RequestLicense::RequestLicense(RequestLicense *this)
{
  OUTLINED_FUNCTION_0_92((uint64_t)this, (uint64_t)&off_25198C1F0);
}

{
  OUTLINED_FUNCTION_0_92((uint64_t)this, (uint64_t)&off_25198C1F0);
}

uint64_t RequestLicense::licenseGranted(RequestLicense *this)
{
  return *((unsigned __int8 *)this + 8);
}

BOOL RequestLicense::queryInterface(RequestLicense *this, uint64_t a2, void **a3)
{
  *a3 = 0;
  if ((a2 & 0xFFFFFFFFFFFFFFFDLL) != 1)
    return 0;
  *a3 = this;
  (*(void (**)(RequestLicense *))(*(_QWORD *)this + 8))(this);
  return *a3 != 0;
}

uint64_t RequestLicense::addRef(RequestLicense *this)
{
  return 0;
}

uint64_t RequestLicense::release(RequestLicense *this)
{
  return 0;
}

uint64_t RequestLicense::licenseNeeded(RequestLicense *this)
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_0_92@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)result = a2;
  *(_BYTE *)(result + 8) = 1;
  return result;
}

void init_new(uint64_t a1)
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = malloc_type_malloc(0x260uLL, 0x10F004008EEF3F9uLL);
  *(_QWORD *)(a1 + 184) = v2;
  bzero(v2, 0x260uLL);
  v3 = malloc_type_malloc(0x30uLL, 0x10040436913F5uLL);
  **(_QWORD **)(a1 + 184) = v3;
  *v3 = "STATEMENT";
  OUTLINED_FUNCTION_4_74();
  *(_QWORD *)(v4 + 8) = "TEST";
  OUTLINED_FUNCTION_4_74();
  *(_QWORD *)(v5 + 16) = "NULL";
  OUTLINED_FUNCTION_4_74();
  *(_QWORD *)(v6 + 24) = "LOOP";
  OUTLINED_FUNCTION_4_74();
  *(_QWORD *)(v7 + 32) = "COMMAND";
  *(_QWORD *)(**(_QWORD **)(a1 + 184) + 40) = &unk_2486A5318;
  v8 = *(_QWORD *)(a1 + 184);
  *(_DWORD *)(v8 + 8) = 3;
  *(_DWORD *)(v8 + 28) = 2;
  *(_BYTE *)(v8 + 444) = 5;
  *(_BYTE *)(v8 + 496) = 1;
  *(_QWORD *)(v8 + 528) = &unk_2486A5318;
}

void init_delete(uint64_t a1)
{
  void **v2;

  if (a1)
  {
    v2 = *(void ***)(a1 + 184);
    if (*v2)
    {
      free(*v2);
      v2 = *(void ***)(a1 + 184);
      *v2 = 0;
    }
    bzero(v2, 0x260uLL);
    free(*(void **)(a1 + 184));
    *(_QWORD *)(a1 + 184) = 0;
  }
}

uint64_t notspecialvar()
{
  return 0;
}

void vcmdinit(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;

  v2 = *(_QWORD *)(a1 + 184);
  v3 = *(_QWORD *)(a1 + 192);
  *(_QWORD *)(v2 + 472) = 14000;
  *(_QWORD *)(v3 + 8864) = 1;
  *(_DWORD *)(v3 + 9084) = *(unsigned __int8 *)(a1 + 288) + 6;
  if (logicalIOInit(a1, *(_DWORD *)(v2 + 448) + *(unsigned __int8 *)(a1 + 304), (uint64_t)errorIgnore))
  {
    v4 = builtInLogicalFiles(a1);
    v5 = (int)v4;
    while (v5 < *(unsigned __int8 *)(a1 + 304))
    {
      v4 = vfdef_lf(a1, *(_QWORD *)(*(_QWORD *)(a1 + 296) + 8 * v5++));
      if ((_DWORD)v4 == -1)
        return;
    }
    OUTLINED_FUNCTION_2_81(v4, **(char **)(a1 + 216), "null", (_OWORD *)(*(_QWORD *)(a1 + 216) + 240));
    if ((_DWORD)v6)
    {
      OUTLINED_FUNCTION_0_93(v6, *(char *)(*(_QWORD *)(a1 + 216) + 5), "null", (_OWORD *)(*(_QWORD *)(a1 + 216) + 240));
      if ((_DWORD)v7)
      {
        OUTLINED_FUNCTION_2_81(v7, *(char *)(*(_QWORD *)(a1 + 216) + 1), "null", (_OWORD *)(*(_QWORD *)(a1 + 216) + 240));
        if ((_DWORD)v8)
        {
          OUTLINED_FUNCTION_0_93(v8, *(char *)(*(_QWORD *)(a1 + 216) + 4), "null", (_OWORD *)(*(_QWORD *)(a1 + 216) + 240));
          if ((_DWORD)v9)
          {
            OUTLINED_FUNCTION_0_93(v9, *(char *)(*(_QWORD *)(a1 + 216) + 2), "null", (_OWORD *)(*(_QWORD *)(a1 + 216) + 240));
            if ((_DWORD)v10)
            {
              OUTLINED_FUNCTION_3_78(v10, "pgmin");
              if ((_DWORD)v11)
              {
                OUTLINED_FUNCTION_1_84(v11, "pgmout");
                if ((_DWORD)v12)
                {
                  OUTLINED_FUNCTION_3_78(v12, "cmdin");
                  if ((_DWORD)v13)
                  {
                    OUTLINED_FUNCTION_1_84(v13, "cmdout");
                    if ((_DWORD)v14)
                    {
                      OUTLINED_FUNCTION_1_84(v14, "prompt");
                      if (v15)
                      {
                        if (vmeminit(a1))
                        {
                          if (vdelinit(a1))
                          {
                            vdltinit(a1, 1);
                            if (v16)
                            {
                              if (vdictinit(a1))
                                vlinkinit(a1);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void vcmdend(int a1, int a2)
{
  exit(a2);
}

void OUTLINED_FUNCTION_0_93(uint64_t a1, int a2, const char *a3, _OWORD *a4)
{
  uint64_t v4;

  logicalFileAddPhysical(v4, a2, a3, a4, 0, 1);
}

void OUTLINED_FUNCTION_1_84(uint64_t a1, char *a2)
{
  uint64_t v2;

  logicalFileOpen(v2, a2, 1);
}

void OUTLINED_FUNCTION_2_81(uint64_t a1, int a2, const char *a3, _OWORD *a4)
{
  uint64_t v4;

  logicalFileAddPhysical(v4, a2, a3, a4, 0, 0);
}

void OUTLINED_FUNCTION_3_78(uint64_t a1, char *a2)
{
  uint64_t v2;

  logicalFileOpen(v2, a2, 0);
}

uint64_t vlinkinit(uint64_t result)
{
  uint64_t v1;
  uint64_t i;
  uint64_t v3;
  __int16 *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = 0;
  for (i = 9224; ; i += 120)
  {
    v3 = *(_QWORD *)(result + 192);
    v4 = (__int16 *)(v3 + 9112);
    if (v1 >= *(__int16 *)(v3 + 9114))
      break;
    v5 = (_QWORD *)(v3 + i);
    v6 = *(_QWORD *)(v3 + i - 48);
    if (v6)
    {
      **(_QWORD **)v6 = v5 - 7;
      **(_QWORD **)(v6 + 8) = *v5;
      **(_QWORD **)(v6 + 24) = *(_QWORD *)(v6 + 16);
    }
    ++v1;
  }
  v7 = *v4 & ~(*v4 >> 31);
  v8 = (uint64_t *)(v3 + 9136);
  if ((*v4 & ~(*v4 >> 31)) != 0)
  {
    do
    {
      v9 = *(v8 - 2);
      if (v9)
      {
        v10 = *(_QWORD *)(v9 + 8);
        if (v10)
        {
          v11 = *(_QWORD *)(v10 + 16) + 80 * *((__int16 *)v8 - 4);
          *v8 = v11;
          *(_QWORD *)(v11 + 40) = v9;
        }
      }
      --v7;
      v8 += 3;
    }
    while (v7);
  }
  return result;
}

double logio_new(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  double result;
  __int128 v18;

  if (a1)
  {
    v2 = malloc_type_malloc(0x178uLL, 0x10D0040C1D992DBuLL);
    *(_QWORD *)(a1 + 216) = v2;
    bzero(v2, 0x178uLL);
    v3 = *(_QWORD *)(a1 + 216);
    *(_WORD *)(v3 + 4) = -1;
    *(_DWORD *)v3 = -1;
    v4 = *(_OWORD *)&off_257776EC8;
    *(_OWORD *)(v3 + 80) = xmmword_257776EB8;
    *(_OWORD *)(v3 + 96) = v4;
    v5 = *(_OWORD *)algn_257776EA8;
    *(_OWORD *)(v3 + 48) = diskFileClass_glob;
    *(_OWORD *)(v3 + 64) = v5;
    v6 = *(_OWORD **)(a1 + 216);
    v7 = *(_OWORD *)algn_257776EE8;
    v6[7] = dynaBufFileClass_glob;
    v6[8] = v7;
    v8 = *(_OWORD *)&off_257776F08;
    v6[9] = xmmword_257776EF8;
    v6[10] = v8;
    v9 = *(_OWORD **)(a1 + 216);
    v10 = *(_OWORD *)&off_257776F48;
    v9[13] = xmmword_257776F38;
    v9[14] = v10;
    v11 = *(_OWORD *)algn_257776F28;
    v9[11] = stdTermFileClass_glob;
    v9[12] = v11;
    v12 = *(_OWORD **)(a1 + 216);
    v13 = *(_OWORD *)&off_257776F88;
    v12[17] = xmmword_257776F78;
    v12[18] = v13;
    v14 = *(_OWORD *)algn_257776F68;
    v12[15] = nullFileClass_glob;
    v12[16] = v14;
    v15 = *(_OWORD **)(a1 + 216);
    v16 = *(_OWORD *)algn_257776FA8;
    v15[19] = stdErrorFileClass_glob;
    v15[20] = v16;
    result = *(double *)&xmmword_257776FB8;
    v18 = *(_OWORD *)&off_257776FC8;
    v15[21] = xmmword_257776FB8;
    v15[22] = v18;
  }
  return result;
}

void logio_delete(uint64_t a1)
{
  void *v2;

  if (a1)
  {
    v2 = *(void **)(a1 + 216);
    if (v2)
    {
      bzero(v2, 0x178uLL);
      free(*(void **)(a1 + 216));
      *(_QWORD *)(a1 + 216) = 0;
    }
  }
}

uint64_t logicalIOInit(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(v4 + 32) = a3;
  *(_DWORD *)(v4 + 16) = a2;
  result = (uint64_t)malloc_type_calloc(0x40uLL, a2, 0x999E51CDuLL);
  *(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) = result;
  if (result)
  {
    OUTLINED_FUNCTION_3_79(result, "pgmin");
    **(_BYTE **)(a1 + 216) = v6;
    if ((_DWORD)v6 == -1)
      return 0;
    OUTLINED_FUNCTION_3_79(v6, "pgmout");
    *(_BYTE *)(*(_QWORD *)(a1 + 216) + 5) = v7;
    if ((_DWORD)v7 == -1)
      return 0;
    OUTLINED_FUNCTION_3_79(v7, "cmdin");
    *(_BYTE *)(*(_QWORD *)(a1 + 216) + 1) = v8;
    if ((_DWORD)v8 == -1)
      return 0;
    OUTLINED_FUNCTION_3_79(v8, "cmdout");
    *(_BYTE *)(*(_QWORD *)(a1 + 216) + 4) = v9;
    if ((_DWORD)v9 == -1)
      return 0;
    OUTLINED_FUNCTION_3_79(v9, "prompt");
    *(_BYTE *)(*(_QWORD *)(a1 + 216) + 2) = v10;
    if ((_DWORD)v10 == -1)
      return 0;
    OUTLINED_FUNCTION_3_79(v10, "prmout");
    v12 = *(_QWORD *)(a1 + 216);
    *(_BYTE *)(v12 + 3) = v11;
    if (v11 == -1)
    {
      return 0;
    }
    else
    {
      *(_DWORD *)(v12 + 20) = v11 + 1;
      return 1;
    }
  }
  return result;
}

void addLogicalFile(uint64_t a1, char *a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  if (a2)
  {
    vffind_lf(a1, a2);
    v4 = *(_QWORD *)(a1 + 216);
    if (v5 == -1)
    {
      v6 = 0;
      v7 = *(_QWORD *)(v4 + 8);
      do
        v8 = v6;
      while (*(unsigned __int8 *)(v7 + ((uint64_t)(char)v6++ << 6)));
      if (*(_DWORD *)(v4 + 16) <= v8)
      {
        (*(void (**)(uint64_t, const char *, const char *))(v4 + 32))(a1, "LOGIO", "There are too many interactive lfiles; use a bigger -lfiles argument on the DeltaTools command line");
        goto LABEL_11;
      }
      v10 = v7 + ((uint64_t)v8 << 6);
      strncpy((char *)v10, a2, 0x14uLL);
      v12 = (_QWORD *)(v10 + 48);
      v11 = *(_QWORD *)(v10 + 48);
      *(_QWORD *)(v10 + 28) = 0;
      *(_QWORD *)(v10 + 20) = 0;
      *(_DWORD *)(v10 + 44) = 0;
      *(_QWORD *)(v10 + 36) = 0;
      if (v11)
      {
        dynaBufReset(v11);
        if (*v12)
          goto LABEL_11;
      }
      else
      {
        v13 = dynaBufNew(0);
        *v12 = v13;
        if (v13)
          goto LABEL_11;
      }
      *(_BYTE *)v10 = 0;
      goto LABEL_11;
    }
    (*(void (**)(uint64_t, const char *, const char *))(v4 + 32))(a1, "LFILE", "%s is already defined");
  }
LABEL_11:
  OUTLINED_FUNCTION_0_94();
}

void logicalIOCleanup(uint64_t a1)
{
  uint64_t v1;
  char i;

  v1 = *(_QWORD *)(a1 + 216);
  if (*(_QWORD *)(v1 + 8))
  {
    for (i = 0; *(_DWORD *)(v1 + 16) > i; ++i)
    {
      if (*(_BYTE *)(*(_QWORD *)(v1 + 8) + ((uint64_t)i << 6)))
      {
        vfundef_lf();
        v1 = *(_QWORD *)(a1 + 216);
      }
    }
    *(_DWORD *)(v1 + 16) = 0;
    free(*(void **)(v1 + 8));
    *(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) = 0;
  }
}

void vfundef_lf()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;

  OUTLINED_FUNCTION_9_63();
  v4 = *(_QWORD **)(v3 + 40);
  if (v4)
  {
    do
    {
      v5 = (_QWORD *)v4[2];
      removeOutputElement(v0, v4, v1);
      v4 = v5;
    }
    while (v5);
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + 8) + (v2 << 6);
  *(_QWORD *)(v6 + 32) = 0;
  v7 = *(_QWORD *)(v6 + 24);
  if (v7)
  {
    do
    {
      v8 = *(_QWORD *)(v7 + 72);
      (*(void (**)(uint64_t))(v7 + 64))(v7 + 8);
      free(*(void **)v7);
      free((void *)v7);
      v7 = v8;
    }
    while (v8);
  }
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 216) + 8) + (v2 << 6)) = 0;
  v9 = (void **)OUTLINED_FUNCTION_5_71();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 216) + 8) + (v2 << 6) + 48) = dynaBufDelete(v9);
  OUTLINED_FUNCTION_8_64();
}

void vffind_lf(uint64_t a1, _BYTE *a2)
{
  char v2;
  uint64_t v3;
  int v4;

  if (a2 && *a2)
  {
    v2 = 0;
    v3 = *(_QWORD *)(a1 + 216);
    v4 = *(_DWORD *)(v3 + 16);
    while (v4 > v2 && OUTLINED_FUNCTION_15_52((const char *)(*(_QWORD *)(v3 + 8) + ((uint64_t)v2 << 6))))
      ++v2;
  }
  OUTLINED_FUNCTION_1_85();
}

unint64_t logicalFileName(uint64_t a1, int a2)
{
  uint64_t v2;

  if (a2 < 0)
    return 0;
  v2 = *(_QWORD *)(a1 + 216);
  if (*(_DWORD *)(v2 + 16) < (int)a2)
    return 0;
  else
    return *(_QWORD *)(v2 + 8) + ((unint64_t)a2 << 6);
}

BOOL vf_eof(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a2 << 6);
  if (*(_DWORD *)(v2 + 20) != 1)
    return 0;
  v3 = *(_QWORD *)(v2 + 32);
  return !v3 || (*(unsigned int (**)(uint64_t))(v3 + 56))(v3 + 8) != 0;
}

uint64_t builtInLogicalFiles(uint64_t a1)
{
  return *(unsigned int *)(*(_QWORD *)(a1 + 216) + 20);
}

void vfstat(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  _QWORD **v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;

  if ((a2 & 0x80000000) == 0)
  {
    v9 = *(_QWORD *)(a1 + 216);
    if (*(_DWORD *)(v9 + 16) >= (int)a2)
    {
      v10 = *(_QWORD *)(v9 + 8);
      v11 = a2;
      if (*(_BYTE *)(v10 + ((unint64_t)a2 << 6)))
      {
        vf_printf(a1, a3, 1, "  %.70s (%s)\n", a5, a6, a7, a8, v10 + ((_BYTE)a2 << 6));
        if (v13)
        {
          v14 = v10 + (v11 << 6);
          v15 = (_QWORD *)(v14 + 24);
          if (*(_QWORD *)(v14 + 24))
          {
            OUTLINED_FUNCTION_4_75(a1, a3, (uint64_t)"    input files:\n");
            if (!v20)
              return;
            v21 = (_QWORD **)(v14 + 24);
            while (1)
            {
              v22 = *v21;
              if (!v22)
                break;
              v23 = *v22;
              v21 = (_QWORD **)(v22 + 9);
              vf_printf(a1, a3, 1, "      %.70s\n", v16, v17, v18, v19, v23);
              if (!v24)
                return;
            }
          }
          v26 = *(_QWORD *)(v14 + 40);
          v25 = (uint64_t *)(v14 + 40);
          if (v26)
          {
            v27 = OUTLINED_FUNCTION_16_51();
            vf_puts(v27, v28, v29, 0);
            if (!v30)
              return;
            v31 = v25;
            while (1)
            {
              v32 = *v31;
              if (!*v31)
                break;
              v46 = **(_QWORD **)(v32 + 8);
              v33 = OUTLINED_FUNCTION_16_51();
              vf_printf(v33, v34, 0, "      %.70s", v35, v36, v37, v38, v46);
              if (v39)
              {
                if (*(_DWORD *)v32 != 1
                  || (v40 = OUTLINED_FUNCTION_16_51(), OUTLINED_FUNCTION_4_75(v40, v41, (uint64_t)" (+)"), v42))
                {
                  v43 = OUTLINED_FUNCTION_16_51();
                  OUTLINED_FUNCTION_4_75(v43, v44, (uint64_t)"\n");
                  v31 = (uint64_t *)(v32 + 16);
                  if (v45)
                    continue;
                }
              }
              return;
            }
          }
          if (!*v15 && !*v25)
            OUTLINED_FUNCTION_4_75(a1, a3, (uint64_t)"    no files assigned\n");
        }
      }
    }
  }
}

void vf_printf(uint64_t a1, int a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t *i;
  uint64_t v18;
  uint64_t v19;

  v12 = *(_QWORD *)(a1 + 216);
  v13 = a2;
  v14 = *(_QWORD *)(v12 + 8) + ((uint64_t)a2 << 6);
  if (*(_DWORD *)(v14 + 20) || *(_BYTE *)(v14 + 56))
  {
    if (a4)
    {
      v15 = (char *)malloc_type_malloc(0x200uLL, 0x27E0C141uLL);
      if (!v15)
      {
        (*(void (**)(uint64_t, const char *, const char *))(*(_QWORD *)(a1 + 216) + 32))(a1, "Logical I/O", "Out of memory (LOGIO:1)");
        return;
      }
      v16 = v15;
      __vsprintf_chk(v15, 0, 0x200uLL, a4, &a9);
      for (i = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + (v13 << 6) + 40); ; i = (uint64_t *)(v18 + 16))
      {
        v18 = *i;
        if (!*i)
          break;
        v19 = *(_QWORD *)(v18 + 8);
        if (v19)
        {
          if (!(*(unsigned int (**)(uint64_t, char *, uint64_t))(v19 + 56))(v19 + 16, v16, a3))
            break;
        }
      }
      free(v16);
    }
  }
  else
  {
    (*(void (**)(uint64_t, const char *, const char *, ...))(v12 + 32))(a1, "LFILE", "Logical file %s is not open for output", (const char *)v14);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + (v13 << 6) + 56) = 1;
  }
  OUTLINED_FUNCTION_7_69();
}

void vf_puts(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *i;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a1 + 216);
  v7 = a2;
  v8 = *(_QWORD *)(v6 + 8) + ((uint64_t)a2 << 6);
  if (*(_DWORD *)(v8 + 20) || *(_BYTE *)(v8 + 56))
  {
    for (i = (uint64_t *)(v8 + 40); ; i = (uint64_t *)(v10 + 16))
    {
      v10 = *i;
      if (!*i)
        break;
      v11 = *(_QWORD *)(v10 + 8);
      if (v11)
      {
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 56))(v11 + 16, a3, a4))
          break;
      }
    }
  }
  else
  {
    (*(void (**)(uint64_t))(v6 + 32))(a1);
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + (v7 << 6) + 56) = 1;
  }
  OUTLINED_FUNCTION_0_94();
}

void vfstatall(uint64_t a1, int a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t v11;
  int v12;

  OUTLINED_FUNCTION_4_75(a1, a2, (uint64_t)"logical files:\n");
  if (v9)
  {
    v10 = 0;
    do
    {
      v11 = *(_QWORD *)(a1 + 216);
      if (*(_DWORD *)(v11 + 16) <= v10)
        break;
      if (*(_BYTE *)(v11 + 40))
        break;
      vfstat(a1, v10++, a2, v4, v5, v6, v7, v8);
    }
    while (v12);
  }
  OUTLINED_FUNCTION_8_64();
}

uint64_t checkInterrupt(uint64_t a1)
{
  return *(unsigned __int8 *)(*(_QWORD *)(a1 + 216) + 40);
}

void logicalFileOpen(uint64_t a1, char *a2, int a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _DWORD *v18;
  int v19;
  uint64_t v20;
  const char *v21;
  int v22;
  _OWORD *v23;
  uint64_t v24;
  int v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  int v36;
  int v37;
  uint64_t v38;
  const char *v39;
  int v40;
  _OWORD *v41;
  uint64_t v42;
  int v43;

  vffind_lf(a1, a2);
  if (v6 == -1)
  {
    addLogicalFile(a1, a2);
    if (v6 == -1)
      goto LABEL_32;
  }
  v13 = *(_QWORD *)(a1 + 216);
  v14 = *(_QWORD *)(v13 + 8);
  v15 = v6;
  *(_BYTE *)(v14 + ((uint64_t)v6 << 6) + 56) = 0;
  v16 = v14 + ((uint64_t)v6 << 6);
  v19 = *(_DWORD *)(v16 + 20);
  v18 = (_DWORD *)(v16 + 20);
  v17 = v19;
  if (v19)
  {
    if (a3 || v17 != 2)
    {
      if (a3 == 1 && v17 == 1)
        (*(void (**)(uint64_t, const char *, const char *))(v13 + 32))(a1, "LFILE OPEN", "The file %s is currently opened for INPUT");
    }
    else
    {
      (*(void (**)(uint64_t, const char *, const char *))(v13 + 32))(a1, "LFILE OPEN", "The file %s is currently opened for OUTPUT");
    }
    goto LABEL_32;
  }
  if ((a3 - 1) < 2)
  {
    if (!*(_QWORD *)(v14 + ((uint64_t)v6 << 6) + 40))
    {
      v20 = OUTLINED_FUNCTION_14_55();
      if (!assignOutputFile(v20, v21, v22, v23, v24, v25))
      {
        OUTLINED_FUNCTION_11_61();
LABEL_37:
        OUTLINED_FUNCTION_6_70(v26);
        goto LABEL_32;
      }
    }
    goto LABEL_21;
  }
  if (a3)
  {
LABEL_21:
    v33 = 0;
    goto LABEL_22;
  }
  v28 = v14 + ((uint64_t)v6 << 6);
  v31 = *(_QWORD *)(v28 + 24);
  v30 = (uint64_t *)(v28 + 24);
  v29 = v31;
  if (!v31)
  {
    if (!fileExists((_BYTE *)(v14 + ((uint64_t)v6 << 6)), 0, v7, v8, v9, v10, v11, v12))
    {
      v26 = *(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 216) + 32);
      goto LABEL_37;
    }
    v38 = OUTLINED_FUNCTION_14_55();
    assignInputFile(v38, v39, v40, v41, v42);
    if (!v43)
      goto LABEL_32;
    v29 = *v30;
  }
  openInputFile(a1, v29, v15);
  if (!v32)
    goto LABEL_32;
  v33 = 1;
LABEL_22:
  v34 = (uint64_t *)(v14 + (v15 << 6) + 40);
  while (1)
  {
    v35 = *v34;
    if (!*v34)
      break;
    if (a3 == 2)
      v36 = 1;
    else
      v36 = *(_DWORD *)v35;
    v37 = openOutputFile(a1, *(_QWORD *)(v35 + 8), v36);
    v34 = (uint64_t *)(v35 + 16);
    if (!v37)
      goto LABEL_32;
  }
  if (v33)
  {
    *v18 = 1;
    dynaBufReset(*(_QWORD *)(v14 + (v15 << 6) + 48));
  }
  else
  {
    *v18 = 2;
  }
LABEL_32:
  OUTLINED_FUNCTION_2_82();
}

uint64_t assignOutputFile(uint64_t a1, const char *a2, int a3, _OWORD *a4, uint64_t a5, int a6)
{
  uint64_t result;
  _QWORD *v13;
  size_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  result = (uint64_t)findOutputFile(a1, (uint64_t)a2);
  if (result)
  {
    v13 = (_QWORD *)result;
    if (findOutputElement(a1, a3, (_QWORD *)result))
      return 1;
    v19 = *(_QWORD *)(a1 + 216);
  }
  else
  {
    if (!a2)
      return result;
    if (!a4)
      return result;
    result = (uint64_t)malloc_type_malloc(0x58uLL, 0x10F004011FC8696uLL);
    if (!result)
      return result;
    v13 = (_QWORD *)result;
    v14 = strlen(a2);
    v15 = (char *)malloc_type_malloc(v14 + 1, 0xDC03B7E8uLL);
    *v13 = v15;
    if (!v15)
    {
      free(v13);
      return 0;
    }
    strcpy(v15, a2);
    v13[1] = 0;
    v16 = a4[2];
    v17 = a4[3];
    v18 = a4[1];
    *((_OWORD *)v13 + 1) = *a4;
    *((_OWORD *)v13 + 2) = v18;
    *((_OWORD *)v13 + 3) = v16;
    *((_OWORD *)v13 + 4) = v17;
    v13[3] = *v13;
    v13[4] = a5;
    v19 = *(_QWORD *)(a1 + 216);
    v13[10] = *(_QWORD *)(v19 + 24);
    *(_QWORD *)(v19 + 24) = v13;
  }
  v20 = *(_QWORD *)(v19 + 8);
  result = (uint64_t)malloc_type_malloc(0x18uLL, 0x1020040F89CB87BuLL);
  if (result)
  {
    *(_DWORD *)result = a6;
    v21 = v20 + ((uint64_t)a3 << 6);
    v22 = *(_QWORD *)(v21 + 40);
    *(_QWORD *)(v21 + 40) = result;
    *(_QWORD *)(result + 8) = v13;
    *(_QWORD *)(result + 16) = v22;
    ++*((_DWORD *)v13 + 3);
    if (!*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a3 << 6) + 20))
      return 1;
    return openOutputFile(a1, (uint64_t)v13, a6);
  }
  return result;
}

void assignInputFile(uint64_t a1, const char *a2, int a3, _OWORD *a4, uint64_t a5)
{
  char *v10;
  char *v11;
  size_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t (*v24)(uint64_t);

  if (a2)
  {
    if (a4)
    {
      v10 = (char *)malloc_type_malloc(0x50uLL, 0xF0040EFA0FAE9uLL);
      if (v10)
      {
        v11 = v10;
        v12 = strlen(a2);
        v13 = (char *)malloc_type_malloc(v12 + 1, 0x599D529uLL);
        *(_QWORD *)v11 = v13;
        if (v13)
        {
          strcpy(v13, a2);
          v14 = a4[2];
          v15 = a4[3];
          v16 = a4[1];
          *(_OWORD *)(v11 + 8) = *a4;
          *(_OWORD *)(v11 + 24) = v16;
          *(_OWORD *)(v11 + 56) = v15;
          *(_OWORD *)(v11 + 40) = v14;
          *((_QWORD *)v11 + 2) = *(_QWORD *)v11;
          *((_QWORD *)v11 + 3) = a5;
          *((_QWORD *)v11 + 9) = 0;
          v17 = *(_QWORD *)(*(_QWORD *)(a1 + 216) + 8);
          v18 = v17 + ((uint64_t)a3 << 6);
          v21 = *(_QWORD *)(v18 + 24);
          v19 = (_QWORD *)(v18 + 24);
          v20 = v21;
          if (v21)
          {
            do
            {
              v22 = v20;
              v20 = *(_QWORD *)(v20 + 72);
            }
            while (v20);
            v19 = (_QWORD *)(v22 + 72);
          }
          *v19 = v11;
          if (*(_DWORD *)(v17 + ((uint64_t)a3 << 6) + 20) == 1 && !*(_QWORD *)(v17 + ((uint64_t)a3 << 6) + 32))
          {
            openInputFile(a1, (uint64_t)v11, a3);
            if (!v23)
            {
              OUTLINED_FUNCTION_11_61();
              OUTLINED_FUNCTION_6_70(v24);
            }
          }
        }
        else
        {
          free(v11);
        }
      }
    }
  }
  OUTLINED_FUNCTION_7_69();
}

void openInputFile(uint64_t a1, uint64_t a2, int a3)
{
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(a2 + 32))(a1, a2 + 8, 0))
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a3 << 6) + 32) = a2;
  OUTLINED_FUNCTION_1_85();
}

uint64_t openOutputFile(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v7)(uint64_t);

  v4 = a2 + 16;
  if (a3)
    v5 = 2;
  else
    v5 = 1;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(a2 + 40))(a1, v4, v5))
  {
    ++*(_DWORD *)(a2 + 8);
    return 1;
  }
  else
  {
    OUTLINED_FUNCTION_11_61();
    return OUTLINED_FUNCTION_6_70(v7);
  }
}

void vfclose_lf()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t *i;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_13_56();
  v1 = *(_QWORD *)(v0 + 40);
  while (v1)
  {
    v2 = *(_QWORD *)(v1 + 8);
    v3 = *(_QWORD *)(v1 + 16);
    v1 = v3;
    v4 = *(_DWORD *)(v2 + 8) - 1;
    *(_DWORD *)(v2 + 8) = v4;
    if (!v4)
    {
      (*(void (**)(uint64_t))(v2 + 72))(v2 + 16);
      v1 = v3;
    }
  }
  OUTLINED_FUNCTION_12_57();
  for (i = (uint64_t *)(v5 + 24); ; i = (uint64_t *)(v7 + 72))
  {
    v7 = *i;
    if (!*i)
      break;
    (*(void (**)(uint64_t))(v7 + 64))(v7 + 8);
  }
  OUTLINED_FUNCTION_12_57();
  *(_DWORD *)(v8 + 20) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  OUTLINED_FUNCTION_8_64();
}

void vf_gets(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t (*v17)(uint64_t);

  v5 = *(_QWORD *)(a1 + 216);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = v6 + ((uint64_t)a2 << 6);
  if (*(_DWORD *)(v7 + 20) != 1)
  {
    v17 = *(uint64_t (**)(uint64_t))(v5 + 32);
    goto LABEL_17;
  }
  if (!*(_QWORD *)(v7 + 24))
  {
    v17 = *(uint64_t (**)(uint64_t))(v5 + 32);
    goto LABEL_17;
  }
  v8 = v6 + ((uint64_t)a2 << 6);
  v10 = (uint64_t *)(v8 + 32);
  v9 = *(_QWORD *)(v8 + 32);
  if (!v9)
  {
    v17 = *(uint64_t (**)(uint64_t))(v5 + 32);
    goto LABEL_17;
  }
  v13 = *(_QWORD *)(v8 + 48);
  v12 = (uint64_t *)(v8 + 48);
  dynaBufReset(v13);
  do
  {
    if ((*(unsigned int (**)(uint64_t))(v9 + 56))(v9 + 8))
    {
      if (!*(_QWORD *)(v9 + 72))
        goto LABEL_18;
      (*(void (**)(uint64_t))(v9 + 64))(v9 + 8);
      v9 = *(_QWORD *)(v9 + 72);
      *v10 = v9;
      openInputFile(a1, v9, a2);
      if (!v14 || !v9)
        goto LABEL_18;
    }
    else if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 40))(v9 + 8, *v12, a3))
    {
      goto LABEL_18;
    }
  }
  while (!dynaBufLength(*v12));
  v15 = dynaBufContents(*v12);
  OUTLINED_FUNCTION_4_75(a1, a2, v15);
  if (!v16)
  {
    OUTLINED_FUNCTION_11_61();
LABEL_17:
    OUTLINED_FUNCTION_6_70(v17);
  }
LABEL_18:
  OUTLINED_FUNCTION_2_82();
}

void vf_getc()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t *v5;

  OUTLINED_FUNCTION_9_63();
  if (!dynaBufAtEnd(*(_QWORD *)(v2 + 48)))
    goto LABEL_4;
  vf_gets(v0, v1, (uint64_t)&unk_2486A531A);
  if (v3 == 1)
  {
    v4 = OUTLINED_FUNCTION_5_71();
    dynaBufMoveAbs(v4, 0);
LABEL_4:
    v5 = (uint64_t *)OUTLINED_FUNCTION_5_71();
    dynaBufCurrentChar(v5, 1);
  }
  OUTLINED_FUNCTION_1_85();
}

uint64_t vf_ungetc()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  OUTLINED_FUNCTION_13_56();
  result = dynaBufMoveRel(*(_QWORD *)(v0 + 48), 0);
  if (result)
  {
    OUTLINED_FUNCTION_12_57();
    dynaBufMoveRel(*(_QWORD *)(v2 + 48), 0xFFFFFFFF);
    return 1;
  }
  return result;
}

uint64_t vf_clrbuf(uint64_t a1, int a2)
{
  return dynaBufReset(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a2 << 6) + 48));
}

uint64_t logicalFileInputBuffer(uint64_t a1, int a2)
{
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a2 << 6) + 48);
}

void logicalFileAddPhysical(uint64_t a1, int a2, const char *a3, _OWORD *a4, uint64_t a5, int a6)
{
  if (a6)
    assignOutputFile(a1, a3, a2, a4, a5, a6 != 1);
  else
    assignInputFile(a1, a3, a2, a4, a5);
}

void logicalFileRemovePhysical(uint64_t a1, int a2, uint64_t a3, int a4)
{
  const char **InputFile;
  const char **OutputFile;
  _QWORD *OutputElement;
  void (*v9)(uint64_t, const char *, const char *);
  const char *v10;
  uint64_t (*v11)(uint64_t);

  if (a3)
  {
    if (a4)
    {
      InputFile = findInputFile(a1, a3, a2);
      if (InputFile)
      {
        removeInputFile(a1, (uint64_t)InputFile, a2);
        goto LABEL_13;
      }
      OUTLINED_FUNCTION_10_63();
      v10 = "The input file %s is not assigned to %s";
    }
    else
    {
      OutputFile = findOutputFile(a1, a3);
      if (!OutputFile)
      {
        OUTLINED_FUNCTION_11_61();
        OUTLINED_FUNCTION_6_70(v11);
        goto LABEL_13;
      }
      OutputElement = (_QWORD *)findOutputElement(a1, a2, OutputFile);
      if (OutputElement)
      {
        removeOutputElement(a1, OutputElement, a2);
        goto LABEL_13;
      }
      OUTLINED_FUNCTION_10_63();
      v10 = "The output file %s is not assigned to %s";
    }
    v9(a1, "LFILE REMOVE", v10);
  }
LABEL_13:
  OUTLINED_FUNCTION_0_94();
}

const char **findInputFile(uint64_t a1, uint64_t a2, int a3)
{
  const char ***i;
  const char **v4;

  for (i = (const char ***)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a3 << 6) + 24);
        ;
        i = (const char ***)(v4 + 9))
  {
    v4 = *i;
    if (!*i || !OUTLINED_FUNCTION_15_52(*v4))
      break;
  }
  return v4;
}

void removeInputFile(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6;
  const char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 216) + 8);
  v7 = (const char *)(v6 + ((uint64_t)a3 << 6));
  v9 = v7 + 24;
  v8 = *((_QWORD *)v7 + 3);
  if (v8 == a2)
  {
LABEL_5:
    *v9 = *(_QWORD *)(a2 + 72);
  }
  else
  {
    while (1)
    {
      v10 = v8;
      v8 = *(_QWORD *)(v8 + 72);
      if (!v8)
        break;
      if (v8 == a2)
      {
        v9 = (_QWORD *)(v10 + 72);
        goto LABEL_5;
      }
    }
  }
  v11 = v6 + ((uint64_t)a3 << 6);
  v13 = *(_QWORD *)(v11 + 32);
  v12 = (_QWORD *)(v11 + 32);
  if (v13 == a2)
  {
    (*(void (**)(uint64_t))(a2 + 64))(a2 + 8);
    *v12 = 0;
    v14 = *(_QWORD *)(a2 + 72);
    if (v14)
    {
      openInputFile(a1, v14, a3);
      if (!v15)
      {
        (*(void (**)(uint64_t, const char *, const char *, ...))(*(_QWORD *)(a1 + 216) + 32))(a1, "LFILE REMOVE", "Can't open the next input file %s for logical file %s", **(const char ***)(a2 + 72), v7);
        *v12 = 0;
      }
    }
  }
  free(*(void **)a2);
  free((void *)a2);
}

const char **findOutputFile(uint64_t a1, uint64_t a2)
{
  const char ***i;
  const char **v3;

  if (!a2)
    return 0;
  for (i = (const char ***)(*(_QWORD *)(a1 + 216) + 24); ; i = (const char ***)(v3 + 10))
  {
    v3 = *i;
    if (!*i || !OUTLINED_FUNCTION_15_52(*v3))
      break;
  }
  return v3;
}

uint64_t findOutputElement(uint64_t a1, int a2, _QWORD *a3)
{
  uint64_t *i;
  uint64_t result;

  for (i = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + ((uint64_t)a2 << 6) + 40); ; i = (uint64_t *)(result + 16))
  {
    result = *i;
    if (!*i || **(_QWORD **)(result + 8) == *a3)
      break;
  }
  return result;
}

void removeOutputElement(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a1 + 216);
  v6 = *(_QWORD *)(v5 + 8);
  v7 = v6 + ((uint64_t)a3 << 6);
  v10 = *(_QWORD **)(v7 + 40);
  v9 = (_QWORD *)(v7 + 40);
  v8 = v10;
  if (v10 == a2)
  {
    v12 = a2[1];
    *v9 = a2[2];
LABEL_6:
    v13 = *(_DWORD *)(v6 + ((uint64_t)a3 << 6) + 20);
    v14 = *(_DWORD *)(v12 + 8);
    if (v13)
      *(_DWORD *)(v12 + 8) = --v14;
    if (!v14)
      (*(void (**)(uint64_t))(v12 + 72))(v12 + 16);
    v15 = *(_DWORD *)(v12 + 12) - 1;
    *(_DWORD *)(v12 + 12) = v15;
    if (!v15)
    {
      v16 = *(_QWORD *)(a1 + 216);
      v19 = *(_QWORD *)(v16 + 24);
      v18 = (_QWORD *)(v16 + 24);
      v17 = v19;
      if (v19 == v12)
      {
LABEL_15:
        *v18 = *(_QWORD *)(v12 + 80);
      }
      else
      {
        while (1)
        {
          v20 = v17;
          v17 = *(_QWORD *)(v17 + 80);
          if (!v17)
            break;
          if (v17 == v12)
          {
            v18 = (_QWORD *)(v20 + 80);
            goto LABEL_15;
          }
        }
      }
      free(*(void **)v12);
      free((void *)v12);
    }
    free(a2);
  }
  else
  {
    while (1)
    {
      v11 = v8;
      v8 = (_QWORD *)v8[2];
      if (!v8)
        break;
      if (v8 == a2)
      {
        v12 = a2[1];
        v11[2] = a2[2];
        goto LABEL_6;
      }
    }
    (*(void (**)(uint64_t, const char *, const char *, ...))(v5 + 32))(a1, "LFILE REMOVE", "The output file %s is not assigned to the logical file %s", *(const char **)a2[1], (const char *)(v6 + ((uint64_t)a3 << 6)));
  }
}

void logicalFileRemoveAllPhysical(uint64_t a1, uint64_t a2)
{
  char i;
  int v5;
  const char **InputFile;
  const char **OutputFile;
  const char **v8;
  char j;
  _QWORD *OutputElement;

  if (a2)
  {
    for (i = 0; ; ++i)
    {
      v5 = *(_DWORD *)(*(_QWORD *)(a1 + 216) + 16);
      if (v5 <= i)
        break;
      InputFile = findInputFile(a1, a2, i);
      if (InputFile)
        removeInputFile(a1, (uint64_t)InputFile, i);
    }
    OutputFile = findOutputFile(a1, a2);
    if (OutputFile)
    {
      v8 = OutputFile;
      for (j = 0; v5 > j; ++j)
      {
        OutputElement = (_QWORD *)findOutputElement(a1, j, v8);
        if (OutputElement)
        {
          removeOutputElement(a1, OutputElement, j);
          v5 = *(_DWORD *)(*(_QWORD *)(a1 + 216) + 16);
        }
      }
    }
  }
}

void logicalFileFindPhysical(uint64_t a1, int a2, _BYTE *a3, int a4)
{
  const char **OutputFile;

  if (a3)
  {
    if (*a3)
    {
      if (a4)
      {
        findInputFile(a1, (uint64_t)a3, a2);
      }
      else
      {
        OutputFile = findOutputFile(a1, (uint64_t)a3);
        if (OutputFile)
          findOutputElement(a1, a2, OutputFile);
      }
    }
    OUTLINED_FUNCTION_1_85();
  }
}

uint64_t setInterrupt(uint64_t result, char a2)
{
  *(_BYTE *)(*(_QWORD *)(result + 216) + 40) = a2;
  return result;
}

void OUTLINED_FUNCTION_3_79(uint64_t a1, char *a2)
{
  uint64_t v2;

  addLogicalFile(v2, a2);
}

void OUTLINED_FUNCTION_4_75(uint64_t a1, int a2, uint64_t a3)
{
  vf_puts(a1, a2, a3, 1);
}

uint64_t OUTLINED_FUNCTION_5_71()
{
  uint64_t v0;
  uint64_t v1;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 216) + 8) + (v1 << 6) + 48);
}

uint64_t OUTLINED_FUNCTION_6_70@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t OUTLINED_FUNCTION_14_55()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_15_52(const char *a1)
{
  const char *v1;

  return strcmp(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_51()
{
  uint64_t v0;

  return v0;
}

void diskFileOpen(uint64_t a1, uint64_t a2, unsigned int a3)
{
  const char *v4;

  *(_QWORD *)a2 = a1;
  if (!*(_QWORD *)(a2 + 16))
  {
    if (a3 > 2)
      v4 = (const char *)&unk_2486A531A;
    else
      v4 = (&off_25198C230)[a3];
    *(_QWORD *)(a2 + 16) = fopen(*(const char **)(a2 + 8), v4);
  }
  OUTLINED_FUNCTION_1_86();
}

uint64_t diskFileRead(uint64_t a1, uint64_t *a2)
{
  FILE *v3;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char __s[64];
  uint64_t v11;

  v11 = *MEMORY[0x24BDAC8D0];
  v3 = *(FILE **)(a1 + 16);
  if (!v3 || feof(v3))
    return 0;
  while (!feof(*(FILE **)(a1 + 16)))
  {
    if (!fgets(__s, 64, *(FILE **)(a1 + 16)) && !feof(*(FILE **)(a1 + 16)))
      return 0;
    dynaBufAddString(a2, __s, 0);
    if (!v7)
      return 0;
    v8 = OUTLINED_FUNCTION_5_72();
    if (OUTLINED_FUNCTION_6_71() == 10)
    {
      v9 = OUTLINED_FUNCTION_5_72();
      if (OUTLINED_FUNCTION_6_71() == 32)
      {
        if (v8 != v9)
        {
          v5 = 1;
          OUTLINED_FUNCTION_2_83();
          return v5;
        }
      }
      else
      {
        if (v8 != v9)
          OUTLINED_FUNCTION_2_83();
        OUTLINED_FUNCTION_4_76(a2, 32);
        OUTLINED_FUNCTION_4_76(a2, 10);
      }
      return 1;
    }
    OUTLINED_FUNCTION_2_83();
  }
  return 1;
}

void diskFileWrite(uint64_t a1, char *a2, int a3)
{
  FILE *v4;

  if (a2)
  {
    v4 = *(FILE **)(a1 + 16);
    if (v4)
    {
      if (OUTLINED_FUNCTION_7_70(a2, v4) != -1 && a3)
        fflush(*(FILE **)(a1 + 16));
    }
  }
  OUTLINED_FUNCTION_1_86();
}

void diskFileEof(uint64_t *a1)
{
  FILE *v2;

  if (checkInterrupt(*a1))
  {
    setInterrupt(*a1, 0);
  }
  else
  {
    v2 = (FILE *)a1[2];
    if (v2)
      feof(v2);
  }
  OUTLINED_FUNCTION_1_86();
}

BOOL diskFileClose(uint64_t a1)
{
  FILE *v1;

  v1 = *(FILE **)(a1 + 16);
  return !v1 || fclose(v1) == 0;
}

void dynaBufFileOpen(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v3;
  unsigned int v4;

  *a2 = a1;
  v3 = a2[2];
  if (v3)
  {
    switch(a3)
    {
      case 2:
        v4 = -1;
        goto LABEL_7;
      case 1:
        dynaBufReset(v3);
        break;
      case 0:
        v4 = 0;
LABEL_7:
        dynaBufMoveAbs(v3, v4);
        break;
    }
  }
  OUTLINED_FUNCTION_1_86();
}

void dynaBufFileRead(uint64_t a1, uint64_t *a2)
{
  int v4;
  int v6;

  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      v4 = dynaBufCurrentChar(*(uint64_t **)(a1 + 16), 1);
      if (!v4 || v4 == 10)
        break;
      OUTLINED_FUNCTION_4_76(a2, v4);
      if (!v6)
        goto LABEL_7;
    }
    addSpace(a2);
    OUTLINED_FUNCTION_8_65(a2, 10, 0);
  }
  else
  {
LABEL_7:
    OUTLINED_FUNCTION_1_86();
  }
}

void addSpace(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = dynaBufMoveRel((uint64_t)a1, 0);
  v3 = OUTLINED_FUNCTION_5_72();
  if (OUTLINED_FUNCTION_6_71() == 32)
  {
    if (v2 != v3)
      dynaBufMoveRel((uint64_t)a1, 1u);
  }
  else
  {
    if (v2 != v3)
      OUTLINED_FUNCTION_2_83();
    dynaBufAddChar(a1, 32, 0);
  }
}

uint64_t *dynaBufFileWrite(uint64_t a1, char *a2)
{
  uint64_t *result;
  int v3;

  result = *(uint64_t **)(a1 + 16);
  if (result)
  {
    dynaBufAddString(result, a2, 0);
    return (uint64_t *)(v3 != 0);
  }
  return result;
}

BOOL dynaBufFileEof(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  return !v1 || dynaBufAtEnd(v1);
}

uint64_t stdTermFileOpen(uint64_t a1, _QWORD *a2)
{
  *a2 = a1;
  return OUTLINED_FUNCTION_0_95();
}

void stdTermFileRead(int a1, uint64_t *a2, char *a3)
{
  int v4;
  int v6;

  if (a3)
    fputs(a3, (FILE *)*MEMORY[0x24BDAC8E8]);
  while (1)
  {
    v4 = getchar();
    if (v4 == -1 || v4 == 10)
      break;
    OUTLINED_FUNCTION_4_76(a2, v4);
    if (!v6)
    {
      OUTLINED_FUNCTION_1_86();
      return;
    }
  }
  addSpace(a2);
  OUTLINED_FUNCTION_8_65(a2, 10, 0);
}

void stdTermFileWrite(uint64_t a1, char *a2, int a3)
{
  FILE **v4;

  if (a2)
  {
    v4 = (FILE **)MEMORY[0x24BDAC8E8];
    if (OUTLINED_FUNCTION_7_70(a2, (FILE *)*MEMORY[0x24BDAC8E8]) != -1)
    {
      if (a3)
        fflush(*v4);
    }
    OUTLINED_FUNCTION_1_86();
  }
  else
  {
    OUTLINED_FUNCTION_3_80();
  }
}

uint64_t stdErrorFileOpen(uint64_t a1, _QWORD *a2)
{
  *a2 = a1;
  return OUTLINED_FUNCTION_0_95();
}

void stdErrorFileWrite(uint64_t a1, char *a2, int a3)
{
  FILE **v4;

  if (a2)
  {
    v4 = (FILE **)MEMORY[0x24BDAC8D8];
    if (OUTLINED_FUNCTION_7_70(a2, (FILE *)*MEMORY[0x24BDAC8D8]) != -1)
    {
      if (a3)
        fflush(*v4);
    }
    OUTLINED_FUNCTION_1_86();
  }
  else
  {
    OUTLINED_FUNCTION_3_80();
  }
}

uint64_t nullFileOpen(uint64_t a1, _QWORD *a2)
{
  *a2 = a1;
  return OUTLINED_FUNCTION_0_95();
}

uint64_t nullFileRead(uint64_t a1, uint64_t *a2)
{
  OUTLINED_FUNCTION_4_76(a2, 10);
  return 1;
}

uint64_t OUTLINED_FUNCTION_0_95()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_2_83()
{
  uint64_t v0;

  return dynaBufMoveRel(v0, 1u);
}

uint64_t OUTLINED_FUNCTION_3_80()
{
  return 0;
}

void OUTLINED_FUNCTION_4_76(uint64_t *a1, char a2)
{
  dynaBufAddChar(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_5_72()
{
  uint64_t v0;

  return dynaBufMoveRel(v0, 0xFFFFFFFF);
}

uint64_t OUTLINED_FUNCTION_6_71()
{
  uint64_t *v0;

  return dynaBufCurrentChar(v0, 0);
}

uint64_t OUTLINED_FUNCTION_7_70@<X0>(char *a1@<X1>, FILE *a2@<X8>)
{
  return fputs(a1, a2);
}

void OUTLINED_FUNCTION_8_65(uint64_t *a1, char a2, int a3)
{
  dynaBufAddChar(a1, a2, a3);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x24BEDAA60](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x24BEDAA70](this);
}

void std::string::__init(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
  MEMORY[0x24BEDAC30](this, __n, __c);
}

void std::string::~string(std::string *this)
{
  MEMORY[0x24BEDACF8](this);
}

uint64_t std::filebuf::close()
{
  return MEMORY[0x24BEDADE0]();
}

uint64_t std::filebuf::basic_filebuf()
{
  return MEMORY[0x24BEDADF0]();
}

uint64_t std::filebuf::~filebuf()
{
  return MEMORY[0x24BEDADF8]();
}

uint64_t std::istream::getline()
{
  return MEMORY[0x24BEDAE58]();
}

uint64_t std::istream::~istream()
{
  return MEMORY[0x24BEDAE70]();
}

uint64_t std::ostream::put()
{
  return MEMORY[0x24BEDAEE0]();
}

uint64_t std::ostream::flush()
{
  return MEMORY[0x24BEDAEE8]();
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x24BEDAEF8]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x24BEDAF00]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x24BEDAF10]();
}

uint64_t std::ifstream::open()
{
  return MEMORY[0x24BEDB000]();
}

uint64_t std::ofstream::open()
{
  return MEMORY[0x24BEDB018]();
}

void std::locale::~locale(std::locale *this)
{
  MEMORY[0x24BEDB448](this);
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
  MEMORY[0x24BEDB500](this);
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
  MEMORY[0x24BEDB518](this, __sb);
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
  MEMORY[0x24BEDB530](this, *(_QWORD *)&__state);
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x24BEDB5E8]();
}

void std::terminate(void)
{
  MEMORY[0x24BEDB6C0]();
}

uint64_t operator delete[]()
{
  return off_25198B658();
}

uint64_t operator delete()
{
  return off_25198B660();
}

uint64_t operator new[]()
{
  return off_25198B668();
}

uint64_t operator new()
{
  return off_25198B670();
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x24BEDB910](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x24BEDB928]();
}

void __cxa_guard_abort(__guard *a1)
{
  MEMORY[0x24BEDB940](a1);
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x24BEDB948](a1);
}

void __cxa_guard_release(__guard *a1)
{
  MEMORY[0x24BEDB950](a1);
}

int *__error(void)
{
  return (int *)MEMORY[0x24BDAC7D0]();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return MEMORY[0x24BDAC838](*(_QWORD *)&a1, a2);
}

uint64_t __memset_chk()
{
  return MEMORY[0x24BDAC858]();
}

int __sprintf_chk(char *a1, int a2, size_t a3, const char *a4, ...)
{
  return MEMORY[0x24BDAC8B8](a1, *(_QWORD *)&a2, a3, a4);
}

uint64_t __strcat_chk()
{
  return MEMORY[0x24BDAC8F8]();
}

uint64_t __strcpy_chk()
{
  return MEMORY[0x24BDAC900]();
}

__darwin_ct_rune_t __tolower(__darwin_ct_rune_t a1)
{
  return MEMORY[0x24BDAC930](*(_QWORD *)&a1);
}

int __vsprintf_chk(char *a1, int a2, size_t a3, const char *a4, va_list a5)
{
  return MEMORY[0x24BDAC968](a1, *(_QWORD *)&a2, a3, a4, a5);
}

double atof(const char *a1)
{
  double result;

  MEMORY[0x24BDAD250](a1);
  return result;
}

int atoi(const char *a1)
{
  return MEMORY[0x24BDAD258](a1);
}

uint64_t atol(const char *a1)
{
  return MEMORY[0x24BDAD260](a1);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

int chmod(const char *a1, mode_t a2)
{
  return MEMORY[0x24BDAD990](a1, a2);
}

clock_t clock(void)
{
  return MEMORY[0x24BDAD9B0]();
}

float cosf(float a1)
{
  float result;

  MEMORY[0x24BDADBE8](a1);
  return result;
}

void exit(int a1)
{
  MEMORY[0x24BDAE268](*(_QWORD *)&a1);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x24BDAE270](__x);
  return result;
}

long double exp2(long double __x)
{
  long double result;

  MEMORY[0x24BDAE278](__x);
  return result;
}

float expf(float a1)
{
  float result;

  MEMORY[0x24BDAE288](a1);
  return result;
}

int fclose(FILE *a1)
{
  return MEMORY[0x24BDAE2E0](a1);
}

int feof(FILE *a1)
{
  return MEMORY[0x24BDAE328](a1);
}

int fflush(FILE *a1)
{
  return MEMORY[0x24BDAE350](a1);
}

int fgetc(FILE *a1)
{
  return MEMORY[0x24BDAE368](a1);
}

char *__cdecl fgets(char *a1, int a2, FILE *a3)
{
  return (char *)MEMORY[0x24BDAE380](a1, *(_QWORD *)&a2, a3);
}

int fileno(FILE *a1)
{
  return MEMORY[0x24BDAE390](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x24BDAE410](__filename, __mode);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAE428](a1, a2);
}

int fputc(int a1, FILE *a2)
{
  return MEMORY[0x24BDAE438](*(_QWORD *)&a1, a2);
}

int fputs(const char *a1, FILE *a2)
{
  return MEMORY[0x24BDAE440](a1, a2);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE448](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

int fstat(int a1, stat *a2)
{
  return MEMORY[0x24BDAE508](*(_QWORD *)&a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x24BDAE590](__ptr, __size, __nitems, __stream);
}

int getchar(void)
{
  return MEMORY[0x24BDAE5D0]();
}

char *__cdecl getcwd(char *a1, size_t a2)
{
  return (char *)MEMORY[0x24BDAE5D8](a1, a2);
}

char *__cdecl getenv(const char *a1)
{
  return (char *)MEMORY[0x24BDAE5F0](a1);
}

ldiv_t ldiv(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  ldiv_t result;

  v2 = MEMORY[0x24BDAEA40](a1, a2);
  result.rem = v3;
  result.quot = v2;
  return result;
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x24BDAEAA8](__x);
  return result;
}

void longjmp(jmp_buf a1, int a2)
{
  MEMORY[0x24BDAEB00](a1, *(_QWORD *)&a2);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED70](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED88](ptr, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x24BDAF688](__x, __y);
  return result;
}

int setjmp(jmp_buf a1)
{
  return MEMORY[0x24BDAFD30](a1);
}

float sinf(float a1)
{
  float result;

  MEMORY[0x24BDAFE20](a1);
  return result;
}

int sprintf(char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFE60](a1, a2);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x24BDAFEA0](a1, a2);
}

int stat(const char *a1, stat *a2)
{
  return MEMORY[0x24BDAFEA8](a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return (char *)MEMORY[0x24BDAFEE8](__s, *(_QWORD *)&__c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x24BDAFEF0](__s1, __s2);
}

char *__cdecl strcpy(char *__dst, const char *__src)
{
  return (char *)MEMORY[0x24BDAFF00](__dst, __src);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x24BDAFF70](__dst, __src, __n);
}

double strtod(const char *a1, char **a2)
{
  double result;

  MEMORY[0x24BDAFFD0](a1, a2);
  return result;
}

char *__cdecl strtok(char *__str, const char *__sep)
{
  return (char *)MEMORY[0x24BDAFFF0](__str, __sep);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return MEMORY[0x24BDB0000](__str, __endptr, *(_QWORD *)&__base);
}

int vfprintf(FILE *a1, const char *a2, va_list a3)
{
  return MEMORY[0x24BDB0370](a1, a2, a3);
}

